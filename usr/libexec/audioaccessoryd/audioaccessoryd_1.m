id sub_1001086D0()
{
  return sub_1001086FC(&OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___deferredUpdatesGroup);
}

id sub_1001086FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)CKOperationGroup) init];
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 setName:v6];

    v7 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    v3 = 0;
  }
  id v8 = v3;
  return v4;
}

uint64_t sub_1001087A8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available);
  return result;
}

uint64_t sub_1001087BC()
{
  if (qword_100261920 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(qword_10026ADB8 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10012A000;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_10012A428;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100106FFC;
  v8[3] = &unk_10023A880;
  id v5 = _Block_copy(v8);
  NSString v6 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v5);

  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    sub_100129F80(v0[2]);
    sub_1000D8DD0((uint64_t)(v0 + 3));

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000ED3EC((uint64_t)v0 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration);

    swift_bridgeObjectRelease();
    objc_release(*(id *)((char *)v0
                       + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudPushTriggeredGroup));

    objc_release(*(id *)((char *)v0
                       + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudInitialSetupGroup));
    objc_release(*(id *)((char *)v0
                       + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudUserActionExplicitGroup));
    objc_release(*(id *)((char *)v0
                       + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___deferredUpdatesGroup));
    objc_release(*(id *)((char *)v0
                       + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___multipleUpdatesGroup));
    swift_release();
    return (uint64_t)v0;
  }
  return result;
}

uint64_t sub_100108A7C()
{
  sub_1001087BC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100108AD4()
{
  return type metadata accessor for CloudCoordinator();
}

uint64_t type metadata accessor for CloudCoordinator()
{
  uint64_t result = qword_100262CE0;
  if (!qword_100262CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100108B28()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CloudCoordinatorConfiguration();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001CFDB0;
  sub_1000ED388(v0 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration, (uint64_t)v4);
  aBlock = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(67);
  v6._object = (void *)0x80000001001F9670;
  v6._countAndFlagsBits = 0xD000000000000034;
  String.append(_:)(v6);
  v7 = (uint64_t *)&v4[*(int *)(v2 + 24)];
  uint64_t v8 = *v7;
  v9 = (void *)v7[1];
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x4449656E6F7A202CLL;
  v11._object = (void *)0xEB00000000203A73;
  String.append(_:)(v11);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = Array.description.getter();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = aBlock;
  unint64_t v14 = v26;
  sub_1000ED3EC((uint64_t)v4);
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_1000AA5E0();
  *(void *)(v5 + 32) = v13;
  *(void *)(v5 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (qword_100261920 != -1) {
    swift_once();
  }
  v15 = *(void **)(qword_10026ADB8 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v1;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100129F50;
  *(void *)(v18 + 24) = v17;
  v29 = sub_10012A428;
  uint64_t v30 = v18;
  aBlock = _NSConcreteStackBlock;
  unint64_t v26 = 1107296256;
  v27 = sub_100106FFC;
  v28 = &unk_10023A7B8;
  v19 = _Block_copy(&aBlock);
  v20 = v15;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v20, v19);

  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100113F38();
  v22 = *(NSObject **)(v1 + 72);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_100129F68;
  *(void *)(v23 + 24) = v1;
  v29 = sub_10012A428;
  uint64_t v30 = v23;
  aBlock = _NSConcreteStackBlock;
  unint64_t v26 = 1107296256;
  v27 = sub_100106FFC;
  v28 = &unk_10023A808;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v22, v24);
  _Block_release(v24);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v22) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t sub_100108FD4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  v10[1] = *(void *)(v0 + 72);
  aBlock[4] = sub_100129EF8;
  aBlock[5] = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023A718;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  Swift::String v12 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v11);
  swift_release();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  OS_dispatch_semaphore.signal()();
  static os_log_type_t.default.getter();
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_100109348(uint64_t a1)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t result = os_log(_:dso:log:_:_:)();
  *(unsigned char *)(a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available) = 1;
  return result;
}

void sub_1001093E0(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v14 = *(void **)(v2 + 72);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  int v23 = a1;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
LABEL_5:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  *(void *)(v2 + 96) = 3;
  *(unsigned char *)(v2 + 104) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available) = 0;
  v32 = sub_100129EAC;
  v33 = (void *)v2;
  aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100106F90;
  v31 = &unk_10023A678;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v27 = &_swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v6, v4);
  (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v9, v25);
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(unsigned char *)(v18 + 24) = v23 & 1;
  swift_retain();
  id v19 = sub_100108418();
  v20 = (void *)swift_allocObject();
  v20[2] = v2;
  v20[3] = sub_10012A664;
  v20[4] = v18;
  v32 = sub_10012A65C;
  v33 = v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_100116DEC;
  v31 = &unk_10023A6F0;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v19 accountStatusWithCompletionHandler:v21];
  _Block_release(v21);
  swift_release();
}

uint64_t sub_1001098EC()
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  OS_dispatch_semaphore.wait()();
  static os_log_type_t.default.getter();

  return os_log(_:dso:log:_:_:)();
}

void sub_1001099C8(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(uint64_t))__chkstk_darwin)(v4);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)aBlock - v9;
  sub_100124744(v11, 0.0, 120.0);
  uint64_t v13 = v12;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001D0A20;
  *(void *)(v14 + 56) = &type metadata for Double;
  *(void *)(v14 + 64) = &protocol witness table for Double;
  *(double *)(v14 + 32) = a1;
  *(void *)(v14 + 96) = &type metadata for Double;
  *(void *)(v14 + 104) = &protocol witness table for Double;
  *(void *)(v14 + 72) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  Date.init()();
  Date.addingTimeInterval(_:)();
  id v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  id v17 = objc_allocWithZone((Class)BTXPCTimer);
  swift_retain();
  NSString v18 = String._bridgeToObjectiveC()();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  aBlock[4] = sub_100129E9C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010E750;
  aBlock[3] = &unk_10023A628;
  v20 = _Block_copy(aBlock);
  id v21 = [v17 initWithName:v18 date:isa gracePeriod:1 priority:705 options:v20 block:1.0];
  _Block_release(v20);

  v15(v10, v4);
  swift_release();
  swift_release();
  v22 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = v21;
}

uint64_t sub_100109CE8(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
  id v9 = a1;
  id v10 = [v9 description];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_1000AA5E0();
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    aBlock[4] = sub_100129EA4;
    aBlock[5] = result;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_10023A650;
    id v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    id v21 = &_swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v16 = v20;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v16);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v18);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10010A0A4(uint64_t a1)
{
  [*(id *)(a1 + 40) invalidate];
  uint64_t v2 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = 0;

  sub_1001093E0(1);
}

uint64_t sub_10010A0E8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (void *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = *(void **)(v2 + 72);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4, v6);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(unsigned char *)(v2 + 128))
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 == -1) {
      return os_log(_:dso:log:_:_:)();
    }
LABEL_15:
    swift_once();
    return os_log(_:dso:log:_:_:)();
  }
  uint64_t v12 = *(void *)(v2 + 48);
  if (!v12) {
    return sub_10010A5BC(a1 & 1, 0);
  }
  uint64_t v13 = *(void *)(v2 + 40);
  swift_retain();
  if (v13)
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    [*(id *)(v2 + 40) invalidate];
    uint64_t v14 = *(void **)(v2 + 40);
    *(void *)(v2 + 40) = 0;

    swift_getObjectType();
    OS_dispatch_source.cancel()();
    *(void *)(v2 + 48) = 0;
    swift_release();
    sub_10010A5BC(a1 & 1, 1);
  }
  uint64_t v26 = v12;
  int v27 = static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  v24[1] = qword_10026ADD8;
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v15 = swift_allocObject();
  long long v25 = xmmword_1001CFDB0;
  *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
  swift_beginAccess();
  sub_1000B66A0(0, (unint64_t *)&qword_100262960);
  swift_bridgeObjectRetain();
  sub_1000AA024(&qword_100263348);
  sub_100128E34(&qword_100263350, (unint64_t *)&qword_100262960);
  uint64_t v16 = Dictionary.Keys.description.getter();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v19 = sub_1000AA5E0();
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v25;
  swift_beginAccess();
  sub_1000B66A0(0, &qword_1002629E0);
  swift_bridgeObjectRetain();
  sub_1000AA024(&qword_100263358);
  sub_100128E34(&qword_100263360, &qword_1002629E0);
  uint64_t v21 = Dictionary.Keys.description.getter();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = v19;
  *(void *)(v20 + 32) = v21;
  *(void *)(v20 + 40) = v23;
  os_log(_:dso:log:_:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010A5BC(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  id v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 72);
  *id v10 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6, v8);
  id v12 = v11;
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
  if (v13)
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001CFDB0;
  *(void *)(v14 + 56) = &type metadata for Bool;
  *(void *)(v14 + 64) = &protocol witness table for Bool;
  char v15 = a1 & 1;
  *(unsigned char *)(v14 + 32) = a1 & 1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = v15;
  *(unsigned char *)(v17 + 25) = a2 & 1;
  type metadata accessor for LocalDispatchTimer();
  swift_allocObject();
  id v18 = v12;
  *(void *)(v3 + 48) = LocalDispatchTimer.init(deadline:repeating:leeway:queue:block:)(v12, (uint64_t)sub_100129D20, v17, 3.0, 0.0, 1.0);
  uint64_t result = swift_release();
  if (*(void *)(v3 + 48))
  {
    swift_getObjectType();
    swift_retain();
    OS_dispatch_source.resume()();
    return swift_release();
  }
  return result;
}

void sub_10010A864(uint64_t a1, char a2, char a3)
{
  LOBYTE(v3) = a3;
  LOBYTE(v4) = a2;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    goto LABEL_51;
  }
  while (1)
  {
    os_log(_:dso:log:_:_:)();
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong) {
      break;
    }
    uint64_t v6 = Strong;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    *(unsigned char *)(v6 + 128) = 1;
    char v64 = (char)v3;
    char v67 = v4;
    if (*(void *)(v6 + 48))
    {
      swift_getObjectType();
      swift_retain();
      OS_dispatch_source.cancel()();
      swift_release();
    }
    *(void *)(v6 + 48) = 0;
    swift_release();
    uint64_t v7 = *(void **)(v6 + 72);
    uint64_t v8 = swift_allocObject();
    swift_beginAccess();
    uint64_t v63 = v8;
    *(void *)(v8 + 16) = *(void *)(v6 + 120);
    id v61 = v7;
    swift_bridgeObjectRetain();
    *(void *)(v6 + 120) = sub_1000AFA24((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_allocObject();
    swift_beginAccess();
    uint64_t v62 = v9;
    *(void *)(v9 + 16) = *(void *)(v6 + 112);
    swift_bridgeObjectRetain();
    *(void *)(v6 + 112) = sub_1000AFA44((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = sub_100190DA4(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v66 = sub_100190DA4(v12);
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    sub_1000AA024((uint64_t *)&unk_100262110);
    unint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1001CFDB0;
    BOOL v13 = v11 < 0 || (v11 & 0x4000000000000000) != 0;
    if (v13)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_release();
    }
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v16 = v15;
    *(void *)(v4 + 56) = &type metadata for String;
    unint64_t v68 = sub_1000AA5E0();
    *(void *)(v4 + 64) = v68;
    *(void *)(v4 + 32) = v14;
    *(void *)(v4 + 40) = v16;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    if (IsAppleInternalBuild()) {
      static os_log_type_t.default.getter();
    }
    else {
      static os_log_type_t.debug.getter();
    }
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1001CFDB0;
    if (v13)
    {
      swift_retain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v17 = *(void *)(v11 + 16);
      swift_retain();
    }
    id v18 = _swiftEmptyArrayStorage;
    if (!v17)
    {
LABEL_36:
      swift_release();
      uint64_t v38 = Array.description.getter();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)(v65 + 56) = &type metadata for String;
      *(void *)(v65 + 64) = v68;
      *(void *)(v65 + 32) = v38;
      *(void *)(v65 + 40) = v40;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      static os_log_type_t.default.getter();
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1001CFDB0;
      if (v66 < 0 || (v66 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_release();
      }
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v41 + 56) = &type metadata for String;
      *(void *)(v41 + 64) = v68;
      *(void *)(v41 + 32) = v42;
      *(void *)(v41 + 40) = v43;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      if (IsAppleInternalBuild()) {
        static os_log_type_t.default.getter();
      }
      else {
        static os_log_type_t.debug.getter();
      }
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1001CFDB0;
      sub_1000B66A0(0, &qword_1002629E0);
      swift_bridgeObjectRetain();
      uint64_t v45 = Array.description.getter();
      uint64_t v47 = v46;
      swift_release();
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = v68;
      *(void *)(v44 + 32) = v45;
      *(void *)(v44 + 40) = v47;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002631C0);
      v76.value._rawValue = (void *)v11;
      v76.is_nil = v66;
      v48 = CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(v76, v77).super.super.super.super.isa;
      if (v67) {
        id v49 = sub_1001086AC();
      }
      else {
        id v49 = sub_1001086D0();
      }
      v50 = v49;
      [(objc_class *)v48 setGroup:v49];

      [(objc_class *)v48 setCallbackQueue:*(void *)(v6 + 80)];
      if (qos_class_self() >= QOS_CLASS_USER_INITIATED) {
        [(objc_class *)v48 setQualityOfService:25];
      }
      id v51 = [(objc_class *)v48 configuration];
      if (v51)
      {
        v52 = v51;
        [v51 setAutomaticallyRetryNetworkFailures:0];

        id v53 = [(objc_class *)v48 configuration];
        if (v53)
        {
          v54 = v53;
          [v53 setDiscretionaryNetworkBehavior:0];

          uint64_t v55 = swift_allocObject();
          *(void *)(v55 + 16) = v62;
          *(void *)(v55 + 24) = v6;
          swift_retain();
          swift_retain();
          CKModifyRecordsOperation.perRecordSaveBlock.setter();
          swift_retain();
          CKModifyRecordsOperation.perRecordDeleteBlock.setter();
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = v61;
          *(void *)(v56 + 24) = v6;
          *(void *)(v56 + 32) = v62;
          *(void *)(v56 + 40) = v63;
          *(unsigned char *)(v56 + 48) = v67 & 1;
          *(unsigned char *)(v56 + 49) = v64 & 1;
          id v57 = v61;
          swift_retain();
          swift_retain();
          swift_retain();
          CKModifyRecordsOperation.modifyRecordsResultBlock.setter();
          v58 = *(void **)(v6 + 64);
          swift_allocObject();
          uint64_t v59 = swift_weakInit();
          __chkstk_darwin(v59);
          id v60 = v58;
          sub_1000AA024((uint64_t *)&unk_100263160);
          OS_dispatch_queue.sync<A>(execute:)();
          swift_release();
          swift_release();
          swift_release();

          swift_release();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    uint64_t v19 = 0;
    uint64_t v71 = v11;
    unint64_t v72 = v11 & 0xC000000000000001;
    uint64_t v69 = v11 + 32;
    uint64_t v70 = v17;
    uint64_t v3 = &selRef_hijackAwayRemoteScore;
    uint64_t v20 = _swiftEmptyArrayStorage;
    while (1)
    {
      v74 = v20;
      id v21 = v72 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v69 + 8 * v19);
      uint64_t v22 = v21;
      BOOL v23 = __OFADD__(v19, 1);
      uint64_t v24 = v19 + 1;
      if (v23) {
        break;
      }
      uint64_t v73 = v24;
      id v25 = [[objc_msgSend(v21, "encryptedValues") allKeys];
      swift_unknownObjectRelease();
      uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v75 = (unint64_t)v18;
      int v27 = v18;
      uint64_t v28 = *(void *)(v26 + 16);
      if (v28)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = v26 + 40;
        do
        {
          swift_bridgeObjectRetain();
          id v30 = [v22 encryptedValues];
          NSString v31 = String._bridgeToObjectiveC()();
          id v32 = [v30 objectForKeyedSubscript:v31];
          swift_bridgeObjectRelease();

          swift_unknownObjectRelease();
          if (v32)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v29 += 16;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        uint64_t v17 = v70;
        uint64_t v11 = v71;
        id v18 = _swiftEmptyArrayStorage;
      }
      else
      {
        id v18 = v27;
      }
      swift_bridgeObjectRelease();
      sub_1000AA024(&qword_1002629D0);
      uint64_t v33 = Array.description.getter();
      uint64_t v35 = v34;

      swift_bridgeObjectRelease();
      uint64_t v20 = v74;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_1001B2DA0(0, v74[2] + 1, 1, v74);
      }
      unint64_t v4 = v20[2];
      unint64_t v36 = v20[3];
      if (v4 >= v36 >> 1) {
        uint64_t v20 = sub_1001B2DA0((void *)(v36 > 1), v4 + 1, 1, v20);
      }
      v20[2] = v4 + 1;
      v37 = &v20[2 * v4];
      v37[4] = v33;
      v37[5] = v35;
      uint64_t v19 = v73;
      if (v73 == v17) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_51:
    swift_once();
  }
}

void sub_10010B36C(void *a1, void *a2, char a3)
{
  swift_beginAccess();
  id v6 = a1;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1001261E8(v7, v6);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  if (v9)
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    *(void *)(v14 + 24) = v13;
    swift_retain();
    if ((a3 & 1) == 0)
    {
      sub_1001227E8(a2, 0);
      sub_10010CB58(a2, (uint64_t)sub_100126FB4, v14);
      uint64_t v15 = a2;
      char v16 = 0;
      goto LABEL_15;
    }
    uint64_t v40 = v11;
    sub_1001227E8(a2, 1);
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1001D2D20;
    id v24 = v6;
    id v25 = [v24 description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    *(void *)(v23 + 56) = &type metadata for String;
    unint64_t v29 = sub_1000AA5E0();
    *(void *)(v23 + 64) = v29;
    *(void *)(v23 + 32) = v26;
    *(void *)(v23 + 40) = v28;
    uint64_t v41 = a2;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v30 = String.init<A>(describing:)();
    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v29;
    *(void *)(v23 + 72) = v30;
    *(void *)(v23 + 80) = v31;
    id v32 = [v9 recordChangeTag];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      v37 = (uint64_t *)(v23 + 112);
      *(void *)(v23 + 136) = &type metadata for String;
      *(void *)(v23 + 144) = v29;
      if (v36)
      {
        uint64_t *v37 = v34;
        uint64_t v38 = v40;
LABEL_14:
        *(void *)(v23 + 120) = v36;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v41 = a2;
        char v42 = 1;
        sub_1001227E8(a2, 1);
        swift_retain();
        v38(&v41);
        sub_100129200(a2, 1);
        swift_release();
        uint64_t v15 = a2;
        char v16 = 1;
LABEL_15:
        sub_100129200(v15, v16);
        swift_beginAccess();
        uint64_t v39 = sub_100122944((uint64_t)v9, (uint64_t (*)(uint64_t))sub_1000B50F0, &qword_100263190);
        swift_endAccess();
        swift_release();
        swift_release();

        if (v39) {
          sub_1001228A0(v39);
        }
        return;
      }
    }
    else
    {
      v37 = (uint64_t *)(v23 + 112);
      *(void *)(v23 + 136) = &type metadata for String;
      *(void *)(v23 + 144) = v29;
    }
    uint64_t v38 = v40;
    uint64_t *v37 = 15932;
    unint64_t v36 = 0xE200000000000000;
    goto LABEL_14;
  }
  static os_log_type_t.error.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1001CFDB0;
  id v18 = v6;
  id v19 = [v18 description];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *(void *)(v17 + 56) = &type metadata for String;
  *(void *)(v17 + 64) = sub_1000AA5E0();
  *(void *)(v17 + 32) = v20;
  *(void *)(v17 + 40) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
}

void sub_10010B7B8(void *a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  id v6 = a1;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1001264A0(v7);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  if (v9)
  {
    if (a3)
    {
      swift_errorRetain();
      static os_log_type_t.error.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1001CFDB0;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v27 = v26;
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_1000AA5E0();
      *(void *)(v24 + 32) = v25;
      *(void *)(v24 + 40) = v27;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      v29[0] = a2;
      swift_errorRetain();
      v11(v29);
      sub_100129000(a2, 1);
      sub_100129000(a2, 1);
    }
    else
    {
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
      id v13 = v6;
      id v14 = [v13 description];
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;

      *(void *)(v12 + 56) = &type metadata for String;
      *(void *)(v12 + 64) = sub_1000AA5E0();
      *(void *)(v12 + 32) = v15;
      *(void *)(v12 + 40) = v17;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      v29[0] = 0;
      v11(v29);
    }
    swift_beginAccess();
    uint64_t v28 = sub_100122944((uint64_t)v9, (uint64_t (*)(uint64_t))sub_1000B5140, (uint64_t *)&unk_100261EC0);
    swift_endAccess();
    swift_release();

    if (v28) {
      sub_1001228A0(v28);
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1001CFDB0;
    id v19 = v6;
    id v20 = [v19 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_1000AA5E0();
    *(void *)(v18 + 32) = v21;
    *(void *)(v18 + 40) = v23;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10010BBC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  int v24 = a8;
  uint64_t v28 = a3;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v16 - 8);
  uint64_t v26 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = &v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = a1;
  a2 &= 1u;
  *(unsigned char *)(v20 + 32) = a2;
  *(void *)(v20 + 40) = a5;
  *(void *)(v20 + 48) = a6;
  *(unsigned char *)(v20 + 56) = a7;
  *(unsigned char *)(v20 + 57) = v24;
  aBlock[4] = sub_100129E38;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023A5D8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  sub_100129E50(a1, a2);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v29 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v15, v13);
  (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v18, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_10010BF00(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v110 = a6;
  int v111 = a7;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v109 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v108 = (char *)v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v112 = a1 + 16;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v107 = v12;
    uint64_t v113 = result;
    if ((a3 & 1) == 0)
    {
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
LABEL_55:
      *(unsigned char *)(v113 + 128) = 0;
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        goto LABEL_76;
      }
      goto LABEL_56;
    }
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v106[1] = Strong;
      uint64_t v16 = (uint64_t *)(a4 + 16);
      swift_errorRetain();
      static os_log_type_t.error.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      uint64_t v114 = a5 + 16;
      uint64_t v123 = sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1001CFDB0;
      uint64_t v132 = a2;
      *(void *)&long long v124 = a2;
      swift_errorRetain();
      uint64_t v122 = sub_1000AA024(&qword_100261D60);
      uint64_t v18 = String.init<A>(describing:)();
      uint64_t v20 = v19;
      *(void *)(v17 + 56) = &type metadata for String;
      unint64_t v121 = sub_1000AA5E0();
      *(void *)(v17 + 64) = v121;
      *(void *)(v17 + 32) = v18;
      *(void *)(v17 + 40) = v20;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v21 = *v16;
      uint64_t v22 = *(void *)(*v16 + 64);
      int64_t v115 = *v16 + 64;
      uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
      uint64_t v24 = -1;
      if (v23 < 64) {
        uint64_t v24 = ~(-1 << v23);
      }
      unint64_t v25 = v24 & v22;
      *(void *)&long long v116 = (unint64_t)(v23 + 63) >> 6;
      uint64_t v118 = v21;
      swift_bridgeObjectRetain();
      uint64_t v26 = 0;
      long long v117 = xmmword_1001D2D20;
      while (1)
      {
        if (v25)
        {
          uint64_t v119 = (v25 - 1) & v25;
          v120 = v26;
          unint64_t v29 = __clz(__rbit64(v25)) | ((void)v26 << 6);
        }
        else
        {
          uint64_t v30 = (uint64_t)v26 + 1;
          if (__OFADD__(v26, 1))
          {
            __break(1u);
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
          if (v30 >= (uint64_t)v116) {
            goto LABEL_34;
          }
          unint64_t v31 = *(void *)(v115 + 8 * v30);
          uint64_t v32 = (uint64_t)v26 + 1;
          if (!v31)
          {
            uint64_t v32 = (uint64_t)v26 + 2;
            if ((uint64_t)v26 + 2 >= (uint64_t)v116) {
              goto LABEL_34;
            }
            unint64_t v31 = *(void *)(v115 + 8 * v32);
            if (!v31)
            {
              uint64_t v32 = (uint64_t)v26 + 3;
              if ((uint64_t)v26 + 3 >= (uint64_t)v116) {
                goto LABEL_34;
              }
              unint64_t v31 = *(void *)(v115 + 8 * v32);
              if (!v31)
              {
                uint64_t v33 = (char *)v26 + 4;
                if ((uint64_t)v26 + 4 >= (uint64_t)v116)
                {
LABEL_34:
                  swift_release();
                  uint64_t v53 = v114;
                  swift_beginAccess();
                  uint64_t v54 = *(void *)v53;
                  uint64_t v55 = *(void *)(*(void *)v53 + 64);
                  uint64_t v114 = *(void *)v53 + 64;
                  uint64_t v56 = 1 << *(unsigned char *)(v54 + 32);
                  uint64_t v57 = -1;
                  if (v56 < 64) {
                    uint64_t v57 = ~(-1 << v56);
                  }
                  unint64_t v58 = v57 & v55;
                  int64_t v115 = (unint64_t)(v56 + 63) >> 6;
                  *(void *)&long long v117 = v54;
                  swift_bridgeObjectRetain();
                  uint64_t v59 = 0;
                  long long v116 = xmmword_1001D0A20;
                  unint64_t v60 = v121;
                  while (1)
                  {
                    if (v58)
                    {
                      uint64_t v118 = (v58 - 1) & v58;
                      uint64_t v119 = v59;
                      unint64_t v61 = __clz(__rbit64(v58)) | (v59 << 6);
                    }
                    else
                    {
                      int64_t v73 = v59 + 1;
                      if (__OFADD__(v59, 1)) {
                        goto LABEL_73;
                      }
                      uint64_t v74 = v124;
                      if (v73 >= v115)
                      {
LABEL_54:
                        swift_release();
                        sub_100129000(v74, 1);
                        swift_release();
                        goto LABEL_55;
                      }
                      unint64_t v75 = *(void *)(v114 + 8 * v73);
                      int64_t v76 = v59 + 1;
                      if (!v75)
                      {
                        int64_t v76 = v59 + 2;
                        if (v59 + 2 >= v115) {
                          goto LABEL_54;
                        }
                        unint64_t v75 = *(void *)(v114 + 8 * v76);
                        if (!v75)
                        {
                          int64_t v76 = v59 + 3;
                          if (v59 + 3 >= v115) {
                            goto LABEL_54;
                          }
                          unint64_t v75 = *(void *)(v114 + 8 * v76);
                          if (!v75)
                          {
                            uint64_t v77 = v59 + 4;
                            if (v59 + 4 >= v115) {
                              goto LABEL_54;
                            }
                            unint64_t v75 = *(void *)(v114 + 8 * v77);
                            if (!v75)
                            {
                              while (1)
                              {
                                int64_t v76 = v77 + 1;
                                if (__OFADD__(v77, 1)) {
                                  break;
                                }
                                if (v76 >= v115) {
                                  goto LABEL_54;
                                }
                                unint64_t v75 = *(void *)(v114 + 8 * v76);
                                ++v77;
                                if (v75) {
                                  goto LABEL_53;
                                }
                              }
LABEL_75:
                              __break(1u);
LABEL_76:
                              swift_once();
LABEL_56:
                              os_log(_:dso:log:_:_:)();
                              static os_log_type_t.default.getter();
                              sub_1000AA024((uint64_t *)&unk_100262110);
                              uint64_t v78 = swift_allocObject();
                              long long v124 = xmmword_1001CFDB0;
                              *(_OWORD *)(v78 + 16) = xmmword_1001CFDB0;
                              swift_beginAccess();
                              uint64_t v79 = swift_weakLoadStrong();
                              if (v79)
                              {
                                uint64_t v80 = v79;
                                swift_beginAccess();
                                uint64_t v81 = *(void *)(v80 + 112);
                                swift_bridgeObjectRetain();
                                swift_release();
                              }
                              else
                              {
                                uint64_t v81 = 0;
                              }
                              uint64_t v128 = v81;
                              sub_1000AA024(&qword_100263338);
                              uint64_t v82 = String.init<A>(describing:)();
                              uint64_t v84 = v83;
                              *(void *)(v78 + 56) = &type metadata for String;
                              unint64_t v85 = sub_1000AA5E0();
                              *(void *)(v78 + 64) = v85;
                              *(void *)(v78 + 32) = v82;
                              *(void *)(v78 + 40) = v84;
                              os_log(_:dso:log:_:_:)();
                              swift_bridgeObjectRelease();
                              static os_log_type_t.default.getter();
                              uint64_t v86 = swift_allocObject();
                              *(_OWORD *)(v86 + 16) = v124;
                              swift_beginAccess();
                              uint64_t v87 = swift_weakLoadStrong();
                              if (v87)
                              {
                                uint64_t v88 = v87;
                                swift_beginAccess();
                                uint64_t v89 = *(void *)(v88 + 120);
                                swift_bridgeObjectRetain();
                                swift_release();
                              }
                              else
                              {
                                uint64_t v89 = 0;
                              }
                              uint64_t v127 = v89;
                              sub_1000AA024(&qword_100263340);
                              uint64_t v90 = String.init<A>(describing:)();
                              *(void *)(v86 + 56) = &type metadata for String;
                              *(void *)(v86 + 64) = v85;
                              *(void *)(v86 + 32) = v90;
                              *(void *)(v86 + 40) = v91;
                              os_log(_:dso:log:_:_:)();
                              swift_bridgeObjectRelease();
                              uint64_t v92 = v113;
                              swift_beginAccess();
                              if (*(void *)(*(void *)(v92 + 112) + 16)
                                || (swift_beginAccess(), uint64_t v93 = v113, *(void *)(*(void *)(v113 + 120) + 16)))
                              {
                                sub_10010A0E8(v110 & 1);
                                uint64_t v93 = v113;
                              }
                              if (v111)
                              {
                                sub_100119F58(45.0);
                                static os_log_type_t.default.getter();
                                uint64_t v94 = swift_allocObject();
                                *(_OWORD *)(v94 + 16) = v124;
                                v95 = *(void **)(v93 + 40);
                                if (v95)
                                {
                                  id v96 = [v95 date];
                                  v97 = v108;
                                  static Date._unconditionallyBridgeFromObjectiveC(_:)();

                                  v98 = self;
                                  Class isa = Date._bridgeToObjectiveC()().super.isa;
                                  id v100 = [v98 localizedStringFromDate:isa dateStyle:2 timeStyle:2];

                                  uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                                  uint64_t v103 = v102;

                                  (*(void (**)(char *, uint64_t))(v109 + 8))(v97, v107);
                                }
                                else
                                {
                                  uint64_t v101 = 0;
                                  uint64_t v103 = 0;
                                }
                                uint64_t v125 = v101;
                                uint64_t v126 = v103;
                                sub_1000AA024(&qword_1002632D0);
                                uint64_t v104 = String.init<A>(describing:)();
                                *(void *)(v94 + 56) = &type metadata for String;
                                *(void *)(v94 + 64) = v85;
                                *(void *)(v94 + 32) = v104;
                                *(void *)(v94 + 40) = v105;
                                os_log(_:dso:log:_:_:)();
                                swift_bridgeObjectRelease();
                              }
                              return swift_release();
                            }
                            int64_t v76 = v59 + 4;
                          }
                        }
                      }
LABEL_53:
                      uint64_t v118 = (v75 - 1) & v75;
                      uint64_t v119 = v76;
                      unint64_t v61 = __clz(__rbit64(v75)) + (v76 << 6);
                    }
                    uint64_t v62 = *(void **)(*(void *)(v117 + 48) + 8 * v61);
                    v120 = *(void (**)(uint64_t *))(*(void *)(v117 + 56) + 16 * v61);
                    id v63 = v62;
                    swift_retain();
                    static os_log_type_t.error.getter();
                    uint64_t v64 = swift_allocObject();
                    *(_OWORD *)(v64 + 16) = v116;
                    id v65 = v63;
                    id v66 = [v65 description];
                    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v69 = v68;

                    *(void *)(v64 + 56) = &type metadata for String;
                    *(void *)(v64 + 64) = v60;
                    *(void *)(v64 + 32) = v67;
                    *(void *)(v64 + 40) = v69;
                    uint64_t v70 = v124;
                    v129[0] = v124;
                    sub_100129E50(v124, 1);
                    uint64_t v71 = String.init<A>(describing:)();
                    *(void *)(v64 + 96) = &type metadata for String;
                    *(void *)(v64 + 104) = v60;
                    *(void *)(v64 + 72) = v71;
                    *(void *)(v64 + 80) = v72;
                    os_log(_:dso:log:_:_:)();
                    swift_bridgeObjectRelease();
                    v129[0] = v70;
                    sub_100129E50(v70, 1);
                    v120(v129);
                    sub_100129000(v70, 1);

                    swift_release();
                    unint64_t v58 = v118;
                    uint64_t v59 = v119;
                  }
                }
                unint64_t v31 = *(void *)(v115 + 8 * (void)v33);
                if (!v31)
                {
                  while (1)
                  {
                    uint64_t v32 = (uint64_t)(v33 + 1);
                    if (__OFADD__(v33, 1)) {
                      break;
                    }
                    if (v32 >= (uint64_t)v116) {
                      goto LABEL_34;
                    }
                    unint64_t v31 = *(void *)(v115 + 8 * v32);
                    ++v33;
                    if (v31) {
                      goto LABEL_30;
                    }
                  }
LABEL_74:
                  __break(1u);
                  goto LABEL_75;
                }
                uint64_t v32 = (uint64_t)v26 + 4;
              }
            }
          }
LABEL_30:
          uint64_t v119 = (v31 - 1) & v31;
          v120 = (void (*)(uint64_t *))v32;
          unint64_t v29 = __clz(__rbit64(v31)) + (v32 << 6);
        }
        uint64_t v34 = *(void **)(*(void *)(v118 + 48) + 8 * v29);
        unint64_t v35 = *(void (**)(uint64_t *))(*(void *)(v118 + 56) + 16 * v29);
        uint64_t v36 = v124;
        uint64_t v130 = v124;
        char v131 = 1;
        sub_100129E50(v124, 1);
        id v37 = v34;
        swift_retain();
        v35(&v130);
        swift_release();
        sub_100129000(v36, 1);
        static os_log_type_t.error.getter();
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = v117;
        id v39 = [v37 recordID];
        id v40 = [v39 description];
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        unint64_t v44 = v121;
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = v44;
        *(void *)(v38 + 32) = v41;
        *(void *)(v38 + 40) = v43;
        uint64_t v130 = v36;
        uint64_t v45 = v36;
        unint64_t v46 = v44;
        sub_100129E50(v45, 1);
        uint64_t v47 = String.init<A>(describing:)();
        *(void *)(v38 + 96) = &type metadata for String;
        *(void *)(v38 + 104) = v46;
        *(void *)(v38 + 72) = v47;
        *(void *)(v38 + 80) = v48;
        id v49 = [v37 recordChangeTag];
        if (!v49) {
          break;
        }
        v50 = v49;
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v52;

        uint64_t v27 = (uint64_t *)(v38 + 112);
        *(void *)(v38 + 136) = &type metadata for String;
        *(void *)(v38 + 144) = v46;
        if (!v28) {
          goto LABEL_13;
        }
        uint64_t *v27 = v51;
LABEL_14:
        *(void *)(v38 + 120) = v28;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        unint64_t v25 = v119;
        uint64_t v26 = v120;
      }
      uint64_t v27 = (uint64_t *)(v38 + 112);
      *(void *)(v38 + 136) = &type metadata for String;
      *(void *)(v38 + 144) = v46;
LABEL_13:
      uint64_t *v27 = 15932;
      unint64_t v28 = 0xE200000000000000;
      goto LABEL_14;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10010CB58(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v38 = a2;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v42 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for DispatchQoS();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  id v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35[1] = static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001D0A20;
  id v7 = [a1 recordID];
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000AA5E0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  id v13 = [a1 recordChangeTag];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    uint64_t v18 = (uint64_t *)(v6 + 72);
    *(void *)(v6 + 96) = &type metadata for String;
    *(void *)(v6 + 104) = v12;
    if (v17)
    {
      *uint64_t v18 = v15;
      uint64_t v19 = v36;
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v6 + 72);
    *(void *)(v6 + 96) = &type metadata for String;
    *(void *)(v6 + 104) = v12;
  }
  uint64_t v19 = v36;
  *uint64_t v18 = 15932;
  unint64_t v17 = 0xE200000000000000;
LABEL_8:
  *(void *)(v6 + 80) = v17;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (IsAppleInternalBuild()) {
    static os_log_type_t.default.getter();
  }
  else {
    static os_log_type_t.debug.getter();
  }
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001CFDB0;
  id v21 = [objc_msgSend(a1, "encryptedValues") allKeys];
  swift_unknownObjectRelease();
  uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = a1;
  sub_1001251DC(v22, v23);
  swift_bridgeObjectRelease();

  sub_1000AA024(&qword_1002629D0);
  uint64_t v24 = Array.description.getter();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = v12;
  *(void *)(v20 + 32) = v24;
  *(void *)(v20 + 40) = v26;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v39;
  unint64_t v28 = (void *)swift_allocObject();
  v28[2] = v23;
  v28[3] = v27;
  uint64_t v29 = v40;
  v28[4] = v38;
  v28[5] = v29;
  aBlock[4] = sub_100129C08;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023A448;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v23;
  swift_retain();
  swift_retain();
  uint64_t v32 = v37;
  static DispatchQoS.unspecified.getter();
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  uint64_t v33 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v19);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v43);
  return swift_release();
}

void sub_10010D0E4(void *a1, uint64_t a2, void (*a3)(void *, void), uint64_t a4)
{
  id v7 = [a1 encryptedValues];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 objectForKeyedSubscript:v8];
  swift_unknownObjectRelease();

  if (v9)
  {
    sub_1000AA024(&qword_1002629D0);
    int v10 = swift_dynamicCast();
    if (v10) {
      uint64_t v11 = v68;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      uint64_t v12 = v69;
    }
    else {
      uint64_t v12 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = CKRecord.recordType.getter();
  uint64_t v15 = v14;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_100125818(v16, v11, v12, v13, v15);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (v18)
  {
    uint64_t v64 = a4;
    id v63 = (uint64_t *)(a2 + 112);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v20;
    *(void *)(v23 + 24) = v22;
    id v24 = v18;
    uint64_t v62 = v23;
    swift_retain();
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
    id v26 = v24;
    id v27 = [v26 description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v31 = sub_1000AA5E0();
    *(void *)(v25 + 64) = v31;
    *(void *)(v25 + 32) = v28;
    *(void *)(v25 + 40) = v30;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v66 = a1;
    if (IsAppleInternalBuild()) {
      static os_log_type_t.default.getter();
    }
    else {
      static os_log_type_t.debug.getter();
    }
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1001D0A20;
    id v33 = [v26 recordID];
    id v34 = [v33 description];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = v31;
    *(void *)(v32 + 32) = v35;
    *(void *)(v32 + 40) = v37;
    uint64_t v38 = &selRef__setOtherTipiDeviceBuildVersion_andMinorBuildVersion_;
    id v39 = [[objc_msgSend(v26, "encryptedValues") allKeys];
    swift_unknownObjectRelease();
    uint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v41 = v26;
    sub_1001251DC(v40, v41);
    swift_bridgeObjectRelease();

    sub_1000AA024(&qword_1002629D0);
    uint64_t v42 = Array.description.getter();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    *(void *)(v32 + 96) = &type metadata for String;
    *(void *)(v32 + 104) = v31;
    uint64_t v45 = v41;
    *(void *)(v32 + 72) = v42;
    *(void *)(v32 + 80) = v44;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v46 = [[objc_msgSend(v41, "encryptedValues") allKeys];
    swift_unknownObjectRelease();
    uint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v48 = *(void *)(v47 + 16);
    id v49 = v66;
    if (v48)
    {
      uint64_t v50 = v47 + 40;
      do
      {
        swift_bridgeObjectRetain();
        id v51 = [v49 v38[399]];
        id v52 = [v45 v38[399]];
        NSString v53 = String._bridgeToObjectiveC()();
        uint64_t v54 = v45;
        id v55 = [v52 objectForKeyedSubscript:v53];

        uint64_t v38 = &selRef__setOtherTipiDeviceBuildVersion_andMinorBuildVersion_;
        swift_unknownObjectRelease();
        NSString v56 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v51 setObject:v55 forKeyedSubscript:v56];
        uint64_t v45 = v54;
        swift_unknownObjectRelease();
        id v49 = v66;
        swift_unknownObjectRelease();

        v50 += 16;
        --v48;
      }
      while (v48);
    }
    swift_bridgeObjectRelease();
    uint64_t v57 = (void *)swift_allocObject();
    v57[2] = sub_100126FB4;
    v57[3] = v62;
    v57[4] = a3;
    v57[5] = v64;
    swift_beginAccess();
    swift_retain();
    swift_retain();
    uint64_t v58 = sub_100122944((uint64_t)v45, (uint64_t (*)(uint64_t))sub_1000B50F0, &qword_100263190);
    swift_endAccess();
    if (v58) {
      sub_1001228A0(v58);
    }
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = sub_100129C54;
    *(void *)(v59 + 24) = v57;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v67 = *v63;
    *id v63 = 0x8000000000000000;
    uint64_t v61 = sub_1001247F0((uint64_t)sub_100126FB0, v59, v66, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_1000B50F0, &qword_100263190, (unint64_t *)&qword_100262960);
    *id v63 = v67;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release_n();

    if (v61) {
      sub_1001228A0(v61);
    }
  }
  else
  {
    a3(a1, 0);
  }
}

uint64_t sub_10010D808(void *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v22[0] = a4;
  char v10 = a2 & 1;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v15 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)(v6 + 72);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(void *)(v18 + 24) = a1;
  *(unsigned char *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 33) = v10;
  *(void *)(v18 + 40) = v22[0];
  *(void *)(v18 + 48) = a5;
  aBlock[4] = sub_100129A30;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023A290;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  id v20 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v24 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
  return swift_release();
}

void sub_10010DAF8(uint64_t a1, void *a2, char a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v62 = a6;
  uint64_t v60 = a5;
  int v58 = a4;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v57 - v14;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = _swiftEmptyArrayStorage;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = _swiftEmptyArrayStorage;
  uint64_t v16 = a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v17 = type metadata accessor for CloudCoordinatorConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16 + *(int *)(v17 + 28), v9);
  sub_100100E0C((uint64_t)v12, (uint64_t)[a2 scope]);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  uint64_t v19 = (void *)sub_100101720();
  v18(v15, v9);
  id v20 = objc_allocWithZone((Class)CKFetchDatabaseChangesOperation);
  id v65 = v19;
  id v21 = [v20 initWithPreviousServerChangeToken:v19];
  [v21 setCallbackQueue:*(void *)(a1 + 80)];
  id v22 = v21;
  if (a3) {
    id v23 = sub_100108668();
  }
  else {
    id v23 = sub_10010863C();
  }
  id v24 = v23;
  uint64_t v61 = a1;
  [v22 setGroup:v23];

  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10026ADD8;
  uint64_t v59 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001D0A20;
  id v27 = a2;
  aBlock = (void **)[a2 scope];
  type metadata accessor for Scope(0);
  uint64_t v28 = String.init<A>(describing:)();
  uint64_t v30 = v29;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v31 = sub_1000AA5E0();
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 32) = v28;
  *(void *)(v26 + 40) = v30;
  if (v65)
  {
    v57[1] = v25;
    id v32 = [v65 data];
    uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    uint64_t v36 = Data.hexString.getter(v33, v35);
    unint64_t v38 = v37;
    sub_1000AA8F0(v33, v35);
    id v39 = (uint64_t *)(v26 + 72);
    *(void *)(v26 + 96) = &type metadata for String;
    *(void *)(v26 + 104) = v31;
    if (v38)
    {
      *id v39 = v36;
      uint64_t v40 = v27;
      goto LABEL_12;
    }
    uint64_t v40 = v27;
  }
  else
  {
    id v39 = (uint64_t *)(v26 + 72);
    *(void *)(v26 + 96) = &type metadata for String;
    *(void *)(v26 + 104) = v31;
    uint64_t v40 = v27;
  }
  *id v39 = 7104878;
  unint64_t v38 = 0xE300000000000000;
LABEL_12:
  *(void *)(v26 + 80) = v38;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  [v22 setFetchAllChanges:1];
  id v41 = [v22 configuration];
  if (v41)
  {
    uint64_t v42 = v41;
    [v41 setAutomaticallyRetryNetworkFailures:0];

    id v43 = [v22 configuration];
    if (v43)
    {
      uint64_t v44 = v43;
      char v45 = v58 & 1;
      [v43 setDiscretionaryNetworkBehavior:0];

      uint64_t v46 = v64;
      uint64_t v70 = sub_100129A44;
      uint64_t v71 = v64;
      aBlock = _NSConcreteStackBlock;
      uint64_t v67 = 1107296256;
      uint64_t v68 = sub_10010E53C;
      uint64_t v69 = &unk_10023A2E0;
      uint64_t v47 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v22 setRecordZoneWithIDChangedBlock:v47];
      _Block_release(v47);
      uint64_t v48 = v63;
      uint64_t v70 = sub_100129A4C;
      uint64_t v71 = v63;
      aBlock = _NSConcreteStackBlock;
      uint64_t v67 = 1107296256;
      uint64_t v68 = sub_10010E53C;
      uint64_t v69 = &unk_10023A308;
      id v49 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v22 setRecordZoneWithIDWasDeletedBlock:v49];
      _Block_release(v49);
      uint64_t v50 = swift_allocObject();
      *(unsigned char *)(v50 + 16) = v45;
      uint64_t v70 = sub_100129A64;
      uint64_t v71 = v50;
      aBlock = _NSConcreteStackBlock;
      uint64_t v67 = 1107296256;
      uint64_t v68 = sub_10010E53C;
      uint64_t v69 = &unk_10023A358;
      id v51 = _Block_copy(&aBlock);
      swift_release();
      [v22 setChangeTokenUpdatedBlock:v51];
      _Block_release(v51);
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      uint64_t v52 = swift_allocObject();
      uint64_t v53 = v60;
      *(void *)(v52 + 16) = v61;
      *(void *)(v52 + 24) = v53;
      *(void *)(v52 + 32) = v62;
      *(unsigned char *)(v52 + 40) = v45;
      *(void *)(v52 + 48) = v48;
      *(void *)(v52 + 56) = v46;
      *(void *)(v52 + 64) = v40;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      id v54 = v40;
      CKFetchDatabaseChangesOperation.fetchDatabaseChangesResultBlock.setter();
      static os_log_type_t.default.getter();
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1001CFDB0;
      *(void *)(v55 + 56) = sub_1000B66A0(0, &qword_100263320);
      *(void *)(v55 + 64) = sub_100128E34(&qword_100263328, &qword_100263320);
      *(void *)(v55 + 32) = v22;
      id v56 = v22;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      [v54 addOperation:v56];
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10010E294(void *a1, uint64_t a2)
{
  id v4 = [a1 zoneName];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (v5 == 0xD000000000000016 && v7 == 0x80000001001FC4C0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    return os_log(_:dso:log:_:_:)();
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_5;
  }
  swift_beginAccess();
  id v10 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
  id v12 = v10;
  id v13 = [v12 description];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_1000AA5E0();
  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10010E540(void *a1, uint64_t a2)
{
  swift_beginAccess();
  id v4 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10010E5DC(void *a1)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001D0A20;
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = &type metadata for String;
  unint64_t v6 = sub_1000AA5E0();
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  id v7 = [a1 data];
  uint64_t v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

  uint64_t v11 = Data.hexString.getter(v8, v10);
  uint64_t v13 = v12;
  sub_1000AA8F0(v8, v10);
  *(void *)(v2 + 96) = &type metadata for String;
  *(void *)(v2 + 104) = v6;
  *(void *)(v2 + 72) = v11;
  *(void *)(v2 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  return swift_bridgeObjectRelease();
}

void sub_10010E750(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10010E7B8(void *a1, unint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t), uint64_t a5, char a6, void *a7, void (**a8)(uint64_t, uint64_t), uint64_t a9)
{
  uint64_t v125 = a5;
  uint64_t v144 = a3;
  uint64_t v146 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  v134 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v145 = (char *)&v119 - v18;
  *(void *)&long long v138 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v151 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (NSString *)((char *)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = (void (**)(char *, uint64_t, uint64_t))type metadata accessor for DispatchQoS();
  __chkstk_darwin(v136);
  v135 = (char *)&v119 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) != 0)
  {
    uint64_t v68 = a2;
    swift_errorRetain();
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_1001CFDB0;
    aBlock[0] = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v70 = String.init<A>(describing:)();
    uint64_t v72 = v71;
    *(void *)(v69 + 56) = &type metadata for String;
    *(void *)(v69 + 64) = sub_1000AA5E0();
    *(void *)(v69 + 32) = v70;
    *(void *)(v69 + 40) = v72;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100115204((uint64_t)a1, 1);
    swift_errorRetain();
    a4(a1, 1);
    sub_100129B00(a1, v68, 1);
    int64_t v73 = a1;
    uint64_t v74 = v68;
    char v75 = 1;
    goto LABEL_77;
  }
  v148 = a8;
  v147 = (void (**)(char *, void (**)(char *, uint64_t, uint64_t)))v20;
  v150 = a7;
  uint64_t v122 = v15;
  uint64_t v123 = a4;
  LODWORD(isa) = a6 & 1;
  long long v124 = a1;
  id v23 = a1;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    goto LABEL_72;
  }
  while (1)
  {
    uint64_t v149 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = (void *)v24;
    *(_OWORD *)(v24 + 16) = xmmword_1001D2D20;
    if (a2) {
      uint64_t v26 = 1702195828;
    }
    else {
      uint64_t v26 = 0x65736C6166;
    }
    if (a2) {
      unint64_t v27 = 0xE400000000000000;
    }
    else {
      unint64_t v27 = 0xE500000000000000;
    }
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v28 = sub_1000AA5E0();
    v25[8] = v28;
    v25[4] = v26;
    v25[5] = v27;
    int v121 = (int)isa;
    LOBYTE(aBlock[0]) = (_BYTE)isa;
    uint64_t v29 = String.init<A>(describing:)();
    v25[12] = &type metadata for String;
    v25[13] = v28;
    v25[9] = v29;
    v25[10] = v30;
    id v143 = v23;
    id v31 = [v23 data];
    uint64_t v32 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v33;

    uint64_t v35 = Data.hexString.getter(v32, v34);
    uint64_t v37 = v36;
    sub_1000AA8F0(v32, v34);
    v25[17] = &type metadata for String;
    v25[18] = v28;
    unint64_t v127 = v28;
    v25[14] = v35;
    v25[15] = v37;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v38 = v144 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
    uint64_t v128 = type metadata accessor for CloudCoordinatorConfiguration();
    uint64_t v39 = *(int *)(v128 + 32);
    uint64_t v129 = v38;
    if (!*(void *)(*(void *)(v38 + v39) + 16))
    {
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      id v76 = [objc_allocWithZone((Class)NSError) init];
      v123(v76, 1);

      int64_t v73 = v124;
      uint64_t v74 = a2;
      goto LABEL_76;
    }
    uint64_t v40 = v148;
    id v41 = v150 + 2;
    swift_beginAccess();
    uint64_t v42 = *v41;
    if ((unint64_t)*v41 >> 62)
    {
      swift_bridgeObjectRetain();
      Class isa = (void *)_CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      Class isa = *(void **)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    id v23 = v143;
    unsigned int v120 = a2;
    id v43 = (uint64_t *)(v40 + 2);
    uint64_t v44 = v144;
    v139 = (uint64_t *)(v40 + 2);
    if (isa)
    {
      a2 = 0;
      int v45 = 0;
      uint64_t v141 = v144 + 24;
      unint64_t v142 = v42 & 0xC000000000000001;
      uint64_t v126 = v42 & 0xFFFFFFFFFFFFFF8;
      uint64_t v132 = v154;
      char v131 = (void (**)(NSString *, uint64_t))(v151 + 8);
      uint64_t v130 = v147 + 1;
      uint64_t v46 = &_mh_execute_header;
      long long v140 = xmmword_1001CFDB0;
      id v23 = &unk_10026A000;
      v133 = isa;
      while (1)
      {
        if (v142)
        {
          id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (a2 >= *(void *)(v126 + 16)) {
            goto LABEL_71;
          }
          id v47 = *(id *)(v42 + 8 * a2 + 32);
        }
        uint64_t v48 = v47;
        if (__OFADD__(a2, 1)) {
          break;
        }
        v150 = (void *)(a2 + 1);
        LODWORD(v151) = v45;
        static os_log_type_t.default.getter();
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v140;
        *(void *)(v49 + 56) = sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
        *(void *)(v49 + 64) = sub_100128E34(&qword_100263330, (unint64_t *)&unk_100261E70);
        *(void *)(v49 + 32) = v48;
        uint64_t v50 = v48;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v52 = Strong;
          uint64_t v53 = *(void **)(Strong + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
          uint64_t v54 = swift_allocObject();
          *(void *)(v54 + 16) = v50;
          *(void *)(v54 + 24) = v52;
          v154[2] = sub_10012A42C;
          v154[3] = v54;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          v154[0] = sub_100106F90;
          v154[1] = &unk_10023A3D0;
          v147 = (void (**)(char *, void (**)(char *, uint64_t, uint64_t)))_Block_copy(aBlock);
          uint64_t v55 = v50;
          id v56 = v53;
          swift_unknownObjectRetain();
          uint64_t v57 = v135;
          static DispatchQoS.unspecified.getter();
          v152 = _swiftEmptyArrayStorage;
          sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          v148 = v50;
          sub_1000AA024(&qword_100263550);
          sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
          int v58 = v46;
          unint64_t v59 = a2;
          uint64_t v60 = v137;
          uint64_t v61 = v42;
          uint64_t v62 = v138;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v63 = v147;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v63);

          uint64_t v64 = v60;
          a2 = v59;
          uint64_t v46 = v58;
          uint64_t v65 = v62;
          uint64_t v42 = v61;
          uint64_t v50 = v148;
          (*v131)(v64, v65);
          id v66 = v57;
          Class isa = v133;
          (*v130)(v66, v136);
          swift_unknownObjectRelease();
          swift_release();
        }
        if (v151)
        {

          id v23 = &unk_10026A000;
          if (v150 == isa)
          {
LABEL_25:
            swift_bridgeObjectRelease();
            v135 = 0;
            id v23 = v143;
            uint64_t v67 = v139;
            goto LABEL_32;
          }
        }
        else
        {
          static os_log_type_t.default.getter();
          id v23 = &unk_10026A000;
          os_log(_:dso:log:_:_:)();
          sub_1001123A0();

          if (v150 == isa) {
            goto LABEL_25;
          }
        }
        ++a2;
        int v45 = 1;
      }
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_retain();
    unint64_t v77 = swift_bridgeObjectRetain();
    a2 = 0;
    char v78 = sub_1001255E8(v77, v44);
    v135 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v67 = v43;
    if ((v78 & 1) == 0)
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      sub_1001123A0();
    }
LABEL_32:
    *(void *)&long long v140 = a9;
    uint64_t v79 = *(void *)(v129 + *(int *)(v128 + 32));
    v147 = *(void (***)(char *, void (**)(char *, uint64_t, uint64_t)))(v79 + 16);
    if (!v147) {
      break;
    }
    unint64_t v142 = v79 + 32;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v80 = 0;
    v137 = CKCurrentUserDefaultName;
    v136 = (void (**)(char *, uint64_t, uint64_t))(v122 + 16);
    v148 = (void (**)(uint64_t, uint64_t))(v122 + 8);
    long long v138 = xmmword_1001CFDB0;
    uint64_t v141 = v79;
    while (v80 < *(void *)(v79 + 16))
    {
      v150 = (void *)v80;
      uint64_t v93 = (uint64_t *)(v142 + 16 * v80);
      uint64_t v95 = *v93;
      uint64_t v94 = (void *)v93[1];
      uint64_t v96 = *v67;
      if ((unint64_t)*v67 >> 62)
      {
        if (v96 < 0) {
          a2 = *v67;
        }
        else {
          a2 = v96 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        id v23 = (id)_CocoaArrayWrapper.endIndex.getter();
        if (v23)
        {
LABEL_41:
          unint64_t v151 = v96 & 0xC000000000000001;
          uint64_t v97 = 4;
          while (1)
          {
            id v98 = v151 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v96 + 8 * v97);
            v99 = v98;
            id v100 = (id)(v97 - 3);
            if (__OFADD__(v97 - 4, 1)) {
              break;
            }
            Class isa = v94;
            uint64_t v101 = v95;
            id v102 = [v98 zoneName];
            a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v104 = v103;

            uint64_t v95 = v101;
            uint64_t v94 = isa;
            if (a2 == v95 && v104 == isa)
            {
              swift_bridgeObjectRelease_n();

LABEL_58:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v23 = v143;
              uint64_t v67 = v139;
              goto LABEL_37;
            }
            a2 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            if (a2)
            {
              swift_bridgeObjectRelease();
              goto LABEL_58;
            }
            ++v97;
            if (v100 == v23) {
              goto LABEL_34;
            }
          }
          __break(1u);
          goto LABEL_69;
        }
      }
      else
      {
        id v23 = *(id *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (v23) {
          goto LABEL_41;
        }
      }
LABEL_34:
      swift_bridgeObjectRelease_n();
      sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
      uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v82 = v95;
      uint64_t v84 = v83;
      swift_bridgeObjectRetain();
      v85._countAndFlagsBits = v82;
      v85._object = v94;
      v86._countAndFlagsBits = v81;
      v86._object = v84;
      Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v85, v86).super.isa;
      uint64_t v87 = (uint64_t)v134;
      uint64_t v88 = v146;
      (*v136)(v134, v129 + *(int *)(v128 + 28), v146);
      sub_1001014A0(v87, (uint64_t)[(id)v140 scope], isa);
      uint64_t v89 = *v148;
      (*v148)(v87, v88);
      uint64_t v90 = (void *)sub_100101720();

      if (v90)
      {
        static os_log_type_t.default.getter();
        a2 = qword_10026ADD8;
        uint64_t v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = v138;
        unint64_t v92 = v127;
        *(void *)(v91 + 56) = &type metadata for String;
        *(void *)(v91 + 64) = v92;
        *(void *)(v91 + 32) = v82;
        *(void *)(v91 + 40) = v94;
        os_log(_:dso:log:_:_:)();

        swift_bridgeObjectRelease();
        id v23 = v143;
        uint64_t v67 = v139;
      }
      else
      {
        sub_1001123A0();
        static os_log_type_t.default.getter();
        a2 = qword_10026ADD8;
        uint64_t v106 = swift_allocObject();
        *(_OWORD *)(v106 + 16) = v138;
        unint64_t v107 = v127;
        *(void *)(v106 + 56) = &type metadata for String;
        *(void *)(v106 + 64) = v107;
        *(void *)(v106 + 32) = v82;
        *(void *)(v106 + 40) = v94;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v67 = v139;
        swift_beginAccess();
        v108 = isa;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        id v23 = v143;
      }
      v89((uint64_t)v145, v146);
LABEL_37:
      uint64_t v79 = v141;
      unint64_t v80 = (unint64_t)v150 + 1;
      if ((void *)((char *)v150 + 1) == v147)
      {
        swift_bridgeObjectRelease();
        goto LABEL_65;
      }
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    swift_once();
  }
LABEL_65:
  swift_beginAccess();
  if ((unint64_t)*v67 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v116) {
      goto LABEL_67;
    }
  }
  else if (*(void *)((*v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_67:
    swift_beginAccess();
    uint64_t v109 = *v67;
    int v110 = (void *)swift_allocObject();
    int v111 = (void *)v140;
    v110[2] = v144;
    v110[3] = v111;
    uint64_t v112 = v123;
    v110[4] = v23;
    v110[5] = v112;
    v110[6] = v125;
    uint64_t v113 = v124;
    uint64_t v114 = v120;
    sub_100129BB4(v124, v120, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    id v115 = v111;
    swift_retain();
    sub_10010FC08(v115, v121, v109, (uint64_t)sub_100129BA0, (uint64_t)v110);
    sub_100129B00(v113, v114, 0);
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  long long v117 = v124;
  uint64_t v118 = v120;
  sub_100129BB4(v124, v120, 0);
  sub_10011A37C((void *)v140, v117);
  sub_100129B00(v117, v118, 0);
  v123(0, 0);
  int64_t v73 = v117;
  uint64_t v74 = v118;
LABEL_76:
  char v75 = 0;
LABEL_77:
  sub_100129B00(v73, v74, v75);
}

uint64_t sub_10010FA24(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v8 = a2 & 1;
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v14 = v13;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1000AA5E0();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100129000(a1, 1);
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_10011A37C(a4, a5);
  }
  return a6(a1, v8);
}

uint64_t sub_10010FC08(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a5;
  uint64_t v27 = a4;
  uint64_t v25 = a1;
  int v26 = a2 & 1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B66A0(0, (unint64_t *)&qword_100263210);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.default(_:), v12);
  uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = v18;
  uint64_t v20 = v29;
  *(void *)(v17 + 32) = v19;
  *(void *)(v17 + 40) = v20;
  uint64_t v21 = v25;
  *(void *)(v17 + 48) = v25;
  *(unsigned char *)(v17 + 56) = v26;
  aBlock[4] = sub_1001297A0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023A150;
  id v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  id v23 = v21;
  static DispatchQoS.unspecified.getter();
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  return swift_release();
}

id sub_10010FFEC(unint64_t a1, uint64_t (*a2)(void, void), uint64_t a3, uint64_t a4, void *a5, int a6)
{
  LODWORD(v6) = a6;
  id v89 = a5;
  uint64_t v78 = a4;
  uint64_t v77 = a3;
  id v76 = a2;
  uint64_t v81 = type metadata accessor for URL();
  uint64_t v8 = *(char **)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v88 = &v74[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v95 = &v74[-v11];
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t v90 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v12 = swift_allocObject();
  long long v79 = xmmword_1001CFDB0;
  *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
  uint64_t v13 = sub_1000AA024(&qword_1002632D8);
  *(void *)(v12 + 56) = v13;
  uint64_t v14 = (void *)sub_1000B5E24(&qword_1002632E0, &qword_1002632D8);
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 32) = a1;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  aBlock[0] = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = (uint64_t)result;
    if (result) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v25 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_19;
  }
LABEL_5:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v92 = (uint64_t)v14;
  uint64_t v93 = v13;
  uint64_t v94 = v8;
  LODWORD(v96) = v6;
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v19 = v18;
    id v20 = [v18 zoneName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    if (v21 == 0xD000000000000016 && v23 == 0x80000001001FC4C0)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v24)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = aBlock[0];
  LOBYTE(v6) = (_BYTE)v96;
  uint64_t v13 = v93;
  uint64_t v8 = v94;
  uint64_t v14 = (void *)v92;
LABEL_20:
  static os_log_type_t.default.getter();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v79;
  *(void *)(v26 + 56) = v13;
  *(void *)(v26 + 64) = v14;
  *(void *)(v26 + 32) = v25;
  swift_retain();
  os_log(_:dso:log:_:_:)();
  id result = (id)swift_bridgeObjectRelease();
  if (((unint64_t)v25 & 0x8000000000000000) != 0 || ((unint64_t)v25 & 0x4000000000000000) != 0)
  {
LABEL_50:
    swift_retain();
    uint64_t isa = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_release();
  }
  else
  {
    uint64_t isa = (uint64_t)v25[2].isa;
  }
  uint64_t v28 = v81;
  if (!isa)
  {
LABEL_47:
    static os_log_type_t.default.getter();
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v79;
    *(void *)(v73 + 56) = v13;
    *(void *)(v73 + 64) = v14;
    *(void *)(v73 + 32) = v25;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return (id)v76(0, 0);
  }
  if (isa < 1)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  int v75 = v6 & 1;
  uint64_t v87 = v78 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  Swift::String v85 = (void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  unint64_t v86 = (unint64_t)v25 & 0xC000000000000001;
  uint64_t v6 = v8 + 8;
  swift_retain();
  uint64_t v8 = 0;
  uint64_t v13 = (uint64_t)_swiftEmptyDictionarySingleton;
  long long v84 = xmmword_1001D0A20;
  unint64_t v80 = v25;
  uint64_t v83 = isa;
  uint64_t v82 = v6;
  do
  {
    if (v86) {
      uint64_t v32 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v32 = v25[(void)v8 + 4].isa;
    }
    uint64_t v14 = v32;
    id v33 = [objc_allocWithZone((Class)CKFetchRecordZoneChangesConfiguration) init];
    uint64_t v34 = type metadata accessor for CloudCoordinatorConfiguration();
    uint64_t v35 = (uint64_t)v88;
    (*v85)(v88, v87 + *(int *)(v34 + 28), v28);
    sub_1001014A0(v35, (uint64_t)[v89 scope], v14);
    uint64_t v36 = (char *)*v6;
    ((void (*)(uint64_t, uint64_t))*v6)(v35, v28);
    id v96 = (id)sub_100101720();
    uint64_t v37 = (void *)sub_100101720();
    [v33 setPreviousServerChangeToken:v37];

    uint64_t v94 = v36;
    if ((v13 & 0xC000000000000001) != 0)
    {
      if (v13 < 0) {
        uint64_t v38 = v13;
      }
      else {
        uint64_t v38 = v13 & 0xFFFFFFFFFFFFFF8;
      }
      uint64_t v39 = v14;
      id v40 = v33;
      uint64_t v41 = __CocoaDictionary.count.getter();
      if (__OFADD__(v41, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      uint64_t v13 = sub_100122AFC(v38, v41 + 1);
    }
    else
    {
      uint64_t v42 = v14;
      id v43 = v33;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v13;
    sub_1000B58EC((uint64_t)v33, v14, isUniquelyReferenced_nonNull_native);
    uint64_t v93 = aBlock[0];

    swift_bridgeObjectRelease();
    int v91 = static os_log_type_t.default.getter();
    uint64_t v92 = qword_10026ADD8;
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v84;
    id v46 = [v14 zoneName];
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    *(void *)(v45 + 56) = &type metadata for String;
    unint64_t v50 = sub_1000AA5E0();
    *(void *)(v45 + 64) = v50;
    *(void *)(v45 + 32) = v47;
    *(void *)(v45 + 40) = v49;
    if (!v96)
    {
      id v96 = 0;
      uint64_t v29 = (uint64_t *)(v45 + 72);
      *(void *)(v45 + 96) = &type metadata for String;
      *(void *)(v45 + 104) = v50;
LABEL_27:
      uint64_t v13 = v93;
      uint64_t v6 = v82;
      *uint64_t v29 = 7104878;
      unint64_t v30 = 0xE300000000000000;
      uint64_t v31 = (char *)v83;
      goto LABEL_28;
    }
    id v51 = [v96 data];
    uint64_t v52 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v54 = v53;

    uint64_t v55 = Data.hexString.getter(v52, v54);
    unint64_t v30 = v56;
    sub_1000AA8F0(v52, v54);
    uint64_t v29 = (uint64_t *)(v45 + 72);
    *(void *)(v45 + 96) = &type metadata for String;
    *(void *)(v45 + 104) = v50;
    if (!v30)
    {
      uint64_t v28 = v81;
      uint64_t v25 = v80;
      goto LABEL_27;
    }
    *uint64_t v29 = v55;
    uint64_t v28 = v81;
    uint64_t v25 = v80;
    uint64_t v13 = v93;
    uint64_t v31 = (char *)v83;
    uint64_t v6 = v82;
LABEL_28:
    ++v8;
    *(void *)(v45 + 80) = v30;
    os_log(_:dso:log:_:_:)();

    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, uint64_t))v94)(v95, v28);
  }
  while (v31 != v8);
  swift_release();
  static os_log_type_t.default.getter();
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v79;
  *(void *)(v57 + 56) = sub_1000AA024(&qword_1002632E8);
  *(void *)(v57 + 64) = sub_1000B5E24(&qword_1002632F0, &qword_1002632E8);
  *(void *)(v57 + 32) = v13;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = _swiftEmptyArrayStorage;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = _swiftEmptyArrayStorage;
  sub_1000B66A0(0, &qword_1002632F8);
  swift_retain();
  swift_bridgeObjectRetain();
  v98.value._rawValue = v25;
  v98.is_nil = v13;
  v60.super.super.super.super.uint64_t isa = CKFetchRecordZoneChangesOperation.init(recordZoneIDs:configurationsByRecordZoneID:)(v98, v99).super.super.super.super.isa;
  [(objc_class *)v60.super.super.super.super.isa setCallbackQueue:*(void *)(v78 + 80)];
  id result = [(objc_class *)v60.super.super.super.super.isa configuration];
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v61 = result;
  [result setAutomaticallyRetryNetworkFailures:0];

  id result = [(objc_class *)v60.super.super.super.super.isa configuration];
  if (result)
  {
    uint64_t v62 = result;
    swift_bridgeObjectRelease();
    [v62 setDiscretionaryNetworkBehavior:0];

    [(objc_class *)v60.super.super.super.super.isa setFetchAllChanges:1];
    swift_retain();
    CKFetchRecordZoneChangesOperation.recordWasChangedBlock.setter();
    swift_retain();
    CKFetchRecordZoneChangesOperation.recordWithIDWasDeletedBlock.setter();
    uint64_t v63 = swift_allocObject();
    char v64 = v75;
    *(unsigned char *)(v63 + 16) = v75;
    uint64_t v65 = v78;
    *(void *)(v63 + 24) = v78;
    *(void *)(v63 + 32) = v59;
    id v66 = v89;
    *(void *)(v63 + 40) = v58;
    *(void *)(v63 + 48) = v66;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v67 = (objc_class *)v66;
    CKFetchRecordZoneChangesOperation.recordZoneFetchResultBlock.setter();
    uint64_t v68 = swift_allocObject();
    *(unsigned char *)(v68 + 16) = v64;
    *(void *)(v68 + 24) = v80;
    *(void *)(v68 + 32) = v65;
    uint64_t v69 = v77;
    *(void *)(v68 + 40) = v76;
    *(void *)(v68 + 48) = v69;
    swift_retain();
    swift_retain();
    CKFetchRecordZoneChangesOperation.fetchRecordZoneChangesResultBlock.setter();
    uint64_t v25 = *(NSObject **)(v65 + 64);
    uint64_t v70 = (CKFetchRecordZoneChangesOperation *)swift_allocObject();
    v70[2].super.super.super.super.uint64_t isa = v60.super.super.super.super.isa;
    v70[3].super.super.super.super.uint64_t isa = v67;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = sub_100129974;
    v14[3] = v70;
    aBlock[4] = sub_10012A428;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106FFC;
    aBlock[3] = &unk_10023A240;
    uint64_t v13 = (uint64_t)_Block_copy(aBlock);
    uint64_t v71 = v67;
    Class v72 = v60.super.super.super.super.isa;
    swift_retain();
    swift_release();
    dispatch_sync(v25, (dispatch_block_t)v13);

    _Block_release((const void *)v13);
    LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    id result = (id)swift_release();
    if ((v72 & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_47;
  }
LABEL_54:
  __break(1u);
  return result;
}

void sub_100110C54(void *a1, void *a2, char a3, uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
  id v7 = a1;
  id v8 = [v7 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000AA5E0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  char v13 = a3;
  if (a3)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001D0A20;
    id v15 = v7;
    id v16 = [v15 description];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = v12;
    *(void *)(v14 + 32) = v17;
    *(void *)(v14 + 40) = v19;
    id v20 = a2;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v14 + 96) = &type metadata for String;
    *(void *)(v14 + 104) = v12;
    *(void *)(v14 + 72) = v21;
    *(void *)(v14 + 80) = v22;
  }
  else
  {
    swift_beginAccess();
    id v23 = a2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    if (IsAppleInternalBuild()) {
      int v24 = static os_log_type_t.default.getter();
    }
    else {
      int v24 = static os_log_type_t.debug.getter();
    }
    LODWORD(a4) = v24;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1001D0A20;
    id v26 = [v7 recordName:a4];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = v12;
    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 40) = v29;
    id v30 = [objc_msgSend(v23, "encryptedValues") allKeys];
    swift_unknownObjectRelease();
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v20 = a2;
    sub_1001227E8(a2, 0);
    sub_1001251DC(v31, v23);
    sub_100129200(a2, 0);
    swift_bridgeObjectRelease();
    sub_1000AA024(&qword_1002629D0);
    uint64_t v32 = Array.description.getter();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    *(void *)(v25 + 96) = &type metadata for String;
    *(void *)(v25 + 104) = v12;
    *(void *)(v25 + 72) = v32;
    *(void *)(v25 + 80) = v34;
  }
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100129200(v20, v13 & 1);
}

uint64_t sub_10011104C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = (void **)(a4 + 16);
  static os_log_type_t.debug.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
  *(void *)(v8 + 56) = sub_1000B66A0(0, &qword_1002629E0);
  *(void *)(v8 + 64) = sub_100128E34(&qword_100263308, &qword_1002629E0);
  *(void *)(v8 + 32) = a1;
  id v9 = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *v7;
  id v11 = v9;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v7 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_1001B2F4C(0, v10[2] + 1, 1, v10);
    void *v7 = v10;
  }
  unint64_t v14 = v10[2];
  unint64_t v13 = v10[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v10 = sub_1001B2F4C((void *)(v13 > 1), v14 + 1, 1, v10);
    void *v7 = v10;
  }
  void v10[2] = v14 + 1;
  id v15 = &v10[3 * v14];
  v15[4] = v11;
  v15[5] = a2;
  v15[6] = a3;
  return swift_endAccess();
}

void sub_100111240(void *a1, void *a2, uint64_t a3, unint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001D0A20;
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_1000AA5E0();
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  id v16 = [a1 zoneName];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 72) = v17;
  *(void *)(v11 + 80) = v19;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if ((a5 & 0x100) != 0)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1001D0A20;
    uint64_t v55 = String.init<A>(describing:)();
    *(void *)(v54 + 56) = &type metadata for String;
    *(void *)(v54 + 64) = v15;
    *(void *)(v54 + 32) = v55;
    *(void *)(v54 + 40) = v56;
    swift_getErrorValue();
    uint64_t v57 = Error.localizedDescription.getter();
    *(void *)(v54 + 96) = &type metadata for String;
    *(void *)(v54 + 104) = v15;
    *(void *)(v54 + 72) = v57;
    *(void *)(v54 + 80) = v58;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100115204((uint64_t)a2, 1);
    sub_100129994(a2, a3, a4, a5, 1);
  }
  else
  {
    id v20 = (uint64_t *)(a8 + 16);
    uint64_t v21 = (uint64_t *)(a9 + 16);
    id v22 = a2;
    static os_log_type_t.default.getter();
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1001D2D30;
    uint64_t v24 = String.init<A>(describing:)();
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = v15;
    *(void *)(v23 + 32) = v24;
    *(void *)(v23 + 40) = v25;
    uint64_t v63 = a1;
    id v26 = a1;
    uint64_t v27 = v22;
    id v28 = [v26 zoneName];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v15;
    *(void *)(v23 + 72) = v29;
    *(void *)(v23 + 80) = v31;
    id v32 = [v27 data];
    uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    uint64_t v36 = Data.hexString.getter(v33, v35);
    uint64_t v38 = v37;
    sub_1000AA8F0(v33, v35);
    *(void *)(v23 + 136) = &type metadata for String;
    *(void *)(v23 + 144) = v15;
    *(void *)(v23 + 112) = v36;
    *(void *)(v23 + 120) = v38;
    swift_beginAccess();
    if (*(void *)(a8 + 16) >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v39 = *(void *)((*(void *)(a8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v23 + 176) = &type metadata for Int;
    *(void *)(v23 + 184) = &protocol witness table for Int;
    *(void *)(v23 + 152) = v39;
    swift_beginAccess();
    uint64_t v40 = *(void *)(*v21 + 16);
    *(void *)(v23 + 216) = &type metadata for Int;
    *(void *)(v23 + 224) = &protocol witness table for Int;
    *(void *)(v23 + 192) = v40;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = swift_beginAccess();
    __chkstk_darwin(v41);
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_1001273EC(v42, (void (*)(id, uint64_t (*)(uint64_t), _OWORD *))sub_10012998C);
    swift_bridgeObjectRelease();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v44 = Strong;
      swift_beginAccess();
      uint64_t v45 = *v21;
      swift_beginAccess();
      uint64_t v46 = *v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100124968(a7, v45, v46, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    swift_beginAccess();
    uint64_t *v20 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t *v21 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v47 = a7 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
    uint64_t v48 = *(void **)(v47 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32));
    swift_bridgeObjectRetain();
    id v49 = [v63 zoneName];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    LOBYTE(v49) = sub_10015E618(v50, v52, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v49)
    {
      id v53 = v27;
      sub_10011A684(a10, v63, a2);
    }
    else
    {
    }
  }
}

void sub_1001118BC(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_beginAccess();
  id v6 = a1;
  unint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_100127064(v7, v6);
  swift_bridgeObjectRelease();

  if (v8)
  {
    swift_beginAccess();
    id v9 = v6;
    uint64_t v10 = sub_100127F6C(a4, v9);

    if ((unint64_t)*a4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11 >= v10)
      {
LABEL_4:
        sub_1001ADF58(v10, v11);
        swift_endAccess();
        static os_log_type_t.default.getter();
        if (qword_100261938 == -1)
        {
LABEL_5:
          sub_1000AA024((uint64_t *)&unk_100262110);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_1001D0A20;
          uint64_t v13 = CKRecord.recordType.getter();
          uint64_t v15 = v14;
          *(void *)(v12 + 56) = &type metadata for String;
          unint64_t v16 = sub_1000AA5E0();
          *(void *)(v12 + 64) = v16;
          *(void *)(v12 + 32) = v13;
          *(void *)(v12 + 40) = v15;
          id v17 = v8;
          id v18 = [v17 description];
          uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v21 = v20;

          *(void *)(v12 + 96) = &type metadata for String;
          *(void *)(v12 + 104) = v16;
          *(void *)(v12 + 72) = v19;
          *(void *)(v12 + 80) = v21;
          os_log(_:dso:log:_:_:)();

          swift_bridgeObjectRelease();
          return;
        }
LABEL_9:
        swift_once();
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= v10) {
        goto LABEL_4;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
}

uint64_t sub_100111AE8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001D0A20;
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000AA5E0();
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = sub_1000AA024(&qword_1002632D8);
  *(void *)(v8 + 104) = sub_1000B5E24(&qword_1002632E0, &qword_1002632D8);
  *(void *)(v8 + 72) = a4;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.default.getter();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1001D0A20;
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = v12;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v19;
    swift_getErrorValue();
    uint64_t v20 = Error.localizedDescription.getter();
    *(void *)(v17 + 96) = &type metadata for String;
    *(void *)(v17 + 104) = v12;
    *(void *)(v17 + 72) = v20;
    *(void *)(v17 + 80) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100115204(a1, 1);
    swift_errorRetain();
    a6(a1, 1);
    sub_100129000(a1, 1);
    return sub_100129000(a1, 1);
  }
  else
  {
    static os_log_type_t.default.getter();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
    uint64_t v14 = String.init<A>(describing:)();
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = v12;
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v15;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void, void))a6)(0, 0);
  }
}

id sub_100111DF8(void *a1, void *a2)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CFDB0;
  *(void *)(v4 + 56) = sub_1000B66A0(0, &qword_1002632F8);
  *(void *)(v4 + 64) = sub_100128E34(&qword_100263300, &qword_1002632F8);
  *(void *)(v4 + 32) = a1;
  id v5 = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  return [a2 addOperation:v5];
}

void sub_100111F48(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v4 + 40))
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1001D0A20;
    unint64_t v14 = sub_1000AA5E0();
    unint64_t v15 = v14;
    uint64_t v16 = 0x206563726F46;
    if ((a2 & 1) == 0) {
      uint64_t v16 = 0;
    }
    unint64_t v17 = 0xE000000000000000;
    if (a2) {
      unint64_t v17 = 0xE600000000000000;
    }
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = v14;
    *(void *)(v13 + 32) = v16;
    *(void *)(v13 + 40) = v17;
    uint64_t v18 = *(void **)(v4 + 40);
    if (v18)
    {
      id v19 = [v18 date];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v20 = self;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v22 = [v20 localizedStringFromDate:isa dateStyle:2 timeStyle:2];

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v32 = v23;
    uint64_t v33 = v25;
    sub_1000AA024(&qword_1002632D0);
    uint64_t v28 = String.init<A>(describing:)();
    *(void *)(v13 + 96) = &type metadata for String;
    *(void *)(v13 + 104) = v15;
    *(void *)(v13 + 72) = v28;
    *(void *)(v13 + 80) = v29;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return;
  }
  switch(a1)
  {
    case 1:
      static os_log_type_t.default.getter();
      if (qword_100261938 == -1) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 3:
      static os_log_type_t.default.getter();
      if (qword_100261938 == -1) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      id v26 = sub_100108418();
      id v31 = [v26 privateCloudDatabase];

      sub_10010D808(v31, 0, a2 & 1, a3, a4);
      uint64_t v27 = v31;

      return;
  }
  static os_log_type_t.error.getter();
  if (qword_100261938 != -1) {
LABEL_26:
  }
    swift_once();
LABEL_23:

  os_log(_:dso:log:_:_:)();
}

void sub_1001123A0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void (***)(char *, uint64_t))(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  id v43 = *(void (***)(char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(v7);
  dispatch_group_t v11 = (dispatch_group_t)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(objc_class **)(v0 + 72);
  v11->Class isa = v12;
  (*(void (**)(dispatch_group_t, void, uint64_t, __n128))(v8 + 104))(v11, enum case for DispatchPredicate.notOnQueue(_:), v7, v9);
  uint64_t v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(dispatch_group_t, uint64_t))(v8 + 8))(v11, v7);
  if (v14)
  {
    id v49 = v13;
    uint64_t v50 = v6;
    uint64_t v51 = v4;
    uint64_t v52 = v3;
    uint64_t v48 = v1;
    dispatch_group_t v11 = dispatch_group_create();
    LODWORD(v54) = static os_log_type_t.default.getter();
    if (qword_100261938 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  dispatch_group_t v53 = (dispatch_group_t)qword_10026ADD8;
  uint64_t v46 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v15 = swift_allocObject();
  long long v47 = xmmword_1001CFDB0;
  *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
  uint64_t v16 = v0 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v17 = type metadata accessor for CloudCoordinatorConfiguration();
  swift_bridgeObjectRetain();
  uint64_t v18 = Array.description.getter();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v21 = sub_1000AA5E0();
  *(void *)(v15 + 64) = v21;
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v20;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(*(void *)(v16 + *(int *)(v17 + 32)) + 16);
  if (v22)
  {
    uint64_t v45 = v57;
    ++v44;
    ++v43;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v42 = v0;
    dispatch_group_t v53 = v11;
    uint64_t v39 = v23;
    uint64_t v24 = (uint64_t *)(v23 + 40);
    long long v41 = xmmword_1001D0A20;
    unint64_t v40 = v21;
    do
    {
      uint64_t v54 = v22;
      uint64_t v25 = *(v24 - 1);
      uint64_t v26 = *v24;
      swift_bridgeObjectRetain();
      dispatch_group_t v27 = v53;
      dispatch_group_enter(v53);
      static os_log_type_t.default.getter();
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v47;
      unint64_t v29 = v40;
      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = v29;
      *(void *)(v28 + 32) = v25;
      *(void *)(v28 + 40) = v26;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v30 = (void *)swift_allocObject();
      v30[2] = v25;
      v30[3] = v26;
      v30[4] = v27;
      swift_bridgeObjectRetain();
      id v31 = v27;
      static os_log_type_t.default.getter();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v41;
      *(void *)(v32 + 56) = &type metadata for Int;
      *(void *)(v32 + 64) = &protocol witness table for Int;
      *(void *)(v32 + 32) = 0;
      *(void *)(v32 + 96) = &type metadata for String;
      *(void *)(v32 + 104) = v29;
      *(void *)(v32 + 72) = v25;
      *(void *)(v32 + 80) = v26;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = v25;
      v33[3] = v26;
      v33[4] = v42;
      v33[5] = sub_100129704;
      v33[6] = v30;
      v33[7] = 0;
      void v57[2] = sub_100129570;
      v57[3] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v57[0] = sub_100106F90;
      v57[1] = &unk_10023A100;
      unint64_t v34 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      unint64_t v35 = v50;
      static DispatchQoS.unspecified.getter();
      uint64_t v55 = _swiftEmptyArrayStorage;
      sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AA024(&qword_100263550);
      sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
      uint64_t v36 = v52;
      uint64_t v37 = v48;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v34);
      (*v44)(v36, v37);
      (*v43)(v35, v51);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v38 = v54;
      swift_release();
      v24 += 2;
      uint64_t v22 = v38 - 1;
    }
    while (v22);
    swift_bridgeObjectRelease();
    dispatch_group_t v11 = v53;
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  OS_dispatch_group.wait()();
}

void sub_100112AE4(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_1000AA5E0();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1000AA5E0();
    *(void *)(v11 + 32) = a2;
    *(void *)(v11 + 40) = a3;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a4);
}

uint64_t sub_100112CE0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v12 - 8);
  uint64_t v24 = v12;
  __chkstk_darwin(v12);
  char v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001D0A20;
  *(void *)(v15 + 56) = &type metadata for Int;
  *(void *)(v15 + 64) = &protocol witness table for Int;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 96) = &type metadata for String;
  *(void *)(v15 + 104) = sub_1000AA5E0();
  *(void *)(v15 + 72) = a1;
  *(void *)(v15 + 80) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (a3 > 2)
  {
    sub_100126CE4();
    swift_allocError();
    void *v21 = 3;
    v26();
    return swift_errorRelease();
  }
  else
  {
    v22[1] = *(void *)(v5 + 72);
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a1;
    v16[3] = a2;
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    v16[4] = v5;
    v16[5] = v17;
    v16[6] = v18;
    v16[7] = a3;
    aBlock[4] = sub_100129570;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_100239F98;
    uint64_t v19 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v28 = &_swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
    return swift_release();
  }
}

void sub_100113108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = objc_allocWithZone((Class)CKRecordZone);
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithZoneName:v13];

  sub_1000B66A0(0, &qword_1002632B0);
  sub_1000AA024(&qword_100263AE0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001D2D40;
  *(void *)(v15 + 32) = v14;
  uint64_t v28 = v15;
  specialized Array._endMutation()();
  id v16 = v14;
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v18 = v28;
  uint64_t v19 = CKModifyRecordZonesOperation.init(recordZonesToSave:recordZoneIDsToDelete:)(*(Swift::OpaquePointer_optional *)(&v17 - 1), v29).super.super.super.super.isa;
  id v20 = sub_100108684();
  [(objc_class *)v19 setGroup:v20];

  unint64_t v21 = (void *)swift_allocObject();
  v21[2] = v16;
  v21[3] = a4;
  v21[4] = a5;
  v21[5] = a3;
  v21[6] = a1;
  v21[7] = a2;
  v21[8] = a6;
  swift_bridgeObjectRetain();
  id v22 = v16;
  swift_retain();
  swift_retain();
  CKModifyRecordZonesOperation.modifyRecordZonesResultBlock.setter();
  if (qos_class_self() >= QOS_CLASS_USER_INITIATED) {
    [(objc_class *)v19 setQualityOfService:25];
  }
  id v23 = [(objc_class *)v19 configuration];
  if (v23)
  {
    uint64_t v24 = v23;
    [v23 setAutomaticallyRetryNetworkFailures:0];

    id v25 = [(objc_class *)v19 configuration];
    if (v25)
    {
      uint64_t v26 = v25;
      [v25 setDiscretionaryNetworkBehavior:0];

      swift_allocObject();
      uint64_t v27 = swift_weakInit();
      __chkstk_darwin(v27);
      sub_1000AA024((uint64_t *)&unk_100263160);
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001133DC(uint64_t a1, char a2, void *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v22 = v21;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_1000AA5E0();
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v23 = (void *)swift_allocObject();
    v23[2] = a4;
    v23[3] = a5;
    unsigned char v23[4] = a6;
    v23[5] = a7;
    v23[6] = a8;
    v23[7] = a9;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id v24 = sub_100108418();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_10012962C;
    *(void *)(v25 + 24) = v23;
    aBlock[4] = sub_10012A658;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100119F54;
    aBlock[3] = &unk_10023A038;
    uint64_t v26 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v24 accountInfoWithCompletionHandler:v26];
    _Block_release(v26);
    swift_release();

    return sub_100129000(a1, 1);
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
    *(void *)(v12 + 56) = sub_1000B66A0(0, &qword_1002632B8);
    *(void *)(v12 + 64) = sub_100128E34(&qword_1002632C8, &qword_1002632B8);
    *(void *)(v12 + 32) = a3;
    id v13 = a3;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return a4(0);
  }
}

void sub_100113750(void *a1, char a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v46 = a6;
  uint64_t v47 = a8;
  uint64_t v48 = a5;
  uint64_t v49 = a7;
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v53 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchTime();
  uint64_t v54 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t v22 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1001CFDB0;
    aBlock[0] = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v29 = String.init<A>(describing:)();
    uint64_t v31 = v30;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_1000AA5E0();
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    ((void (*)(void *))v55)(a1);
    sub_100129200(a1, 1);
    sub_100129200(a1, 1);
  }
  else
  {
    id v26 = a1;
    if ([v26 accountStatus] == (id)3)
    {
      static os_log_type_t.error.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      sub_100126CE4();
      swift_allocError();
      void *v27 = 1;
LABEL_16:
      v55();
      sub_100129200(a1, 0);
      swift_errorRelease();
      return;
    }
    unsigned int v32 = [v26 supportsDeviceToDeviceEncryption];
    static os_log_type_t.error.getter();
    if (!v32)
    {
      if (qword_100261938 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      sub_100126CE4();
      swift_allocError();
      *uint64_t v42 = 2;
      goto LABEL_16;
    }
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000B66A0(0, (unint64_t *)&qword_100263210);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchQoS.QoSClass.default(_:), v22);
    uint64_t v44 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v54 + 8);
    v54 += 8;
    uint64_t v45 = v33;
    v33(v18, v16);
    unint64_t v34 = (void *)swift_allocObject();
    uint64_t v35 = v49;
    uint64_t v36 = v46;
    v34[2] = v48;
    v34[3] = v36;
    uint64_t v37 = v47;
    v34[4] = v35;
    v34[5] = v37;
    uint64_t v38 = v56;
    v34[6] = v55;
    v34[7] = v38;
    aBlock[4] = sub_100129688;
    aBlock[5] = v34;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_10023A088;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v40 = v53;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    long long v41 = (void *)v44;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    sub_100129200(a1, 0);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v40);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v15, v51);
    v45(v21, v16);
    swift_release();
  }
}

uint64_t sub_100113F38()
{
  id v1 = [self defaultCenter];
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  [v1 addObserver:v0 selector:"accountDidChange:" name:CKAccountChangedNotification object:0];
  [v1 addObserver:v0 selector:"onIdentityUpdateNotification" name:CKIdentityUpdateNotification object:0];
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  sub_1000AA024(&qword_1002632C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001CFDB0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100129530;
  *(void *)(v4 + 24) = v2;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x80000001001FC240;
  *(void *)(inited + 48) = sub_1001228C0;
  *(void *)(inited + 56) = v4;
  swift_retain();
  unint64_t v5 = sub_1000AF8F8(inited);
  uint64_t v6 = _s15audioaccessoryd24DarwinNotificationHelperC20notificationHandlersACSgSDySSyycG_tcfC_0(v5);

  swift_release();
  *(void *)(v0 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_identityUpdateNotificationListener) = v6;
  return swift_release();
}

uint64_t sub_100114154()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(result + 72);
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_100129538;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_100239F48;
    uint64_t v13 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    uint64_t v12 = v4;
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v10 = v13;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001144C4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = 0xD00000000000001ELL;
    *(void *)(v2 + 40) = 0x80000001001FC1A0;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v1 + 104) == 1)
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      sub_100119F58(150.0);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10011463C()
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001CFDB0;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_1000AA5E0();
  *(void *)(v1 + 32) = 0xD00000000000001ELL;
  *(void *)(v1 + 40) = 0x80000001001FC1A0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 104))
  {
    static os_log_type_t.default.getter();
    return os_log(_:dso:log:_:_:)();
  }
  else
  {
    return sub_100119F58(150.0);
  }
}

uint64_t sub_1001147DC(uint64_t a1, NSObject *a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v15 = (void *)((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v2 + 72);
  void *v15 = v16;
  (*(void (**)(void *, void, uint64_t, __n128))(v12 + 104))(v15, enum case for DispatchPredicate.notOnQueue(_:), v11, v13);
  v22[1] = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 1;
  uint64_t v17 = dispatch_group_create();
  dispatch_group_enter(v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = v11;
  v18[5] = v17;
  v18[6] = v2;
  aBlock[4] = sub_1001294AC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239EA8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  a2 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v26 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
LABEL_5:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  OS_dispatch_group.wait()();

  swift_beginAccess();
  uint64_t v20 = *(unsigned __int8 *)(v11 + 16);
  swift_release();
  return v20;
}

void sub_100114C5C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  v12._countAndFlagsBits = v8;
  v12._object = v10;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v11, v12).super.isa;
  sub_1000B66A0(0, &qword_1002632B0);
  sub_1000AA024(&qword_100263AE0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001D2D40;
  *(void *)(v14 + 32) = isa;
  LOBYTE(v27[0]) = v14;
  specialized Array._endMutation()();
  uint64_t v15 = isa;
  v28.value._rawValue = _swiftEmptyArrayStorage;
  v28.is_nil = v27[0];
  v16.super.super.super.super.Class isa = CKModifyRecordZonesOperation.init(recordZonesToSave:recordZoneIDsToDelete:)(v28, v29).super.super.super.super.isa;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a1;
  v17[4] = a2;
  v17[5] = a4;
  v27[4] = sub_100129524;
  v27[5] = v17;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_1001151E0;
  v27[3] = &unk_100239EF8;
  uint64_t v18 = _Block_copy(v27);
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = a4;
  swift_release();
  [(objc_class *)v16.super.super.super.super.isa setModifyRecordZonesCompletionBlock:v18];
  _Block_release(v18);
  if (qos_class_self() >= QOS_CLASS_USER_INITIATED) {
    [(objc_class *)v16.super.super.super.super.isa setQualityOfService:25];
  }
  id v20 = [(objc_class *)v16.super.super.super.super.isa configuration];
  if (!v20)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v21 = v20;
  [v20 setAutomaticallyRetryNetworkFailures:0];

  id v22 = [(objc_class *)v16.super.super.super.super.isa configuration];
  if (!v22)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v23 = v22;
  [v22 setDiscretionaryNetworkBehavior:0];

  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001CFDB0;
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = sub_1000AA5E0();
  *(void *)(v24 + 32) = a1;
  *(void *)(v24 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v25 = sub_100108418();
  id v26 = [v25 privateCloudDatabase];

  [v26 addOperation:v16.super.super.super.super.isa];
}

void sub_100114FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  if (a3)
  {
    uint64_t v8 = (unsigned char *)(a4 + 16);
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v10 = String.init<A>(describing:)();
    uint64_t v12 = v11;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = sub_1000AA5E0();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v12;
    os_log(_:dso:log:_:_:)();
    swift_errorRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *uint64_t v8 = 0;
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000AA5E0();
    *(void *)(v15 + 32) = a5;
    *(void *)(v15 + 40) = a6;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a7);
}

uint64_t sub_1001151E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10011D67C(a1, a2, a3, a4, &qword_1002632B8, (uint64_t)CKRecordZone_ptr, (unint64_t *)&unk_100261E70);
}

void sub_100115204(uint64_t a1, int a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v137 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v147 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v145 = (uint64_t)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  CKModifyRecordZonesOperation v16 = (char *)&v126 - v15;
  __chkstk_darwin(v17);
  long long v138 = (char *)&v126 - v18;
  aBlock._uint64_t countAndFlagsBits = a1;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  type metadata accessor for CKError(0);
  uint64_t v146 = v19;
  if (swift_dynamicCast())
  {
    LODWORD(v143) = a2;
    uint64_t v144 = v12;
    uint64_t v135 = v2;
    uint64_t v130 = v10;
    char v131 = v8;
    uint64_t v132 = v9;
    uint64_t v133 = v6;
    uint64_t v134 = v5;
    id v20 = v152;
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    uint64_t v140 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v21 = swift_allocObject();
    long long v136 = xmmword_1001CFDB0;
    *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
    id v22 = v20;
    uint64_t v23 = related decl 'e' for CKErrorCode.description.getter();
    uint64_t v25 = v24;

    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v139 = sub_1000AA5E0();
    *(void *)(v21 + 64) = v139;
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v25;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    NSString v26 = String._bridgeToObjectiveC()();
    sub_1000AA024(&qword_1002631E8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001D0A20;
    *(void *)(inited + 32) = 0x43726F7272456B63;
    *(void *)(inited + 40) = 0xEB0000000065646FLL;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)v22;
    uint64_t v28 = sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
    *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:_BridgedStoredNSError.errorCode.getter()];
    *(void *)(inited + 56) = 0xD000000000000012;
    *(void *)(inited + 64) = 0x80000001001FBF00;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)v22;
    sub_100128A88(&qword_100261B78, type metadata accessor for CKError);
    Error.localizedDescription.getter();
    id v29 = objc_allocWithZone((Class)NSString);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v31 = [v29 initWithString:v30];

    *(void *)(inited + 72) = v31;
    sub_1000AFB88(inited);
    sub_1000B66A0(0, &qword_1002631F0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CUMetricsLog();

    v152 = v22;
    uint64_t v33 = v28;
    uint64_t v34 = _BridgedStoredNSError.userInfo.getter();
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v34 + 16) && (unint64_t v37 = sub_1000B4FC4(v35, v36), (v38 & 1) != 0))
    {
      sub_100128C4C(*(void *)(v34 + 56) + 32 * v37, (uint64_t)&aBlock);
    }
    else
    {
      Swift::String aBlock = (Swift::String)0;
      long long v149 = 0u;
    }
    uint64_t v39 = v135;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v149 + 1))
    {
      sub_1000AA024(&qword_1002631F8);
      if (swift_dynamicCast())
      {
        uint64_t v40 = (uint64_t)v152;
        static os_log_type_t.error.getter();
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = v136;
        swift_bridgeObjectRetain();
        uint64_t v42 = Dictionary.description.getter();
        id v43 = v22;
        uint64_t v45 = v44;
        swift_bridgeObjectRelease();
        unint64_t v46 = v139;
        *(void *)(v41 + 56) = &type metadata for String;
        *(void *)(v41 + 64) = v46;
        *(void *)(v41 + 32) = v42;
        *(void *)(v41 + 40) = v45;
        id v22 = v43;
        os_log(_:dso:log:_:_:)();
        uint64_t v47 = swift_bridgeObjectRelease();
        __chkstk_darwin(v47);
        *(&v126 - 2) = v39;
        *((unsigned char *)&v126 - 8) = v143 & 1;
        sub_100127248(v40, (void (*)(unsigned char *, id))sub_1001293AC);
        swift_bridgeObjectRelease();
        uint64_t v33 = v28;
      }
    }
    else
    {
      sub_1000AA894((uint64_t)&aBlock, &qword_1002631A0);
    }
    uint64_t v48 = v147;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)v22;
    _BridgedStoredNSError.code.getter();
    switch((unint64_t)v152)
    {
      case 3uLL:
      case 4uLL:
        unint64_t v49 = v139;
        if (v143) {
          sub_100119F58(150.0);
        }
        goto LABEL_30;
      case 6uLL:
      case 7uLL:
        double v50 = COERCE_DOUBLE(related decl 'e' for CKErrorCode.retryAfterSeconds.getter());
        if (v51) {
          double v50 = 600.0;
        }
        sub_100119F58(v50);
        unint64_t v49 = v139;
        goto LABEL_30;
      case 0xEuLL:
        static os_log_type_t.error.getter();
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = v136;
        id v53 = v22;
        uint64_t v54 = related decl 'e' for CKErrorCode.description.getter();
        uint64_t v56 = v55;

        unint64_t v57 = v139;
        *(void *)(v52 + 56) = &type metadata for String;
        *(void *)(v52 + 64) = v57;
        *(void *)(v52 + 32) = v54;
        *(void *)(v52 + 40) = v56;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v58 = related decl 'e' for CKErrorCode.serverRecord.getter();
        if (v58)
        {
          uint64_t v59 = (void *)v58;
          static os_log_type_t.error.getter();
          uint64_t v60 = swift_allocObject();
          *(_OWORD *)(v60 + 16) = v136;
          id v61 = v59;
          id v62 = [v61 description];
          uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v65 = v64;

          *(void *)(v60 + 56) = &type metadata for String;
          *(void *)(v60 + 64) = v57;
          *(void *)(v60 + 32) = v63;
          *(void *)(v60 + 40) = v65;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v67 = Strong;
            sub_1000AA024(&qword_100263AE0);
            uint64_t v68 = swift_allocObject();
            *(_OWORD *)(v68 + 16) = xmmword_1001D2D40;
            *(void *)(v68 + 32) = v61;
            aBlock._uint64_t countAndFlagsBits = v68;
            specialized Array._endMutation()();
            uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;
            id v70 = v61;
            sub_100124968(v39, (uint64_t)_swiftEmptyArrayStorage, countAndFlagsBits, v67);
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
          }
          uint64_t v71 = swift_unknownObjectWeakLoadStrong();
          if (v71)
          {
            sub_10012760C(*(unsigned char *)(v39 + 104), v71);
            swift_unknownObjectRelease();
          }
        }
        else
        {
          sub_100119F58(30.0);
        }
        return;
      case 0x15uLL:
        uint64_t v129 = v33;
        uint64_t v72 = v145;
        sub_100101038(v145);
        URL.appendingPathComponent(_:isDirectory:)();
        uint64_t v73 = v16;
        uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        uint64_t v75 = v48 + 8;
        uint64_t v76 = v144;
        v74(v72, v144);
        uint64_t v77 = (uint64_t)v138;
        uint64_t v78 = (uint64_t)v73;
        URL.appendingPathComponent(_:)();
        v74((uint64_t)v73, v76);
        sub_100127918(v77, 0);
        uint64_t v79 = v39 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
        uint64_t v128 = *(void *)(v79 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32));
        uint64_t v80 = *(void *)(v128 + 16);
        if (v80)
        {
          id v127 = v22;
          uint64_t v142 = sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
          uint64_t v141 = CKCurrentUserDefaultName;
          uint64_t v81 = swift_bridgeObjectRetain();
          id v143 = v74;
          uint64_t v82 = (void **)(v81 + 40);
          uint64_t v147 = v75;
          uint64_t v83 = v78;
          uint64_t v84 = v144;
          do
          {
            uint64_t v85 = (uint64_t)*(v82 - 1);
            unint64_t v86 = *v82;
            uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v89 = v88;
            swift_bridgeObjectRetain();
            v90._uint64_t countAndFlagsBits = v85;
            v90._object = v86;
            v91._uint64_t countAndFlagsBits = v87;
            v91._object = v89;
            Class v92 = CKRecordZoneID.init(zoneName:ownerName:)(v90, v91).super.isa;
            uint64_t v93 = v145;
            sub_100101038(v145);
            URL.appendingPathComponent(_:isDirectory:)();
            v74(v93, v84);
            v94._uint64_t countAndFlagsBits = 0x65746176697250;
            v94._object = (void *)0xE700000000000000;
            URL.appendPathComponent(_:)(v94);
            id v95 = [(objc_class *)v92 ownerName];
            uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::OpaquePointer_optional v98 = v97;

            v99._uint64_t countAndFlagsBits = v96;
            v99._object = v98;
            URL.appendPathComponent(_:)(v99);
            swift_bridgeObjectRelease();
            id v100 = [(objc_class *)v92 zoneName];
            uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v103 = v102;

            aBlock._uint64_t countAndFlagsBits = v101;
            aBlock._object = v103;
            v104._uint64_t countAndFlagsBits = 0x6E656B6F742ELL;
            v104._object = (void *)0xE600000000000000;
            String.append(_:)(v104);
            URL.appendPathComponent(_:)(aBlock);

            swift_bridgeObjectRelease();
            sub_100127918(v83, 0);
            v74(v83, v84);
            v82 += 2;
            --v80;
          }
          while (v80);
          swift_bridgeObjectRelease();
          id v22 = v127;
          uint64_t v74 = v143;
        }
        uint64_t v39 = v135;
        sub_100119F58(30.0);
        v74((uint64_t)v138, v144);
        unint64_t v49 = v139;
        goto LABEL_30;
      default:
        static os_log_type_t.error.getter();
        uint64_t v129 = v33;
        uint64_t v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = v136;
        id v106 = v22;
        id v107 = v22;
        uint64_t v108 = related decl 'e' for CKErrorCode.description.getter();
        uint64_t v110 = v109;

        unint64_t v49 = v139;
        *(void *)(v105 + 56) = &type metadata for String;
        *(void *)(v105 + 64) = v49;
        *(void *)(v105 + 32) = v108;
        *(void *)(v105 + 40) = v110;
        id v22 = v107;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
LABEL_30:
        v152 = v22;
        _BridgedStoredNSError.code.getter();
        switch(aBlock._countAndFlagsBits)
        {
          case 'n':
            static os_log_type_t.error.getter();
            os_log(_:dso:log:_:_:)();
            if (*(unsigned char *)(v39 + 104) == 1)
            {
              *(unsigned char *)(v39 + 104) = 0;
              static os_log_type_t.fault.getter();
              os_log(_:dso:log:_:_:)();
            }

            break;
          case 'p':
            static os_log_type_t.default.getter();
            os_log(_:dso:log:_:_:)();
            v150 = sub_1001293A4;
            uint64_t v151 = v39;
            aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
            aBlock._object = (void *)1107296256;
            *(void *)&long long v149 = sub_100106F90;
            *((void *)&v149 + 1) = &unk_100239DB8;
            uint64_t v116 = _Block_copy(&aBlock);
            swift_retain();
            long long v117 = v137;
            static DispatchQoS.unspecified.getter();
            v152 = _swiftEmptyArrayStorage;
            sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000AA024(&qword_100263550);
            uint64_t v118 = v22;
            sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
            uint64_t v119 = v131;
            uint64_t v120 = v134;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            _Block_release(v116);

            (*(void (**)(char *, uint64_t))(v133 + 8))(v119, v120);
            (*(void (**)(char *, uint64_t))(v130 + 8))(v117, v132);
            swift_release();
            break;
          case 'o':
            static os_log_type_t.default.getter();
            uint64_t v111 = swift_allocObject();
            *(_OWORD *)(v111 + 16) = v136;
            uint64_t v112 = v39 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
            uint64_t v113 = (uint64_t *)(v112 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 24));
            uint64_t v115 = *v113;
            uint64_t v114 = v113[1];
            *(void *)(v111 + 56) = &type metadata for String;
            *(void *)(v111 + 64) = v49;
            *(void *)(v111 + 32) = v115;
            *(void *)(v111 + 40) = v114;
            swift_bridgeObjectRetain();
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();

            break;
          default:
            static os_log_type_t.error.getter();
            uint64_t v121 = swift_allocObject();
            *(_OWORD *)(v121 + 16) = v136;
            id v122 = v22;
            uint64_t v123 = related decl 'e' for CKErrorCode.description.getter();
            uint64_t v125 = v124;

            *(void *)(v121 + 56) = &type metadata for String;
            *(void *)(v121 + 64) = v49;
            *(void *)(v121 + 32) = v123;
            *(void *)(v121 + 40) = v125;
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();

            break;
        }
        break;
    }
  }
}

uint64_t sub_100116458(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v9 = *(void *)(v8 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32));
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (NSObject **)(v9 + 40);
    do
    {
      uint64_t v12 = (uint64_t)*(v11 - 1);
      uint64_t v13 = *v11;
      swift_bridgeObjectRetain();
      sub_1001147DC(v12, v13);
      swift_bridgeObjectRelease();
      v11 += 2;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  sub_1001123A0();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100129444;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239E30;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v20 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_100116798()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1001093E0(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001167F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v30 = a5;
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1001CFDB0;
    Swift::String aBlock = a2;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_1000AA5E0();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v30;
    *(void *)(v18 + 16) = v32;
    *(void *)(v18 + 24) = v19;
    uint64_t v41 = sub_100129314;
    uint64_t v42 = (void *)v18;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v38 = 1107296256;
    uint64_t v39 = sub_100106F90;
    uint64_t v40 = &unk_100239C28;
    id v20 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);
    swift_errorRelease();
  }
  else
  {
    LODWORD(v30) = static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
    id v22 = (id)CKStringFromAccountStatus();
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_1000AA5E0();
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v25;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    NSString v26 = (void *)swift_allocObject();
    v26[2] = v32;
    v26[3] = a5;
    v26[4] = a1;
    uint64_t v41 = sub_1001292E4;
    uint64_t v42 = v26;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v38 = 1107296256;
    uint64_t v39 = sub_100106F90;
    uint64_t v40 = &unk_100239BD8;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v27);
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
  return swift_release();
}

void sub_100116DEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100116E64()
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  *(unsigned char *)(v1 + 24) = 0;
  swift_retain();
  id v2 = sub_100108418();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = v0;
  v3[3] = sub_100129290;
  v3[4] = v1;
  v5[4] = sub_1001292A0;
  v5[5] = v3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_100116DEC;
  v5[3] = &unk_100239B88;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  [v2 accountStatusWithCompletionHandler:v4];
  _Block_release(v4);
  swift_release();
}

uint64_t sub_1001170EC()
{
  uint64_t result = type metadata accessor for CloudCoordinatorConfiguration();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100117200(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(a2 + 72);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a1;
  *(unsigned char *)(v14 + 32) = a3;
  aBlock[4] = sub_100129378;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239C78;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1001174CC(uint64_t a1, uint64_t a2, int a3)
{
  int v35 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  unint64_t v37 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001D0A20;
  id v10 = (id)CKStringFromAccountStatus();
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000AA5E0();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  id v15 = (id)CKStringFromAccountStatus();
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v14;
  *(void *)(v9 + 72) = v16;
  *(void *)(v9 + 80) = v18;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = a2;
  *(unsigned char *)(a1 + 105) = a2 == 1;
  switch(a2)
  {
    case 1:
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      sub_1001185B0(v35 & 1);
      break;
    case 2:
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      if (*(void *)(a1 + 96) != 2)
      {
        uint64_t v47 = sub_10012938C;
        uint64_t v48 = a1;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_100106F90;
        unint64_t v46 = &unk_100239CC8;
        id v20 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v21 = v36;
        static DispatchQoS.unspecified.getter();
        unint64_t v49 = _swiftEmptyArrayStorage;
        sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AA024(&qword_100263550);
        sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
        id v22 = v37;
        uint64_t v23 = v41;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v20);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v23);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v39);
        swift_release();
        goto LABEL_15;
      }
      break;
    case 3:
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      [*(id *)(a1 + 40) invalidate];
      uint64_t v24 = *(void **)(a1 + 40);
      *(void *)(a1 + 40) = 0;

      if (*(void *)(a1 + 48))
      {
        swift_getObjectType();
        swift_retain();
        OS_dispatch_source.cancel()();
        swift_release();
      }
      *(void *)(a1 + 48) = 0;
      swift_release();
      swift_beginAccess();
      *(void *)(a1 + 112) = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(void *)(a1 + 120) = _swiftEmptyDictionarySingleton;
      swift_bridgeObjectRelease();
      if (v19 == 3)
      {
        static os_log_type_t.default.getter();
        os_log(_:dso:log:_:_:)();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v27 = *(void *)(a1 + 32);
        Swift::String aBlock = (void **)Strong;
        uint64_t v44 = v27;
        sub_1000AA024((uint64_t *)&unk_1002632A0);
        uint64_t v28 = String.init<A>(describing:)();
        *(void *)(v25 + 56) = &type metadata for String;
        *(void *)(v25 + 64) = v14;
        *(void *)(v25 + 32) = v28;
        *(void *)(v25 + 40) = v29;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v47 = sub_100129384;
        uint64_t v48 = a1;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v44 = 1107296256;
        uint64_t v45 = sub_100106F90;
        unint64_t v46 = &unk_100239CA0;
        uint64_t v30 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v31 = v36;
        static DispatchQoS.unspecified.getter();
        uint64_t v42 = _swiftEmptyArrayStorage;
        sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AA024(&qword_100263550);
        sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
        uint64_t v32 = v37;
        uint64_t v33 = v41;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v30);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v39);
        swift_release();
        if (*(unsigned char *)(a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available))
        {
LABEL_15:
          sub_1001093E0(0);
        }
        else
        {
          static os_log_type_t.default.getter();
          os_log(_:dso:log:_:_:)();
          sub_100108FD4();
        }
      }
      break;
    default:
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      break;
  }
}

uint64_t sub_100117DB4(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  int v35 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t result = *(void *)(v6 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32));
  uint64_t v8 = *(void *)(result + 16);
  if (v8)
  {
    uint64_t v37 = a1 + 24;
    uint64_t v31 = v41;
    uint64_t v32 = CKCurrentUserDefaultName;
    uint64_t v29 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v30 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v9 = (void **)(v28 + 40);
    id v10 = v35;
    do
    {
      uint64_t v11 = (uint64_t)*(v9 - 1);
      uint64_t v12 = *v9;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v14 = Strong;
        sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        swift_bridgeObjectRetain();
        v18._uint64_t countAndFlagsBits = v11;
        v18._object = v12;
        v19._uint64_t countAndFlagsBits = v15;
        v19._object = v17;
        Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v18, v19).super.isa;
        uint64_t v21 = *(void **)(v14 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = isa;
        *(void *)(v22 + 24) = v14;
        v41[2] = sub_1000D77B8;
        v41[3] = v22;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v41[0] = sub_100106F90;
        v41[1] = &unk_100239D18;
        uint64_t v23 = _Block_copy(aBlock);
        id v24 = v21;
        uint64_t v38 = isa;
        swift_unknownObjectRetain();
        uint64_t v25 = v33;
        static DispatchQoS.unspecified.getter();
        uint64_t v39 = _swiftEmptyArrayStorage;
        sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AA024(&qword_100263550);
        sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
        uint64_t v26 = v36;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v23);

        (*v30)(v10, v26);
        (*v29)(v25, v34);

        swift_unknownObjectRelease();
        swift_release();
      }
      v9 += 2;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001181A0(uint64_t a1)
{
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v34 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v32 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v7 = *(void *)(*(void *)(v6 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32)) + 16);
  if (v7)
  {
    uint64_t v36 = a1 + 24;
    uint64_t v30 = v40;
    uint64_t v31 = CKCurrentUserDefaultName;
    uint64_t v29 = (void (**)(char *, uint64_t))(v2 + 8);
    v27[1] = a1;
    uint64_t v28 = (void (**)(char *, uint64_t))(v4 + 8);
    v27[0] = swift_bridgeObjectRetain();
    uint64_t v8 = (void **)(v27[0] + 40);
    uint64_t v9 = v34;
    do
    {
      uint64_t v10 = (uint64_t)*(v8 - 1);
      uint64_t v11 = *v8;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v13 = Strong;
        sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;
        swift_bridgeObjectRetain();
        v17._uint64_t countAndFlagsBits = v10;
        v17._object = v11;
        v18._uint64_t countAndFlagsBits = v14;
        v18._object = v16;
        Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v17, v18).super.isa;
        id v20 = *(void **)(v13 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = isa;
        *(void *)(v21 + 24) = v13;
        v40[2] = sub_10012A42C;
        v40[3] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v40[0] = sub_100106F90;
        v40[1] = &unk_100239D68;
        uint64_t v22 = _Block_copy(aBlock);
        id v23 = v20;
        uint64_t v37 = isa;
        swift_unknownObjectRetain();
        id v24 = v32;
        static DispatchQoS.unspecified.getter();
        uint64_t v38 = _swiftEmptyArrayStorage;
        sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AA024(&qword_100263550);
        sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
        uint64_t v25 = v35;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v22);

        (*v29)(v9, v25);
        (*v28)(v24, v33);

        swift_unknownObjectRelease();
        swift_release();
      }
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100125330(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001185B0(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (void *)((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + 72);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v3, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
LABEL_5:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  *(unsigned char *)(v10 + 24) = a1 & 1;
  swift_retain();
  id v11 = sub_100108418();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1001291E8;
  *(void *)(v12 + 24) = v10;
  aBlock[4] = sub_1001291F8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100119F54;
  aBlock[3] = &unk_1002399D0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v11 accountInfoWithCompletionHandler:v13];
  _Block_release(v13);
  swift_release();
}

void sub_100118824(void *a1, char a2, uint64_t a3, int a4)
{
  int v130 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v129 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v135 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v134 = (uint64_t)&v117 - v16;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v117 - v20;
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_1001CFDB0;
    aBlock._uint64_t countAndFlagsBits = (uint64_t)a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v83 = String.init<A>(describing:)();
    uint64_t v85 = v84;
    *(void *)(v82 + 56) = &type metadata for String;
    *(void *)(v82 + 64) = sub_1000AA5E0();
    *(void *)(v82 + 32) = v83;
    *(void *)(v82 + 40) = v85;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    unint64_t v86 = a1;
    char v87 = 1;
    goto LABEL_24;
  }
  uint64_t v133 = v19;
  uint64_t v127 = v18;
  uint64_t v121 = v12;
  id v122 = v10;
  uint64_t v123 = v11;
  uint64_t v124 = v8;
  uint64_t v128 = a3;
  uint64_t v125 = v7;
  id v22 = a1;
  static os_log_type_t.default.getter();
  id v23 = a1;
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  long long v131 = xmmword_1001CFDB0;
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  id v26 = v22;
  id v27 = [v26 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  sub_100129200(v23, 0);
  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v126 = sub_1000AA5E0();
  *(void *)(v25 + 64) = v126;
  *(void *)(v25 + 32) = v28;
  *(void *)(v25 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v31 = [v26 accountStatus];
  static os_log_type_t.default.getter();
  if (v31 == (id)1)
  {
    uint64_t v120 = v23;
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v131;
    uint64_t v33 = v128;
    char v34 = *(unsigned char *)(v128 + 104);
    *(void *)(v32 + 56) = &type metadata for Bool;
    *(void *)(v32 + 64) = &protocol witness table for Bool;
    *(unsigned char *)(v32 + 32) = v34;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    int v35 = *(unsigned __int8 *)(v33 + 104);
    static os_log_type_t.default.getter();
    uint64_t v119 = v24;
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = v131;
    unsigned __int8 v37 = [v26 supportsDeviceToDeviceEncryption];
    *(void *)(v36 + 56) = &type metadata for Bool;
    *(void *)(v36 + 64) = &protocol witness table for Bool;
    *(unsigned char *)(v36 + 32) = v37;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    unsigned __int8 v38 = [v26 supportsDeviceToDeviceEncryption];
    *(unsigned char *)(v33 + 104) = v38;
    if (v35 == 1 && (v38 & 1) == 0)
    {
      NSString v39 = String._bridgeToObjectiveC()();
      sub_1000AA024(&qword_1002631E8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v131;
      *(void *)(inited + 32) = 0xD000000000000027;
      *(void *)(inited + 40) = 0x80000001001FBB10;
      *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithBool:*(unsigned __int8 *)(v33 + 104)];
      sub_1000AFB88(inited);
      sub_1000B66A0(0, &qword_1002631F0);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      CUMetricsLog();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v43 = v127;
    if (Strong)
    {
      sub_10012760C(*(unsigned char *)(v33 + 104), Strong);
      swift_unknownObjectRelease();
    }
    if (v35 & 1) == 0 && ([v26 supportsDeviceToDeviceEncryption])
    {
      LODWORD(v118) = static os_log_type_t.default.getter();
      uint64_t v132 = (NSString *)qword_10026ADD8;
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v131;
      uint64_t v45 = v33 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
      uint64_t v46 = type metadata accessor for CloudCoordinatorConfiguration();
      uint64_t v47 = v135;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v21, v45 + *(int *)(v46 + 28), v43);
      sub_100128A88((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = v49;
      char v51 = *(void (**)(char *, uint64_t))(v47 + 8);
      v51(v21, v43);
      unint64_t v52 = v126;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = v52;
      *(void *)(v44 + 32) = v48;
      *(void *)(v44 + 40) = v50;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v53 = v133;
      sub_100101038(v133);
      uint64_t v54 = v134;
      URL.appendingPathComponent(_:isDirectory:)();
      v51((char *)v53, v43);
      URL.appendingPathComponent(_:)();
      v51((char *)v54, v43);
      id v118 = (id)sub_100101720();
      uint64_t v135 = v47 + 8;
      v51(v21, v43);
      uint64_t v55 = *(void *)(v45 + *(int *)(v46 + 32));
      uint64_t v56 = *(void *)(v55 + 16);
      if (v56)
      {
        uint64_t v133 = sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
        uint64_t v132 = CKCurrentUserDefaultName;
        swift_bridgeObjectRetain();
        uint64_t v57 = v56 - 1;
        uint64_t v117 = v55;
        uint64_t v58 = (void **)(v55 + 40);
        do
        {
          uint64_t v59 = v57;
          uint64_t v61 = (uint64_t)*(v58 - 1);
          uint64_t v60 = *v58;
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v64 = v63;
          swift_bridgeObjectRetain();
          v65._uint64_t countAndFlagsBits = v61;
          v65._object = v60;
          v66._uint64_t countAndFlagsBits = v62;
          v66._object = v64;
          Class v67 = CKRecordZoneID.init(zoneName:ownerName:)(v65, v66).super.isa;
          uint64_t v68 = v134;
          sub_100101038(v134);
          URL.appendingPathComponent(_:isDirectory:)();
          v51((char *)v68, v43);
          v69._uint64_t countAndFlagsBits = 0x65746176697250;
          v69._object = (void *)0xE700000000000000;
          URL.appendPathComponent(_:)(v69);
          id v70 = [(objc_class *)v67 ownerName];
          uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v73 = v72;

          v74._uint64_t countAndFlagsBits = v71;
          v74._object = v73;
          URL.appendPathComponent(_:)(v74);
          swift_bridgeObjectRelease();
          id v75 = [(objc_class *)v67 zoneName];
          uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;

          aBlock._uint64_t countAndFlagsBits = v76;
          aBlock._object = v78;
          v79._uint64_t countAndFlagsBits = 0x6E656B6F742ELL;
          v79._object = (void *)0xE600000000000000;
          String.append(_:)(v79);
          URL.appendPathComponent(_:)(aBlock);

          swift_bridgeObjectRelease();
          uint64_t v80 = (void *)sub_100101720();
          v51(v21, v43);

          BOOL v81 = v80 == 0;
          if (!v80) {
            break;
          }
          uint64_t v57 = v59 - 1;
          v58 += 2;
        }
        while (v59);
        swift_bridgeObjectRelease();
        uint64_t v33 = v128;
      }
      else
      {
        BOOL v81 = 0;
      }
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      static os_log_type_t.default.getter();
      char v88 = v130;
      id v89 = v118;
      if ((v130 & 1) != 0 || !v118 || v81)
      {
        uint64_t v91 = swift_allocObject();
        uint64_t v92 = 0x206563726F46;
        if ((v88 & 1) == 0) {
          uint64_t v92 = 0;
        }
        unint64_t v93 = 0xE000000000000000;
        unint64_t v94 = 0xE600000000000000;
        if ((v88 & 1) == 0) {
          unint64_t v94 = 0xE000000000000000;
        }
        *(_OWORD *)(v91 + 16) = xmmword_1001D0A20;
        unint64_t v95 = v126;
        *(void *)(v91 + 56) = &type metadata for String;
        *(void *)(v91 + 64) = v95;
        *(void *)(v91 + 32) = v92;
        *(void *)(v91 + 40) = v94;
        if (v89) {
          int v96 = v81;
        }
        else {
          int v96 = 1;
        }
        BOOL v97 = v96 == 0;
        if (v96) {
          unint64_t v98 = 0xD000000000000034;
        }
        else {
          unint64_t v98 = 0;
        }
        *(void *)(v91 + 96) = &type metadata for String;
        *(void *)(v91 + 104) = v95;
        if (!v97) {
          unint64_t v93 = 0x80000001001FB990;
        }
        *(void *)(v91 + 72) = v98;
        *(void *)(v91 + 80) = v93;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        static os_log_type_t.default.getter();
        uint64_t v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = v131;
        uint64_t v100 = sub_1001085C0();
        *(void *)(v99 + 56) = &type metadata for String;
        *(void *)(v99 + 64) = v95;
        *(void *)(v99 + 32) = v100;
        *(void *)(v99 + 40) = v101;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v102 = sub_1001085C0();
        Class v104 = sub_100128360(v102, v103);
        swift_bridgeObjectRelease();
        uint64_t v105 = v104;
        id v106 = sub_100108684();
        [(objc_class *)v105 setGroup:v106];

        swift_retain();
        CKModifySubscriptionsOperation.modifySubscriptionsResultBlock.setter();
        id v107 = *(NSObject **)(v33 + 64);
        uint64_t v108 = swift_allocObject();
        *(void *)(v108 + 16) = v33;
        *(void *)(v108 + 24) = v105;
        uint64_t v109 = swift_allocObject();
        *(void *)(v109 + 16) = sub_10012A424;
        *(void *)(v109 + 24) = v108;
        uint64_t v140 = sub_10012A428;
        uint64_t v141 = v109;
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
        aBlock._object = (void *)1107296256;
        long long v138 = sub_100106FFC;
        unint64_t v139 = &unk_100239A48;
        uint64_t v110 = _Block_copy(&aBlock);
        uint64_t v111 = v105;
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_sync(v107, v110);
        _Block_release(v110);
        LOBYTE(v110) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v110)
        {
          __break(1u);
        }
        else
        {
          uint64_t v112 = swift_allocObject();
          *(void *)(v112 + 16) = v33;
          *(unsigned char *)(v112 + 24) = v88 & 1;
          uint64_t v140 = sub_10012926C;
          uint64_t v141 = v112;
          aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
          aBlock._object = (void *)1107296256;
          long long v138 = sub_100106F90;
          unint64_t v139 = &unk_100239A98;
          uint64_t v113 = _Block_copy(&aBlock);
          swift_retain();
          uint64_t v114 = v129;
          static DispatchQoS.unspecified.getter();
          long long v136 = _swiftEmptyArrayStorage;
          sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000AA024(&qword_100263550);
          sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
          uint64_t v115 = v122;
          uint64_t v116 = v125;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();

          _Block_release(v113);
          sub_100129200(v120, 0);
          (*(void (**)(char *, uint64_t))(v124 + 8))(v115, v116);
          (*(void (**)(char *, uint64_t))(v121 + 8))(v114, v123);
          swift_release();
          swift_release();
        }
      }
      else
      {
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = xmmword_1001D2D20;
        *(void *)(v90 + 56) = &type metadata for Bool;
        *(void *)(v90 + 64) = &protocol witness table for Bool;
        *(unsigned char *)(v90 + 32) = 0;
        *(void *)(v90 + 96) = &type metadata for Int;
        *(void *)(v90 + 104) = &protocol witness table for Int;
        *(void *)(v90 + 72) = 0;
        *(void *)(v90 + 136) = &type metadata for Bool;
        *(void *)(v90 + 144) = &protocol witness table for Bool;
        *(unsigned char *)(v90 + 112) = 0;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        static os_log_type_t.default.getter();
        os_log(_:dso:log:_:_:)();
        sub_100108FD4();
        sub_100129200(v120, 0);
      }
      return;
    }
    unint64_t v86 = v120;
    char v87 = 0;
LABEL_24:
    sub_100129200(v86, v87);
    return;
  }
  os_log(_:dso:log:_:_:)();

  sub_100129200(v23, 0);
}

uint64_t sub_1001198F8(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v9 = String.init<A>(describing:)();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return sub_100129000(a1, 1);
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    uint64_t v3 = sub_1001085C0();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100119B04(uint64_t a1, char a2)
{
  swift_retain();
  sub_100111F48(2, a2, (uint64_t)sub_100129278, a1);

  return swift_release();
}

uint64_t sub_100119B64(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v4 = String.init<A>(describing:)();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_1000AA5E0();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
      _BridgedStoredNSError.code.getter();
      if ((unint64_t)(a1 - 3) > 1)
      {
        id v7 = v9;
        sub_100115204((uint64_t)v7, 0);
        sub_100129000(a1, 1);
      }
      else
      {
        sub_100119F58(150.0);
        sub_100129000(a1, 1);
      }
    }
    else
    {
      sub_100129000(a1, 1);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
  }
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  return sub_100108FD4();
}

void sub_100119E58(void *a1, void *a2, void (*a3)(void *, uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    a3(a2, 1);
    swift_errorRelease();
  }
  else if (a1)
  {
    id v6 = a1;
    a3(a1, 0);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_100119F58(double a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[1] = *(void *)(v1 + 72);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(double *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1001291A4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239958;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v16 = &_swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_10011A254(double a1)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
  *(void *)(v2 + 56) = &type metadata for Double;
  *(void *)(v2 + 64) = &protocol witness table for Double;
  *(double *)(v2 + 32) = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (!*(void *)(result + 40)) {
      sub_1001099C8(a1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10011A37C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - v9;
  int v36 = static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  uint64_t v35 = qword_10026ADD8;
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001D0A20;
  unsigned __int8 v38 = a1;
  id v39 = [a1 scope];
  type metadata accessor for Scope(0);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_1000AA5E0();
  unint64_t v16 = v15;
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  if (!a2)
  {
    uint64_t v24 = (uint64_t *)(v11 + 72);
    *(void *)(v11 + 96) = &type metadata for String;
    *(void *)(v11 + 104) = v15;
LABEL_8:
    uint64_t v25 = v37;
    id v26 = v38;
    id v27 = &selRef_lastConnectTime;
    uint64_t *v24 = 7104878;
    unint64_t v23 = 0xE300000000000000;
    goto LABEL_9;
  }
  uint64_t v33 = v4;
  char v34 = a2;
  id v17 = [a2 data];
  uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  uint64_t v21 = Data.hexString.getter(v18, v20);
  unint64_t v23 = v22;
  sub_1000AA8F0(v18, v20);
  uint64_t v24 = (uint64_t *)(v11 + 72);
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v16;
  if (!v23)
  {
    uint64_t v4 = v33;
    a2 = v34;
    goto LABEL_8;
  }
  uint64_t *v24 = v21;
  uint64_t v4 = v33;
  a2 = v34;
  uint64_t v25 = v37;
  id v26 = v38;
  id v27 = &selRef_lastConnectTime;
LABEL_9:
  *(void *)(v11 + 80) = v23;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v28 = v25 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v29 = type metadata accessor for CloudCoordinatorConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v28 + *(int *)(v29 + 28), v4);
  sub_100100E0C((uint64_t)v7, (uint64_t)[v26 v27[354]]);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v7, v4);
  sub_100127918((uint64_t)v10, a2);
  return ((uint64_t (*)(char *, uint64_t))v30)(v10, v4);
}

uint64_t sub_10011A684(void *a1, void *a2, void *a3)
{
  uint64_t v42 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)v37 - v10;
  int v38 = static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  v37[1] = qword_10026ADD8;
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001D2D20;
  uint64_t v41 = a1;
  id v43 = [a1 scope];
  type metadata accessor for Scope(0);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_1000AA5E0();
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  unint64_t v16 = a2;
  id v17 = [a2 zoneName];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v15;
  *(void *)(v11 + 72) = v18;
  *(void *)(v11 + 80) = v20;
  if (!a3)
  {
    uint64_t v28 = (uint64_t *)(v11 + 112);
    *(void *)(v11 + 136) = &type metadata for String;
    *(void *)(v11 + 144) = v15;
LABEL_8:
    uint64_t v31 = (uint64_t)v40;
    uint64_t v30 = v41;
    uint64_t v32 = v39;
    uint64_t *v28 = 7104878;
    unint64_t v27 = 0xE300000000000000;
    uint64_t v29 = v42;
    goto LABEL_9;
  }
  v37[0] = a3;
  id v21 = [a3 data];
  uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v24 = v23;

  uint64_t v25 = Data.hexString.getter(v22, v24);
  unint64_t v27 = v26;
  sub_1000AA8F0(v22, v24);
  uint64_t v28 = (uint64_t *)(v11 + 112);
  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v15;
  if (!v27)
  {
    a3 = (void *)v37[0];
    goto LABEL_8;
  }
  uint64_t *v28 = v25;
  a3 = (void *)v37[0];
  uint64_t v30 = v41;
  uint64_t v29 = v42;
  uint64_t v32 = v39;
  uint64_t v31 = (uint64_t)v40;
LABEL_9:
  *(void *)(v11 + 120) = v27;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v33 = v32 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
  uint64_t v34 = type metadata accessor for CloudCoordinatorConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v33 + *(int *)(v34 + 28), v29);
  sub_1001014A0((uint64_t)v8, (uint64_t)[v30 scope], v16);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
  v35(v8, v29);
  sub_100127918(v31, a3);
  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v31, v29);
}

uint64_t sub_10011A9D4()
{
  return sub_100107E48();
}

uint64_t sub_10011A9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OS_dispatch_queue.sync<A>(execute:)();
  int v9 = aBlock;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001CFDB0;
  *(void *)(v10 + 56) = &type metadata for Bool;
  *(void *)(v10 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v10 + 32) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  if (v9)
  {
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v12 = v21;
    v11[2] = v20;
    v11[3] = v12;
    v11[4] = v2;
    uint64_t v30 = sub_100122654;
    uint64_t v31 = v11;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v13 = &unk_100239250;
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = v20;
    uint64_t v16 = v21;
    void v14[2] = v2;
    v14[3] = v15;
    v14[4] = v16;
    uint64_t v30 = sub_100122618;
    uint64_t v31 = v14;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v13 = &unk_100239200;
  }
  uint64_t v28 = sub_100106F90;
  uint64_t v29 = v13;
  id v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = &_swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return swift_release();
}

uint64_t sub_10011AEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v14;
  v11[3] = a3;
  v11[4] = a1;
  aBlock[4] = sub_100122654;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_1002392A0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v17 = &_swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  return swift_release();
}

uint64_t sub_10011B210(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v45 = a3;
  int v46 = a2;
  uint64_t v49 = type metadata accessor for Date();
  uint64_t v44 = *(void *)(v49 - 8);
  uint64_t v5 = *(void *)(v44 + 64);
  __chkstk_darwin(v49);
  id v43 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)v42 - v7;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
  id v9 = a1;
  id v10 = [v9 description];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000AA5E0();
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 32) = v11;
  *(void *)(v8 + 40) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (IsAppleInternalBuild()) {
    int v15 = static os_log_type_t.default.getter();
  }
  else {
    int v15 = static os_log_type_t.debug.getter();
  }
  v42[1] = v15;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D0A20;
  id v17 = [v9 recordID];
  id v18 = [v17 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *(void *)(v16 + 56) = &type metadata for String;
  *(void *)(v16 + 64) = v14;
  *(void *)(v16 + 32) = v19;
  *(void *)(v16 + 40) = v21;
  id v22 = [[objc_msgSend(v9, "encryptedValues") allKeys];
  swift_unknownObjectRelease();
  uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v24 = v9;
  sub_1001251DC(v23, v24);
  swift_bridgeObjectRelease();

  sub_1000AA024(&qword_1002629D0);
  uint64_t v25 = Array.description.getter();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 96) = &type metadata for String;
  *(void *)(v16 + 104) = v14;
  *(void *)(v16 + 72) = v25;
  *(void *)(v16 + 80) = v27;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v28 = v50;
  static Date.now.getter();
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  uint64_t v31 = v49;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v28, v49);
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = v32 + v5;
  uint64_t v34 = (char *)swift_allocObject();
  uint64_t v35 = &v34[(v32 + v5) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v37 = v47;
  uint64_t v36 = v48;
  *((void *)v34 + 2) = v45;
  *((void *)v34 + 3) = v37;
  *((void *)v34 + 4) = v36;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v34[v32], v29, v31);
  LOBYTE(v32) = v46 & 1;
  v34[v33] = v46 & 1;
  *((void *)v35 + 1) = v24;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  *(void *)(v38 + 24) = v24;
  *(void *)(v38 + 32) = sub_100126E28;
  *(void *)(v38 + 40) = v34;
  *(unsigned char *)(v38 + 48) = v32;
  id v39 = v24;
  swift_retain_n();
  id v40 = v39;
  swift_retain();
  swift_retain();
  sub_10011A9F8((uint64_t)sub_100126EE4, v38);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v50, v31);
}

void sub_10011B6A4(void *a1, char a2, void (*a3)(void *, void), uint64_t a4, uint64_t a5, uint64_t a6, int a7, void *a8)
{
  Swift::String v66 = a8;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  __chkstk_darwin(v15);
  id v18 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    id v19 = a1;
    a3(a1, 0);
    sub_1001284FC(v19, a6, a7 & 1, 0);
    sub_100129200(a1, 0);
    return;
  }
  uint64_t v61 = v17;
  int v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = (void (*)(void, void))a3;
  uint64_t v64 = a4;
  *(void *)&long long v67 = a1;
  swift_errorRetain();
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v60 = a6;
    uint64_t v20 = v69;
    sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    if ((void)v67 == 26)
    {
LABEL_7:
      id v59 = v20;
      uint64_t v21 = v66;
      static os_log_type_t.error.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      id v22 = [v21 recordID];
      id v23 = [v22 zoneID];

      id v24 = [v23 zoneName];
      uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v25;

      uint64_t v26 = swift_allocObject();
      swift_weakInit();
      uint64_t v27 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))((char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v60, v15);
      unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v29 = v28 + v16;
      uint64_t v30 = (char *)swift_allocObject();
      uint64_t v31 = v63;
      *((void *)v30 + 2) = v26;
      *((void *)v30 + 3) = v31;
      *((void *)v30 + 4) = v64;
      *((void *)v30 + 5) = v21;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v30[v28], v18, v15);
      v30[v29] = v65 & 1;
      swift_retain();
      swift_retain();
      id v32 = v21;
      sub_100112CE0(v58, v57, 0, (void (*)(void))sub_100128BB0, (uint64_t)v30);
      swift_bridgeObjectRelease();

      sub_100129200(a1, 1);
      swift_release();
      swift_release();
      return;
    }
    Swift::String v69 = v20;
    uint64_t v40 = _BridgedStoredNSError.userInfo.getter();
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v40 + 16) && (unint64_t v43 = sub_1000B4FC4(v41, v42), (v44 & 1) != 0))
    {
      sub_100128C4C(*(void *)(v40 + 56) + 32 * v43, (uint64_t)&v67);
    }
    else
    {
      long long v67 = 0u;
      long long v68 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v68 + 1))
    {
      sub_1000AA024(&qword_1002631A8);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v45 = v20;
LABEL_27:
        uint64_t v47 = v66;
        static os_log_type_t.error.getter();
        uint64_t v48 = (void (*)(void *, uint64_t))v63;
        if (qword_100261938 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1001CFDB0;
        swift_getErrorValue();
        uint64_t v50 = Error.localizedDescription.getter();
        uint64_t v52 = v51;
        *(void *)(v49 + 56) = &type metadata for String;
        *(void *)(v49 + 64) = sub_1000AA5E0();
        *(void *)(v49 + 32) = v50;
        *(void *)(v49 + 40) = v52;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        id v53 = v45;
        v48(v45, 1);

        id v54 = v53;
        sub_100115204((uint64_t)v54, 0);

        id v55 = v54;
        sub_1001284FC(v47, v60, v65 & 1, (uint64_t)v45);

        sub_100129200(a1, 1);
        return;
      }
      sub_100107024((uint64_t)v69, (uint64_t)&v67);
      swift_bridgeObjectRelease();
      if (*((void *)&v68 + 1))
      {
        static os_log_type_t.error.getter();
        if (qword_100261938 != -1) {
          swift_once();
        }
        os_log(_:dso:log:_:_:)();
        sub_1000AA894((uint64_t)&v67, (uint64_t *)&unk_1002631B0);
        goto LABEL_7;
      }
      uint64_t v45 = v20;
      int v46 = (uint64_t *)&unk_1002631B0;
    }
    else
    {
      uint64_t v45 = v20;
      int v46 = &qword_1002631A0;
    }
    sub_1000AA894((uint64_t)&v67, v46);
    goto LABEL_27;
  }
  uint64_t v33 = a6;
  char v34 = v65;
  uint64_t v35 = v66;
  static os_log_type_t.error.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
  swift_getErrorValue();
  uint64_t v37 = Error.localizedDescription.getter();
  uint64_t v39 = v38;
  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_1000AA5E0();
  *(void *)(v36 + 32) = v37;
  *(void *)(v36 + 40) = v39;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_errorRetain();
  v63(a1, 1);
  sub_1001284FC(v35, v33, v34 & 1, (uint64_t)a1);
  sub_100129200(a1, 1);
  sub_100129200(a1, 1);
}

uint64_t sub_10011BF2C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, uint64_t a6, int a7)
{
  uint64_t v42 = a6;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_100126CE4();
    swift_allocError();
    *uint64_t v25 = 0;
    a3();
    return swift_errorRelease();
  }
  uint64_t v17 = Strong;
  int v41 = a7;
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1001CFDB0;
    aBlock[0] = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v21 = v20;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_1000AA5E0();
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 40) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100126CE4();
    uint64_t v22 = swift_allocError();
    *id v23 = a1;
    swift_errorRetain();
    ((void (*)(uint64_t, uint64_t))a3)(v22, 1);
    swift_errorRelease();
    swift_errorRetain();
    sub_1001284FC(a5, v42, v41 & 1, a1);
    swift_release();
    swift_errorRelease();
    return swift_errorRelease();
  }
  sub_1000AA024(&qword_100263AE0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001D2D40;
  *(void *)(v26 + 32) = a5;
  aBlock[0] = v26;
  specialized Array._endMutation()();
  unint64_t v40 = aBlock[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v12);
  unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v28 = v27 + v14;
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = a3;
  *((void *)v29 + 3) = a4;
  *((void *)v29 + 4) = v17;
  *((void *)v29 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v29[v27], v15, v12);
  v29[v28] = v41 & 1;
  id v30 = a5;
  swift_retain();
  swift_retain();
  uint64_t v31 = sub_10011C678(v40, (uint64_t)sub_100128D88, (uint64_t)v29);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v31) {
    return swift_release();
  }
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1001CFDB0;
  *(void *)(v32 + 56) = sub_1000B66A0(0, &qword_1002631C0);
  *(void *)(v32 + 64) = sub_100128E34(&qword_1002631C8, &qword_1002631C0);
  *(void *)(v32 + 32) = v31;
  uint64_t v33 = v31;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  char v34 = *(NSObject **)(v17 + 64);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v17;
  *(void *)(v35 + 24) = v33;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_10012A424;
  *(void *)(v36 + 24) = v35;
  aBlock[4] = sub_10012A428;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106FFC;
  aBlock[3] = &unk_1002397F0;
  uint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v38 = v33;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v37);
  swift_release();

  _Block_release(v37);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    return swift_release();
  }
  return result;
}

void sub_10011C510(unint64_t a1, char a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, char a8)
{
  if ((a2 & 1) == 0)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v14 = *(id *)(a1 + 32);
          goto LABEL_7;
        }
LABEL_15:
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
        uint64_t v15 = v14;
        sub_100128F7C(a1, 0);
        a3(v15, 0);

        sub_1001284FC(a6, a7, a8 & 1, 0);
        return;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13) {
        goto LABEL_4;
      }
    }
    sub_100128F7C(a1, 0);
    __break(1u);
    goto LABEL_15;
  }
  swift_errorRetain();
  a3((void *)a1, 1);
  sub_1001284FC(a6, a7, a8 & 1, a1);

  sub_100128F7C(a1, 1);
}

objc_class *sub_10011C678(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t aBlock = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v43 = a2;
    if (v15) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    unint64_t v22 = aBlock;
    if ((aBlock & 0x8000000000000000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v43 = a2;
  if (!v15) {
    goto LABEL_18;
  }
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v16 = a3;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v15; ++i)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v18 = *(void *)(CKRecord.changedKeys()() + 16);
      swift_bridgeObjectRelease();
      if (v18)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      id v20 = *(id *)(a1 + 8 * j + 32);
      uint64_t v21 = *(void *)(CKRecord.changedKeys()() + 16);
      swift_bridgeObjectRelease();
      if (v21)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
  }
  swift_bridgeObjectRelease();
  a3 = v16;
  unint64_t v22 = aBlock;
  if ((aBlock & 0x8000000000000000) != 0) {
    goto LABEL_30;
  }
LABEL_19:
  if ((v22 & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)(v22 + 16);
    goto LABEL_21;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
LABEL_21:
  swift_release();
  if (!v23)
  {
    uint64_t v4 = a3;
    static os_log_type_t.default.getter();
    if (qword_100261938 == -1)
    {
LABEL_28:
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1001CFDB0;
      sub_1000B66A0(0, (unint64_t *)&qword_100262960);
      swift_bridgeObjectRetain();
      uint64_t v33 = Array.description.getter();
      uint64_t v35 = v34;
      swift_bridgeObjectRelease();
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_1000AA5E0();
      *(void *)(v32 + 32) = v33;
      *(void *)(v32 + 40) = v35;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = (void *)swift_allocObject();
      v36[2] = v43;
      v36[3] = v4;
      v36[4] = a1;
      uint64_t v49 = sub_100128F48;
      uint64_t v50 = v36;
      unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_100106F90;
      uint64_t v48 = &unk_100239890;
      uint64_t v37 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      char v44 = _swiftEmptyArrayStorage;
      sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AA024(&qword_100263550);
      sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
      uint64_t v38 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v37);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v38);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
      swift_release();
      return 0;
    }
LABEL_32:
    swift_once();
    goto LABEL_28;
  }
  sub_1000B66A0(0, &qword_1002631C0);
  v51.value._rawValue = (void *)swift_bridgeObjectRetain();
  v51.is_nil = 0;
  id v24 = CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(v51, v52).super.super.super.super.isa;
  id v25 = sub_1001086AC();
  [(objc_class *)v24 setGroup:v25];

  [(objc_class *)v24 setCallbackQueue:*(void *)(v5 + 80)];
  if (qos_class_self() >= QOS_CLASS_USER_INITIATED) {
    [(objc_class *)v24 setQualityOfService:25];
  }
  uint64_t result = (objc_class *)[(objc_class *)v24 configuration];
  if (result)
  {
    unint64_t v27 = result;
    [(objc_class *)result setAutomaticallyRetryNetworkFailures:0];

    uint64_t result = (objc_class *)[(objc_class *)v24 configuration];
    if (result)
    {
      uint64_t v28 = result;
      [(objc_class *)result setDiscretionaryNetworkBehavior:0];

      uint64_t v29 = (void *)swift_allocObject();
      uint64_t v30 = v43;
      v29[2] = a1;
      v29[3] = v30;
      void v29[4] = a3;
      v29[5] = v5;
      uint64_t v49 = sub_100128ED4;
      uint64_t v50 = v29;
      unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_10011D658;
      uint64_t v48 = &unk_100239840;
      uint64_t v31 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      [(objc_class *)v24 setModifyRecordsCompletionBlock:v31];
      _Block_release(v31);
      return v24;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10011CDA8()
{
  v0._uint64_t countAndFlagsBits = 8236;
  v0._object = (void *)0xE200000000000000;
  String.append(_:)(v0);
  type metadata accessor for CKError(0);
  sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
  _BridgedStoredNSError.code.getter();
  id v1 = (id)stringForCKErrorCode();
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  return swift_bridgeObjectRelease();
}

void sub_10011CE80(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = a3;
  if (a1)
  {
    if (!a3)
    {
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
      *(void *)(v8 + 56) = sub_1000AA024(&qword_1002631D0);
      *(void *)(v8 + 64) = sub_1000B5E24(&qword_1002631D8, &qword_1002631D0);
      *(void *)(v8 + 32) = a4;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      if (IsAppleInternalBuild()) {
        static os_log_type_t.default.getter();
      }
      else {
        static os_log_type_t.debug.getter();
      }
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v6 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      uint64_t v40 = (void (*)(unint64_t, void))a5;
      a5 = _swiftEmptyArrayStorage;
      if (!v6)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v34 = Array.description.getter();
        uint64_t v36 = v35;
        swift_bridgeObjectRelease();
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = sub_1000AA5E0();
        *(void *)(v38 + 32) = v34;
        *(void *)(v38 + 40) = v36;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        v40(a1, 0);
        return;
      }
      uint64_t v15 = 0;
      uint64_t v43 = v6;
      unint64_t v44 = a4 & 0xC000000000000001;
      unint64_t v41 = a4 + 32;
      unint64_t v42 = a4;
      uint64_t v16 = _swiftEmptyArrayStorage;
      while (1)
      {
        id v17 = v44 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v41 + 8 * v15);
        uint64_t v18 = v17;
        BOOL v19 = __OFADD__(v15, 1);
        uint64_t v20 = v15 + 1;
        if (v19) {
          break;
        }
        uint64_t v45 = v16;
        uint64_t v46 = v20;
        id v21 = [objc_msgSend(v17, "encryptedValues") allKeys];
        swift_unknownObjectRelease();
        uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v23 = *(void *)(v22 + 16);
        if (v23)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = v22 + 40;
          do
          {
            swift_bridgeObjectRetain();
            id v25 = [v18 encryptedValues];
            NSString v26 = String._bridgeToObjectiveC()();
            id v27 = [v25 objectForKeyedSubscript:v26];
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease();
            if (v27)
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v24 += 16;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease();
          a4 = v42;
        }
        swift_bridgeObjectRelease();
        sub_1000AA024(&qword_1002629D0);
        uint64_t v28 = Array.description.getter();
        uint64_t v30 = v29;

        swift_bridgeObjectRelease();
        uint64_t v16 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = sub_1001B2DA0(0, v45[2] + 1, 1, v45);
        }
        a5 = _swiftEmptyArrayStorage;
        unint64_t v32 = v16[2];
        unint64_t v31 = v16[3];
        if (v32 >= v31 >> 1) {
          uint64_t v16 = sub_1001B2DA0((void *)(v31 > 1), v32 + 1, 1, v16);
        }
        v16[2] = v32 + 1;
        uint64_t v33 = &v16[2 * v32];
        v33[4] = v28;
        v33[5] = v30;
        uint64_t v6 = v43;
        uint64_t v15 = v46;
        if (v46 == v43) {
          goto LABEL_42;
        }
      }
      __break(1u);
      goto LABEL_44;
    }
  }
  else if (!a3)
  {
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_100126CE4();
    uint64_t v13 = swift_allocError();
    *id v14 = 0;
    ((void (*)(uint64_t, uint64_t))a5)(v13, 1);
    swift_errorRelease();
    return;
  }
  a4 = a1;
  swift_errorRetain();
  static os_log_type_t.error.getter();
  if (qword_100261938 != -1) {
LABEL_44:
  }
    swift_once();
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
  swift_getErrorValue();
  uint64_t v10 = Error.localizedDescription.getter();
  uint64_t v12 = v11;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_1000AA5E0();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100115204(v6, 0);
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
    _BridgedStoredNSError.code.getter();
    if (v6 == 2 && a4)
    {
      if (a4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v37 >= 2) {
          goto LABEL_14;
        }
      }
      else if (*(uint64_t *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
      {
LABEL_14:
        ((void (*)(unint64_t, void))a5)(a4, 0);
        swift_errorRetain();
        ((void (*)(uint64_t, uint64_t))a5)(v6, 1);
        swift_errorRelease();
        swift_errorRelease();

        return;
      }
    }
  }
  swift_errorRetain();
  ((void (*)(uint64_t, uint64_t))a5)(v6, 1);
  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_10011D658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_10011D67C(a1, a2, a3, a4, (unint64_t *)&qword_100262960, (uint64_t)CKRecord_ptr, &qword_1002629E0);
}

uint64_t sub_10011D67C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v10 = a2;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000B66A0(0, a5);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a3)
  {
    sub_1000B66A0(0, a7);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v12 = a4;
  v11(v10, a3, a4);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10011D75C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  id v7 = a2;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1001266A8(v8, v7);
  uint64_t v10 = v9;
  id v12 = v11;
  swift_bridgeObjectRelease();

  uint64_t v132 = a1;
  if (v10)
  {
    sub_100126CE4();
    uint64_t v13 = swift_allocError();
    *id v14 = 5;
    v139[0] = v13;
    v12(v139);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v15 = sub_100122944((uint64_t)v10, (uint64_t (*)(uint64_t))sub_1000B5140, (uint64_t *)&unk_100261EC0);
    swift_endAccess();
    if (v15) {
      sub_1001228A0(v15);
    }
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1001CFDB0;
    id v17 = v10;
    id v18 = [v17 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_1000AA5E0();
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v21;
    os_log(_:dso:log:_:_:)();
    swift_release();

    swift_bridgeObjectRelease();
    a1 = v132;
  }
  swift_beginAccess();
  id v22 = v7;
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_100125B90(v23, v22);
  id v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();

  long long v131 = (uint64_t *)(a1 + 112);
  if (v25)
  {
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v27;
    *(void *)(v30 + 24) = v29;
    uint64_t v126 = v30;
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1001CFDB0;
    id v32 = v25;
    id v33 = [v32 description];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;
    uint64_t v125 = v32;

    *(void *)(v31 + 56) = &type metadata for String;
    unint64_t v37 = sub_1000AA5E0();
    *(void *)(v31 + 64) = v37;
    *(void *)(v31 + 32) = v34;
    *(void *)(v31 + 40) = v36;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
    id v39 = v22;
    id v40 = [v39 description];
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = v37;
    *(void *)(v38 + 32) = v41;
    *(void *)(v38 + 40) = v43;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    if (IsAppleInternalBuild()) {
      static os_log_type_t.default.getter();
    }
    else {
      static os_log_type_t.debug.getter();
    }
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1001D0A20;
    id v72 = [v39 recordID];
    id v73 = [v72 description];
    uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v75;

    *(void *)(v71 + 56) = &type metadata for String;
    *(void *)(v71 + 64) = v37;
    *(void *)(v71 + 32) = v74;
    *(void *)(v71 + 40) = v76;
    id v77 = [[objc_msgSend(v39, "encryptedValues") allKeys];
    swift_unknownObjectRelease();
    uint64_t v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v79 = v39;
    sub_1001251DC(v78, v79);
    swift_bridgeObjectRelease();

    sub_1000AA024(&qword_1002629D0);
    uint64_t v80 = Array.description.getter();
    uint64_t v82 = v81;
    swift_bridgeObjectRelease();
    *(void *)(v71 + 96) = &type metadata for String;
    *(void *)(v71 + 104) = v37;
    *(void *)(v71 + 72) = v80;
    *(void *)(v71 + 80) = v82;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v83 = sub_100122944((uint64_t)v125, (uint64_t (*)(uint64_t))sub_1000B50F0, &qword_100263190);
    swift_endAccess();
    a1 = v132;
    if (v83) {
      sub_1001228A0(v83);
    }
    uint64_t v84 = (void *)swift_allocObject();
    v84[2] = v125;
    v84[3] = sub_100126FB4;
    v84[4] = v126;
    v84[5] = a3;
    v84[6] = a4;
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = sub_100127004;
    *(void *)(v85 + 24) = v84;
    swift_beginAccess();
    id v86 = v125;
    swift_retain();
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v133 = *v131;
    *long long v131 = 0x8000000000000000;
    uint64_t v88 = sub_1001247F0((uint64_t)sub_100126FB0, v85, v79, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_1000B50F0, &qword_100263190, (unint64_t *)&qword_100262960);
    *long long v131 = v133;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();

    swift_release();
    if (v88)
    {
LABEL_27:
      char v89 = a5;
LABEL_28:
      sub_1001228A0(v88);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  id v44 = [v22 encryptedValues];
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v44 objectForKeyedSubscript:v45];
  swift_unknownObjectRelease();

  if (!v46) {
    goto LABEL_43;
  }
  sub_1000AA024(&qword_1002629D0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_43;
  }
  id v47 = v22;
  swift_bridgeObjectRetain();
  uint64_t v48 = swift_bridgeObjectRetain();
  sub_100125E6C(v48, v136, (uint64_t)v137);
  uint64_t v50 = v49;
  uint64_t v127 = v51;
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  if (!v50)
  {
LABEL_43:
    if (IsAppleInternalBuild()) {
      static os_log_type_t.default.getter();
    }
    else {
      static os_log_type_t.debug.getter();
    }
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v90 = swift_allocObject();
    *(_OWORD *)(v90 + 16) = xmmword_1001D0A20;
    id v91 = [v22 recordID];
    id v92 = [v91 description];
    uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v95 = v94;

    *(void *)(v90 + 56) = &type metadata for String;
    unint64_t v96 = sub_1000AA5E0();
    *(void *)(v90 + 64) = v96;
    *(void *)(v90 + 32) = v93;
    *(void *)(v90 + 40) = v95;
    id v97 = [[objc_msgSend(v22, "encryptedValues") allKeys];
    swift_unknownObjectRelease();
    uint64_t v98 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v99 = v22;
    sub_1001251DC(v98, v99);
    swift_bridgeObjectRelease();

    sub_1000AA024(&qword_1002629D0);
    uint64_t v100 = Array.description.getter();
    uint64_t v102 = v101;
    swift_bridgeObjectRelease();
    *(void *)(v90 + 96) = &type metadata for String;
    *(void *)(v90 + 104) = v96;
    *(void *)(v90 + 72) = v100;
    *(void *)(v90 + 80) = v102;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = a3;
    *(void *)(v103 + 24) = a4;
    swift_beginAccess();
    swift_retain();
    char v104 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = *v131;
    *long long v131 = 0x8000000000000000;
    uint64_t v88 = sub_1001247F0((uint64_t)sub_100126FB0, v103, v99, v104, (uint64_t (*)(void *))sub_1000B50F0, &qword_100263190, (unint64_t *)&qword_100262960);
    *long long v131 = v134;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (v88) {
      goto LABEL_27;
    }
LABEL_33:
    char v89 = a5;
    goto LABEL_34;
  }
  uint64_t v54 = v53;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v127;
  *(void *)(v55 + 24) = v54;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1001D0A20;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_100126FB4;
  *(void *)(v57 + 24) = v55;
  v137 = sub_100126FB0;
  uint64_t v138 = v57;
  id v58 = v50;
  swift_retain();
  sub_1000AA024(&qword_100263198);
  uint64_t v59 = String.init<A>(describing:)();
  uint64_t v61 = v60;
  *(void *)(v56 + 56) = &type metadata for String;
  unint64_t v62 = sub_1000AA5E0();
  *(void *)(v56 + 64) = v62;
  *(void *)(v56 + 32) = v59;
  *(void *)(v56 + 40) = v61;
  id v63 = v47;
  id v64 = [v63 description];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  *(void *)(v56 + 96) = &type metadata for String;
  *(void *)(v56 + 104) = v62;
  *(void *)(v56 + 72) = v65;
  *(void *)(v56 + 80) = v67;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100126CE4();
  uint64_t v68 = swift_allocError();
  *Swift::String v69 = 5;
  uint64_t v136 = v68;
  LOBYTE(v137) = 1;
  swift_retain();
  v127(&v136);
  swift_errorRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v70 = sub_100122944((uint64_t)v58, (uint64_t (*)(uint64_t))sub_1000B50F0, &qword_100263190);
  swift_endAccess();
  if (v70) {
    sub_1001228A0(v70);
  }
  if (IsAppleInternalBuild()) {
    static os_log_type_t.default.getter();
  }
  else {
    static os_log_type_t.debug.getter();
  }
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_1001D0A20;
  id v112 = [v63 recordID];
  id v113 = [v112 description];
  uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v116 = v115;

  *(void *)(v111 + 56) = &type metadata for String;
  *(void *)(v111 + 64) = v62;
  *(void *)(v111 + 32) = v114;
  *(void *)(v111 + 40) = v116;
  id v117 = [[objc_msgSend(v63, "encryptedValues") allKeys];
  swift_unknownObjectRelease();
  uint64_t v118 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v119 = v63;
  sub_1001251DC(v118, v119);
  swift_bridgeObjectRelease();

  uint64_t v120 = Array.description.getter();
  uint64_t v122 = v121;
  swift_bridgeObjectRelease();
  *(void *)(v111 + 96) = &type metadata for String;
  *(void *)(v111 + 104) = v62;
  *(void *)(v111 + 72) = v120;
  *(void *)(v111 + 80) = v122;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v123 = swift_allocObject();
  *(void *)(v123 + 16) = a3;
  *(void *)(v123 + 24) = a4;
  swift_beginAccess();
  swift_retain();
  char v124 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v135 = *v131;
  *long long v131 = 0x8000000000000000;
  uint64_t v88 = sub_1001247F0((uint64_t)sub_100126FB0, v123, v119, v124, (uint64_t (*)(void *))sub_1000B50F0, &qword_100263190, (unint64_t *)&qword_100262960);
  *long long v131 = v135;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  swift_release();

  if (v88)
  {
    char v89 = a5;
    a1 = v132;
    goto LABEL_28;
  }
  char v89 = a5;
  a1 = v132;
LABEL_34:
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v105 = swift_allocObject();
  *(_OWORD *)(v105 + 16) = xmmword_1001D0A20;
  uint64_t v106 = *(void *)(*(void *)(a1 + 112) + 16);
  *(void *)(v105 + 56) = &type metadata for Int;
  *(void *)(v105 + 64) = &protocol witness table for Int;
  *(void *)(v105 + 32) = v106;
  uint64_t v107 = swift_bridgeObjectRetain();
  sub_10010746C(v107);
  uint64_t v109 = v108;
  swift_bridgeObjectRelease();
  *(void *)(v105 + 96) = sub_1000AA024(&qword_100261DA0);
  *(void *)(v105 + 104) = sub_1000B5E24(&qword_100263180, &qword_100261DA0);
  *(void *)(v105 + 72) = v109;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return sub_10010A0E8(v89 & 1);
}

uint64_t sub_10011E840@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  swift_retain();
  id v4 = [v3 recordID];
  id v5 = [v4 recordName];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v8;
  id v11 = v3;
  uint64_t v12 = CKRecord.recordType.getter();
  id v14 = v13;

  uint64_t v26 = v6;
  uint64_t v27 = v10;
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = 58;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = v6;
  uint64_t v17 = (uint64_t)v10;
  id v19 = [v11 encryptedValues];

  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 objectForKeyedSubscript:v20];
  swift_unknownObjectRelease();

  if (v21 && (sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
  {
    uint64_t v22 = v26;
    uint64_t v23 = v27;
  }
  else
  {
    uint64_t v23 = (void *)0xE200000000000000;
    uint64_t v22 = 15932;
  }
  swift_bridgeObjectRetain();
  v24._uint64_t countAndFlagsBits = v22;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v17;
  return result;
}

uint64_t sub_10011EA7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_10011EAC0(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1002394B8, (uint64_t)sub_10012292C, (uint64_t)&unk_1002394D0);
}

uint64_t sub_10011EAC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v25 = a7;
  uint64_t v24 = a5;
  uint64_t v26 = a10;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)(a3 + 72);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  *(void *)(v20 + 32) = v24;
  *(void *)(v20 + 40) = a6;
  *(unsigned char *)(v20 + 48) = v25;
  aBlock[4] = a9;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = v26;
  id v21 = _Block_copy(aBlock);
  swift_retain();
  id v22 = a4;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v28);
  return swift_release();
}

uint64_t sub_10011EDA0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  id v7 = a2;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1001261E8(v8, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  uint64_t v54 = a1;
  if (v10)
  {
    uint64_t v50 = v12;
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
    id v14 = v10;
    id v15 = [v14 description];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_1000AA5E0();
    *(void *)(v13 + 32) = v16;
    *(void *)(v13 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100126CE4();
    uint64_t v19 = swift_allocError();
    void *v20 = 5;
    uint64_t v57 = v19;
    char v58 = 1;
    v50(&v57);
    swift_errorRelease();
    swift_beginAccess();
    uint64_t v21 = sub_100122944((uint64_t)v14, (uint64_t (*)(uint64_t))sub_1000B50F0, &qword_100263190);
    swift_endAccess();
    swift_release();

    a1 = v54;
    if (v21) {
      sub_1001228A0(v21);
    }
  }
  id v22 = (uint64_t *)(a1 + 120);
  swift_beginAccess();
  id v23 = v7;
  uint64_t v24 = swift_bridgeObjectRetain();
  sub_100126960(v24, v23);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();

  if (v26)
  {
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v28;
    *(void *)(v31 + 24) = v30;
    id v32 = (void *)swift_allocObject();
    v32[2] = v26;
    v32[3] = sub_100126C5C;
    v32[4] = v31;
    v32[5] = a3;
    v32[6] = a4;
    swift_retain();
    id v33 = v26;
    swift_retain();
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1001CFDB0;
    id v35 = v33;
    id v36 = [v35 description];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_1000AA5E0();
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 40) = v39;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_100126C98;
    *(void *)(v40 + 24) = v32;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v55 = *v22;
    uint64_t *v22 = 0x8000000000000000;
    uint64_t v42 = sub_1001247F0((uint64_t)sub_10012A430, v40, v35, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_1000B5140, (uint64_t *)&unk_100261EC0, &qword_1002629E0);
    uint64_t *v22 = v55;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();

    swift_release();
    a1 = v54;
    if (v42) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = a3;
    *(void *)(v48 + 24) = a4;
    swift_beginAccess();
    swift_retain();
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v56 = *v22;
    uint64_t *v22 = 0x8000000000000000;
    uint64_t v42 = sub_1001247F0((uint64_t)sub_100126C30, v48, v23, v49, (uint64_t (*)(void *))sub_1000B5140, (uint64_t *)&unk_100261EC0, &qword_1002629E0);
    uint64_t *v22 = v56;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (v42) {
LABEL_10:
    }
      sub_1001228A0(v42);
  }
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1001D0A20;
  uint64_t v44 = *(void *)(*(void *)(a1 + 120) + 16);
  *(void *)(v43 + 56) = &type metadata for Int;
  *(void *)(v43 + 64) = &protocol witness table for Int;
  *(void *)(v43 + 32) = v44;
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_1001076F4(v45);
  swift_bridgeObjectRelease();
  *(void *)(v43 + 96) = sub_1000AA024(&qword_100261DA0);
  *(void *)(v43 + 104) = sub_1000B5E24(&qword_100263180, &qword_100261DA0);
  *(void *)(v43 + 72) = v46;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return sub_10010A0E8(a5 & 1);
}

uint64_t sub_10011F48C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v8 = result;
    sub_1000B66A0(0, &qword_100263158);
    uint64_t v9 = self;
    queue = *(NSObject **)(v6 + 64);
    id v26 = (id)v9;
    swift_bridgeObjectRetain();
    id v32 = 0;
    uint64_t v10 = v7 - 1;
    id v11 = (void **)(v8 + 40);
    uint64_t v12 = v6;
    while (1)
    {
      uint64_t v13 = (uint64_t)*(v11 - 1);
      id v14 = *v11;
      swift_bridgeObjectRetain_n();
      id v15 = (NSPredicate *)[v26 predicateWithValue:1];
      v16._uint64_t countAndFlagsBits = v13;
      v16._object = v14;
      Class isa = CKQuery.init(recordType:predicate:)(v16, v15).super.isa;
      id v18 = [objc_allocWithZone((Class)CKQueryOperation) initWithQuery:isa];
      [v18 setZoneID:a2];
      uint64_t v19 = swift_allocObject();
      swift_weakInit();
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = a3;
      v20[3] = a4;
      v20[4] = a5;
      v20[5] = a6;
      v20[6] = v19;
      v20[7] = v13;
      v20[8] = v14;
      sub_100122708(a3, a4);
      swift_retain();
      CKQueryOperation.recordMatchedBlock.setter();
      swift_release();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v12;
      *(void *)(v21 + 24) = v18;
      swift_retain();
      id v22 = v18;
      sub_1001228A0((uint64_t)v32);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_100122884;
      *(void *)(v23 + 24) = v21;
      aBlock[4] = sub_1001228C0;
      aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100106FFC;
      aBlock[3] = &unk_100239430;
      uint64_t v24 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      dispatch_sync(queue, v24);

      _Block_release(v24);
      LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
      uint64_t result = swift_release();
      if (v22) {
        break;
      }
      if (!v10)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v11 += 2;
      --v10;
      id v32 = sub_100122884;
    }
    __break(1u);
  }
  return result;
}

void sub_10011F7B0(void *a1, void **a2, char a3, uint64_t a4, uint64_t a5, void **a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a3)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1001D0A20;
    id v21 = a1;
    id v22 = [v21 description];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)(v20 + 56) = &type metadata for String;
    unint64_t v26 = sub_1000AA5E0();
    *(void *)(v20 + 64) = v26;
    *(void *)(v20 + 32) = v23;
    *(void *)(v20 + 40) = v25;
    unint64_t aBlock = a2;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v27 = String.init<A>(describing:)();
    *(void *)(v20 + 96) = &type metadata for String;
    *(void *)(v20 + 104) = v26;
    *(void *)(v20 + 72) = v27;
    *(void *)(v20 + 80) = v28;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v29 = a2;
    char v30 = 1;
    goto LABEL_11;
  }
  uint64_t v13 = a10;
  if (!a5)
  {
    uint64_t v31 = a2;
LABEL_20:
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1001CFDB0;
    id v40 = a1;
    id v41 = [v40 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_1000AA5E0();
    *(void *)(v39 + 32) = v42;
    *(void *)(v39 + 40) = v44;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      id v45 = sub_100108418();
      id v46 = [v45 privateCloudDatabase];
      swift_release();

      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = a9;
      *(void *)(v47 + 24) = v13;
      uint64_t v53 = sub_100122920;
      uint64_t v54 = v47;
      unint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v50 = 1107296256;
      Swift::OpaquePointer_optional v51 = sub_100119F54;
      uint64_t v52 = &unk_100239480;
      uint64_t v48 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_release();
      [v46 deleteRecordWithID:v40 completionHandler:v48];
      sub_100129200(a2, 0);
      _Block_release(v48);

      return;
    }
    uint64_t v29 = a2;
    char v30 = 0;
LABEL_11:
    sub_100129200(v29, v30);
    return;
  }
  sub_1001227E8(a2, 0);
  sub_100122708(a4, a5);
  id v17 = [a2 encryptedValues];
  swift_bridgeObjectRetain();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 objectForKeyedSubscript:v18];
  swift_unknownObjectRelease();

  if (v19)
  {
    id v55 = v19;
    sub_1000AA024(&qword_1002629D0);
    if (swift_dynamicCast())
    {
      if (aBlock == a6 && v50 == a7)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        static os_log_type_t.default.getter();
        if (qword_100261938 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1001D2D20;
        *(void *)(v33 + 56) = &type metadata for String;
        unint64_t v34 = sub_1000AA5E0();
        *(void *)(v33 + 32) = a4;
        *(void *)(v33 + 40) = a5;
        *(void *)(v33 + 96) = &type metadata for String;
        *(void *)(v33 + 104) = v34;
        *(void *)(v33 + 64) = v34;
        *(void *)(v33 + 72) = a6;
        *(void *)(v33 + 80) = a7;
        id v35 = [a2 description];
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        sub_100129200(a2, 0);
        *(void *)(v33 + 136) = &type metadata for String;
        *(void *)(v33 + 144) = v34;
        *(void *)(v33 + 112) = v36;
        *(void *)(v33 + 120) = v38;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v13 = a10;
        goto LABEL_20;
      }
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_17;
      }
    }
    sub_100129200(a2, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100129200(a2, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10011FDCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1001D0A20;
    id v6 = a1;
    sub_1000AA024((uint64_t *)&unk_100263170);
    uint64_t v7 = String.init<A>(describing:)();
    uint64_t v9 = v8;
    *(void *)(v5 + 56) = &type metadata for String;
    unint64_t v10 = sub_1000AA5E0();
    *(void *)(v5 + 64) = v10;
    *(void *)(v5 + 32) = v7;
    *(void *)(v5 + 40) = v9;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v11 = String.init<A>(describing:)();
    *(void *)(v5 + 96) = &type metadata for String;
    *(void *)(v5 + 104) = v10;
    *(void *)(v5 + 72) = v11;
    *(void *)(v5 + 80) = v12;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1001D0A20;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v17 = sub_1000AA5E0();
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 32) = a3;
    *(void *)(v16 + 40) = a4;
    id v18 = a1;
    swift_bridgeObjectRetain();
    sub_1000AA024((uint64_t *)&unk_100263170);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v17;
    *(void *)(v16 + 72) = v19;
    *(void *)(v16 + 80) = v20;
    os_log(_:dso:log:_:_:)();
    return swift_bridgeObjectRelease();
  }
}

void sub_10012001C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1001200A8(uint64_t a1, uint64_t a2)
{
  id v3 = sub_100108418();
  id v4 = [v3 privateCloudDatabase];

  [v4 addOperation:a2];
}

uint64_t sub_100120120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v63 = a8;
  uint64_t v64 = a6;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v66 = result;
    uint64_t v56 = v21;
    uint64_t v57 = v19;
    uint64_t v55 = a11;
    uint64_t v23 = a10;
    dispatch_group_t v65 = dispatch_group_create();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = _swiftEmptyArrayStorage;
    uint64_t v25 = a4;
    uint64_t v26 = *(void *)(a4 + 16);
    uint64_t v67 = v24;
    if (v26)
    {
      v50[0] = a10;
      Swift::OpaquePointer_optional v51 = v17;
      uint64_t v52 = v18;
      uint64_t v53 = v15;
      uint64_t v54 = v14;
      uint64_t v62 = a9;
      uint64_t v61 = sub_1000B66A0(0, &qword_100263158);
      id v60 = self;
      swift_bridgeObjectRetain();
      v50[1] = v25;
      uint64_t v27 = (void **)(v25 + 40);
      uint64_t v59 = a7;
      uint64_t v58 = a5;
      uint64_t v28 = v64;
      do
      {
        uint64_t v68 = v26;
        uint64_t v29 = (uint64_t)*(v27 - 1);
        char v30 = *v27;
        swift_bridgeObjectRetain();
        dispatch_group_t v31 = v65;
        dispatch_group_enter(v65);
        char v32 = (NSPredicate *)[v60 predicateWithValue:1];
        v33._uint64_t countAndFlagsBits = v29;
        v33._object = v30;
        Class isa = CKQuery.init(recordType:predicate:)(v33, v32).super.isa;
        id v35 = [objc_allocWithZone((Class)CKQueryOperation) initWithQuery:isa];
        [v35 setZoneID:v58];
        uint64_t v36 = (void *)swift_allocObject();
        uint64_t v37 = v59;
        v36[2] = v28;
        v36[3] = v37;
        uint64_t v38 = v62;
        v36[4] = v63;
        v36[5] = v38;
        v36[6] = v67;
        swift_retain();
        sub_100122708(v28, v37);
        CKQueryOperation.recordMatchedBlock.setter();
        *(void *)(swift_allocObject() + 16) = v31;
        uint64_t v39 = v31;
        uint64_t v40 = v68;
        CKQueryOperation.queryResultBlock.setter();
        id v41 = *(void **)(v66 + 64);
        uint64_t v42 = swift_allocObject();
        uint64_t v43 = swift_weakInit();
        __chkstk_darwin(v43);
        v50[-2] = v42;
        v50[-1] = v35;
        id v44 = v41;
        sub_1000AA024((uint64_t *)&unk_100263160);
        OS_dispatch_queue.sync<A>(execute:)();

        swift_release();
        v27 += 2;
        uint64_t v26 = v40 - 1;
      }
      while (v26);
      swift_bridgeObjectRelease();
      uint64_t v14 = v54;
      uint64_t v15 = v53;
      uint64_t v18 = v52;
      unint64_t v17 = v51;
      uint64_t v24 = v67;
      uint64_t v23 = v50[0];
    }
    uint64_t v68 = *(void *)(v66 + 80);
    id v45 = (void *)swift_allocObject();
    uint64_t v46 = v55;
    v45[2] = v23;
    v45[3] = v46;
    v45[4] = v24;
    aBlock[4] = sub_1001227DC;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_100239390;
    uint64_t v47 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v48 = v56;
    static DispatchQoS.unspecified.getter();
    Swift::String v69 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v49 = v65;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v18);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100120754(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1001D0A20;
    id v19 = a1;
    id v20 = [v19 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v24 = sub_1000AA5E0();
    *(void *)(v18 + 64) = v24;
    *(void *)(v18 + 32) = v21;
    *(void *)(v18 + 40) = v23;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v25 = String.init<A>(describing:)();
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v24;
    *(void *)(v18 + 72) = v25;
    *(void *)(v18 + 80) = v26;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = a2;
    char v28 = 1;
    goto LABEL_26;
  }
  if (!a5)
  {
    id v29 = a2;
LABEL_20:
    uint64_t v37 = (void *)(a8 + 16);
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
    id v39 = a2;
    id v40 = [v39 description];
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;

    sub_100129200(a2, 0);
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_1000AA5E0();
    *(void *)(v38 + 32) = v41;
    *(void *)(v38 + 40) = v43;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v44 = v39;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    goto LABEL_25;
  }
  sub_1001227E8(a2, 0);
  sub_100122708(a4, a5);
  id v14 = [a2 encryptedValues];
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v14 objectForKeyedSubscript:v15];
  swift_unknownObjectRelease();

  if (v16)
  {
    sub_1000AA024(&qword_1002629D0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_25:
      uint64_t v27 = a2;
      char v28 = 0;
LABEL_26:
      sub_100129200(v27, v28);
      return;
    }
    if (v45 == a6 && v46 == a7)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1001D2D20;
      *(void *)(v31 + 56) = &type metadata for String;
      unint64_t v32 = sub_1000AA5E0();
      *(void *)(v31 + 32) = a4;
      *(void *)(v31 + 40) = a5;
      *(void *)(v31 + 96) = &type metadata for String;
      *(void *)(v31 + 104) = v32;
      *(void *)(v31 + 64) = v32;
      *(void *)(v31 + 72) = a6;
      *(void *)(v31 + 80) = a7;
      id v33 = [a2 description];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v36 = v35;

      sub_100129200(a2, 0);
      *(void *)(v31 + 136) = &type metadata for String;
      *(void *)(v31 + 144) = v32;
      *(void *)(v31 + 112) = v34;
      *(void *)(v31 + 120) = v36;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_17;
    }
    sub_100129200(a2, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100129200(a2, 0);
  }
}

void sub_100120CC0(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v5 = sub_100108418();
    id v6 = [v5 privateCloudDatabase];
    swift_release();

    [v6 addOperation:a1];
  }
  *a2 = Strong == 0;
}

uint64_t sub_100120D7C(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100121084(void *a1)
{
  id v2 = [a1 databaseScope];
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
  *(void *)(v3 + 56) = sub_1000B66A0(0, &qword_100263270);
  *(void *)(v3 + 64) = sub_100128E34(&qword_100263278, &qword_100263270);
  *(void *)(v3 + 32) = a1;
  id v4 = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v2;
  swift_retain();
  sub_10011A9F8((uint64_t)sub_100129044, v6);
  swift_release();

  return swift_release();
}

uint64_t sub_10012123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = *(void *)(result + 72);
    uint64_t v14 = swift_allocObject();
    uint64_t v19 = v6;
    uint64_t v21 = v9;
    uint64_t v15 = v14;
    swift_weakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = a4;
    aBlock[4] = sub_10012904C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_100239908;
    unint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10012156C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_100111F48(a2, 0, (uint64_t)sub_100129054, a1);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100121608(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_1000AA5E0();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
      _BridgedStoredNSError.code.getter();
      if (a1 != 4)
      {
        _BridgedStoredNSError.code.getter();
        if (a1 != 3)
        {
          sub_100129000(a1, 1);

          return;
        }
      }
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_100119F58(150.0);

        sub_100129000(a1, 1);
        swift_release();
        return;
      }
    }
    sub_100129000(a1, 1);
    return;
  }
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }

  os_log(_:dso:log:_:_:)();
}

void sub_1001218F8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 recordZoneID];
  if (v4)
  {
    id v17 = v4;
    id v5 = [a1 databaseScope];
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
    *(void *)(v6 + 56) = sub_1000B66A0(0, &qword_100263250);
    *(void *)(v6 + 64) = sub_100128E34(&qword_100263258, &qword_100263250);
    *(void *)(v6 + 32) = a1;
    id v7 = a1;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    if (v5 == (id)1 || v5 == (id)3)
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      if (v5 != (id)2)
      {
        static os_log_type_t.error.getter();
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
        type metadata accessor for Scope(0);
        uint64_t v14 = String.init<A>(describing:)();
        uint64_t v16 = v15;
        *(void *)(v13 + 56) = &type metadata for String;
        *(void *)(v13 + 64) = sub_1000AA5E0();
        *(void *)(v13 + 32) = v14;
        *(void *)(v13 + 40) = v16;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();

        return;
      }
      id v8 = sub_100108418();
      id v9 = [v8 privateCloudDatabase];

      sub_1000AA024(&qword_100263AE0);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1001D2D40;
      *(void *)(v10 + 32) = v17;
      uint64_t v18 = v10;
      specialized Array._endMutation()();
      id v17 = v17;
      swift_retain();
      sub_10010FC08(v9, 0, v18, (uint64_t)sub_100128FF4, v2);

      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    *(void *)(v11 + 56) = sub_1000B66A0(0, &qword_100263250);
    *(void *)(v11 + 64) = sub_100128E34(&qword_100263258, &qword_100263250);
    *(void *)(v11 + 32) = a1;
    id v12 = a1;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
}

void sub_100121D78(uint64_t a1, char a2)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CFDB0;
  id v5 = sub_100108418();
  id v6 = [v5 privateCloudDatabase];

  *(void *)(v4 + 56) = sub_1000B66A0(0, &qword_100263260);
  *(void *)(v4 + 64) = sub_100128E34(&qword_100263268, &qword_100263260);
  *(void *)(v4 + 32) = v6;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001CFDB0;
    swift_getErrorValue();
    uint64_t v8 = Error.localizedDescription.getter();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_1000AA5E0();
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
      _BridgedStoredNSError.code.getter();
      if (a1 == 4 || (_BridgedStoredNSError.code.getter(), a1 == 3)) {
        sub_100119F58(150.0);
      }
      sub_100129000(a1, 1);
    }
    else
    {
      sub_100129000(a1, 1);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
  }
}

void sub_1001220D4(void *a1)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
  *(void *)(v2 + 56) = sub_1000B66A0(0, &qword_100263238);
  *(void *)(v2 + 64) = sub_100128E34((unint64_t *)&unk_100263240, &qword_100263238);
  *(void *)(v2 + 32) = a1;
  id v3 = a1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v4 = [v3 userInfo];
  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1001225A0);
  }
  id v5 = v4;
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [self notificationFromRemoteNotificationDictionary:isa];

  static os_log_type_t.error.getter();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
  id v9 = v7;
  sub_1000AA024(&qword_100263570);
  uint64_t v10 = String.init<A>(describing:)();
  uint64_t v12 = v11;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v13 = sub_1000AA5E0();
  *(void *)(v8 + 64) = v13;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v12;
  os_log(_:dso:log:_:_:)();
  uint64_t v14 = v9;
  swift_bridgeObjectRelease();
  if (v9)
  {
    switch((unint64_t)[v9 notificationType])
    {
      case 1uLL:
      case 3uLL:
        goto LABEL_13;
      case 2uLL:
        self;
        uint64_t v18 = swift_dynamicCastObjCClass();
        if (!v18) {
          goto LABEL_13;
        }
        uint64_t v19 = (void *)v18;
        id v20 = v14;
        sub_1001218F8(v19);
        goto LABEL_11;
      case 4uLL:
        self;
        uint64_t v21 = swift_dynamicCastObjCClass();
        if (v21)
        {
          uint64_t v22 = (void *)v21;
          id v20 = v14;
          sub_100121084(v22);
LABEL_11:
        }
        else
        {
LABEL_13:
          static os_log_type_t.error.getter();
          os_log(_:dso:log:_:_:)();
LABEL_14:
        }
        break;
      default:
        static os_log_type_t.error.getter();
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1001CFDB0;
        type metadata accessor for NotificationType(0);
        uint64_t v24 = String.init<A>(describing:)();
        *(void *)(v23 + 56) = &type metadata for String;
        *(void *)(v23 + 64) = v13;
        *(void *)(v23 + 32) = v24;
        *(void *)(v23 + 40) = v25;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        goto LABEL_14;
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v13;
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
}

void sub_100122600(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available);
}

uint64_t sub_100122618()
{
  return sub_10011AEA8(v0[2], v0[3], v0[4]);
}

uint64_t sub_100122624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100122634()
{
  return swift_release();
}

uint64_t sub_10012263C()
{
  return sub_100128EF8((void (*)(void))&_swift_release);
}

uint64_t sub_100122658()
{
  return sub_100128EF8((void (*)(void))&_swift_release);
}

uint64_t sub_100122670()
{
  return (*(uint64_t (**)(void, _UNKNOWN **))(v0 + 16))(*(void *)(v0 + 32), &off_100239168);
}

uint64_t sub_1001226A8()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1001226F4(void *a1, void *a2, char a3)
{
  sub_100120754(a1, a2, a3 & 1, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_100122708(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10012274C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100122784()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_10012278C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001227C4()
{
  return sub_100128EF8((void (*)(void))&_swift_release);
}

uint64_t sub_1001227DC()
{
  return sub_100120D7C(*(void (**)(uint64_t))(v0 + 16));
}

id sub_1001227E8(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_1001227F4()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100122848(void *a1, void **a2, char a3)
{
  sub_10011F7B0(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void ***)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64));
}

void sub_100122884()
{
  sub_1001200A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001228A0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001228B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001228C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1001228E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100122920(void *a1, uint64_t a2)
{
  return sub_10011FDCC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10012292C()
{
  return sub_100126F98((uint64_t (*)(void, void, void, void, void))sub_10011EDA0);
}

uint64_t sub_100122944(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3)
{
  id v6 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = a2(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v6;
  uint64_t v14 = *v6;
  *id v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10012422C(a3);
    uint64_t v11 = v14;
  }

  uint64_t v12 = *(void *)(*(void *)(v11 + 56) + 16 * v8);
  sub_100123C54(v8, v11);
  *id v6 = v11;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100122A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1000B4FC4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10012458C();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_100123E08(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

Swift::Int sub_100122AFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1000AA024(&qword_100263310);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
      do
      {
        swift_dynamicCast();
        sub_1000B66A0(0, &qword_100263318);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_100123668(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_100122D50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AA024(&qword_100261ED0);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10012305C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AA024(&qword_100263368);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v33 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v33 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v33 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    id v29 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0)
    {
      id v30 = v29;
      swift_retain();
    }
    Hasher.init(_seed:)();
    type metadata accessor for CFString(0);
    sub_100128A88(&qword_100263370, type metadata accessor for CFString);
    _CFObject.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v34;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  uint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100123398(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_1000AA024(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v33 = v3;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v10 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v13 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v14 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v21 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v22 = v21 | (v16 << 6);
      }
      else
      {
        int64_t v23 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v23 >= v13) {
          goto LABEL_33;
        }
        unint64_t v24 = v10[v23];
        ++v16;
        if (!v24)
        {
          int64_t v16 = v23 + 1;
          if (v23 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v24 = v10[v16];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v13)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v33;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
              if (v32 >= 64) {
                bzero((void *)(v6 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v10 = -1 << v32;
              }
              uint64_t v4 = v33;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v16 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v16 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v24 = v10[v16];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v16 = v25;
          }
        }
LABEL_30:
        unint64_t v12 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v16 << 6);
      }
      id v30 = *(void **)(*(void *)(v6 + 48) + 8 * v22);
      long long v34 = *(_OWORD *)(*(void *)(v6 + 56) + 16 * v22);
      if ((a2 & 1) == 0)
      {
        id v31 = v30;
        swift_retain();
      }
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
      uint64_t v17 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v28 = v19 == v27;
          if (v19 == v27) {
            unint64_t v19 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v19);
        }
        while (v29 == -1);
        unint64_t v20 = __clz(__rbit64(~v29)) + (v19 << 6);
      }
      *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(void *)(*(void *)(v8 + 48) + 8 * v20) = v30;
      *(_OWORD *)(*(void *)(v8 + 56) + 16 * v20) = v34;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100123668(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AA024(&qword_100263310);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    id v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10012393C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1000AA024(&qword_100263230);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void sub_100123C54(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v3);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *unint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (_OWORD *)(v19 + 16 * v3);
            int64_t v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              _OWORD *v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  uint64_t *v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_100123E08(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_100123FE0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100124028(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

void *sub_100124070()
{
  uint64_t v1 = v0;
  sub_1000AA024(&qword_100261ED0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100124220()
{
  return sub_10012422C(&qword_100263368);
}

void *sub_10012422C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1000AA024(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v14) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v7 + 8 * v22);
    ++v10;
    if (!v23)
    {
      int64_t v10 = v22 + 1;
      if (v22 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v7 + 8 * v10);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v16 = __clz(__rbit64(v23)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 16 * v16;
    long long v20 = *(_OWORD *)(*(void *)(v3 + 56) + v19);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(_OWORD *)(*(void *)(v5 + 56) + v19) = v20;
    id v21 = v18;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v14) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v7 + 8 * v24);
  if (v23)
  {
    int64_t v10 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v7 + 8 * v10);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001243E4()
{
  uint64_t v1 = v0;
  sub_1000AA024(&qword_100263310);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10012458C()
{
  uint64_t v1 = v0;
  sub_1000AA024(&qword_100263230);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100124744(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  id result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_100124744(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1001247F0(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t (*a5)(void *), uint64_t *a6, unint64_t *a7)
{
  uint64_t v10 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = a5(a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_10012422C(a6);
LABEL_7:
    unint64_t v23 = (void *)*v10;
    if (v21)
    {
LABEL_8:
      int64_t v24 = (uint64_t *)(v23[7] + 16 * v17);
      uint64_t result = *v24;
      uint64_t *v24 = a1;
      v24[1] = a2;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    *(void *)(v23[6] + 8 * v17) = a3;
    uint64_t v28 = (uint64_t *)(v23[7] + 16 * v17);
    uint64_t *v28 = a1;
    v28[1] = a2;
    uint64_t v29 = v23[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (!v30)
    {
      v23[2] = v31;
      id v32 = a3;
      return 0;
    }
    goto LABEL_14;
  }
  sub_100123398(v20, a4 & 1, a6);
  uint64_t v26 = a5(a3);
  if ((v21 & 1) == (v27 & 1))
  {
    unint64_t v17 = v26;
    unint64_t v23 = (void *)*v10;
    if (v21) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_1000B66A0(0, a7);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100124968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  int64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void **)(a4 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a1;
  v15[4] = &off_100239168;
  v15[5] = a2;
  v15[6] = a3;
  aBlock[4] = sub_10012942C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239E08;
  char v16 = _Block_copy(aBlock);
  id v17 = v14;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  return swift_release();
}

uint64_t sub_100124C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v28 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + 16) = 1;
  *(void *)(v5 + 32) = 0;
  uint64_t v32 = v5 + 24;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = dispatch_semaphore_create(0);
  uint64_t v31 = sub_1000B66A0(0, (unint64_t *)&qword_100263210);
  uint64_t v12 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v29 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  uint64_t v30 = v9 + 104;
  unsigned int v27 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  v29(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v13 = sub_100128A88((unint64_t *)&unk_100263C90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v37 = sub_1000AA024((uint64_t *)&unk_100263220);
  uint64_t v14 = sub_1000B5E24((unint64_t *)&qword_100263CA0, (uint64_t *)&unk_100263220);
  v26[2] = v13;
  v26[3] = v14;
  v26[1] = v6;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v26[0] = v11;
  *(void *)(v5 + 64) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v15 = v11;
  uint64_t v16 = v28;
  id v17 = (void (*)(uint64_t, void, uint64_t))v29;
  v29(v15, v12, v28);
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v18 = v26[0];
  *(void *)(v5 + 72) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v17(v18, v27, v16);
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)(v5 + 88) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v5 + 96) = 0;
  *(_WORD *)(v5 + 104) = 0;
  *(void *)(v5 + 112) = &_swiftEmptyDictionarySingleton;
  *(void *)(v5 + 120) = &_swiftEmptyDictionarySingleton;
  *(unsigned char *)(v5 + 128) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___container) = 0;
  uint64_t v19 = (void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___privateSubscriptionId);
  void *v19 = 0;
  v19[1] = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudPushTriggeredGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___forcedGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudInitialSetupGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___cloudUserActionExplicitGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___deferredUpdatesGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator____lazy_storage___multipleUpdatesGroup) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_identityUpdateNotificationListener) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator__available) = 0;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1001CFDB0;
  uint64_t v21 = v33;
  uint64_t v22 = sub_1000EC684();
  uint64_t v24 = v23;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_1000AA5E0();
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100128F90(v21, v5 + OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration);
  *(void *)(v5 + 32) = v34;
  swift_unknownObjectWeakAssign();
  *(void *)(v5 + 80) = v36;
  return v5;
}

void *sub_1001251DC(uint64_t a1, void *a2)
{
  uint64_t result = &_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      id v7 = [a2 encryptedValues];
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v7 objectForKeyedSubscript:v8];
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100125330(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v13[0] - 8);
  __chkstk_darwin(v13[0]);
  NSString v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(void **)(a1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  aBlock[4] = sub_10012939C;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239D90;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v9;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, void))(v6 + 8))(v8, v13[0]);
  return swift_release();
}

uint64_t sub_1001255E8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    a2 += OBJC_IVAR____TtC15audioaccessoryd16CloudCoordinator_configuration;
    uint64_t v21 = v3 + 32;
    uint64_t v22 = a2;
    unint64_t v23 = v3 & 0xC000000000000001;
    uint64_t v24 = v4;
    while (1)
    {
      id v7 = v6 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v21 + 8 * v5);
      NSString v8 = v7;
      if (__OFADD__(v5++, 1)) {
        break;
      }
      uint64_t v10 = *(void **)(a2 + *(int *)(type metadata accessor for CloudCoordinatorConfiguration() + 32));
      swift_bridgeObjectRetain();
      int64_t v25 = v8;
      id v11 = [v8 zoneName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      uint64_t v15 = v10[2];
      if (v15)
      {
        a2 = v3;
        BOOL v16 = v10[4] == v12 && v10[5] == v14;
        if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_27:
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          uint64_t v4 = 1;
          goto LABEL_32;
        }
        if (v15 != 1)
        {
          id v17 = v10 + 7;
          uint64_t v18 = 1;
          while (1)
          {
            uint64_t v3 = v18 + 1;
            if (__OFADD__(v18, 1)) {
              break;
            }
            BOOL v19 = *(v17 - 1) == v12 && *v17 == v14;
            if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              goto LABEL_27;
            }
            v17 += 2;
            ++v18;
            if (v3 == v15) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
LABEL_4:
        swift_bridgeObjectRelease();
        uint64_t v3 = a2;
        unint64_t v6 = v23;
        uint64_t v4 = v24;
        a2 = v22;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      if (v5 == v4)
      {
        uint64_t v4 = 0;
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
  }
LABEL_32:
  swift_bridgeObjectRelease();
  return v4;
}

void sub_100125818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_24:
    id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
    swift_retain_n();
    id v16 = v15;
    id v17 = [v16 encryptedValues];
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v17 objectForKeyedSubscript:v18];
    swift_unknownObjectRelease();

    if (v19 && (sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
    {
      if (!a3)
      {
        swift_release();

        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (v30 == a2 && v31 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
LABEL_5:
          swift_release();

          goto LABEL_6;
        }
      }
    }
    else if (a3)
    {
      goto LABEL_5;
    }
    if (CKRecord.recordType.getter() == a4 && v21 == a5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      return;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_release();

    if (v23)
    {
LABEL_37:
      swift_release();
      return;
    }
LABEL_6:
    swift_release();
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v12 >= v28) {
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v28) {
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v9);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v28) {
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v9);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v9 = v12 + 3;
  if (v12 + 3 >= v28) {
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v9);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v28) {
    goto LABEL_37;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  int64_t v9 = v14;
  if (v13)
  {
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_37;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_100125B90(uint64_t a1, void *a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  int64_t v29 = v5;
  for (unint64_t i = v6 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    id v12 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    swift_retain();
    id v13 = [v12 recordID];
    id v14 = [v13 recordName];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    id v18 = [a2 recordID];
    id v19 = [v18 recordName];

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    if (v15 == v20 && v17 == v22)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24)
    {
LABEL_28:
      swift_release();
      return;
    }
    swift_release();

    int64_t v5 = v29;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v26) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v8);
    int64_t v10 = v5 + 1;
    if (!v9)
    {
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_28;
      }
      unint64_t v9 = *(void *)(v25 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v5 + 3;
        if (v5 + 3 >= v26) {
          goto LABEL_28;
        }
        unint64_t v9 = *(void *)(v25 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v5 + 4;
          if (v5 + 4 >= v26) {
            goto LABEL_28;
          }
          unint64_t v9 = *(void *)(v25 + 8 * v10);
          if (!v9)
          {
            uint64_t v11 = v5 + 5;
            if (v5 + 5 >= v26) {
              goto LABEL_28;
            }
            unint64_t v9 = *(void *)(v25 + 8 * v11);
            int64_t v10 = v5 + 5;
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v4 = (v9 - 1) & v9;
    int64_t v29 = v10;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v25 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
}

void sub_100125E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  while (2)
  {
    int64_t v10 = v7 + 1;
    if (!__OFADD__(v7, 1))
    {
      if (v10 < v27)
      {
        unint64_t v11 = *(void *)(v26 + 8 * v10);
        ++v7;
        if (v11) {
          goto LABEL_21;
        }
        int64_t v7 = v10 + 1;
        if (v10 + 1 >= v27) {
          goto LABEL_35;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v7);
        if (v11) {
          goto LABEL_21;
        }
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v27) {
          goto LABEL_35;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v7);
        if (v11) {
          goto LABEL_21;
        }
        int64_t v7 = v10 + 3;
        if (v10 + 3 >= v27) {
          goto LABEL_35;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v7);
        if (v11)
        {
LABEL_21:
          unint64_t v6 = (v11 - 1) & v11;
          for (unint64_t i = __clz(__rbit64(v11)) + (v7 << 6); ; unint64_t i = v8 | (v7 << 6))
          {
            id v13 = *(id *)(*(void *)(a1 + 48) + 8 * i);
            swift_retain_n();
            id v14 = v13;
            id v15 = [v14 encryptedValues];
            NSString v16 = String._bridgeToObjectiveC()();
            id v17 = [v15 objectForKeyedSubscript:v16];
            swift_unknownObjectRelease();

            if (!v17) {
              break;
            }
            sub_1000AA024(&qword_1002629D0);
            if ((swift_dynamicCast() & 1) == 0) {
              break;
            }
            if (v28 == a2 && v29 == a3)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v18 & 1) == 0) {
                break;
              }
            }
            uint64_t v19 = CKRecord.recordType.getter();
            uint64_t v21 = v20;
            if (v19 == CKRecord.recordType.getter() && v21 == v22)
            {
              swift_bridgeObjectRelease_n();
              swift_release();

              goto LABEL_35;
            }
            char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();

            if (v23) {
              goto LABEL_35;
            }
            swift_release();

            if (!v6) {
              goto LABEL_7;
            }
LABEL_6:
            unint64_t v8 = __clz(__rbit64(v6));
            v6 &= v6 - 1;
          }
          swift_release_n();

          if (!v6) {
            continue;
          }
          goto LABEL_6;
        }
        int64_t v12 = v10 + 4;
        if (v12 < v27)
        {
          unint64_t v11 = *(void *)(v26 + 8 * v12);
          int64_t v7 = v12;
          if (!v11)
          {
            while (1)
            {
              int64_t v7 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_37;
              }
              if (v7 >= v27) {
                goto LABEL_35;
              }
              unint64_t v11 = *(void *)(v26 + 8 * v7);
              ++v12;
              if (v11) {
                goto LABEL_21;
              }
            }
          }
          goto LABEL_21;
        }
      }
LABEL_35:
      swift_release();
      return;
    }
    break;
  }
  __break(1u);
LABEL_37:
  __break(1u);
}

void sub_1001261E8(uint64_t a1, void *a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  int64_t v28 = v5;
  for (unint64_t i = v6 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    id v12 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    swift_retain();
    id v13 = [v12 recordID];
    id v14 = [v13 recordName];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    id v18 = [a2 recordName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    if (v15 == v19 && v17 == v21)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_28:
      swift_release();
      return;
    }
    swift_release();

    int64_t v5 = v28;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v25) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v24 + 8 * v8);
    int64_t v10 = v5 + 1;
    if (!v9)
    {
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v25) {
        goto LABEL_28;
      }
      unint64_t v9 = *(void *)(v24 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v5 + 3;
        if (v5 + 3 >= v25) {
          goto LABEL_28;
        }
        unint64_t v9 = *(void *)(v24 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v5 + 4;
          if (v5 + 4 >= v25) {
            goto LABEL_28;
          }
          unint64_t v9 = *(void *)(v24 + 8 * v10);
          if (!v9)
          {
            uint64_t v11 = v5 + 5;
            if (v5 + 5 >= v25) {
              goto LABEL_28;
            }
            unint64_t v9 = *(void *)(v24 + 8 * v11);
            int64_t v10 = v5 + 5;
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v4 = (v9 - 1) & v9;
    int64_t v28 = v10;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v24 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
}

void sub_1001264A0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v16 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v7 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    id v12 = *(void **)(*(void *)(a1 + 48) + 8 * i);
    sub_1000B66A0(0, &qword_1002631F0);
    id v13 = v12;
    swift_retain_n();
    id v14 = v13;
    char v15 = static NSObject.== infix(_:_:)();
    swift_release();

    if (v15)
    {
LABEL_23:
      swift_release();
      return;
    }
    swift_release();

    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v16) {
      goto LABEL_23;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v16) {
          goto LABEL_23;
        }
        unint64_t v10 = *(void *)(v2 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v16) {
            goto LABEL_23;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v6);
          if (!v10)
          {
            int64_t v11 = v9 + 4;
            if (v11 >= v16) {
              goto LABEL_23;
            }
            unint64_t v10 = *(void *)(v2 + 8 * v11);
            int64_t v6 = v11;
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v5 = (v10 - 1) & v10;
  }
  while (1)
  {
    int64_t v6 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v6 >= v16) {
      goto LABEL_23;
    }
    unint64_t v10 = *(void *)(v2 + 8 * v6);
    ++v11;
    if (v10) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_1001266A8(uint64_t a1, void *a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  int64_t v28 = v5;
  for (unint64_t i = v6 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    id v12 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    swift_retain();
    id v13 = [v12 recordName];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id v17 = [a2 recordID];
    id v18 = [v17 recordName];

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    if (v14 == v19 && v16 == v21)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_28:
      swift_release();
      return;
    }
    swift_release();

    int64_t v5 = v28;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v25) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v24 + 8 * v8);
    int64_t v10 = v5 + 1;
    if (!v9)
    {
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v25) {
        goto LABEL_28;
      }
      unint64_t v9 = *(void *)(v24 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v5 + 3;
        if (v5 + 3 >= v25) {
          goto LABEL_28;
        }
        unint64_t v9 = *(void *)(v24 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v5 + 4;
          if (v5 + 4 >= v25) {
            goto LABEL_28;
          }
          unint64_t v9 = *(void *)(v24 + 8 * v10);
          if (!v9)
          {
            uint64_t v11 = v5 + 5;
            if (v5 + 5 >= v25) {
              goto LABEL_28;
            }
            unint64_t v9 = *(void *)(v24 + 8 * v11);
            int64_t v10 = v5 + 5;
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v4 = (v9 - 1) & v9;
    int64_t v28 = v10;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v24 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
}

void sub_100126960(uint64_t a1, void *a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  int64_t v27 = v5;
  for (unint64_t i = v6 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    id v12 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    swift_retain();
    id v13 = [v12 recordName];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    id v17 = [a2 recordName];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    if (v14 == v18 && v16 == v20)
    {
      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22)
    {
LABEL_28:
      swift_release();
      return;
    }
    swift_release();

    int64_t v5 = v27;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v24) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v23 + 8 * v8);
    int64_t v10 = v5 + 1;
    if (!v9)
    {
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v24) {
        goto LABEL_28;
      }
      unint64_t v9 = *(void *)(v23 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v5 + 3;
        if (v5 + 3 >= v24) {
          goto LABEL_28;
        }
        unint64_t v9 = *(void *)(v23 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v5 + 4;
          if (v5 + 4 >= v24) {
            goto LABEL_28;
          }
          unint64_t v9 = *(void *)(v23 + 8 * v10);
          if (!v9)
          {
            uint64_t v11 = v5 + 5;
            if (v5 + 5 >= v24) {
              goto LABEL_28;
            }
            unint64_t v9 = *(void *)(v23 + 8 * v11);
            int64_t v10 = v5 + 5;
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v4 = (v9 - 1) & v9;
    int64_t v27 = v10;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v23 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_100126BF8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100126C30(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100126C5C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_100126C98(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 40);
  (*(void (**)(void))(v1 + 24))();
  return v3(a1);
}

unint64_t sub_100126CE4()
{
  unint64_t result = qword_100263188;
  if (!qword_100263188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263188);
  }
  return result;
}

uint64_t sub_100126D38()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + v0;
  unint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v8, v6);
}

void sub_100126E28(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  unint64_t v8 = (void (*)(void *, void))v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  int v11 = *((unsigned __int8 *)v2 + v7);
  id v12 = *(void **)((char *)v2 + (v7 & 0xFFFFFFFFFFFFFFF8) + 8);

  sub_10011B6A4(a1, v4, v8, v9, v10, (uint64_t)v2 + v6, v11, v12);
}

uint64_t sub_100126EE4(uint64_t a1, uint64_t a2)
{
  return sub_10011EAC0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), (uint64_t)&unk_1002395F8, (uint64_t)sub_100126F80, (uint64_t)&unk_100239610);
}

uint64_t sub_100126F38()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100126F80()
{
  return sub_100126F98((uint64_t (*)(void, void, void, void, void))sub_10011D75C);
}

uint64_t sub_100126F98(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_100126FBC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100127004(uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(a1, v4);
  return v5(a1, v4);
}

uint64_t sub_100127064(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v21 = v6;
        id v8 = [v6 recordID];
        id v9 = [v8 recordName];

        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        id v13 = [a2 recordName];
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;

        if (v10 == v14 && v12 == v16)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          uint64_t v3 = (uint64_t)v21;
          swift_bridgeObjectRelease();
          return v3;
        }
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_17;
        }

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100127248(uint64_t a1, void (*a2)(unsigned char *, id))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    sub_1000B67A8(*(void *)(a1 + 48) + 40 * v12, (uint64_t)v16);
    id v17 = *(id *)(*(void *)(a1 + 56) + 8 * v12);
    a2(v16, v17);
    uint64_t result = sub_1000AA894((uint64_t)v16, (uint64_t *)&unk_100263200);
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v8) {
    return swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1001273EC(uint64_t a1, void (*a2)(id, uint64_t (*)(uint64_t), _OWORD *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v19) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v19) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v19) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v19) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    long long v18 = *(_OWORD *)(*(void *)(a1 + 56) + 16 * v10);
    __chkstk_darwin(v7);
    v16[1] = v18;
    id v12 = v11;
    swift_retain();
    a2(v12, sub_10012A498, v16);
    swift_release();
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v19)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v14 = *(void *)(v17 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v19) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10012760C(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_100129284;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_100239B10;
  int64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  int64_t v19 = _swiftEmptyArrayStorage;
  sub_100128A88((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  swift_release();
  return swift_release();
}

void sub_100127918(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v19 = a2;
    sub_100101A88((uint64_t)v19, a1);
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1001D0A20;
    uint64_t v4 = URL.absoluteString.getter();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    unint64_t v7 = sub_1000AA5E0();
    *(void *)(v3 + 64) = v7;
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    id v8 = [v19 data];
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    uint64_t v12 = Data.hexString.getter(v9, v11);
    uint64_t v14 = v13;
    sub_1000AA8F0(v9, v11);
    *(void *)(v3 + 96) = &type metadata for String;
    *(void *)(v3 + 104) = v7;
    *(void *)(v3 + 72) = v12;
    *(void *)(v3 + 80) = v14;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001019A0();
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t v16 = URL.absoluteString.getter();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000AA5E0();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100127DA8(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v6 = 0;
    uint64_t v21 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v8 = v7;
      id v9 = [v7 recordID:v21];
      id v10 = [v9 recordName];

      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      id v14 = [a2 recordName];
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      if (v11 == v3 && v13 == v16)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        return v6;
      }
      uint64_t v19 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      ++v6;
      if (v19 == v5) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100127F6C(uint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  id v39 = a2;
  unint64_t v40 = sub_100127DA8(v5, a2);
  char v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v38 = v2;
  if (v2) {
    return v40;
  }
  if ((v7 & 1) == 0)
  {
    id v8 = (id)(v40 + 1);
    if (__OFADD__(v40, 1)) {
      goto LABEL_60;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8 != (id)v36) {
        goto LABEL_6;
      }
    }
    else if (v8 != *(id *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v40 + 5; ; ++i)
      {
        unint64_t v10 = i - 4;
        uint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v12 = *(id *)(v11 + 8 * i);
        }
        uint64_t v13 = v12;
        id v14 = [v12 recordID:v38];
        id v15 = [v14 recordName];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        id v8 = [v39 recordName];
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        if (v16 == v19 && v18 == v21)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_38;
        }
        if (v10 != v40) {
          break;
        }
LABEL_35:
        if (__OFADD__(v40, 1)) {
          goto LABEL_53;
        }
        ++v40;
LABEL_38:
        id v8 = (id)(i - 3);
        if (__OFADD__(v10, 1)) {
          goto LABEL_52;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v8 == (id)v33) {
          return v40;
        }
      }
      uint64_t v24 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v24 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v10 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v26 = *(id *)(v24 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v40 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        id v25 = *(id *)(v24 + 8 * v40 + 32);
        if ((v24 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v24 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v24;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v24 < 0 || (v24 & 0x4000000000000000) != 0)
      {
        uint64_t v24 = sub_1001B330C(v24);
        *a1 = v24;
      }
      int64_t v28 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v40 + 0x20);
      *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 8 * v40 + 0x20) = v26;

      specialized Array._endMutation()();
      uint64_t v29 = *a1;
      int v30 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v29;
      if (!v30 || v29 < 0 || (v29 & 0x4000000000000000) != 0)
      {
        uint64_t v29 = sub_1001B330C(v29);
        *a1 = v29;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v31 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
      uint64_t v32 = *(void **)(v31 + 8 * i);
      *(void *)(v31 + 8 * i) = v25;

      specialized Array._endMutation()();
      goto LABEL_35;
    }
    return v40;
  }
  unint64_t v34 = *a1;
  if (!(v34 >> 62)) {
    return *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v37;
}

Class sub_100128360(uint64_t a1, void *a2)
{
  sub_1000B66A0(0, &qword_100263290);
  swift_bridgeObjectRetain();
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  Class isa = CKDatabaseSubscription.init(subscriptionID:)(v4).super.super.isa;
  id v6 = [objc_allocWithZone((Class)CKNotificationInfo) init];
  [v6 setShouldSendContentAvailable:1];
  [(objc_class *)isa setNotificationInfo:v6];
  sub_1000B66A0(0, &qword_100263298);
  sub_1000AA024(&qword_100263AE0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001D2D40;
  *(void *)(v7 + 32) = isa;
  uint64_t v15 = v7;
  specialized Array._endMutation()();
  id v8 = isa;
  id v9 = _swiftEmptyArrayStorage;
  uint64_t v10 = v15;
  v11.super.super.super.super.Class isa = CKModifySubscriptionsOperation.init(subscriptionsToSave:subscriptionIDsToDelete:)(*(Swift::OpaquePointer_optional *)(&v9 - 1), v16).super.super.super.super.isa;
  Class result = (Class)[(objc_class *)v11.super.super.super.super.isa configuration];
  if (result)
  {
    Class v13 = result;
    [(objc_class *)result setAutomaticallyRetryNetworkFailures:0];

    Class result = (Class)[(objc_class *)v11.super.super.super.super.isa configuration];
    if (result)
    {
      Class v14 = result;
      [(objc_class *)result setDiscretionaryNetworkBehavior:0];

      return v11.super.super.super.super.isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1001284FC(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    swift_getErrorValue();
    v35[0] = Error.localizedDescription.getter();
    v35[1] = v6;
    *(void *)&long long v32 = a4;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    type metadata accessor for CKError(0);
    if (swift_dynamicCast())
    {
      uint64_t v7 = v34;
      sub_100128A88(&qword_100261BD8, type metadata accessor for CKError);
      _BridgedStoredNSError.code.getter();
      id v8 = (id)stringForCKErrorCode();
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_bridgeObjectRelease();
      v35[0] = v9;
      v35[1] = v11;
      uint64_t v12 = _BridgedStoredNSError.userInfo.getter();
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v12 + 16) && (unint64_t v15 = sub_1000B4FC4(v13, v14), (v16 & 1) != 0))
      {
        sub_100128C4C(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v32);
      }
      else
      {
        long long v32 = 0u;
        long long v33 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v33 + 1))
      {
        sub_1000AA024(&qword_1002631F8);
        uint64_t v17 = swift_dynamicCast();
        if (v17)
        {
          uint64_t v18 = (uint64_t)v34;
          __chkstk_darwin(v17);
          sub_100127248(v18, (void (*)(unsigned char *, id))sub_100128F88);
          swift_bridgeObjectRelease();
        }
      }
      else
      {

        sub_1000AA894((uint64_t)&v32, &qword_1002631A0);
      }
    }
  }
  else
  {
    strcpy((char *)v35, "NotApplicable");
    HIWORD(v35[1]) = -4864;
  }
  NSString v30 = String._bridgeToObjectiveC()();
  sub_1000AA024(&qword_1002631E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D2D50;
  *(void *)(inited + 32) = 0x726F727245;
  *(void *)(inited + 40) = 0xE500000000000000;
  id v20 = objc_allocWithZone((Class)NSString);
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithString:v21];

  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = 0x6D69547473726946;
  *(void *)(inited + 64) = 0xE900000000000065;
  id v23 = [a1 recordChangeTag];
  id v24 = v23;
  if (v23) {

  }
  *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithBool:v24 == 0];
  *(void *)(inited + 80) = 0x795464726F636552;
  *(void *)(inited + 88) = 0xEA00000000006570;
  CKRecord.recordType.getter();
  id v25 = objc_allocWithZone((Class)NSString);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v25 initWithString:v26];

  *(void *)(inited + 96) = v27;
  *(void *)(inited + 104) = 0x73736563637553;
  *(void *)(inited + 112) = 0xE700000000000000;
  *(void *)(inited + 120) = [objc_allocWithZone((Class)NSNumber) initWithBool:a4 == 0];
  strcpy((char *)(inited + 128), "SyncDuration");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(void *)(inited + 144) = [objc_allocWithZone((Class)NSNumber) initWithDouble:0.0];
  strcpy((char *)(inited + 152), "UploadDuration");
  *(unsigned char *)(inited + 167) = -18;
  Date.timeIntervalSinceNow.getter();
  *(void *)(inited + 168) = [objc_allocWithZone((Class)NSNumber) initWithDouble:-v28];
  strcpy((char *)(inited + 176), "UserInitiated");
  *(_WORD *)(inited + 190) = -4864;
  *(void *)(inited + 192) = [objc_allocWithZone((Class)NSNumber) initWithBool:a3 & 1];
  sub_1000AFB88(inited);
  sub_1000B66A0(0, &qword_1002631F0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CUMetricsLog();
  swift_bridgeObjectRelease();
}

uint64_t sub_100128A88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128AD0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100128BB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = (void (*)(void))v1[3];
  uint64_t v7 = v1[4];
  id v8 = (void *)v1[5];
  int v9 = *((unsigned __int8 *)v1 + v4 + *(void *)(v3 + 64));

  return sub_10011BF2C(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_100128C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100128CA8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

void sub_100128D88(unint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void (*)(void *, uint64_t))v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v10 = (void *)v2[5];
  char v11 = *((unsigned char *)v2 + v6 + *(void *)(v5 + 64));

  sub_10011C510(a1, v4, v7, v8, v9, v10, (uint64_t)v2 + v6, v11);
}

uint64_t sub_100128E34(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000B66A0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100128E7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100128E8C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100128ED4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10011CE80(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100128EE0()
{
  return sub_100128EF8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100128EF8(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100128F48()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), 0);
}

uint64_t sub_100128F7C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100128F88()
{
  return sub_10011CDA8();
}

uint64_t sub_100128F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudCoordinatorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100128FF4(uint64_t a1, char a2)
{
}

uint64_t sub_100129000(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10012900C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100129044(uint64_t a1, uint64_t a2)
{
  return sub_10012123C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10012904C()
{
  return sub_10012156C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100129054(uint64_t a1, char a2)
{
}

uint64_t sub_100129060(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001D2D20;
  uint64_t v13 = Data.hexString.getter(a1, a2);
  uint64_t v15 = v14;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v16 = sub_1000AA5E0();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  *(void *)(v12 + 96) = &type metadata for String;
  *(void *)(v12 + 104) = v16;
  *(void *)(v12 + 64) = v16;
  *(void *)(v12 + 72) = a3;
  *(void *)(v12 + 80) = a4;
  *(void *)(v12 + 136) = &type metadata for String;
  *(void *)(v12 + 144) = v16;
  *(void *)(v12 + 112) = a5;
  *(void *)(v12 + 120) = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001291A4()
{
  return sub_10011A254(*(double *)(v0 + 16));
}

uint64_t sub_1001291B0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_1001291E8(void *a1, char a2)
{
  sub_100118824(a1, a2 & 1, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

void sub_1001291F8(void *a1, void *a2)
{
  sub_100119E58(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

void sub_100129200(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_10012920C(uint64_t a1, char a2)
{
  return sub_1001198F8(a1, a2 & 1);
}

uint64_t sub_10012921C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012925C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10012926C()
{
  return sub_100119B04(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100129278(uint64_t a1, char a2)
{
  return sub_100119B64(a1, a2 & 1);
}

uint64_t sub_100129284()
{
  return sub_10018D110(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100129290(uint64_t a1)
{
  return sub_100117200(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1001292A0(uint64_t a1, void **a2)
{
  return sub_1001167F4(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1001292AC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001292E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100129314()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_100129340()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_100129378()
{
  sub_1001174CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100129384()
{
  return sub_1001181A0(v0);
}

uint64_t sub_10012938C()
{
  return sub_100117DB4(v0);
}

void sub_10012939C()
{
  sub_10018D270(v0);
}

uint64_t sub_1001293A4()
{
  return sub_100116458(v0);
}

uint64_t sub_1001293AC(uint64_t a1, uint64_t a2)
{
  return sub_100115204(a2, *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1001293DC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10012942C()
{
  return sub_1001294C4(sub_10018BC7C);
}

uint64_t sub_100129444()
{
  return sub_100116798();
}

uint64_t sub_10012944C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10012945C()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001294AC()
{
  return sub_1001294C4((uint64_t (*)(void, void, void, void, void))sub_100114C5C);
}

uint64_t sub_1001294C4(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001294DC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100129524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100114FC4(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(NSObject **)(v3 + 40));
}

uint64_t sub_100129530()
{
  return sub_100114154();
}

uint64_t sub_100129538()
{
  return sub_1001144C4();
}

uint64_t sub_100129540()
{
  return sub_1001298B4((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 64);
}

uint64_t sub_100129574()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001295C4(uint64_t a1, char a2)
{
  return sub_1001133DC(a1, a2 & 1, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64));
}

uint64_t sub_1001295FC()
{
  return sub_1001298B4((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease, 64);
}

void sub_10012962C(void *a1, char a2)
{
  sub_100113750(a1, a2 & 1, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_100129640()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100129688()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!__OFADD__(v1, 1)) {
    return sub_100112CE0(*(void *)(v0 + 24), *(void *)(v0 + 32), v1 + 1, *(void (**)(void))(v0 + 48), *(void *)(v0 + 56));
  }
  __break(1u);
  return result;
}

uint64_t sub_1001296C4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100129704(uint64_t a1)
{
  sub_100112AE4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_100129710()
{
  return sub_1001298B4((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 64);
}

void sub_100129740()
{
  sub_100113108(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_100129750()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 57, 7);
}

id sub_1001297A0()
{
  return sub_10010FFEC(*(void *)(v0 + 16), *(uint64_t (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1001297B4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001297EC(void *a1, void *a2, char a3)
{
  sub_100110C54(a1, a2, a3 & 1, v3);
}

uint64_t sub_1001297F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10011104C(a1, a2, a3, v3);
}

uint64_t sub_100129800()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100129850(void *a1, void *a2, uint64_t a3, unint64_t a4, __int16 a5)
{
  sub_100111240(a1, a2, a3, a4, a5 & 0x1FF, *(unsigned __int8 *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void **)(v5 + 48));
}

uint64_t sub_100129884()
{
  return sub_1001298B4((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release, 56);
}

uint64_t sub_1001298B4(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 24));
  swift_release();
  a2(*(void *)(v3 + 48));

  return _swift_deallocObject(v3, a3, 7);
}

uint64_t sub_100129920(uint64_t a1, char a2)
{
  return sub_100111AE8(a1, a2 & 1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void (**)(uint64_t, uint64_t))(v2 + 40));
}

uint64_t sub_100129934()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100129974()
{
  return sub_100111DF8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10012997C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10012998C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1001118BC(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_100129994(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return swift_errorRelease();
  }
  else
  {

    return sub_1000BFEB0(a2, a3);
  }
}

uint64_t sub_1001299E8()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100129A30()
{
  sub_10010DAF8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned __int8 *)(v0 + 33), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100129A44(void *a1)
{
  return sub_10010E294(a1, v1);
}

uint64_t sub_100129A4C(void *a1)
{
  return sub_10010E540(a1, v1);
}

uint64_t sub_100129A54()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100129A64(void *a1)
{
  return sub_10010E5DC(a1);
}

uint64_t sub_100129A6C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100129AC4(void *a1, __int16 a2)
{
  sub_10010E7B8(a1, a2 & 0x1FF, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void **)(v2 + 48), *(void (***)(uint64_t, uint64_t))(v2 + 56), *(void *)(v2 + 64));
}

void sub_100129B00(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100129B10()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100129B50()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100129BA0(uint64_t a1, char a2)
{
  return sub_10010FA24(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40));
}

id sub_100129BB4(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_100129BC0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100129C08()
{
  sub_10010D0E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *, void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100129C14()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100129C54(uint64_t a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(a1, v4);
  return v5(a1, v4);
}

uint64_t sub_100129CB4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100129CE8()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

void sub_100129D20()
{
  sub_10010A864(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_100129D30()
{
  return sub_100129FB8((void (*)(void))&_swift_release);
}

void sub_100129D48(void *a1, void *a2, char a3)
{
}

void sub_100129D54(void *a1, uint64_t a2, char a3)
{
}

uint64_t sub_100129D60()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 50, 7);
}

uint64_t sub_100129DB0(uint64_t a1, char a2)
{
  return sub_10010BBC8(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), *(unsigned __int8 *)(v2 + 49));
}

void sub_100129DC8(BOOL *a1@<X8>)
{
  sub_100120CC0(*(void *)(v1 + 24), a1);
}

uint64_t sub_100129DE4()
{
  swift_release();
  sub_100129000(*(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 58, 7);
}

uint64_t sub_100129E38()
{
  return sub_10010BF00(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(unsigned __int8 *)(v0 + 57));
}

uint64_t sub_100129E50(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100129E5C(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_100129E9C(void *a1)
{
  return sub_100109CE8(a1);
}

void sub_100129EA4()
{
  sub_10010A0A4(v0);
}

uint64_t sub_100129EAC()
{
  return sub_1001098EC();
}

uint64_t sub_100129EB8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100129EF8()
{
  return sub_100109348(v0);
}

uint64_t sub_100129F00()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100129F38()
{
  return sub_100129FB8((void (*)(void))&_swift_unknownObjectRelease);
}

void sub_100129F50()
{
  sub_10013186C(*(void **)(v0 + 16));
}

uint64_t sub_100129F58()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100129F68()
{
}

uint64_t sub_100129F70()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100129F80(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_100129F90(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_100129FA0()
{
  return sub_100129FB8((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100129FB8(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10012A000()
{
  return sub_100131C60(*(void *)(v0 + 16));
}

uint64_t sub_10012A008()
{
  return _swift_deallocObject(v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for CloudCoordinator.DatabaseToken(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012A0E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudCoordinator.DatabaseToken()
{
  return &type metadata for CloudCoordinator.DatabaseToken;
}

void *initializeBufferWithCopyOfBuffer for CloudCoordinator.CloudCoordinatorError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for CloudCoordinator.CloudCoordinatorError(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for CloudCoordinator.CloudCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

void *initializeWithTake for CloudCoordinator.CloudCoordinatorError(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for CloudCoordinator.CloudCoordinatorError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudCoordinator.CloudCoordinatorError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CloudCoordinator.CloudCoordinatorError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_10012A31C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10012A334(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CloudCoordinator.CloudCoordinatorError()
{
  return &type metadata for CloudCoordinator.CloudCoordinatorError;
}

unint64_t sub_10012A36C()
{
  unint64_t result = qword_100263378;
  if (!qword_100263378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263378);
  }
  return result;
}

unint64_t sub_10012A3C0()
{
  unint64_t result = qword_100263380;
  if (!qword_100263380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263380);
  }
  return result;
}

unint64_t sub_10012A414(unint64_t result)
{
  if (result >= 6) {
    return swift_errorRelease();
  }
  return result;
}

void sub_10012A640(BOOL *a1@<X8>)
{
}

void sub_10012A9C4()
{
  byte_100263390 = 0;
}

void sub_10012A9D0()
{
  byte_100263391 = 0;
}

void sub_10012A9DC()
{
  byte_100263392 = 0;
}

void sub_10012A9E8()
{
  byte_100263393 = 0;
}

uint64_t sub_10012A9F4()
{
  uint64_t v0 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v0 - 8);
  unsigned int v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000AA068(v7, qword_10026AD60);
  sub_1000AA0CC(v3, (uint64_t)qword_10026AD60);
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    URL.appendingPathComponent(_:isDirectory:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

id AADeviceRecord.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v102 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v5 - 8);
  uint64_t v98 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v99 = (uint64_t)&v94 - v8;
  __chkstk_darwin(v9);
  unint64_t v96 = (char *)&v94 - v10;
  __chkstk_darwin(v11);
  uint64_t v97 = (uint64_t)&v94 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v94 - v14;
  uint64_t v17 = &v0[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  uint64_t v18 = *(void *)&v0[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v19 = *((void *)v17 + 1);
  sub_1000AA680(v18, v19);
  Class isa = sub_100130420(v18, v19);
  sub_1000AA8F0(v18, v19);
  if (!isa)
  {
    NSString v21 = v1;
    Class isa = sub_1000B4F04((uint64_t)v21).super.isa;
  }
  id v105 = isa;
  sub_10012E130(&v105);
  id v105 = 0;
  unint64_t v106 = 0xE000000000000000;
  _StringGuts.grow(_:)(271);
  id v107 = v105;
  unint64_t v108 = v106;
  v22._uint64_t countAndFlagsBits = 0x6563697665444141;
  v22._object = (void *)0xEF2864726F636552;
  String.append(_:)(v22);
  type metadata accessor for UUID();
  sub_10012FD08((unint64_t *)&unk_100261A20, (void (*)(uint64_t))&type metadata accessor for UUID);
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 2108704;
  v24._object = (void *)0xE300000000000000;
  String.append(_:)(v24);
  uint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  NSString v26 = *(void **)&v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._object = (void *)0x80000001001FD590;
  v28._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v28);
  LOBYTE(v105) = v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig];
  v29._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v30._object = (void *)0x80000001001FD5B0;
  String.append(_:)(v30);
  LOBYTE(v105) = v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff];
  v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._object = (void *)0x80000001001FD5D0;
  v32._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v32);
  uint64_t v33 = (uint64_t)&v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp];
  swift_beginAccess();
  sub_1000F7934(v33, (uint64_t)v15);
  uint64_t v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v101(v15, 1, v2))
  {
    sub_1000AA894((uint64_t)v15, &qword_100261D90);
    unint64_t v34 = (void *)0xE200000000000000;
    uint64_t v35 = 15932;
    uint64_t v36 = v102;
  }
  else
  {
    uint64_t v36 = v102;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v102, v15, v2);
    sub_1000AA894((uint64_t)v15, &qword_100261D90);
    uint64_t v37 = self;
    Class v38 = Date._bridgeToObjectiveC()().super.isa;
    id v39 = [v37 localizedStringFromDate:v38 dateStyle:2 timeStyle:2];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v34 = v40;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
  }
  v41._uint64_t countAndFlagsBits = v35;
  v41._object = v34;
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v42._object = (void *)0x80000001001FD5F0;
  String.append(_:)(v42);
  char v104 = v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig];
  v43._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._object = (void *)0x80000001001FD610;
  v44._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v44);
  char v104 = v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode];
  v45._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 0xD000000000000014;
  v46._object = (void *)0x80000001001F7340;
  String.append(_:)(v46);
  uint64_t v47 = &v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate];
  swift_beginAccess();
  uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v94(v36, v47, v2);
  sub_10012FD08(&qword_1002633B0, (void (*)(uint64_t))&type metadata accessor for Date);
  v48._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  uint64_t v95 = *(void (**)(char *, uint64_t))(v3 + 8);
  v95(v36, v2);
  v49._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v49._object = (void *)0x80000001001F7360;
  String.append(_:)(v49);
  id v103 = isa;
  id v50 = [isa creationDate];
  uint64_t v100 = v3;
  if (v50)
  {
    Swift::OpaquePointer_optional v51 = v50;
    uint64_t v52 = (uint64_t)v96;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v53(v52, 0, 1, v2);
  }
  else
  {
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v52 = (uint64_t)v96;
    v53((uint64_t)v96, 1, 1, v2);
  }
  uint64_t v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101;
  uint64_t v55 = v97;
  sub_1000AA798(v52, v97);
  if (v54(v55, 1, v2))
  {
    sub_1000AA894(v55, &qword_100261D90);
    uint64_t v56 = (void *)0xE200000000000000;
    uint64_t v57 = 15932;
  }
  else
  {
    uint64_t v58 = v102;
    v94(v102, (char *)v55, v2);
    sub_1000AA894(v55, &qword_100261D90);
    uint64_t v59 = self;
    Class v60 = Date._bridgeToObjectiveC()().super.isa;
    id v61 = [v59 localizedStringFromDate:v60 dateStyle:2 timeStyle:2];

    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v62;

    uint64_t v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101;
    v95(v58, v2);
  }
  v63._uint64_t countAndFlagsBits = v57;
  v63._object = v56;
  String.append(_:)(v63);
  swift_bridgeObjectRelease();
  v64._uint64_t countAndFlagsBits = 0xD000000000000012;
  v64._object = (void *)0x80000001001F7380;
  String.append(_:)(v64);
  id v65 = [v103 modificationDate];
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = (uint64_t)v98;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v68 = 0;
  }
  else
  {
    uint64_t v68 = 1;
    uint64_t v67 = (uint64_t)v98;
  }
  v53(v67, v68, 1, v2);
  uint64_t v69 = v99;
  sub_1000AA798(v67, v99);
  if (v54(v69, 1, v2))
  {
    sub_1000AA894(v69, &qword_100261D90);
    uint64_t v70 = (void *)0xE200000000000000;
    uint64_t v71 = 15932;
  }
  else
  {
    id v72 = v102;
    v94(v102, (char *)v69, v2);
    sub_1000AA894(v69, &qword_100261D90);
    id v73 = self;
    Class v74 = Date._bridgeToObjectiveC()().super.isa;
    id v75 = [v73 localizedStringFromDate:v74 dateStyle:2 timeStyle:2];

    uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v70 = v76;

    v95(v72, v2);
  }
  id v77 = v103;
  v78._uint64_t countAndFlagsBits = v71;
  v78._object = v70;
  String.append(_:)(v78);
  swift_bridgeObjectRelease();
  v79._object = (void *)0x80000001001F73A0;
  v79._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v79);
  id v80 = [v77 modifiedByDevice];
  if (v80)
  {
    uint64_t v81 = v80;
    uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v84 = v83;
  }
  else
  {
    uint64_t v84 = (void *)0xE200000000000000;
    uint64_t v82 = 15932;
  }
  v85._uint64_t countAndFlagsBits = v82;
  v85._object = v84;
  String.append(_:)(v85);
  swift_bridgeObjectRelease();
  v86._uint64_t countAndFlagsBits = 0x746520202020202CLL;
  v86._object = (void *)0xEC000000203A6761;
  String.append(_:)(v86);
  id v87 = [v77 recordChangeTag];
  if (v87)
  {
    uint64_t v88 = v87;
    uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v91 = v90;
  }
  else
  {
    id v91 = (void *)0xE200000000000000;
    uint64_t v89 = 15932;
  }
  v92._uint64_t countAndFlagsBits = v89;
  v92._object = v91;
  String.append(_:)(v92);

  swift_bridgeObjectRelease();
  return v107;
}

id sub_10012B730(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v92 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v90 = (char *)&v86 - v7;
  uint64_t v8 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v8 - 8);
  uint64_t v89 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v86 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v86 - v13;
  uint64_t v15 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v95 = *(void *)(v18 - 8);
  uint64_t v96 = v18;
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v93 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = v4;
  NSString v21 = *(void (**)(__n128))(v4 + 56);
  uint64_t v99 = (uint64_t)v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
  uint64_t v97 = v3;
  Swift::String v22 = v21;
  v21(v19);
  Swift::String v23 = v1;
  id v100 = a1;
  uint64_t v24 = CKRecord.recordType.getter();
  id v26 = v25;
  if (v24 == 0x6563697665444141 && v25 == (void *)0xEE0064726F636552)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    id v28 = [v100 encryptedValues];
    NSString v29 = String._bridgeToObjectiveC()();
    id v98 = v28;
    id v30 = [v28 objectForKeyedSubscript:v29];

    if (!v30) {
      goto LABEL_9;
    }
    id v104 = v30;
    uint64_t v88 = sub_1000AA024(&qword_1002629D0);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v31 = v103;
    id v87 = v102;
    id v32 = [v100 recordID];
    id v33 = [v32 recordName];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v35 = v95;
    uint64_t v34 = v96;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v17, 1, v96) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1000AA894((uint64_t)v17, &qword_100261EA0);
LABEL_9:
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      id v26 = (id)qword_10026ADE8;
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
      *(void *)(v36 + 56) = sub_1000AA854();
      *(void *)(v36 + 64) = sub_10012FD08((unint64_t *)&qword_100261A40, (void (*)(uint64_t))sub_1000AA854);
      id v37 = v100;
      *(void *)(v36 + 32) = v100;
      id v38 = v37;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10012FCB4();
      swift_allocError();
      *id v39 = 4;
      swift_willThrow();
      swift_unknownObjectRelease();

      goto LABEL_13;
    }
    Swift::String v42 = v93;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v93, v17, v34);
    (*(void (**)(unsigned char *, char *, uint64_t))(v35 + 16))(&v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v42, v34);
    Swift::String v43 = &v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
    *Swift::String v43 = v87;
    v43[1] = v31;
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = v98;
    id v46 = [v98 objectForKeyedSubscript:v44];

    uint64_t v47 = v97;
    Swift::String v48 = v22;
    if (v46 && (id v102 = v46, swift_dynamicCast()))
    {
      char v49 = (char)v104;
    }
    else
    {
      if (qword_1002618F8 != -1) {
        swift_once();
      }
      char v49 = byte_100263390;
    }
    v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig] = v49;
    NSString v50 = String._bridgeToObjectiveC()();
    id v51 = [v45 objectForKeyedSubscript:v50];

    if (v51 && (id v102 = v51, swift_dynamicCast()))
    {
      char v52 = (char)v104;
    }
    else
    {
      if (qword_100261900 != -1) {
        swift_once();
      }
      char v52 = byte_100263391;
    }
    v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff] = v52;
    NSString v53 = String._bridgeToObjectiveC()();
    id v54 = [v45 objectForKeyedSubscript:v53];

    if (v54)
    {
      id v102 = v54;
      uint64_t v55 = swift_dynamicCast() ^ 1;
      uint64_t v56 = v14;
    }
    else
    {
      uint64_t v56 = v14;
      uint64_t v55 = 1;
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v56, v55, 1, v47);
    uint64_t v57 = v99;
    swift_beginAccess();
    sub_1000F7A3C((uint64_t)v14, v57);
    swift_endAccess();
    NSString v58 = String._bridgeToObjectiveC()();
    id v59 = [v45 objectForKeyedSubscript:v58];

    if (v59 && (id v102 = v59, swift_dynamicCast()))
    {
      char v60 = (char)v104;
    }
    else
    {
      if (qword_100261908 != -1) {
        swift_once();
      }
      char v60 = byte_100263392;
    }
    v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig] = v60;
    NSString v61 = String._bridgeToObjectiveC()();
    id v62 = [v45 objectForKeyedSubscript:v61];

    if (v62 && (id v102 = v62, swift_dynamicCast()))
    {
      char v63 = (char)v104;
    }
    else
    {
      if (qword_100261910 != -1) {
        swift_once();
      }
      char v63 = byte_100263393;
    }
    v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode] = v63;
    id v64 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
    id v65 = v100;
    [v100 encodeSystemFieldsWithCoder:v64];
    [v64 finishEncoding];
    id v66 = [v64 encodedData];
    uint64_t v67 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v68;

    uint64_t v70 = (uint64_t *)&v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
    *uint64_t v70 = v67;
    v70[1] = v69;
    id v71 = [v65 modificationDate];
    if (v71)
    {
      id v72 = v71;
      id v73 = v92;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = v91;
      id v75 = *(void (**)(uint64_t, char *, uint64_t))(v91 + 32);
      uint64_t v76 = (uint64_t)v94;
      uint64_t v77 = v97;
      v75((uint64_t)v94, v73, v97);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v48)(v76, 0, 1, v77);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v76, 1, v77) != 1)
      {
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v96);
        Swift::String v78 = v90;
        v75((uint64_t)v90, v94, v77);
LABEL_52:
        v75((uint64_t)&v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate], v78, v77);

        Swift::String v85 = (objc_class *)type metadata accessor for AADeviceRecord();
        v101.receiver = v23;
        v101.super_class = v85;
        id v26 = [super init];

        return v26;
      }
    }
    else
    {
      uint64_t v77 = v97;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v94, 1, 1, v97);
      uint64_t v74 = v91;
    }
    id v79 = [v100 creationDate];
    if (v79)
    {
      id v80 = v79;
      uint64_t v81 = v48;
      uint64_t v82 = v92;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
      uint64_t v84 = (uint64_t)v89;
      v83(v89, v82, v97);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v81)(v84, 0, 1, v97);
      uint64_t v77 = v97;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v84, 1, v97) != 1)
      {
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v96);
        Swift::String v78 = v90;
        v83(v90, (char *)v84, v77);
LABEL_51:
        sub_1000AA894((uint64_t)v94, &qword_100261D90);
        id v75 = *(void (**)(uint64_t, char *, uint64_t))(v74 + 32);
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v84 = (uint64_t)v89;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v89, 1, 1, v77);
    }
    Swift::String v78 = v90;
    static Date.now.getter();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v96);
    sub_1000AA894(v84, &qword_100261D90);
    goto LABEL_51;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_5;
  }
  sub_10012FCB4();
  swift_allocError();
  *unint64_t v40 = 0;
  swift_willThrow();

LABEL_13:
  sub_1000AA894(v99, &qword_100261D90);

  type metadata accessor for AADeviceRecord();
  swift_deallocPartialClassInstance();
  return v26;
}

void (*sub_10012C4A8(uint64_t a1, uint64_t a2, unint64_t a3, void *a4))(uint64_t, uint64_t)
{
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000AA024(&qword_100261D90);
  __n128 v13 = __chkstk_darwin(v12 - 8);
  id v54 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v10;
  uint64_t v57 = v9;
  uint64_t v15 = *(void (**)(__n128))(v10 + 56);
  NSString v61 = &v4[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp];
  NSString v53 = v15;
  v15(v13);
  uint64_t v16 = &v4[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  *(void *)uint64_t v16 = a2;
  *((void *)v16 + 1) = a3;
  uint64_t v17 = &v4[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier];
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v19 + 16);
  NSString v58 = v17;
  uint64_t v60 = a1;
  uint64_t v62 = v18;
  v20(v17, a1);
  NSString v21 = v4;
  uint64_t v59 = a2;
  uint64_t v22 = a2;
  unint64_t v23 = a3;
  sub_1000AA680(v22, a3);
  id v64 = a4;
  id v24 = [a4 bluetoothAddress];
  if (!v24)
  {
    char v31 = 2;
LABEL_11:
    uint64_t v32 = v60;
    unint64_t v30 = v23;
    goto LABEL_12;
  }
  uint64_t v25 = v24;
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v28 = v27;

  uint64_t v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (!v29)
  {
    swift_bridgeObjectRelease();
    char v31 = 3;
    goto LABEL_11;
  }
  unint64_t v30 = v23;
  if (v26 == 0xD000000000000011 && v28 == 0x80000001001F75A0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v31 = 3;
    uint64_t v32 = v60;
LABEL_12:
    uint64_t v33 = v59;
    sub_10012FCB4();
    swift_allocError();
    *uint64_t v34 = v31;
    swift_willThrow();

    sub_1000AA8F0(v33, v30);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v36 = v32;
    uint64_t v37 = v62;
    v35(v36, v62);
    sub_1000AA8F0(*(void *)v16, *((void *)v16 + 1));
    v35((uint64_t)v58, v37);
    sub_1000AA894((uint64_t)v61, &qword_100261D90);

    type metadata accessor for AADeviceRecord();
    swift_deallocPartialClassInstance();
    return v35;
  }
  id v39 = (uint64_t *)&v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  *id v39 = v26;
  v39[1] = v28;
  id v40 = v64;
  unsigned __int8 v41 = [v64 acceptReplyPlayPauseConfig];
  v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig] = v41;
  unsigned __int8 v42 = [v40 listeningModeOffAllowed];
  v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff] = v42;
  id v43 = [v40 audiogramEnrolledTimestamp];
  if (v43)
  {
    NSString v44 = v43;
    uint64_t v45 = (uint64_t)v54;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = 0;
  }
  else
  {
    uint64_t v46 = 1;
    uint64_t v45 = (uint64_t)v54;
  }
  uint64_t v47 = v57;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v53)(v45, v46, 1, v57);
  uint64_t v48 = (uint64_t)v61;
  swift_beginAccess();
  sub_1000F7A3C(v45, v48);
  swift_endAccess();
  unsigned __int8 v49 = [v40 declineDismissSkipConfig];
  v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig] = v49;
  unsigned __int8 v50 = [v40 headGestureToggle];
  v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode] = v50;
  id v51 = v55;
  static Date.now.getter();
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v21[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate], v51, v47);

  char v52 = (objc_class *)type metadata accessor for AADeviceRecord();
  v63.receiver = v21;
  v63.super_class = v52;
  uint64_t v35 = (void (*)(uint64_t, uint64_t))[v63 init];

  sub_1000AA8F0(v59, v30);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v60, v62);
  return v35;
}

char *AADeviceRecord.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return AADeviceRecord.init(from:)(a1);
}

char *AADeviceRecord.init(from:)(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v68 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v69 = (char *)&v65 - v7;
  uint64_t v8 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v8 - 8);
  uint64_t v66 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v67 = (uint64_t)&v65 - v11;
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v65 - v13;
  __chkstk_darwin(v14);
  id v72 = (char *)&v65 - v15;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v74 = v16;
  uint64_t v75 = v17;
  __chkstk_darwin(v16);
  uint64_t v77 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000AA024(&qword_1002633B8);
  uint64_t v79 = *(void *)(v19 - 8);
  uint64_t v80 = v19;
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = v4;
  uint64_t v25 = *(void (**)(__n128))(v4 + 56);
  uint64_t v24 = v4 + 56;
  unint64_t v23 = v25;
  uint64_t v76 = &v1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp];
  uint64_t v73 = v3;
  v25(v20);
  uint64_t v26 = (char *)a1[3];
  uint64_t v81 = a1;
  sub_1000ABF58(a1, (uint64_t)v26);
  sub_10012F43C();
  unint64_t v27 = v1;
  Swift::String v78 = v22;
  uint64_t v28 = v82;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v28)
  {
    uint64_t v29 = (uint64_t)v76;
    unint64_t v30 = v77;
    id v65 = v23;
    uint64_t v82 = v24;
    char v85 = 0;
    sub_1000AC040();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(_OWORD *)&v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata] = *(_OWORD *)v84;
    LOBYTE(v84[0]) = 1;
    sub_10012FD08((unint64_t *)&unk_1002633D0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = v74;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v30, v32);
    LOBYTE(v84[0]) = 2;
    uint64_t v77 = 0;
    uint64_t v33 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v34 = (uint64_t *)&v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
    *uint64_t v34 = v33;
    v34[1] = v35;
    LOBYTE(v84[0]) = 3;
    v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig] = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v84[0]) = 4;
    v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff] = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v84[0]) = 5;
    sub_10012FD08(&qword_100261C10, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v36 = (uint64_t)v72;
    uint64_t v37 = v73;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    swift_beginAccess();
    sub_1000F7A3C(v36, v29);
    swift_endAccess();
    LOBYTE(v84[0]) = 6;
    v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig] = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v84[0]) = 7;
    v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode] = KeyedDecodingContainer.decode(_:forKey:)();
    id v38 = v69;
    static Date.now.getter();
    uint64_t v39 = v70;
    uint64_t v76 = *(char **)(v70 + 32);
    uint64_t v77 = (char *)(v70 + 32);
    ((void (*)(char *, char *, uint64_t))v76)(&v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate], v38, v37);

    id v40 = (objc_class *)type metadata accessor for AADeviceRecord();
    v83.receiver = v27;
    v83.super_class = v40;
    id v41 = [super init];
    LOBYTE(v84[0]) = 8;
    uint64_t v26 = (char *)v41;
    uint64_t v42 = v71;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    id v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    uint64_t v75 = v39 + 48;
    NSString v44 = v43;
    if (v43(v42, 1, v37) != 1)
    {
      (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
      ((void (*)(char *, uint64_t, uint64_t))v76)(v68, v71, v73);
LABEL_22:
      id v64 = &v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v64, v68, v73);
      swift_endAccess();
      sub_1000ABFF0((uint64_t)v81);

      return v26;
    }
    uint64_t v46 = (uint64_t *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
    uint64_t v48 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
    unint64_t v47 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
    sub_1000AA680(v48, v47);
    Class isa = sub_100130420(v48, v47);
    sub_1000AA8F0(v48, v47);
    if (!isa)
    {
      unsigned __int8 v50 = v26;
      Class isa = sub_1000B4F04((uint64_t)v50).super.isa;
    }
    v84[0] = isa;
    sub_10012E130(v84);
    id v51 = [isa modificationDate];

    if (v51)
    {
      char v52 = v69;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v53 = v67;
      uint64_t v54 = v73;
      ((void (*)(uint64_t, char *, uint64_t))v76)(v67, v52, v73);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v65)(v53, 0, 1, v54);
      if (v44(v53, 1, v54) != 1)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
        ((void (*)(char *, uint64_t, uint64_t))v76)(v68, v67, v73);
LABEL_21:
        sub_1000AA894(v71, &qword_100261D90);
        goto LABEL_22;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v67, 1, 1, v73);
    }
    uint64_t v57 = *v46;
    unint64_t v56 = v46[1];
    sub_1000AA680(*v46, v56);
    NSString v58 = sub_100130420(v57, v56);
    sub_1000AA8F0(v57, v56);
    if (!v58)
    {
      uint64_t v59 = v26;
      NSString v58 = sub_1000B4F04((uint64_t)v59).super.isa;
    }
    v84[0] = v58;
    sub_10012E130(v84);
    id v60 = [v58 creationDate];

    if (v60)
    {
      NSString v61 = v69;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v62 = v66;
      uint64_t v63 = v73;
      ((void (*)(uint64_t, char *, uint64_t))v76)(v66, v61, v73);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v65)(v62, 0, 1, v63);
      if (v44(v62, 1, v63) != 1)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
        ((void (*)(char *, uint64_t, uint64_t))v76)(v68, v66, v73);
LABEL_20:
        sub_1000AA894(v67, &qword_100261D90);
        goto LABEL_21;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v66, 1, 1, v73);
    }
    static Date.now.getter();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
    sub_1000AA894(v66, &qword_100261D90);
    goto LABEL_20;
  }

  sub_1000ABFF0((uint64_t)v81);
  sub_1000AA894((uint64_t)&v27[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp], &qword_100261D90);
  type metadata accessor for AADeviceRecord();
  swift_deallocPartialClassInstance();
  return v26;
}

void AADeviceRecord.init()()
{
}

unint64_t sub_10012D7F4(char a1)
{
  unint64_t result = 0x74654D64756F6C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0x7473654764616568;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10012D938()
{
  return sub_10012D7F4(*v0);
}

uint64_t sub_10012D940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10012F8F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10012D968(uint64_t a1)
{
  unint64_t v2 = sub_10012F43C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10012D9A4(uint64_t a1)
{
  unint64_t v2 = sub_10012F43C();

  return CodingKey.debugDescription.getter(a1, v2);
}

id AADeviceRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AADeviceRecord();
  return [super dealloc];
}

uint64_t AADeviceRecord.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AA024((uint64_t *)&unk_1002633E0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ABF58(a1, a1[3]);
  sub_10012F43C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v30 = *(_OWORD *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata);
  char v29 = 0;
  sub_1000AC094();
  uint64_t v28 = v10;
  uint64_t v14 = v13;
  uint64_t v15 = v27;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  }
  uint64_t v17 = (uint64_t)v9;
  unint64_t v27 = v6;
  uint64_t v18 = v26;
  LOBYTE(v30) = 1;
  type metadata accessor for UUID();
  sub_10012FD08(&qword_100262590, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  LOBYTE(v30) = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v19 = v11;
  LOBYTE(v30) = 3;
  KeyedEncodingContainer.encode(_:forKey:)();
  LOBYTE(v30) = 4;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v20 = OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
  swift_beginAccess();
  sub_1000F7934(v20, v17);
  char v29 = 5;
  sub_10012FD08(&qword_100261C30, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  sub_1000AA894(v17, &qword_100261D90);
  char v29 = 6;
  KeyedEncodingContainer.encode(_:forKey:)();
  char v29 = 7;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v21 = OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate;
  swift_beginAccess();
  uint64_t v22 = v25;
  unint64_t v23 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v21, v18);
  char v31 = 8;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v28);
}

uint64_t sub_10012E01C()
{
  return 0x6563697665444141;
}

uint64_t sub_10012E040()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata;
  uint64_t v2 = *(void *)v1;
  sub_1000AA680(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_10012E084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10012E10C(id *a1)
{
  return sub_10012E130(a1);
}

uint64_t sub_10012E130(id *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  uint64_t v51 = v5;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000AA024(&qword_100262950);
  __chkstk_darwin(v46);
  uint64_t v47 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v8 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v41 - v11;
  __chkstk_darwin(v12);
  uint64_t v49 = (uint64_t)&v41 - v13;
  static os_log_type_t.debug.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001CFDB0;
  id v15 = *a1;
  id v16 = [v15 description];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_1000AA5E0();
  *(void *)(v14 + 32) = v17;
  *(void *)(v14 + 40) = v19;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  [v15 encryptedValues];
  swift_getObjectType();
  CKRecordKeyValueSetting.subscript.getter();
  uint64_t v48 = v2;
  unint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress);
  unint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8);
  if (!*((void *)&v52 + 1)) {
    goto LABEL_7;
  }
  if (v52 != __PAIR128__(v21, v20))
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
LABEL_7:
    *((void *)&v53 + 1) = &type metadata for String;
    uint64_t v54 = &protocol witness table for String;
    *(void *)&long long v52 = v20;
    *((void *)&v52 + 1) = v21;
    swift_bridgeObjectRetain();
    CKRecordKeyValueSetting.subscript.setter();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  CKRecordKeyValueSetting.subscript.getter();
  uint64_t v23 = v48;
  int v24 = *(unsigned __int8 *)(v48 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig);
  if ((BYTE1(v52) & 1) != 0 || v52 != v24)
  {
    *((void *)&v53 + 1) = &type metadata for UInt8;
    uint64_t v54 = &protocol witness table for UInt8;
    LOBYTE(v52) = v24;
    CKRecordKeyValueSetting.subscript.setter();
  }
  CKRecordKeyValueSetting.subscript.getter();
  int v25 = *(unsigned __int8 *)(v23 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff);
  if ((BYTE1(v52) & 1) != 0 || v52 != v25)
  {
    *((void *)&v53 + 1) = &type metadata for Int8;
    uint64_t v54 = &protocol witness table for Int8;
    LOBYTE(v52) = v25;
    CKRecordKeyValueSetting.subscript.setter();
  }
  id v43 = "allowNoiseManagementOff";
  uint64_t v27 = v49;
  uint64_t v26 = v50;
  CKRecordKeyValueSetting.subscript.getter();
  uint64_t v28 = v23 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
  swift_beginAccess();
  uint64_t v29 = v47;
  uint64_t v30 = v47 + *(int *)(v46 + 48);
  sub_1000F7934(v27, v47);
  sub_1000F7934(v28, v30);
  char v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v31(v29, 1, v26) == 1)
  {
    sub_1000AA894(v27, &qword_100261D90);
    if (v31(v30, 1, v26) == 1)
    {
      sub_1000AA894(v29, &qword_100261D90);
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v32 = (uint64_t)v45;
    sub_1000F7934(v29, (uint64_t)v45);
    if (v31(v30, 1, v26) != 1)
    {
      uint64_t v33 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v42, v30, v26);
      sub_10012FD08((unint64_t *)&unk_100263460, (void (*)(uint64_t))&type metadata accessor for Date);
      char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v51 + 8);
      v35(v33, v50);
      sub_1000AA894(v49, &qword_100261D90);
      v35(v45, v50);
      uint64_t v26 = v50;
      uint64_t v23 = v48;
      sub_1000AA894(v29, &qword_100261D90);
      if (v34) {
        goto LABEL_25;
      }
      goto LABEL_21;
    }
    sub_1000AA894(v49, &qword_100261D90);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v32, v26);
  }
  sub_1000AA894(v29, &qword_100262950);
LABEL_21:
  uint64_t v36 = v44;
  sub_1000F7934(v28, v44);
  if (v31(v36, 1, v26) == 1)
  {
    sub_1000AA894(v36, &qword_100261D90);
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v54 = 0;
  }
  else
  {
    *((void *)&v53 + 1) = v26;
    uint64_t v54 = &protocol witness table for Date;
    uint64_t v37 = sub_1000F8B34((uint64_t *)&v52);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v51 + 32))(v37, v36, v26);
  }
  CKRecordKeyValueSetting.subscript.setter();
LABEL_25:
  CKRecordKeyValueSetting.subscript.getter();
  int v38 = *(unsigned __int8 *)(v23 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig);
  if ((BYTE1(v52) & 1) != 0 || v52 != v38)
  {
    *((void *)&v53 + 1) = &type metadata for UInt8;
    uint64_t v54 = &protocol witness table for UInt8;
    LOBYTE(v52) = v38;
    CKRecordKeyValueSetting.subscript.setter();
  }
  CKRecordKeyValueSetting.subscript.getter();
  int v39 = *(unsigned __int8 *)(v23 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode);
  if ((BYTE1(v52) & 1) != 0 || v52 != v39)
  {
    *((void *)&v53 + 1) = &type metadata for Int8;
    uint64_t v54 = &protocol witness table for Int8;
    LOBYTE(v52) = v39;
    CKRecordKeyValueSetting.subscript.setter();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10012E9C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

char *sub_10012EA38@<X0>(void *a1@<X0>, char **a2@<X8>)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for AADeviceRecord());
  uint64_t result = AADeviceRecord.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10012EA90(void *a1)
{
  return AADeviceRecord.encode(to:)(a1);
}

uint64_t sub_10012EAB4(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AA024(&qword_100262950);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v40 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - v17;
  if (sub_10012F050((uint64_t)a1))
  {
    int v19 = a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig];
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig) != v19) {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig) = v19;
    }
    id v40 = v12;
    uint64_t v41 = v6;
    int v20 = a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff];
    if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff) != v20) {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff) = v20;
    }
    uint64_t v21 = (uint64_t)&a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp];
    swift_beginAccess();
    sub_1000F7934(v21, (uint64_t)v18);
    uint64_t v22 = v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1000F7934(v22, (uint64_t)v9);
    sub_1000F7934((uint64_t)v18, v23);
    int v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
    if (v24((uint64_t)v9, 1, v4) == 1)
    {
      if (v24(v23, 1, v4) == 1)
      {
        sub_1000AA894((uint64_t)v9, &qword_100261D90);
LABEL_19:
        int v36 = a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig];
        if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig) != v36) {
          *(unsigned char *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig) = v36;
        }
        int v37 = a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode];
        int v38 = v41;
        if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode) != v37) {
          *(unsigned char *)(v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode) = v37;
        }
        static Date.now.getter();
        uint64_t v39 = v2 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate;
        swift_beginAccess();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 40))(v39, v38, v4);
        swift_endAccess();
        return sub_1000AA894((uint64_t)v18, &qword_100261D90);
      }
    }
    else
    {
      sub_1000F7934((uint64_t)v9, (uint64_t)v15);
      if (v24(v23, 1, v4) != 1)
      {
        uint64_t v32 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v41, v23, v4);
        sub_10012FD08((unint64_t *)&unk_100263460, (void (*)(uint64_t))&type metadata accessor for Date);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v34 = *(void (**)(char *, uint64_t))(v32 + 8);
        v34(v41, v4);
        v34(v15, v4);
        sub_1000AA894((uint64_t)v9, &qword_100261D90);
        if (v33) {
          goto LABEL_19;
        }
LABEL_18:
        uint64_t v35 = (uint64_t)v40;
        sub_1000F7934((uint64_t)v18, (uint64_t)v40);
        swift_beginAccess();
        sub_1000F7A3C(v35, v22);
        swift_endAccess();
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v4);
    }
    sub_1000AA894((uint64_t)v9, &qword_100262950);
    goto LABEL_18;
  }
  static os_log_type_t.info.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  uint64_t v26 = a1;
  id v27 = [v26 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000AA5E0();
  *(void *)(v25 + 32) = v28;
  *(void *)(v25 + 40) = v30;
  os_log(_:dso:log:_:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10012F050(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1000AA024(&qword_100262950);
  __chkstk_darwin(v7);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  id v15 = &v24[-v14];
  if (!a1) {
    goto LABEL_9;
  }
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_acceptReplyPlayPauseConfig)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_allowNoiseManagementOff)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_declineDismissSkipConfig)
    || *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_headGestureMode))
  {
    char v20 = 1;
    return v20 & 1;
  }
  uint64_t v16 = a1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
  swift_beginAccess();
  sub_1000F7934(v16, (uint64_t)v15);
  uint64_t v17 = v1 + OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_audiogramCreationTimestamp;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1000F7934((uint64_t)v15, (uint64_t)v9);
  sub_1000F7934(v17, v18);
  int v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v9, 1, v3) != 1)
  {
    sub_1000F7934((uint64_t)v9, (uint64_t)v12);
    if (v19(v18, 1, v3) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 32))(v6, v18, v3);
      sub_10012FD08((unint64_t *)&unk_100263460, (void (*)(uint64_t))&type metadata accessor for Date);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
      v23(v6, v3);
      sub_1000AA894((uint64_t)v15, &qword_100261D90);
      v23(v12, v3);
      sub_1000AA894((uint64_t)v9, &qword_100261D90);
      char v20 = v22 ^ 1;
      return v20 & 1;
    }
    sub_1000AA894((uint64_t)v15, &qword_100261D90);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v12, v3);
    goto LABEL_14;
  }
  sub_1000AA894((uint64_t)v15, &qword_100261D90);
  if (v19(v18, 1, v3) != 1)
  {
LABEL_14:
    sub_1000AA894((uint64_t)v9, &qword_100262950);
    char v20 = 1;
    return v20 & 1;
  }
  sub_1000AA894((uint64_t)v9, &qword_100261D90);
LABEL_9:
  char v20 = 0;
  return v20 & 1;
}

unint64_t sub_10012F43C()
{
  unint64_t result = qword_1002633C0;
  if (!qword_1002633C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002633C0);
  }
  return result;
}

uint64_t type metadata accessor for AADeviceRecord()
{
  uint64_t result = qword_100263430;
  if (!qword_100263430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10012F4DC(uint64_t a1)
{
  uint64_t result = sub_10012FD08(&qword_1002633F0, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10012F534(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10012FD08(&qword_1002633F8, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
  uint64_t result = sub_10012FD08(&qword_100263400, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_10012F5B8()
{
  return type metadata accessor for AADeviceRecord();
}

void sub_10012F5C0()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000F7CEC();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AADeviceRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012F7B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AADeviceRecord.CodingKeys()
{
  return &type metadata for AADeviceRecord.CodingKeys;
}

unint64_t sub_10012F7F4()
{
  unint64_t result = qword_100263448;
  if (!qword_100263448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263448);
  }
  return result;
}

unint64_t sub_10012F84C()
{
  unint64_t result = qword_100263450;
  if (!qword_100263450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263450);
  }
  return result;
}

unint64_t sub_10012F8A4()
{
  unint64_t result = qword_100263458;
  if (!qword_100263458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263458);
  }
  return result;
}

uint64_t sub_10012F8F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74654D64756F6C63 && a2 == 0xED00006174616461;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001001F6C20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001001FD6D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001001FD6F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001001FD710 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001001FD730 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7473654764616568 && a2 == 0xEF65646F4D657275 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001001F6D90)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unint64_t sub_10012FCB4()
{
  unint64_t result = qword_100263470;
  if (!qword_100263470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263470);
  }
  return result;
}

uint64_t sub_10012FD08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AADeviceRecord.AADeviceRecordError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10012FE1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AADeviceRecord.AADeviceRecordError()
{
  return &type metadata for AADeviceRecord.AADeviceRecordError;
}

unint64_t sub_10012FE58()
{
  unint64_t result = qword_100263480;
  if (!qword_100263480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263480);
  }
  return result;
}

uint64_t sub_10012FEAC(uint64_t a1, uint64_t a2)
{
  sub_10012FF24(v2, a1, a2, &v7);
  return v7;
}

uint64_t sub_10012FF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  __n128 v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 32))(v13, v12, v9);
  unint64_t v16 = v15;
  Class isa = sub_100130420(v14, v15);
  sub_1000AA8F0(v14, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, a2);
  if (!isa) {
    Class isa = sub_10013009C((uint64_t)v11, a2, a3).super.isa;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
  char v20 = isa;
  uint64_t result = (*(uint64_t (**)(void **, uint64_t, uint64_t))(a3 + 64))(&v20, a2, a3);
  *a4 = isa;
  return result;
}

CKRecord sub_10013009C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B66A0(0, &qword_1002629E0);
  (*(void (**)(uint64_t))(*(void *)(a3 + 8) + 32))(a2);
  uint64_t v9 = UUID.uuidString.getter();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v14 = v13;
  v15._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v15._object = v16;
  v17._uint64_t countAndFlagsBits = v12;
  v17._object = v14;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v17, v15).super.isa;
  v19._uint64_t countAndFlagsBits = v9;
  v19._object = v11;
  v20.super.Class isa = CKRecordID.init(recordName:zoneID:)(v19, (CKRecordZoneID)isa).super.isa;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
  char v22 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  uint64_t v23 = v22(a2, a3);
  uint64_t v25 = v24;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_1000AA5E0();
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v25;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, (unint64_t *)&qword_100262960);
  v26._uint64_t countAndFlagsBits = v22(a2, a3);
  return CKRecord.init(recordType:recordID:)(v26, v20);
}

id sub_100130360()
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = 0;
  id v2 = [v0 initForReadingFromData:isa error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

id sub_100130420(uint64_t a1, unint64_t a2)
{
  id v4 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 != a1 >> 32) {
        goto LABEL_7;
      }
      return 0;
    case 2uLL:
      if (*(void *)(a1 + 16) != *(void *)(a1 + 24)) {
        goto LABEL_7;
      }
      return 0;
    case 3uLL:
      return v4;
    default:
      if ((a2 & 0xFF000000000000) == 0) {
        return 0;
      }
LABEL_7:
      id v5 = objc_allocWithZone((Class)NSKeyedUnarchiver);
      sub_1000AA680(a1, a2);
      id v6 = sub_100130360();
      sub_1000AA8F0(a1, a2);
      id v8 = [objc_allocWithZone((Class)CKRecord) initWithCoder:v6];
      if (v8)
      {
        id v4 = v8;
      }
      else
      {
        static os_log_type_t.error.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        os_log(_:dso:log:_:_:)();

        return 0;
      }
      return v4;
  }
}

id sub_100130684()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CloudPushService()) init];
  qword_10026ADB8 = (uint64_t)result;
  return result;
}

id sub_100130710()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushDelegates] = _swiftEmptyDictionarySingleton;
  uint64_t v13 = OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue;
  sub_1000D9DC4();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  uint64_t v7 = v0;
  static DispatchQoS.unspecified.getter();
  Swift::String v15 = _swiftEmptyArrayStorage;
  sub_100134124((unint64_t *)&unk_100263C90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000AA024((uint64_t *)&unk_100263220);
  sub_1000D8D38((unint64_t *)&qword_100263CA0, (uint64_t *)&unk_100263220);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  *(void *)&v0[v13] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  id v8 = (uint64_t *)&v7[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushEnvironment];
  *id v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v8[1] = v9;
  *(void *)&v7[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_apsConnection] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_buddyStateWatcher] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_firstUnlockStateWatcher] = 0;

  uint64_t v10 = (objc_class *)type metadata accessor for CloudPushService();
  v14.receiver = v7;
  v14.super_class = v10;
  id v11 = [super init];
  static os_log_type_t.default.getter();
  if (qword_100261930 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();

  return v11;
}

void sub_100130A78()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  if (![v2 isBuddyComplete])
  {
    static os_log_type_t.default.getter();
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = sub_100133F30;
    uint64_t v24 = v11;
    unint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_100106F90;
    char v22 = &unk_10023AD70;
    uint64_t v12 = _Block_copy(&aBlock);
    swift_release();
    id v13 = [v2 addBuddyCompleteObserver:v12];
    _Block_release(v12);
    uint64_t v14 = OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_buddyStateWatcher;
    goto LABEL_15;
  }
  unsigned int v3 = [v2 isFirstUnlocked];
  static os_log_type_t.default.getter();
  if (!v3)
  {
    if (qword_100261938 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = sub_100133F38;
    uint64_t v24 = v15;
    unint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    uint64_t v21 = sub_100106F90;
    char v22 = &unk_10023AD98;
    unint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    id v13 = [v2 addFirstUnlockObserver:v16];
    _Block_release(v16);
    uint64_t v14 = OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_firstUnlockStateWatcher;
LABEL_15:
    Swift::String v17 = *(void **)&v1[v14];
    *(void *)&v1[v14] = v13;

    return;
  }
  if (qword_100261930 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = v7;

    v9._uint64_t countAndFlagsBits = v6;
    v9._object = v8;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    id v10 = objc_allocWithZone((Class)type metadata accessor for BTUserTransaction());
    uint64_t v18 = sub_1000C12A4("com.apple.bluetooth.user.setupAPS", 33, (uint64_t *)2);
    sub_100131154(v18, v1, 0xD000000000000018, 0x80000001001FDB70, 0xD00000000000001BLL, 0x80000001001FDB50);
    swift_bridgeObjectRelease();
  }
  else
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
  }
}

void sub_100130F04()
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001CFDB0;
  unsigned __int8 v1 = [self isBuddyComplete];
  *(void *)(v0 + 56) = &type metadata for Bool;
  *(void *)(v0 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v0 + 32) = v1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v3 = (void *)Strong;
    sub_100130A78();
  }
  swift_beginAccess();
  id v4 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    id v5 = *(void **)&v4[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_buddyStateWatcher];
    *(void *)&v4[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_buddyStateWatcher] = 0;
  }
}

void sub_100131060()
{
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v1 = (void *)Strong;
    sub_100130A78();
  }
  swift_beginAccess();
  uint64_t v2 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    unsigned int v3 = *(void **)&v2[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_firstUnlockStateWatcher];
    *(void *)&v2[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_firstUnlockStateWatcher] = 0;
  }
}

uint64_t sub_100131154(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a5;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v14 - 8);
  uint64_t v28 = v14;
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D9DC4();
  uint64_t v26 = static OS_dispatch_queue.main.getter();
  Swift::String v17 = (void *)swift_allocObject();
  void v17[2] = a2;
  v17[3] = a3;
  uint64_t v18 = v25;
  v17[4] = a4;
  v17[5] = v18;
  v17[6] = a6;
  v17[7] = a1;
  aBlock[4] = sub_100133F90;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023ADE8;
  Swift::String v19 = _Block_copy(aBlock);
  id v20 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100134124((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000D8D38((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  char v22 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v28);
}

uint64_t sub_10013144C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = *(void **)(a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  id v9 = objc_allocWithZone((Class)APSConnection);
  swift_bridgeObjectRetain();
  id v10 = v8;
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v9 initWithEnvironmentName:v11 namedDelegatePort:v12 queue:v10];

  uint64_t v14 = OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_apsConnection;
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_apsConnection);
  *(void *)(a1 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_apsConnection) = v13;

  unint64_t v16 = *(void **)(a1 + v14);
  if (v16)
  {
    sub_1000AA024((uint64_t *)&unk_100263CB0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1001CFDB0;
    *(void *)(v17 + 32) = a4;
    *(void *)(v17 + 40) = a5;
    id v18 = v16;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 _setEnabledTopics:isa];

    id v20 = *(void **)(a1 + v14);
    if (v20)
    {
      id v21 = v20;
      NSString v22 = String._bridgeToObjectiveC()();
      [v21 requestTokenForTopic:v22 identifier:0];

      uint64_t v23 = *(void **)(a1 + v14);
      if (v23) {
        [v23 setDelegate:a1];
      }
    }
  }
  static os_log_type_t.default.getter();
  if (qword_100261930 != -1) {
    swift_once();
  }

  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_1001316E0(uint64_t a1)
{
  unsigned int v3 = *(void **)(v1 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100129F50;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_1000D913C;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_100106FFC;
  v10[3] = &unk_10023AD48;
  uint64_t v7 = _Block_copy(v10);
  swift_unknownObjectRetain();
  swift_retain();
  id v8 = v3;
  swift_release();
  dispatch_sync(v8, v7);

  _Block_release(v7);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

void sub_10013186C(void *a1)
{
  if (a1)
  {
    swift_unknownObjectRetain();
    static os_log_type_t.default.getter();
    if (qword_100261930 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001D0A20;
    swift_unknownObjectRetain();
    sub_1000AA024((uint64_t *)&unk_100263558);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    unint64_t v6 = sub_1000AA5E0();
    *(void *)(v2 + 64) = v6;
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    id v7 = [a1 cloudContainerIdentifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    *(void *)(v2 + 96) = &type metadata for String;
    *(void *)(v2 + 104) = v6;
    *(void *)(v2 + 72) = v8;
    *(void *)(v2 + 80) = v10;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v12 = (char *)Strong;
      id v13 = [a1 cloudContainerIdentifier];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      uint64_t v17 = &v12[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushDelegates];
      swift_beginAccess();
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *(void *)v17;
      *(void *)uint64_t v17 = 0x8000000000000000;
      sub_1000B5A2C((uint64_t)a1, v14, v16, isUniquelyReferenced_nonNull_native);
      *(void *)uint64_t v17 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100131AD4(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10012A000;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_1000AF254;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_100106FFC;
  v10[3] = &unk_10023ACD0;
  id v7 = _Block_copy(v10);
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v8 = v3;
  swift_release();
  dispatch_sync(v8, v7);

  _Block_release(v7);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100131C60(uint64_t a1)
{
  static os_log_type_t.default.getter();
  if (qword_100261930 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
  swift_unknownObjectRetain();
  sub_1000AA024(&qword_100263568);
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_1000AA5E0();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      id v7 = (void *)result;
      id v8 = [(id)swift_unknownObjectRetain() cloudContainerIdentifier];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_beginAccess();
      sub_100122A2C(v9, v11);
      swift_endAccess();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100131E48(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

void sub_100131F78(void *a1)
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = String._bridgeToObjectiveC()();
  [a1 didReceiveWithToken:isa forTopic:v3 identifier:v4];
}

uint64_t sub_1001321DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = *(void **)(v3 + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_10013291C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  aBlock[3] = &unk_10023ABB8;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v12;
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v21 = _swiftEmptyArrayStorage;
  sub_100134124((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000D8D38((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  swift_release();
  return swift_release();
}

void sub_1001324E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = Strong + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushDelegates;
    swift_beginAccess();
    uint64_t v8 = *(void *)(*(void *)v7 + 16);
    static os_log_type_t.default.getter();
    if (v8)
    {
      if (qword_100261930 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001D0A20;
      uint64_t v10 = *(void *)(*(void *)v7 + 16);
      *(void *)(v9 + 56) = &type metadata for Int;
      *(void *)(v9 + 64) = &protocol witness table for Int;
      *(void *)(v9 + 32) = v10;
      swift_bridgeObjectRetain();
      sub_1000AA024((uint64_t *)&unk_100263558);
      uint64_t v11 = Dictionary.description.getter();
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      *(void *)(v9 + 96) = &type metadata for String;
      *(void *)(v9 + 104) = sub_1000AA5E0();
      *(void *)(v9 + 72) = v11;
      *(void *)(v9 + 80) = v13;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectWeakInit();
      id v14 = objc_allocWithZone((Class)type metadata accessor for BTUserTransaction());
      uint64_t v15 = sub_1000C12A4("com.apple.bluetooth.user.services.aps.processPush", 49, (uint64_t *)2);
      sub_100133AE8((uint64_t)v16, a2, a3);

      swift_unknownObjectWeakDestroy();
    }
    else
    {
      if (qword_100261930 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
    }
  }
}

uint64_t sub_100132740(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = (uint64_t *)(result + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushDelegates);
    swift_beginAccess();
    uint64_t v8 = *v7;
    swift_bridgeObjectRetain();

    swift_retain();
    sub_100132940(v8, a2, a3);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

id sub_1001327F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudPushService();
  return [super dealloc];
}

uint64_t type metadata accessor for CloudPushService()
{
  return self;
}

uint64_t sub_1001328E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10013291C()
{
  sub_1001324E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_100132928(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100132938()
{
  return swift_release();
}

uint64_t sub_100132940(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v42 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v40);
  uint64_t v39 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v43 = (unint64_t)(v9 + 63) >> 6;
  int v37 = (void (**)(unsigned char *, uint64_t))(v4 + 8);
  int v38 = v51;
  int v36 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
  uint64_t v46 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = v42;
  if (v11) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v26 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v26 < v43)
    {
      unint64_t v27 = *(void *)(v35 + 8 * v26);
      ++v13;
      if (v27) {
        goto LABEL_22;
      }
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v43) {
        return swift_release();
      }
      unint64_t v27 = *(void *)(v35 + 8 * v13);
      if (v27) {
        goto LABEL_22;
      }
      int64_t v13 = v26 + 2;
      if (v26 + 2 >= v43) {
        return swift_release();
      }
      unint64_t v27 = *(void *)(v35 + 8 * v13);
      if (v27) {
        goto LABEL_22;
      }
      int64_t v13 = v26 + 3;
      if (v26 + 3 >= v43) {
        return swift_release();
      }
      unint64_t v27 = *(void *)(v35 + 8 * v13);
      if (v27)
      {
LABEL_22:
        unint64_t v11 = (v27 - 1) & v27;
        for (unint64_t i = __clz(__rbit64(v27)) + (v13 << 6); ; unint64_t i = v24 | (v13 << 6))
        {
          uint64_t v29 = (uint64_t *)(*(void *)(v46 + 48) + 16 * i);
          uint64_t v30 = *v29;
          uint64_t v31 = v29[1];
          uint64_t v32 = *(void *)(*(void *)(v46 + 56) + 8 * i);
          swift_bridgeObjectRetain();
          id v33 = [(id)swift_unknownObjectRetain() pushDelegateQueue];
          if (v33)
          {
            uint64_t v15 = v33;
            id v16 = (void *)swift_allocObject();
            uint64_t v17 = v45;
            _OWORD v16[2] = v44;
            v16[3] = v17;
            v16[4] = v30;
            v16[5] = v31;
            v16[6] = v32;
            v51[2] = sub_100133E98;
            v51[3] = v16;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            v51[0] = sub_100106F90;
            v51[1] = &unk_10023AC58;
            uint64_t v18 = _Block_copy(aBlock);
            unint64_t v47 = v11;
            uint64_t v19 = v18;
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_retain();
            int64_t v48 = v13;
            uint64_t v20 = v39;
            static DispatchQoS.unspecified.getter();
            uint64_t v49 = _swiftEmptyArrayStorage;
            sub_100134124((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_1000AA024(&qword_100263550);
            sub_1000D8D38((unint64_t *)&qword_100263150, &qword_100263550);
            id v21 = v41;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            NSString v22 = v19;
            unint64_t v11 = v47;
            _Block_release(v22);

            (*v37)(v21, v14);
            uint64_t v23 = v20;
            int64_t v13 = v48;
            (*v36)(v23, v40);
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_release();
            if (!v11) {
              goto LABEL_7;
            }
          }
          else
          {
            v44(v32);
            swift_unknownObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (!v11) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v24 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      int64_t v28 = v26 + 4;
      if (v28 < v43)
      {
        unint64_t v27 = *(void *)(v35 + 8 * v28);
        if (v27)
        {
          int64_t v13 = v28;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v13 = v28 + 1;
          if (__OFADD__(v28, 1)) {
            goto LABEL_28;
          }
          if (v13 >= v43) {
            return swift_release();
          }
          unint64_t v27 = *(void *)(v35 + 8 * v13);
          ++v28;
          if (v27) {
            goto LABEL_22;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100132E30(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    static os_log_type_t.error.getter();
    if (qword_100261930 != -1) {
      swift_once();
    }
    return os_log(_:dso:log:_:_:)();
  }
  else
  {
    sub_1000AA680(a1, a2);
    if (IsAppleInternalBuild())
    {
      static os_log_type_t.default.getter();
      if (qword_100261930 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1001CFDB0;
      Swift::String v6 = Data.base64EncodedString(options:)(0);
      *(void *)(v5 + 56) = &type metadata for String;
      *(void *)(v5 + 64) = sub_1000AA5E0();
      *(Swift::String *)(v5 + 32) = v6;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    *(void *)(v7 + 24) = a2;
    sub_1000AA680(a1, a2);
    sub_1001321DC((uint64_t)sub_1001340C8, v7);
    swift_release();
    return sub_1000BFEB0(a1, a2);
  }
}

uint64_t sub_10013303C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 >> 60 == 15 || a4 == 0 || a6 == 0)
  {
    static os_log_type_t.error.getter();
    if (qword_100261930 != -1) {
      swift_once();
    }
    return os_log(_:dso:log:_:_:)();
  }
  else
  {
    sub_1000BFEC4(a1, a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (IsAppleInternalBuild())
    {
      static os_log_type_t.default.getter();
      if (qword_100261930 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1001D2D20;
      Swift::String v17 = Data.base64EncodedString(options:)(0);
      *(void *)(v16 + 56) = &type metadata for String;
      unint64_t v18 = sub_1000AA5E0();
      *(Swift::String *)(v16 + 32) = v17;
      *(void *)(v16 + 96) = &type metadata for String;
      *(void *)(v16 + 104) = v18;
      *(void *)(v16 + 64) = v18;
      *(void *)(v16 + 72) = a3;
      *(void *)(v16 + 80) = a4;
      *(void *)(v16 + 136) = &type metadata for String;
      *(void *)(v16 + 144) = v18;
      *(void *)(v16 + 112) = a5;
      *(void *)(v16 + 120) = a6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a1;
    v19[3] = a2;
    v19[4] = a3;
    v19[5] = a4;
    v19[6] = a5;
    v19[7] = a6;
    sub_1000AA680(a1, a2);
    sub_1001321DC((uint64_t)sub_100134080, (uint64_t)v19);
    swift_release();
    return sub_1000BFEB0(a1, a2);
  }
}

void sub_1001332C0(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v11 = a1;
    id v12 = [v11 userInfo];
    if (v12)
    {
      int64_t v13 = v12;
      id v57 = v11;
      NSString v58 = v1;
      uint64_t v50 = v10;
      uint64_t v51 = v8;
      long long v52 = v6;
      uint64_t v53 = v7;
      uint64_t v54 = v4;
      uint64_t v55 = v3;
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v15 = [self notificationFromRemoteNotificationDictionary:isa];

      static os_log_type_t.error.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v16 = swift_allocObject();
      long long v56 = xmmword_1001CFDB0;
      *(_OWORD *)(v16 + 16) = xmmword_1001CFDB0;
      aBlock[0] = v15;
      id v17 = v15;
      sub_1000AA024(&qword_100263570);
      uint64_t v18 = String.init<A>(describing:)();
      uint64_t v20 = v19;
      *(void *)(v16 + 56) = &type metadata for String;
      unint64_t v21 = sub_1000AA5E0();
      *(void *)(v16 + 64) = v21;
      *(void *)(v16 + 32) = v18;
      *(void *)(v16 + 40) = v20;
      NSString v22 = v17;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      if (v17 && (id v23 = [v17 containerIdentifier]) != 0)
      {
        unint64_t v24 = v23;
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v26;

        id v28 = v57;
        if (v25)
        {
LABEL_17:
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v29 = &v58[OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushDelegates];
            swift_beginAccess();
            uint64_t v30 = *(void *)v29;
            if (*(void *)(v30 + 16))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v31 = sub_1000B4FC4(v25, v27);
              if (v32)
              {
                NSString v58 = *(char **)(*(void *)(v30 + 56) + 8 * v31);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                LODWORD(v57) = static os_log_type_t.default.getter();
                if (qword_100261930 != -1) {
                  swift_once();
                }
                *(void *)&long long v56 = qword_10026ADD0;
                uint64_t v33 = swift_allocObject();
                *(_OWORD *)(v33 + 16) = xmmword_1001D0A20;
                *(void *)(v33 + 56) = &type metadata for String;
                *(void *)(v33 + 64) = v21;
                *(void *)(v33 + 32) = v25;
                *(void *)(v33 + 40) = v27;
                aBlock[0] = v15;
                uint64_t v34 = Optional.debugDescription.getter();
                *(void *)(v33 + 96) = &type metadata for String;
                *(void *)(v33 + 104) = v21;
                *(void *)(v33 + 72) = v34;
                *(void *)(v33 + 80) = v35;
                os_log(_:dso:log:_:_:)();
                swift_bridgeObjectRelease();
                id v36 = v58;
                id v37 = [v58 pushDelegateQueue];
                if (v37)
                {
                  int v38 = v37;
                  uint64_t v39 = swift_allocObject();
                  *(void *)(v39 + 16) = v36;
                  *(void *)(v39 + 24) = v28;
                  aBlock[4] = sub_100134028;
                  aBlock[5] = v39;
                  aBlock[0] = _NSConcreteStackBlock;
                  aBlock[1] = 1107296256;
                  void aBlock[2] = sub_100106F90;
                  aBlock[3] = &unk_10023AE60;
                  uint64_t v40 = _Block_copy(aBlock);
                  id v41 = v28;
                  swift_unknownObjectRetain();
                  uint64_t v42 = v50;
                  static DispatchQoS.unspecified.getter();
                  uint64_t v59 = _swiftEmptyArrayStorage;
                  sub_100134124((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
                  sub_1000AA024(&qword_100263550);
                  sub_1000D8D38((unint64_t *)&qword_100263150, &qword_100263550);
                  int64_t v43 = v22;
                  uint64_t v44 = v52;
                  uint64_t v45 = v55;
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  OS_dispatch_queue.async(group:qos:flags:execute:)();
                  _Block_release(v40);

                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v45);
                  (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v53);
                  swift_release();
                  return;
                }
                [v36 didReceiveWithMessage:v28];
                swift_unknownObjectRelease();
                goto LABEL_27;
              }
              swift_bridgeObjectRelease_n();
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          static os_log_type_t.default.getter();
          if (qword_100261930 != -1) {
            swift_once();
          }
          uint64_t v46 = swift_allocObject();
          *(_OWORD *)(v46 + 16) = v56;
          aBlock[0] = v15;
          uint64_t v47 = Optional.debugDescription.getter();
          *(void *)(v46 + 56) = &type metadata for String;
          *(void *)(v46 + 64) = v21;
          *(void *)(v46 + 32) = v47;
          *(void *)(v46 + 40) = v48;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v49 = swift_allocObject();
          *(void *)(v49 + 16) = v28;
          id v28 = v28;
          sub_1001321DC((uint64_t)sub_100133FD8, v49);
          swift_release();
LABEL_27:

          return;
        }
      }
      else
      {
        uint64_t v25 = 0;
        uint64_t v27 = 0xE000000000000000;
        id v28 = v57;
      }
      if (v27 == 0xE000000000000000) {
        goto LABEL_24;
      }
      goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261930 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
  }
}

uint64_t sub_100133AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int64_t v13 = (void *)result;
    uint64_t v27 = v3;
    uint64_t v14 = *(void **)(result + OBJC_IVAR____TtC15audioaccessoryd16CloudPushService_pushServiceQueue);
    uint64_t v15 = swift_allocObject();
    uint64_t v26 = v8;
    uint64_t v16 = v15;
    swift_unknownObjectWeakInit();
    id v17 = (void *)swift_allocObject();
    void v17[2] = v16;
    v17[3] = a2;
    uint64_t v25 = v16;
    v17[4] = a3;
    aBlock[4] = sub_100133E44;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    aBlock[3] = &unk_10023AC08;
    uint64_t v18 = _Block_copy(aBlock);
    id v23 = v14;
    swift_retain();
    swift_retain();
    uint64_t v19 = v11;
    static DispatchQoS.unspecified.getter();
    aBlock[10] = _swiftEmptyArrayStorage;
    sub_100134124((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v20 = v28;
    uint64_t v24 = v9;
    sub_1000AA024(&qword_100263550);
    sub_1000D8D38((unint64_t *)&qword_100263150, &qword_100263550);
    unint64_t v21 = v26;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    NSString v22 = v23;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v6);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v24);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100133E44()
{
  return sub_100132740(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100133E50()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100133E98()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 48));
}

uint64_t sub_100133ECC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100133EE0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100133F20()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100133F30()
{
}

void sub_100133F38()
{
}

uint64_t sub_100133F40()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100133F90()
{
  return sub_10013144C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100133FA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100133FD8(void *a1)
{
  return [a1 didReceiveWithMessage:*(void *)(v1 + 16)];
}

uint64_t sub_100133FE8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_100134028()
{
  return [*(id *)(v0 + 16) didReceiveWithMessage:*(void *)(v0 + 24)];
}

uint64_t sub_100134038()
{
  sub_1000AA8F0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100134080(void *a1)
{
}

uint64_t sub_100134090()
{
  sub_1000AA8F0(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001340C8(void *a1)
{
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [a1 didReceiveWithPublicToken:isa];
}

uint64_t sub_100134124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001341AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = &type metadata for AudioAccessoryFeatures;
  unint64_t v6 = sub_1000AE4C4();
  unint64_t v41 = v6;
  char v7 = isFeatureEnabled(_:)();
  uint64_t result = sub_1000ABFF0((uint64_t)&v39);
  if (v7)
  {
    v9._object = (void *)0x80000001001F70C0;
    v9._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    String.append(_:)(v9);
    v10._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v10._object = (void *)0x80000001001F70F0;
    String.append(_:)(v10);
    v11._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
    v11._object = (void *)0x80000001001FDF80;
    String.append(_:)(v11);
    v12._object = (void *)0x80000001001F7150;
    v12._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    String.append(_:)(v12);
    static os_log_type_t.default.getter();
    if (qword_100261960 != -1) {
      swift_once();
    }
    unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    sub_1000C2280();
    uint64_t v40 = &type metadata for AudioAccessoryFeatures;
    unint64_t v41 = v6;
    char v14 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)&v39);
    if ((v14 & 1) == 0) {
      goto LABEL_11;
    }
    if (![self isFirstUnlocked])
    {
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      goto LABEL_11;
    }
    sub_10015F0D4();
    if (qword_100261860 != -1) {
      goto LABEL_23;
    }
    while (1)
    {
      uint64_t v15 = sub_1000AA0CC(v2, (uint64_t)qword_10026AB00);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
      unint64_t v13 = sub_10015D0E0((uint64_t)v5);
      swift_release();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
      v3 += 8;
      v16(v5, v2);
LABEL_11:
      swift_release();
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v17) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v17) {
          return swift_bridgeObjectRelease();
        }
      }
      if (v17 >= 1) {
        break;
      }
      __break(1u);
LABEL_23:
      swift_once();
    }
    uint64_t v18 = 0;
    unint64_t v37 = v13 & 0xC000000000000001;
    long long v36 = xmmword_1001CFDB0;
    uint64_t v38 = a1;
    unint64_t v35 = v13;
    do
    {
      if (v37) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(v13 + 8 * v18 + 32);
      }
      uint64_t v20 = v19;
      ++v18;
      static os_log_type_t.default.getter();
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v36;
      id v22 = v20;
      id v23 = [v22 description];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_1000AA5E0();
      *(void *)(v21 + 32) = v24;
      *(void *)(v21 + 40) = v26;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      id v27 = v22;
      id v28 = [v27 description];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      v39._uint64_t countAndFlagsBits = 0xA2D2D2D2D2D0ALL;
      v39._object = (void *)0xE700000000000000;
      v32._uint64_t countAndFlagsBits = v29;
      v32._object = v31;
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v33._uint64_t countAndFlagsBits = 10;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      String.append(_:)(v39);

      swift_bridgeObjectRelease();
      unint64_t v13 = v35;
    }
    while (v17 != v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1001346D4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v9 = (void *)Strong;
    static os_log_type_t.default.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1001CFDB0;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_1000AA5E0();
    *(void *)(v10 + 32) = a4;
    *(void *)(v10 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v11 = sub_100134838(a4, a5);
    a2();
  }
  else
  {
    a2();
  }
}

id sub_100134838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v26 = &type metadata for AudioAccessoryFeatures;
  unint64_t v8 = sub_1000AE4C4();
  unint64_t v27 = v8;
  char v9 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v25);
  id v10 = 0;
  if ((v9 & 1) == 0) {
    return v10;
  }
  sub_1000C2280();
  uint64_t v26 = &type metadata for AudioAccessoryFeatures;
  unint64_t v27 = v8;
  char v11 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v25);
  if (v11)
  {
    uint64_t v26 = &type metadata for AudioAccessoryFeatures;
    unint64_t v27 = v8;
    char v12 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v25);
    if (v12)
    {
      if ([self isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_100261860 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_1000AA0CC(v4, (uint64_t)qword_10026AB00);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v13, v4);
        char v14 = (void *)sub_10015D0E0((uint64_t)v7);
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        static os_log_type_t.error.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        char v14 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
    }
    else
    {
      char v14 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100135C8C((unint64_t)v14, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15)
    {
      static os_log_type_t.default.getter();
      if (qword_100261940 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1001CFDB0;
      id v17 = v15;
      id v18 = [v17 description];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      *(void *)(v16 + 56) = &type metadata for String;
      *(void *)(v16 + 64) = sub_1000AA5E0();
      *(void *)(v16 + 32) = v19;
      *(void *)(v16 + 40) = v21;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      id v10 = sub_1001358D0();

      return v10;
    }
  }
  else
  {
    swift_release();
  }
  static os_log_type_t.debug.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1001CFDB0;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_1000AA5E0();
  *(void *)(v22 + 32) = a1;
  *(void *)(v22 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100134CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = &type metadata for AudioAccessoryFeatures;
  unint64_t v17 = sub_1000AE4C4();
  char v5 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v19 = 0;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue];
  char v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = &v19;
  v7[5] = v2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100136998;
  *(void *)(v8 + 24) = v7;
  unint64_t v17 = (unint64_t)sub_1000AF254;
  uint64_t v18 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106FFC;
  uint64_t v16 = (ValueMetadata *)&unk_10023B040;
  char v9 = _Block_copy(aBlock);
  id v10 = v6;
  swift_bridgeObjectRetain();
  char v11 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v10, v9);

  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v14 = v19;
    swift_release();
    return v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100134E80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_1000AA5E0();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v7 = sub_100134838(a1, a2);
  uint64_t v8 = *a3;
  *a3 = (uint64_t)v7;

  return _objc_release_x1(v7, v8);
}

uint64_t sub_100135014(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = (void *)Strong;
    static os_log_type_t.default.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1000AA5E0();
    *(void *)(v11 + 32) = a4;
    *(void *)(v11 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C2280();
    sub_100172290(a4, a5, 0xD000000000000011, 0x80000001001FDE80, a2, a3);

    return swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    unsigned char *v13 = 0;
    a2();
    return swift_errorRelease();
  }
}

uint64_t sub_1001351D8(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  id v7 = _Block_copy(aBlock);
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  _Block_copy(v7);
  id v11 = a1;
  a5(v8, v10, v11, v7);
  _Block_release(v7);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10013527C(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (void *)Strong;
    id v12 = [a4 bluetoothAddress];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    uint64_t v16 = sub_100135534();
    UUID.init()();
    id v17 = objc_allocWithZone((Class)type metadata accessor for AAProxCardsRecord());
    uint64_t v20 = (char *)sub_1000B1C0C((uint64_t)v9, 0, 0xC000000000000000, v13, v15, (uint64_t)v16);
    int v21 = static os_log_type_t.default.getter();
    v28[3] = v21;
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1001CFDB0;
    id v23 = a4;
    id v24 = [v23 description];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_1000AA5E0();
    *(void *)(v22 + 32) = v25;
    *(void *)(v22 + 40) = v27;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C2280();
    sub_10017E260(v20, a2, a3);

    return swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    *uint64_t v18 = 0;
    a2();
    return swift_errorRelease();
  }
}

void *sub_100135534()
{
  if ([v0 caseDoubleTapVersion])
  {
    id v1 = [v0 caseDoubleTapVersion];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v1, 0x62756F4465736163, 0xED0000706154656CLL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if ([v0 headGesturesVersion])
  {
    id v3 = [v0 headGesturesVersion];
    char v4 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v3, 0x7473654764616568, 0xEC00000073657275, v4);
    swift_bridgeObjectRelease();
  }
  if ([v0 hearingAssistVersion])
  {
    id v5 = [v0 hearingAssistVersion];
    char v6 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v5, 0x41676E6972616568, 0xED00007473697373, v6);
    swift_bridgeObjectRelease();
  }
  if ([v0 hearingTestVersion])
  {
    id v7 = [v0 hearingTestVersion];
    char v8 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v7, 0x54676E6972616568, 0xEB00000000747365, v8);
    swift_bridgeObjectRelease();
  }
  if ([v0 heartRateVersion])
  {
    id v9 = [v0 heartRateVersion];
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v9, 0x7461527472616568, 0xE900000000000065, v10);
    swift_bridgeObjectRelease();
  }
  if ([v0 voiceQualityVersion])
  {
    id v11 = [v0 voiceQualityVersion];
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v11, 0x6175516563696F76, 0xEC0000007974696CLL, v12);
    swift_bridgeObjectRelease();
  }
  if ([v0 whatsNewVersion])
  {
    id v13 = [v0 whatsNewVersion];
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1000B57B8((uint64_t)v13, 0x77654E7374616877, 0xE800000000000000, v14);
    swift_bridgeObjectRelease();
  }
  return _swiftEmptyDictionarySingleton;
}

id sub_1001358D0()
{
  id v1 = objc_allocWithZone((Class)AAProxCardsInfo);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithBluetoothAddress:v2];

  char v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_proxCardVersions);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  id v7 = v3;
  if (v6)
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1000B4FC4(0x62756F4465736163, 0xED0000706154656CLL);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v5 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      if (v10) {
        [v7 setCaseDoubleTapVersion:v10];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v11 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1000B4FC4(0x7473654764616568, 0xEC00000073657275);
    if (v13)
    {
      uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (v14) {
        [v7 setHeadGesturesVersion:v14];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v15 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_1000B4FC4(0x41676E6972616568, 0xED00007473697373);
    if (v17)
    {
      uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRelease();
      if (v18) {
        [v7 setHearingAssistVersion:v18];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1000B4FC4(0x54676E6972616568, 0xEB00000000747365);
    if (v21)
    {
      uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
      swift_bridgeObjectRelease();
      if (v22) {
        [v7 setHearingTestVersion:v22];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v23 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1000B4FC4(0x7461527472616568, 0xE900000000000065);
    if (v25)
    {
      uint64_t v26 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
      swift_bridgeObjectRelease();
      if (v26) {
        [v7 setHeartRateVersion:v26];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v27 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1000B4FC4(0x6175516563696F76, 0xEC0000007974696CLL);
    if (v29)
    {
      uint64_t v30 = *(void *)(*(void *)(v27 + 56) + 8 * v28);
      swift_bridgeObjectRelease();
      if (v30) {
        [v7 setVoiceQualityVersion:v30];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v31 = *v4;
  if (*(void *)(*v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_1000B4FC4(0x77654E7374616877, 0xE800000000000000);
    if ((v33 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      return v7;
    }
    uint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
    swift_bridgeObjectRelease();
    if (v34) {
      [v7 setWhatsNewVersion:v34];
    }
  }

  return v7;
}

void *sub_100135C8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      unint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(a1 + 8 * v7);
      char v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v11 = *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress] == a2
         && *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8] == a3;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100135DD0(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v22 = a1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  uint64_t v27 = &type metadata for AudioAccessoryFeatures;
  unint64_t v28 = sub_1000AE4C4();
  _Block_copy(a4);
  char v14 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if (v14)
  {
    uint64_t v15 = *(void **)(a3 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v17 = (void *)swift_allocObject();
    void v17[2] = v16;
    v17[3] = sub_1000AF25C;
    uint64_t v18 = v22;
    v17[4] = v13;
    v17[5] = v18;
    v17[6] = a2;
    unint64_t v28 = (unint64_t)sub_1001369B8;
    char v29 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    uint64_t v27 = (ValueMetadata *)&unk_10023B0B8;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v15;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    char v25 = _swiftEmptyArrayStorage;
    sub_1000AF0E0();
    sub_1000AA024(&qword_100263550);
    sub_1000AF138();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    swift_release();
    swift_release();
  }
  else
  {
    a4[2](a4, 0);
  }
  return swift_release();
}

uint64_t sub_100136130(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v24 = a1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  char v29 = &type metadata for AudioAccessoryFeatures;
  unint64_t v30 = sub_1000AE4C4();
  _Block_copy(a4);
  char v14 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if (v14)
  {
    uint64_t v15 = *(void **)(a3 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v17 = (void *)swift_allocObject();
    void v17[2] = v16;
    v17[3] = sub_1000AF2EC;
    uint64_t v18 = v24;
    v17[4] = v13;
    v17[5] = v18;
    v17[6] = a2;
    unint64_t v30 = (unint64_t)sub_100136940;
    uint64_t v31 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    char v29 = (ValueMetadata *)&unk_10023AFC8;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v15;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter();
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1000AF0E0();
    sub_1000AA024(&qword_100263550);
    sub_1000AF138();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v25);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    unsigned char *v21 = 4;
    uint64_t v22 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v22);

    swift_errorRelease();
  }
  return swift_release();
}

uint64_t sub_1001364CC(void *a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v25 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  char v29 = &type metadata for AudioAccessoryFeatures;
  unint64_t v30 = sub_1000AE4C4();
  _Block_copy(a3);
  char v13 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if (v13)
  {
    uint64_t v24 = v9;
    char v14 = *(void **)(a2 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue);
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = (void *)swift_allocObject();
    _OWORD v16[2] = v15;
    v16[3] = sub_1000AEFE0;
    char v17 = v25;
    v16[4] = v12;
    v16[5] = v17;
    unint64_t v30 = (unint64_t)sub_100136918;
    uint64_t v31 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    char v29 = (ValueMetadata *)&unk_10023AF50;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v14;
    swift_retain();
    swift_retain();
    id v20 = v17;
    static DispatchQoS.unspecified.getter();
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1000AF0E0();
    sub_1000AA024(&qword_100263550);
    sub_1000AF138();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v24);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    unsigned char *v21 = 4;
    uint64_t v22 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a3)[2](a3, v22);

    swift_errorRelease();
  }
  return swift_release();
}

uint64_t sub_100136860()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100136898()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001368D0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100136918()
{
  return sub_10013527C(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100136924(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100136934()
{
  return swift_release();
}

uint64_t sub_100136940()
{
  return sub_1001369D0((uint64_t (*)(void, void, void, void, void))sub_100135014);
}

uint64_t sub_100136958()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100136998()
{
  return sub_100134E80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001369A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001369B8()
{
  return sub_1001369D0((uint64_t (*)(void, void, void, void, void))sub_1001346D4);
}

uint64_t sub_1001369D0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_100136A08(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

uint64_t sub_100136A6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6._object = (void *)0x80000001001F70C0;
  v6._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v7._object = (void *)0x80000001001F70F0;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 0xD000000000000031;
  v8._object = (void *)0x80000001001FE160;
  String.append(_:)(v8);
  v9._object = (void *)0x80000001001F7150;
  v9._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  uint64_t v34 = a1;
  String.append(_:)(v9);
  static os_log_type_t.default.getter();
  if (qword_100261960 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_1000C2280();
  if (![self isFirstUnlocked])
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    goto LABEL_9;
  }
  sub_10015F0D4();
  if (qword_1002618E0 != -1) {
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v10 = sub_1000AA0CC(v2, (uint64_t)qword_10026AC28);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
    unint64_t v11 = sub_10015D100((uint64_t)v5);
    swift_release();
    uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
    v3 += 8;
    v12(v5, v2);
LABEL_9:
    swift_release();
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v2) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v2 >= 1) {
      break;
    }
    __break(1u);
LABEL_20:
    swift_once();
  }
  uint64_t v13 = 0;
  unint64_t v33 = v11 & 0xC000000000000001;
  long long v32 = xmmword_1001CFDB0;
  unint64_t v31 = v11;
  do
  {
    if (v33) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(v11 + 8 * v13 + 32);
    }
    uint64_t v15 = v14;
    ++v13;
    static os_log_type_t.default.getter();
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v32;
    id v17 = v15;
    id v18 = [v17 description];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_1000AA5E0();
    *(void *)(v16 + 32) = v19;
    *(void *)(v16 + 40) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v22 = v17;
    id v23 = [v22 description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    v35._uint64_t countAndFlagsBits = 0xA2D2D2D2D2D0ALL;
    v35._object = (void *)0xE700000000000000;
    v27._uint64_t countAndFlagsBits = v24;
    v27._object = v26;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v28._uint64_t countAndFlagsBits = 10;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    String.append(_:)(v35);

    swift_bridgeObjectRelease();
    unint64_t v11 = v31;
  }
  while (v2 != v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100136F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001378E8(a1, a2, a3, a4, (uint64_t)&unk_10023B2A8, (uint64_t)sub_100139008, (uint64_t)&unk_10023B2C0);
}

void sub_100136F70(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v9 = (void *)Strong;
    static os_log_type_t.default.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1001CFDB0;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_1000AA5E0();
    *(void *)(v10 + 32) = a4;
    *(void *)(v10 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v11 = sub_1001370D4(a4, a5);
    a2();
  }
  else
  {
    a2();
  }
}

id sub_1001370D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C2280();
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_1002618E0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1000AA0CC(v4, (uint64_t)qword_10026AC28);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
    Swift::String v9 = (void *)sub_10015D100((uint64_t)v7);
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    Swift::String v9 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100138EC0((unint64_t)v9, a1, a2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
    static os_log_type_t.default.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    id v12 = v10;
    id v13 = [v12 description];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1000AA5E0();
    *(void *)(v11 + 32) = v14;
    *(void *)(v11 + 40) = v16;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v17 = [v12 hmDeviceCloudRecordInfo];
  }
  else
  {
    static os_log_type_t.debug.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1001CFDB0;
    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_1000AA5E0();
    *(void *)(v18 + 32) = a1;
    *(void *)(v18 + 40) = a2;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

uint64_t sub_10013759C(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = 0;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue];
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = &v15;
  v6[5] = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100138EA4;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_1000AF254;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106FFC;
  void aBlock[3] = &unk_10023B248;
  uint64_t v8 = _Block_copy(aBlock);
  Swift::String v9 = v5;
  swift_bridgeObjectRetain();
  uint64_t v10 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = v15;
    swift_release();
    return v13;
  }
  return result;
}

uint64_t sub_10013772C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_1000AA5E0();
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v7 = sub_1001370D4(a1, a2);
  uint64_t v8 = *a3;
  *a3 = (uint64_t)v7;

  return _objc_release_x1(v7, v8);
}

uint64_t sub_1001378C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001378E8(a1, a2, a3, a4, (uint64_t)&unk_10023B1B8, (uint64_t)sub_100138E4C, (uint64_t)&unk_10023B1D0);
}

uint64_t sub_1001378E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v26 = a3;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v7 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v26;
  v18[2] = v17;
  v18[3] = v19;
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  v18[4] = a4;
  v18[5] = v20;
  v18[6] = v21;
  aBlock[4] = v29;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = v30;
  id v22 = _Block_copy(aBlock);
  id v23 = v16;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  long long v32 = _swiftEmptyArrayStorage;
  sub_1000AF0E0();
  sub_1000AA024(&qword_100263550);
  sub_1000AF138();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  swift_release();
  return swift_release();
}

uint64_t sub_100137BB4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    static os_log_type_t.default.getter();
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_1000AA5E0();
    *(void *)(v11 + 32) = a4;
    *(void *)(v11 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C2280();
    sub_100172290(a4, a5, 0xD000000000000013, 0x80000001001F7610, a2, a3);

    return swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    unsigned char *v13 = 0;
    a2();
    return swift_errorRelease();
  }
}

uint64_t sub_100137E3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v23 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v4 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_managerQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = v23;
  _OWORD v16[2] = v15;
  v16[3] = v17;
  v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_100138E24;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023B158;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v14;
  swift_retain();
  swift_retain();
  id v20 = a1;
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1000AF0E0();
  sub_1000AA024(&qword_100263550);
  sub_1000AF138();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_10013810C(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    id v12 = a4;
    UUID.init()();
    id v13 = objc_allocWithZone((Class)type metadata accessor for HMDeviceCloudRecord());
    uint64_t v16 = sub_1000F11C4((uint64_t)v9, v12);
    int v17 = static os_log_type_t.default.getter();
    v24[3] = v17;
    if (qword_100261940 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1001CFDB0;
    id v19 = v12;
    id v20 = [v19 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(v18 + 56) = &type metadata for String;
    *(void *)(v18 + 64) = sub_1000AA5E0();
    *(void *)(v18 + 32) = v21;
    *(void *)(v18 + 40) = v23;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C2280();
    sub_10017FB04(v16, (void (*)(void))a2, a3);

    return swift_release();
  }
  else
  {
    sub_1000AEFE8();
    swift_allocError();
    *uint64_t v14 = 0;
    a2();
    return swift_errorRelease();
  }
}

id sub_100138420()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)&v41 - v12;
  id v14 = objc_allocWithZone((Class)HMDeviceCloudRecordInfo);
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithBluetoothAddress:v15];

  [v16 setHaRegionStatus:*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_haRegionStatus)];
  [v16 setHpRegionStatus:*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_hpRegionStatus)];
  [v16 setMediaAssistEnabled:*(char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_mediaAssistEnabled)];
  [v16 setPmeMediaEnabled:*(char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_pmeMediaEnabled)];
  [v16 setPmeVoiceEnabled:*(char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_pmeVoiceEnabled)];
  [v16 setSwipeGainEnabled:*(char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_swipeGainEnabled)];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bottomMicFaultCountLeft + 4) & 1) == 0)
  {
    id v17 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bottomMicFaultCountLeft)];
    [v16 setBottomMicFaultCountLeft:v17];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bottomMicFaultCountRight + 4) & 1) == 0)
  {
    id v18 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bottomMicFaultCountRight)];
    [v16 setBottomMicFaultCountRight:v18];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_diagnosticMeasurementsCount + 4) & 1) == 0)
  {
    id v19 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_diagnosticMeasurementsCount)];
    [v16 setDiagnosticMeasurementsCount:v19];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_freqAccuracyFaultCountLeft + 4) & 1) == 0)
  {
    id v20 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_freqAccuracyFaultCountLeft)];
    [v16 setFreqAccuracyFaultCountLeft:v20];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_freqAccuracyFaultCountRight + 4) & 1) == 0)
  {
    id v21 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_freqAccuracyFaultCountRight)];
    [v16 setFreqAccuracyFaultCountRight:v21];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_frontVentFaultCountLeft + 4) & 1) == 0)
  {
    id v22 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_frontVentFaultCountLeft)];
    [v16 setFrontVentFaultCountLeft:v22];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_frontVentFaultCountRight + 4) & 1) == 0)
  {
    id v23 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_frontVentFaultCountRight)];
    [v16 setFrontVentFaultCountRight:v23];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_innerMicFaultCountLeft + 4) & 1) == 0)
  {
    id v24 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_innerMicFaultCountLeft)];
    [v16 setInnerMicFaultCountLeft:v24];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_innerMicFaultCountRight + 4) & 1) == 0)
  {
    id v25 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_innerMicFaultCountRight)];
    [v16 setInnerMicFaultCountRight:v25];
  }
  uint64_t v26 = v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_latestDiagnosticTimestampLeft;
  swift_beginAccess();
  sub_1000F7934(v26, (uint64_t)v7);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v27(v7, 1, v8) == 1)
  {
    sub_1000BFE50((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    [v16 setLatestDiagnosticTimestampLeft:isa];

    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  uint64_t v29 = v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_latestDiagnosticTimestampRight;
  swift_beginAccess();
  sub_1000F7934(v29, (uint64_t)v4);
  if (v27(v4, 1, v8) == 1)
  {
    sub_1000BFE50((uint64_t)v4);
  }
  else
  {
    uint64_t v30 = v42;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v4, v8);
    Class v31 = Date._bridgeToObjectiveC()().super.isa;
    [v16 setLatestDiagnosticTimestampRight:v31];

    (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v8);
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_rearVentFaultCountLeft + 4) & 1) == 0)
  {
    id v32 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_rearVentFaultCountLeft)];
    [v16 setRearVentFaultCountLeft:v32];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_rearVentFaultCountRight + 4) & 1) == 0)
  {
    id v33 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_rearVentFaultCountRight)];
    [v16 setRearVentFaultCountRight:v33];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_speakerFaultCountLeft + 4) & 1) == 0)
  {
    id v34 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_speakerFaultCountLeft)];
    [v16 setSpeakerFaultCountLeft:v34];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_speakerFaultCountRight + 4) & 1) == 0)
  {
    id v35 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_speakerFaultCountRight)];
    [v16 setSpeakerFaultCountRight:v35];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_topMicFaultCountLeft + 4) & 1) == 0)
  {
    id v36 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_topMicFaultCountLeft)];
    [v16 setTopMicFaultCountLeft:v36];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_topMicFaultCountRight + 4) & 1) == 0)
  {
    id v37 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_topMicFaultCountRight)];
    [v16 setTopMicFaultCountRight:v37];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_totalHarmonicDistortionFaultCountLeft + 4) & 1) == 0)
  {
    id v38 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1+ OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_totalHarmonicDistortionFaultCountLeft)];
    [v16 setTotalHarmonicDistortionFaultCountLeft:v38];
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_totalHarmonicDistortionFaultCountRight + 4) & 1) == 0)
  {
    id v39 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInt:*(unsigned int *)(v1+ OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_totalHarmonicDistortionFaultCountRight)];
    [v16 setTotalHarmonicDistortionFaultCountRight:v39];
  }
  return v16;
}

uint64_t sub_100138D6C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100138DA4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100138DDC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100138E24()
{
  return sub_10013810C(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100138E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100138E40()
{
  return swift_release();
}

uint64_t sub_100138E4C()
{
  return sub_100139020((uint64_t (*)(void, void, void, void, void))sub_100137BB4);
}

uint64_t sub_100138E64()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100138EA4()
{
  return sub_10013772C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_100138EB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100138EC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v11 = *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress] == a2
         && *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8] == a3;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100139008()
{
  return sub_100139020((uint64_t (*)(void, void, void, void, void))sub_100136F70);
}

uint64_t sub_100139020(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

id DefaultsObserver.__allocating_init(keys:defaults:notificationBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_monitoredKeys] = a1;
  *(void *)&v9[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_defaults] = a2;
  uint64_t v10 = &v9[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_notify];
  *(void *)uint64_t v10 = a3;
  *((void *)v10 + 1) = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  return [super init];
}

id DefaultsObserver.init(keys:defaults:notificationBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_monitoredKeys] = a1;
  *(void *)&v4[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_defaults] = a2;
  uint64_t v5 = &v4[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_notify];
  *(void *)uint64_t v5 = a3;
  *((void *)v5 + 1) = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for DefaultsObserver();
  return [super init];
}

uint64_t type metadata accessor for DefaultsObserver()
{
  return self;
}

id DefaultsObserver.__deallocating_deinit()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_monitoredKeys];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_defaults];
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v3 removeObserver:v0 forKeyPath:v5 context:0];

      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DefaultsObserver();
  return [super dealloc];
}

Swift::Void __swiftcall DefaultsObserver.start()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_monitoredKeys);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_defaults);
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v3 addObserver:v0 forKeyPath:v5 options:0 context:0];

      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall DefaultsObserver.stop()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_monitoredKeys);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_defaults);
    swift_bridgeObjectRetain();
    uint64_t v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v3 removeObserver:v0 forKeyPath:v5 context:0];

      v4 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t DefaultsObserver.observeValue(forKeyPath:of:change:context:)(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v4 = result;
    NSString v5 = *(void (**)(uint64_t, uint64_t))(v2 + OBJC_IVAR____TtC15audioaccessoryd16DefaultsObserver_notify);
    swift_retain();
    v5(v4, a2);
    return swift_release();
  }
  return result;
}

void DefaultsObserver.init()()
{
}

unint64_t sub_100139810()
{
  unint64_t result = qword_100261C38;
  if (!qword_100261C38)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100261C38);
  }
  return result;
}

uint64_t sub_100139868()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001398A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t DarwinNotificationHelper.__allocating_init(notificationHandlers:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  DarwinNotificationHelper.init(notificationHandlers:)(a1);
  return v2;
}

uint64_t DarwinNotificationHelper.init(notificationHandlers:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v24 = CFNotificationCenterGetDarwinNotifyCenter();
  if (v24)
  {
    v1[2] = a1;
    uint64_t v4 = qword_100261888;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
LABEL_30:
    }
      swift_once();
    NSString v5 = (void *)(static DarwinNotificationManager.shared
                  + OBJC_IVAR____TtC15audioaccessoryd25DarwinNotificationManager_helpers);
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    static os_log_type_t.default.getter();
    if (qword_100261928 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    int64_t v6 = 0;
    uint64_t v21 = a1 + 64;
    uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & *(void *)(a1 + 64);
    int64_t v22 = (unint64_t)(v7 + 63) >> 6;
    id v23 = v2;
    while (1)
    {
      if (v9)
      {
        unint64_t v10 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v11 = v10 | (v6 << 6);
      }
      else
      {
        int64_t v17 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v17 >= v22) {
          goto LABEL_27;
        }
        unint64_t v18 = *(void *)(v21 + 8 * v17);
        ++v6;
        if (!v18)
        {
          int64_t v6 = v17 + 1;
          if (v17 + 1 >= v22) {
            goto LABEL_27;
          }
          unint64_t v18 = *(void *)(v21 + 8 * v6);
          if (!v18)
          {
            int64_t v6 = v17 + 2;
            if (v17 + 2 >= v22) {
              goto LABEL_27;
            }
            unint64_t v18 = *(void *)(v21 + 8 * v6);
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v22)
              {
LABEL_27:
                swift_release();

                return (uint64_t)v2;
              }
              unint64_t v18 = *(void *)(v21 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v6 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_29;
                  }
                  if (v6 >= v22) {
                    goto LABEL_27;
                  }
                  unint64_t v18 = *(void *)(v21 + 8 * v6);
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v6 = v19;
            }
          }
        }
LABEL_26:
        unint64_t v9 = (v18 - 1) & v18;
        unint64_t v11 = __clz(__rbit64(v18)) + (v6 << 6);
      }
      objc_super v12 = (__CFString *)*(id *)(*(void *)(a1 + 48) + 8 * v11);
      swift_retain();
      static os_log_type_t.default.getter();
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
      *(void *)(v13 + 56) = &type metadata for String;
      *(void *)(v13 + 64) = sub_1000AA5E0();
      *(void *)(v13 + 32) = v14;
      *(void *)(v13 + 40) = v16;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v2 = v23;
      CFNotificationCenterAddObserver(v24, v23, (CFNotificationCallback)sub_100139D88, v12, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
      swift_release();
    }
  }
  static os_log_type_t.error.getter();
  if (qword_100261928 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100139D88(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a1;
  id v9 = a3;
  id v10 = a5;
  sub_10013A6E8(a2, a3);
}

uint64_t sub_100139E08(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t DarwinNotificationHelper.deinit()
{
  uint64_t v1 = v0;
  if (qword_100261888 != -1) {
    goto LABEL_29;
  }
  while (1)
  {
    uint64_t v2 = (void *)(static DarwinNotificationManager.shared
                  + OBJC_IVAR____TtC15audioaccessoryd25DarwinNotificationManager_helpers);
    swift_beginAccess();
    swift_retain();
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000D9C68(v3, v1);
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v2 = v4;
    swift_bridgeObjectRelease();
    center = CFNotificationCenterGetDarwinNotifyCenter();
    if (!center) {
      break;
    }
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = *(void *)(v5 + 64);
    uint64_t v23 = v5 + 64;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & v6;
    int64_t v24 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v25 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    int64_t v10 = 0;
    if (v9)
    {
LABEL_6:
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_21;
    }
    while (1)
    {
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      if (v13 >= v24) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      ++v10;
      if (!v14)
      {
        int64_t v10 = v13 + 1;
        if (v13 + 1 >= v24) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 2;
          if (v13 + 2 >= v24) {
            goto LABEL_25;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v14 - 1) & v14;
      unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_21:
      uint64_t v16 = (const void *)v1;
      int64_t v17 = (__CFString *)*(id *)(*(void *)(v25 + 48) + 8 * v12);
      swift_retain();
      static os_log_type_t.default.getter();
      if (qword_100261928 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1001CFDB0;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = sub_1000AA5E0();
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = v21;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v1 = (uint64_t)v16;
      CFNotificationCenterRemoveObserver(center, v16, v17, 0);
      swift_release();

      if (v9) {
        goto LABEL_6;
      }
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v24)
    {
LABEL_25:
      swift_release();

      break;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v15);
    if (v14)
    {
      int64_t v10 = v15;
      goto LABEL_20;
    }
    while (1)
    {
      int64_t v10 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      if (v10 >= v24) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v10);
      ++v15;
      if (v14) {
        goto LABEL_20;
      }
    }
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
  }
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t DarwinNotificationHelper.__deallocating_deinit()
{
  DarwinNotificationHelper.deinit();

  return _swift_deallocClassInstance(v0, 24, 7);
}

Swift::Void __swiftcall DarwinNotificationHelper.onNotification(notificationName:)(CFStringRef notificationName)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(void *)(v2 + 16))
  {
    unint64_t v3 = (id)notificationName;
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_1000B503C((uint64_t)v3);
    if (v5)
    {
      uint64_t v6 = *(void (**)(uint64_t))(*(void *)(v2 + 56) + 16 * v4);
      swift_retain();

      swift_bridgeObjectRelease();
      static os_log_type_t.default.getter();
      if (qword_100261928 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1001CFDB0;
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_1000AA5E0();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
      os_log(_:dso:log:_:_:)();
      uint64_t v11 = swift_bridgeObjectRelease();
      v6(v11);
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

uint64_t _s15audioaccessoryd24DarwinNotificationHelperC20notificationHandlersACSgSDySSyycG_tcfC_0(uint64_t a1)
{
  int64_t v1 = 0;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v2 = a1 + 64;
  uint64_t v3 = v4;
  uint64_t v5 = 1 << *(unsigned char *)(v2 - 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v3;
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v1 << 6);
    }
    else
    {
      int64_t v11 = v1 + 1;
      if (__OFADD__(v1, 1)) {
        goto LABEL_36;
      }
      if (v11 >= v36)
      {
LABEL_33:
        swift_release();
        type metadata accessor for DarwinNotificationHelper();
        uint64_t v33 = swift_allocObject();
        DarwinNotificationHelper.init(notificationHandlers:)((uint64_t)_swiftEmptyDictionarySingleton);
        return v33;
      }
      unint64_t v12 = *(void *)(v35 + 8 * v11);
      ++v1;
      if (!v12)
      {
        int64_t v1 = v11 + 1;
        if (v11 + 1 >= v36) {
          goto LABEL_33;
        }
        unint64_t v12 = *(void *)(v35 + 8 * v1);
        if (!v12)
        {
          int64_t v1 = v11 + 2;
          if (v11 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v12 = *(void *)(v35 + 8 * v1);
          if (!v12)
          {
            int64_t v13 = v11 + 3;
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v12 = *(void *)(v35 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                int64_t v1 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_37;
                }
                if (v1 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v12 = *(void *)(v35 + 8 * v1);
                ++v13;
                if (v12) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v1 = v13;
          }
        }
      }
LABEL_21:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v1 << 6);
    }
    uint64_t v14 = 16 * v10;
    uint64_t v15 = *(void *)(a1 + 56);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = *(_OWORD *)(v15 + v14);
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v17 = String._bridgeToObjectiveC()();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_10013A964;
    *(void *)(v18 + 24) = v16;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_1000B503C((uint64_t)v17);
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (_swiftEmptyDictionarySingleton[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100124220();
        if (v25) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_10012305C(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1000B503C((uint64_t)v17);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_38;
      }
      unint64_t v21 = v26;
      if (v25)
      {
LABEL_4:
        uint64_t v8 = (uint64_t (**)())(_swiftEmptyDictionarySingleton[7] + 16 * v21);
        swift_release();
        *uint64_t v8 = sub_1000AF254;
        v8[1] = (uint64_t (*)())v18;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v21 >> 6) + 8] |= 1 << v21;
    *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v21) = v17;
    uint64_t v28 = (uint64_t (**)())(_swiftEmptyDictionarySingleton[7] + 16 * v21);
    void *v28 = sub_1000AF254;
    v28[1] = (uint64_t (*)())v18;
    uint64_t v29 = _swiftEmptyDictionarySingleton[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_35;
    }
    _swiftEmptyDictionarySingleton[2] = v31;
    id v32 = v17;
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  type metadata accessor for CFString(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DarwinNotificationHelper()
{
  return self;
}

void sub_10013A6E8(uint64_t a1, void *a2)
{
  if (!a1)
  {
    static os_log_type_t.error.getter();
    if (qword_100261928 == -1) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (a2)
  {
    id v2 = a2;
    static os_log_type_t.default.getter();
    if (qword_100261928 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_1000AA5E0();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    notificationName = (__CFString *)v2;
    swift_retain();
    DarwinNotificationHelper.onNotification(notificationName:)(notificationName);
    swift_release();

    return;
  }
  static os_log_type_t.error.getter();
  if (qword_100261928 != -1) {
LABEL_14:
  }
    swift_once();
LABEL_11:

  os_log(_:dso:log:_:_:)();
}

uint64_t sub_10013A92C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013A964()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10013A990(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xED0000706154656CLL;
  uint64_t v3 = 0x62756F4465736163;
  uint64_t v4 = a1;
  uint64_t v5 = 0x62756F4465736163;
  unint64_t v6 = 0xED0000706154656CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7473654764616568;
      unint64_t v6 = 0xEC00000073657275;
      break;
    case 2:
      uint64_t v5 = 0x41676E6972616568;
      unint64_t v6 = 0xED00007473697373;
      break;
    case 3:
      uint64_t v5 = 0x54676E6972616568;
      unint64_t v6 = 0xEB00000000747365;
      break;
    case 4:
      uint64_t v5 = 0x7461527472616568;
      unint64_t v6 = 0xE900000000000065;
      break;
    case 5:
      uint64_t v5 = 0x6175516563696F76;
      unint64_t v6 = 0xEC0000007974696CLL;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x77654E7374616877;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000073657275;
      if (v5 == 0x7473654764616568) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xED00007473697373;
      if (v5 != 0x41676E6972616568) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xEB00000000747365;
      if (v5 != 0x54676E6972616568) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE900000000000065;
      if (v5 != 0x7461527472616568) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      uint64_t v3 = 0x6175516563696F76;
      unint64_t v2 = 0xEC0000007974696CLL;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x77654E7374616877) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10013AC44(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6574656C6564;
  }
  else {
    uint64_t v2 = 0x657461647075;
  }
  if (a2) {
    uint64_t v3 = 0x6574656C6564;
  }
  else {
    uint64_t v3 = 0x657461647075;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_10013ACBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int64_t v11 = (char *)&v23 - v10;
  id v12 = [self processInfo];
  id v13 = [v12 environment];

  uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1000B4FC4(0xD00000000000001BLL, 0x80000001001FA4D0);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_9:
    id v19 = [self defaultManager];
    id v20 = [v19 URLsForDirectory:5 inDomains:1];

    uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v21 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v4, v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1000AA894((uint64_t)v4, (uint64_t *)&unk_100261A00);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v22(v11, v4, v5);
      URL.appendingPathComponent(_:isDirectory:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(a1, v9, v5);
    }
    return result;
  }
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  NSString v17 = NSTemporaryDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  URL.init(fileURLWithPath:isDirectory:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10013B124(uint64_t a1)
{
  return sub_1001518C8(a1, (uint64_t)&unk_10023BA28, (uint64_t)sub_1001AE680, (uint64_t)&unk_10023BA40);
}

uint64_t sub_10013B14C(uint64_t a1)
{
  return sub_1001518C8(a1, (uint64_t)&unk_10023BA78, (uint64_t)sub_1001AE6D0, (uint64_t)&unk_10023BA90);
}

uint64_t sub_10013B174(uint64_t a1)
{
  return sub_1001518C8(a1, (uint64_t)&unk_10023D198, (uint64_t)sub_1001B14A0, (uint64_t)&unk_10023D1B0);
}

uint64_t sub_10013B19C(uint64_t a1)
{
  return sub_1001518C8(a1, (uint64_t)&unk_10023B7A8, (uint64_t)sub_1001ADA98, (uint64_t)&unk_10023B7C0);
}

uint64_t sub_10013B1C4(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

void *sub_10013B2FC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

char *sub_10013B424(unint64_t a1, char *a2, uint64_t (*a3)(void))
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = &a2[*(int *)(a3(0) + 24)];
    uint64_t v8 = 4;
    while (1)
    {
      a3 = (uint64_t (*)(void))(v8 - 4);
      uint64_t v9 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(a1 + 8 * v8);
      a2 = v9;
      uint64_t v10 = v8 - 3;
      if (__OFADD__(a3, 1)) {
        break;
      }
      id v11 = [v9 bluetoothAddress];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v12 == *(void *)v7 && v14 == *((void *)v7 + 1))
      {
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return a2;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_16;
      }

      ++v8;
      if (v10 == v6) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10013B5C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_clientQueue);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1001ADE98;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023B888;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  id v19 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  swift_release();
  return swift_release();
}

void sub_10013B8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  v169 = (uint64_t (**)(uint64_t, uint64_t, int *))((char *)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v174 = (char *)&v161 - v7;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  v166 = (void (**)(uint64_t, uint64_t))((char *)&v161 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v179 = (void *)type metadata accessor for LegacyMagicPairingSettingsRecords();
  *(void *)&long long v165 = *(v179 - 1);
  __chkstk_darwin(v179);
  uint64_t v11 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DeviceSupportInformationRecord();
  v167 = *(void (***)(char *, uint64_t, uint64_t))(v12 - 8);
  __chkstk_darwin(v12 - 8);
  v168 = (char *)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  v170 = *(void (***)(uint64_t, void, uint64_t, int *))(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v161 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v17 - 8);
  uint64_t v175 = (uint64_t)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for DeviceRecord();
  unint64_t v178 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  id v20 = (char *)&v161 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = (int *)type metadata accessor for MagicPairingSettingsRecord();
  v173 = (unsigned __int8 *)*((void *)v180 - 1);
  __chkstk_darwin(v180);
  uint64_t v22 = (char *)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v171 = (void (**)(uint64_t, uint64_t))((char *)&v161 - v24);
  __chkstk_darwin(v25);
  char v27 = (char *)&v161 - v26;
  swift_beginAccess();
  uint64_t v177 = a1 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v29 = (char *)Strong;
  v162 = v11;
  v163 = v16;
  uint64_t v164 = v14;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v31 = Array.description.getter();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = sub_1000AA5E0();
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  uint64_t v34 = a2;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10013DC2C(a2, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  int64_t v36 = v29;
  v172 = v29;
  if (v35)
  {
    id v37 = v35;
    uint64_t v38 = swift_unknownObjectWeakLoadStrong();
    if (v38)
    {
      id v39 = (void *)v38;
      v182[0] = _swiftEmptyArrayStorage;
      uint64_t v40 = v37[2];
      if (v40)
      {
        v179 = (void *)v38;
        uint64_t v41 = v173[80];
        unint64_t v178 = (unint64_t)v37;
        uint64_t v42 = (uint64_t)v37 + ((v41 + 32) & ~v41);
        int64_t v43 = (void (*)(void, void, void, void))*((void *)v173 + 9);
        do
        {
          sub_1001AEF94(v42, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          uint64_t v44 = &v27[v180[6]];
          if (*(void *)v44 == 0xD000000000000011 && *((void *)v44 + 1) == 0x80000001001F75A0
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            sub_1001AEFFC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          }
          else
          {
            sub_1000CE96C();
            sub_1001AEFFC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v182[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v182[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v42 += (uint64_t)v43;
          --v40;
        }
        while (v40);
        int64_t v36 = v172;
        id v39 = v179;
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v39 magicPairingRecordsUpdatedWithRecords:isa];

      goto LABEL_26;
    }
LABEL_27:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v45 = sub_10013DC2C(v34, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (!v45)
  {
    uint64_t v54 = sub_10013DC2C(v34, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    if (v54)
    {
      uint64_t v55 = v54;
      uint64_t v56 = swift_unknownObjectWeakLoadStrong();
      if (v56)
      {
        id v57 = (void *)v56;
        v182[0] = _swiftEmptyArrayStorage;
        uint64_t v58 = v55[2];
        if (v58)
        {
          uint64_t v59 = (uint64_t)v55
              + ((*((unsigned __int8 *)v167 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v167 + 80));
          id v60 = v167[9];
          uint64_t v61 = (uint64_t)v168;
          do
          {
            sub_1001AEF94(v59, v61, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v61, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v182[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v182[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v59 += (uint64_t)v60;
            --v58;
          }
          while (v58);
          int64_t v36 = v172;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        Class v96 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v57 deviceSupportInformationRecordsUpdatedWithRecords:v96];

        goto LABEL_26;
      }
      goto LABEL_27;
    }
    uint64_t v88 = sub_10013DF34(v34, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (void (*)(BOOL, unint64_t, uint64_t))sub_100190978, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    if (!v88) {
      goto LABEL_79;
    }
    if (v88[2])
    {
      uint64_t v89 = v165;
      uint64_t v90 = v166;
      sub_1001AEF94((uint64_t)v88 + ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80)), (uint64_t)v166, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      uint64_t v91 = 0;
      uint64_t v92 = (uint64_t)v162;
      uint64_t v93 = v169;
      uint64_t v94 = v174;
      uint64_t v95 = v179;
    }
    else
    {
      uint64_t v91 = 1;
      uint64_t v92 = (uint64_t)v162;
      uint64_t v93 = v169;
      uint64_t v94 = v174;
      uint64_t v90 = v166;
      uint64_t v95 = v179;
      uint64_t v89 = v165;
    }
    (*(void (**)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t, void *))(v89 + 56))(v90, v91, 1, v95);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(void (**)(uint64_t, uint64_t), uint64_t, void *))(v89 + 48))(v90, 1, v95) == 1)
    {
      sub_1000AA894((uint64_t)v90, (uint64_t *)&unk_100263BA0);
LABEL_79:
      if (sub_10013DDCC(v34, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords))
      {
        swift_beginAccess();
        uint64_t v97 = swift_unknownObjectWeakLoadStrong();
        if (!v97) {
          goto LABEL_27;
        }
        id v98 = (void *)v97;
        v182[3] = &type metadata for AudioAccessoryFeatures;
        v182[4] = sub_1000AE4C4();
        char v99 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v182);
        if (v99)
        {
          uint64_t v100 = swift_unknownObjectWeakLoadStrong();
          if (v100)
          {
            objc_super v101 = (void *)v100;
            type metadata accessor for AADeviceRecord();
            v102.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v101 aaDeviceRecordsUpdatedWithRecords:v102.super.isa];
LABEL_132:

            swift_bridgeObjectRelease();
LABEL_26:
            swift_unknownObjectRelease();
            return;
          }
        }
        goto LABEL_133;
      }
      if (sub_10013DDCC(v34, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords))
      {
        swift_beginAccess();
        unint64_t v139 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v139) {

        }
        goto LABEL_27;
      }
      if (sub_10013DDCC(v34, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords))
      {
        swift_beginAccess();
        uint64_t v140 = swift_unknownObjectWeakLoadStrong();
        if (!v140) {
          goto LABEL_27;
        }
        id v98 = (void *)v140;
        uint64_t v141 = swift_unknownObjectWeakLoadStrong();
        if (v141)
        {
          uint64_t v142 = (void *)v141;
          type metadata accessor for HMDeviceCloudRecord();
          v102.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v142 hmDeviceCloudRecordsUpdatedWithRecords:v102.super.isa];
          goto LABEL_132;
        }
LABEL_133:

        goto LABEL_27;
      }
LABEL_152:

      return;
    }
    sub_1001AF05C((uint64_t)v90, v92, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    swift_beginAccess();
    uint64_t v103 = swift_unknownObjectWeakLoadStrong();
    if (!v103 || (id v104 = (void *)v103, v105 = (char *)swift_unknownObjectWeakLoadStrong(), v104, !v105))
    {
LABEL_138:
      swift_beginAccess();
      uint64_t v144 = swift_unknownObjectWeakLoadStrong();
      if (!v144)
      {
LABEL_156:

        sub_1001AEFFC(v92, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        return;
      }
      uint64_t v145 = (void *)v144;
      uint64_t v146 = (int *)swift_unknownObjectWeakLoadStrong();

      if (!v146)
      {
        sub_1001AEFFC(v92, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        goto LABEL_152;
      }
      unint64_t v147 = (unint64_t)sub_100101DD0();
      unint64_t v148 = v147;
      unint64_t v181 = (unint64_t)_swiftEmptyArrayStorage;
      if (v147 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v149 = _CocoaArrayWrapper.endIndex.getter();
        if (v149)
        {
LABEL_142:
          v180 = v146;
          if (v149 >= 1)
          {
            uint64_t v150 = 0;
            do
            {
              if ((v148 & 0xC000000000000001) != 0) {
                id v151 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v151 = *(id *)(v148 + 8 * v150 + 32);
              }
              v152 = v151;
              id v153 = [v151 bluetoothAddress];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              id v154 = objc_allocWithZone((Class)BTCloudDevice);
              NSString v155 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v156 = [v154 initWithBluetoothAddress:v155];

              id v157 = [v152 name];
              [v156 setNickname:v157];

              id v158 = [v152 productID];
              [v156 setProductID:v158];

              id v159 = [v152 vendorID];
              [v156 setVendorID:v159];

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              ++v150;
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              uint64_t v92 = (uint64_t)v162;
            }
            while (v149 != v150);
            swift_bridgeObjectRelease();
            int64_t v36 = v172;
            uint64_t v146 = v180;
            goto LABEL_155;
          }
LABEL_158:
          __break(1u);
          return;
        }
      }
      else
      {
        uint64_t v149 = *(void *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v149) {
          goto LABEL_142;
        }
      }
      swift_bridgeObjectRelease();
LABEL_155:
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_100263B50);
      Class v160 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v146 devicesUpdatedWithRecords:v160];
      swift_unknownObjectRelease();

      goto LABEL_156;
    }
    unint64_t v106 = (unint64_t)sub_100101DD0();
    swift_beginAccess();
    id v107 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    unint64_t v181 = (unint64_t)_swiftEmptyArrayStorage;
    if (v106 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
      if (v108) {
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v108 = *(void *)((v106 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v108)
      {
LABEL_88:
        v168 = v105;
        if (v108 < 1)
        {
          __break(1u);
          goto LABEL_158;
        }
        unint64_t v178 = v106 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v109 = 0;
        v173 = (unsigned __int8 *)(v170 + 2);
        v171 = (void (**)(uint64_t, uint64_t))(v170 + 1);
        uint64_t v176 = v106;
        uint64_t v175 = v108;
        do
        {
          if (v178) {
            uint64_t v110 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v110 = (int *)*(id *)(v106 + 8 * v109 + 32);
          }
          uint64_t v111 = v110;
          uint64_t v112 = swift_unknownObjectWeakLoadStrong();
          if (v112)
          {
            id v113 = (void *)v112;
            v180 = v111;
            sub_1000C2280();
            uint64_t v114 = self;
            if ([v114 isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v115 = v164;
              uint64_t v116 = sub_1000AA0CC(v164, (uint64_t)qword_10026AB68);
              uint64_t v117 = (uint64_t)v163;
              (*(void (**)(char *, uint64_t, uint64_t))v173)(v163, v116, v115);
              uint64_t v118 = sub_10015DA98(v117, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v171)(v117, v115);
              uint64_t v119 = v118[2];
              uint64_t v120 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v121 = *(void *)(v120 - 8);
              uint64_t v122 = v121;
              if (v119)
              {
                sub_1001AEF94((uint64_t)v118+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80)), (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(const char *, void, uint64_t, uint64_t))(v122 + 56))(v94, 0, 1, v120);
              }
              else
              {
                (*(void (**)(const char *, uint64_t, uint64_t, uint64_t))(v121 + 56))(v94, 1, 1, v120);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v93 = v169;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v120 = type metadata accessor for LegacyAccountMagicKeysRecord();
              (*(void (**)(const char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v94, 1, 1, v120);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v123 = *(void *)(v120 - 8);
            char v124 = *(uint64_t (**)(const char *, uint64_t, uint64_t))(v123 + 48);
            unsigned int v125 = v124(v94, 1, v120);
            v179 = v124;
            if (v125 == 1)
            {
              sub_1000AA894((uint64_t)v94, &qword_1002623C0);
              Class v126 = 0;
            }
            else
            {
              uint64_t v127 = Data.subdata(in:)();
              unint64_t v129 = v128;
              sub_1001AEFFC((uint64_t)v174, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v126 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v130 = v129;
              uint64_t v94 = v174;
              sub_1000AA8F0(v127, v130);
            }
            [v180 setMasterKey:v126];

            sub_1000C2280();
            if ([v114 isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v131 = v164;
              uint64_t v132 = sub_1000AA0CC(v164, (uint64_t)qword_10026AB68);
              uint64_t v133 = (uint64_t)v163;
              (*(void (**)(char *, uint64_t, uint64_t))v173)(v163, v132, v131);
              uint64_t v134 = sub_10015DA98(v133, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v171)(v133, v131);
              uint64_t v93 = v169;
              if (v134[2])
              {
                sub_1001AEF94((uint64_t)v134+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80)), (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t (**)(uint64_t, uint64_t, int *), void, uint64_t, uint64_t))(v123 + 56))(v93, 0, 1, v120);
              }
              else
              {
                (*(void (**)(uint64_t (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t, uint64_t))(v123 + 56))(v169, 1, 1, v120);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v94 = v174;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(uint64_t (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t, uint64_t))(v123 + 56))(v93, 1, 1, v120);
              swift_release();
            }
            if (((unsigned int (*)(void, uint64_t, uint64_t))v179)(v93, 1, v120) == 1)
            {
              sub_1000AA894((uint64_t)v93, &qword_1002623C0);
              Class v135 = 0;
            }
            else
            {
              uint64_t v136 = Data.subdata(in:)();
              unint64_t v138 = v137;
              sub_1001AEFFC((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v135 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v136, v138);
            }
            uint64_t v92 = (uint64_t)v162;
            unint64_t v106 = v176;
            uint64_t v108 = v175;
            [v180 setMasterHint:v135];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v109;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          int64_t v36 = v172;
        }
        while (v108 != v109);
        swift_bridgeObjectRelease();
        id v105 = v168;
        goto LABEL_137;
      }
    }
    swift_bridgeObjectRelease();
LABEL_137:
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    Class v143 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v105 magicPairingRecordsUpdatedWithRecords:v143];

    swift_unknownObjectRelease();
    goto LABEL_138;
  }
  uint64_t v46 = v45;
  v168 = &v29[OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_deviceDelegate];
  uint64_t v47 = swift_unknownObjectWeakLoadStrong();
  uint64_t v48 = v180;
  v161 = v46;
  if (v47)
  {
    uint64_t v49 = (void *)v47;
    v182[0] = _swiftEmptyArrayStorage;
    uint64_t v50 = v46[2];
    if (v50)
    {
      uint64_t v51 = (uint64_t)v46
          + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
      uint64_t v52 = *(void *)(v178 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001AEF94(v51, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        sub_1000C50F4();
        sub_1001AEFFC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v182[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v182[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v51 += v52;
        --v50;
      }
      while (v50);
      uint64_t v46 = v161;
      swift_bridgeObjectRelease();
      uint64_t v48 = v180;
    }
    sub_1000B66A0(0, &qword_100263B50);
    Class v62 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v49 devicesUpdatedWithRecords:v62];

    swift_unknownObjectRelease();
    int64_t v36 = v172;
  }
  uint64_t v63 = v46[2];
  if (v63)
  {
    unint64_t v64 = v178;
    v179 = (void *)((char *)v46
                    + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80)));
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v65 = 0;
    v167 = (void (**)(char *, uint64_t, uint64_t))(v170 + 2);
    uint64_t v66 = *(void *)(v64 + 72);
    v166 = (void (**)(uint64_t, uint64_t))(v170 + 1);
    v170 = (void (**)(uint64_t, void, uint64_t, int *))(v173 + 56);
    v169 = (uint64_t (**)(uint64_t, uint64_t, int *))(v173 + 48);
    v174 = "Invalid AAProxCardsRecord - %@";
    unint64_t v178 = 0x80000001001F75A0;
    long long v165 = xmmword_1001D2D40;
    uint64_t v67 = v175;
    uint64_t v68 = v176;
    while (1)
    {
      uint64_t v69 = (void *)((char *)v179 + v66 * v65 + *(int *)(v68 + 24));
      if ((*v69 != 0xD000000000000011 || v69[1] != v178) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v70 = swift_unknownObjectWeakLoadStrong();
        if (v70)
        {
          uint64_t v71 = (void *)v70;
          sub_1000C2280();

          if ([self isFirstUnlocked])
          {
            sub_10015F0D4();
            if (qword_100261890 != -1) {
              swift_once();
            }
            uint64_t v72 = v164;
            uint64_t v73 = sub_1000AA0CC(v164, (uint64_t)qword_10026AB90);
            uint64_t v74 = (uint64_t)v163;
            (*v167)(v163, v73, v72);
            uint64_t v75 = sub_10015DA98(v74, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
            swift_release();
            (*v166)(v74, v72);
            uint64_t v48 = v180;
          }
          else
          {
            static os_log_type_t.error.getter();
            if (qword_100261948 != -1) {
              swift_once();
            }
            uint64_t v75 = _swiftEmptyArrayStorage;
            os_log(_:dso:log:_:_:)();
          }
          swift_release();
          uint64_t v76 = v75[2];
          if (v76)
          {
            uint64_t v77 = v173;
            uint64_t v78 = (uint64_t)v75 + ((v173[80] + 32) & ~(unint64_t)v173[80]);
            swift_bridgeObjectRetain();
            uint64_t v79 = *((void *)v77 + 9);
            while (1)
            {
              sub_1001AEF94(v78, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v80 = &v22[v48[6]];
              BOOL v81 = *(void *)v80 == *v69 && *((void *)v80 + 1) == v69[1];
              if (v81 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              sub_1001AEFFC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              v78 += v79;
              if (!--v76)
              {
                swift_bridgeObjectRelease();
                goto LABEL_62;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v67 = v175;
            sub_1001AF05C((uint64_t)v22, v175, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            (*v170)(v67, 0, 1, v48);
          }
          else
          {
LABEL_62:
            uint64_t v67 = v175;
            (*v170)(v175, 1, 1, v48);
          }
          swift_bridgeObjectRelease();
          int v82 = (*v169)(v67, 1, v48);
          int64_t v36 = v172;
          uint64_t v68 = v176;
          if (v82 != 1)
          {
            objc_super v83 = v171;
            sub_1001AF05C(v67, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v84 = swift_unknownObjectWeakLoadStrong();
            if (v84)
            {
              char v85 = (void *)v84;
              sub_1000AA024(&qword_100263AE0);
              uint64_t v86 = swift_allocObject();
              *(_OWORD *)(v86 + 16) = v165;
              *(void *)(v86 + 32) = sub_1000CE96C();
              v182[5] = v86;
              specialized Array._endMutation()();
              sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
              Class v87 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v85 magicPairingRecordsUpdatedWithRecords:v87];
              swift_unknownObjectRelease();

              uint64_t v67 = v175;
            }
            sub_1001AEFFC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v68 = v176;
            goto LABEL_41;
          }
        }
        else
        {
          (*v170)(v67, 1, 1, v48);
        }
        sub_1000AA894(v67, &qword_1002623D0);
      }
LABEL_41:
      if (++v65 == v63)
      {

        swift_bridgeObjectRelease_n();
        return;
      }
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_10013D998(unint64_t a1, void (*a2)(void, uint64_t, void))
{
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  a2(0, v5 & ~(v5 >> 63), 0);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return (uint64_t)v6;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return (uint64_t)v6;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_release();
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_release();
  if (v8) {
    return 0;
  }
  __break(1u);
  return result;
}

void *sub_10013DAB4(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  specialized ContiguousArray.reserveCapacity(_:)();
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = (void *)swift_bridgeObjectRelease();
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        ++v4;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v3 != v4);
    }
    else
    {
      uint64_t v5 = (void **)(a1 + 32);
      do
      {
        uint64_t v6 = *v5++;
        id v7 = v6;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v3;
      }
      while (v3);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

void *sub_10013DC2C(uint64_t a1, uint64_t *a2, void (*a3)(void, uint64_t, void, __n128), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = sub_1000AA024(a2);
  __n128 v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v21 = _swiftEmptyArrayStorage;
  a3(0, v14, 0, v11);
  if (v14)
  {
    uint64_t v15 = a4(0);
    uint64_t v16 = *(void *)(v15 - 8);
    sub_1001AEF94(a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), (uint64_t)v13, a5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    sub_1000AA894((uint64_t)v13, a2);
    swift_release();
    return 0;
  }
  else
  {
    uint64_t v17 = v21;
    uint64_t v18 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  }
  return v17;
}

void *sub_10013DDCC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = sub_1000AA024(a2);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v12 = a3(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13;
  if (v11)
  {
    sub_1001AEF94(a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v10, a4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v12);
    sub_1000AA894((uint64_t)v10, a2);
    swift_release();
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v12);
    return v17;
  }
}

void *sub_10013DF34(uint64_t a1, uint64_t (*a2)(void), void (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a2(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9 - 8);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v23 = _swiftEmptyArrayStorage;
  ((void (*)(void, uint64_t, void, __n128))a3)(0, v14, 0, v11);
  uint64_t v15 = v23;
  if (v14)
  {
    uint64_t v22 = a3;
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = *(void *)(v10 + 72);
    do
    {
      sub_1001AEF94(v17, (uint64_t)v13, a4);
      uint64_t v23 = v15;
      unint64_t v20 = v15[2];
      unint64_t v19 = v15[3];
      if (v20 >= v19 >> 1)
      {
        v22(v19 > 1, v20 + 1, 1);
        uint64_t v15 = v23;
      }
      v15[2] = v20 + 1;
      sub_1001AF05C((uint64_t)v13, (uint64_t)v15 + v16 + v20 * v18, a5);
      v17 += v18;
      --v14;
    }
    while (v14);
  }
  return v15;
}

void *sub_10013E0B8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_100190978(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5) {
      return v4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  return 0;
}

uint64_t sub_10013E1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v189 = (uint64_t)&v174 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v183 = (char *)&v174 - v7;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  unint64_t v178 = (uint64_t (**)(uint64_t, uint64_t, int *))((char *)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v177 = (void (**)(char *, uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v176 = (const char *)*(v177 - 1);
  __chkstk_darwin(v177);
  v179 = (long long *)((char *)&v174 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  *(void *)&long long v174 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  uint64_t v175 = (char *)&v174 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for URL();
  v186 = *(const char **)(v182 - 8);
  __chkstk_darwin(v182);
  unint64_t v181 = (char *)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v185 = (uint64_t)&v174 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DeviceRecord();
  unint64_t v188 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MagicPairingSettingsRecord();
  v184 = *(const char **)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v174 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v180 = (void (**)(uint64_t, uint64_t))((char *)&v174 - v23);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v174 - v25;
  uint64_t v187 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  v190 = (int *)v19;
  uint64_t v28 = Array.description.getter();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_1000AA5E0();
  *(void *)(v27 + 32) = v28;
  *(void *)(v27 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (v31)
  {
    uint64_t v32 = v31;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v34 = (void *)Strong;
      uint64_t v35 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v35)
      {
        unint64_t v196 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v36 = v32[2];
        if (v36)
        {
          uint64_t v189 = (uint64_t)v35;
          uint64_t v37 = (uint64_t)v32
              + ((*((unsigned __int8 *)v184 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v184 + 80));
          uint64_t v38 = *((void *)v184 + 9);
          unint64_t v188 = (unint64_t)v32;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v37, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            id v39 = &v26[v190[6]];
            if (*(void *)v39 == 0xD000000000000011 && *((void *)v39 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v37 += v38;
            --v36;
          }
          while (v36);
          swift_bridgeObjectRelease();
          uint64_t v35 = (void *)v189;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v35 magicPairingRecordsUpdatedWithRecords:v56.super.isa];
LABEL_28:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v40 = (char *)sub_10013DC2C(a1, &qword_1002623D0, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (v40)
  {
    uint64_t v41 = v40;
    swift_beginAccess();
    uint64_t v42 = swift_unknownObjectWeakLoadStrong();
    int64_t v43 = v190;
    if (v42)
    {
      uint64_t v44 = (void *)v42;
      uint64_t v45 = (char *)swift_unknownObjectWeakLoadStrong();

      if (v45)
      {
        unint64_t v196 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v46 = *((void *)v41 + 2);
        if (v46)
        {
          v183 = v45;
          uint64_t v47 = (uint64_t)&v41[(*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80)];
          uint64_t v189 = *(void *)(v188 + 72);
          uint64_t v175 = v41;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v47, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            id v48 = objc_allocWithZone((Class)BTCloudDevice);
            swift_bridgeObjectRetain();
            NSString v49 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v50 = [v48 initWithBluetoothAddress:v49];

            NSString v51 = String._bridgeToObjectiveC()();
            [v50 setNickname:v51];

            NSString v52 = String._bridgeToObjectiveC()();
            [v50 setModelNumber:v52];

            NSString v53 = String._bridgeToObjectiveC()();
            [v50 setManufacturer:v53];

            NSString v54 = String._bridgeToObjectiveC()();
            [v50 setProductID:v54];

            NSString v55 = String._bridgeToObjectiveC()();
            [v50 setVendorID:v55];

            sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v47 += v189;
            --v46;
          }
          while (v46);
          uint64_t v41 = v175;
          swift_bridgeObjectRelease();
          int64_t v43 = v190;
          uint64_t v45 = v183;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v45 devicesUpdatedWithRecords:isa];

        swift_unknownObjectRelease();
      }
    }
    v183 = (char *)*((void *)v41 + 2);
    if (v183)
    {
      unint64_t v68 = v188;
      uint64_t v189 = (uint64_t)&v41[(*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80)];
      uint64_t v175 = v41;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v69 = 0;
      uint64_t v177 = (void (**)(char *, uint64_t, uint64_t))(v186 + 16);
      uint64_t v70 = *(void *)(v68 + 72);
      uint64_t v176 = v186 + 8;
      v179 = (long long *)(v184 + 56);
      unint64_t v178 = (uint64_t (**)(uint64_t, uint64_t, int *))(v184 + 48);
      v186 = "Invalid AAProxCardsRecord - %@";
      unint64_t v188 = 0x80000001001F75A0;
      long long v174 = xmmword_1001D2D40;
      uint64_t v71 = v185;
      uint64_t v72 = (uint64_t)v183;
      while (1)
      {
        uint64_t v73 = (void *)(v189 + v70 * v69 + *(int *)(v16 + 24));
        if ((*v73 != 0xD000000000000011 || v73[1] != v188)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v74 = swift_unknownObjectWeakLoadStrong();
          if (v74)
          {
            uint64_t v75 = (void *)v74;
            sub_1000C2280();

            if ([self isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261890 != -1) {
                swift_once();
              }
              uint64_t v76 = v182;
              uint64_t v77 = sub_1000AA0CC(v182, (uint64_t)qword_10026AB90);
              uint64_t v78 = (uint64_t)v181;
              (*v177)(v181, v77, v76);
              uint64_t v79 = sub_10015DA98(v78, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v176)(v78, v76);
              int64_t v43 = v190;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              uint64_t v79 = _swiftEmptyArrayStorage;
              os_log(_:dso:log:_:_:)();
            }
            swift_release();
            uint64_t v80 = v79[2];
            if (v80)
            {
              BOOL v81 = v184;
              uint64_t v82 = (uint64_t)v79
                  + ((*((unsigned __int8 *)v184 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v184 + 80));
              swift_bridgeObjectRetain();
              uint64_t v83 = *((void *)v81 + 9);
              while (1)
              {
                sub_1001AEF94(v82, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                uint64_t v84 = &v21[v43[6]];
                BOOL v85 = *(void *)v84 == *v73 && *((void *)v84 + 1) == v73[1];
                if (v85 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  break;
                }
                sub_1001AEFFC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                v82 += v83;
                if (!--v80)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_65;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v71 = v185;
              sub_1001AF05C((uint64_t)v21, v185, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              (*(void (**)(uint64_t, void, uint64_t, int *))v179)(v71, 0, 1, v43);
            }
            else
            {
LABEL_65:
              uint64_t v71 = v185;
              (*(void (**)(uint64_t, uint64_t, uint64_t, int *))v179)(v185, 1, 1, v43);
            }
            swift_bridgeObjectRelease();
            int v86 = (*v178)(v71, 1, v43);
            uint64_t v72 = (uint64_t)v183;
            if (v86 != 1)
            {
              Class v87 = v180;
              sub_1001AF05C(v71, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v88 = swift_unknownObjectWeakLoadStrong();
              if (v88)
              {
                uint64_t v89 = (void *)v88;
                uint64_t v90 = (void *)swift_unknownObjectWeakLoadStrong();

                if (v90)
                {
                  sub_1000AA024(&qword_100263AE0);
                  uint64_t v91 = swift_allocObject();
                  *(_OWORD *)(v91 + 16) = v174;
                  *(void *)(v91 + 32) = sub_1000CE96C();
                  uint64_t v191 = v91;
                  specialized Array._endMutation()();
                  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                  Class v92 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v90 magicPairingRecordsUpdatedWithRecords:v92];
                  swift_unknownObjectRelease();

                  uint64_t v71 = v185;
                }
              }
              sub_1001AEFFC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v72 = (uint64_t)v183;
              goto LABEL_44;
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, int *))v179)(v71, 1, 1, v43);
          }
          sub_1000AA894(v71, &qword_1002623D0);
        }
LABEL_44:
        if (++v69 == v72) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v58 = sub_10013DC2C(a1, &qword_1002623D0, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (v58)
  {
    uint64_t v59 = v58;
    swift_beginAccess();
    uint64_t v60 = swift_unknownObjectWeakLoadStrong();
    if (v60)
    {
      uint64_t v61 = (void *)v60;
      Class v62 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v62)
      {
        unint64_t v196 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v63 = v59[2];
        if (v63)
        {
          uint64_t v64 = (uint64_t)v59
              + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
          uint64_t v65 = *(void *)(v174 + 72);
          swift_bridgeObjectRetain();
          uint64_t v66 = (uint64_t)v175;
          do
          {
            sub_1001AEF94(v64, v66, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v66, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v196 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v64 += v65;
            --v63;
          }
          while (v63);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v62 deviceSupportInformationRecordsUpdatedWithRecords:v56.super.isa];
        goto LABEL_28;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v93 = sub_10013DC2C(a1, &qword_1002623D0, (void (*)(void, uint64_t, void, __n128))sub_100190978, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (v93)
  {
    uint64_t v94 = v176;
    if (v93[2])
    {
      uint64_t v95 = v178;
      sub_1001AEF94((uint64_t)v93 + ((*((unsigned __int8 *)v176 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v176 + 80)), (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      Class v96 = (void (*)(uint64_t (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v94 + 7);
      uint64_t v97 = v95;
      uint64_t v98 = 0;
    }
    else
    {
      Class v96 = (void (*)(uint64_t (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v176 + 7);
      uint64_t v95 = v178;
      uint64_t v97 = v178;
      uint64_t v98 = 1;
    }
    char v99 = v177;
    v96(v97, v98, 1, (void (**)(void, void, void))v177);
    uint64_t v100 = v189;
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(void, uint64_t, void))v94 + 6))(v95, 1, v99) == 1)
    {
      sub_1000AA894((uint64_t)v95, (uint64_t *)&unk_100263BA0);
      goto LABEL_81;
    }
    sub_1001AF05C((uint64_t)v95, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    swift_beginAccess();
    uint64_t v107 = swift_unknownObjectWeakLoadStrong();
    if (!v107
      || (uint64_t v108 = (void *)v107,
          uint64_t v109 = (void (**)(char *, uint64_t, uint64_t))swift_unknownObjectWeakLoadStrong(),
          v108,
          !v109))
    {
LABEL_141:
      swift_beginAccess();
      uint64_t v157 = swift_unknownObjectWeakLoadStrong();
      if (!v157) {
        return sub_1001AEFFC((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      id v158 = (void *)v157;
      id v159 = (int *)swift_unknownObjectWeakLoadStrong();

      if (!v159) {
        return sub_1001AEFFC((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      unint64_t v160 = (unint64_t)sub_100101DD0();
      unint64_t v161 = v160;
      unint64_t v192 = (unint64_t)_swiftEmptyArrayStorage;
      if (v160 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v162 = result;
        if (result)
        {
LABEL_145:
          v190 = v159;
          if (v162 >= 1)
          {
            for (uint64_t i = 0; i != v162; ++i)
            {
              if ((v161 & 0xC000000000000001) != 0) {
                id v164 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v164 = *(id *)(v161 + 8 * i + 32);
              }
              long long v165 = v164;
              id v166 = [v164 bluetoothAddress];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              id v167 = objc_allocWithZone((Class)BTCloudDevice);
              NSString v168 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v169 = [v167 initWithBluetoothAddress:v168];

              id v170 = [v165 name];
              [v169 setNickname:v170];

              id v171 = [v165 productID];
              [v169 setProductID:v171];

              id v172 = [v165 vendorID];
              [v169 setVendorID:v172];

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            swift_bridgeObjectRelease();
            id v159 = v190;
            goto LABEL_156;
          }
LABEL_159:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v162 = *(void *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v162) {
          goto LABEL_145;
        }
      }
      swift_bridgeObjectRelease();
LABEL_156:
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_100263B50);
      Class v173 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v159 devicesUpdatedWithRecords:v173];
      swift_unknownObjectRelease();

      return sub_1001AEFFC((uint64_t)v179, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    }
    uint64_t v110 = (const char *)sub_100101DD0();
    swift_beginAccess();
    uint64_t v111 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    unint64_t v192 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v110 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v112 = result;
      if (result) {
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v112 = *(void *)(((unint64_t)v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v112)
      {
LABEL_90:
        uint64_t v177 = v109;
        if (v112 < 1)
        {
          __break(1u);
          goto LABEL_159;
        }
        unint64_t v188 = (unint64_t)v110 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v113 = 0;
        v184 = v186 + 16;
        v180 = (void (**)(uint64_t, uint64_t))(v186 + 8);
        uint64_t v185 = v112;
        v186 = v110;
        do
        {
          if (v188) {
            uint64_t v114 = (uint64_t (**)(uint64_t, uint64_t, int *))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v114 = (uint64_t (**)(uint64_t, uint64_t, int *))*(id *)&v110[8 * v113 + 32];
          }
          uint64_t v115 = v114;
          uint64_t v116 = swift_unknownObjectWeakLoadStrong();
          if (v116)
          {
            uint64_t v117 = (void *)v116;
            sub_1000C2280();
            uint64_t v118 = self;
            if ([v118 isFirstUnlocked])
            {
              uint64_t v119 = v115;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v120 = v182;
              uint64_t v121 = sub_1000AA0CC(v182, (uint64_t)qword_10026AB68);
              uint64_t v122 = (uint64_t)v181;
              (*(void (**)(char *, uint64_t, uint64_t))v184)(v181, v121, v120);
              uint64_t v123 = sub_10015DA98(v122, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v180)(v122, v120);
              uint64_t v124 = v123[2];
              unsigned int v125 = (uint64_t (**)(uint64_t, uint64_t, int *))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v126 = (uint64_t)*(v125 - 1);
              uint64_t v127 = v126;
              if (v124)
              {
                uint64_t v128 = (uint64_t)v183;
                sub_1001AEF94((uint64_t)v123+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)), (uint64_t)v183, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))(v127 + 56))(v128, 0, 1, v125);
              }
              else
              {
                uint64_t v128 = (uint64_t)v183;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))(v126 + 56))(v183, 1, 1, v125);
              }
              swift_release();
              uint64_t v129 = v128;
              swift_bridgeObjectRelease();
              uint64_t v100 = v189;
              uint64_t v115 = v119;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              unsigned int v125 = (uint64_t (**)(uint64_t, uint64_t, int *))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v129 = (uint64_t)v183;
              (*((void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))*(v125 - 1)
               + 7))(v183, 1, 1, v125);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            unint64_t v130 = (int *)*(v125 - 1);
            uint64_t v131 = (uint64_t (*)(uint64_t, uint64_t, void))*((void *)v130 + 6);
            int v132 = v131(v129, 1, v125);
            v190 = v130;
            if (v132 == 1)
            {
              sub_1000AA894(v129, &qword_1002623C0);
              Class v133 = 0;
            }
            else
            {
              uint64_t v134 = Data.subdata(in:)();
              unint64_t v178 = v125;
              Class v135 = v117;
              uint64_t v136 = v131;
              unint64_t v137 = v118;
              uint64_t v138 = v100;
              unint64_t v139 = v115;
              unint64_t v141 = v140;
              sub_1001AEFFC(v129, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v133 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v142 = v141;
              uint64_t v115 = v139;
              uint64_t v100 = v138;
              uint64_t v118 = v137;
              uint64_t v131 = v136;
              uint64_t v117 = v135;
              unsigned int v125 = v178;
              sub_1000AA8F0(v134, v142);
            }
            [v115 setMasterKey:v133];

            sub_1000C2280();
            if ([v118 isFirstUnlocked])
            {
              unint64_t v178 = v115;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v143 = v182;
              uint64_t v144 = sub_1000AA0CC(v182, (uint64_t)qword_10026AB68);
              uint64_t v145 = (uint64_t)v181;
              (*(void (**)(char *, uint64_t, uint64_t))v184)(v181, v144, v143);
              uint64_t v146 = sub_10015DA98(v145, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v180)(v145, v143);
              if (v146[2])
              {
                uint64_t v100 = v189;
                unint64_t v147 = v190;
                sub_1001AEF94((uint64_t)v146+ ((*((unsigned __int8 *)v190 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v190 + 80)), v189, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*((void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))v147
                 + 7))(v100, 0, 1, v125);
              }
              else
              {
                uint64_t v100 = v189;
                (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))v190
                 + 7))(v189, 1, 1, v125);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v115 = v178;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, int *)))v190
               + 7))(v100, 1, 1, v125);
              swift_release();
            }
            if (v131(v100, 1, v125) == 1)
            {
              sub_1000AA894(v100, &qword_1002623C0);
              Class v148 = 0;
            }
            else
            {
              uint64_t v149 = Data.subdata(in:)();
              unint64_t v151 = v150;
              sub_1001AEFFC(v100, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v148 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v149, v151);
            }
            uint64_t v112 = v185;
            uint64_t v110 = v186;
            [v115 setMasterHint:v148];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v192 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v113;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v112 != v113);
        swift_bridgeObjectRelease();
        uint64_t v109 = v177;
        goto LABEL_140;
      }
    }
    swift_bridgeObjectRelease();
LABEL_140:
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    Class v156 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v109 magicPairingRecordsUpdatedWithRecords:v156];

    swift_unknownObjectRelease();
    goto LABEL_141;
  }
LABEL_81:
  if (sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord))
  {
    swift_beginAccess();
    uint64_t v101 = swift_unknownObjectWeakLoadStrong();
    if (!v101) {
      return swift_bridgeObjectRelease();
    }
    NSArray v102 = (void *)v101;
    v194 = &type metadata for AudioAccessoryFeatures;
    unint64_t v195 = sub_1000AE4C4();
    char v103 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v193);
    if (v103)
    {
      uint64_t v104 = swift_unknownObjectWeakLoadStrong();
      if (v104)
      {
        id v105 = (void *)v104;
        type metadata accessor for AADeviceRecord();
        v106.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v105 aaDeviceRecordsUpdatedWithRecords:v106.super.isa];
LABEL_134:

        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    goto LABEL_135;
  }
  if (sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord))
  {
    swift_beginAccess();
    v152 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v152) {

    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (!result) {
    return result;
  }
  swift_beginAccess();
  uint64_t v153 = swift_unknownObjectWeakLoadStrong();
  if (v153)
  {
    NSArray v102 = (void *)v153;
    uint64_t v154 = swift_unknownObjectWeakLoadStrong();
    if (v154)
    {
      NSString v155 = (void *)v154;
      type metadata accessor for HMDeviceCloudRecord();
      v106.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v155 hmDeviceCloudRecordsUpdatedWithRecords:v106.super.isa];
      goto LABEL_134;
    }
LABEL_135:
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001403A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v190 = (uint64_t)&v174 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v184 = (char *)&v174 - v7;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  unint64_t v178 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v174 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v177 = *(const char **)(v10 - 8);
  __chkstk_darwin(v10);
  v180 = (long long *)((char *)&v174 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v175 = *(void **)(v12 - 8);
  __chkstk_darwin(v12 - 8);
  uint64_t v176 = (void (**)(uint64_t, uint64_t))((char *)&v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v183 = type metadata accessor for URL();
  uint64_t v187 = *(const char **)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v182 = (char *)&v174 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v15 - 8);
  uint64_t v186 = (uint64_t)&v174 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for DeviceRecord();
  unint64_t v189 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v18 = (char *)&v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v185 = *(const char **)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v20 = (char *)&v174 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v181 = (void (**)(uint64_t, uint64_t))((char *)&v174 - v22);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v174 - v24;
  uint64_t v188 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v27 = Array.description.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_1000AA5E0();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10013DC2C(a1, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (v30)
  {
    uint64_t v31 = v30;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v33 = (void *)Strong;
      uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v34)
      {
        unint64_t v197 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v35 = v31[2];
        if (v35)
        {
          uint64_t v190 = (uint64_t)v34;
          uint64_t v36 = (uint64_t)v31
              + ((*((unsigned __int8 *)v185 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v185 + 80));
          uint64_t v37 = *((void *)v185 + 9);
          unint64_t v189 = (unint64_t)v31;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v36, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v38 = &v25[*(int *)(v191 + 24)];
            if (*(void *)v38 == 0xD000000000000011 && *((void *)v38 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v36 += v37;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)v190;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v34 magicPairingRecordsUpdatedWithRecords:v56.super.isa];
LABEL_28:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  id v39 = sub_10013DC2C(a1, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (v39)
  {
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    uint64_t v42 = v191;
    uint64_t v43 = v179;
    if (v41)
    {
      uint64_t v44 = (void *)v41;
      uint64_t v45 = (char *)swift_unknownObjectWeakLoadStrong();

      if (v45)
      {
        unint64_t v197 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v46 = v40[2];
        if (v46)
        {
          v184 = v45;
          uint64_t v47 = (uint64_t)v40
              + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
          uint64_t v190 = *(void *)(v189 + 72);
          uint64_t v175 = v40;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v47, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            id v48 = objc_allocWithZone((Class)BTCloudDevice);
            swift_bridgeObjectRetain();
            NSString v49 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v50 = [v48 initWithBluetoothAddress:v49];

            NSString v51 = String._bridgeToObjectiveC()();
            [v50 setNickname:v51];

            NSString v52 = String._bridgeToObjectiveC()();
            [v50 setModelNumber:v52];

            NSString v53 = String._bridgeToObjectiveC()();
            [v50 setManufacturer:v53];

            NSString v54 = String._bridgeToObjectiveC()();
            [v50 setProductID:v54];

            NSString v55 = String._bridgeToObjectiveC()();
            [v50 setVendorID:v55];

            sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v47 += v190;
            --v46;
          }
          while (v46);
          uint64_t v40 = v175;
          swift_bridgeObjectRelease();
          uint64_t v42 = v191;
          uint64_t v45 = v184;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v45 devicesUpdatedWithRecords:isa];

        swift_unknownObjectRelease();
      }
    }
    v184 = (char *)v40[2];
    if (v184)
    {
      unint64_t v68 = v189;
      uint64_t v190 = (uint64_t)v40
           + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
      uint64_t v175 = v40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v69 = 0;
      uint64_t v177 = v187 + 16;
      uint64_t v70 = *(void *)(v68 + 72);
      uint64_t v176 = (void (**)(uint64_t, uint64_t))(v187 + 8);
      v180 = (long long *)(v185 + 56);
      unint64_t v178 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 48);
      uint64_t v187 = "Invalid AAProxCardsRecord - %@";
      unint64_t v189 = 0x80000001001F75A0;
      long long v174 = xmmword_1001D2D40;
      uint64_t v71 = v186;
      uint64_t v72 = (uint64_t)v184;
      while (1)
      {
        uint64_t v73 = (void *)(v190 + v70 * v69 + *(int *)(v43 + 24));
        if ((*v73 != 0xD000000000000011 || v73[1] != v189)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v74 = swift_unknownObjectWeakLoadStrong();
          if (v74)
          {
            uint64_t v75 = (void *)v74;
            sub_1000C2280();

            if ([self isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261890 != -1) {
                swift_once();
              }
              uint64_t v76 = v183;
              uint64_t v77 = sub_1000AA0CC(v183, (uint64_t)qword_10026AB90);
              uint64_t v78 = (uint64_t)v182;
              (*(void (**)(char *, uint64_t, uint64_t))v177)(v182, v77, v76);
              uint64_t v79 = sub_10015DA98(v78, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
              swift_release();
              (*v176)(v78, v76);
              uint64_t v42 = v191;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              uint64_t v79 = _swiftEmptyArrayStorage;
              os_log(_:dso:log:_:_:)();
            }
            swift_release();
            uint64_t v80 = v79[2];
            if (v80)
            {
              BOOL v81 = v185;
              uint64_t v82 = (uint64_t)v79
                  + ((*((unsigned __int8 *)v185 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v185 + 80));
              swift_bridgeObjectRetain();
              uint64_t v83 = *((void *)v81 + 9);
              while (1)
              {
                sub_1001AEF94(v82, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                uint64_t v84 = &v20[*(int *)(v42 + 24)];
                BOOL v85 = *(void *)v84 == *v73 && *((void *)v84 + 1) == v73[1];
                if (v85 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  break;
                }
                sub_1001AEFFC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                v82 += v83;
                if (!--v80)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_65;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v71 = v186;
              sub_1001AF05C((uint64_t)v20, v186, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))v180)(v71, 0, 1, v42);
            }
            else
            {
LABEL_65:
              uint64_t v71 = v186;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v180)(v186, 1, 1, v42);
            }
            swift_bridgeObjectRelease();
            int v86 = (*v178)(v71, 1, v42);
            uint64_t v72 = (uint64_t)v184;
            if (v86 != 1)
            {
              Class v87 = v181;
              sub_1001AF05C(v71, (uint64_t)v181, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v88 = swift_unknownObjectWeakLoadStrong();
              if (v88)
              {
                uint64_t v89 = (void *)v88;
                uint64_t v90 = (void *)swift_unknownObjectWeakLoadStrong();

                if (v90)
                {
                  sub_1000AA024(&qword_100263AE0);
                  uint64_t v91 = swift_allocObject();
                  *(_OWORD *)(v91 + 16) = v174;
                  *(void *)(v91 + 32) = sub_1000CE96C();
                  uint64_t v192 = v91;
                  specialized Array._endMutation()();
                  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                  Class v92 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v90 magicPairingRecordsUpdatedWithRecords:v92];
                  swift_unknownObjectRelease();

                  uint64_t v71 = v186;
                }
              }
              sub_1001AEFFC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v72 = (uint64_t)v184;
              goto LABEL_44;
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v180)(v71, 1, 1, v42);
          }
          sub_1000AA894(v71, &qword_1002623D0);
        }
LABEL_44:
        if (++v69 == v72) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v58 = sub_10013DC2C(a1, (uint64_t *)&unk_100263BA0, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (v58)
  {
    uint64_t v59 = v58;
    swift_beginAccess();
    uint64_t v60 = swift_unknownObjectWeakLoadStrong();
    if (v60)
    {
      uint64_t v61 = (void *)v60;
      Class v62 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v62)
      {
        unint64_t v197 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v63 = v59[2];
        if (v63)
        {
          uint64_t v64 = (uint64_t)v59
              + ((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80));
          uint64_t v65 = v175[9];
          swift_bridgeObjectRetain();
          uint64_t v66 = (uint64_t)v176;
          do
          {
            sub_1001AEF94(v64, v66, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v66, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v197 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v64 += v65;
            --v63;
          }
          while (v63);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v62 deviceSupportInformationRecordsUpdatedWithRecords:v56.super.isa];
        goto LABEL_28;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v93 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (void (*)(BOOL, unint64_t, uint64_t))sub_100190978, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (v93)
  {
    uint64_t v94 = v177;
    if (v93[2])
    {
      uint64_t v95 = v178;
      sub_1001AEF94((uint64_t)v93 + ((*((unsigned __int8 *)v177 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v177 + 80)), (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      Class v96 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))*((void *)v94 + 7);
      uint64_t v97 = v95;
      uint64_t v98 = 0;
    }
    else
    {
      Class v96 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))*((void *)v177 + 7);
      uint64_t v95 = v178;
      uint64_t v97 = v178;
      uint64_t v98 = 1;
    }
    uint64_t v99 = v10;
    v96(v97, v98, 1, v10);
    uint64_t v100 = v190;
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(void, uint64_t, uint64_t))v94 + 6))(v95, 1, v99) == 1)
    {
      sub_1000AA894((uint64_t)v95, (uint64_t *)&unk_100263BA0);
      goto LABEL_81;
    }
    sub_1001AF05C((uint64_t)v95, (uint64_t)v180, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    swift_beginAccess();
    uint64_t v107 = swift_unknownObjectWeakLoadStrong();
    if (!v107
      || (uint64_t v108 = (void *)v107,
          uint64_t v109 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))swift_unknownObjectWeakLoadStrong(),
          v108,
          !v109))
    {
LABEL_141:
      swift_beginAccess();
      uint64_t v157 = swift_unknownObjectWeakLoadStrong();
      if (!v157) {
        return sub_1001AEFFC((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      id v158 = (void *)v157;
      id v159 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v159) {
        return sub_1001AEFFC((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      unint64_t v160 = (unint64_t)sub_100101DD0();
      unint64_t v161 = v160;
      unint64_t v193 = (unint64_t)_swiftEmptyArrayStorage;
      if (v160 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v162 = result;
        if (result)
        {
LABEL_145:
          uint64_t v191 = (uint64_t)v159;
          if (v162 >= 1)
          {
            for (uint64_t i = 0; i != v162; ++i)
            {
              if ((v161 & 0xC000000000000001) != 0) {
                id v164 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v164 = *(id *)(v161 + 8 * i + 32);
              }
              long long v165 = v164;
              id v166 = [v164 bluetoothAddress];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              id v167 = objc_allocWithZone((Class)BTCloudDevice);
              NSString v168 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v169 = [v167 initWithBluetoothAddress:v168];

              id v170 = [v165 name];
              [v169 setNickname:v170];

              id v171 = [v165 productID];
              [v169 setProductID:v171];

              id v172 = [v165 vendorID];
              [v169 setVendorID:v172];

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            swift_bridgeObjectRelease();
            id v159 = (void *)v191;
            goto LABEL_156;
          }
LABEL_159:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v162 = *(void *)((v160 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v162) {
          goto LABEL_145;
        }
      }
      swift_bridgeObjectRelease();
LABEL_156:
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_100263B50);
      Class v173 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v159 devicesUpdatedWithRecords:v173];
      swift_unknownObjectRelease();

      return sub_1001AEFFC((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    }
    uint64_t v110 = (const char *)sub_100101DD0();
    swift_beginAccess();
    uint64_t v111 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    unint64_t v193 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v110 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v112 = result;
      if (result) {
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v112 = *(void *)(((unint64_t)v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v112)
      {
LABEL_90:
        unint64_t v178 = v109;
        if (v112 < 1)
        {
          __break(1u);
          goto LABEL_159;
        }
        unint64_t v189 = (unint64_t)v110 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v113 = 0;
        uint64_t v185 = v187 + 16;
        unint64_t v181 = (void (**)(uint64_t, uint64_t))(v187 + 8);
        uint64_t v186 = v112;
        uint64_t v187 = v110;
        do
        {
          if (v189) {
            id v114 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v114 = *(id *)&v110[8 * v113 + 32];
          }
          uint64_t v115 = v114;
          uint64_t v116 = swift_unknownObjectWeakLoadStrong();
          if (v116)
          {
            uint64_t v117 = (void *)v116;
            sub_1000C2280();
            uint64_t v118 = self;
            if ([v118 isFirstUnlocked])
            {
              uint64_t v119 = v115;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v120 = v183;
              uint64_t v121 = sub_1000AA0CC(v183, (uint64_t)qword_10026AB68);
              uint64_t v122 = (uint64_t)v182;
              (*(void (**)(char *, uint64_t, uint64_t))v185)(v182, v121, v120);
              uint64_t v123 = sub_10015DA98(v122, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v181)(v122, v120);
              uint64_t v124 = v123[2];
              uint64_t v125 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v126 = *(void *)(v125 - 8);
              uint64_t v127 = v126;
              if (v124)
              {
                uint64_t v128 = (uint64_t)v184;
                sub_1001AEF94((uint64_t)v123+ ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)), (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v127 + 56))(v128, 0, 1, v125);
              }
              else
              {
                uint64_t v128 = (uint64_t)v184;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v184, 1, 1, v125);
              }
              swift_release();
              uint64_t v129 = v128;
              swift_bridgeObjectRelease();
              uint64_t v100 = v190;
              uint64_t v115 = v119;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v125 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v129 = (uint64_t)v184;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v184, 1, 1, v125);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v130 = *(void *)(v125 - 8);
            uint64_t v131 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
            int v132 = v131(v129, 1, v125);
            uint64_t v191 = v130;
            if (v132 == 1)
            {
              sub_1000AA894(v129, &qword_1002623C0);
              Class v133 = 0;
            }
            else
            {
              uint64_t v134 = Data.subdata(in:)();
              uint64_t v179 = v125;
              Class v135 = v117;
              uint64_t v136 = v131;
              unint64_t v137 = v118;
              uint64_t v138 = v100;
              unint64_t v139 = v115;
              unint64_t v141 = v140;
              sub_1001AEFFC(v129, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v133 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v142 = v141;
              uint64_t v115 = v139;
              uint64_t v100 = v138;
              uint64_t v118 = v137;
              uint64_t v131 = v136;
              uint64_t v117 = v135;
              uint64_t v125 = v179;
              sub_1000AA8F0(v134, v142);
            }
            [v115 setMasterKey:v133];

            sub_1000C2280();
            if ([v118 isFirstUnlocked])
            {
              uint64_t v179 = (uint64_t)v115;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v143 = v183;
              uint64_t v144 = sub_1000AA0CC(v183, (uint64_t)qword_10026AB68);
              uint64_t v145 = (uint64_t)v182;
              (*(void (**)(char *, uint64_t, uint64_t))v185)(v182, v144, v143);
              uint64_t v146 = sub_10015DA98(v145, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v181)(v145, v143);
              if (v146[2])
              {
                uint64_t v100 = v190;
                uint64_t v147 = v191;
                sub_1001AEF94((uint64_t)v146+ ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80)), v190, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v147 + 56))(v100, 0, 1, v125);
              }
              else
              {
                uint64_t v100 = v190;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v190, 1, 1, v125);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v115 = (void *)v179;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v100, 1, 1, v125);
              swift_release();
            }
            if (v131(v100, 1, v125) == 1)
            {
              sub_1000AA894(v100, &qword_1002623C0);
              Class v148 = 0;
            }
            else
            {
              uint64_t v149 = Data.subdata(in:)();
              unint64_t v151 = v150;
              sub_1001AEFFC(v100, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v148 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v149, v151);
            }
            uint64_t v112 = v186;
            uint64_t v110 = v187;
            [v115 setMasterHint:v148];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v113;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v112 != v113);
        swift_bridgeObjectRelease();
        uint64_t v109 = v178;
        goto LABEL_140;
      }
    }
    swift_bridgeObjectRelease();
LABEL_140:
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    Class v156 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v109 magicPairingRecordsUpdatedWithRecords:v156];

    swift_unknownObjectRelease();
    goto LABEL_141;
  }
LABEL_81:
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords))
  {
    swift_beginAccess();
    uint64_t v101 = swift_unknownObjectWeakLoadStrong();
    if (!v101) {
      return swift_bridgeObjectRelease();
    }
    NSArray v102 = (void *)v101;
    unint64_t v195 = &type metadata for AudioAccessoryFeatures;
    unint64_t v196 = sub_1000AE4C4();
    char v103 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v194);
    if (v103)
    {
      uint64_t v104 = swift_unknownObjectWeakLoadStrong();
      if (v104)
      {
        id v105 = (void *)v104;
        type metadata accessor for AADeviceRecord();
        v106.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v105 aaDeviceRecordsUpdatedWithRecords:v106.super.isa];
LABEL_134:

        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    goto LABEL_135;
  }
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords))
  {
    swift_beginAccess();
    v152 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v152) {

    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)sub_10013DDCC(a1, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  if (!result) {
    return result;
  }
  swift_beginAccess();
  uint64_t v153 = swift_unknownObjectWeakLoadStrong();
  if (v153)
  {
    NSArray v102 = (void *)v153;
    uint64_t v154 = swift_unknownObjectWeakLoadStrong();
    if (v154)
    {
      NSString v155 = (void *)v154;
      type metadata accessor for HMDeviceCloudRecord();
      v106.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v155 hmDeviceCloudRecordsUpdatedWithRecords:v106.super.isa];
      goto LABEL_134;
    }
LABEL_135:
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014258C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v188 = (uint64_t)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v182 = (char *)&v173 - v7;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v177 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = (void (**)(char *, uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v175 = (const char *)*(v176 - 1);
  __chkstk_darwin(v176);
  unint64_t v178 = (long long *)((char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  *(void *)&long long v173 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  long long v174 = (char *)&v173 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for URL();
  uint64_t v185 = *(const char **)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v184 = (uint64_t)&v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DeviceRecord();
  unint64_t v187 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v183 = *(const char **)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v20 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v179 = (void (**)(uint64_t, uint64_t))((char *)&v173 - v22);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v173 - v24;
  uint64_t v186 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v27 = Array.description.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_1000AA5E0();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A00, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (v30)
  {
    uint64_t v31 = v30;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v33 = (void *)Strong;
      uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v34)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v35 = v31[2];
        if (v35)
        {
          uint64_t v188 = (uint64_t)v34;
          uint64_t v36 = (uint64_t)v31
              + ((*((unsigned __int8 *)v183 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v183 + 80));
          uint64_t v37 = *((void *)v183 + 9);
          unint64_t v187 = (unint64_t)v31;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v36, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v38 = &v25[*(int *)(v189 + 24)];
            if (*(void *)v38 == 0xD000000000000011 && *((void *)v38 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v36 += v37;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)v188;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v34 magicPairingRecordsUpdatedWithRecords:v55.super.isa];
LABEL_28:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  id v39 = (char *)sub_10013DC2C(a1, (uint64_t *)&unk_100263A00, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (v39)
  {
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    uint64_t v42 = v189;
    if (v41)
    {
      uint64_t v43 = (void *)v41;
      uint64_t v44 = (char *)swift_unknownObjectWeakLoadStrong();

      if (v44)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v45 = *((void *)v40 + 2);
        if (v45)
        {
          uint64_t v182 = v44;
          uint64_t v46 = (uint64_t)&v40[(*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)];
          uint64_t v188 = *(void *)(v187 + 72);
          long long v174 = v40;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v46, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            id v47 = objc_allocWithZone((Class)BTCloudDevice);
            swift_bridgeObjectRetain();
            NSString v48 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v49 = [v47 initWithBluetoothAddress:v48];

            NSString v50 = String._bridgeToObjectiveC()();
            [v49 setNickname:v50];

            NSString v51 = String._bridgeToObjectiveC()();
            [v49 setModelNumber:v51];

            NSString v52 = String._bridgeToObjectiveC()();
            [v49 setManufacturer:v52];

            NSString v53 = String._bridgeToObjectiveC()();
            [v49 setProductID:v53];

            NSString v54 = String._bridgeToObjectiveC()();
            [v49 setVendorID:v54];

            sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v46 += v188;
            --v45;
          }
          while (v45);
          uint64_t v40 = v174;
          swift_bridgeObjectRelease();
          uint64_t v42 = v189;
          uint64_t v44 = v182;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v44 devicesUpdatedWithRecords:isa];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v182 = (char *)*((void *)v40 + 2);
    if (v182)
    {
      unint64_t v67 = v187;
      uint64_t v188 = (uint64_t)&v40[(*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)];
      long long v174 = v40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v68 = 0;
      uint64_t v176 = (void (**)(char *, uint64_t, uint64_t))(v185 + 16);
      uint64_t v69 = *(void *)(v67 + 72);
      uint64_t v175 = v185 + 8;
      unint64_t v178 = (long long *)(v183 + 56);
      uint64_t v177 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
      uint64_t v185 = "Invalid AAProxCardsRecord - %@";
      unint64_t v187 = 0x80000001001F75A0;
      long long v173 = xmmword_1001D2D40;
      uint64_t v70 = v184;
      uint64_t v71 = (uint64_t)v182;
      while (1)
      {
        uint64_t v72 = (void *)(v188 + v69 * v68 + *(int *)(v16 + 24));
        if ((*v72 != 0xD000000000000011 || v72[1] != v187)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v73 = swift_unknownObjectWeakLoadStrong();
          if (v73)
          {
            uint64_t v74 = (void *)v73;
            sub_1000C2280();

            if ([self isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261890 != -1) {
                swift_once();
              }
              uint64_t v75 = v181;
              uint64_t v76 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB90);
              uint64_t v77 = (uint64_t)v180;
              (*v176)(v180, v76, v75);
              uint64_t v78 = sub_10015DA98(v77, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v175)(v77, v75);
              uint64_t v42 = v189;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              uint64_t v78 = _swiftEmptyArrayStorage;
              os_log(_:dso:log:_:_:)();
            }
            swift_release();
            uint64_t v79 = v78[2];
            if (v79)
            {
              uint64_t v80 = v183;
              uint64_t v81 = (uint64_t)v78
                  + ((*((unsigned __int8 *)v183 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v183 + 80));
              swift_bridgeObjectRetain();
              uint64_t v82 = *((void *)v80 + 9);
              while (1)
              {
                sub_1001AEF94(v81, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                uint64_t v83 = &v20[*(int *)(v42 + 24)];
                BOOL v84 = *(void *)v83 == *v72 && *((void *)v83 + 1) == v72[1];
                if (v84 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  break;
                }
                sub_1001AEFFC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                v81 += v82;
                if (!--v79)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_65;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v70 = v184;
              sub_1001AF05C((uint64_t)v20, v184, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))v178)(v70, 0, 1, v42);
            }
            else
            {
LABEL_65:
              uint64_t v70 = v184;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v178)(v184, 1, 1, v42);
            }
            swift_bridgeObjectRelease();
            int v85 = (*v177)(v70, 1, v42);
            uint64_t v71 = (uint64_t)v182;
            if (v85 != 1)
            {
              int v86 = v179;
              sub_1001AF05C(v70, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v87 = swift_unknownObjectWeakLoadStrong();
              if (v87)
              {
                uint64_t v88 = (void *)v87;
                uint64_t v89 = (void *)swift_unknownObjectWeakLoadStrong();

                if (v89)
                {
                  sub_1000AA024(&qword_100263AE0);
                  uint64_t v90 = swift_allocObject();
                  *(_OWORD *)(v90 + 16) = v173;
                  *(void *)(v90 + 32) = sub_1000CE96C();
                  uint64_t v190 = v90;
                  specialized Array._endMutation()();
                  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                  Class v91 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v89 magicPairingRecordsUpdatedWithRecords:v91];
                  swift_unknownObjectRelease();

                  uint64_t v70 = v184;
                }
              }
              sub_1001AEFFC((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v71 = (uint64_t)v182;
              goto LABEL_44;
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v178)(v70, 1, 1, v42);
          }
          sub_1000AA894(v70, &qword_1002623D0);
        }
LABEL_44:
        if (++v68 == v71) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  id v57 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (v57)
  {
    uint64_t v58 = v57;
    swift_beginAccess();
    uint64_t v59 = swift_unknownObjectWeakLoadStrong();
    if (v59)
    {
      uint64_t v60 = (void *)v59;
      uint64_t v61 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v61)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v62 = v58[2];
        if (v62)
        {
          uint64_t v63 = (uint64_t)v58
              + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
          uint64_t v64 = *(void *)(v173 + 72);
          swift_bridgeObjectRetain();
          uint64_t v65 = (uint64_t)v174;
          do
          {
            sub_1001AEF94(v63, v65, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v65, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v63 += v64;
            --v62;
          }
          while (v62);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v61 deviceSupportInformationRecordsUpdatedWithRecords:v55.super.isa];
        goto LABEL_28;
      }
    }
    return swift_bridgeObjectRelease();
  }
  Class v92 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A00, (void (*)(void, uint64_t, void, __n128))sub_100190978, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (v92)
  {
    uint64_t v93 = v175;
    if (v92[2])
    {
      uint64_t v94 = v177;
      sub_1001AEF94((uint64_t)v92 + ((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80)), (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      uint64_t v95 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v93 + 7);
      Class v96 = v94;
      uint64_t v97 = 0;
    }
    else
    {
      uint64_t v95 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v175 + 7);
      uint64_t v94 = v177;
      Class v96 = v177;
      uint64_t v97 = 1;
    }
    uint64_t v98 = v176;
    v95(v96, v97, 1, (void (**)(void, void, void))v176);
    uint64_t v99 = v188;
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(void, uint64_t, void))v93 + 6))(v94, 1, v98) == 1)
    {
      sub_1000AA894((uint64_t)v94, (uint64_t *)&unk_100263BA0);
      goto LABEL_81;
    }
    sub_1001AF05C((uint64_t)v94, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    swift_beginAccess();
    uint64_t v106 = swift_unknownObjectWeakLoadStrong();
    if (!v106
      || (uint64_t v107 = (void *)v106,
          uint64_t v108 = (void (**)(char *, uint64_t, uint64_t))swift_unknownObjectWeakLoadStrong(),
          v107,
          !v108))
    {
LABEL_141:
      swift_beginAccess();
      uint64_t v156 = swift_unknownObjectWeakLoadStrong();
      if (!v156) {
        return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      uint64_t v157 = (void *)v156;
      id v158 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v158) {
        return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      unint64_t v159 = (unint64_t)sub_100101DD0();
      unint64_t v160 = v159;
      unint64_t v191 = (unint64_t)_swiftEmptyArrayStorage;
      if (v159 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v161 = result;
        if (result)
        {
LABEL_145:
          uint64_t v189 = (uint64_t)v158;
          if (v161 >= 1)
          {
            for (uint64_t i = 0; i != v161; ++i)
            {
              if ((v160 & 0xC000000000000001) != 0) {
                id v163 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v163 = *(id *)(v160 + 8 * i + 32);
              }
              id v164 = v163;
              id v165 = [v163 bluetoothAddress];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              id v166 = objc_allocWithZone((Class)BTCloudDevice);
              NSString v167 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v168 = [v166 initWithBluetoothAddress:v167];

              id v169 = [v164 name];
              [v168 setNickname:v169];

              id v170 = [v164 productID];
              [v168 setProductID:v170];

              id v171 = [v164 vendorID];
              [v168 setVendorID:v171];

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            swift_bridgeObjectRelease();
            id v158 = (void *)v189;
            goto LABEL_156;
          }
LABEL_159:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v161 = *(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v161) {
          goto LABEL_145;
        }
      }
      swift_bridgeObjectRelease();
LABEL_156:
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_100263B50);
      Class v172 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v158 devicesUpdatedWithRecords:v172];
      swift_unknownObjectRelease();

      return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    }
    uint64_t v109 = (const char *)sub_100101DD0();
    swift_beginAccess();
    uint64_t v110 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    unint64_t v191 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v109 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v111 = result;
      if (result) {
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v111 = *(void *)(((unint64_t)v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v111)
      {
LABEL_90:
        uint64_t v176 = v108;
        if (v111 < 1)
        {
          __break(1u);
          goto LABEL_159;
        }
        unint64_t v187 = (unint64_t)v109 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v112 = 0;
        uint64_t v183 = v185 + 16;
        uint64_t v179 = (void (**)(uint64_t, uint64_t))(v185 + 8);
        uint64_t v184 = v111;
        uint64_t v185 = v109;
        do
        {
          if (v187) {
            uint64_t v113 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v113 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))*(id *)&v109[8 * v112 + 32];
          }
          id v114 = v113;
          uint64_t v115 = swift_unknownObjectWeakLoadStrong();
          if (v115)
          {
            uint64_t v116 = (void *)v115;
            sub_1000C2280();
            uint64_t v117 = self;
            if ([v117 isFirstUnlocked])
            {
              uint64_t v118 = v114;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v119 = v181;
              uint64_t v120 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB68);
              uint64_t v121 = (uint64_t)v180;
              (*(void (**)(char *, uint64_t, uint64_t))v183)(v180, v120, v119);
              uint64_t v122 = sub_10015DA98(v121, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v179)(v121, v119);
              uint64_t v123 = v122[2];
              uint64_t v124 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v125 = (uint64_t)*(v124 - 1);
              uint64_t v126 = v125;
              if (v123)
              {
                uint64_t v127 = (uint64_t)v182;
                sub_1001AEF94((uint64_t)v122+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80)), (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v126 + 56))(v127, 0, 1, v124);
              }
              else
              {
                uint64_t v127 = (uint64_t)v182;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v125 + 56))(v182, 1, 1, v124);
              }
              swift_release();
              uint64_t v128 = v127;
              swift_bridgeObjectRelease();
              uint64_t v99 = v188;
              id v114 = v118;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v124 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v128 = (uint64_t)v182;
              (*((void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))*(v124 - 1)
               + 7))(v182, 1, 1, v124);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v129 = (uint64_t)*(v124 - 1);
            uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t, void))(v129 + 48);
            int v131 = v130(v128, 1, v124);
            uint64_t v189 = v129;
            if (v131 == 1)
            {
              sub_1000AA894(v128, &qword_1002623C0);
              Class v132 = 0;
            }
            else
            {
              uint64_t v133 = Data.subdata(in:)();
              uint64_t v177 = v124;
              uint64_t v134 = v116;
              Class v135 = v130;
              uint64_t v136 = v117;
              uint64_t v137 = v99;
              uint64_t v138 = v114;
              unint64_t v140 = v139;
              sub_1001AEFFC(v128, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v132 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v141 = v140;
              id v114 = v138;
              uint64_t v99 = v137;
              uint64_t v117 = v136;
              uint64_t v130 = v135;
              uint64_t v116 = v134;
              uint64_t v124 = v177;
              sub_1000AA8F0(v133, v141);
            }
            [v114 setMasterKey:v132];

            sub_1000C2280();
            if ([v117 isFirstUnlocked])
            {
              uint64_t v177 = v114;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v142 = v181;
              uint64_t v143 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB68);
              uint64_t v144 = (uint64_t)v180;
              (*(void (**)(char *, uint64_t, uint64_t))v183)(v180, v143, v142);
              uint64_t v145 = sub_10015DA98(v144, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v179)(v144, v142);
              if (v145[2])
              {
                uint64_t v99 = v188;
                uint64_t v146 = v189;
                sub_1001AEF94((uint64_t)v145+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80)), v188, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v146 + 56))(v99, 0, 1, v124);
              }
              else
              {
                uint64_t v99 = v188;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v189 + 56))(v188, 1, 1, v124);
              }
              swift_release();
              swift_bridgeObjectRelease();
              id v114 = v177;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v189 + 56))(v99, 1, 1, v124);
              swift_release();
            }
            if (v130(v99, 1, v124) == 1)
            {
              sub_1000AA894(v99, &qword_1002623C0);
              Class v147 = 0;
            }
            else
            {
              uint64_t v148 = Data.subdata(in:)();
              unint64_t v150 = v149;
              sub_1001AEFFC(v99, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v147 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v148, v150);
            }
            uint64_t v111 = v184;
            uint64_t v109 = v185;
            [v114 setMasterHint:v147];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v112;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v111 != v112);
        swift_bridgeObjectRelease();
        uint64_t v108 = v176;
        goto LABEL_140;
      }
    }
    swift_bridgeObjectRelease();
LABEL_140:
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    Class v155 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v108 magicPairingRecordsUpdatedWithRecords:v155];

    swift_unknownObjectRelease();
    goto LABEL_141;
  }
LABEL_81:
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord))
  {
    swift_beginAccess();
    uint64_t v100 = swift_unknownObjectWeakLoadStrong();
    if (!v100) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = (void *)v100;
    unint64_t v193 = &type metadata for AudioAccessoryFeatures;
    unint64_t v194 = sub_1000AE4C4();
    char v102 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v192);
    if (v102)
    {
      uint64_t v103 = swift_unknownObjectWeakLoadStrong();
      if (v103)
      {
        uint64_t v104 = (void *)v103;
        type metadata accessor for AADeviceRecord();
        v105.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v104 aaDeviceRecordsUpdatedWithRecords:v105.super.isa];
LABEL_134:

        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    goto LABEL_135;
  }
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord))
  {
    swift_beginAccess();
    unint64_t v151 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v151) {

    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (!result) {
    return result;
  }
  swift_beginAccess();
  uint64_t v152 = swift_unknownObjectWeakLoadStrong();
  if (v152)
  {
    uint64_t v101 = (void *)v152;
    uint64_t v153 = swift_unknownObjectWeakLoadStrong();
    if (v153)
    {
      uint64_t v154 = (void *)v153;
      type metadata accessor for HMDeviceCloudRecord();
      v105.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v154 hmDeviceCloudRecordsUpdatedWithRecords:v105.super.isa];
      goto LABEL_134;
    }
LABEL_135:
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100144778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v188 = (uint64_t)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v182 = (char *)&v173 - v7;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v177 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v176 = (void (**)(char *, uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v175 = (const char *)*(v176 - 1);
  __chkstk_darwin(v176);
  unint64_t v178 = (long long *)((char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  *(void *)&long long v173 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  long long v174 = (char *)&v173 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for URL();
  uint64_t v185 = *(const char **)(v181 - 8);
  __chkstk_darwin(v181);
  v180 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v14 - 8);
  uint64_t v184 = (uint64_t)&v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DeviceRecord();
  unint64_t v187 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v183 = *(const char **)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v20 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v179 = (void (**)(uint64_t, uint64_t))((char *)&v173 - v22);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v173 - v24;
  uint64_t v186 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v27 = Array.description.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_1000AA5E0();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v30)
  {
    uint64_t v31 = v30;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v33 = (void *)Strong;
      uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v34)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v35 = v31[2];
        if (v35)
        {
          uint64_t v188 = (uint64_t)v34;
          uint64_t v36 = (uint64_t)v31
              + ((*((unsigned __int8 *)v183 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v183 + 80));
          uint64_t v37 = *((void *)v183 + 9);
          unint64_t v187 = (unint64_t)v31;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v36, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v38 = &v25[*(int *)(v189 + 24)];
            if (*(void *)v38 == 0xD000000000000011 && *((void *)v38 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v36 += v37;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)v188;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v34 magicPairingRecordsUpdatedWithRecords:v55.super.isa];
LABEL_28:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  id v39 = (char *)sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_10019091C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v39)
  {
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    uint64_t v42 = v189;
    if (v41)
    {
      uint64_t v43 = (void *)v41;
      uint64_t v44 = (char *)swift_unknownObjectWeakLoadStrong();

      if (v44)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v45 = *((void *)v40 + 2);
        if (v45)
        {
          uint64_t v182 = v44;
          uint64_t v46 = (uint64_t)&v40[(*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)];
          uint64_t v188 = *(void *)(v187 + 72);
          long long v174 = v40;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v46, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            id v47 = objc_allocWithZone((Class)BTCloudDevice);
            swift_bridgeObjectRetain();
            NSString v48 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v49 = [v47 initWithBluetoothAddress:v48];

            NSString v50 = String._bridgeToObjectiveC()();
            [v49 setNickname:v50];

            NSString v51 = String._bridgeToObjectiveC()();
            [v49 setModelNumber:v51];

            NSString v52 = String._bridgeToObjectiveC()();
            [v49 setManufacturer:v52];

            NSString v53 = String._bridgeToObjectiveC()();
            [v49 setProductID:v53];

            NSString v54 = String._bridgeToObjectiveC()();
            [v49 setVendorID:v54];

            sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v46 += v188;
            --v45;
          }
          while (v45);
          uint64_t v40 = v174;
          swift_bridgeObjectRelease();
          uint64_t v42 = v189;
          uint64_t v44 = v182;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v44 devicesUpdatedWithRecords:isa];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v182 = (char *)*((void *)v40 + 2);
    if (v182)
    {
      unint64_t v67 = v187;
      uint64_t v188 = (uint64_t)&v40[(*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80)];
      long long v174 = v40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v68 = 0;
      uint64_t v176 = (void (**)(char *, uint64_t, uint64_t))(v185 + 16);
      uint64_t v69 = *(void *)(v67 + 72);
      uint64_t v175 = v185 + 8;
      unint64_t v178 = (long long *)(v183 + 56);
      uint64_t v177 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
      uint64_t v185 = "Invalid AAProxCardsRecord - %@";
      unint64_t v187 = 0x80000001001F75A0;
      long long v173 = xmmword_1001D2D40;
      uint64_t v70 = v184;
      uint64_t v71 = (uint64_t)v182;
      while (1)
      {
        uint64_t v72 = (void *)(v188 + v69 * v68 + *(int *)(v16 + 24));
        if ((*v72 != 0xD000000000000011 || v72[1] != v187)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v73 = swift_unknownObjectWeakLoadStrong();
          if (v73)
          {
            uint64_t v74 = (void *)v73;
            sub_1000C2280();

            if ([self isFirstUnlocked])
            {
              sub_10015F0D4();
              if (qword_100261890 != -1) {
                swift_once();
              }
              uint64_t v75 = v181;
              uint64_t v76 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB90);
              uint64_t v77 = (uint64_t)v180;
              (*v176)(v180, v76, v75);
              uint64_t v78 = sub_10015DA98(v77, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v175)(v77, v75);
              uint64_t v42 = v189;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              uint64_t v78 = _swiftEmptyArrayStorage;
              os_log(_:dso:log:_:_:)();
            }
            swift_release();
            uint64_t v79 = v78[2];
            if (v79)
            {
              uint64_t v80 = v183;
              uint64_t v81 = (uint64_t)v78
                  + ((*((unsigned __int8 *)v183 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v183 + 80));
              swift_bridgeObjectRetain();
              uint64_t v82 = *((void *)v80 + 9);
              while (1)
              {
                sub_1001AEF94(v81, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                uint64_t v83 = &v20[*(int *)(v42 + 24)];
                BOOL v84 = *(void *)v83 == *v72 && *((void *)v83 + 1) == v72[1];
                if (v84 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                  break;
                }
                sub_1001AEFFC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
                v81 += v82;
                if (!--v79)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_65;
                }
              }
              swift_bridgeObjectRelease();
              uint64_t v70 = v184;
              sub_1001AF05C((uint64_t)v20, v184, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))v178)(v70, 0, 1, v42);
            }
            else
            {
LABEL_65:
              uint64_t v70 = v184;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v178)(v184, 1, 1, v42);
            }
            swift_bridgeObjectRelease();
            int v85 = (*v177)(v70, 1, v42);
            uint64_t v71 = (uint64_t)v182;
            if (v85 != 1)
            {
              int v86 = v179;
              sub_1001AF05C(v70, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v87 = swift_unknownObjectWeakLoadStrong();
              if (v87)
              {
                uint64_t v88 = (void *)v87;
                uint64_t v89 = (void *)swift_unknownObjectWeakLoadStrong();

                if (v89)
                {
                  sub_1000AA024(&qword_100263AE0);
                  uint64_t v90 = swift_allocObject();
                  *(_OWORD *)(v90 + 16) = v173;
                  *(void *)(v90 + 32) = sub_1000CE96C();
                  uint64_t v190 = v90;
                  specialized Array._endMutation()();
                  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                  Class v91 = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v89 magicPairingRecordsUpdatedWithRecords:v91];
                  swift_unknownObjectRelease();

                  uint64_t v70 = v184;
                }
              }
              sub_1001AEFFC((uint64_t)v86, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              uint64_t v71 = (uint64_t)v182;
              goto LABEL_44;
            }
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v178)(v70, 1, 1, v42);
          }
          sub_1000AA894(v70, &qword_1002623D0);
        }
LABEL_44:
        if (++v68 == v71) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  id v57 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v57)
  {
    uint64_t v58 = v57;
    swift_beginAccess();
    uint64_t v59 = swift_unknownObjectWeakLoadStrong();
    if (v59)
    {
      uint64_t v60 = (void *)v59;
      uint64_t v61 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v61)
      {
        unint64_t v195 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v62 = v58[2];
        if (v62)
        {
          uint64_t v63 = (uint64_t)v58
              + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
          uint64_t v64 = *(void *)(v173 + 72);
          swift_bridgeObjectRetain();
          uint64_t v65 = (uint64_t)v174;
          do
          {
            sub_1001AEF94(v63, v65, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v65, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v195 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v63 += v64;
            --v62;
          }
          while (v62);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v55.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v61 deviceSupportInformationRecordsUpdatedWithRecords:v55.super.isa];
        goto LABEL_28;
      }
    }
    return swift_bridgeObjectRelease();
  }
  Class v92 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_100190978, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v92)
  {
    uint64_t v93 = v175;
    if (v92[2])
    {
      uint64_t v94 = v177;
      sub_1001AEF94((uint64_t)v92 + ((*((unsigned __int8 *)v175 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v175 + 80)), (uint64_t)v177, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      uint64_t v95 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v93 + 7);
      Class v96 = v94;
      uint64_t v97 = 0;
    }
    else
    {
      uint64_t v95 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void, void)))*((void *)v175 + 7);
      uint64_t v94 = v177;
      Class v96 = v177;
      uint64_t v97 = 1;
    }
    uint64_t v98 = v176;
    v95(v96, v97, 1, (void (**)(void, void, void))v176);
    uint64_t v99 = v188;
    swift_bridgeObjectRelease();
    if ((*((unsigned int (**)(void, uint64_t, void))v93 + 6))(v94, 1, v98) == 1)
    {
      sub_1000AA894((uint64_t)v94, (uint64_t *)&unk_100263BA0);
      goto LABEL_81;
    }
    sub_1001AF05C((uint64_t)v94, (uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    swift_beginAccess();
    uint64_t v106 = swift_unknownObjectWeakLoadStrong();
    if (!v106
      || (uint64_t v107 = (void *)v106,
          uint64_t v108 = (void (**)(char *, uint64_t, uint64_t))swift_unknownObjectWeakLoadStrong(),
          v107,
          !v108))
    {
LABEL_141:
      swift_beginAccess();
      uint64_t v156 = swift_unknownObjectWeakLoadStrong();
      if (!v156) {
        return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      uint64_t v157 = (void *)v156;
      id v158 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v158) {
        return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      unint64_t v159 = (unint64_t)sub_100101DD0();
      unint64_t v160 = v159;
      unint64_t v191 = (unint64_t)_swiftEmptyArrayStorage;
      if (v159 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v161 = result;
        if (result)
        {
LABEL_145:
          uint64_t v189 = (uint64_t)v158;
          if (v161 >= 1)
          {
            for (uint64_t i = 0; i != v161; ++i)
            {
              if ((v160 & 0xC000000000000001) != 0) {
                id v163 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v163 = *(id *)(v160 + 8 * i + 32);
              }
              id v164 = v163;
              id v165 = [v163 bluetoothAddress];
              static String._unconditionallyBridgeFromObjectiveC(_:)();

              id v166 = objc_allocWithZone((Class)BTCloudDevice);
              NSString v167 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v168 = [v166 initWithBluetoothAddress:v167];

              id v169 = [v164 name];
              [v168 setNickname:v169];

              id v170 = [v164 productID];
              [v168 setProductID:v170];

              id v171 = [v164 vendorID];
              [v168 setVendorID:v171];

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            swift_bridgeObjectRelease();
            id v158 = (void *)v189;
            goto LABEL_156;
          }
LABEL_159:
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v161 = *(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v161) {
          goto LABEL_145;
        }
      }
      swift_bridgeObjectRelease();
LABEL_156:
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_100263B50);
      Class v172 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v158 devicesUpdatedWithRecords:v172];
      swift_unknownObjectRelease();

      return sub_1001AEFFC((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    }
    uint64_t v109 = (const char *)sub_100101DD0();
    swift_beginAccess();
    uint64_t v110 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    unint64_t v191 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v109 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v111 = result;
      if (result) {
        goto LABEL_90;
      }
    }
    else
    {
      uint64_t v111 = *(void *)(((unint64_t)v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v111)
      {
LABEL_90:
        uint64_t v176 = v108;
        if (v111 < 1)
        {
          __break(1u);
          goto LABEL_159;
        }
        unint64_t v187 = (unint64_t)v109 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v112 = 0;
        uint64_t v183 = v185 + 16;
        uint64_t v179 = (void (**)(uint64_t, uint64_t))(v185 + 8);
        uint64_t v184 = v111;
        uint64_t v185 = v109;
        do
        {
          if (v187) {
            uint64_t v113 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v113 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))*(id *)&v109[8 * v112 + 32];
          }
          id v114 = v113;
          uint64_t v115 = swift_unknownObjectWeakLoadStrong();
          if (v115)
          {
            uint64_t v116 = (void *)v115;
            sub_1000C2280();
            uint64_t v117 = self;
            if ([v117 isFirstUnlocked])
            {
              uint64_t v118 = v114;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v119 = v181;
              uint64_t v120 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB68);
              uint64_t v121 = (uint64_t)v180;
              (*(void (**)(char *, uint64_t, uint64_t))v183)(v180, v120, v119);
              uint64_t v122 = sub_10015DA98(v121, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v179)(v121, v119);
              uint64_t v123 = v122[2];
              uint64_t v124 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v125 = (uint64_t)*(v124 - 1);
              uint64_t v126 = v125;
              if (v123)
              {
                uint64_t v127 = (uint64_t)v182;
                sub_1001AEF94((uint64_t)v122+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80)), (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v126 + 56))(v127, 0, 1, v124);
              }
              else
              {
                uint64_t v127 = (uint64_t)v182;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v125 + 56))(v182, 1, 1, v124);
              }
              swift_release();
              uint64_t v128 = v127;
              swift_bridgeObjectRelease();
              uint64_t v99 = v188;
              id v114 = v118;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v124 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v128 = (uint64_t)v182;
              (*((void (**)(char *, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))*(v124 - 1)
               + 7))(v182, 1, 1, v124);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v129 = (uint64_t)*(v124 - 1);
            uint64_t v130 = *(uint64_t (**)(uint64_t, uint64_t, void))(v129 + 48);
            int v131 = v130(v128, 1, v124);
            uint64_t v189 = v129;
            if (v131 == 1)
            {
              sub_1000AA894(v128, &qword_1002623C0);
              Class v132 = 0;
            }
            else
            {
              uint64_t v133 = Data.subdata(in:)();
              uint64_t v177 = v124;
              uint64_t v134 = v116;
              Class v135 = v130;
              uint64_t v136 = v117;
              uint64_t v137 = v99;
              uint64_t v138 = v114;
              unint64_t v140 = v139;
              sub_1001AEFFC(v128, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v132 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v141 = v140;
              id v114 = v138;
              uint64_t v99 = v137;
              uint64_t v117 = v136;
              uint64_t v130 = v135;
              uint64_t v116 = v134;
              uint64_t v124 = v177;
              sub_1000AA8F0(v133, v141);
            }
            [v114 setMasterKey:v132];

            sub_1000C2280();
            if ([v117 isFirstUnlocked])
            {
              uint64_t v177 = v114;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v142 = v181;
              uint64_t v143 = sub_1000AA0CC(v181, (uint64_t)qword_10026AB68);
              uint64_t v144 = (uint64_t)v180;
              (*(void (**)(char *, uint64_t, uint64_t))v183)(v180, v143, v142);
              uint64_t v145 = sub_10015DA98(v144, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*v179)(v144, v142);
              if (v145[2])
              {
                uint64_t v99 = v188;
                uint64_t v146 = v189;
                sub_1001AEF94((uint64_t)v145+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80)), v188, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v146 + 56))(v99, 0, 1, v124);
              }
              else
              {
                uint64_t v99 = v188;
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v189 + 56))(v188, 1, 1, v124);
              }
              swift_release();
              swift_bridgeObjectRelease();
              id v114 = v177;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (**)(uint64_t, uint64_t, uint64_t)))(v189 + 56))(v99, 1, 1, v124);
              swift_release();
            }
            if (v130(v99, 1, v124) == 1)
            {
              sub_1000AA894(v99, &qword_1002623C0);
              Class v147 = 0;
            }
            else
            {
              uint64_t v148 = Data.subdata(in:)();
              unint64_t v150 = v149;
              sub_1001AEFFC(v99, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v147 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v148, v150);
            }
            uint64_t v111 = v184;
            uint64_t v109 = v185;
            [v114 setMasterHint:v147];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v191 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v112;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v111 != v112);
        swift_bridgeObjectRelease();
        uint64_t v108 = v176;
        goto LABEL_140;
      }
    }
    swift_bridgeObjectRelease();
LABEL_140:
    swift_bridgeObjectRelease();
    swift_unknownObjectWeakDestroy();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    Class v155 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v108 magicPairingRecordsUpdatedWithRecords:v155];

    swift_unknownObjectRelease();
    goto LABEL_141;
  }
LABEL_81:
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
  {
    swift_beginAccess();
    uint64_t v100 = swift_unknownObjectWeakLoadStrong();
    if (!v100) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v101 = (void *)v100;
    unint64_t v193 = &type metadata for AudioAccessoryFeatures;
    unint64_t v194 = sub_1000AE4C4();
    char v102 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v192);
    if (v102)
    {
      uint64_t v103 = swift_unknownObjectWeakLoadStrong();
      if (v103)
      {
        uint64_t v104 = (void *)v103;
        type metadata accessor for AADeviceRecord();
        v105.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v104 aaDeviceRecordsUpdatedWithRecords:v105.super.isa];
LABEL_134:

        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    goto LABEL_135;
  }
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
  {
    swift_beginAccess();
    unint64_t v151 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v151) {

    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = (uint64_t)sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (!result) {
    return result;
  }
  swift_beginAccess();
  uint64_t v152 = swift_unknownObjectWeakLoadStrong();
  if (v152)
  {
    uint64_t v101 = (void *)v152;
    uint64_t v153 = swift_unknownObjectWeakLoadStrong();
    if (v153)
    {
      uint64_t v154 = (void *)v153;
      type metadata accessor for HMDeviceCloudRecord();
      v105.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v154 hmDeviceCloudRecordsUpdatedWithRecords:v105.super.isa];
      goto LABEL_134;
    }
LABEL_135:
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10014695C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
  type metadata accessor for LegacyAccountMagicKeysRecord();
  swift_bridgeObjectRetain();
  uint64_t v7 = Array.description.getter();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_1000AA5E0();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_1001908A4(0, v10, 0);
  uint64_t v11 = v23;
  if (v10)
  {
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_10019091C(0, v10, 0);
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_1001908E0(0, v10, 0);
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_100190978(0, v10, 0);
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_release();
    uint64_t v23 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    return swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return swift_release();
  }
  uint64_t v13 = (void *)Strong;
  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v14) {
    return swift_release();
  }
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v15 = v11[2];
  if (v15)
  {
    v21[0] = v14;
    v21[1] = v11;
    uint64_t v16 = (uint64_t)v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v17 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v16, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      uint64_t v18 = &v5[*(int *)(v2 + 24)];
      if (*(void *)v18 == 0xD000000000000011 && *((void *)v18 + 1) == 0x80000001001F75A0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        sub_1001AEFFC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      }
      else
      {
        sub_1000CE96C();
        sub_1001AEFFC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_release();
    uint64_t v14 = (void *)v21[0];
  }
  swift_release();
  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 magicPairingRecordsUpdatedWithRecords:isa];

  return swift_unknownObjectRelease();
}

uint64_t sub_100146DBC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  long long v173 = (uint64_t *)((char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  Class v172 = (void (**)(uint64_t, uint64_t, uint64_t, int *))((char *)&v165 - v7);
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  id v170 = (void (**)(char *, uint64_t, uint64_t))((char *)&v165 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v169 = (void (**)(uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v168 = (uint64_t)*(v169 - 1);
  __chkstk_darwin(v169);
  id v171 = (uint64_t (**)(uint64_t, uint64_t, int *))((char *)&v165 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v166 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v167 = (char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v178 = (int *)type metadata accessor for DeviceRecord();
  unint64_t v182 = *((void *)v178 - 1);
  __chkstk_darwin(v178);
  uint64_t v14 = (char *)&v165 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for URL();
  v180 = *(const char **)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v175 = (char *)&v165 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v16 - 8);
  unint64_t v179 = (unint64_t)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = (int *)type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v177 = (const char *)*((void *)v183 - 1);
  __chkstk_darwin(v183);
  uint64_t v19 = (char *)&v165 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  long long v174 = (uint64_t *)((char *)&v165 - v21);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v165 - v23;
  uint64_t v181 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  unint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  type metadata accessor for HMDeviceCloudRecord();
  swift_bridgeObjectRetain();
  uint64_t v26 = Array.description.getter();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000AA5E0();
  *(void *)(v25 + 32) = v26;
  *(void *)(v25 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v29)
  {
    uint64_t v30 = v29;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v32 = (void *)Strong;
      uint64_t v33 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v33)
      {
        unint64_t v187 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v34 = *(void *)(v30 + 16);
        if (v34)
        {
          unint64_t v182 = (unint64_t)v33;
          uint64_t v35 = v30 + ((*((unsigned __int8 *)v177 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v177 + 80));
          uint64_t v36 = *((void *)v177 + 9);
          uint64_t v181 = v30;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v35, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v37 = &v24[v183[6]];
            if (*(void *)v37 == 0xD000000000000011 && *((void *)v37 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v35 += v36;
            --v34;
          }
          while (v34);
          swift_bridgeObjectRelease();
          uint64_t v33 = (void *)v182;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v48.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v33 magicPairingRecordsUpdatedWithRecords:v48.super.isa];
LABEL_28:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v39)
  {
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    uint64_t v42 = v183;
    if (v41)
    {
      uint64_t v43 = (void *)v41;
      uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v44)
      {
        unint64_t v187 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v45 = *(void *)(v40 + 16);
        if (v45)
        {
          uint64_t v46 = v40 + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
          uint64_t v47 = *(void *)(v182 + 72);
          uint64_t v168 = v40;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v46, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v46 += v47;
            --v45;
          }
          while (v45);
          uint64_t v40 = v168;
          swift_bridgeObjectRelease();
          uint64_t v42 = v183;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v44 devicesUpdatedWithRecords:isa];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v59 = *(void *)(v40 + 16);
    if (!v59) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v60 = v182;
    uint64_t v61 = v40 + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
    uint64_t v168 = v40;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v62 = 0;
    id v170 = (void (**)(char *, uint64_t, uint64_t))(v180 + 16);
    uint64_t v63 = *(void *)(v60 + 72);
    id v169 = (void (**)(uint64_t, uint64_t))(v180 + 8);
    Class v172 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v177 + 56);
    id v171 = (uint64_t (**)(uint64_t, uint64_t, int *))(v177 + 48);
    v180 = "Invalid AAProxCardsRecord - %@";
    unint64_t v182 = 0x80000001001F75A0;
    long long v167 = xmmword_1001D2D40;
    uint64_t v64 = v178;
    long long v173 = (void *)v61;
    while (1)
    {
      uint64_t v66 = (void *)(v61 + v63 * v62 + v64[6]);
      if (*v66 == 0xD000000000000011 && v66[1] == v182 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_44;
      }
      uint64_t v67 = swift_unknownObjectWeakLoadStrong();
      if (v67)
      {
        uint64_t v68 = (void *)v67;
        sub_1000C2280();

        if ([self isFirstUnlocked])
        {
          sub_10015F0D4();
          if (qword_100261890 != -1) {
            swift_once();
          }
          uint64_t v69 = v176;
          uint64_t v70 = sub_1000AA0CC(v176, (uint64_t)qword_10026AB90);
          uint64_t v71 = (uint64_t)v175;
          (*v170)(v175, v70, v69);
          uint64_t v72 = sub_10015DA98(v71, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
          swift_release();
          (*v169)(v71, v69);
          uint64_t v42 = v183;
        }
        else
        {
          static os_log_type_t.error.getter();
          if (qword_100261948 != -1) {
            swift_once();
          }
          uint64_t v72 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
        }
        swift_release();
        uint64_t v73 = v72[2];
        if (v73)
        {
          uint64_t v74 = v177;
          uint64_t v75 = (uint64_t)v72
              + ((*((unsigned __int8 *)v177 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v177 + 80));
          swift_bridgeObjectRetain();
          uint64_t v76 = *((void *)v74 + 9);
          while (1)
          {
            sub_1001AEF94(v75, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v77 = &v19[v42[6]];
            BOOL v78 = *(void *)v77 == *v66 && *((void *)v77 + 1) == v66[1];
            if (v78 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
              break;
            }
            sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            v75 += v76;
            if (!--v73)
            {
              swift_bridgeObjectRelease();
              goto LABEL_65;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v65 = v179;
          sub_1001AF05C((uint64_t)v19, v179, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          (*v172)(v65, 0, 1, v42);
        }
        else
        {
LABEL_65:
          uint64_t v65 = v179;
          (*v172)(v179, 1, 1, v42);
        }
        swift_bridgeObjectRelease();
        int v79 = (*v171)(v65, 1, v42);
        uint64_t v64 = v178;
        if (v79 != 1)
        {
          uint64_t v80 = (uint64_t)v174;
          sub_1001AF05C(v65, (uint64_t)v174, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          uint64_t v81 = swift_unknownObjectWeakLoadStrong();
          if (v81)
          {
            uint64_t v82 = (void *)v81;
            uint64_t v83 = (void *)swift_unknownObjectWeakLoadStrong();

            if (v83)
            {
              sub_1000AA024(&qword_100263AE0);
              uint64_t v84 = swift_allocObject();
              *(_OWORD *)(v84 + 16) = v167;
              *(void *)(v84 + 32) = sub_1000CE96C();
              uint64_t v184 = v84;
              specialized Array._endMutation()();
              sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
              Class v85 = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v83 magicPairingRecordsUpdatedWithRecords:v85];
              swift_unknownObjectRelease();

              uint64_t v64 = v178;
            }
          }
          sub_1001AEFFC(v80, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v65 = v179;
        (*v172)(v179, 1, 1, v42);
      }
      sub_1000AA894(v65, &qword_1002623D0);
LABEL_43:
      uint64_t v61 = (uint64_t)v173;
LABEL_44:
      if (++v62 == v59) {
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  uint64_t v49 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v49)
  {
    uint64_t v50 = v49;
    swift_beginAccess();
    uint64_t v51 = swift_unknownObjectWeakLoadStrong();
    if (v51)
    {
      NSString v52 = (void *)v51;
      NSString v53 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v53)
      {
        unint64_t v187 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v54 = *(void *)(v50 + 16);
        if (v54)
        {
          uint64_t v55 = v50 + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80));
          uint64_t v56 = *(void *)(v166 + 72);
          swift_bridgeObjectRetain();
          uint64_t v57 = v167;
          do
          {
            sub_1001AEF94(v55, v57, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v57, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v187 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v55 += v56;
            --v54;
          }
          while (v54);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v48.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v53 deviceSupportInformationRecordsUpdatedWithRecords:v48.super.isa];
        goto LABEL_28;
      }
    }
    return swift_bridgeObjectRelease();
  }
  int v86 = sub_10013E0B8(a1);
  if (v86)
  {
    uint64_t v87 = v168;
    if (v86[2])
    {
      uint64_t v88 = v170;
      sub_1001AEF94((uint64_t)v86 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80)), (uint64_t)v170, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      uint64_t v89 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v87 + 56);
      uint64_t v90 = v88;
      uint64_t v91 = 0;
    }
    else
    {
      uint64_t v89 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v168 + 56);
      uint64_t v88 = v170;
      uint64_t v90 = v170;
      uint64_t v91 = 1;
    }
    Class v92 = v169;
    v89(v90, v91, 1, v169);
    uint64_t v93 = v173;
    swift_bridgeObjectRelease();
    uint64_t v94 = *(unsigned int (**)(void, uint64_t, void (**)(void, void)))(v87 + 48);
    unint64_t v25 = v87 + 48;
    if (v94(v88, 1, v92) != 1)
    {
      sub_1001AF05C((uint64_t)v88, (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      swift_beginAccess();
      uint64_t v101 = swift_unknownObjectWeakLoadStrong();
      if (!v101 || (char v102 = (void *)v101, v95 = (void *)swift_unknownObjectWeakLoadStrong(), v102, !v95))
      {
LABEL_149:
        swift_beginAccess();
        uint64_t v148 = swift_unknownObjectWeakLoadStrong();
        if (!v148) {
          return sub_1001AEFFC((uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        }
        unint64_t v149 = (void *)v148;
        unint64_t v150 = (int *)swift_unknownObjectWeakLoadStrong();

        if (!v150) {
          return sub_1001AEFFC((uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        }
        unint64_t v151 = (unint64_t)sub_100101DD0();
        unint64_t v152 = v151;
        unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
        if (v151 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v153 = result;
          if (result)
          {
LABEL_153:
            uint64_t v183 = v150;
            if (v153 >= 1)
            {
              for (uint64_t i = 0; i != v153; ++i)
              {
                if ((v152 & 0xC000000000000001) != 0) {
                  id v155 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v155 = *(id *)(v152 + 8 * i + 32);
                }
                uint64_t v156 = v155;
                id v157 = [v155 bluetoothAddress];
                static String._unconditionallyBridgeFromObjectiveC(_:)();

                id v158 = objc_allocWithZone((Class)BTCloudDevice);
                NSString v159 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v160 = [v158 initWithBluetoothAddress:v159];

                id v161 = [v156 name];
                [v160 setNickname:v161];

                id v162 = [v156 productID];
                [v160 setProductID:v162];

                id v163 = [v156 vendorID];
                [v160 setVendorID:v163];

                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              swift_bridgeObjectRelease();
              unint64_t v150 = v183;
              goto LABEL_164;
            }
LABEL_167:
            __break(1u);
            return result;
          }
        }
        else
        {
          uint64_t v153 = *(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t result = swift_bridgeObjectRetain();
          if (v153) {
            goto LABEL_153;
          }
        }
        swift_bridgeObjectRelease();
LABEL_164:
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        Class v164 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v150 devicesUpdatedWithRecords:v164];
        swift_unknownObjectRelease();

        return sub_1001AEFFC((uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      unint64_t v25 = (unint64_t)sub_100101DD0();
      swift_beginAccess();
      uint64_t v103 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
      if (!(v25 >> 62))
      {
        uint64_t v104 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (!v104)
        {
LABEL_147:
          swift_bridgeObjectRelease();
LABEL_148:
          swift_bridgeObjectRelease();
          swift_unknownObjectWeakDestroy();
          sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
          Class v147 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v95 magicPairingRecordsUpdatedWithRecords:v147];

          swift_unknownObjectRelease();
          goto LABEL_149;
        }
LABEL_97:
        id v170 = (void (**)(char *, uint64_t, uint64_t))v95;
        if (v104 < 1)
        {
          __break(1u);
          goto LABEL_167;
        }
        unint64_t v182 = v25 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v105 = 0;
        unint64_t v178 = (int *)(v180 + 16);
        uint64_t v177 = v180 + 8;
        unint64_t v179 = v25;
        v180 = (const char *)v104;
        do
        {
          if (v182) {
            uint64_t v106 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v106 = (int *)*(id *)(v25 + 8 * v105 + 32);
          }
          uint64_t v107 = v106;
          uint64_t v108 = swift_unknownObjectWeakLoadStrong();
          if (v108)
          {
            uint64_t v109 = (void *)v108;
            sub_1000C2280();
            uint64_t v110 = self;
            unsigned int v111 = [v110 isFirstUnlocked];
            uint64_t v183 = v107;
            if (v111)
            {
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v112 = v176;
              uint64_t v113 = sub_1000AA0CC(v176, (uint64_t)qword_10026AB68);
              uint64_t v114 = (uint64_t)v175;
              (*(void (**)(char *, uint64_t, uint64_t))v178)(v175, v113, v112);
              uint64_t v115 = sub_10015DA98(v114, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v177)(v114, v112);
              uint64_t v116 = v115[2];
              uint64_t v117 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v118 = *(void *)(v117 - 8);
              uint64_t v119 = v118;
              if (v116)
              {
                uint64_t v120 = v172;
                sub_1001AEF94((uint64_t)v115+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)), (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void, void, uint64_t, uint64_t))(v119 + 56))(v120, 0, 1, v117);
              }
              else
              {
                uint64_t v120 = v172;
                (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v118 + 56))(v172, 1, 1, v117);
              }
              swift_release();
              uint64_t v121 = v120;
              swift_bridgeObjectRelease();
              uint64_t v93 = v173;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v117 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v121 = v172;
              (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v172, 1, 1, v117);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v122 = *(void *)(v117 - 8);
            uint64_t v123 = *(uint64_t **)(v122 + 48);
            if (((unsigned int (*)(void (**)(uint64_t, uint64_t, uint64_t, int *), uint64_t, uint64_t))v123)(v121, 1, v117) == 1)
            {
              sub_1000AA894((uint64_t)v121, &qword_1002623C0);
              Class v124 = 0;
            }
            else
            {
              uint64_t v125 = Data.subdata(in:)();
              long long v174 = (uint64_t *)v117;
              uint64_t v126 = v110;
              uint64_t v127 = v93;
              uint64_t v128 = v123;
              unint64_t v130 = v129;
              sub_1001AEFFC((uint64_t)v121, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v124 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v131 = v130;
              uint64_t v123 = v128;
              uint64_t v93 = v127;
              uint64_t v110 = v126;
              uint64_t v117 = (uint64_t)v174;
              sub_1000AA8F0(v125, v131);
            }
            [v183 setMasterKey:v124];

            sub_1000C2280();
            if ([v110 isFirstUnlocked])
            {
              long long v174 = v123;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v132 = v176;
              uint64_t v133 = sub_1000AA0CC(v176, (uint64_t)qword_10026AB68);
              uint64_t v134 = (uint64_t)v175;
              (*(void (**)(char *, uint64_t, uint64_t))v178)(v175, v133, v132);
              Class v135 = sub_10015DA98(v134, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v177)(v134, v132);
              uint64_t v93 = v173;
              if (v135[2])
              {
                sub_1001AEF94((uint64_t)v135+ ((*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80)), (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v93, 0, 1, v117);
              }
              else
              {
                (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v173, 1, 1, v117);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v123 = v174;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v93, 1, 1, v117);
              swift_release();
            }
            unsigned int v136 = ((uint64_t (*)(void *, uint64_t, uint64_t))v123)(v93, 1, v117);
            uint64_t v104 = (uint64_t)v180;
            if (v136 == 1)
            {
              sub_1000AA894((uint64_t)v93, &qword_1002623C0);
              Class v137 = 0;
            }
            else
            {
              uint64_t v138 = Data.subdata(in:)();
              unint64_t v140 = v139;
              sub_1001AEFFC((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v137 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v138, v140);
            }
            unint64_t v25 = v179;
            [v183 setMasterHint:v137];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v105;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v104 != v105);
        swift_bridgeObjectRelease();
        uint64_t v95 = v170;
        goto LABEL_148;
      }
LABEL_146:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v104 = result;
      if (!result) {
        goto LABEL_147;
      }
      goto LABEL_97;
    }
    sub_1000AA894((uint64_t)v88, (uint64_t *)&unk_100263BA0);
  }
  uint64_t v93 = _swiftEmptyArrayStorage;
  v186[0] = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_85;
    }
LABEL_137:
    swift_beginAccess();
    uint64_t v142 = swift_unknownObjectWeakLoadStrong();
    if (v142)
    {
      uint64_t v143 = (void *)v142;
      v186[3] = &type metadata for AudioAccessoryFeatures;
      v186[4] = sub_1000AE4C4();
      char v144 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v186);
      if (v144)
      {
        uint64_t v145 = swift_unknownObjectWeakLoadStrong();
        if (v145)
        {
          uint64_t v146 = (void *)v145;
          type metadata accessor for AADeviceRecord();
          v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v146 aaDeviceRecordsUpdatedWithRecords:v100.super.isa];

          swift_release();
          goto LABEL_141;
        }
      }
    }
    return swift_release();
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  specialized ContiguousArray.reserveCapacity(_:)();
  swift_bridgeObjectRetain();
  uint64_t v141 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v141) {
    goto LABEL_137;
  }
LABEL_85:
  uint64_t v95 = (void *)(a1 & 0xC000000000000001);
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_87;
    }
    __break(1u);
    goto LABEL_146;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_unknownObjectRelease();
LABEL_87:
  swift_release();
  v186[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v95)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t result = (uint64_t)sub_10013DAB4(a1);
  if (result)
  {
    swift_beginAccess();
    uint64_t v96 = swift_unknownObjectWeakLoadStrong();
    if (!v96) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v97 = (void *)v96;
    uint64_t v98 = swift_unknownObjectWeakLoadStrong();
    if (!v98)
    {

      return swift_bridgeObjectRelease();
    }
    uint64_t v99 = (void *)v98;
    v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v99 hmDeviceCloudRecordsUpdatedWithRecords:v100.super.isa];

    swift_bridgeObjectRelease();
LABEL_141:

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100148D7C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  Class v172 = (uint64_t *)((char *)&v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v171 = (void (**)(uint64_t, uint64_t, uint64_t, int *))((char *)&v163 - v7);
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v168 = (void (**)(char *, uint64_t, uint64_t))((char *)&v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v167 = (void (**)(uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v166 = (uint64_t)*(v167 - 1);
  __chkstk_darwin(v167);
  id v169 = (uint64_t (**)(uint64_t, uint64_t, int *))((char *)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v164 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v165 = (char *)&v163 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = (int *)type metadata accessor for DeviceRecord();
  unint64_t v180 = *((void *)v177 - 1);
  __chkstk_darwin(v177);
  uint64_t v14 = (char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for URL();
  unint64_t v179 = *(const char **)(v175 - 8);
  __chkstk_darwin(v175);
  long long v174 = (char *)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v16 - 8);
  unint64_t v178 = (unint64_t)&v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = (int *)type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v176 = (const char *)*((void *)v181 - 1);
  __chkstk_darwin(v181);
  uint64_t v19 = (char *)&v163 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  long long v173 = (uint64_t *)((char *)&v163 - v21);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v163 - v23;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AAProxCardsRecord();
  swift_bridgeObjectRetain();
  uint64_t v26 = Array.description.getter();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000AA5E0();
  *(void *)(v25 + 32) = v26;
  *(void *)(v25 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v29)
  {
    uint64_t v30 = v29;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v32 = (void *)Strong;
      uint64_t v33 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v33)
      {
        unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v34 = *(void *)(v30 + 16);
        if (v34)
        {
          unint64_t v179 = (const char *)v30;
          unint64_t v180 = (unint64_t)v33;
          uint64_t v35 = v30 + ((*((unsigned __int8 *)v176 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v176 + 80));
          uint64_t v36 = *((void *)v176 + 9);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v35, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v37 = &v24[v181[6]];
            if (*(void *)v37 == 0xD000000000000011 && *((void *)v37 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v35 += v36;
            --v34;
          }
          while (v34);
          swift_bridgeObjectRelease();
          uint64_t v33 = (void *)v180;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v33 magicPairingRecordsUpdatedWithRecords:isa];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v38 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  uint64_t v170 = a2 + 16;
  if (v38)
  {
    uint64_t v39 = v38;
    swift_beginAccess();
    uint64_t v40 = swift_unknownObjectWeakLoadStrong();
    uint64_t v41 = v181;
    if (v40)
    {
      uint64_t v42 = (void *)v40;
      uint64_t v43 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v43)
      {
        unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v44 = *(void *)(v39 + 16);
        if (v44)
        {
          uint64_t v45 = v39 + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80));
          uint64_t v46 = *(void *)(v180 + 72);
          uint64_t v166 = v39;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v45, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v45 += v46;
            --v44;
          }
          while (v44);
          uint64_t v39 = v166;
          swift_bridgeObjectRelease();
          uint64_t v41 = v181;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class v59 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v43 devicesUpdatedWithRecords:v59];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v60 = *(void *)(v39 + 16);
    if (v60)
    {
      unint64_t v61 = v180;
      uint64_t v62 = v39 + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80));
      uint64_t v166 = v39;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v63 = 0;
      uint64_t v168 = (void (**)(char *, uint64_t, uint64_t))(v179 + 16);
      uint64_t v64 = *(void *)(v61 + 72);
      long long v167 = (void (**)(uint64_t, uint64_t))(v179 + 8);
      id v171 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v176 + 56);
      id v169 = (uint64_t (**)(uint64_t, uint64_t, int *))(v176 + 48);
      unint64_t v179 = "Invalid AAProxCardsRecord - %@";
      unint64_t v180 = 0x80000001001F75A0;
      long long v165 = xmmword_1001D2D40;
      uint64_t v65 = v177;
      Class v172 = (void *)v62;
      while (1)
      {
        uint64_t v67 = (void *)(v62 + v64 * v63 + v65[6]);
        if (*v67 == 0xD000000000000011 && v67[1] == v180 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_44;
        }
        uint64_t v68 = swift_unknownObjectWeakLoadStrong();
        if (v68)
        {
          uint64_t v69 = (void *)v68;
          sub_1000C2280();

          if ([self isFirstUnlocked])
          {
            sub_10015F0D4();
            if (qword_100261890 != -1) {
              swift_once();
            }
            uint64_t v70 = v175;
            uint64_t v71 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB90);
            uint64_t v72 = (uint64_t)v174;
            (*v168)(v174, v71, v70);
            uint64_t v73 = sub_10015DA98(v72, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
            swift_release();
            (*v167)(v72, v70);
            uint64_t v41 = v181;
          }
          else
          {
            static os_log_type_t.error.getter();
            if (qword_100261948 != -1) {
              swift_once();
            }
            uint64_t v73 = _swiftEmptyArrayStorage;
            os_log(_:dso:log:_:_:)();
          }
          swift_release();
          uint64_t v74 = v73[2];
          if (v74)
          {
            uint64_t v75 = v176;
            uint64_t v76 = (uint64_t)v73
                + ((*((unsigned __int8 *)v176 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v176 + 80));
            swift_bridgeObjectRetain();
            uint64_t v77 = *((void *)v75 + 9);
            while (1)
            {
              sub_1001AEF94(v76, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              BOOL v78 = &v19[v41[6]];
              BOOL v79 = *(void *)v78 == *v67 && *((void *)v78 + 1) == v67[1];
              if (v79 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              v76 += v77;
              if (!--v74)
              {
                swift_bridgeObjectRelease();
                goto LABEL_65;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v66 = v178;
            sub_1001AF05C((uint64_t)v19, v178, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            (*v171)(v66, 0, 1, v41);
          }
          else
          {
LABEL_65:
            uint64_t v66 = v178;
            (*v171)(v178, 1, 1, v41);
          }
          swift_bridgeObjectRelease();
          int v80 = (*v169)(v66, 1, v41);
          uint64_t v65 = v177;
          if (v80 != 1)
          {
            uint64_t v81 = (uint64_t)v173;
            sub_1001AF05C(v66, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v82 = swift_unknownObjectWeakLoadStrong();
            if (v82)
            {
              uint64_t v83 = (void *)v82;
              uint64_t v84 = (void *)swift_unknownObjectWeakLoadStrong();

              if (v84)
              {
                sub_1000AA024(&qword_100263AE0);
                uint64_t v85 = swift_allocObject();
                *(_OWORD *)(v85 + 16) = v165;
                *(void *)(v85 + 32) = sub_1000CE96C();
                uint64_t v182 = v85;
                specialized Array._endMutation()();
                sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                Class v86 = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v84 magicPairingRecordsUpdatedWithRecords:v86];
                swift_unknownObjectRelease();

                uint64_t v65 = v177;
              }
            }
            sub_1001AEFFC(v81, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v66 = v178;
          (*v171)(v178, 1, 1, v41);
        }
        sub_1000AA894(v66, &qword_1002623D0);
LABEL_43:
        uint64_t v62 = (uint64_t)v172;
LABEL_44:
        if (++v63 == v60) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  unint64_t v49 = a1;
  uint64_t v50 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v50)
  {
    uint64_t v51 = v50;
    swift_beginAccess();
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (v52)
    {
      NSString v53 = (void *)v52;
      uint64_t v54 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v54)
      {
        unint64_t v185 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v55 = *(void *)(v51 + 16);
        if (v55)
        {
          uint64_t v56 = v51 + ((*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
          uint64_t v57 = *(void *)(v164 + 72);
          swift_bridgeObjectRetain();
          uint64_t v58 = v165;
          do
          {
            sub_1001AEF94(v56, v58, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v185 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v56 += v57;
            --v55;
          }
          while (v55);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        Class v93 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v54 deviceSupportInformationRecordsUpdatedWithRecords:v93];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v87 = sub_10013E0B8(a1);
  if (!v87)
  {
LABEL_82:
    uint64_t v95 = _swiftEmptyArrayStorage;
    v184[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      specialized ContiguousArray.reserveCapacity(_:)();
      swift_bridgeObjectRetain();
      uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v138) {
        goto LABEL_84;
      }
    }
    else
    {
      specialized ContiguousArray.reserveCapacity(_:)();
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_84:
        uint64_t v96 = (void *)(a1 & 0xC000000000000001);
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
          goto LABEL_86;
        }
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_86:
          swift_release();
          if (sub_10013DAB4(a1))
          {
            swift_beginAccess();
            uint64_t v97 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v97) {

            }
            return swift_bridgeObjectRelease();
          }
          v184[0] = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          if (v96)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_unknownObjectRelease();
          }
          return swift_release();
        }
        __break(1u);
        goto LABEL_143;
      }
    }
    swift_beginAccess();
    uint64_t v139 = swift_unknownObjectWeakLoadStrong();
    if (v139)
    {
      unint64_t v140 = (void *)v139;
      v184[3] = &type metadata for AudioAccessoryFeatures;
      v184[4] = sub_1000AE4C4();
      char v141 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v184);
      if (v141)
      {
        uint64_t v142 = swift_unknownObjectWeakLoadStrong();
        if (v142)
        {
          uint64_t v143 = (void *)v142;
          type metadata accessor for AADeviceRecord();
          Class v144 = Array._bridgeToObjectiveC()().super.isa;
          [v143 aaDeviceRecordsUpdatedWithRecords:v144];

          swift_release();
          return swift_unknownObjectRelease();
        }
      }
    }
    return swift_release();
  }
  uint64_t v88 = v166;
  if (v87[2])
  {
    uint64_t v89 = v168;
    sub_1001AEF94((uint64_t)v87 + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80)), (uint64_t)v168, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    uint64_t v90 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v88 + 56);
    uint64_t v91 = v89;
    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v90 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v166 + 56);
    uint64_t v89 = v168;
    uint64_t v91 = v168;
    uint64_t v92 = 1;
  }
  uint64_t v94 = v167;
  v90(v91, v92, 1, v167);
  uint64_t v95 = v172;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(void, uint64_t, void (**)(uint64_t, uint64_t)))(v88 + 48))(v89, 1, v94) == 1)
  {
    sub_1000AA894((uint64_t)v89, (uint64_t *)&unk_100263BA0);
    goto LABEL_82;
  }
  sub_1001AF05C((uint64_t)v89, (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  swift_beginAccess();
  uint64_t v98 = swift_unknownObjectWeakLoadStrong();
  if (v98)
  {
    uint64_t v99 = (void *)v98;
    uint64_t v96 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v96)
    {
      unint64_t v49 = (unint64_t)sub_100101DD0();
      swift_beginAccess();
      NSArray v100 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      unint64_t v183 = (unint64_t)_swiftEmptyArrayStorage;
      if (!(v49 >> 62))
      {
        uint64_t v101 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (!v101)
        {
LABEL_144:
          swift_bridgeObjectRelease();
LABEL_145:
          swift_bridgeObjectRelease();
          swift_unknownObjectWeakDestroy();
          sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
          Class v145 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v96 magicPairingRecordsUpdatedWithRecords:v145];

          swift_unknownObjectRelease();
          goto LABEL_146;
        }
LABEL_94:
        uint64_t v168 = (void (**)(char *, uint64_t, uint64_t))v96;
        if (v101 < 1)
        {
          __break(1u);
          goto LABEL_164;
        }
        unint64_t v180 = v49 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v102 = 0;
        uint64_t v176 = v179 + 8;
        uint64_t v177 = (int *)(v179 + 16);
        unint64_t v178 = v49;
        unint64_t v179 = (const char *)v101;
        do
        {
          if (v180) {
            uint64_t v103 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v103 = (int *)*(id *)(v49 + 8 * v102 + 32);
          }
          uint64_t v104 = v103;
          uint64_t v105 = swift_unknownObjectWeakLoadStrong();
          if (v105)
          {
            uint64_t v106 = (void *)v105;
            sub_1000C2280();
            uint64_t v107 = self;
            unsigned int v108 = [v107 isFirstUnlocked];
            uint64_t v181 = v104;
            if (v108)
            {
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v109 = v175;
              uint64_t v110 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB68);
              uint64_t v111 = (uint64_t)v174;
              (*(void (**)(char *, uint64_t, uint64_t))v177)(v174, v110, v109);
              uint64_t v112 = sub_10015DA98(v111, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v176)(v111, v109);
              uint64_t v113 = v112[2];
              uint64_t v114 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v115 = *(void *)(v114 - 8);
              uint64_t v116 = v115;
              if (v113)
              {
                uint64_t v117 = v171;
                sub_1001AEF94((uint64_t)v112+ ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80)), (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void, void, uint64_t, uint64_t))(v116 + 56))(v117, 0, 1, v114);
              }
              else
              {
                uint64_t v117 = v171;
                (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v115 + 56))(v171, 1, 1, v114);
              }
              swift_release();
              uint64_t v118 = v117;
              swift_bridgeObjectRelease();
              uint64_t v95 = v172;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v114 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v118 = v171;
              (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v171, 1, 1, v114);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v119 = *(void *)(v114 - 8);
            uint64_t v120 = *(uint64_t **)(v119 + 48);
            if (((unsigned int (*)(void (**)(uint64_t, uint64_t, uint64_t, int *), uint64_t, uint64_t))v120)(v118, 1, v114) == 1)
            {
              sub_1000AA894((uint64_t)v118, &qword_1002623C0);
              Class v121 = 0;
            }
            else
            {
              uint64_t v122 = Data.subdata(in:)();
              long long v173 = (uint64_t *)v114;
              uint64_t v123 = v107;
              Class v124 = v95;
              uint64_t v125 = v120;
              unint64_t v127 = v126;
              sub_1001AEFFC((uint64_t)v118, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v121 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v128 = v127;
              uint64_t v120 = v125;
              uint64_t v95 = v124;
              uint64_t v107 = v123;
              uint64_t v114 = (uint64_t)v173;
              sub_1000AA8F0(v122, v128);
            }
            [v181 setMasterKey:v121];

            sub_1000C2280();
            if ([v107 isFirstUnlocked])
            {
              long long v173 = v120;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v129 = v175;
              uint64_t v130 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB68);
              uint64_t v131 = (uint64_t)v174;
              (*(void (**)(char *, uint64_t, uint64_t))v177)(v174, v130, v129);
              uint64_t v132 = sub_10015DA98(v131, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v176)(v131, v129);
              uint64_t v95 = v172;
              if (v132[2])
              {
                sub_1001AEF94((uint64_t)v132+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80)), (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v95, 0, 1, v114);
              }
              else
              {
                (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v172, 1, 1, v114);
              }
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v120 = v173;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v95, 1, 1, v114);
              swift_release();
            }
            unsigned int v133 = ((uint64_t (*)(void *, uint64_t, uint64_t))v120)(v95, 1, v114);
            uint64_t v101 = (uint64_t)v179;
            if (v133 == 1)
            {
              sub_1000AA894((uint64_t)v95, &qword_1002623C0);
              Class v134 = 0;
            }
            else
            {
              uint64_t v135 = Data.subdata(in:)();
              unint64_t v137 = v136;
              sub_1001AEFFC((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v134 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v135, v137);
            }
            unint64_t v49 = v178;
            [v181 setMasterHint:v134];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v102;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v101 != v102);
        swift_bridgeObjectRelease();
        uint64_t v96 = v168;
        goto LABEL_145;
      }
LABEL_143:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v101 = result;
      if (!result) {
        goto LABEL_144;
      }
      goto LABEL_94;
    }
  }
LABEL_146:
  swift_beginAccess();
  uint64_t v146 = swift_unknownObjectWeakLoadStrong();
  if (!v146) {
    return sub_1001AEFFC((uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  Class v147 = (void *)v146;
  uint64_t v148 = (int *)swift_unknownObjectWeakLoadStrong();

  if (!v148) {
    return sub_1001AEFFC((uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  unint64_t v149 = (unint64_t)sub_100101DD0();
  unint64_t v150 = v149;
  unint64_t v183 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v149 >> 62))
  {
    uint64_t v151 = *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v151) {
      goto LABEL_150;
    }
LABEL_160:
    swift_bridgeObjectRelease();
LABEL_161:
    swift_bridgeObjectRelease();
    sub_1000B66A0(0, &qword_100263B50);
    Class v162 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v148 devicesUpdatedWithRecords:v162];
    swift_unknownObjectRelease();

    return sub_1001AEFFC((uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v151 = result;
  if (!result) {
    goto LABEL_160;
  }
LABEL_150:
  uint64_t v181 = v148;
  if (v151 >= 1)
  {
    for (uint64_t i = 0; i != v151; ++i)
    {
      if ((v150 & 0xC000000000000001) != 0) {
        id v153 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v153 = *(id *)(v150 + 8 * i + 32);
      }
      uint64_t v154 = v153;
      id v155 = [v153 bluetoothAddress];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v156 = objc_allocWithZone((Class)BTCloudDevice);
      NSString v157 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v158 = [v156 initWithBluetoothAddress:v157];

      id v159 = [v154 name];
      [v158 setNickname:v159];

      id v160 = [v154 productID];
      [v158 setProductID:v160];

      id v161 = [v154 vendorID];
      [v158 setVendorID:v161];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v183 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_bridgeObjectRelease();
    uint64_t v148 = v181;
    goto LABEL_161;
  }
LABEL_164:
  __break(1u);
  return result;
}

uint64_t sub_10014ACF0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  Class v172 = (uint64_t *)((char *)&v164 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  id v171 = (void (**)(uint64_t, uint64_t, uint64_t, int *))((char *)&v164 - v7);
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v8 - 8);
  id v169 = (void (**)(char *, uint64_t, uint64_t))((char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v168 = (void (**)(uint64_t, uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v167 = (uint64_t)*(v168 - 1);
  __chkstk_darwin(v168);
  uint64_t v170 = (uint64_t (**)(uint64_t, uint64_t, int *))((char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v165 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v166 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = (int *)type metadata accessor for DeviceRecord();
  unint64_t v181 = *((void *)v177 - 1);
  __chkstk_darwin(v177);
  uint64_t v14 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for URL();
  unint64_t v179 = *(const char **)(v175 - 8);
  __chkstk_darwin(v175);
  long long v174 = (char *)&v164 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v16 - 8);
  unint64_t v178 = (unint64_t)&v164 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = (int *)type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v176 = (const char *)*((void *)v182 - 1);
  __chkstk_darwin(v182);
  uint64_t v19 = (char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  long long v173 = (uint64_t *)((char *)&v164 - v21);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v164 - v23;
  uint64_t v180 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  unint64_t v25 = qword_10026ADE0;
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AADeviceRecord();
  swift_bridgeObjectRetain();
  uint64_t v27 = Array.description.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_1000AA5E0();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v30)
  {
    uint64_t v31 = v30;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v33 = (void *)Strong;
      uint64_t v34 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v34)
      {
        unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v35 = *(void *)(v31 + 16);
        if (v35)
        {
          unint64_t v181 = (unint64_t)v34;
          uint64_t v36 = v31 + ((*((unsigned __int8 *)v176 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v176 + 80));
          uint64_t v37 = *((void *)v176 + 9);
          uint64_t v180 = v31;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v36, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v38 = &v24[v182[6]];
            if (*(void *)v38 == 0xD000000000000011 && *((void *)v38 + 1) == 0x80000001001F75A0
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            }
            else
            {
              sub_1000CE96C();
              sub_1001AEFFC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            v36 += v37;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
          uint64_t v34 = (void *)v181;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v34 magicPairingRecordsUpdatedWithRecords:isa];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v39)
  {
    uint64_t v40 = v39;
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    uint64_t v42 = v182;
    if (v41)
    {
      uint64_t v43 = (void *)v41;
      uint64_t v44 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v44)
      {
        unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v45 = *(void *)(v40 + 16);
        if (v45)
        {
          uint64_t v46 = v40 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
          uint64_t v47 = *(void *)(v181 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v46, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v46 += v47;
            --v45;
          }
          while (v45);
          swift_bridgeObjectRelease();
          uint64_t v42 = v182;
        }
        sub_1000B66A0(0, &qword_100263B50);
        Class v59 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v44 devicesUpdatedWithRecords:v59];

        swift_unknownObjectRelease();
      }
    }
    uint64_t v60 = *(void *)(v40 + 16);
    if (v60)
    {
      unint64_t v61 = v181;
      uint64_t v62 = v40 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
      uint64_t v167 = v40;
      swift_bridgeObjectRetain();
      swift_beginAccess();
      swift_beginAccess();
      uint64_t v63 = 0;
      id v169 = (void (**)(char *, uint64_t, uint64_t))(v179 + 16);
      uint64_t v64 = *(void *)(v61 + 72);
      uint64_t v168 = (void (**)(uint64_t, uint64_t))(v179 + 8);
      id v171 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v176 + 56);
      uint64_t v170 = (uint64_t (**)(uint64_t, uint64_t, int *))(v176 + 48);
      unint64_t v179 = "Invalid AAProxCardsRecord - %@";
      unint64_t v181 = 0x80000001001F75A0;
      long long v166 = xmmword_1001D2D40;
      uint64_t v65 = v177;
      Class v172 = (void *)v62;
      while (1)
      {
        uint64_t v67 = (void *)(v62 + v64 * v63 + v65[6]);
        if (*v67 == 0xD000000000000011 && v67[1] == v181 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_44;
        }
        uint64_t v68 = swift_unknownObjectWeakLoadStrong();
        if (v68)
        {
          uint64_t v69 = (void *)v68;
          sub_1000C2280();

          if ([self isFirstUnlocked])
          {
            sub_10015F0D4();
            if (qword_100261890 != -1) {
              swift_once();
            }
            uint64_t v70 = v175;
            uint64_t v71 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB90);
            uint64_t v72 = (uint64_t)v174;
            (*v169)(v174, v71, v70);
            uint64_t v73 = sub_10015DA98(v72, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
            swift_release();
            (*v168)(v72, v70);
            uint64_t v42 = v182;
          }
          else
          {
            static os_log_type_t.error.getter();
            if (qword_100261948 != -1) {
              swift_once();
            }
            uint64_t v73 = _swiftEmptyArrayStorage;
            os_log(_:dso:log:_:_:)();
          }
          swift_release();
          uint64_t v74 = v73[2];
          if (v74)
          {
            uint64_t v75 = v176;
            uint64_t v76 = (uint64_t)v73
                + ((*((unsigned __int8 *)v176 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v176 + 80));
            swift_bridgeObjectRetain();
            uint64_t v77 = *((void *)v75 + 9);
            while (1)
            {
              sub_1001AEF94(v76, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              BOOL v78 = &v19[v42[6]];
              BOOL v79 = *(void *)v78 == *v67 && *((void *)v78 + 1) == v67[1];
              if (v79 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
              v76 += v77;
              if (!--v74)
              {
                swift_bridgeObjectRelease();
                goto LABEL_65;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v66 = v178;
            sub_1001AF05C((uint64_t)v19, v178, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            (*v171)(v66, 0, 1, v42);
          }
          else
          {
LABEL_65:
            uint64_t v66 = v178;
            (*v171)(v178, 1, 1, v42);
          }
          swift_bridgeObjectRelease();
          int v80 = (*v170)(v66, 1, v42);
          uint64_t v65 = v177;
          if (v80 != 1)
          {
            uint64_t v81 = (uint64_t)v173;
            sub_1001AF05C(v66, (uint64_t)v173, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            uint64_t v82 = swift_unknownObjectWeakLoadStrong();
            if (v82)
            {
              uint64_t v83 = (void *)v82;
              uint64_t v84 = (void *)swift_unknownObjectWeakLoadStrong();

              if (v84)
              {
                sub_1000AA024(&qword_100263AE0);
                uint64_t v85 = swift_allocObject();
                *(_OWORD *)(v85 + 16) = v166;
                *(void *)(v85 + 32) = sub_1000CE96C();
                uint64_t v183 = v85;
                specialized Array._endMutation()();
                sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
                Class v86 = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v84 magicPairingRecordsUpdatedWithRecords:v86];
                swift_unknownObjectRelease();

                uint64_t v65 = v177;
              }
            }
            sub_1001AEFFC(v81, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v66 = v178;
          (*v171)(v178, 1, 1, v42);
        }
        sub_1000AA894(v66, &qword_1002623D0);
LABEL_43:
        uint64_t v62 = (uint64_t)v172;
LABEL_44:
        if (++v63 == v60) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v50 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v50)
  {
    uint64_t v51 = v50;
    swift_beginAccess();
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (v52)
    {
      NSString v53 = (void *)v52;
      uint64_t v54 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v54)
      {
        unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v55 = *(void *)(v51 + 16);
        if (v55)
        {
          uint64_t v56 = v51 + ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80));
          uint64_t v57 = *(void *)(v165 + 72);
          swift_bridgeObjectRetain();
          uint64_t v58 = v166;
          do
          {
            sub_1001AEF94(v56, v58, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v56 += v57;
            --v55;
          }
          while (v55);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        Class v93 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v54 deviceSupportInformationRecordsUpdatedWithRecords:v93];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v87 = sub_10013E0B8(a1);
  if (!v87)
  {
LABEL_82:
    if (sub_10013DAB4(a1))
    {
      swift_beginAccess();
      uint64_t v97 = swift_unknownObjectWeakLoadStrong();
      if (v97)
      {
        uint64_t v98 = (void *)v97;
        v185[3] = &type metadata for AudioAccessoryFeatures;
        v185[4] = sub_1000AE4C4();
        char v99 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v185);
        if (v99)
        {
          uint64_t v100 = swift_unknownObjectWeakLoadStrong();
          if (v100)
          {
            uint64_t v101 = (void *)v100;
            Class v102 = Array._bridgeToObjectiveC()().super.isa;
            [v101 aaDeviceRecordsUpdatedWithRecords:v102];

            swift_bridgeObjectRelease();
            return swift_unknownObjectRelease();
          }
        }
      }
      return swift_bridgeObjectRelease();
    }
    uint64_t v95 = _swiftEmptyArrayStorage;
    v185[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      specialized ContiguousArray.reserveCapacity(_:)();
      swift_bridgeObjectRetain();
      uint64_t v144 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v144) {
        goto LABEL_130;
      }
    }
    else
    {
      specialized ContiguousArray.reserveCapacity(_:)();
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_130:
        uint64_t v105 = (void *)(a1 & 0xC000000000000001);
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
LABEL_132:
          swift_release();
          v185[0] = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          if (v105)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_unknownObjectRelease();
          }
          return swift_release();
        }
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_132;
        }
        __break(1u);
        goto LABEL_143;
      }
    }
    swift_beginAccess();
    Class v145 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v145) {

    }
    return swift_release();
  }
  uint64_t v88 = v167;
  if (v87[2])
  {
    uint64_t v89 = v169;
    sub_1001AEF94((uint64_t)v87 + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80)), (uint64_t)v169, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    uint64_t v90 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v88 + 56);
    uint64_t v91 = v89;
    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v90 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t, uint64_t, void (**)(void, void)))(v167 + 56);
    uint64_t v89 = v169;
    uint64_t v91 = v169;
    uint64_t v92 = 1;
  }
  uint64_t v94 = v168;
  v90(v91, v92, 1, v168);
  uint64_t v95 = v172;
  swift_bridgeObjectRelease();
  uint64_t v96 = *(unsigned int (**)(void, uint64_t, void (**)(void, void)))(v88 + 48);
  unint64_t v25 = v88 + 48;
  if (v96(v89, 1, v94) == 1)
  {
    sub_1000AA894((uint64_t)v89, (uint64_t *)&unk_100263BA0);
    goto LABEL_82;
  }
  sub_1001AF05C((uint64_t)v89, (uint64_t)v170, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  swift_beginAccess();
  uint64_t v103 = swift_unknownObjectWeakLoadStrong();
  if (v103)
  {
    uint64_t v104 = (void *)v103;
    uint64_t v105 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v105)
    {
      unint64_t v25 = (unint64_t)sub_100101DD0();
      swift_beginAccess();
      uint64_t v106 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      unint64_t v184 = (unint64_t)_swiftEmptyArrayStorage;
      if (!(v25 >> 62))
      {
        uint64_t v107 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (!v107)
        {
LABEL_144:
          swift_bridgeObjectRelease();
LABEL_145:
          swift_bridgeObjectRelease();
          swift_unknownObjectWeakDestroy();
          sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
          Class v146 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v105 magicPairingRecordsUpdatedWithRecords:v146];

          swift_unknownObjectRelease();
          goto LABEL_146;
        }
LABEL_91:
        id v169 = (void (**)(char *, uint64_t, uint64_t))v105;
        if (v107 < 1)
        {
          __break(1u);
          goto LABEL_164;
        }
        unint64_t v181 = v25 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v108 = 0;
        uint64_t v177 = (int *)(v179 + 16);
        uint64_t v176 = v179 + 8;
        unint64_t v178 = v25;
        unint64_t v179 = (const char *)v107;
        do
        {
          if (v181) {
            uint64_t v109 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v109 = (int *)*(id *)(v25 + 8 * v108 + 32);
          }
          uint64_t v110 = v109;
          uint64_t v111 = swift_unknownObjectWeakLoadStrong();
          if (v111)
          {
            uint64_t v112 = (void *)v111;
            sub_1000C2280();
            uint64_t v113 = self;
            unsigned int v114 = [v113 isFirstUnlocked];
            uint64_t v182 = v110;
            if (v114)
            {
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v115 = v175;
              uint64_t v116 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB68);
              uint64_t v117 = (uint64_t)v174;
              (*(void (**)(char *, uint64_t, uint64_t))v177)(v174, v116, v115);
              uint64_t v118 = sub_10015DA98(v117, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v176)(v117, v115);
              uint64_t v119 = v118[2];
              uint64_t v120 = type metadata accessor for LegacyAccountMagicKeysRecord();
              uint64_t v121 = *(void *)(v120 - 8);
              uint64_t v122 = v121;
              if (v119)
              {
                uint64_t v123 = v171;
                sub_1001AEF94((uint64_t)v118+ ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80)), (uint64_t)v171, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void, void, uint64_t, uint64_t))(v122 + 56))(v123, 0, 1, v120);
              }
              else
              {
                uint64_t v123 = v171;
                (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v121 + 56))(v171, 1, 1, v120);
              }
              swift_release();
              Class v124 = v123;
              swift_bridgeObjectRelease();
              uint64_t v95 = v172;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              uint64_t v120 = type metadata accessor for LegacyAccountMagicKeysRecord();
              Class v124 = v171;
              (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v171, 1, 1, v120);
              swift_release();
            }
            type metadata accessor for LegacyAccountMagicKeysRecord();
            uint64_t v125 = *(void *)(v120 - 8);
            unint64_t v126 = *(uint64_t **)(v125 + 48);
            if (((unsigned int (*)(void (**)(uint64_t, uint64_t, uint64_t, int *), uint64_t, uint64_t))v126)(v124, 1, v120) == 1)
            {
              sub_1000AA894((uint64_t)v124, &qword_1002623C0);
              Class v127 = 0;
            }
            else
            {
              uint64_t v128 = Data.subdata(in:)();
              long long v173 = (uint64_t *)v120;
              uint64_t v129 = v113;
              uint64_t v130 = v95;
              uint64_t v131 = v126;
              unint64_t v133 = v132;
              sub_1001AEFFC((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v127 = Data._bridgeToObjectiveC()().super.isa;
              unint64_t v134 = v133;
              unint64_t v126 = v131;
              uint64_t v95 = v130;
              uint64_t v113 = v129;
              uint64_t v120 = (uint64_t)v173;
              sub_1000AA8F0(v128, v134);
            }
            [v182 setMasterKey:v127];

            sub_1000C2280();
            if ([v113 isFirstUnlocked])
            {
              long long v173 = v126;
              sub_10015F0D4();
              if (qword_100261878 != -1) {
                swift_once();
              }
              uint64_t v135 = v175;
              uint64_t v136 = sub_1000AA0CC(v175, (uint64_t)qword_10026AB68);
              uint64_t v137 = (uint64_t)v174;
              (*(void (**)(char *, uint64_t, uint64_t))v177)(v174, v136, v135);
              uint64_t v138 = sub_10015DA98(v137, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))v176)(v137, v135);
              uint64_t v95 = v172;
              if (v138[2])
              {
                sub_1001AEF94((uint64_t)v138+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80)), (uint64_t)v172, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v95, 0, 1, v120);
              }
              else
              {
                (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v172, 1, 1, v120);
              }
              swift_release();
              swift_bridgeObjectRelease();
              unint64_t v126 = v173;
            }
            else
            {
              static os_log_type_t.error.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              os_log(_:dso:log:_:_:)();
              (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v125 + 56))(v95, 1, 1, v120);
              swift_release();
            }
            unsigned int v139 = ((uint64_t (*)(void *, uint64_t, uint64_t))v126)(v95, 1, v120);
            uint64_t v107 = (uint64_t)v179;
            if (v139 == 1)
            {
              sub_1000AA894((uint64_t)v95, &qword_1002623C0);
              Class v140 = 0;
            }
            else
            {
              uint64_t v141 = Data.subdata(in:)();
              unint64_t v143 = v142;
              sub_1001AEFFC((uint64_t)v95, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
              Class v140 = Data._bridgeToObjectiveC()().super.isa;
              sub_1000AA8F0(v141, v143);
            }
            unint64_t v25 = v178;
            [v182 setMasterHint:v140];
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v108;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v107 != v108);
        swift_bridgeObjectRelease();
        uint64_t v105 = v169;
        goto LABEL_145;
      }
LABEL_143:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v107 = result;
      if (!result) {
        goto LABEL_144;
      }
      goto LABEL_91;
    }
  }
LABEL_146:
  swift_beginAccess();
  uint64_t v147 = swift_unknownObjectWeakLoadStrong();
  if (!v147) {
    return sub_1001AEFFC((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  uint64_t v148 = (void *)v147;
  unint64_t v149 = (int *)swift_unknownObjectWeakLoadStrong();

  if (!v149) {
    return sub_1001AEFFC((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  unint64_t v150 = (unint64_t)sub_100101DD0();
  unint64_t v151 = v150;
  unint64_t v184 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v150 >> 62))
  {
    uint64_t v152 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v152) {
      goto LABEL_150;
    }
LABEL_160:
    swift_bridgeObjectRelease();
LABEL_161:
    swift_bridgeObjectRelease();
    sub_1000B66A0(0, &qword_100263B50);
    Class v163 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v149 devicesUpdatedWithRecords:v163];
    swift_unknownObjectRelease();

    return sub_1001AEFFC((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v152 = result;
  if (!result) {
    goto LABEL_160;
  }
LABEL_150:
  uint64_t v182 = v149;
  if (v152 >= 1)
  {
    for (uint64_t i = 0; i != v152; ++i)
    {
      if ((v151 & 0xC000000000000001) != 0) {
        id v154 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v154 = *(id *)(v151 + 8 * i + 32);
      }
      id v155 = v154;
      id v156 = [v154 bluetoothAddress];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v157 = objc_allocWithZone((Class)BTCloudDevice);
      NSString v158 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v159 = [v157 initWithBluetoothAddress:v158];

      id v160 = [v155 name];
      [v159 setNickname:v160];

      id v161 = [v155 productID];
      [v159 setProductID:v161];

      id v162 = [v155 vendorID];
      [v159 setVendorID:v162];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v184 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    swift_bridgeObjectRelease();
    unint64_t v149 = v182;
    goto LABEL_161;
  }
LABEL_164:
  __break(1u);
  return result;
}

uint64_t sub_10014CC64(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  unint64_t v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v63 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DeviceRecord();
  uint64_t v64 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AADeviceRecord();
  swift_bridgeObjectRetain();
  uint64_t v13 = Array.description.getter();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000AA5E0();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (!v16)
  {
    uint64_t v32 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
    if (v32)
    {
      uint64_t v33 = v32;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v35 = (void *)Strong;
      uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v36) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v37 = *(void *)(v33 + 16);
      if (v37)
      {
        uint64_t v38 = v33 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v39 = *(void *)(v63 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v38, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v38 += v39;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v36 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa];
LABEL_40:

      return swift_unknownObjectRelease();
    }
    uint64_t v42 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
    if (v42)
    {
      uint64_t v43 = v42;
      swift_beginAccess();
      uint64_t v44 = swift_unknownObjectWeakLoadStrong();
      if (!v44) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v45 = (void *)v44;
      uint64_t v46 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v46) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v47 = *(void *)(v43 + 16);
      if (v47)
      {
        uint64_t v48 = v43 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v49 = *(void *)(v62 + 72);
        swift_bridgeObjectRetain();
        uint64_t v50 = (uint64_t)v61;
        do
        {
          sub_1001AEF94(v48, v50, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC(v50, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v48 += v49;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v46 magicPairingRecordsRemovedWithRecords:v51.super.isa];
      goto LABEL_40;
    }
    if (sub_10013DAB4(a1))
    {
      swift_beginAccess();
      uint64_t v52 = swift_unknownObjectWeakLoadStrong();
      if (v52)
      {
        NSString v53 = (void *)v52;
        v66[3] = &type metadata for AudioAccessoryFeatures;
        v66[4] = sub_1000AE4C4();
        char v54 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v66);
        if (v54)
        {
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            uint64_t v56 = (void *)v55;
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v56 aaDeviceRecordsRemovedWithRecords:isa];

            swift_bridgeObjectRelease();
            return swift_unknownObjectRelease();
          }
        }
      }
      return swift_bridgeObjectRelease();
    }
    v66[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      specialized ContiguousArray.reserveCapacity(_:)();
      swift_bridgeObjectRetain();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v58) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_43:
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
        }
        else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        swift_release();
        v66[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
        }
        return swift_release();
      }
    }
    swift_beginAccess();
    Class v59 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v59) {

    }
    return swift_release();
  }
  uint64_t v17 = v16;
  swift_beginAccess();
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (!v18) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v19 = (void *)v18;
  uint64_t v20 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v20) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(v17 + 16);
  if (v21)
  {
    uint64_t v65 = v20;
    uint64_t v22 = v17 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    uint64_t v23 = *(void *)(v64 + 72);
    uint64_t v64 = v17;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v24 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v26 = [v24 initWithBluetoothAddress:v25];

      NSString v27 = String._bridgeToObjectiveC()();
      [v26 setNickname:v27];

      NSString v28 = String._bridgeToObjectiveC()();
      [v26 setModelNumber:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v26 setManufacturer:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v26 setProductID:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v26 setVendorID:v31];

      sub_1001AEFFC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v22 += v23;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v20 = v65;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class v40 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 devicesRemovedWithRecords:v40];

  return swift_unknownObjectRelease();
}

uint64_t sub_10014D6D4(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v64 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v66 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DeviceRecord();
  uint64_t v67 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
  type metadata accessor for HMDeviceCloudRecord();
  swift_bridgeObjectRetain();
  uint64_t v13 = Array.description.getter();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000AA5E0();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v16)
  {
    uint64_t v17 = v16;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v19 = (void *)Strong;
      uint64_t v20 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v20)
      {
        unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v21 = *(void *)(v17 + 16);
        if (v21)
        {
          uint64_t v22 = v17 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
          uint64_t v23 = *(void *)(v67 + 72);
          uint64_t v67 = v17;
          uint64_t v68 = v20;
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            id v24 = objc_allocWithZone((Class)BTCloudDevice);
            swift_bridgeObjectRetain();
            NSString v25 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v26 = [v24 initWithBluetoothAddress:v25];

            NSString v27 = String._bridgeToObjectiveC()();
            [v26 setNickname:v27];

            NSString v28 = String._bridgeToObjectiveC()();
            [v26 setModelNumber:v28];

            NSString v29 = String._bridgeToObjectiveC()();
            [v26 setManufacturer:v29];

            NSString v30 = String._bridgeToObjectiveC()();
            [v26 setProductID:v30];

            NSString v31 = String._bridgeToObjectiveC()();
            [v26 setVendorID:v31];

            sub_1001AEFFC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v22 += v23;
            --v21;
          }
          while (v21);
          swift_bridgeObjectRelease();
          uint64_t v20 = v68;
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v20 devicesRemovedWithRecords:isa];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v32)
  {
    uint64_t v33 = v32;
    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    if (!v34) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v35 = (void *)v34;
    uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();

    if (!v36) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v37 = *(void *)(v33 + 16);
    if (v37)
    {
      uint64_t v38 = v33 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
      uint64_t v39 = *(void *)(v66 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1001AEF94(v38, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        sub_1000C9E80();
        sub_1001AEFFC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v38 += v39;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1000B66A0(0, &qword_1002623E0);
    v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v36 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa];
LABEL_46:

    return swift_unknownObjectRelease();
  }
  uint64_t v42 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v42)
  {
    uint64_t v43 = v42;
    swift_beginAccess();
    uint64_t v44 = swift_unknownObjectWeakLoadStrong();
    if (!v44) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v45 = (void *)v44;
    uint64_t v46 = (void *)swift_unknownObjectWeakLoadStrong();

    if (!v46) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v70 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v47 = *(void *)(v43 + 16);
    if (v47)
    {
      uint64_t v48 = v43 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      uint64_t v49 = *(void *)(v64 + 72);
      swift_bridgeObjectRetain();
      uint64_t v50 = (uint64_t)v65;
      do
      {
        sub_1001AEF94(v48, v50, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        sub_1000CE96C();
        sub_1001AEFFC(v50, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v48 += v49;
        --v47;
      }
      while (v47);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
    v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v46 magicPairingRecordsRemovedWithRecords:v51.super.isa];
    goto LABEL_46;
  }
  v69[0] = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_37;
    }
LABEL_50:
    swift_beginAccess();
    uint64_t v58 = swift_unknownObjectWeakLoadStrong();
    if (v58)
    {
      Class v59 = (void *)v58;
      v69[3] = &type metadata for AudioAccessoryFeatures;
      v69[4] = sub_1000AE4C4();
      char v60 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v69);
      if (v60)
      {
        uint64_t v61 = swift_unknownObjectWeakLoadStrong();
        if (v61)
        {
          uint64_t v62 = (void *)v61;
          type metadata accessor for AADeviceRecord();
          v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v62 aaDeviceRecordsRemovedWithRecords:v56.super.isa];

          swift_release();
          goto LABEL_54;
        }
      }
    }
    return swift_release();
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  specialized ContiguousArray.reserveCapacity(_:)();
  swift_bridgeObjectRetain();
  uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v57) {
    goto LABEL_50;
  }
LABEL_37:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  swift_release();
  v69[0] = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t result = (uint64_t)sub_10013DAB4(a1);
  if (result)
  {
    swift_beginAccess();
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (!v52) {
      return swift_bridgeObjectRelease();
    }
    NSString v53 = (void *)v52;
    uint64_t v54 = swift_unknownObjectWeakLoadStrong();
    if (!v54)
    {

      return swift_bridgeObjectRelease();
    }
    uint64_t v55 = (void *)v54;
    v56.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v55 hmDeviceCloudRecordsRemovedWithRecords:v56.super.isa];

    swift_bridgeObjectRelease();
LABEL_54:

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10014E198(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v60 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v61 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v62 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AAProxCardsRecord();
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (!v17)
  {
    uint64_t v33 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
    if (v33)
    {
      uint64_t v34 = v33;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v36 = (void *)Strong;
      uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v37) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v38 = *(void *)(v34 + 16);
      if (v38)
      {
        uint64_t v39 = v34 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
        uint64_t v40 = *(void *)(v61 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v39 += v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa, v60];
LABEL_43:

      return swift_unknownObjectRelease();
    }
    uint64_t v43 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
    if (v43)
    {
      uint64_t v44 = v43;
      swift_beginAccess();
      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (!v45) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v46 = (void *)v45;
      uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v47) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v48 = *(void *)(v44 + 16);
      if (v48)
      {
        uint64_t v49 = v44 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        uint64_t v50 = *(void *)(v60 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v49 += v50;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 magicPairingRecordsRemovedWithRecords:v51.super.isa, v60];
      goto LABEL_43;
    }
    v64[0] = _swiftEmptyArrayStorage;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      specialized ContiguousArray.reserveCapacity(_:)();
      swift_bridgeObjectRetain();
      uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v53) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_36:
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
        }
        else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        swift_release();
        if (sub_10013DAB4(a1))
        {
          swift_beginAccess();
          uint64_t v52 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v52) {

          }
          return swift_bridgeObjectRelease();
        }
        v64[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_unknownObjectRelease();
        }
        return swift_release();
      }
    }
    swift_beginAccess();
    uint64_t v54 = swift_unknownObjectWeakLoadStrong();
    if (v54)
    {
      uint64_t v55 = (void *)v54;
      v64[3] = &type metadata for AudioAccessoryFeatures;
      v64[4] = sub_1000AE4C4();
      char v56 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v64);
      if (v56)
      {
        uint64_t v57 = swift_unknownObjectWeakLoadStrong();
        if (v57)
        {
          uint64_t v58 = (void *)v57;
          type metadata accessor for AADeviceRecord();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v58 aaDeviceRecordsRemovedWithRecords:isa];

          swift_release();
          return swift_unknownObjectRelease();
        }
      }
    }
    return swift_release();
  }
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v21) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = *(void *)(v18 + 16);
  if (v22)
  {
    uint64_t v63 = v21;
    uint64_t v23 = v18 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
    uint64_t v24 = *(void *)(v62 + 72);
    uint64_t v62 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v25 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBluetoothAddress:v26];

      NSString v28 = String._bridgeToObjectiveC()();
      [v27 setNickname:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v27 setModelNumber:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v27 setManufacturer:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v27 setProductID:v31];

      NSString v32 = String._bridgeToObjectiveC()();
      [v27 setVendorID:v32];

      sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = v63;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class v41 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 devicesRemovedWithRecords:v41];

  return swift_unknownObjectRelease();
}

void *sub_10014EC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v64 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  type metadata accessor for SoundProfileRecord();
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013DC2C(a1, &qword_1002623B8, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
  if (!v17)
  {
    uint64_t v33 = sub_10013DC2C(a1, &qword_1002623B8, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (v33)
    {
      uint64_t v34 = v33;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v36 = (void *)Strong;
      uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v37) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v38 = v34[2];
      if (v38)
      {
        uint64_t v39 = (uint64_t)v34
            + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v40 = *(void *)(v63 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v39 += v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa, v62];
LABEL_41:

      return (void *)swift_unknownObjectRelease();
    }
    uint64_t v43 = sub_10013DC2C(a1, &qword_1002623B8, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (v43)
    {
      uint64_t v44 = v43;
      swift_beginAccess();
      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (!v45) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v46 = (void *)v45;
      uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v47) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v48 = v44[2];
      if (v48)
      {
        uint64_t v49 = (uint64_t)v44
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v50 = *(void *)(v62 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v49 += v50;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 magicPairingRecordsRemovedWithRecords:v51.super.isa, v62];
      goto LABEL_41;
    }
    if (sub_10013DDCC(a1, &qword_1002623B8, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord))
    {
      swift_beginAccess();
      uint64_t v52 = swift_unknownObjectWeakLoadStrong();
      if (v52)
      {
        uint64_t v53 = (void *)v52;
        uint64_t v67 = &type metadata for AudioAccessoryFeatures;
        unint64_t v68 = sub_1000AE4C4();
        char v54 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v66);
        if (v54)
        {
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            char v56 = (void *)v55;
            type metadata accessor for AADeviceRecord();
            v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v56 aaDeviceRecordsRemovedWithRecords:v57.super.isa, v62];
LABEL_49:

            swift_bridgeObjectRelease();
            return (void *)swift_unknownObjectRelease();
          }
        }
LABEL_50:
      }
    }
    else
    {
      if (sub_10013DDCC(a1, &qword_1002623B8, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord))
      {
        swift_beginAccess();
        uint64_t v58 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v58) {

        }
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t result = sub_10013DDCC(a1, &qword_1002623B8, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      if (!result) {
        return result;
      }
      swift_beginAccess();
      uint64_t v59 = swift_unknownObjectWeakLoadStrong();
      if (v59)
      {
        uint64_t v53 = (void *)v59;
        uint64_t v60 = swift_unknownObjectWeakLoadStrong();
        if (v60)
        {
          uint64_t v61 = (void *)v60;
          type metadata accessor for HMDeviceCloudRecord();
          v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v61 hmDeviceCloudRecordsRemovedWithRecords:v57.super.isa, v62];
          goto LABEL_49;
        }
        goto LABEL_50;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v21) {
    return (void *)swift_bridgeObjectRelease();
  }
  unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v18[2];
  if (v22)
  {
    unint64_t v65 = v21;
    uint64_t v23 = (uint64_t)v18 + ((*((unsigned __int8 *)v64 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v64 + 80));
    uint64_t v24 = v64[9];
    uint64_t v64 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v25 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBluetoothAddress:v26];

      NSString v28 = String._bridgeToObjectiveC()();
      [v27 setNickname:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v27 setModelNumber:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v27 setManufacturer:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v27 setProductID:v31];

      NSString v32 = String._bridgeToObjectiveC()();
      [v27 setVendorID:v32];

      sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = v65;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 devicesRemovedWithRecords:isa];

  return (void *)swift_unknownObjectRelease();
}

void *sub_10014F734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v64 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013DC2C(a1, &qword_1002623D0, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  if (!v17)
  {
    uint64_t v33 = sub_10013DC2C(a1, &qword_1002623D0, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (v33)
    {
      uint64_t v34 = v33;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v36 = (void *)Strong;
      uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v37) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v38 = v34[2];
      if (v38)
      {
        uint64_t v39 = (uint64_t)v34
            + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v40 = *(void *)(v63 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v39 += v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa, v62];
LABEL_41:

      return (void *)swift_unknownObjectRelease();
    }
    uint64_t v43 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (v43)
    {
      uint64_t v44 = v43;
      swift_beginAccess();
      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (!v45) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v46 = (void *)v45;
      uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v47) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v48 = v44[2];
      if (v48)
      {
        uint64_t v49 = (uint64_t)v44
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v50 = *(void *)(v62 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v49 += v50;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 magicPairingRecordsRemovedWithRecords:v51.super.isa, v62];
      goto LABEL_41;
    }
    if (sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord))
    {
      swift_beginAccess();
      uint64_t v52 = swift_unknownObjectWeakLoadStrong();
      if (v52)
      {
        uint64_t v53 = (void *)v52;
        uint64_t v67 = &type metadata for AudioAccessoryFeatures;
        unint64_t v68 = sub_1000AE4C4();
        char v54 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v66);
        if (v54)
        {
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            char v56 = (void *)v55;
            type metadata accessor for AADeviceRecord();
            v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v56 aaDeviceRecordsRemovedWithRecords:v57.super.isa, v62];
LABEL_49:

            swift_bridgeObjectRelease();
            return (void *)swift_unknownObjectRelease();
          }
        }
LABEL_50:
      }
    }
    else
    {
      if (sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord))
      {
        swift_beginAccess();
        uint64_t v58 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v58) {

        }
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t result = sub_10013DDCC(a1, &qword_1002623D0, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      if (!result) {
        return result;
      }
      swift_beginAccess();
      uint64_t v59 = swift_unknownObjectWeakLoadStrong();
      if (v59)
      {
        uint64_t v53 = (void *)v59;
        uint64_t v60 = swift_unknownObjectWeakLoadStrong();
        if (v60)
        {
          uint64_t v61 = (void *)v60;
          type metadata accessor for HMDeviceCloudRecord();
          v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v61 hmDeviceCloudRecordsRemovedWithRecords:v57.super.isa, v62];
          goto LABEL_49;
        }
        goto LABEL_50;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v21) {
    return (void *)swift_bridgeObjectRelease();
  }
  unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v18[2];
  if (v22)
  {
    unint64_t v65 = v21;
    uint64_t v23 = (uint64_t)v18 + ((*((unsigned __int8 *)v64 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v64 + 80));
    uint64_t v24 = v64[9];
    uint64_t v64 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v25 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBluetoothAddress:v26];

      NSString v28 = String._bridgeToObjectiveC()();
      [v27 setNickname:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v27 setModelNumber:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v27 setManufacturer:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v27 setProductID:v31];

      NSString v32 = String._bridgeToObjectiveC()();
      [v27 setVendorID:v32];

      sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = v65;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 devicesRemovedWithRecords:isa];

  return (void *)swift_unknownObjectRelease();
}

void *sub_100150268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v64 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A00, (void (*)(void, uint64_t, void, __n128))sub_10019091C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if (!v17)
  {
    uint64_t v33 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    if (v33)
    {
      uint64_t v34 = v33;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v36 = (void *)Strong;
      uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v37) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v38 = v34[2];
      if (v38)
      {
        uint64_t v39 = (uint64_t)v34
            + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v40 = *(void *)(v63 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v39 += v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa, v62];
LABEL_41:

      return (void *)swift_unknownObjectRelease();
    }
    uint64_t v43 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A00, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    if (v43)
    {
      uint64_t v44 = v43;
      swift_beginAccess();
      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (!v45) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v46 = (void *)v45;
      uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v47) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v48 = v44[2];
      if (v48)
      {
        uint64_t v49 = (uint64_t)v44
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v50 = *(void *)(v62 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v49 += v50;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 magicPairingRecordsRemovedWithRecords:v51.super.isa, v62];
      goto LABEL_41;
    }
    if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord))
    {
      swift_beginAccess();
      uint64_t v52 = swift_unknownObjectWeakLoadStrong();
      if (v52)
      {
        uint64_t v53 = (void *)v52;
        uint64_t v67 = &type metadata for AudioAccessoryFeatures;
        unint64_t v68 = sub_1000AE4C4();
        char v54 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v66);
        if (v54)
        {
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            char v56 = (void *)v55;
            type metadata accessor for AADeviceRecord();
            v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v56 aaDeviceRecordsRemovedWithRecords:v57.super.isa, v62];
LABEL_49:

            swift_bridgeObjectRelease();
            return (void *)swift_unknownObjectRelease();
          }
        }
LABEL_50:
      }
    }
    else
    {
      if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord))
      {
        swift_beginAccess();
        uint64_t v58 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v58) {

        }
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t result = sub_10013DDCC(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      if (!result) {
        return result;
      }
      swift_beginAccess();
      uint64_t v59 = swift_unknownObjectWeakLoadStrong();
      if (v59)
      {
        uint64_t v53 = (void *)v59;
        uint64_t v60 = swift_unknownObjectWeakLoadStrong();
        if (v60)
        {
          uint64_t v61 = (void *)v60;
          type metadata accessor for HMDeviceCloudRecord();
          v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v61 hmDeviceCloudRecordsRemovedWithRecords:v57.super.isa, v62];
          goto LABEL_49;
        }
        goto LABEL_50;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v21) {
    return (void *)swift_bridgeObjectRelease();
  }
  unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v18[2];
  if (v22)
  {
    unint64_t v65 = v21;
    uint64_t v23 = (uint64_t)v18 + ((*((unsigned __int8 *)v64 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v64 + 80));
    uint64_t v24 = v64[9];
    uint64_t v64 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v25 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBluetoothAddress:v26];

      NSString v28 = String._bridgeToObjectiveC()();
      [v27 setNickname:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v27 setModelNumber:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v27 setManufacturer:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v27 setProductID:v31];

      NSString v32 = String._bridgeToObjectiveC()();
      [v27 setVendorID:v32];

      sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = v65;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 devicesRemovedWithRecords:isa];

  return (void *)swift_unknownObjectRelease();
}

void *sub_100150D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v62 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v64 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = (void *)(a2 + 16);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_10019091C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (!v17)
  {
    uint64_t v33 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (v33)
    {
      uint64_t v34 = v33;
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v36 = (void *)Strong;
      uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v37) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v38 = v34[2];
      if (v38)
      {
        uint64_t v39 = (uint64_t)v34
            + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
        uint64_t v40 = *(void *)(v63 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000C9E80();
          sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v39 += v40;
          --v38;
        }
        while (v38);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, &qword_1002623E0);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 deviceSupportInformationRecordsRemovedWithRecords:v51.super.isa, v62];
LABEL_41:

      return (void *)swift_unknownObjectRelease();
    }
    uint64_t v43 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (v43)
    {
      uint64_t v44 = v43;
      swift_beginAccess();
      uint64_t v45 = swift_unknownObjectWeakLoadStrong();
      if (!v45) {
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t v46 = (void *)v45;
      uint64_t v47 = (void *)swift_unknownObjectWeakLoadStrong();

      if (!v47) {
        return (void *)swift_bridgeObjectRelease();
      }
      unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v48 = v44[2];
      if (v48)
      {
        uint64_t v49 = (uint64_t)v44
            + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
        uint64_t v50 = *(void *)(v62 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1001AEF94(v49, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_1000CE96C();
          sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          v49 += v50;
          --v48;
        }
        while (v48);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
      v51.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v47 magicPairingRecordsRemovedWithRecords:v51.super.isa, v62];
      goto LABEL_41;
    }
    if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
    {
      swift_beginAccess();
      uint64_t v52 = swift_unknownObjectWeakLoadStrong();
      if (v52)
      {
        uint64_t v53 = (void *)v52;
        uint64_t v67 = &type metadata for AudioAccessoryFeatures;
        unint64_t v68 = sub_1000AE4C4();
        char v54 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v66);
        if (v54)
        {
          uint64_t v55 = swift_unknownObjectWeakLoadStrong();
          if (v55)
          {
            char v56 = (void *)v55;
            type metadata accessor for AADeviceRecord();
            v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v56 aaDeviceRecordsRemovedWithRecords:v57.super.isa, v62];
LABEL_49:

            swift_bridgeObjectRelease();
            return (void *)swift_unknownObjectRelease();
          }
        }
LABEL_50:
      }
    }
    else
    {
      if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
      {
        swift_beginAccess();
        uint64_t v58 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v58) {

        }
        return (void *)swift_bridgeObjectRelease();
      }
      uint64_t result = sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      if (!result) {
        return result;
      }
      swift_beginAccess();
      uint64_t v59 = swift_unknownObjectWeakLoadStrong();
      if (v59)
      {
        uint64_t v53 = (void *)v59;
        uint64_t v60 = swift_unknownObjectWeakLoadStrong();
        if (v60)
        {
          uint64_t v61 = (void *)v60;
          type metadata accessor for HMDeviceCloudRecord();
          v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v61 hmDeviceCloudRecordsRemovedWithRecords:v57.super.isa, v62];
          goto LABEL_49;
        }
        goto LABEL_50;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v18 = v17;
  swift_beginAccess();
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (!v19) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v20 = (void *)v19;
  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

  if (!v21) {
    return (void *)swift_bridgeObjectRelease();
  }
  unint64_t v69 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v18[2];
  if (v22)
  {
    unint64_t v65 = v21;
    uint64_t v23 = (uint64_t)v18 + ((*((unsigned __int8 *)v64 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v64 + 80));
    uint64_t v24 = v64[9];
    uint64_t v64 = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      id v25 = objc_allocWithZone((Class)BTCloudDevice);
      swift_bridgeObjectRetain();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = [v25 initWithBluetoothAddress:v26];

      NSString v28 = String._bridgeToObjectiveC()();
      [v27 setNickname:v28];

      NSString v29 = String._bridgeToObjectiveC()();
      [v27 setModelNumber:v29];

      NSString v30 = String._bridgeToObjectiveC()();
      [v27 setManufacturer:v30];

      NSString v31 = String._bridgeToObjectiveC()();
      [v27 setProductID:v31];

      NSString v32 = String._bridgeToObjectiveC()();
      [v27 setVendorID:v32];

      sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = v65;
  }
  swift_bridgeObjectRelease();
  sub_1000B66A0(0, &qword_100263B50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 devicesRemovedWithRecords:isa];

  return (void *)swift_unknownObjectRelease();
}

uint64_t sub_1001518C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v6 = v4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v6 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_clientQueue);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = a3;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = v20;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_100151BD0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v53 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v55 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  type metadata accessor for HMDeviceCloudRecord();
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v17)
  {
    uint64_t v18 = v17;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v20 = (void *)Strong;
      uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v21)
      {
        unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v22 = *(void *)(v18 + 16);
        if (v22)
        {
          uint64_t v23 = v18 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
          uint64_t v24 = *(void *)(v55 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v23 += v24;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v21 allDevicesRemovedWithRecords:v33.super.isa, v53];
LABEL_46:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v25)
  {
    uint64_t v26 = v25;
    swift_beginAccess();
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();
    if (v27)
    {
      NSString v28 = (void *)v27;
      NSString v29 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v29)
      {
        unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v30 = *(void *)(v26 + 16);
        if (v30)
        {
          uint64_t v31 = v26 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
          uint64_t v32 = *(void *)(v54 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v31, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v31 += v32;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v29 allDeviceSupportInformationRecordsRemovedWithRecords:v33.super.isa, v53];
        goto LABEL_46;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v34 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v34)
  {
    uint64_t v35 = v34;
    swift_beginAccess();
    uint64_t v36 = swift_unknownObjectWeakLoadStrong();
    if (v36)
    {
      uint64_t v37 = (void *)v36;
      uint64_t v38 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v38)
      {
        unint64_t v57 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v39 = *(void *)(v35 + 16);
        if (v39)
        {
          uint64_t v40 = v35 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
          uint64_t v41 = *(void *)(v53 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v40, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            sub_1000CE96C();
            sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v40 += v41;
            --v39;
          }
          while (v39);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v38 allMagicPairingRecordsRemovedWithRecords:v33.super.isa, v53];
        goto LABEL_46;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v58 = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_37;
    }
LABEL_52:
    swift_beginAccess();
    uint64_t v49 = swift_unknownObjectWeakLoadStrong();
    if (v49)
    {
      uint64_t v50 = (void *)v49;
      uint64_t v51 = swift_unknownObjectWeakLoadStrong();
      if (v51)
      {
        uint64_t v52 = (void *)v51;
        type metadata accessor for AADeviceRecord();
        v47.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v52 aaDeviceRecordsRemovedWithRecords:v47.super.isa];

        swift_release();
        goto LABEL_55;
      }
    }
    return swift_release();
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  specialized ContiguousArray.reserveCapacity(_:)();
  swift_bridgeObjectRetain();
  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_52;
  }
LABEL_37:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  swift_release();
  uint64_t v58 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  swift_release();
  uint64_t result = (uint64_t)sub_10013DAB4(a1);
  if (result)
  {
    swift_beginAccess();
    uint64_t v43 = swift_unknownObjectWeakLoadStrong();
    if (!v43) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v44 = (void *)v43;
    uint64_t v45 = swift_unknownObjectWeakLoadStrong();
    if (!v45)
    {

      return swift_bridgeObjectRelease();
    }
    uint64_t v46 = (void *)v45;
    v47.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v46 hmDeviceCloudRecordsRemovedWithRecords:v47.super.isa];

    swift_bridgeObjectRelease();
LABEL_55:

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100152518(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v50 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v51 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeviceRecord();
  uint64_t v52 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AAProxCardsRecord();
  swift_bridgeObjectRetain();
  uint64_t v12 = Array.description.getter();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_1000AA5E0();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v15)
  {
    uint64_t v16 = v15;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (void *)Strong;
      uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v19)
      {
        unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v20 = *(void *)(v16 + 16);
        if (v20)
        {
          uint64_t v21 = v16 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
          uint64_t v22 = *(void *)(v52 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v21 += v22;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        v31.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v19 allDevicesRemovedWithRecords:v31.super.isa];
LABEL_34:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v23)
  {
    uint64_t v24 = v23;
    swift_beginAccess();
    uint64_t v25 = swift_unknownObjectWeakLoadStrong();
    if (v25)
    {
      uint64_t v26 = (void *)v25;
      uint64_t v27 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v27)
      {
        unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v28 = *(void *)(v24 + 16);
        if (v28)
        {
          uint64_t v29 = v24 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
          uint64_t v30 = *(void *)(v51 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v29, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v29 += v30;
            --v28;
          }
          while (v28);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v31.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v27 allDeviceSupportInformationRecordsRemovedWithRecords:v31.super.isa];
        goto LABEL_34;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v32)
  {
    uint64_t v33 = v32;
    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v36)
      {
        unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v37 = *(void *)(v33 + 16);
        if (v37)
        {
          uint64_t v38 = v33 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
          uint64_t v39 = *(void *)(v50 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v38, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            sub_1000CE96C();
            sub_1001AEFFC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v38 += v39;
            --v37;
          }
          while (v37);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v36 allMagicPairingRecordsRemovedWithRecords:isa];

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v54 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    specialized ContiguousArray.reserveCapacity(_:)();
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v43) {
      goto LABEL_39;
    }
LABEL_50:
    swift_beginAccess();
    uint64_t v44 = swift_unknownObjectWeakLoadStrong();
    if (v44)
    {
      uint64_t v45 = (void *)v44;
      uint64_t v46 = swift_unknownObjectWeakLoadStrong();
      if (v46)
      {
        NSArray v47 = (void *)v46;
        type metadata accessor for AADeviceRecord();
        Class v48 = Array._bridgeToObjectiveC()().super.isa;
        [v47 aaDeviceRecordsRemovedWithRecords:v48];

        swift_release();
        return swift_unknownObjectRelease();
      }
    }
    return swift_release();
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_50;
  }
LABEL_39:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    goto LABEL_41;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_41:
    swift_release();
    if (sub_10013DAB4(a1))
    {
      swift_beginAccess();
      uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v41) {

      }
      return swift_bridgeObjectRelease();
    }
    uint64_t v54 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a1 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_100152E08(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v50 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v51 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DeviceRecord();
  uint64_t v52 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a2 + 16;
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
  type metadata accessor for AADeviceRecord();
  swift_bridgeObjectRetain();
  uint64_t v14 = Array.description.getter();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_1000AA5E0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_10019091C);
  if (v17)
  {
    uint64_t v18 = v17;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v20 = (void *)Strong;
      uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v21)
      {
        unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v22 = *(void *)(v18 + 16);
        if (v22)
        {
          uint64_t v23 = v18 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
          uint64_t v24 = *(void *)(v52 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v23 += v24;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v21 allDevicesRemovedWithRecords:v33.super.isa, v50];
LABEL_40:

        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908E0);
  if (v25)
  {
    uint64_t v26 = v25;
    swift_beginAccess();
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();
    if (v27)
    {
      uint64_t v28 = (void *)v27;
      uint64_t v29 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v29)
      {
        unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v30 = *(void *)(v26 + 16);
        if (v30)
        {
          uint64_t v31 = v26 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80));
          uint64_t v32 = *(void *)(v51 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v31, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v31 += v32;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v29 allDeviceSupportInformationRecordsRemovedWithRecords:v33.super.isa, v50];
        goto LABEL_40;
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v34 = sub_10013D998(a1, (void (*)(void, uint64_t, void))sub_1001908A4);
  if (v34)
  {
    uint64_t v35 = v34;
    swift_beginAccess();
    uint64_t v36 = swift_unknownObjectWeakLoadStrong();
    if (v36)
    {
      uint64_t v37 = (void *)v36;
      uint64_t v38 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v38)
      {
        unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v39 = *(void *)(v35 + 16);
        if (v39)
        {
          uint64_t v40 = v35 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
          uint64_t v41 = *(void *)(v50 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v40, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            sub_1000CE96C();
            sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v40 += v41;
            --v39;
          }
          while (v39);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v38 allMagicPairingRecordsRemovedWithRecords:v33.super.isa, v50];
        goto LABEL_40;
      }
    }
    return swift_bridgeObjectRelease();
  }
  if (sub_10013DAB4(a1))
  {
    swift_beginAccess();
    uint64_t v42 = swift_unknownObjectWeakLoadStrong();
    if (v42)
    {
      uint64_t v43 = (void *)v42;
      uint64_t v44 = swift_unknownObjectWeakLoadStrong();
      if (v44)
      {
        uint64_t v45 = (void *)v44;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v45 aaDeviceRecordsRemovedWithRecords:isa];

        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v55 = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_43;
    }
LABEL_51:
    swift_beginAccess();
    uint64_t v49 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v49) {

    }
    return swift_release();
  }
  swift_bridgeObjectRetain();
  _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  specialized ContiguousArray.reserveCapacity(_:)();
  swift_bridgeObjectRetain();
  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v48) {
    goto LABEL_51;
  }
LABEL_43:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
LABEL_45:
    swift_release();
    uint64_t v55 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((a1 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

void *sub_1001536F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v52 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v53 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeviceRecord();
  uint64_t v54 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261940 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001CFDB0;
  swift_bridgeObjectRetain();
  uint64_t v12 = Array.description.getter();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_1000AA5E0();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_10013DF34(a1, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (void (*)(BOOL, unint64_t, uint64_t))sub_10019091C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v15)
  {
    uint64_t v16 = v15;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (void *)Strong;
      uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v19)
      {
        unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v20 = v16[2];
        if (v20)
        {
          uint64_t v21 = (uint64_t)v16
              + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
          uint64_t v22 = *(void *)(v54 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v21, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            sub_1000C50F4();
            sub_1001AEFFC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v21 += v22;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_100263B50);
        v31.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v19 allDevicesRemovedWithRecords:v31.super.isa];
LABEL_34:

        return (void *)swift_unknownObjectRelease();
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908E0, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v23)
  {
    uint64_t v24 = v23;
    swift_beginAccess();
    uint64_t v25 = swift_unknownObjectWeakLoadStrong();
    if (v25)
    {
      uint64_t v26 = (void *)v25;
      uint64_t v27 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v27)
      {
        unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v28 = v24[2];
        if (v28)
        {
          uint64_t v29 = (uint64_t)v24
              + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
          uint64_t v30 = *(void *)(v53 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v29, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            sub_1000C9E80();
            sub_1001AEFFC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v29 += v30;
            --v28;
          }
          while (v28);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, &qword_1002623E0);
        v31.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v27 allDeviceSupportInformationRecordsRemovedWithRecords:v31.super.isa];
        goto LABEL_34;
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_10013DC2C(a1, (uint64_t *)&unk_100263A10, (void (*)(void, uint64_t, void, __n128))sub_1001908A4, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v32)
  {
    NSArray v33 = v32;
    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      uint64_t v36 = (void *)swift_unknownObjectWeakLoadStrong();

      if (v36)
      {
        unint64_t v55 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v37 = v33[2];
        if (v37)
        {
          uint64_t v38 = (uint64_t)v33
              + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
          uint64_t v39 = *(void *)(v52 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_1001AEF94(v38, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            sub_1000CE96C();
            sub_1001AEFFC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            v38 += v39;
            --v37;
          }
          while (v37);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v36 allMagicPairingRecordsRemovedWithRecords:isa];

        return (void *)swift_unknownObjectRelease();
      }
    }
    return (void *)swift_bridgeObjectRelease();
  }
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
  {
    swift_beginAccess();
    uint64_t v41 = swift_unknownObjectWeakLoadStrong();
    if (!v41) {
      return (void *)swift_bridgeObjectRelease();
    }
    uint64_t v42 = (void *)v41;
    uint64_t v43 = swift_unknownObjectWeakLoadStrong();
    if (v43)
    {
      uint64_t v44 = (void *)v43;
      type metadata accessor for AADeviceRecord();
      v45.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v44 aaDeviceRecordsRemovedWithRecords:v45.super.isa];
LABEL_41:

      swift_bridgeObjectRelease();
      return (void *)swift_unknownObjectRelease();
    }
    goto LABEL_51;
  }
  if (sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord))
  {
    swift_beginAccess();
    NSArray v47 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v47) {

    }
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t result = sub_10013DDCC(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (result)
  {
    swift_beginAccess();
    uint64_t v48 = swift_unknownObjectWeakLoadStrong();
    if (!v48) {
      return (void *)swift_bridgeObjectRelease();
    }
    uint64_t v42 = (void *)v48;
    uint64_t v49 = swift_unknownObjectWeakLoadStrong();
    if (v49)
    {
      uint64_t v50 = (void *)v49;
      type metadata accessor for HMDeviceCloudRecord();
      v45.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v50 hmDeviceCloudRecordsRemovedWithRecords:v45.super.isa];
      goto LABEL_41;
    }
LABEL_51:

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_100154098(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_100190FBC(a1, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001910B4);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v8 = (unint64_t)sub_1001910B4(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      uint64_t v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_10015430C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_100191330(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = sub_100190FBC(result, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_100191330);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_100154570()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for AADeviceRecord();
  sub_100197224(&qword_1002633F8, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v0)
  {
    swift_release();
    static os_log_type_t.error.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
    sub_1000AA024(&qword_100263A90);
    uint64_t v2 = String.init<A>(describing:)();
    uint64_t v4 = v3;
    *(void *)(v1 + 56) = &type metadata for String;
    unint64_t v5 = sub_1000AA5E0();
    *(void *)(v1 + 64) = v5;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v4;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v1 + 96) = &type metadata for String;
    *(void *)(v1 + 104) = v5;
    *(void *)(v1 + 72) = v6;
    *(void *)(v1 + 80) = v7;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    swift_release();
    return v9;
  }
}

uint64_t sub_100154768()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for DeviceRecord();
  sub_100197224((unint64_t *)&unk_100261B30, (void (*)(uint64_t))type metadata accessor for DeviceRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024(&qword_100263A58);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_10015495C()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for DeviceSupportInformationRecord();
  sub_100197224(&qword_100263A70, (void (*)(uint64_t))type metadata accessor for DeviceSupportInformationRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024(&qword_100263A78);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_100154B50()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for MagicPairingSettingsRecord();
  sub_100197224(&qword_100263A60, (void (*)(uint64_t))type metadata accessor for MagicPairingSettingsRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024(&qword_100263A68);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_100154D44()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for SoundProfileRecord();
  sub_100197224(&qword_100261FA0, (void (*)(uint64_t))type metadata accessor for SoundProfileRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024((uint64_t *)&unk_100263C60);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_100154F38()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for AAProxCardsRecord();
  sub_100197224((unint64_t *)&unk_100261E10, (void (*)(uint64_t))type metadata accessor for AAProxCardsRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v0)
  {
    swift_release();
    static os_log_type_t.error.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
    sub_1000AA024(&qword_100263AA8);
    uint64_t v2 = String.init<A>(describing:)();
    uint64_t v4 = v3;
    *(void *)(v1 + 56) = &type metadata for String;
    unint64_t v5 = sub_1000AA5E0();
    *(void *)(v1 + 64) = v5;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v4;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v1 + 96) = &type metadata for String;
    *(void *)(v1 + 104) = v5;
    *(void *)(v1 + 72) = v6;
    *(void *)(v1 + 80) = v7;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    swift_release();
    return v9;
  }
}

uint64_t sub_100155130()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for HMDeviceCloudRecord();
  sub_100197224(&qword_1002628E0, (void (*)(uint64_t))type metadata accessor for HMDeviceCloudRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v0)
  {
    swift_release();
    static os_log_type_t.error.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
    sub_1000AA024((uint64_t *)&unk_100263AC0);
    uint64_t v2 = String.init<A>(describing:)();
    uint64_t v4 = v3;
    *(void *)(v1 + 56) = &type metadata for String;
    unint64_t v5 = sub_1000AA5E0();
    *(void *)(v1 + 64) = v5;
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v4;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v1 + 96) = &type metadata for String;
    *(void *)(v1 + 104) = v5;
    *(void *)(v1 + 72) = v6;
    *(void *)(v1 + 80) = v7;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_willThrow();
  }
  else
  {
    swift_release();
    return v9;
  }
}

uint64_t sub_100155328()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for CloudCoordinatorConfiguration();
  sub_100197224(&qword_1002627D0, (void (*)(uint64_t))type metadata accessor for CloudCoordinatorConfiguration);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024((uint64_t *)&unk_100263CC0);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_10015551C()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for LegacyMagicPairingSettingsRecords();
  sub_100197224(&qword_100262C08, (void (*)(uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024((uint64_t *)&unk_100263C70);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_100155710()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for LegacyAccountMagicKeysRecord();
  sub_100197224(&qword_100263BB0, (void (*)(uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024(&qword_100263BB8);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

uint64_t sub_100155904()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  type metadata accessor for BTDeferredRecord();
  sub_100197224(&qword_100263C80, (void (*)(uint64_t))type metadata accessor for BTDeferredRecord);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (!v0) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001D0A20;
  sub_1000AA024(&qword_100263C88);
  uint64_t v2 = String.init<A>(describing:)();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v1 + 64) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v1 + 96) = &type metadata for String;
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 72) = v6;
  *(void *)(v1 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_willThrow();
}

void sub_100155AF8(char *a1, char *a2)
{
  uint64_t v74 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v75 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v77 = (char *)v61 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v61 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v61 - v17;
  if ([self isFirstUnlocked])
  {
    uint64_t v71 = v10;
    uint64_t v72 = v5;
    *(void *)&long long v76 = v7;
    v78[0] = a2;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for AADeviceRecord();
    unsigned int v20 = a2;
    sub_100197224(&qword_100263400, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
    uint64_t v21 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v73 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v24 = v21;
      unint64_t v25 = v22;
      unint64_t v69 = v20;
      uint64_t v65 = v4;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v24, v25);
      uint64_t v26 = &v74[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      if (qword_100261918 != -1) {
        swift_once();
      }
      uint64_t v27 = v76;
      uint64_t v28 = (char *)sub_1000AA0CC(v76, (uint64_t)qword_10026AD60);
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      uint64_t v74 = v28;
      uint64_t v68 = v8 + 16;
      uint64_t v67 = v29;
      ((void (*)(char *))v29)(v15);
      URL.path.getter();
      uint64_t v62 = v8;
      uint64_t v30 = v8 + 8;
      NSArray v31 = *(void (**)(char *, uint64_t))(v8 + 8);
      v31(v15, v27);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = v26;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v31(v18, v27);
      UUID.uuidString.getter();
      v67(v18, v74, v27);
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      v31(v15, v76);
      NSArray v33 = v32;
      uint64_t v34 = v76;
      swift_bridgeObjectRelease();
      v31(v18, v34);
      BOOL v79 = &type metadata for AudioAccessoryFeatures;
      unint64_t v35 = sub_1000AE4C4();
      unint64_t v80 = v35;
      char v36 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v78);
      uint64_t v64 = v30;
      uint64_t v63 = v31;
      if (v36)
      {
        uint64_t v37 = v69;
        v61[1] = *(void *)&v69[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
        v67(v15, v74, v34);
        uint64_t v74 = v37;
        URL.path.getter();
        uint64_t v39 = v71;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        URL.appendingPathComponent(_:)();
        v31(v39, v76);
        uint64_t v40 = v38;
        uint64_t v34 = v76;
        v31(v15, v34);
        uint64_t v41 = v77;
        v31(v77, v34);

        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v41, v18, v34);
        uint64_t v42 = v65;
      }
      else
      {
        BOOL v79 = &type metadata for AudioAccessoryFeatures;
        unint64_t v80 = v35;
        isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)v78);
        uint64_t v42 = v65;
        uint64_t v41 = v77;
      }
      uint64_t v43 = v75;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      uint64_t v44 = v41;
      URL._bridgeToObjectiveC()(v45);
      NSArray v47 = v46;
      [(objc_class *)isa writeToURL:v46 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v48 = swift_allocObject();
      long long v76 = xmmword_1001CFDB0;
      *(_OWORD *)(v48 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v51 = v50;
      *(void *)(v48 + 56) = &type metadata for String;
      *(void *)(v48 + 64) = sub_1000AA5E0();
      *(void *)(v48 + 32) = v49;
      *(void *)(v48 + 40) = v51;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v76;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v53 = NSFileProtectionKey;
      uint64_t v54 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v55 = sub_1000AF5A0(inited);
      id v56 = [self defaultManager];
      sub_10015C6F8(v55);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v78[0] = 0;
      LODWORD(v51) = [v56 setAttributes:v57 ofItemAtPath:v58 error:v78];

      if (v51)
      {
        id v59 = v78[0];
        URL.setResourceValues(_:)();
      }
      else
      {
        id v60 = v78[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }

      (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v42);
      v63(v44, v34);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v23 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_10015650C(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v61 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v54 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v54 - v15;
  if ([self isFirstUnlocked])
  {
    id v59 = v10;
    id v60 = v7;
    uint64_t v57 = v5;
    uint64_t v58 = v4;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for CloudCoordinatorConfiguration();
    sub_100197224(&qword_1002627D8, (void (*)(uint64_t))type metadata accessor for CloudCoordinatorConfiguration);
    uint64_t v18 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v21 = v18;
      unint64_t v22 = v19;
      v54[1] = a2;
      uint64_t v56 = 0;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v21, v22);
      *(void *)&long long v61 = v61 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
      if (qword_1002618A0 != -1) {
        swift_once();
      }
      uint64_t v23 = v8;
      uint64_t v24 = sub_1000AA0CC(v8, (uint64_t)qword_10026AC10);
      uint64_t v25 = v62;
      v54[0] = *(void *)(v62 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v13, v24, v23);
      URL.path.getter();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v26 = v25 + 8;
      uint64_t v27 = v28;
      v28(v13, v23);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v27(v16, v23);
      uint64_t v62 = UUID.uuidString.getter();
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v16, v24, v23);
      uint64_t v29 = v26;
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      v27(v13, v23);
      swift_bridgeObjectRelease();
      NSArray v31 = v16;
      uint64_t v62 = v29;
      uint64_t v32 = v27;
      v27(v31, v23);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v33 = sub_1000AE4C4();
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v34);
      char v36 = v35;
      Class v37 = isa;
      [(objc_class *)isa writeToURL:v35 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v38 = swift_allocObject();
      long long v61 = xmmword_1001CFDB0;
      *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = v40;
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_1000AA5E0();
      *(void *)(v38 + 32) = v39;
      *(void *)(v38 + 40) = v41;
      uint64_t v42 = v59;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v61;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v44 = NSFileProtectionKey;
      NSArray v45 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v46 = sub_1000AF5A0(inited);
      id v47 = [self defaultManager];
      sub_10015C6F8(v46);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v48 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v63[0] = 0;
      LOBYTE(v41) = [v47 setAttributes:v48 ofItemAtPath:v49 error:v63];

      if (v41)
      {
        id v50 = v63[0];
        uint64_t v51 = v60;
        URL.setResourceValues(_:)();
        uint64_t v52 = v57;

        (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v58);
      }
      else
      {
        id v53 = v63[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      }
      v32(v42, v23);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v20 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_100156DA0(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v61 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v54 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v54 - v15;
  if ([self isFirstUnlocked])
  {
    id v59 = v10;
    id v60 = v7;
    uint64_t v57 = v5;
    uint64_t v58 = v4;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for LegacyAccountMagicKeysRecord();
    sub_100197224(&qword_1002621C0, (void (*)(uint64_t))type metadata accessor for LegacyAccountMagicKeysRecord);
    uint64_t v18 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v21 = v18;
      unint64_t v22 = v19;
      v54[1] = a2;
      uint64_t v56 = 0;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v21, v22);
      *(void *)&long long v61 = v61 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
      if (qword_100261878 != -1) {
        swift_once();
      }
      uint64_t v23 = v8;
      uint64_t v24 = sub_1000AA0CC(v8, (uint64_t)qword_10026AB68);
      uint64_t v25 = v62;
      v54[0] = *(void *)(v62 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v13, v24, v23);
      URL.path.getter();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v26 = v25 + 8;
      uint64_t v27 = v28;
      v28(v13, v23);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v27(v16, v23);
      uint64_t v62 = UUID.uuidString.getter();
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v16, v24, v23);
      uint64_t v29 = v26;
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      v27(v13, v23);
      swift_bridgeObjectRelease();
      NSArray v31 = v16;
      uint64_t v62 = v29;
      uint64_t v32 = v27;
      v27(v31, v23);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v33 = sub_1000AE4C4();
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v34);
      char v36 = v35;
      Class v37 = isa;
      [(objc_class *)isa writeToURL:v35 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v38 = swift_allocObject();
      long long v61 = xmmword_1001CFDB0;
      *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = v40;
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_1000AA5E0();
      *(void *)(v38 + 32) = v39;
      *(void *)(v38 + 40) = v41;
      uint64_t v42 = v59;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v61;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v44 = NSFileProtectionKey;
      NSArray v45 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v46 = sub_1000AF5A0(inited);
      id v47 = [self defaultManager];
      sub_10015C6F8(v46);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v48 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v63[0] = 0;
      LOBYTE(v41) = [v47 setAttributes:v48 ofItemAtPath:v49 error:v63];

      if (v41)
      {
        id v50 = v63[0];
        uint64_t v51 = v60;
        URL.setResourceValues(_:)();
        uint64_t v52 = v57;

        (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v58);
      }
      else
      {
        id v53 = v63[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      }
      v32(v42, v23);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v20 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_100157634(char *a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeviceRecord();
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  *(void *)&long long v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v76 = (char *)&v61 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v61 - v15;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v61 - v18;
  if ([self isFirstUnlocked])
  {
    uint64_t v77 = v10;
    unint64_t v69 = v7;
    uint64_t v70 = v5;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_100197224((unint64_t *)&unk_100263C10, (void (*)(uint64_t))type metadata accessor for DeviceRecord);
    uint64_t v21 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v71 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v24 = v21;
      unint64_t v25 = v22;
      uint64_t v68 = a2;
      swift_release();
      v26.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v24, v25);
      uint64_t v27 = &v72[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      if (qword_100261850 != -1) {
        swift_once();
      }
      Class isa = v26.super.isa;
      uint64_t v65 = v4;
      uint64_t v28 = v77;
      uint64_t v29 = (char *)sub_1000AA0CC(v77, (uint64_t)qword_10026AAE0);
      uint64_t v30 = v75;
      NSArray v31 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
      uint64_t v72 = v29;
      uint64_t v67 = v75 + 16;
      uint64_t v63 = v31;
      ((void (*)(char *))v31)(v16);
      URL.path.getter();
      uint64_t v34 = *(char **)(v30 + 8);
      uint64_t v33 = v30 + 8;
      uint64_t v32 = v34;
      ((void (*)(char *, uint64_t))v34)(v16, v28);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = v27;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v28);
      uint64_t v62 = (uint64_t (*)(void))UUID.uuidString.getter();
      unint64_t v35 = v63;
      v63(v19, v72, v28);
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v77);
      uint64_t v62 = (uint64_t (*)(void))type metadata accessor for DeviceRecord;
      uint64_t v36 = v74;
      sub_1001AEF94(v68, v74, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      uint64_t v68 = *(void *)(v36 + *(int *)(v8 + 24));
      v35(v16, v72, v77);
      swift_bridgeObjectRetain();
      URL.path.getter();
      Class v37 = v73;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v37, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      uint64_t v38 = v77;
      sub_1001AEFFC(v36, v62);
      uint64_t v39 = v76;
      uint64_t v73 = v32;
      uint64_t v74 = v33;
      ((void (*)(char *, uint64_t))v32)(v76, v38);
      uint64_t v40 = v19;
      uint64_t v41 = v39;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v39, v40, v38);
      uint64_t v42 = v69;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v43);
      NSArray v45 = v44;
      Class v46 = isa;
      [(objc_class *)isa writeToURL:v44 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v47 = swift_allocObject();
      long long v75 = xmmword_1001CFDB0;
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = v49;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = sub_1000AA5E0();
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v50;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v75;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v52 = NSFileProtectionKey;
      id v53 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v54 = sub_1000AF5A0(inited);
      id v55 = [self defaultManager];
      sub_10015C6F8(v54);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v78 = 0;
      LOBYTE(v54) = [v55 setAttributes:v56 ofItemAtPath:v57 error:&v78];

      uint64_t v58 = v65;
      if (v54)
      {
        id v59 = v78;
        URL.setResourceValues(_:)();
      }
      else
      {
        id v60 = v78;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }

      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v58);
      ((void (*)(char *, uint64_t))v73)(v41, v38);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v23 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_100158030(char *a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DeviceSupportInformationRecord();
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  *(void *)&long long v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v76 = (char *)&v61 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v61 - v15;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v61 - v18;
  if ([self isFirstUnlocked])
  {
    uint64_t v77 = v10;
    unint64_t v69 = v7;
    uint64_t v70 = v5;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_100197224(&qword_100262AC0, (void (*)(uint64_t))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v21 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v71 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v24 = v21;
      unint64_t v25 = v22;
      uint64_t v68 = a2;
      swift_release();
      v26.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v24, v25);
      uint64_t v27 = &v72[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      if (qword_1002618E8 != -1) {
        swift_once();
      }
      Class isa = v26.super.isa;
      uint64_t v65 = v4;
      uint64_t v28 = v77;
      uint64_t v29 = (char *)sub_1000AA0CC(v77, (uint64_t)qword_10026AD20);
      uint64_t v30 = v75;
      NSArray v31 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
      uint64_t v72 = v29;
      uint64_t v67 = v75 + 16;
      uint64_t v63 = v31;
      ((void (*)(char *))v31)(v16);
      URL.path.getter();
      uint64_t v34 = *(char **)(v30 + 8);
      uint64_t v33 = v30 + 8;
      uint64_t v32 = v34;
      ((void (*)(char *, uint64_t))v34)(v16, v28);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = v27;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v28);
      uint64_t v62 = (uint64_t (*)(void))UUID.uuidString.getter();
      unint64_t v35 = v63;
      v63(v19, v72, v28);
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v77);
      uint64_t v62 = (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord;
      uint64_t v36 = v74;
      sub_1001AEF94(v68, v74, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      uint64_t v68 = *(void *)(v36 + *(int *)(v8 + 24));
      v35(v16, v72, v77);
      swift_bridgeObjectRetain();
      URL.path.getter();
      Class v37 = v73;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v37, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      uint64_t v38 = v77;
      sub_1001AEFFC(v36, v62);
      uint64_t v39 = v76;
      uint64_t v73 = v32;
      uint64_t v74 = v33;
      ((void (*)(char *, uint64_t))v32)(v76, v38);
      uint64_t v40 = v19;
      uint64_t v41 = v39;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v39, v40, v38);
      uint64_t v42 = v69;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v43);
      NSArray v45 = v44;
      Class v46 = isa;
      [(objc_class *)isa writeToURL:v44 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v47 = swift_allocObject();
      long long v75 = xmmword_1001CFDB0;
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = v49;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = sub_1000AA5E0();
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v50;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v75;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v52 = NSFileProtectionKey;
      id v53 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v54 = sub_1000AF5A0(inited);
      id v55 = [self defaultManager];
      sub_10015C6F8(v54);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v78 = 0;
      LOBYTE(v54) = [v55 setAttributes:v56 ofItemAtPath:v57 error:&v78];

      uint64_t v58 = v65;
      if (v54)
      {
        id v59 = v78;
        URL.setResourceValues(_:)();
      }
      else
      {
        id v60 = v78;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }

      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v58);
      ((void (*)(char *, uint64_t))v73)(v41, v38);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v23 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_100158A24(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v61 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v62 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v54 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v54 - v15;
  if ([self isFirstUnlocked])
  {
    id v59 = v10;
    id v60 = v7;
    uint64_t v57 = v5;
    uint64_t v58 = v4;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for LegacyMagicPairingSettingsRecords();
    sub_100197224(&qword_100262C10, (void (*)(uint64_t))type metadata accessor for LegacyMagicPairingSettingsRecords);
    uint64_t v18 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v21 = v18;
      unint64_t v22 = v19;
      v54[1] = a2;
      uint64_t v56 = 0;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v21, v22);
      *(void *)&long long v61 = v61 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
      if (qword_1002618F0 != -1) {
        swift_once();
      }
      uint64_t v23 = v8;
      uint64_t v24 = sub_1000AA0CC(v8, (uint64_t)qword_10026AD38);
      uint64_t v25 = v62;
      v54[0] = *(void *)(v62 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v13, v24, v23);
      URL.path.getter();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      uint64_t v26 = v25 + 8;
      uint64_t v27 = v28;
      v28(v13, v23);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v27(v16, v23);
      uint64_t v62 = UUID.uuidString.getter();
      ((void (*)(char *, uint64_t, uint64_t))v54[0])(v16, v24, v23);
      uint64_t v29 = v26;
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      v27(v13, v23);
      swift_bridgeObjectRelease();
      NSArray v31 = v16;
      uint64_t v62 = v29;
      uint64_t v32 = v27;
      v27(v31, v23);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v33 = sub_1000AE4C4();
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      uint64_t v64 = &type metadata for AudioAccessoryFeatures;
      unint64_t v65 = v33;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v63);
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v34);
      uint64_t v36 = v35;
      Class v37 = isa;
      [(objc_class *)isa writeToURL:v35 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v38 = swift_allocObject();
      long long v61 = xmmword_1001CFDB0;
      *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = v40;
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_1000AA5E0();
      *(void *)(v38 + 32) = v39;
      *(void *)(v38 + 40) = v41;
      uint64_t v42 = v59;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v61;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v44 = NSFileProtectionKey;
      NSArray v45 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v46 = sub_1000AF5A0(inited);
      id v47 = [self defaultManager];
      sub_10015C6F8(v46);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v48 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v63[0] = 0;
      LOBYTE(v41) = [v47 setAttributes:v48 ofItemAtPath:v49 error:v63];

      if (v41)
      {
        id v50 = v63[0];
        uint64_t v51 = v60;
        URL.setResourceValues(_:)();
        uint64_t v52 = v57;

        (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v58);
      }
      else
      {
        id v53 = v63[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v58);
      }
      v32(v42, v23);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v20 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_1001592B8(char *a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MagicPairingSettingsRecord();
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  *(void *)&long long v75 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v76 = (char *)&v61 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v61 - v15;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v61 - v18;
  if ([self isFirstUnlocked])
  {
    uint64_t v77 = v10;
    unint64_t v69 = v7;
    uint64_t v70 = v5;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_100197224(&qword_100262550, (void (*)(uint64_t))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v21 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v71 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v24 = v21;
      unint64_t v25 = v22;
      uint64_t v68 = a2;
      swift_release();
      v26.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v24, v25);
      uint64_t v27 = &v72[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      if (qword_100261890 != -1) {
        swift_once();
      }
      Class isa = v26.super.isa;
      uint64_t v65 = v4;
      uint64_t v28 = v77;
      uint64_t v29 = (char *)sub_1000AA0CC(v77, (uint64_t)qword_10026AB90);
      uint64_t v30 = v75;
      NSArray v31 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
      uint64_t v72 = v29;
      uint64_t v67 = v75 + 16;
      uint64_t v63 = v31;
      ((void (*)(char *))v31)(v16);
      URL.path.getter();
      uint64_t v34 = *(char **)(v30 + 8);
      uint64_t v33 = v30 + 8;
      uint64_t v32 = v34;
      ((void (*)(char *, uint64_t))v34)(v16, v28);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = v27;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v28);
      uint64_t v62 = (uint64_t (*)(void))UUID.uuidString.getter();
      unint64_t v35 = v63;
      v63(v19, v72, v28);
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v19, v77);
      uint64_t v62 = (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord;
      uint64_t v36 = v74;
      sub_1001AEF94(v68, v74, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      uint64_t v68 = *(void *)(v36 + *(int *)(v8 + 24));
      v35(v16, v72, v77);
      swift_bridgeObjectRetain();
      URL.path.getter();
      Class v37 = v73;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v32)(v37, v77);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v32)(v16, v77);
      uint64_t v38 = v77;
      sub_1001AEFFC(v36, v62);
      uint64_t v39 = v76;
      uint64_t v73 = v32;
      uint64_t v74 = v33;
      ((void (*)(char *, uint64_t))v32)(v76, v38);
      uint64_t v40 = v19;
      uint64_t v41 = v39;
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v39, v40, v38);
      uint64_t v42 = v69;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v43);
      NSArray v45 = v44;
      Class v46 = isa;
      [(objc_class *)isa writeToURL:v44 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v47 = swift_allocObject();
      long long v75 = xmmword_1001CFDB0;
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = v49;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = sub_1000AA5E0();
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v50;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v75;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v52 = NSFileProtectionKey;
      id v53 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v54 = sub_1000AF5A0(inited);
      id v55 = [self defaultManager];
      sub_10015C6F8(v54);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v78 = 0;
      LOBYTE(v54) = [v55 setAttributes:v56 ofItemAtPath:v57 error:&v78];

      uint64_t v58 = v65;
      if (v54)
      {
        id v59 = v78;
        URL.setResourceValues(_:)();
      }
      else
      {
        id v60 = v78;
        _convertNSErrorToError(_:)();

        swift_willThrow();
      }

      (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v58);
      ((void (*)(char *, uint64_t))v73)(v41, v38);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v23 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_100159CAC(char *a1, uint64_t a2)
{
  id v60 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  long long v61 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v51 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - v15;
  if ([self isFirstUnlocked])
  {
    uint64_t v57 = v4;
    uint64_t v58 = v7;
    *(void *)&long long v55 = v9;
    uint64_t v56 = v5;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for SoundProfileRecord();
    sub_100197224(&qword_100263B90, (void (*)(uint64_t))type metadata accessor for SoundProfileRecord);
    uint64_t v18 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v59 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v21 = v18;
      unint64_t v22 = v19;
      uint64_t v53 = a2;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v21, v22);
      v60 += OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
      if (qword_100261868 != -1) {
        swift_once();
      }
      uint64_t v23 = v8;
      uint64_t v24 = sub_1000AA0CC(v8, (uint64_t)qword_10026AB38);
      uint64_t v25 = v55;
      NSData v26 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      uint64_t v52 = v24;
      uint64_t v51 = v26;
      ((void (*)(char *))v26)(v13);
      URL.path.getter();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v25 + 8);
      v27(v13, v23);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v27(v16, v23);
      UUID.uuidString.getter();
      v51(v16, v52, v23);
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v28 = v61;
      URL.appendingPathComponent(_:)();
      v27(v13, v23);
      swift_bridgeObjectRelease();
      id v60 = (char *)v27;
      v27(v16, v23);
      uint64_t v29 = v28;
      uint64_t v63 = &type metadata for AudioAccessoryFeatures;
      unint64_t v30 = sub_1000AE4C4();
      unint64_t v64 = v30;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v62);
      uint64_t v63 = &type metadata for AudioAccessoryFeatures;
      unint64_t v64 = v30;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v62);
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v31);
      uint64_t v33 = v32;
      Class v34 = isa;
      [(objc_class *)isa writeToURL:v32 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v35 = swift_allocObject();
      long long v55 = xmmword_1001CFDB0;
      *(_OWORD *)(v35 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v38 = v37;
      *(void *)(v35 + 56) = &type metadata for String;
      *(void *)(v35 + 64) = sub_1000AA5E0();
      *(void *)(v35 + 32) = v36;
      *(void *)(v35 + 40) = v38;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v55;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v40 = NSFileProtectionKey;
      uint64_t v41 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v42 = sub_1000AF5A0(inited);
      id v43 = [self defaultManager];
      sub_10015C6F8(v42);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v62[0] = 0;
      LOBYTE(v42) = [v43 setAttributes:v44 ofItemAtPath:v45 error:v62];

      if (v42)
      {
        id v46 = v62[0];
        uint64_t v47 = v58;
        URL.setResourceValues(_:)();
        uint64_t v48 = v56;
        uint64_t v49 = (void (*)(char *, uint64_t))v60;

        (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v57);
        v49(v29, v23);
      }
      else
      {
        id v50 = v62[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
        ((void (*)(char *, uint64_t))v60)(v29, v23);
      }
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v20 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_10015A570(uint64_t a1, void *a2)
{
  uint64_t v74 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  *(void *)&long long v75 = (char *)&v61 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v61 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v61 - v17;
  if ([self isFirstUnlocked])
  {
    unint64_t v69 = v7;
    uint64_t v70 = v5;
    uint64_t v71 = v4;
    v76[0] = a2;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for AAProxCardsRecord();
    sub_100197224((unint64_t *)&unk_100263C20, (void (*)(uint64_t))type metadata accessor for AAProxCardsRecord);
    uint64_t v20 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v72 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v23 = v20;
      unint64_t v24 = v21;
      id v67 = a2;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v23, v24);
      uint64_t v25 = v74 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
      if (qword_100261860 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1000AA0CC(v8, (uint64_t)qword_10026AB00);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v66 = v9 + 16;
      uint64_t v65 = v27;
      v27(v15, v26, v8);
      URL.path.getter();
      uint64_t v62 = v9;
      uint64_t v29 = v9 + 8;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v15, v8);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v64 = v25;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v28(v18, v8);
      uint64_t v74 = UUID.uuidString.getter();
      v65(v18, v26, v8);
      uint64_t v61 = v26;
      NSArray v31 = v30;
      URL.path.getter();
      uint64_t v32 = v8;
      uint64_t v33 = v29;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      Class v34 = (char *)v75;
      URL.appendingPathComponent(_:)();
      v28(v15, v32);
      swift_bridgeObjectRelease();
      uint64_t v74 = v33;
      uint64_t v68 = v28;
      v28(v18, v32);
      uint64_t v35 = v32;
      uint64_t v77 = &type metadata for AudioAccessoryFeatures;
      unint64_t v36 = sub_1000AE4C4();
      unint64_t v78 = v36;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v76);
      uint64_t v77 = &type metadata for AudioAccessoryFeatures;
      unint64_t v78 = v36;
      LOBYTE(v36) = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v76);
      if (v36)
      {
        id v37 = v67;
        v65(v15, v61, v32);
        id v67 = v37;
        URL.path.getter();
        uint64_t v39 = v73;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        URL.appendingPathComponent(_:)();
        uint64_t v40 = v68;
        v68(v39, v35);
        uint64_t v41 = v38;
        Class v34 = (char *)v75;
        v40(v15, v35);
        v40(v34, v35);

        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v34, v18, v35);
      }
      unint64_t v42 = v69;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v43);
      NSString v45 = v44;
      Class v46 = isa;
      [(objc_class *)isa writeToURL:v44 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v47 = swift_allocObject();
      long long v75 = xmmword_1001CFDB0;
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = v49;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = sub_1000AA5E0();
      *(void *)(v47 + 32) = v48;
      *(void *)(v47 + 40) = v50;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v75;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v52 = NSFileProtectionKey;
      uint64_t v53 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v54 = sub_1000AF5A0(inited);
      id v55 = [self defaultManager];
      sub_10015C6F8(v54);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v76[0] = 0;
      LODWORD(v54) = [v55 setAttributes:v56 ofItemAtPath:v57 error:v76];

      if (v54)
      {
        id v58 = v76[0];
        URL.setResourceValues(_:)();
        uint64_t v59 = v70;

        (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v71);
      }
      else
      {
        id v60 = v76[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v71);
      }
      v68(v34, v35);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v22 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_10015AF9C(char *a1, void *a2)
{
  uint64_t v72 = a1;
  uint64_t v4 = type metadata accessor for URLResourceValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v74 = (char *)v60 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v60 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v60 - v17;
  if ([self isFirstUnlocked])
  {
    uint64_t v68 = v7;
    uint64_t v69 = v5;
    uint64_t v70 = v4;
    v75[0] = a2;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for HMDeviceCloudRecord();
    sub_100197224(&qword_1002628E8, (void (*)(uint64_t))type metadata accessor for HMDeviceCloudRecord);
    uint64_t v20 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v71 = v2;
    if (v2)
    {
      swift_release();
    }
    else
    {
      uint64_t v23 = v20;
      unint64_t v24 = v21;
      *(void *)&long long v67 = a2;
      swift_release();
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_1000AA8F0(v23, v24);
      uint64_t v25 = &v72[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      if (qword_1002618E0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1000AA0CC(v8, (uint64_t)qword_10026AC28);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v72 = (char *)(v9 + 16);
      uint64_t v66 = v27;
      v27(v15, v26, v8);
      URL.path.getter();
      uint64_t v63 = v9;
      unint64_t v30 = *(char **)(v9 + 8);
      uint64_t v28 = (char *)(v9 + 8);
      uint64_t v29 = v30;
      ((void (*)(char *, uint64_t))v30)(v15, v8);
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v65 = v25;
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v29)(v18, v8);
      uint64_t v61 = UUID.uuidString.getter();
      v66(v18, v26, v8);
      uint64_t v32 = (void (*)(char *, uint64_t))v29;
      uint64_t v62 = v26;
      uint64_t v33 = v31;
      URL.path.getter();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      ((void (*)(char *, uint64_t))v29)(v15, v8);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v29)(v18, v8);
      long long v76 = &type metadata for AudioAccessoryFeatures;
      unint64_t v34 = sub_1000AE4C4();
      unint64_t v77 = v34;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v75);
      long long v76 = &type metadata for AudioAccessoryFeatures;
      unint64_t v77 = v34;
      isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v75);
      uint64_t v35 = (void *)v67;
      uint64_t v36 = *(void *)(v67 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8);
      uint64_t v61 = *(void *)(v67 + OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress);
      v60[1] = v36;
      v66(v15, v62, v8);
      *(void *)&long long v67 = v35;
      URL.path.getter();
      uint64_t v38 = v73;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      v32(v38, v8);
      uint64_t v39 = v37;
      uint64_t v40 = v74;
      v32(v15, v8);
      uint64_t v72 = (char *)v32;
      uint64_t v73 = v28;
      v32(v40, v8);

      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v40, v18, v8);
      uint64_t v41 = v68;
      URLResourceValues.init()();
      URLResourceValues.isExcludedFromBackup.setter();
      URL._bridgeToObjectiveC()(v42);
      Class v44 = v43;
      Class v45 = isa;
      [(objc_class *)isa writeToURL:v43 atomically:1];

      static os_log_type_t.default.getter();
      if (qword_100261950 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v46 = swift_allocObject();
      long long v67 = xmmword_1001CFDB0;
      *(_OWORD *)(v46 + 16) = xmmword_1001CFDB0;
      sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v49 = v48;
      *(void *)(v46 + 56) = &type metadata for String;
      *(void *)(v46 + 64) = sub_1000AA5E0();
      *(void *)(v46 + 32) = v47;
      *(void *)(v46 + 40) = v49;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000AA024((uint64_t *)&unk_100263B10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v67;
      *(void *)(inited + 32) = NSFileProtectionKey;
      *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
      uint64_t v51 = NSFileProtectionKey;
      uint64_t v52 = NSFileProtectionCompleteUntilFirstUserAuthentication;
      unint64_t v53 = sub_1000AF5A0(inited);
      id v54 = [self defaultManager];
      sub_10015C6F8(v53);
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
      Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      URL.path.getter();
      NSString v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v75[0] = 0;
      LODWORD(v53) = [v54 setAttributes:v55 ofItemAtPath:v56 error:v75];

      if (v53)
      {
        id v57 = v75[0];
        URL.setResourceValues(_:)();
        uint64_t v58 = v69;

        (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v70);
      }
      else
      {
        id v59 = v75[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v70);
      }
      ((void (*)(char *, uint64_t))v72)(v40, v8);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1000EB9B4();
    swift_allocError();
    void *v22 = 0x8000000000000010;
    swift_willThrow();
  }
}

void sub_10015B998(char *a1, void (*a2)(char *, uint64_t))
{
  uint64_t v106 = a2;
  char v99 = a1;
  uint64_t v3 = type metadata accessor for URLResourceValues();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v7);
  uint64_t v98 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v9 - 8);
  uint64_t v97 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v85 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v104 = v16;
  uint64_t v105 = v17;
  __chkstk_darwin(v16);
  uint64_t v96 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v95 = (char *)&v85 - v20;
  __chkstk_darwin(v21);
  uint64_t v101 = (char *)&v85 - v22;
  __chkstk_darwin(v23);
  Class v102 = (char *)&v85 - v24;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v85 - v26;
  __chkstk_darwin(v28);
  *(void *)&long long v103 = (char *)&v85 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v85 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v85 - v34;
  if ([self isFirstUnlocked])
  {
    uint64_t v92 = v6;
    uint64_t v90 = v4;
    uint64_t v91 = v3;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_100197224(&qword_1002620A8, (void (*)(uint64_t))type metadata accessor for BTDeferredRecord);
    uint64_t v37 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    uint64_t v94 = v2;
    if (v2)
    {
      swift_release();
      return;
    }
    uint64_t v40 = v37;
    unint64_t v41 = v38;
    uint64_t v87 = v7;
    swift_release();
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_1000AA8F0(v40, v41);
    URL.init(string:)();
    uint64_t v43 = v104;
    uint64_t v42 = v105;
    Class v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48);
    uint64_t v89 = v105 + 48;
    uint64_t v88 = v44;
    if (v44(v15, 1, v104) == 1)
    {
      __break(1u);
    }
    else
    {
      Class v45 = &v99[OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL];
      char v99 = *(char **)(v42 + 32);
      ((void (*)(char *, char *, uint64_t))v99)(v32, v15, v43);
      URL.path.getter();
      uint64_t v46 = v42 + 8;
      uint64_t v47 = v32;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
      v48(v47, v43);
      Class v93 = v45;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      if (qword_100261858 != -1) {
        swift_once();
      }
      swift_bridgeObjectRetain();
      sub_1000AC9E4();
      swift_bridgeObjectRelease();
      v48(v35, v43);
      uint64_t v105 = UUID.uuidString.getter();
      uint64_t v49 = v100;
      URL.init(string:)();
      if (v88(v49, 1, v43) != 1)
      {
        ((void (*)(char *, char *, uint64_t))v99)(v27, v49, v43);
        URL.path.getter();
        uint64_t v100 = (char *)(v42 + 32);
        uint64_t v51 = v102;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        URL.appendingPathComponent(_:)();
        v48(v51, v43);
        swift_bridgeObjectRelease();
        v48(v27, v43);
        uint64_t v52 = v98;
        sub_1001AEF94((uint64_t)v106, v98, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        unint64_t v53 = v97;
        URL.init(string:)();
        if (v88(v53, 1, v43) != 1)
        {
          id v54 = v95;
          ((void (*)(char *, char *, uint64_t))v99)(v95, v53, v43);
          swift_bridgeObjectRetain();
          URL.appendingPathComponent(_:)();
          swift_bridgeObjectRelease();
          v48(v54, v43);
          URL.path.getter();
          URL.appendingPathComponent(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1000AC9E4();
          swift_bridgeObjectRelease();
          uint64_t v105 = v46;
          v48(v51, v43);
          uint64_t v55 = *(void *)(v52 + 8);
          uint64_t v56 = *(void *)(v52 + 16);
          uint64_t v106 = v48;
          if (v55 == 0xD000000000000012 && v56 == 0x80000001001F6CA0
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            UUID.uuidString.getter();
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          id v57 = (char *)v103;
          uint64_t v58 = v52;
          id v60 = v101;
          URL.path.getter();
          uint64_t v61 = v96;
          URL.appendingPathComponent(_:)();
          swift_bridgeObjectRelease();
          uint64_t v62 = v102;
          URL.appendingPathComponent(_:)();
          uint64_t v63 = v61;
          uint64_t v64 = v104;
          uint64_t v65 = v106;
          v106(v63, v104);
          swift_bridgeObjectRelease();
          v65(v60, v64);
          sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
          v65(v57, v64);
          ((void (*)(char *, char *, uint64_t))v99)(v57, v62, v64);
          uint64_t v66 = v92;
          URLResourceValues.init()();
          URLResourceValues.isExcludedFromBackup.setter();
          long long v67 = v57;
          URL._bridgeToObjectiveC()(v68);
          uint64_t v70 = v69;
          [(objc_class *)isa writeToURL:v69 atomically:1];

          static os_log_type_t.default.getter();
          if (qword_100261950 != -1) {
            swift_once();
          }
          sub_1000AA024((uint64_t *)&unk_100262110);
          uint64_t v71 = swift_allocObject();
          long long v103 = xmmword_1001CFDB0;
          *(_OWORD *)(v71 + 16) = xmmword_1001CFDB0;
          sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v74 = v73;
          *(void *)(v71 + 56) = &type metadata for String;
          *(void *)(v71 + 64) = sub_1000AA5E0();
          *(void *)(v71 + 32) = v72;
          *(void *)(v71 + 40) = v74;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_1000AA024((uint64_t *)&unk_100263B10);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v103;
          *(void *)(inited + 32) = NSFileProtectionKey;
          *(void *)(inited + 40) = NSFileProtectionCompleteUntilFirstUserAuthentication;
          long long v76 = NSFileProtectionKey;
          unint64_t v77 = NSFileProtectionCompleteUntilFirstUserAuthentication;
          unint64_t v78 = sub_1000AF5A0(inited);
          id v79 = [self defaultManager];
          sub_10015C6F8(v78);
          swift_bridgeObjectRelease();
          type metadata accessor for FileAttributeKey(0);
          sub_100197224(&qword_100261C58, type metadata accessor for FileAttributeKey);
          Class v80 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          URL.path.getter();
          NSString v81 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v107 = 0;
          LODWORD(v74) = [v79 setAttributes:v80 ofItemAtPath:v81 error:&v107];

          if (v74)
          {
            id v82 = v107;
            URL.setResourceValues(_:)();
            uint64_t v83 = (void (*)(uint64_t, uint64_t))v106;

            (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v91);
            v83((uint64_t)v67, v64);
          }
          else
          {
            id v84 = v107;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v91);
            v106(v67, v64);
          }
          return;
        }
LABEL_24:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  static os_log_type_t.default.getter();
  if (qword_100261950 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_1000EB9B4();
  swift_allocError();
  *uint64_t v39 = 0x8000000000000010;
  swift_willThrow();
}

uint64_t sub_10015C6F8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000AA024((uint64_t *)&unk_100263B20);
    uint64_t v1 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v29 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v5 = v1 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_26;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v11 >= v29) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v7);
        if (!v12) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v4 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_26:
    uint64_t v14 = 8 * v10;
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + v14);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + v14);
    uint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    type metadata accessor for FileProtectionType(0);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_1000B66DC((_OWORD *)((char *)v33 + 8), v31);
    sub_1000B66DC(v31, v33);
    sub_1000B66DC(v33, v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << v1[32];
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v5[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)&v5[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v5[8 * v23];
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)&v5[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v1 + 6) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_1000B66DC(v32, (_OWORD *)(*((void *)v1 + 7) + 32 * v8));
    ++*((void *)v1 + 2);
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v29)
  {
LABEL_35:
    swift_release();
    swift_release();
    return (uint64_t)v1;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v29) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10015CA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  v18[1] = a2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)v18 - v11;
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  URL.appendingPathComponent(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  uint64_t v21 = v12;
  uint64_t v22 = v5;
  sub_1000AA024(v19);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v16 = v23;
  v14(v12, v6);
  return v16;
}

uint64_t sub_10015CC10@<X0>(uint64_t (*a1)(void)@<X2>, void (*a2)(uint64_t, unint64_t)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - v10;
  if ([self isFirstUnlocked])
  {
    uint64_t v12 = Data.init(contentsOf:options:)();
    if (v4)
    {
      swift_errorRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, v8);
    }
    else
    {
      uint64_t v15 = v12;
      unint64_t v16 = v13;
      uint64_t v20 = a4;
      a2(v15, v16);
      sub_1000AA8F0(v15, v16);
      uint64_t v18 = v20;
      sub_1001AF05C((uint64_t)v11, v20, a3);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a4, 1, 1, v8);
  }
}

unint64_t sub_10015CF70(uint64_t a1)
{
  return sub_10015D120(a1, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
}

void *sub_10015CF90(uint64_t a1)
{
  return sub_10015DA98(a1, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
}

void *sub_10015D000(uint64_t a1)
{
  return sub_10015DA98(a1, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
}

void *sub_10015D070(uint64_t a1)
{
  return sub_10015DA98(a1, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
}

unint64_t sub_10015D0E0(uint64_t a1)
{
  return sub_10015D120(a1, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
}

unint64_t sub_10015D100(uint64_t a1)
{
  return sub_10015D120(a1, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
}

unint64_t sub_10015D120(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v76 = a2;
  uint64_t v77 = a3;
  uint64_t v5 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v72 = (char *)&v58 - v12;
  __chkstk_darwin(v13);
  uint64_t v83 = (char *)&v58 - v14;
  __chkstk_darwin(v15);
  id v17 = (char *)&v58 - v16;
  unint64_t v86 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v74 = a1;
  uint64_t v75 = v3;
  uint64_t v18 = v3 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
  URL.path.getter();
  uint64_t v71 = v18;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = self;
  id v20 = [v19 defaultManager];
  id v21 = [v19 defaultManager];
  uint64_t v22 = NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();

  id v79 = v22;
  uint64_t v59 = v9;
  if (v22)
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1001CFDB0;
    uint64_t v24 = sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v64 = v17;
    uint64_t v63 = v24;
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v65 = v8;
    uint64_t v27 = v26;
    *(void *)(v23 + 56) = &type metadata for String;
    unint64_t v62 = sub_1000AA5E0();
    *(void *)(v23 + 64) = v62;
    *(void *)(v23 + 32) = v25;
    *(void *)(v23 + 40) = v27;
    uint64_t v8 = v65;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v82 = 0;
    uint64_t v68 = OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_serialQueue;
    unint64_t v78 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    long long v67 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    NSString v81 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v69 = (char *)&type metadata for Any + 8;
    long long v60 = xmmword_1001D0A20;
    uint64_t v66 = v7;
    while (1)
    {
      if ([v79 nextObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v84, 0, sizeof(v84));
      }
      sub_1000E8A70((uint64_t)v84, (uint64_t)v85, &qword_1002631A0);
      if (!v85[3]) {
        break;
      }
      int v32 = swift_dynamicCast();
      (*v78)(v7, v32 ^ 1u, 1, v8);
      if ((*v70)(v7, 1, v8) == 1) {
        goto LABEL_20;
      }
      (*v67)(v83, v7, v8);
      uint64_t v33 = v72;
      URL.deletingPathExtension()();
      uint64_t v34 = URL.lastPathComponent.getter();
      uint64_t v35 = v8;
      uint64_t v37 = v36;
      unint64_t v38 = *v81;
      (*v81)(v33, v8);
      URL.path.getter();
      uint64_t v40 = v73;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v80 = v34;
      uint64_t v41 = v37;
      URL.appendingPathComponent(_:)();
      v38(v40, v35);
      __chkstk_darwin(v42);
      *(&v58 - 2) = (uint64_t)v33;
      *(&v58 - 1) = v43;
      sub_1000AA024(v76);
      uint64_t v44 = v82;
      OS_dispatch_queue.sync<A>(execute:)();
      uint64_t v82 = v44;
      uint64_t v45 = v85[0];
      v38(v33, v35);
      if (v45)
      {
        swift_bridgeObjectRelease();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v8 = v65;
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v60;
        unint64_t v29 = v62;
        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = v29;
        *(void *)(v28 + 32) = v80;
        *(void *)(v28 + 40) = v41;
        uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v28 + 96) = &type metadata for String;
        *(void *)(v28 + 104) = v29;
        *(void *)(v28 + 72) = v30;
        *(void *)(v28 + 80) = v31;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v8 = v35;
      }
      uint64_t v7 = v66;
      v38(v83, v8);
    }
    sub_1000AA894((uint64_t)v85, &qword_1002631A0);
    (*v78)(v7, 1, 1, v8);
LABEL_20:
    sub_1000AA894((uint64_t)v7, (uint64_t *)&unk_100261A00);
    static os_log_type_t.debug.getter();
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v60;
    if (v86 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v52 = *(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)(v51 + 56) = &type metadata for Int;
    *(void *)(v51 + 64) = &protocol witness table for Int;
    *(void *)(v51 + 32) = v52;
    uint64_t v46 = v64;
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v54 = v62;
    *(void *)(v51 + 96) = &type metadata for String;
    *(void *)(v51 + 104) = v54;
    *(void *)(v51 + 72) = v53;
    *(void *)(v51 + 80) = v55;
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    uint64_t v46 = v17;
    static os_log_type_t.error.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
    sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v50 = v49;
    *(void *)(v47 + 56) = &type metadata for String;
    *(void *)(v47 + 64) = sub_1000AA5E0();
    *(void *)(v47 + 32) = v48;
    *(void *)(v47 + 40) = v50;
    os_log(_:dso:log:_:_:)();
  }
  swift_bridgeObjectRelease();
  unint64_t v56 = v86;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v8);
  return v56;
}

void *sub_10015DA98(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void, __n128), uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(BOOL, uint64_t, uint64_t, void *))
{
  uint64_t v75 = (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))a7;
  Class v93 = a6;
  uint64_t v92 = a5;
  uint64_t v101 = a4;
  uint64_t v77 = a2;
  uint64_t v98 = sub_1000AA024(a2);
  __n128 v10 = __chkstk_darwin(v98);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = a3(0, v10);
  uint64_t v82 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v91 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v90 = (uint64_t)&v74 - v15;
  uint64_t v16 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v96 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v74 - v23;
  __chkstk_darwin(v24);
  uint64_t v111 = (char *)&v74 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v74 - v27;
  uint64_t v100 = v7;
  uint64_t v29 = v7 + OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_directoryURL;
  uint64_t v99 = a1;
  URL.path.getter();
  uint64_t v94 = v29;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v30 = self;
  id v31 = [v30 defaultManager];
  int v32 = v28;
  id v33 = [v30 defaultManager];
  uint64_t v34 = NSFileManager.enumerator(at:includingPropertiesForKeys:options:errorHandler:)();

  id v104 = v34;
  uint64_t v76 = v20;
  if (v34)
  {
    Class v102 = v12;
    uint64_t v83 = v32;
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    uint64_t v81 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1001CFDB0;
    uint64_t v80 = sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v38 = v37;
    *(void *)(v35 + 56) = &type metadata for String;
    unint64_t v79 = sub_1000AA5E0();
    *(void *)(v35 + 64) = v79;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
    uint64_t v87 = OBJC_IVAR____TtC15audioaccessoryd17RecordFileManager_serialQueue;
    long long v103 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v89 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    unint64_t v86 = (void (**)(char *, char *, uint64_t))(v20 + 32);
    uint64_t v110 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v40 = &_swiftEmptyArrayStorage;
    uint64_t v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
    uint64_t v88 = (char *)&type metadata for Any + 8;
    long long v78 = xmmword_1001D0A20;
    id v84 = v18;
    while (1)
    {
      if ([v104 nextObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v112, 0, sizeof(v112));
      }
      uint64_t v46 = (uint64_t)v102;
      sub_1000E8A70((uint64_t)v112, (uint64_t)v113, &qword_1002631A0);
      if (!v114) {
        break;
      }
      int v47 = swift_dynamicCast();
      (*v103)(v18, v47 ^ 1u, 1, v19);
      if ((*v89)(v18, 1, v19) == 1) {
        goto LABEL_22;
      }
      id v107 = v40;
      (*v86)(v111, v18, v19);
      uint64_t v48 = v95;
      URL.deletingPathExtension()();
      uint64_t v49 = URL.lastPathComponent.getter();
      uint64_t v51 = v50;
      uint64_t v52 = *v110;
      (*v110)(v48, v19);
      uint64_t v109 = v39;
      URL.path.getter();
      uint64_t v53 = v19;
      unint64_t v54 = v96;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v105 = v49;
      uint64_t v106 = v51;
      URL.appendingPathComponent(_:)();
      uint64_t v55 = v54;
      uint64_t v19 = v53;
      uint64_t v56 = v46;
      v52(v55, v53);
      __chkstk_darwin(v57);
      *(&v74 - 2) = (uint64_t)v48;
      *(&v74 - 1) = v58;
      uint64_t v39 = v109;
      OS_dispatch_queue.sync<A>(execute:)();
      v52(v48, v19);
      uint64_t v59 = v52;
      if ((*v85)(v56, 1, v97) == 1)
      {
        sub_1000AA894(v56, v77);
        static os_log_type_t.error.getter();
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = v78;
        unint64_t v42 = v79;
        *(void *)(v41 + 56) = &type metadata for String;
        *(void *)(v41 + 64) = v42;
        uint64_t v43 = v106;
        *(void *)(v41 + 32) = v105;
        *(void *)(v41 + 40) = v43;
        uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v41 + 96) = &type metadata for String;
        *(void *)(v41 + 104) = v42;
        *(void *)(v41 + 72) = v44;
        *(void *)(v41 + 80) = v45;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v18 = v84;
        uint64_t v40 = v107;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = v90;
        sub_1001AF05C(v56, v90, v92);
        sub_1001AEF94(v60, v91, v93);
        uint64_t v40 = v107;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v40 = (void *)v75(0, v40[2] + 1, 1, v40);
        }
        uint64_t v18 = v84;
        unint64_t v62 = v40[2];
        unint64_t v61 = v40[3];
        if (v62 >= v61 >> 1) {
          uint64_t v40 = (void *)v75(v61 > 1, v62 + 1, 1, v40);
        }
        v40[2] = v62 + 1;
        sub_1001AF05C(v91, (uint64_t)v40+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v62, v92);
        sub_1001AEFFC(v90, v93);
      }
      v59(v111, v19);
    }
    sub_1000AA894((uint64_t)v113, &qword_1002631A0);
    (*v103)(v18, 1, 1, v19);
LABEL_22:
    sub_1000AA894((uint64_t)v18, (uint64_t *)&unk_100261A00);
    static os_log_type_t.debug.getter();
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v78;
    uint64_t v69 = v40[2];
    *(void *)(v68 + 56) = &type metadata for Int;
    *(void *)(v68 + 64) = &protocol witness table for Int;
    *(void *)(v68 + 32) = v69;
    uint64_t v63 = v83;
    uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v71 = v79;
    *(void *)(v68 + 96) = &type metadata for String;
    *(void *)(v68 + 104) = v71;
    *(void *)(v68 + 72) = v70;
    *(void *)(v68 + 80) = v72;
    os_log(_:dso:log:_:_:)();
  }
  else
  {
    uint64_t v63 = v32;
    static os_log_type_t.error.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_1001CFDB0;
    sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v67 = v66;
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_1000AA5E0();
    *(void *)(v64 + 32) = v65;
    *(void *)(v64 + 40) = v67;
    os_log(_:dso:log:_:_:)();
    uint64_t v40 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v63, v19);
  return v40;
}

uint64_t sub_10015E618(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10015E6E0(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    sub_1000AA024(&qword_100262400);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001CFDB0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v4;
    strcpy((char *)v22, "Cloud Error: ");
    HIWORD(v22[1]) = -4864;
    sub_1001B1614(a1);
    goto LABEL_5;
  }
  if (a1 >> 62 == 1)
  {
    sub_1000AA024(&qword_100262400);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001CFDB0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v3;
    swift_errorRetain();
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    v22[0] = 0x2074736973726550;
    v22[1] = 0xEF203A726F727245;
LABEL_5:
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = v22[0];
    uint64_t v7 = v22[1];
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v6;
    *(void *)(inited + 56) = v7;
    unint64_t v8 = sub_1000AF7C0(inited);
    sub_1001B1638(a1);
    return v8;
  }
  switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
  {
    case 1:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v13;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0xD000000000000014;
      uint64_t v14 = "No Account Available";
      goto LABEL_15;
    case 2:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v15;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0xD00000000000002ELL;
      uint64_t v14 = "Device Store not available before first unlock";
      goto LABEL_15;
    case 3:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v16;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0xD00000000000002BLL;
      uint64_t v14 = "Cloud coordinator is not ready or available";
      goto LABEL_15;
    case 4:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v17;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0xD000000000000015;
      uint64_t v14 = "Record does not exist";
      goto LABEL_15;
    case 5:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v18;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0x2064696C61766E49;
      unint64_t v12 = 0xEE0064726F636572;
      break;
    case 6:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v19;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0x72724520656C6946;
      unint64_t v12 = 0xEA0000000000726FLL;
      break;
    case 7:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v20;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0xD000000000000019;
      uint64_t v14 = "Feature flag not enabled.";
LABEL_15:
      unint64_t v12 = (unint64_t)(v14 - 32) | 0x8000000000000000;
      break;
    default:
      sub_1000AA024(&qword_100262400);
      uint64_t v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
      *(void *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(v9 + 40) = v10;
      *(void *)(v9 + 72) = &type metadata for String;
      unint64_t v11 = 0x206E776F6E6B6E55;
      unint64_t v12 = 0xED0000726F727245;
      break;
  }
  *(void *)(v9 + 48) = v11;
  *(void *)(v9 + 56) = v12;
  return sub_1000AF7C0(v9);
}

unint64_t sub_10015EBE8()
{
  return sub_10015E6E0(*v0);
}

uint64_t sub_10015EBF0(uint64_t a1)
{
  unint64_t v2 = sub_1001B17DC();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_10015EC2C(uint64_t a1)
{
  unint64_t v2 = sub_1001B17DC();

  return Error<>._code.getter(a1, v2);
}

void sub_10015EC68(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = self;
  if (([v9 isBuddyComplete] & 1) == 0)
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 == -1) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
  if (([v9 isFirstUnlocked] & 1) == 0)
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 == -1)
    {
LABEL_10:
      os_log(_:dso:log:_:_:)();
      id v10 = 0;
      goto LABEL_15;
    }
LABEL_19:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v22 = v2;
  uint64_t v20 = a2;
  id v10 = [objc_allocWithZone((Class)BTCloudAccountInfo) init];
  unint64_t v11 = *(void **)(sub_100160454() + 72);
  *unint64_t v8 = v11;
  unint64_t v12 = *(void (**)(void))(v6 + 104);
  unsigned int v24 = enum case for DispatchPredicate.notOnQueue(_:);
  uint64_t v21 = (void (*)(void *, void, uint64_t))v12;
  v12(v8);
  v11;
  a2 = _dispatchPreconditionTest(_:)();
  uint64_t v23 = a1;
  uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
  v13(v8, v5);
  if ((a2 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v14 = v22;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v22 = v14;
  swift_unknownObjectRelease();
  [v10 setIsSignedIn:v26];
  uint64_t v15 = *(void **)(sub_100160454() + 72);
  *unint64_t v8 = v15;
  v21(v8, v24, v5);
  v15;
  a2 = _dispatchPreconditionTest(_:)();
  v13(v8, v5);
  if ((a2 & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  OS_dispatch_queue.sync<A>(execute:)();
  swift_unknownObjectRelease();
  [v10 setManateeAvailable:v25];
  id v16 = [*(id *)(v23 + 56) aa_primaryAppleAccount];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 aa_personID];
    [v10 setAccountIdentifier:v18];

    id v19 = [v17 appleID];
    [v10 setLoginID:v19];
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
  }
  a2 = v20;
LABEL_15:
  *(void *)a2 = v10;
}

uint64_t sub_10015F0D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___fileManager;
  if (*(void *)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___fileManager))
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___fileManager);
  }
  else
  {
    (*(void (**)(char *, uint64_t, __n128))(v3 + 16))(v6, v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL, v4);
    type metadata accessor for RecordFileManager();
    swift_allocObject();
    uint64_t v8 = sub_1000E8ED4((uint64_t)v6);
    *(void *)(v1 + v7) = v8;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v8;
}

uint64_t sub_10015F1F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261878 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1000AA0CC(v2, (uint64_t)qword_10026AB68);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    uint64_t v7 = sub_10015DA98((uint64_t)v5, &qword_1002623C0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t)sub_1001ADAA0, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EE4);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v8 = v7[2];
    uint64_t v9 = type metadata accessor for LegacyAccountMagicKeysRecord();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = v10;
    if (v8)
    {
      sub_1001AEF94((uint64_t)v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a1, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v9);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v12 = type metadata accessor for LegacyAccountMagicKeysRecord();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_10015F534@<X0>(unint64_t a1@<X8>)
{
  unint64_t v120 = a1;
  uint64_t v111 = type metadata accessor for CloudCoordinatorConfiguration();
  uint64_t v1 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v114 = (uint64_t)v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000AA024(&qword_100263CA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v110 = (char *)v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v109 = (uint64_t)v102 - v6;
  uint64_t v7 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v117 = (char *)v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for URL();
  uint64_t v12 = *(char **)(v119 - 8);
  __chkstk_darwin(v119);
  long long v103 = (char *)v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v108 = (unsigned int (**)(uint64_t, uint64_t, int *))((char *)v102 - v15);
  __chkstk_darwin(v16);
  id v18 = (unsigned int (**)(uint64_t, uint64_t, int *))((char *)v102 - v17);
  uint64_t v19 = self;
  uint64_t v20 = &selRef_hijackAwayRemoteScore;
  id v21 = [(id)v19 mainBundle];
  id v22 = [v21 infoDictionary];

  if (!v22)
  {
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease();
    v122._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v122._object = (void *)0x8000000100200870;
    id v96 = [(id)v19 mainBundle];
    id v97 = [v96 description];
    uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v100 = v99;

    v101._uint64_t countAndFlagsBits = v98;
    v101._object = v100;
    String.append(_:)(v101);

    swift_bridgeObjectRelease();
    goto LABEL_69;
  }
  uint64_t v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v23 + 16)) {
    goto LABEL_65;
  }
  unint64_t v24 = sub_1000B4FC4(0xD00000000000001ALL, 0x8000000100200890);
  if ((v25 & 1) == 0) {
    goto LABEL_65;
  }
  sub_100128C4C(*(void *)(v23 + 56) + 32 * v24, (uint64_t)&v122);
  swift_bridgeObjectRelease();
  if (!*((void *)&v123 + 1))
  {
LABEL_66:
    sub_1000AA894((uint64_t)&v122, &qword_1002631A0);
    goto LABEL_67;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_67:
    v122._uint64_t countAndFlagsBits = 0;
    v122._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(63);
    v89._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    v89._object = (void *)0x80000001002008B0;
    String.append(_:)(v89);
    id v90 = [(id)v19 v20[145]];
    id v91 = [v90 description];
    uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v94 = v93;

    v95._uint64_t countAndFlagsBits = v92;
    v95._object = v94;
    String.append(_:)(v95);

    swift_bridgeObjectRelease();
LABEL_69:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v116 = v125;
  uint64_t v113 = v126;
  sub_1000AA024((uint64_t *)&unk_100263CB0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001D0A20;
  unint64_t v105 = (unint64_t)"Updating main device record: %@";
  uint64_t v20 = (char **)0xD00000000000001ELL;
  *(void *)(v19 + 32) = 0xD00000000000001ELL;
  *(void *)(v19 + 40) = 0x80000001001F6D00;
  *(void *)(v19 + 48) = 0xD000000000000010;
  *(void *)(v19 + 56) = 0x80000001001F7460;
  *((void *)&v123 + 1) = &type metadata for AudioAccessoryFeatures;
  unint64_t v124 = sub_1000AE4C4();
  char v26 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)&v122);
  *(void *)&long long v115 = v1;
  if (v26)
  {
    unint64_t v28 = *(void *)(v19 + 16);
    unint64_t v27 = *(void *)(v19 + 24);
    if (v28 >= v27 >> 1) {
      uint64_t v19 = (uint64_t)sub_1001B2DA0((void *)(v27 > 1), v28 + 1, 1, (void *)v19);
    }
    *(void *)(v19 + 16) = v28 + 1;
    uint64_t v29 = v19 + 16 * v28;
    *(void *)(v29 + 32) = 0xD000000000000012;
    *(void *)(v29 + 40) = 0x80000001001F75F0;
  }
  id v107 = v18;
  uint64_t v30 = *(void *)(v121 + 48);
  uint64_t v106 = *(void *)(v121 + 40);
  id v31 = v18;
  uint64_t v32 = v119;
  uint64_t v112 = (void (*)(unsigned int (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t))*((void *)v12 + 2);
  v112(v31, v121 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL, v119);
  swift_bridgeObjectRetain();
  UUID.init(uuidString:)();
  uint64_t v33 = v10;
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v35 = v118;
  if (v34(v9, 1, v118) == 1) {
    goto LABEL_64;
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v37 = v117;
  v36(v117, v9, v35);
  unint64_t v38 = v120;
  v36((char *)v120, v37, v35);
  uint64_t v39 = (int *)v111;
  uint64_t v40 = (void *)(v38 + *(int *)(v111 + 20));
  *uint64_t v40 = v106;
  v40[1] = v30;
  uint64_t v41 = (void (**)(char *, uint64_t))(v38 + v39[6]);
  uint64_t v42 = v113;
  *uint64_t v41 = v116;
  v41[1] = (void (*)(char *, uint64_t))v42;
  (*((void (**)(unint64_t, unsigned int (**)(uint64_t, uint64_t, int *), uint64_t))v12 + 4))(v38 + v39[7], v107, v32);
  unint64_t v43 = v39[8];
  *(void *)(v38 + v43) = v19;
  sub_10015F0D4();
  if (qword_1002618A0 != -1) {
LABEL_62:
  }
    swift_once();
  uint64_t v44 = sub_1000AA0CC(v32, (uint64_t)qword_10026AC10);
  uint64_t v45 = (uint64_t)v108;
  v112(v108, v44, v32);
  uint64_t v46 = sub_10015DA98(v45, &qword_100263CA8, (uint64_t (*)(void, __n128))type metadata accessor for CloudCoordinatorConfiguration, (uint64_t)sub_1001AF0C4, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D6C);
  swift_release();
  uint64_t v48 = (void (*)(char *, uint64_t))*((void *)v12 + 1);
  v12 += 8;
  int v47 = v48;
  v48((char *)v45, v32);
  uint64_t v20 = (char **)0xD00000000000001ELL;
  if (v46[2])
  {
    uint64_t v32 = v115;
    uint64_t v49 = v109;
    sub_1001AEF94((uint64_t)v46 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80)), v109, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
    uint64_t v50 = 0;
    uint64_t v51 = (uint64_t)v110;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v49 = v109;
    uint64_t v51 = (uint64_t)v110;
    uint64_t v32 = v115;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v32 + 56))(v49, v50, 1, v39);
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v120 + v43);
  uint64_t v118 = *(void *)(v52 + 16);
  if (v118)
  {
    uint64_t v116 = v47;
    uint64_t v117 = v12;
    uint64_t v121 = v52 + 32;
    id v107 = (unsigned int (**)(uint64_t, uint64_t, int *))(v32 + 48);
    v102[1] = CKCurrentUserDefaultName;
    swift_bridgeObjectRetain();
    unint64_t v43 = 0;
    uint64_t v104 = 0;
    unint64_t v120 = v105 | 0x8000000000000000;
    uint64_t v53 = v118;
    uint64_t v106 = v52;
    long long v115 = xmmword_1001CFDB0;
    while (1)
    {
      if (v43 >= *(void *)(v52 + 16))
      {
        __break(1u);
        goto LABEL_62;
      }
      unint64_t v54 = (uint64_t *)(v121 + 16 * v43);
      uint64_t v32 = *v54;
      uint64_t v12 = (char *)v54[1];
      if ((*v54 != 0xD00000000000001ELL || v12 != (char *)v120)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        break;
      }
LABEL_20:
      if (++v43 == v53)
      {
        swift_bridgeObjectRelease();
        return sub_1000AA894(v49, &qword_100263CA8);
      }
    }
    sub_1000B6A44(v49, v51, &qword_100263CA8);
    if ((*v107)(v51, 1, v39) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1000AA894(v51, &qword_100263CA8);
LABEL_36:
      static os_log_type_t.default.getter();
      if (qword_100261938 != -1) {
        swift_once();
      }
      uint64_t v113 = sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v115;
      *(void *)(v58 + 56) = &type metadata for String;
      uint64_t v112 = (void (*)(unsigned int (**)(uint64_t, uint64_t, int *), uint64_t, uint64_t))sub_1000AA5E0();
      *(void *)(v58 + 64) = v112;
      *(void *)(v58 + 32) = v32;
      *(void *)(v58 + 40) = v12;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;
      swift_bridgeObjectRetain();
      v62._uint64_t countAndFlagsBits = v32;
      v62._object = v12;
      v63._uint64_t countAndFlagsBits = v59;
      v63._object = v61;
      v64.super.Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v62, v63).super.isa;
      uint64_t v65 = (uint64_t)v108;
      sub_100101038((uint64_t)v108);
      uint64_t v66 = v103;
      URL.appendingPathComponent(_:isDirectory:)();
      uint64_t v67 = v116;
      v116((char *)v65, v119);
      v68._uint64_t countAndFlagsBits = 0x65746176697250;
      v68._object = (void *)0xE700000000000000;
      URL.appendPathComponent(_:)(v68);
      id v69 = [(objc_class *)v64.super.isa ownerName];
      uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v72 = v71;

      v73._uint64_t countAndFlagsBits = v70;
      v73._object = v72;
      URL.appendPathComponent(_:)(v73);
      swift_bridgeObjectRelease();
      id v74 = [(objc_class *)v64.super.isa zoneName];
      uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v76;

      v122._uint64_t countAndFlagsBits = v75;
      v122._object = v77;
      v78._uint64_t countAndFlagsBits = 0x6E656B6F742ELL;
      v78._object = (void *)0xE600000000000000;
      String.append(_:)(v78);
      URL.appendPathComponent(_:)(v122);
      swift_bridgeObjectRelease();
      unint64_t v79 = (void *)sub_100101720();

      if (v79)
      {
        static os_log_type_t.error.getter();
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = v115;
        uint64_t v81 = v112;
        *(void *)(v80 + 56) = &type metadata for String;
        *(void *)(v80 + 64) = v81;
        *(void *)(v80 + 32) = v32;
        *(void *)(v80 + 40) = v12;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v82 = v104;
        sub_1001019A0();
        uint64_t v49 = v109;
        if (v82)
        {

          swift_errorRelease();
          v116(v66, v119);
          uint64_t v104 = 0;
        }
        else
        {
          uint64_t v104 = 0;
          v116(v66, v119);
        }
        uint64_t v20 = (char **)0xD00000000000001ELL;
        uint64_t v39 = (int *)v111;
      }
      else
      {
        v67(v66, v119);
        swift_bridgeObjectRelease();

        uint64_t v20 = (char **)0xD00000000000001ELL;
        uint64_t v39 = (int *)v111;
        uint64_t v49 = v109;
      }
      uint64_t v51 = (uint64_t)v110;
      goto LABEL_19;
    }
    uint64_t v55 = v114;
    sub_1001AF05C(v51, v114, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
    uint64_t v56 = *(void **)(v55 + v39[8]);
    uint64_t v19 = v56[2];
    if (v19)
    {
      BOOL v57 = v56[4] == v32 && v56[5] == (void)v12;
      if (v57 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_33;
      }
      if (v19 != 1)
      {
        BOOL v83 = v56[6] == v32 && v56[7] == (void)v12;
        if (v83 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
LABEL_33:
          sub_1001AEFFC(v114, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
LABEL_19:
          uint64_t v52 = v106;
          uint64_t v53 = v118;
          goto LABEL_20;
        }
        if (v19 != 2)
        {
          id v84 = (char **)(v56 + 9);
          uint64_t v85 = 2;
          while (1)
          {
            uint64_t v86 = v85 + 1;
            if (__OFADD__(v85, 1)) {
              break;
            }
            BOOL v87 = *(v84 - 1) == (char *)v32 && *v84 == v12;
            if (v87 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              uint64_t v39 = (int *)v111;
              uint64_t v51 = (uint64_t)v110;
              goto LABEL_33;
            }
            v84 += 2;
            ++v85;
            if (v86 == v19) {
              goto LABEL_35;
            }
          }
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          Swift::String v122 = (Swift::String)0;
          long long v123 = 0u;
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
      }
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_1001AEFFC(v114, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
    goto LABEL_36;
  }
  return sub_1000AA894(v49, &qword_100263CA8);
}

uint64_t sub_100160454()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CloudCoordinatorConfiguration();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v20 - v14;
  uint64_t v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___cloudCoordinator);
  if (*(void *)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___cloudCoordinator))
  {
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___cloudCoordinator);
  }
  else
  {
    v20[1] = v4;
    sub_10015F534((unint64_t)v20 - v14);
    id v21 = type metadata accessor for CloudCoordinatorConfiguration;
    sub_1001AEF94((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
    v20[0] = sub_1000B66A0(0, (unint64_t *)&qword_100263210);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
    swift_unknownObjectRetain();
    static DispatchQoS.unspecified.getter();
    id v22 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&unk_100263C90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_1000AA024((uint64_t *)&unk_100263220);
    sub_1000B5E24((unint64_t *)&qword_100263CA0, (uint64_t *)&unk_100263220);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    type metadata accessor for CloudCoordinator();
    swift_allocObject();
    uint64_t v17 = sub_100124C70((uint64_t)v12, v1, (uint64_t)&off_10023B360, v18);
    swift_release();
    sub_1001AEFFC((uint64_t)v15, (uint64_t (*)(void))v21);
    *uint64_t v16 = v17;
    v16[1] = (uint64_t)&off_100239168;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v17;
}

uint64_t sub_1001607FC()
{
  uint64_t v1 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v93 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v99 = (char *)&v93 - v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v93 - v7;
  __chkstk_darwin(v9);
  id v107 = (char *)&v93 - v10;
  __chkstk_darwin(v11);
  uint64_t v109 = (char *)&v93 - v12;
  __chkstk_darwin(v13);
  uint64_t v111 = (char *)&v93 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v93 - v16;
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void **)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v101 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  Class v102 = (char *)&v93 - v22;
  __chkstk_darwin(v23);
  id v96 = (char *)&v93 - v24;
  __chkstk_darwin(v25);
  id v97 = (char *)&v93 - v26;
  __chkstk_darwin(v27);
  uint64_t v98 = (char *)&v93 - v28;
  __chkstk_darwin(v29);
  id v31 = (char *)&v93 - v30;
  __chkstk_darwin(v32);
  long long v103 = (char *)&v93 - v33;
  __chkstk_darwin(v34);
  uint64_t v104 = (char *)&v93 - v35;
  __chkstk_darwin(v36);
  unint64_t v105 = (char *)&v93 - v37;
  __chkstk_darwin(v38);
  uint64_t v106 = (char *)&v93 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v93 - v41;
  __chkstk_darwin(v43);
  uint64_t v108 = (char *)&v93 - v44;
  __chkstk_darwin(v45);
  int v47 = (char *)&v93 - v46;
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v93 - v49;
  if (([self isFirstUnlocked] & 1) == 0)
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v92 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    return (uint64_t)v92;
  }
  Class v93 = v31;
  uint64_t v94 = v8;
  Swift::String v95 = v3;
  uint64_t v117 = _swiftEmptyArrayStorage;
  uint64_t v51 = sub_10015F0D4();
  uint64_t v112 = v0;
  uint64_t v113 = (void (*)(uint64_t, uint64_t))v51;
  URL.init(string:)();
  uint64_t v52 = (char *)(v19 + 6);
  uint64_t v53 = (uint64_t (*)(char *, uint64_t, uint64_t))v19[6];
  uint64_t result = v53(v17, 1, v18);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v100 = (void (*)(char *, char *, uint64_t))v19[4];
  uint64_t v110 = v19 + 4;
  v100(v47, v17, v18);
  URL.appendingPathComponent(_:)();
  uint64_t v55 = (void (*)(char *, uint64_t))v19[1];
  v55(v47, v18);
  uint64_t v56 = sub_10015DA98((uint64_t)v50, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
  swift_release();
  uint64_t v113 = (void (*)(uint64_t, uint64_t))v55;
  v55(v50, v18);
  sub_1001616A0((uint64_t)v56);
  sub_10015F0D4();
  BOOL v57 = v111;
  URL.init(string:)();
  uint64_t result = v53(v57, 1, v18);
  if (result == 1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v58 = (char *)v53;
  v100(v42, v57, v18);
  uint64_t v59 = (uint64_t)v108;
  URL.appendingPathComponent(_:)();
  uint64_t v60 = v42;
  unint64_t v61 = v113;
  v113((uint64_t)v60, v18);
  Swift::String v62 = sub_10015DA98(v59, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
  swift_release();
  v61(v59, v18);
  sub_1001616A0((uint64_t)v62);
  sub_10015F0D4();
  Swift::String v63 = v109;
  URL.init(string:)();
  uint64_t v111 = v58;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v63, 1, v18);
  if (result == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  CKRecordZoneID v64 = v52;
  uint64_t v65 = v105;
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  v100(v105, v66, v18);
  uint64_t v68 = (uint64_t)v106;
  URL.appendingPathComponent(_:)();
  id v69 = v113;
  v113((uint64_t)v65, v18);
  uint64_t v70 = sub_10015DA98(v68, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
  swift_release();
  v69(v68, v18);
  sub_1001616A0((uint64_t)v70);
  sub_10015F0D4();
  unint64_t v71 = v107;
  URL.init(string:)();
  uint64_t v109 = v64;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v71, 1, v18);
  if (result == 1)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v72 = v103;
  v67(v103, v71, v18);
  uint64_t v73 = (uint64_t)v104;
  URL.appendingPathComponent(_:)();
  id v74 = v113;
  v113((uint64_t)v72, v18);
  uint64_t v75 = sub_10015DA98(v73, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
  swift_release();
  v74(v73, v18);
  sub_1001616A0((uint64_t)v75);
  long long v115 = &type metadata for AudioAccessoryFeatures;
  unint64_t v116 = sub_1000AE4C4();
  char v76 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v114);
  if ((v76 & 1) == 0) {
    goto LABEL_10;
  }
  sub_10015F0D4();
  uint64_t v77 = v94;
  URL.init(string:)();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v77, 1, v18);
  if (result == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  Swift::String v78 = v98;
  v67(v98, v77, v18);
  uint64_t v79 = (uint64_t)v93;
  URL.appendingPathComponent(_:)();
  uint64_t v80 = v113;
  v113((uint64_t)v78, v18);
  uint64_t v81 = sub_10015DA98(v79, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
  swift_release();
  v80(v79, v18);
  sub_1001616A0((uint64_t)v81);
  sub_10015F0D4();
  uint64_t v82 = v99;
  URL.init(string:)();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v82, 1, v18);
  if (result != 1)
  {
    BOOL v83 = v96;
    v67(v96, v82, v18);
    uint64_t v84 = (uint64_t)v97;
    URL.appendingPathComponent(_:)();
    uint64_t v85 = v113;
    v113((uint64_t)v83, v18);
    uint64_t v86 = sub_10015DA98(v84, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
    swift_release();
    v85(v84, v18);
    sub_1001616A0((uint64_t)v86);
LABEL_10:
    sub_10015F0D4();
    BOOL v87 = v95;
    URL.init(string:)();
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v111)(v87, 1, v18);
    if (result != 1)
    {
      uint64_t v88 = v101;
      v67(v101, v87, v18);
      uint64_t v89 = (uint64_t)v102;
      URL.appendingPathComponent(_:)();
      id v90 = v113;
      v113((uint64_t)v88, v18);
      id v91 = sub_10015DA98(v89, &qword_1002623D8, (uint64_t (*)(void, __n128))type metadata accessor for BTDeferredRecord, (uint64_t)sub_1001AEF3C, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2F18);
      swift_release();
      v90(v89, v18);
      sub_1001616A0((uint64_t)v91);
      return (uint64_t)v117;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1001616A0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1001B2F18(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for BTDeferredRecord() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100161850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_1002618F0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1000AA0CC(v2, (uint64_t)qword_10026AD38);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    uint64_t v7 = sub_10015DA98((uint64_t)v5, (uint64_t *)&unk_100263BA0, (uint64_t (*)(void, __n128))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t)sub_1001AEEE4, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2EB0);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v8 = v7[2];
    uint64_t v9 = type metadata accessor for LegacyMagicPairingSettingsRecords();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = v10;
    if (v8)
    {
      sub_1001AEF94((uint64_t)v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a1, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v9);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v12 = type metadata accessor for LegacyMagicPairingSettingsRecords();
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_100161B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261868 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1000AA0CC(v2, (uint64_t)qword_10026AB38);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
    uint64_t v7 = sub_10015DA98((uint64_t)v5, &qword_1002623B8, (uint64_t (*)(void, __n128))type metadata accessor for SoundProfileRecord, (uint64_t)sub_1001AEE8C, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D38);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unint64_t v17 = v7;
    swift_bridgeObjectRetain();
    sub_100191B7C(&v17);
    swift_bridgeObjectRelease();
    uint64_t v8 = v17;
    uint64_t v9 = v17[2];
    uint64_t v10 = type metadata accessor for SoundProfileRecord();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    if (v9)
    {
      sub_1001AEF94((uint64_t)v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a1, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v10);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, 1, 1, v10);
    }
    return swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v13 = type metadata accessor for SoundProfileRecord();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a1, 1, 1, v13);
  }
}

void *sub_100161EFC()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = &type metadata for AudioAccessoryFeatures;
  unint64_t v11 = sub_1000AE4C4();
  char v4 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v9);
  if ((v4 & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261918 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1000AA0CC(v0, (uint64_t)qword_10026AD60);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    uint64_t v6 = (void *)sub_10015D120((uint64_t)v3, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v6 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  return v6;
}

void *sub_100162120()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = &type metadata for AudioAccessoryFeatures;
  unint64_t v11 = sub_1000AE4C4();
  char v4 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v9);
  if ((v4 & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261860 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1000AA0CC(v0, (uint64_t)qword_10026AB00);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    uint64_t v6 = (void *)sub_10015D120((uint64_t)v3, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v6 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  return v6;
}

uint64_t sub_100162344(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Notification();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v12);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v15 + ((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_1001B1554;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023D228;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v13;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  uint64_t v18 = v21;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  return swift_release();
}

void sub_1001626EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    long long v14 = 0u;
    long long v15 = 0u;
LABEL_15:
    sub_1000AA894((uint64_t)&v14, &qword_1002631A0);
    return;
  }
  uint64_t v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1000B51E0((uint64_t)v13), (v6 & 1) != 0))
  {
    sub_100128C4C(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v14);
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000B6804((uint64_t)v13);
  if (!*((void *)&v15 + 1)) {
    goto LABEL_15;
  }
  uint64_t v7 = sub_1000B66A0(0, &qword_100263CD0);
  if (swift_dynamicCast())
  {
    uint64_t v8 = (void *)v13[0];
    static os_log_type_t.debug.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
    *(void *)(v9 + 56) = v7;
    *(void *)(v9 + 64) = sub_1001AD6DC(&qword_100263CD8, &qword_100263CD0);
    *(void *)(v9 + 32) = v8;
    id v10 = v8;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    unsigned int v11 = [v10 BOOLValue];
    int v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_networkUp);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_networkUp) = v11;
    if (v12 != 1)
    {
      if (v11) {
        sub_100162CD8();
      }
    }
  }
}

uint64_t sub_10016290C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100162A00()
{
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  sub_1000D8DD0(v0 + 24);
  swift_bridgeObjectRelease();

  uint64_t v2 = v0 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL;
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100162B5C()
{
  sub_100162A00();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100162BB4()
{
  return type metadata accessor for DeviceStore();
}

uint64_t type metadata accessor for DeviceStore()
{
  uint64_t result = qword_1002636D0;
  if (!qword_1002636D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100162C08()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100162CD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unsigned int v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer);
  if (v13)
  {
    id v14 = [v13 date];
    uint64_t v32 = v8;
    id v15 = v14;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v16 = self;
    id v31 = v11;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v18 = [v16 localizedStringFromDate:isa dateStyle:2 timeStyle:2];

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v32);
  }
  else
  {
    uint64_t v19 = 0;
    unint64_t v21 = 0;
  }
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000AA5E0();
  unint64_t v22 = 0xD000000000000010;
  if (v21) {
    unint64_t v22 = v19;
  }
  unint64_t v23 = 0x8000000100200600;
  if (v21) {
    unint64_t v23 = v21;
  }
  *(void *)(v12 + 32) = v22;
  *(void *)(v12 + 40) = v23;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void **)(v1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1001AEE74;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023C120;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v24;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v37 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  uint64_t v28 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v28);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v34);
  swift_release();
  return swift_release();
}

void sub_1001631E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer;
    if (*(void *)(Strong + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer))
    {
      swift_release();
    }
    else
    {
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      uint64_t v3 = swift_allocObject();
      swift_weakInit();
      id v4 = objc_allocWithZone((Class)BTXPCTimer);
      swift_retain();
      NSString v5 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_1001AEE7C;
      aBlock[5] = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10010E750;
      void aBlock[3] = &unk_10023C148;
      uint64_t v6 = _Block_copy(aBlock);
      id v7 = [v4 initWithName:v5 timeInterval:1 gracePeriod:705 priority:v6 options:300.0 block:60.0];

      _Block_release(v6);
      swift_release();
      swift_release();
      uint64_t v8 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = v7;
      swift_release();
    }
  }
}

uint64_t sub_1001633F4(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v19 = v7;
    uint64_t v20 = v6;
    uint64_t v21 = v3;
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
    *(void *)(v12 + 56) = sub_1000B66A0(0, &qword_100263C48);
    *(void *)(v12 + 64) = sub_1001AD6DC((unint64_t *)&unk_100263C50, &qword_100263C48);
    *(void *)(v12 + 32) = a1;
    id v13 = a1;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v14 = *(void **)(v11 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1001AEE84;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023C170;
    uint64_t v16 = _Block_copy(aBlock);
    id v17 = v14;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    unint64_t v22 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1001637F8()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1001638E0();
    swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer);
    swift_release();
    [v1 invalidate];
  }
  swift_beginAccess();
  uint64_t v2 = swift_weakLoadStrong();
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer);
    *(void *)(v2 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer) = 0;
    swift_release();
  }
}

uint64_t sub_1001638E0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v14 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1001AE98C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023BEC8;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v7;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_100163BC8()
{
  uint64_t v0 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v0 - 8);
  uint64_t v321 = (uint64_t)v306 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for SoundProfileRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v314 = (uint64_t)v306 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v306 - v6;
  uint64_t v8 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v341 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)v306 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v11 - 8);
  v324 = (char *)v306 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v317 = (char *)v306 - v14;
  __chkstk_darwin(v15);
  v320 = (char *)v306 - v16;
  __chkstk_darwin(v17);
  v330 = (char *)v306 - v18;
  __chkstk_darwin(v19);
  v338 = (char *)v306 - v20;
  __chkstk_darwin(v21);
  v344 = (char *)v306 - v22;
  uint64_t v361 = type metadata accessor for DeviceRecord();
  uint64_t v345 = *(void *)(v361 - 8);
  __chkstk_darwin(v361);
  v365 = (char *)v306 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v327 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  v323 = (char *)v306 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v322 = (char *)v306 - v27;
  __chkstk_darwin(v28);
  v316 = (char *)v306 - v29;
  __chkstk_darwin(v30);
  v315 = (char *)v306 - v31;
  __chkstk_darwin(v32);
  v319 = (char *)v306 - v33;
  __chkstk_darwin(v34);
  v318 = (char *)v306 - v35;
  __chkstk_darwin(v36);
  v329 = (char *)v306 - v37;
  __chkstk_darwin(v38);
  v328 = (char *)v306 - v39;
  __chkstk_darwin(v40);
  v337 = (char *)v306 - v41;
  __chkstk_darwin(v42);
  v336 = (char *)v306 - v43;
  __chkstk_darwin(v44);
  v343 = (char *)v306 - v45;
  __chkstk_darwin(v46);
  v342 = (char *)v306 - v47;
  __chkstk_darwin(v48);
  v353 = (char *)v306 - v49;
  uint64_t v363 = type metadata accessor for BTDeferredRecord();
  uint64_t v352 = *(void *)(v363 - 8);
  uint64_t v50 = *(void *)(v352 + 64);
  __chkstk_darwin(v363);
  uint64_t v335 = (uint64_t)v306 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v331 = (uint64_t)v306 - v52;
  __chkstk_darwin(v53);
  v332 = (char *)v306 - v54;
  __chkstk_darwin(v55);
  uint64_t v333 = (uint64_t)v306 - v56;
  __chkstk_darwin(v57);
  uint64_t v334 = (uint64_t)v306 - v58;
  __chkstk_darwin(v59);
  uint64_t v354 = (uint64_t)v306 - v60;
  __chkstk_darwin(v61);
  uint64_t v357 = (uint64_t)v306 - v62;
  __chkstk_darwin(v63);
  uint64_t v65 = (char *)v306 - v64;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v366 = result;
  if (!result) {
    return result;
  }
  v364 = v10;
  uint64_t v339 = v8;
  uint64_t v310 = v3;
  uint64_t v311 = v2;
  v325 = v7;
  uint64_t v362 = v24;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    goto LABEL_183;
  }
LABEL_3:
  uint64_t v356 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v67 = swift_allocObject();
  long long v355 = xmmword_1001CFDB0;
  *(_OWORD *)(v67 + 16) = xmmword_1001CFDB0;
  uint64_t v68 = sub_1001607FC();
  *(void *)(v67 + 56) = sub_1000AA024(&qword_100263C30);
  *(void *)(v67 + 64) = sub_1000B5E24(&qword_100263C38, &qword_100263C30);
  *(void *)(v67 + 32) = v68;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v69 = sub_1001607FC();
  unint64_t v70 = *(void *)(v69 + 16);
  if (v70)
  {
    uint64_t v71 = *(unsigned __int8 *)(v352 + 80);
    v326 = (const char *)v69;
    uint64_t v72 = v69 + ((v71 + 32) & ~v71);
    uint64_t v359 = *(void *)(v352 + 72);
    uint64_t v351 = v71 | 7;
    v358 = (uint64_t (**)(uint64_t, uint64_t))((v71 + 16) & ~v71);
    v350 = (char *)(((unint64_t)v358 + v50 + 7) & 0xFFFFFFFFFFFFFFF8);
    v349 = (void (**)(void, void, void))(v350 + 8);
    v348 = CKCurrentUserDefaultName;
    v340 = "tsNew";
    v347 = (uint64_t (**)(char *, uint64_t, uint64_t))0x80000001001F6CA0;
    v346 = (void (**)(char *, char *, uint64_t))0x80000001001F7460;
    uint64_t v73 = (uint64_t)v365;
    while (1)
    {
      sub_1001AEF94(v72, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if (*v65) {
        break;
      }
      char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v78) {
        goto LABEL_10;
      }
LABEL_6:
      sub_1001AEFFC((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      v72 += v359;
      if (!--v70)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    static os_log_type_t.default.getter();
    uint64_t v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = v355;
    uint64_t v80 = (uint64_t)v65;
    uint64_t v81 = (uint64_t)v65;
    uint64_t v82 = v357;
    sub_1001AEF94(v80, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    uint64_t v83 = String.init<A>(describing:)();
    unint64_t v360 = v70;
    uint64_t v85 = v84;
    *(void *)(v79 + 56) = &type metadata for String;
    *(void *)(v79 + 64) = sub_1000AA5E0();
    *(void *)(v79 + 32) = v83;
    *(void *)(v79 + 40) = v85;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v86 = v366;
    uint64_t v50 = sub_100160454();
    UUID.uuidString.getter();
    id v87 = objc_allocWithZone((Class)CKRecordID);
    NSString v88 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v89 = [v87 initWithRecordName:v88];

    sub_1001AEF94(v81, v82, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    uint64_t v90 = swift_allocObject();
    uint64_t v91 = v82;
    uint64_t v65 = (unsigned char *)v81;
    sub_1001AF05C(v91, (uint64_t)v358 + v90, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    *(void *)&v350[v90] = v86;
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v50;
    *(void *)(v92 + 24) = v89;
    *(void *)(v92 + 32) = sub_1001AEB30;
    *(void *)(v92 + 40) = v90;
    *(unsigned char *)(v92 + 48) = 0;
    swift_retain();
    swift_unknownObjectRetain();
    id v93 = v89;
    swift_retain();
    sub_10011A9F8((uint64_t)sub_1001AD6BC, v92);
    swift_release();
    swift_unknownObjectRelease();

    unint64_t v70 = v360;
    uint64_t v73 = (uint64_t)v365;
    swift_release();
    if (*(void *)(v81 + 8) == 0xD000000000000012
      && *(uint64_t (***)(char *, uint64_t, uint64_t))(v81 + 16) == v347
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
      v74._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v74._object = v75;
      v76._uint64_t countAndFlagsBits = 0xD000000000000010;
      v76._object = v346;
      Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v76, v74).super.isa;
      sub_100160454();
      sub_10011F48C((uint64_t)&off_100235FF0, (uint64_t)isa, 0, 0, 0, 0);
      swift_arrayDestroy();

      swift_unknownObjectRelease();
    }
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = (uint64_t)v365;
LABEL_16:
  uint64_t v94 = sub_1001607FC();
  uint64_t v95 = v361;
  uint64_t v96 = v354;
  uint64_t v351 = *(void *)(v94 + 16);
  if (v351)
  {
    uint64_t v359 = self;
    unint64_t v97 = 0;
    uint64_t v65 = 0;
    v349 = (void (**)(void, void, void))(v94
                                                        + ((*(unsigned __int8 *)(v352 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v352 + 80)));
    v350 = (char *)(v327 + 16);
    v358 = (uint64_t (**)(uint64_t, uint64_t))(v327 + 8);
    v347 = (uint64_t (**)(char *, uint64_t, uint64_t))(v327 + 48);
    v346 = (void (**)(char *, char *, uint64_t))(v327 + 32);
    v326 = "SoundProfileRecord";
    v340 = (char *)0x80000001001F6CC0;
    v306[1] = "ord with BT Address: %@";
    unint64_t v307 = 0x80000001001FDE80;
    v308 = "AudioAccessoryZone";
    unint64_t v309 = 0x80000001001F7610;
    v348 = (NSString *)v94;
    while (1)
    {
      if (v97 >= *(void *)(v94 + 16))
      {
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        swift_once();
        goto LABEL_3;
      }
      sub_1001AEF94((uint64_t)v349 + *(void *)(v352 + 72) * v97, v96, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if ([(id)v359 isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_100261850 != -1) {
          swift_once();
        }
        uint64_t v114 = v362;
        uint64_t v115 = sub_1000AA0CC(v362, (uint64_t)qword_10026AAE0);
        uint64_t v116 = (uint64_t)v353;
        (*(void (**)(char *, uint64_t, uint64_t))v350)(v353, v115, v114);
        uint64_t v117 = sub_10015DA98(v116, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
        swift_release();
        (*v358)(v116, v114);
        uint64_t v73 = (uint64_t)v365;
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v117 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
      uint64_t v118 = v117[2];
      unint64_t v360 = v97;
      if (v118) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_39:
      if ((*(void *)(v96 + 8) != 0x6552656369766544 || *(void *)(v96 + 16) != 0xEC00000064726F63)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        goto LABEL_46;
      }
      static os_log_type_t.default.getter();
      uint64_t v127 = swift_allocObject();
      *(_OWORD *)(v127 + 16) = v355;
      sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v128 = v363;
      uint64_t v129 = String.init<A>(describing:)();
      uint64_t v131 = v130;
      *(void *)(v127 + 56) = &type metadata for String;
      *(void *)(v127 + 64) = sub_1000AA5E0();
      *(void *)(v127 + 32) = v129;
      *(void *)(v127 + 40) = v131;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v132 = sub_10015F0D4();
      unint64_t v133 = (uint64_t *)(v96 + *(int *)(v128 + 28));
      uint64_t v134 = *v133;
      uint64_t v135 = v133[1];
      swift_bridgeObjectRetain();
      uint64_t v136 = v344;
      URL.init(string:)();
      uint64_t result = (*v347)(v136, 1, v362);
      if (result == 1) {
        goto LABEL_214;
      }
      uint64_t v137 = v343;
      uint64_t v109 = v362;
      (*v346)(v343, v136, v362);
      swift_bridgeObjectRetain();
      uint64_t v110 = v342;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v50 = (uint64_t)v358;
      uint64_t v111 = *v358;
      uint64_t v138 = (*v358)((uint64_t)v137, v109);
      __chkstk_darwin(v138);
      v306[-4] = v132;
      v306[-3] = v134;
      v306[-2] = v135;
      v306[-1] = v110;
LABEL_20:
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();
LABEL_21:
      swift_bridgeObjectRelease();
      v111((uint64_t)v110, v109);
      unint64_t v113 = v360;
      uint64_t v95 = v361;
      uint64_t v73 = (uint64_t)v365;
      uint64_t v96 = v354;
LABEL_22:
      unint64_t v97 = v113 + 1;
      sub_1001AEFFC(v96, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v94 = (uint64_t)v348;
      if (v97 == v351) {
        goto LABEL_138;
      }
    }
    uint64_t v119 = (void *)(v96 + *(int *)(v363 + 28));
    uint64_t v120 = (uint64_t)v117
         + ((*(unsigned __int8 *)(v345 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v345 + 80));
    uint64_t v121 = *(void *)(v345 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001AEF94(v120, v73, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      Swift::String v122 = (void *)(v73 + *(int *)(v95 + 24));
      if (*v122 == *v119 && v122[1] == v119[1]) {
        break;
      }
      char v124 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v125 = v73;
      char v126 = v124;
      sub_1001AEFFC(v125, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      if (v126) {
        goto LABEL_45;
      }
      v120 += v121;
      --v118;
      uint64_t v73 = (uint64_t)v365;
      if (!v118)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_39;
      }
    }
    sub_1001AEFFC(v73, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
LABEL_45:
    swift_bridgeObjectRelease_n();
LABEL_46:
    if ([(id)v359 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_1002618E8 != -1) {
        swift_once();
      }
      uint64_t v139 = v362;
      uint64_t v140 = sub_1000AA0CC(v362, (uint64_t)qword_10026AD20);
      uint64_t v141 = (uint64_t)v353;
      (*(void (**)(char *, uint64_t, uint64_t))v350)(v353, v140, v139);
      unint64_t v142 = sub_10015DA98(v141, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
      swift_release();
      (*v358)(v141, v139);
      uint64_t v143 = v142[2];
      if (v143)
      {
LABEL_50:
        uint64_t v144 = (void *)(v96 + *(int *)(v363 + 28));
        uint64_t v145 = (uint64_t)v142
             + ((*(unsigned __int8 *)(v341 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v341 + 80));
        uint64_t v146 = *(void *)(v341 + 72);
        swift_bridgeObjectRetain();
        uint64_t v147 = v339;
        while (1)
        {
          uint64_t v148 = (uint64_t)v364;
          sub_1001AEF94(v145, (uint64_t)v364, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          unint64_t v149 = (void *)(v148 + *(int *)(v147 + 24));
          if (*v149 == *v144 && v149[1] == v144[1]) {
            break;
          }
          char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_1001AEFFC(v148, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          if (v151) {
            goto LABEL_66;
          }
          v145 += v146;
          if (!--v143)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v95 = v361;
            uint64_t v96 = v354;
            goto LABEL_60;
          }
        }
        sub_1001AEFFC(v148, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
LABEL_66:
        swift_bridgeObjectRelease_n();
        uint64_t v95 = v361;
        uint64_t v96 = v354;
LABEL_67:
        if ([(id)v359 isFirstUnlocked])
        {
          sub_10015F0D4();
          if (qword_100261890 != -1) {
            swift_once();
          }
          uint64_t v164 = v362;
          uint64_t v165 = sub_1000AA0CC(v362, (uint64_t)qword_10026AB90);
          uint64_t v166 = (uint64_t)v353;
          (*(void (**)(char *, uint64_t, uint64_t))v350)(v353, v165, v164);
          uint64_t v167 = sub_10015DA98(v166, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
          swift_release();
          (*v358)(v166, v164);
          uint64_t v168 = v167[2];
          if (v168)
          {
LABEL_71:
            uint64_t v169 = type metadata accessor for MagicPairingSettingsRecord();
            uint64_t v170 = (char *)v167
                 + ((*(unsigned __int8 *)(*(void *)(v169 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v169 - 8) + 80));
            id v171 = (uint64_t *)(v96 + *(int *)(v363 + 28));
            uint64_t v172 = *v171;
            uint64_t v50 = v171[1];
            uint64_t v173 = *(void *)(*(void *)(v169 - 8) + 72);
            while (1)
            {
              long long v174 = &v170[*(int *)(v169 + 24)];
              BOOL v175 = *(void *)v174 == v172 && *((void *)v174 + 1) == v50;
              if (v175 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              v170 += v173;
              if (!--v168)
              {
                swift_bridgeObjectRelease();
                uint64_t v96 = v354;
                goto LABEL_81;
              }
            }
            swift_bridgeObjectRelease();
            uint64_t v96 = v354;
LABEL_86:
            v368 = &type metadata for AudioAccessoryFeatures;
            unint64_t v176 = sub_1000AE4C4();
            unint64_t v369 = v176;
            char v177 = isFeatureEnabled(_:)();
            sub_1000ABFF0((uint64_t)&v367);
            uint64_t v178 = v334;
            sub_1001AEF94(v96, v334, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
            if (v177)
            {
              unint64_t v179 = sub_100161EFC();
              __chkstk_darwin(v179);
              v306[-2] = v178;
              char v180 = sub_10013B1C4((uint64_t (*)(id *))sub_1001AE9C8, (uint64_t)&v306[-4], (unint64_t)v179);
              swift_bridgeObjectRelease();
              sub_1001AEFFC(v178, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
              uint64_t v181 = v333;
              sub_1001AEF94(v96, v333, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
              if ((v180 & 1) == 0)
              {
                if (*(void *)(v181 + 8) == 0x6563697665444141 && *(void *)(v181 + 16) == 0xEE0064726F636552)
                {
                  sub_1001AEFFC(v181, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                  goto LABEL_128;
                }
                char v217 = _stringCompareWithSmolCheck(_:_:expecting:)();
                sub_1001AEFFC(v181, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                if (v217)
                {
LABEL_128:
                  static os_log_type_t.default.getter();
                  uint64_t v218 = swift_allocObject();
                  *(_OWORD *)(v218 + 16) = v355;
                  sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                  uint64_t v219 = v363;
                  uint64_t v220 = String.init<A>(describing:)();
                  uint64_t v222 = v221;
                  *(void *)(v218 + 56) = &type metadata for String;
                  *(void *)(v218 + 64) = sub_1000AA5E0();
                  *(void *)(v218 + 32) = v220;
                  *(void *)(v218 + 40) = v222;
                  os_log(_:dso:log:_:_:)();
                  swift_bridgeObjectRelease();
                  uint64_t v223 = sub_10015F0D4();
                  v224 = (uint64_t *)(v96 + *(int *)(v219 + 28));
                  uint64_t v50 = v224[1];
                  uint64_t v313 = *v224;
                  swift_bridgeObjectRetain();
                  v225 = v320;
                  URL.init(string:)();
                  uint64_t result = (*v347)(v225, 1, v362);
                  if (result == 1) {
                    goto LABEL_218;
                  }
                  uint64_t v210 = v96;
                  v226 = v319;
                  uint64_t v212 = v362;
                  (*v346)(v319, v225, v362);
                  swift_bridgeObjectRetain();
                  v213 = v318;
                  URL.appendingPathComponent(_:)();
                  swift_bridgeObjectRelease();
                  v312 = *v358;
                  uint64_t v227 = v312((uint64_t)v226, v212);
                  __chkstk_darwin(v227);
                  uint64_t v228 = v313;
                  v306[-4] = v223;
                  v306[-3] = v228;
                  v306[-2] = v50;
                  v306[-1] = v213;
LABEL_133:
                  OS_dispatch_queue.sync<A>(execute:)();
                  swift_release();
                  swift_bridgeObjectRelease();
                  v312((uint64_t)v213, v212);
                  uint64_t v73 = (uint64_t)v365;
                  uint64_t v96 = v210;
                  unint64_t v113 = v360;
                  goto LABEL_22;
                }
                uint64_t v182 = (uint64_t)v332;
LABEL_93:
                v368 = &type metadata for AudioAccessoryFeatures;
                unint64_t v369 = v176;
                char v183 = isFeatureEnabled(_:)();
                sub_1000ABFF0((uint64_t)&v367);
                sub_1001AEF94(v96, v182, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                if (v183)
                {
                  unint64_t v184 = sub_100162120();
                  __chkstk_darwin(v184);
                  v306[-2] = v182;
                  char v185 = sub_10013B1C4((uint64_t (*)(id *))sub_1001AE9A0, (uint64_t)&v306[-4], (unint64_t)v184);
                  swift_bridgeObjectRelease();
                  sub_1001AEFFC(v182, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                  uint64_t v186 = v331;
                  sub_1001AEF94(v96, v331, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                  if ((v185 & 1) == 0)
                  {
                    if (*(void *)(v186 + 8) == 0xD000000000000011 && *(void *)(v186 + 16) == v307)
                    {
                      sub_1001AEFFC(v186, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
LABEL_131:
                      static os_log_type_t.default.getter();
                      uint64_t v230 = swift_allocObject();
                      *(_OWORD *)(v230 + 16) = v355;
                      sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                      uint64_t v231 = v363;
                      uint64_t v232 = String.init<A>(describing:)();
                      uint64_t v234 = v233;
                      *(void *)(v230 + 56) = &type metadata for String;
                      *(void *)(v230 + 64) = sub_1000AA5E0();
                      *(void *)(v230 + 32) = v232;
                      *(void *)(v230 + 40) = v234;
                      os_log(_:dso:log:_:_:)();
                      swift_bridgeObjectRelease();
                      uint64_t v235 = sub_10015F0D4();
                      v236 = (uint64_t *)(v96 + *(int *)(v231 + 28));
                      uint64_t v50 = v236[1];
                      uint64_t v313 = *v236;
                      swift_bridgeObjectRetain();
                      v237 = v317;
                      URL.init(string:)();
                      uint64_t result = (*v347)(v237, 1, v362);
                      if (result == 1) {
                        goto LABEL_219;
                      }
                      uint64_t v210 = v96;
                      v238 = v316;
                      uint64_t v212 = v362;
                      (*v346)(v316, v237, v362);
                      swift_bridgeObjectRetain();
                      v213 = v315;
                      URL.appendingPathComponent(_:)();
                      swift_bridgeObjectRelease();
                      v312 = *v358;
                      uint64_t v239 = v312((uint64_t)v238, v212);
                      __chkstk_darwin(v239);
                      uint64_t v240 = v313;
                      v306[-4] = v235;
                      v306[-3] = v240;
                      v306[-2] = v50;
                      v306[-1] = v213;
                      goto LABEL_133;
                    }
                    char v229 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    sub_1001AEFFC(v186, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                    if (v229) {
                      goto LABEL_131;
                    }
LABEL_100:
                    if ([(id)v359 isFirstUnlocked])
                    {
                      sub_10015F0D4();
                      if (qword_1002618E0 != -1) {
                        swift_once();
                      }
                      uint64_t v187 = v362;
                      uint64_t v188 = sub_1000AA0CC(v362, (uint64_t)qword_10026AC28);
                      uint64_t v189 = (uint64_t)v353;
                      (*(void (**)(char *, uint64_t, uint64_t))v350)(v353, v188, v187);
                      unint64_t v190 = sub_10015D120(v189, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
                      swift_release();
                      (*v358)(v189, v187);
                    }
                    else
                    {
                      static os_log_type_t.error.getter();
                      unint64_t v190 = (unint64_t)_swiftEmptyArrayStorage;
                      os_log(_:dso:log:_:_:)();
                    }
                    if (v190 >> 62)
                    {
                      swift_bridgeObjectRetain();
                      uint64_t v191 = _CocoaArrayWrapper.endIndex.getter();
                      if (v191)
                      {
LABEL_107:
                        uint64_t v192 = (uint64_t *)(v96 + *(int *)(v363 + 28));
                        uint64_t v193 = *v192;
                        uint64_t v50 = v192[1];
                        uint64_t v194 = 4;
                        while (1)
                        {
                          if ((v190 & 0xC000000000000001) != 0) {
                            unint64_t v195 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                          }
                          else {
                            unint64_t v195 = (char *)*(id *)(v190 + 8 * v194);
                          }
                          unint64_t v196 = v195;
                          uint64_t v197 = v194 - 3;
                          if (__OFADD__(v194 - 4, 1)) {
                            goto LABEL_182;
                          }
                          if (*(void *)&v195[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress] == v193
                            && *(void *)&v195[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress
                                              + 8] == v50)
                          {
                            break;
                          }
                          char v199 = _stringCompareWithSmolCheck(_:_:expecting:)();

                          if (v199)
                          {
                            swift_bridgeObjectRelease_n();
                            goto LABEL_126;
                          }
                          ++v194;
                          uint64_t v95 = v361;
                          if (v197 == v191) {
                            goto LABEL_118;
                          }
                        }
                        swift_bridgeObjectRelease_n();

LABEL_126:
                        uint64_t v95 = v361;
                        uint64_t v96 = v354;
                        uint64_t v216 = v335;
                        sub_1001AEF94(v354, v335, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                        sub_1001AEFFC(v216, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                        uint64_t v73 = (uint64_t)v365;
                        unint64_t v113 = v360;
                        goto LABEL_22;
                      }
                    }
                    else
                    {
                      uint64_t v191 = *(void *)((v190 & 0xFFFFFFFFFFFFFF8) + 0x10);
                      swift_bridgeObjectRetain();
                      if (v191) {
                        goto LABEL_107;
                      }
                    }
LABEL_118:
                    swift_bridgeObjectRelease_n();
                    uint64_t v96 = v354;
                    uint64_t v200 = v335;
                    sub_1001AEF94(v354, v335, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                    unint64_t v113 = v360;
                    if (*(void *)(v200 + 8) == 0xD000000000000013 && *(void *)(v200 + 16) == v309)
                    {
                      sub_1001AEFFC(v335, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                    }
                    else
                    {
                      char v201 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      sub_1001AEFFC(v335, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                      if ((v201 & 1) == 0)
                      {
                        uint64_t v73 = (uint64_t)v365;
                        goto LABEL_22;
                      }
                    }
                    static os_log_type_t.default.getter();
                    uint64_t v202 = swift_allocObject();
                    *(_OWORD *)(v202 + 16) = v355;
                    sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                    uint64_t v203 = v363;
                    uint64_t v204 = String.init<A>(describing:)();
                    uint64_t v206 = v205;
                    *(void *)(v202 + 56) = &type metadata for String;
                    *(void *)(v202 + 64) = sub_1000AA5E0();
                    *(void *)(v202 + 32) = v204;
                    *(void *)(v202 + 40) = v206;
                    os_log(_:dso:log:_:_:)();
                    swift_bridgeObjectRelease();
                    uint64_t v207 = sub_10015F0D4();
                    v208 = (uint64_t *)(v96 + *(int *)(v203 + 28));
                    uint64_t v50 = v208[1];
                    uint64_t v313 = *v208;
                    swift_bridgeObjectRetain();
                    v209 = v324;
                    URL.init(string:)();
                    uint64_t result = (*v347)(v209, 1, v362);
                    if (result == 1) {
                      goto LABEL_217;
                    }
                    uint64_t v210 = v96;
                    v211 = v323;
                    uint64_t v212 = v362;
                    (*v346)(v323, v209, v362);
                    swift_bridgeObjectRetain();
                    v213 = v322;
                    URL.appendingPathComponent(_:)();
                    swift_bridgeObjectRelease();
                    v312 = *v358;
                    uint64_t v214 = v312((uint64_t)v211, v212);
                    __chkstk_darwin(v214);
                    uint64_t v215 = v313;
                    v306[-4] = v207;
                    v306[-3] = v215;
                    v306[-2] = v50;
                    v306[-1] = v213;
                    goto LABEL_133;
                  }
                }
                else
                {
                  sub_1001AEFFC(v182, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                  uint64_t v186 = v331;
                  sub_1001AEF94(v96, v331, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                }
                sub_1001AEFFC(v186, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
                goto LABEL_100;
              }
            }
            else
            {
              sub_1001AEFFC(v178, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
              uint64_t v181 = v333;
              sub_1001AEF94(v96, v333, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
            }
            uint64_t v182 = (uint64_t)v332;
            sub_1001AEFFC(v181, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
            goto LABEL_93;
          }
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v167 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
          uint64_t v168 = _swiftEmptyArrayStorage[2];
          if (v168) {
            goto LABEL_71;
          }
        }
        swift_bridgeObjectRelease();
LABEL_81:
        uint64_t v50 = *(void *)(v96 + 8);
        if ((v50 != 0x746553636967614DLL || *(void *)(v96 + 16) != 0xED000073676E6974)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          goto LABEL_86;
        }
        static os_log_type_t.default.getter();
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v355;
        sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        uint64_t v99 = v363;
        uint64_t v100 = String.init<A>(describing:)();
        uint64_t v102 = v101;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = sub_1000AA5E0();
        *(void *)(v98 + 32) = v100;
        *(void *)(v98 + 40) = v102;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v103 = sub_10015F0D4();
        uint64_t v104 = (uint64_t *)(v96 + *(int *)(v99 + 28));
        uint64_t v105 = *v104;
        uint64_t v106 = v104[1];
        swift_bridgeObjectRetain();
        id v107 = v330;
        URL.init(string:)();
        uint64_t result = (*v347)(v107, 1, v362);
        if (result == 1) {
          goto LABEL_216;
        }
        uint64_t v108 = v329;
        uint64_t v109 = v362;
        (*v346)(v329, v107, v362);
        swift_bridgeObjectRetain();
        uint64_t v110 = v328;
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v50 = (uint64_t)v358;
        uint64_t v111 = *v358;
        uint64_t v112 = (*v358)((uint64_t)v108, v109);
        __chkstk_darwin(v112);
        v306[-4] = v103;
        v306[-3] = v105;
        v306[-2] = v106;
        v306[-1] = v110;
        goto LABEL_20;
      }
    }
    else
    {
      static os_log_type_t.error.getter();
      unint64_t v142 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
      uint64_t v143 = _swiftEmptyArrayStorage[2];
      if (v143) {
        goto LABEL_50;
      }
    }
    swift_bridgeObjectRelease();
LABEL_60:
    if (*(void *)(v96 + 8) == 0xD00000000000001ELL && *(char **)(v96 + 16) == v340
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      static os_log_type_t.default.getter();
      uint64_t v152 = swift_allocObject();
      *(_OWORD *)(v152 + 16) = v355;
      sub_1001AEF94(v96, v357, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v153 = v363;
      uint64_t v154 = String.init<A>(describing:)();
      uint64_t v156 = v155;
      *(void *)(v152 + 56) = &type metadata for String;
      *(void *)(v152 + 64) = sub_1000AA5E0();
      *(void *)(v152 + 32) = v154;
      *(void *)(v152 + 40) = v156;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v157 = sub_10015F0D4();
      NSString v158 = (uint64_t *)(v96 + *(int *)(v153 + 28));
      uint64_t v159 = *v158;
      uint64_t v160 = v158[1];
      swift_bridgeObjectRetain();
      id v161 = v338;
      URL.init(string:)();
      uint64_t result = (*v347)(v161, 1, v362);
      if (result == 1) {
        goto LABEL_215;
      }
      id v162 = v337;
      uint64_t v109 = v362;
      (*v346)(v337, v161, v362);
      swift_bridgeObjectRetain();
      uint64_t v110 = v336;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v50 = (uint64_t)v358;
      uint64_t v111 = *v358;
      uint64_t v163 = (*v358)((uint64_t)v162, v109);
      __chkstk_darwin(v163);
      v306[-4] = v157;
      v306[-3] = v159;
      v306[-2] = v160;
      v306[-1] = v110;
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();
      goto LABEL_21;
    }
    goto LABEL_67;
  }
LABEL_138:
  swift_bridgeObjectRelease();
  v241 = self;
  if (![v241 isFirstUnlocked])
  {
    static os_log_type_t.error.getter();
    v246 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v247 = _swiftEmptyArrayStorage[2];
    if (v247) {
      goto LABEL_142;
    }
    goto LABEL_146;
  }
  sub_10015F0D4();
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v242 = v362;
  uint64_t v243 = sub_1000AA0CC(v362, (uint64_t)qword_10026AAE0);
  uint64_t v244 = v327;
  uint64_t v245 = (uint64_t)v353;
  (*(void (**)(char *, uint64_t, uint64_t))(v327 + 16))(v353, v243, v242);
  v246 = sub_10015DA98(v245, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v244 + 8))(v245, v242);
  uint64_t v247 = v246[2];
  if (!v247)
  {
LABEL_146:
    swift_bridgeObjectRelease();
    goto LABEL_147;
  }
LABEL_142:
  uint64_t v248 = (uint64_t)v246 + ((*(unsigned __int8 *)(v345 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v345 + 80));
  uint64_t v249 = *(void *)(v345 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_100167774(v248, v366);
    v248 += v249;
    --v247;
  }
  while (v247);
  swift_bridgeObjectRelease_n();
LABEL_147:
  if (([v241 isFirstUnlocked] & 1) == 0)
  {
    static os_log_type_t.error.getter();
    v254 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v255 = _swiftEmptyArrayStorage[2];
    if (v255) {
      goto LABEL_151;
    }
    goto LABEL_155;
  }
  sub_10015F0D4();
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v250 = v362;
  uint64_t v251 = sub_1000AA0CC(v362, (uint64_t)qword_10026AD20);
  uint64_t v252 = v327;
  uint64_t v253 = (uint64_t)v353;
  (*(void (**)(char *, uint64_t, uint64_t))(v327 + 16))(v353, v251, v250);
  v254 = sub_10015DA98(v253, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v253, v250);
  uint64_t v255 = v254[2];
  if (!v255)
  {
LABEL_155:
    swift_bridgeObjectRelease();
    goto LABEL_156;
  }
LABEL_151:
  uint64_t v256 = (uint64_t)v254 + ((*(unsigned __int8 *)(v341 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v341 + 80));
  uint64_t v257 = *(void *)(v341 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_10016E190(v256, v366);
    v256 += v257;
    --v255;
  }
  while (v255);
  swift_bridgeObjectRelease_n();
LABEL_156:
  if (([v241 isFirstUnlocked] & 1) == 0)
  {
    static os_log_type_t.error.getter();
    v262 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v263 = _swiftEmptyArrayStorage[2];
    if (v263) {
      goto LABEL_160;
    }
    goto LABEL_164;
  }
  sub_10015F0D4();
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v258 = v362;
  uint64_t v259 = sub_1000AA0CC(v362, (uint64_t)qword_10026AB90);
  uint64_t v260 = v327;
  uint64_t v261 = (uint64_t)v353;
  (*(void (**)(char *, uint64_t, uint64_t))(v327 + 16))(v353, v259, v258);
  v262 = sub_10015DA98(v261, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v261, v258);
  uint64_t v263 = v262[2];
  if (!v263)
  {
LABEL_164:
    swift_bridgeObjectRelease();
    goto LABEL_165;
  }
LABEL_160:
  uint64_t v264 = *(void *)(type metadata accessor for MagicPairingSettingsRecord() - 8);
  uint64_t v265 = (uint64_t)v262 + ((*(unsigned __int8 *)(v264 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v264 + 80));
  uint64_t v266 = *(void *)(v264 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_10016E7E8(v265, v366);
    v265 += v266;
    --v263;
  }
  while (v263);
  swift_bridgeObjectRelease_n();
LABEL_165:
  uint64_t v267 = v321;
  sub_100161B8C(v321);
  int v268 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v310 + 48))(v267, 1, v311);
  v269 = (uint64_t *)v325;
  if (v268 == 1)
  {
    sub_1000AA894(v267, &qword_1002623B8);
  }
  else
  {
    sub_1001AF05C(v267, (uint64_t)v325, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    uint64_t v271 = *v269;
    unint64_t v272 = *((void *)v325 + 1);
    sub_1000AA680(*v269, v272);
    v273 = sub_100130420(v271, v272);
    uint64_t v274 = v271;
    uint64_t v275 = (uint64_t)v325;
    sub_1000AA8F0(v274, v272);
    uint64_t v276 = v314;
    sub_1001AEF94(v275, v314, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (!v273) {
      v273 = sub_1000B4970().super.isa;
    }
    sub_1001AEFFC(v276, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    v367 = v273;
    sub_1000B98F0(&v367);
    id v277 = [v273 recordChangeTag];
    if (v277)
    {

      sub_1001AEFFC(v275, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    }
    else
    {
      static os_log_type_t.default.getter();
      uint64_t v278 = v275;
      uint64_t v279 = swift_allocObject();
      *(_OWORD *)(v279 + 16) = v355;
      uint64_t v280 = sub_1000B7170();
      uint64_t v282 = v281;
      *(void *)(v279 + 56) = &type metadata for String;
      *(void *)(v279 + 64) = sub_1000AA5E0();
      *(void *)(v279 + 32) = v280;
      *(void *)(v279 + 40) = v282;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_100160454();
      uint64_t v283 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_10011B210(v273, 0, (uint64_t)sub_1001AE994, v283);

      swift_unknownObjectRelease();
      swift_release();
      sub_1001AEFFC(v278, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      swift_release();
    }
  }
  v368 = &type metadata for AudioAccessoryFeatures;
  unint64_t v369 = sub_1000AE4C4();
  char v284 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)&v367);
  if ((v284 & 1) == 0) {
    goto LABEL_195;
  }
  unint64_t v285 = (unint64_t)sub_100161EFC();
  unint64_t v286 = v285;
  if (v285 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v287 = result;
    if (!result) {
      goto LABEL_185;
    }
LABEL_175:
    if (v287 >= 1)
    {
      uint64_t v288 = 0;
      do
      {
        if ((v286 & 0xC000000000000001) != 0) {
          id v289 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v289 = *(id *)(v286 + 8 * v288 + 32);
        }
        v290 = v289;
        ++v288;
        v367 = v289;
        sub_100170534(&v367, v366);
      }
      while (v287 != v288);
      goto LABEL_185;
    }
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
    return result;
  }
  uint64_t v287 = *(void *)((v285 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v287) {
    goto LABEL_175;
  }
LABEL_185:
  swift_bridgeObjectRelease_n();
  unint64_t v291 = (unint64_t)sub_100162120();
  unint64_t v292 = v291;
  if (v291 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v293 = result;
    if (!result) {
      goto LABEL_194;
    }
LABEL_187:
    if (v293 >= 1)
    {
      uint64_t v294 = 0;
      do
      {
        if ((v292 & 0xC000000000000001) != 0) {
          id v295 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v295 = *(id *)(v292 + 8 * v294 + 32);
        }
        v296 = v295;
        ++v294;
        v367 = v295;
        sub_100170B0C(&v367, v366);
      }
      while (v293 != v294);
      goto LABEL_194;
    }
    goto LABEL_213;
  }
  uint64_t v293 = *(void *)((v291 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v293) {
    goto LABEL_187;
  }
LABEL_194:
  swift_bridgeObjectRelease_n();
LABEL_195:
  if (![v241 isFirstUnlocked])
  {
    static os_log_type_t.error.getter();
    unint64_t v301 = (unint64_t)_swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    goto LABEL_199;
  }
  sub_10015F0D4();
  if (qword_1002618E0 != -1) {
    goto LABEL_211;
  }
  while (1)
  {
    uint64_t v297 = v362;
    uint64_t v298 = sub_1000AA0CC(v362, (uint64_t)qword_10026AC28);
    uint64_t v299 = v327;
    uint64_t v300 = (uint64_t)v353;
    (*(void (**)(char *, uint64_t, uint64_t))(v327 + 16))(v353, v298, v297);
    unint64_t v301 = sub_10015D120(v300, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v300, v297);
LABEL_199:
    if (v301 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v302 = _CocoaArrayWrapper.endIndex.getter();
      if (!v302) {
        goto LABEL_208;
      }
    }
    else
    {
      uint64_t v302 = *(void *)((v301 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v302) {
        goto LABEL_208;
      }
    }
    if (v302 >= 1) {
      break;
    }
    __break(1u);
LABEL_211:
    swift_once();
  }
  uint64_t v303 = 0;
  do
  {
    if ((v301 & 0xC000000000000001) != 0) {
      id v304 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v304 = *(id *)(v301 + 8 * v303 + 32);
    }
    v305 = v304;
    ++v303;
    v367 = v304;
    sub_1001710E4(&v367, v366);
  }
  while (v302 != v303);
LABEL_208:
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1001671F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v37 - v15;
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1001D0A20;
    sub_1001AEF94(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    uint64_t v18 = String.init<A>(describing:)();
    uint64_t v20 = v19;
    *(void *)(v17 + 56) = &type metadata for String;
    unint64_t v21 = sub_1000AA5E0();
    *(void *)(v17 + 64) = v21;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
    uint64_t v41 = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)(v17 + 96) = &type metadata for String;
    *(void *)(v17 + 104) = v21;
    *(void *)(v17 + 72) = v22;
    *(void *)(v17 + 80) = v23;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v25 = sub_10015F0D4();
    uint64_t v39 = v4;
    uint64_t v26 = UUID.uuidString.getter();
    uint64_t v40 = v27;
    URL.init(string:)();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      URL.appendingPathComponent(_:)();
      uint64_t v38 = a2;
      uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
      uint64_t v29 = v28(v13, v10);
      __chkstk_darwin(v29);
      *(&v37 - 4) = v25;
      *(&v37 - 3) = v26;
      *(&v37 - 2) = v40;
      *(&v37 - 1) = (uint64_t)v16;
      OS_dispatch_queue.sync<A>(execute:)();
      swift_release();
      swift_bridgeObjectRelease();
      v28(v16, v10);
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1001D0A20;
      sub_1001AEF94(v38, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v33 = v32;
      *(void *)(v30 + 56) = &type metadata for String;
      unint64_t v34 = sub_1000AA5E0();
      *(void *)(v30 + 64) = v34;
      *(void *)(v30 + 32) = v31;
      *(void *)(v30 + 40) = v33;
      uint64_t v41 = 0;
      sub_1000AA024(&qword_100263C40);
      uint64_t v35 = String.init<A>(describing:)();
      *(void *)(v30 + 96) = &type metadata for String;
      *(void *)(v30 + 104) = v34;
      *(void *)(v30 + 72) = v35;
      *(void *)(v30 + 80) = v36;
      os_log(_:dso:log:_:_:)();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001676F8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (uint64_t *)(*a1 + *a3);
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = (void *)(a2 + *(int *)(type metadata accessor for BTDeferredRecord() + 28));
  if (v4 == *v6 && v5 == v6[1]) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

void sub_100167774(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v44 - v13;
  __chkstk_darwin(v14);
  uint64_t v47 = (char *)&v44 - v15;
  uint64_t v16 = type metadata accessor for DeviceRecord();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = sub_1000B6DE4();
  id v20 = [v19 recordChangeTag];
  uint64_t v48 = a1;
  if (v20)
  {
    unint64_t v21 = v20;
    uint64_t v44 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    swift_bridgeObjectRelease();
    sub_1001AEF94(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, &v18[*(int *)(v16 + 48)], v8);
      uint64_t v24 = v19;
      id v25 = [v19 modificationDate];
      if (v25)
      {
        uint64_t v26 = v25;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        uint64_t v28 = (uint64_t)v46;
        v27(v46, v11, v8);
        uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v29(v28, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v28, 1, v8) != 1)
        {
          uint64_t v30 = v45;
          v27(v45, (char *)v28, v8);
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v28 = (uint64_t)v46;
        v29((uint64_t)v46, 1, 1, v8);
      }
      id v31 = [v24 creationDate];
      if (v31)
      {
        uint64_t v32 = v31;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v33 = (uint64_t)v44;
        unint64_t v34 = v11;
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v35(v44, v34, v8);
        v29(v33, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v33, 1, v8) != 1)
        {
          uint64_t v30 = v45;
          v35(v45, (char *)v33, v8);
LABEL_14:
          sub_1000AA894(v28, &qword_100261D90);
LABEL_15:
          uint64_t v36 = v47;
          char v37 = static Date.> infix(_:_:)();
          uint64_t v38 = *(void (**)(char *, uint64_t))(v9 + 8);
          v38(v30, v8);
          v38(v36, v8);
          sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
          if ((v37 & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v33 = (uint64_t)v44;
        v29((uint64_t)v44, 1, 1, v8);
      }
      uint64_t v30 = v45;
      static Date.now.getter();
      sub_1000AA894(v33, &qword_100261D90);
      goto LABEL_14;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  }
  sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  uint64_t v24 = v19;
LABEL_16:
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1001CFDB0;
  uint64_t v40 = sub_1000A56C4();
  uint64_t v42 = v41;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_1000AA5E0();
  *(void *)(v39 + 32) = v40;
  *(void *)(v39 + 40) = v42;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100160454();
  uint64_t v43 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10011B210(v24, 0, (uint64_t)sub_1001AEDB8, v43);
  swift_unknownObjectRelease();
  swift_release_n();
LABEL_19:
}

uint64_t sub_100167DA8(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v826) = a3;
  uint64_t v6 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v772 = (uint64_t)&v767 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v780 = (uint64_t)&v767 - v9;
  __chkstk_darwin(v10);
  uint64_t v773 = (uint64_t)&v767 - v11;
  __chkstk_darwin(v12);
  uint64_t v793 = (uint64_t)&v767 - v13;
  uint64_t v801 = type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v796 = *(void *)(v801 - 8);
  __chkstk_darwin(v801);
  uint64_t v771 = (uint64_t)&v767 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v779 = (uint64_t)&v767 - v16;
  __chkstk_darwin(v17);
  v782 = (char *)&v767 - v18;
  __chkstk_darwin(v19);
  uint64_t v791 = (uint64_t)&v767 - v20;
  uint64_t v21 = type metadata accessor for LegacyAccountMagicKeysRecord();
  __chkstk_darwin(v21 - 8);
  uint64_t v818 = (uint64_t)&v767 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v821 = (uint64_t)&v767 - v24;
  uint64_t v25 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v25 - 8);
  v778 = (char *)&v767 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v783 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v777 = *(void *)(v783 - 8);
  __chkstk_darwin(v783);
  v781 = (char *)&v767 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v785 = (char *)&v767 - v29;
  __chkstk_darwin(v30);
  v774 = (uint64_t *)((char *)&v767 - v31);
  __chkstk_darwin(v32);
  uint64_t v775 = (uint64_t)&v767 - v33;
  uint64_t v34 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v34 - 8);
  v784 = (char *)&v767 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v789 = (char *)&v767 - v37;
  uint64_t v794 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v792 = *(void *)(v794 - 8);
  __chkstk_darwin(v794);
  uint64_t v788 = (uint64_t)&v767 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v776 = (uint64_t)&v767 - v40;
  __chkstk_darwin(v41);
  v790 = (char *)&v767 - v42;
  __chkstk_darwin(v43);
  v786 = (uint64_t *)((char *)&v767 - v44);
  __chkstk_darwin(v45);
  uint64_t v787 = (uint64_t)&v767 - v46;
  uint64_t v47 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v47 - 8);
  v803 = (char *)&v767 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v810 = type metadata accessor for DeviceRecord();
  uint64_t v802 = *(void *)(v810 - 8);
  __chkstk_darwin(v810);
  v806 = (uint64_t *)((char *)&v767 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v50);
  v805 = (char *)&v767 - v51;
  __chkstk_darwin(v52);
  v797 = (uint64_t *)((char *)&v767 - v53);
  __chkstk_darwin(v54);
  uint64_t v798 = (uint64_t)&v767 - v55;
  uint64_t v835 = type metadata accessor for Date();
  uint64_t v834 = *(void *)(v835 - 8);
  __chkstk_darwin(v835);
  v795 = (char *)&v767 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v823 = (char *)&v767 - v58;
  __chkstk_darwin(v59);
  v807 = (char *)&v767 - v60;
  __chkstk_darwin(v61);
  v820 = (char *)&v767 - v62;
  __chkstk_darwin(v63);
  v800 = (char *)&v767 - v64;
  __chkstk_darwin(v65);
  v804 = (char *)&v767 - v66;
  __chkstk_darwin(v67);
  v814 = (char *)&v767 - v68;
  __chkstk_darwin(v69);
  v832 = (char *)&v767 - v70;
  uint64_t v71 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v71 - 8);
  v809 = (char *)&v767 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v73);
  v829 = (char *)&v767 - v74;
  __chkstk_darwin(v75);
  v808 = (char *)&v767 - v76;
  __chkstk_darwin(v77);
  v819 = (char *)&v767 - v78;
  __chkstk_darwin(v79);
  v827 = (void (*)(char *, uint64_t))((char *)&v767 - v80);
  __chkstk_darwin(v81);
  v824 = (char *)&v767 - v82;
  __chkstk_darwin(v83);
  v799 = (char *)&v767 - v84;
  __chkstk_darwin(v85);
  v815 = (char *)&v767 - v86;
  __chkstk_darwin(v87);
  v813 = (char *)&v767 - v88;
  __chkstk_darwin(v89);
  v811 = (char *)&v767 - v90;
  __chkstk_darwin(v91);
  uint64_t v812 = (uint64_t)&v767 - v92;
  uint64_t v93 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v93 - 8);
  v817 = (char *)&v767 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v95 - 8);
  v822 = (char *)&v767 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v831 = (void *)type metadata accessor for UUID();
  v830 = (void (**)(char *, uint64_t, void *))*(v831 - 1);
  __chkstk_darwin(v831);
  v828 = (char *)&v767 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98);
  v816 = (char *)&v767 - v99;
  uint64_t v100 = type metadata accessor for DispatchPredicate();
  uint64_t v101 = *(void *)(v100 - 8);
  __n128 v102 = __chkstk_darwin(v100);
  uint64_t v104 = (void *)((char *)&v767 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v839 = (uint64_t)v3;
  uint64_t v105 = *(void **)&v3[OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue];
  *uint64_t v104 = v105;
  uint64_t v106 = *(void (**)(void *, void, uint64_t, __n128))(v101 + 104);
  v106(v104, enum case for DispatchPredicate.onQueue(_:), v100, v102);
  id v107 = v105;
  uint64_t v108 = _dispatchPreconditionTest(_:)();
  uint64_t v109 = *(void (**)(void *, uint64_t))(v101 + 8);
  v109(v104, v100);
  if ((v108 & 1) == 0)
  {
    __break(1u);
LABEL_259:
    __break(1u);
    goto LABEL_260;
  }
  id v838 = (id)a1;
  id v110 = [(id)a1 encryptedValues];
  NSString v111 = String._bridgeToObjectiveC()();
  id v112 = [v110 objectForKeyedSubscript:v111];
  swift_unknownObjectRelease();

  if (v112 && (*(void *)&long long v848 = v112, sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
  {
    uint64_t v840 = *((void *)&v851[0] + 1);
    uint64_t v841 = *(void *)&v851[0];
  }
  else
  {
    id v113 = [v838 recordID];
    id v114 = [v113 recordName];

    uint64_t v841 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v840 = v115;
  }
  uint64_t v108 = sub_100160454();
  uint64_t v116 = *(void **)(v108 + 72);
  *uint64_t v104 = v116;
  ((void (*)(void *, void, uint64_t))v106)(v104, enum case for DispatchPredicate.notOnQueue(_:), v100);
  uint64_t v3 = v116;
  a1 = _dispatchPreconditionTest(_:)();
  v109(v104, v100);
  if ((a1 & 1) == 0) {
    goto LABEL_259;
  }
  OS_dispatch_queue.sync<A>(execute:)();
  swift_unknownObjectRelease();
  if (LOBYTE(v851[0]) != 1)
  {
    static os_log_type_t.error.getter();
    uint64_t v124 = v840;
    uint64_t v125 = v841;
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_1001D0A20;
    *(void *)(v126 + 56) = &type metadata for String;
    unint64_t v127 = sub_1000AA5E0();
    *(void *)(v126 + 64) = v127;
    *(void *)(v126 + 32) = v125;
    *(void *)(v126 + 40) = v124;
    swift_bridgeObjectRetain();
    id v128 = v838;
    id v129 = [v128 description];
    uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v132 = v131;

    *(void *)(v126 + 96) = &type metadata for String;
    *(void *)(v126 + 104) = v127;
    *(void *)(v126 + 72) = v130;
    *(void *)(v126 + 80) = v132;
    uint64_t v133 = v124;
    uint64_t v134 = v841;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_214;
  }
  static os_log_type_t.default.getter();
  uint64_t v117 = v840;
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v836 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v118 = swift_allocObject();
  long long v767 = xmmword_1001D2D20;
  *(_OWORD *)(v118 + 16) = xmmword_1001D2D20;
  id v119 = [v838 modifiedByDevice];
  uint64_t v769 = a2;
  if (v119)
  {
    uint64_t v120 = v119;
    uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v123 = v122;
  }
  else
  {
    unint64_t v123 = 0xE200000000000000;
    uint64_t v121 = 15932;
  }
  *(void *)(v118 + 56) = &type metadata for String;
  unint64_t v135 = sub_1000AA5E0();
  *(void *)(v118 + 32) = v121;
  *(void *)(v118 + 40) = v123;
  *(void *)(v118 + 96) = &type metadata for String;
  *(void *)(v118 + 104) = v135;
  uint64_t v136 = v841;
  *(void *)(v118 + 64) = v135;
  *(void *)(v118 + 72) = v136;
  *(void *)(v118 + 80) = v117;
  swift_bridgeObjectRetain();
  id v137 = v838;
  id v138 = [v137 description];
  uint64_t v139 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v141 = v140;

  *(void *)(v118 + 136) = &type metadata for String;
  *(void *)(v118 + 144) = v135;
  unint64_t v142 = v135;
  *(void *)(v118 + 112) = v139;
  *(void *)(v118 + 120) = v141;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (IsAppleInternalBuild()) {
    static os_log_type_t.default.getter();
  }
  else {
    static os_log_type_t.debug.getter();
  }
  uint64_t v143 = swift_allocObject();
  long long v825 = xmmword_1001D0A20;
  *(_OWORD *)(v143 + 16) = xmmword_1001D0A20;
  id v144 = [v137 recordID];
  id v145 = [v144 recordName];

  uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v148 = v147;

  *(void *)(v143 + 56) = &type metadata for String;
  *(void *)(v143 + 64) = v135;
  *(void *)(v143 + 32) = v146;
  *(void *)(v143 + 40) = v148;
  id v149 = [[objc_msgSend(v137, "encryptedValues") allKeys];
  swift_unknownObjectRelease();
  uint64_t v150 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v151 = v137;
  sub_1001251DC(v150, v151);
  uint64_t v770 = 0;
  swift_bridgeObjectRelease();

  uint64_t v768 = sub_1000AA024(&qword_1002629D0);
  uint64_t v152 = Array.description.getter();
  uint64_t v154 = v153;
  swift_bridgeObjectRelease();
  *(void *)(v143 + 96) = &type metadata for String;
  *(void *)(v143 + 104) = v135;
  *(void *)(v143 + 72) = v152;
  *(void *)(v143 + 80) = v154;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v852 = 0;
  memset(v851, 0, sizeof(v851));
  uint64_t v155 = CKRecord.recordType.getter();
  uint64_t v156 = v841;
  uint64_t v157 = v840;
  sub_10018A718(v841, v840, v155, v158, (uint64_t *)&v845);
  swift_bridgeObjectRelease();
  if (v846) {
    goto LABEL_20;
  }
  sub_1000AA894((uint64_t)&v845, &qword_100263BE0);
  uint64_t v159 = (uint64_t)v822;
  UUID.init(uuidString:)();
  uint64_t v160 = v830;
  id v161 = v831;
  if (((unsigned int (*)(uint64_t, uint64_t, void *))v830[6])(v159, 1, v831) == 1)
  {
    sub_1000AA894(v159, &qword_100261EA0);
  }
  else
  {
    uint64_t v162 = (uint64_t)v816;
    v160[4](v816, v159, v161);
    uint64_t v163 = CKRecord.recordType.getter();
    sub_100188DF8(v162, v163, v164, (uint64_t)&v845);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, void *))v160[1])(v162, v161);
    if (v846)
    {
LABEL_20:
      sub_1000AA894((uint64_t)v851, &qword_100263BE0);
      sub_1001AE550(&v845, (uint64_t)&v848);
      sub_1001AE550(&v848, (uint64_t)v851);
      goto LABEL_33;
    }
    sub_1000AA894((uint64_t)&v845, &qword_100263BE0);
  }
  uint64_t v165 = CKRecord.recordType.getter();
  uint64_t v167 = (uint64_t)v817;
  if (v165 == 0xD000000000000012 && v166 == 0x80000001001F6CA0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v168 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v168 & 1) == 0) {
      goto LABEL_33;
    }
  }
  sub_100161B8C(v167);
  uint64_t v169 = type metadata accessor for SoundProfileRecord();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v169 - 8) + 48))(v167, 1, v169) == 1)
  {
    sub_1000AA894((uint64_t)v851, &qword_100263BE0);
    sub_1000AA894(v167, &qword_1002623B8);
    long long v848 = 0u;
    long long v849 = 0u;
    unint64_t v850 = 0;
  }
  else
  {
    *((void *)&v849 + 1) = v169;
    unint64_t v850 = sub_100197224((unint64_t *)&unk_100263AD0, (void (*)(uint64_t))type metadata accessor for SoundProfileRecord);
    uint64_t v170 = sub_1000F8B34((uint64_t *)&v848);
    sub_1001AF05C(v167, (uint64_t)v170, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    sub_1000AA894((uint64_t)v851, &qword_100263BE0);
  }
  sub_1000E8A70((uint64_t)&v848, (uint64_t)v851, &qword_100263BE0);
LABEL_33:
  sub_1000B6A44((uint64_t)v851, (uint64_t)&v845, &qword_100263BE0);
  unint64_t v837 = v142;
  id v833 = v151;
  if (!v846)
  {
    uint64_t v173 = v156;
    sub_1000AA894((uint64_t)&v845, &qword_100263BE0);
    static os_log_type_t.default.getter();
    uint64_t v174 = swift_allocObject();
    *(_OWORD *)(v174 + 16) = v825;
    unint64_t v175 = v837;
    *(void *)(v174 + 56) = &type metadata for String;
    *(void *)(v174 + 64) = v175;
    *(void *)(v174 + 32) = v173;
    *(void *)(v174 + 40) = v157;
    swift_bridgeObjectRetain();
    id v176 = v151;
    id v177 = [v176 description];
    uint64_t v178 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v180 = v179;

    uint64_t v181 = v837;
    *(void *)(v174 + 96) = &type metadata for String;
    *(void *)(v174 + 104) = v181;
    *(void *)(v174 + 72) = v178;
    *(void *)(v174 + 80) = v180;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v183 = CKRecord.recordType.getter();
    uint64_t v184 = v182;
    if (v183 == 0x654B72657473614DLL && v182 == 0xE900000000000079)
    {
      swift_bridgeObjectRelease();
      uint64_t v185 = v840;
      goto LABEL_49;
    }
    char v230 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v185 = v840;
    if (v230)
    {
      swift_bridgeObjectRelease();
LABEL_49:
      uint64_t v231 = v841;
      id v232 = v176;
      uint64_t v233 = v818;
      uint64_t v234 = v770;
      sub_1000BDFC4(v232, v818);
      uint64_t v235 = v835;
      if (!v234)
      {
        uint64_t v840 = v185;
        sub_10018F764(v233, v826 & 1);
        sub_1001AEFFC(v233, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
LABEL_51:
        v236 = (void *)v834;
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
        goto LABEL_203;
      }
      goto LABEL_200;
    }
    uint64_t v231 = v841;
    if (v183 == 0x6552656369766544 && v184 == 0xEC00000064726F63)
    {
      swift_bridgeObjectRelease();
      v269 = v806;
      goto LABEL_111;
    }
    char v356 = _stringCompareWithSmolCheck(_:_:expecting:)();
    v269 = v806;
    if (v356)
    {
      swift_bridgeObjectRelease();
LABEL_111:
      id v357 = v176;
      uint64_t v234 = v770;
      sub_1000A6E98(v357, v269);
      if (!v234)
      {
        v358 = (uint64_t *)((char *)v269 + *(int *)(v810 + 24));
        if (*v358 == 0xD000000000000011 && v358[1] == 0x80000001001F75A0
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          static os_log_type_t.error.getter();
          uint64_t v835 = qword_10026ADE8;
          uint64_t v359 = swift_allocObject();
          sub_1000C1DBC(v359, 3);
          uint64_t v361 = v360;
          uint64_t v362 = v181;
          v360[3] = (uint64_t)&type metadata for String;
          v360[4] = v181;
          *unint64_t v360 = v231;
          v360[1] = v185;
          swift_bridgeObjectRetain();
          id v363 = [v357 recordID];
          id v364 = [v363 recordName];

          uint64_t v365 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v366 = v185;
          uint64_t v368 = v367;

          v361[8] = (uint64_t)&type metadata for String;
          v361[9] = v362;
          v361[5] = v365;
          v361[6] = v368;
          uint64_t v133 = v366;
          uint64_t v369 = v841;
          uint64_t v370 = CKRecord.recordType.getter();
          v361[13] = (uint64_t)&type metadata for String;
          v361[14] = v362;
          uint64_t v134 = v369;
          v361[10] = v370;
          v361[11] = v371;
          BTUserTransaction.capture()();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_1000AA894((uint64_t)v851, &qword_100263BE0);
          v372 = type metadata accessor for DeviceRecord;
          v373 = &v837;
LABEL_116:
          sub_1001AEFFC(*(v373 - 32), (uint64_t (*)(void))v372);
          goto LABEL_214;
        }
        uint64_t v840 = v185;
        uint64_t v430 = v780;
        sub_100161850(v780);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v796 + 48))(v430, 1, v801) == 1)
        {
          sub_1000AA894(v430, (uint64_t *)&unk_100263BA0);
          id v237 = v833;
          uint64_t v238 = (uint64_t)v829;
LABEL_278:
          sub_10018DDDC((uint64_t)v269, v826 & 1);
          sub_1001AEFFC((uint64_t)v269, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
          v236 = (void *)v834;
          goto LABEL_202;
        }
        uint64_t v498 = v430;
        uint64_t v499 = v779;
        sub_1001AF05C(v498, v779, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        v500 = sub_100101DD0();
        v501 = sub_10013B424((unint64_t)v500, (char *)v269, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        swift_bridgeObjectRelease();
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
        if (v501)
        {
          id v502 = [v501 name];
          if (v502)
          {
            v503 = v502;
            uint64_t v504 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v506 = v505;

            v507 = (uint64_t *)((char *)v269 + *(int *)(v810 + 28));
            if (v504 == *v507 && v506 == v507[1])
            {
              swift_bridgeObjectRelease();
LABEL_272:
              uint64_t v620 = v779;
LABEL_275:
              sub_1001AEFFC(v620, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);

              goto LABEL_278;
            }
            char v619 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v619) {
              goto LABEL_272;
            }
          }
          uint64_t v621 = v779;
          sub_100197224((unint64_t *)&unk_100263BD0, (void (*)(uint64_t))&type metadata accessor for Date);
          if (dispatch thunk of static Comparable.< infix(_:_:)())
          {
            uint64_t v620 = v621;
            goto LABEL_275;
          }
          static os_log_type_t.default.getter();
          v831 = (void *)qword_10026ADE8;
          uint64_t v622 = swift_allocObject();
          sub_1000C1DBC(v622, 3);
          v624 = v623;
          unint64_t v625 = v837;
          v623[3] = &type metadata for String;
          v623[4] = v625;
          uint64_t v626 = v840;
          void *v623 = v841;
          v623[1] = v626;
          swift_bridgeObjectRetain();
          v627 = v501;
          id v628 = [v627 description];
          uint64_t v629 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v631 = v630;

          unint64_t v632 = v837;
          v624[8] = &type metadata for String;
          v624[9] = v632;
          v624[5] = v629;
          v624[6] = v631;
          v269 = v806;
          uint64_t v238 = (uint64_t)v829;
          uint64_t v633 = sub_1000A56C4();
          unint64_t v634 = v837;
          v624[13] = &type metadata for String;
          v624[14] = v634;
          v624[10] = v633;
          v624[11] = v635;
          id v237 = v833;
          BTUserTransaction.capture()();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          id v636 = objc_allocWithZone((Class)BTCloudDevice);
          swift_bridgeObjectRetain();
          NSString v637 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v638 = [v636 initWithBluetoothAddress:v637];

          id v639 = [v627 name];
          [v638 setNickname:v639];

          sub_1000A7F34(v638);
          uint64_t v577 = v779;
        }
        else
        {
          uint64_t v577 = v499;
        }
        sub_1001AEFFC(v577, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        goto LABEL_278;
      }
LABEL_200:
      static os_log_type_t.error.getter();
      uint64_t v510 = swift_allocObject();
      *(_OWORD *)(v510 + 16) = v767;
      unint64_t v511 = v837;
      *(void *)(v510 + 56) = &type metadata for String;
      *(void *)(v510 + 64) = v511;
      *(void *)(v510 + 32) = v231;
      *(void *)(v510 + 40) = v185;
      uint64_t v840 = v185;
      swift_bridgeObjectRetain();
      id v512 = v176;
      id v513 = [v512 description];
      uint64_t v514 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v516 = v515;

      *(void *)(v510 + 96) = &type metadata for String;
      *(void *)(v510 + 104) = v511;
      *(void *)(v510 + 72) = v514;
      *(void *)(v510 + 80) = v516;
      *(void *)&long long v848 = v234;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v517 = String.init<A>(describing:)();
      *(void *)(v510 + 136) = &type metadata for String;
      *(void *)(v510 + 144) = v511;
      *(void *)(v510 + 112) = v517;
      *(void *)(v510 + 120) = v518;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
LABEL_201:
      v236 = (void *)v834;
      id v237 = v833;
      uint64_t v238 = (uint64_t)v829;
LABEL_202:
      uint64_t v235 = v835;
      goto LABEL_203;
    }
    if (v183 == 0xD00000000000001ELL && v184 == 0x80000001001F6CC0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v412 = v176;
      uint64_t v413 = v788;
      uint64_t v234 = v770;
      sub_1000FA95C(v412, v788);
      if (!v234)
      {
        v414 = (void *)(v413 + *(int *)(v794 + 24));
        if (*v414 == 0xD000000000000011 && v414[1] == 0x80000001001F75A0
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          LODWORD(v834) = static os_log_type_t.error.getter();
          uint64_t v835 = qword_10026ADE8;
          uint64_t v415 = swift_allocObject();
          sub_1000C1DBC(v415, 3);
          v417 = v416;
          uint64_t v418 = v181;
          v416[3] = (uint64_t)&type metadata for String;
          v416[4] = v181;
          uint64_t *v416 = v231;
          v416[1] = v185;
          swift_bridgeObjectRetain();
          id v419 = [v412 recordID];
          id v420 = [v419 recordName];

          uint64_t v421 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v422 = v185;
          uint64_t v424 = v423;

          v417[8] = (uint64_t)&type metadata for String;
          v417[9] = v418;
          v417[5] = v421;
          v417[6] = v424;
          uint64_t v133 = v422;
          uint64_t v425 = v841;
          uint64_t v426 = CKRecord.recordType.getter();
          v417[13] = (uint64_t)&type metadata for String;
          v417[14] = v418;
          uint64_t v134 = v425;
          v417[10] = v426;
          v417[11] = v427;
          BTUserTransaction.capture()();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_1001AEFFC(v413, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          sub_1000AA894((uint64_t)v851, &qword_100263BE0);
          goto LABEL_214;
        }
        uint64_t v840 = v185;
        sub_10018E274(v413, v826 & 1);
        sub_1001AEFFC(v413, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        goto LABEL_201;
      }
      goto LABEL_200;
    }
    uint64_t v840 = v185;
    if (v183 == 0x746553636967614DLL && v184 == 0xED000073676E6974)
    {
      swift_bridgeObjectRelease();
      v236 = (void *)v834;
      id v237 = v833;
      uint64_t v238 = (uint64_t)v829;
      v431 = v781;
      goto LABEL_198;
    }
    char v508 = _stringCompareWithSmolCheck(_:_:expecting:)();
    v236 = (void *)v834;
    id v237 = v833;
    uint64_t v238 = (uint64_t)v829;
    v431 = v781;
    if (v508)
    {
      swift_bridgeObjectRelease();
LABEL_198:
      id v509 = v176;
      uint64_t v234 = v770;
      sub_1000DCE94(v509, (uint64_t)v431);
      if (v234)
      {
        uint64_t v185 = v840;
        goto LABEL_200;
      }
      v563 = &v431[*(int *)(v783 + 24)];
      if (*(void *)v563 == 0xD000000000000011 && *((void *)v563 + 1) == 0x80000001001F75A0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        static os_log_type_t.error.getter();
        uint64_t v835 = qword_10026ADE8;
        uint64_t v564 = swift_allocObject();
        sub_1000C1DBC(v564, 3);
        v566 = v565;
        uint64_t v567 = v837;
        v565[3] = (uint64_t)&type metadata for String;
        v565[4] = v567;
        uint64_t v568 = v840;
        uint64_t *v565 = v231;
        v565[1] = v568;
        swift_bridgeObjectRetain();
        id v569 = [v509 recordID];
        id v570 = [v569 recordName];

        uint64_t v571 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v573 = v572;

        v566[8] = (uint64_t)&type metadata for String;
        v566[9] = v567;
        v566[5] = v571;
        v566[6] = v573;
        uint64_t v133 = v568;
        uint64_t v574 = v841;
        uint64_t v575 = CKRecord.recordType.getter();
        v566[13] = (uint64_t)&type metadata for String;
        v566[14] = v567;
        uint64_t v134 = v574;
        v566[10] = v575;
        v566[11] = v576;
        BTUserTransaction.capture()();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        sub_1000AA894((uint64_t)v851, &qword_100263BE0);
        v372 = type metadata accessor for MagicPairingSettingsRecord;
        v373 = (unint64_t *)&v813;
        goto LABEL_116;
      }
      uint64_t v647 = v772;
      sub_100161850(v772);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v796 + 48))(v647, 1, v801) == 1)
      {
        sub_1000AA894(v647, (uint64_t *)&unk_100263BA0);
      }
      else
      {
        uint64_t v683 = v771;
        sub_1001AF05C(v647, v771, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        v684 = sub_100101DD0();
        v685 = sub_10013B424((unint64_t)v684, v431, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        swift_bridgeObjectRelease();
        if (v685)
        {
          sub_100197224((unint64_t *)&unk_100263BD0, (void (*)(uint64_t))&type metadata accessor for Date);
          if (dispatch thunk of static Comparable.< infix(_:_:)())
          {
            sub_1001AEFFC(v771, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);

            uint64_t v235 = v835;
            v236 = (void *)v834;
            id v237 = v833;
            v431 = v781;
          }
          else
          {
            LODWORD(v830) = static os_log_type_t.default.getter();
            v831 = (void *)qword_10026ADE8;
            uint64_t v709 = swift_allocObject();
            sub_1000C1DBC(v709, 3);
            v711 = v710;
            unint64_t v712 = v837;
            v710[3] = &type metadata for String;
            v710[4] = v712;
            uint64_t v713 = v840;
            void *v710 = v841;
            v710[1] = v713;
            swift_bridgeObjectRetain();
            id v714 = v509;
            id v715 = [v714 description];
            uint64_t v716 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v718 = v717;

            unint64_t v719 = v837;
            v711[8] = &type metadata for String;
            v711[9] = v719;
            v711[5] = v716;
            v711[6] = v718;
            v720 = v685;
            id v721 = [v720 description];
            uint64_t v722 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v724 = v723;

            unint64_t v725 = v837;
            v711[13] = &type metadata for String;
            v711[14] = v725;
            v711[10] = v722;
            v711[11] = v724;
            BTUserTransaction.capture()();
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
            v431 = v781;
            sub_1000DF374(v720);

            sub_1001AEFFC(v771, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
            uint64_t v235 = v835;
            v236 = (void *)v834;
            id v237 = v833;
          }
          goto LABEL_335;
        }
        sub_1001AEFFC(v683, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      }
      uint64_t v235 = v835;
LABEL_335:
      sub_10018E708((uint64_t)v431, v826 & 1);
      sub_1001AEFFC((uint64_t)v431, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
LABEL_203:
      id v519 = [v237 creationDate];
      if (v519)
      {
        v520 = v519;
        v521 = v832;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v522 = (void (*)(uint64_t, char *, uint64_t))v236[4];
        v522(v238, v521, v235);
        v523 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v236[7];
        v523(v238, 0, 1, v235);
        v524 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v236[6];
        int v525 = v524(v238, 1, v235);
        uint64_t v526 = v235;
        uint64_t v134 = v841;
        if (v525 != 1)
        {
          v527 = v823;
          v522((uint64_t)v823, (char *)v238, v526);
          if (v826)
          {
            uint64_t v528 = (uint64_t)v833;
            id v529 = [v833 modificationDate];
            unint64_t v530 = v837;
            if (v529)
            {
              v531 = v529;
              v532 = v832;
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v533 = (uint64_t)v809;
              v534 = v532;
              unint64_t v530 = v837;
              uint64_t v535 = v835;
              v522((uint64_t)v809, v534, v835);
              v523(v533, 0, 1, v535);
              uint64_t v536 = v535;
              uint64_t v528 = (uint64_t)v833;
              if (v524(v533, 1, v536) != 1)
              {
                uint64_t v537 = (uint64_t)v795;
                uint64_t v538 = v835;
                v522((uint64_t)v795, (char *)v533, v835);
                sub_100197224((unint64_t *)&unk_100263460, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v539 = (uint64_t)v823;
                char v540 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v541 = v834;
                if ((v540 & 1) == 0)
                {
                  sub_1001AE248(v528, 0, v539, v537, 0);
                  v551 = *(void (**)(uint64_t, uint64_t))(v541 + 8);
                  v551(v537, v538);
                  v551(v539, v538);
                  goto LABEL_213;
                }
                (*(void (**)(uint64_t, uint64_t))(v834 + 8))(v537, v538);
                goto LABEL_218;
              }
            }
            else
            {
              uint64_t v533 = (uint64_t)v809;
              v523((uint64_t)v809, 1, 1, v835);
            }
            sub_1000AA894(v533, &qword_100261D90);
            uint64_t v541 = v834;
            uint64_t v539 = (uint64_t)v823;
LABEL_218:
            uint64_t v547 = (uint64_t)v832;
            static Date.now.getter();
            sub_1001AE248(v528, 1, v539, v547, 0);
            v548 = *(void (**)(uint64_t, uint64_t))(v541 + 8);
            uint64_t v549 = v547;
            uint64_t v550 = v835;
            v548(v549, v835);
            v548(v539, v550);
            goto LABEL_213;
          }
          (*(void (**)(char *, uint64_t))(v834 + 8))(v527, v526);
LABEL_212:
          unint64_t v530 = v837;
LABEL_213:
          static os_log_type_t.default.getter();
          uint64_t v542 = swift_allocObject();
          *(_OWORD *)(v542 + 16) = xmmword_1001CFDB0;
          swift_bridgeObjectRetain();
          sub_1000AA024((uint64_t *)&unk_100263BE8);
          uint64_t v543 = Array.description.getter();
          uint64_t v545 = v544;
          swift_bridgeObjectRelease();
          *(void *)(v542 + 56) = &type metadata for String;
          *(void *)(v542 + 64) = v530;
          *(void *)(v542 + 32) = v543;
          *(void *)(v542 + 40) = v545;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_1000AA894((uint64_t)v851, &qword_100263BE0);
          uint64_t v133 = v840;
          goto LABEL_214;
        }
      }
      else
      {
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v236[7])(v238, 1, 1, v235);
        uint64_t v134 = v841;
      }
      sub_1000AA894(v238, &qword_100261D90);
      goto LABEL_212;
    }
    if (v183 == 0xD000000000000012 && v184 == 0x80000001001F6CA0)
    {
      swift_bridgeObjectRelease();
      uint64_t v235 = v835;
LABEL_270:
      sub_10016EFE0(v176, v826 & 1);
      goto LABEL_203;
    }
    char v618 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v235 = v835;
    if (v618)
    {
      swift_bridgeObjectRelease();
      goto LABEL_270;
    }
    if (v183 == 0x6563697665444141 && v184 == 0xEE0064726F636552
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      *((void *)&v849 + 1) = &type metadata for AudioAccessoryFeatures;
      unint64_t v850 = sub_1000AE4C4();
      char v686 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)&v848);
      if (v686)
      {
        id v687 = objc_allocWithZone((Class)type metadata accessor for AADeviceRecord());
        id v688 = v176;
        uint64_t v234 = v770;
        id v689 = sub_10012B730(v688);
        if (!v234)
        {
          v690 = v689;
          sub_10018EBA4(v689, v826 & 1);
LABEL_358:

LABEL_359:
          uint64_t v235 = v835;
          goto LABEL_51;
        }
        goto LABEL_356;
      }
    }
    else
    {
      if ((v183 != 0xD000000000000011 || v184 != 0x80000001001FDE80)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v183 == 0xD000000000000013 && v184 == 0x80000001001F7610)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v743 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v743 & 1) == 0)
          {
            static os_log_type_t.error.getter();
            uint64_t v757 = swift_allocObject();
            sub_1000C1DBC(v757, 2);
            v759 = v758;
            unint64_t v760 = v837;
            v758[3] = &type metadata for String;
            v758[4] = v760;
            uint64_t v761 = v840;
            void *v758 = v841;
            v758[1] = v761;
            swift_bridgeObjectRetain();
            id v762 = v176;
            id v763 = [v762 description];
            uint64_t v764 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v766 = v765;

            v759[8] = &type metadata for String;
            v759[9] = v760;
            v759[5] = v764;
            v759[6] = v766;
            BTUserTransaction.capture()();
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
            goto LABEL_359;
          }
        }
        goto LABEL_355;
      }
      swift_bridgeObjectRelease();
    }
    *((void *)&v849 + 1) = &type metadata for AudioAccessoryFeatures;
    unint64_t v850 = sub_1000AE4C4();
    char v705 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)&v848);
    if (v705)
    {
      id v706 = objc_allocWithZone((Class)type metadata accessor for AAProxCardsRecord());
      v707 = (char *)v176;
      uint64_t v234 = v770;
      v708 = sub_1000B0ED8(v707);
      if (!v234)
      {
        v690 = v708;
        sub_10018EF94(v708, v826 & 1);
        goto LABEL_358;
      }
LABEL_356:
      uint64_t v185 = v840;
      uint64_t v231 = v841;
      goto LABEL_200;
    }
LABEL_355:
    id v744 = objc_allocWithZone((Class)type metadata accessor for HMDeviceCloudRecord());
    id v745 = v176;
    uint64_t v234 = v770;
    v746 = sub_1000EF5DC(v745);
    if (!v234)
    {
      v690 = v746;
      sub_10018F37C(v746, v826 & 1);
      goto LABEL_358;
    }
    goto LABEL_356;
  }
  sub_1001AE550(&v845, (uint64_t)&v848);
  int v171 = IsAppleInternalBuild();
  uint64_t v841 = v156;
  if (v171) {
    int v172 = static os_log_type_t.default.getter();
  }
  else {
    int v172 = static os_log_type_t.debug.getter();
  }
  LODWORD(v822) = v172;
  uint64_t v186 = swift_allocObject();
  *(_OWORD *)(v186 + 16) = v825;
  uint64_t v187 = *((void *)&v849 + 1);
  unint64_t v188 = v850;
  sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
  uint64_t v189 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v188 + 56))(v187, v188);
  id v190 = [v189 recordID];

  id v191 = [v190 recordName];
  uint64_t v192 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v194 = v193;

  unint64_t v195 = v837;
  *(void *)(v186 + 56) = &type metadata for String;
  *(void *)(v186 + 64) = v195;
  *(void *)(v186 + 32) = v192;
  *(void *)(v186 + 40) = v194;
  uint64_t v196 = *((void *)&v849 + 1);
  unint64_t v197 = v850;
  sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
  v198 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v197 + 56))(v196, v197);
  id v199 = [v198 encryptedValues];

  id v200 = [v199 allKeys];
  swift_unknownObjectRelease();
  uint64_t v201 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v202);
  *((void *)&v767 - 2) = &v848;
  uint64_t v203 = v770;
  sub_10010732C((void (*)(uint64_t *__return_ptr, void *))sub_1001AE568, (uint64_t)(&v767 - 2), v201);
  uint64_t v818 = v203;
  swift_bridgeObjectRelease();
  uint64_t v204 = Array.description.getter();
  uint64_t v206 = v205;
  swift_bridgeObjectRelease();
  *(void *)(v186 + 96) = &type metadata for String;
  *(void *)(v186 + 104) = v195;
  *(void *)(v186 + 72) = v204;
  *(void *)(v186 + 80) = v206;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v207 = *((void *)&v849 + 1);
  unint64_t v208 = v850;
  sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
  v209 = v828;
  (*(void (**)(uint64_t))(*(void *)(v208 + 8) + 32))(v207);
  uint64_t v210 = UUID.uuidString.getter();
  uint64_t v212 = v211;
  ((void (*)(char *, void *))v830[1])(v209, v831);
  id v213 = v833;
  id v214 = [v833 recordID];
  id v215 = [v214 recordName];

  uint64_t v216 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v218 = v217;

  if (v210 == v216 && v212 == v218)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v219 = v835;
    uint64_t v220 = v834;
    uint64_t v221 = (uint64_t)v827;
    goto LABEL_44;
  }
  char v222 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v219 = v835;
  uint64_t v220 = v834;
  uint64_t v221 = (uint64_t)v827;
  if (v222)
  {
LABEL_44:
    id v223 = [v213 modificationDate];
    if (v223)
    {
      v224 = v223;
      v225 = v832;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v226 = *(void (**)(uint64_t, char *, uint64_t))(v220 + 32);
      v226(v221, v225, v219);
      uint64_t v227 = *(void **)(v220 + 56);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v227)(v221, 0, 1, v219);
      uint64_t v228 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
      if (v228(v221, 1, v219) != 1)
      {
        uint64_t v229 = (uint64_t)v824;
        v226((uint64_t)v824, (char *)v221, v219);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v227)(v229, 0, 1, v219);
        uint64_t v249 = v228;
        int v250 = v228(v229, 1, v219);
        goto LABEL_60;
      }
      uint64_t v229 = (uint64_t)v824;
      id v213 = v833;
    }
    else
    {
      uint64_t v227 = *(void **)(v220 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v227)(v221, 1, 1, v219);
      uint64_t v229 = (uint64_t)v824;
    }
    id v239 = [v213 creationDate];
    uint64_t v240 = (uint64_t)v819;
    if (v239)
    {
      v241 = v239;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v242 = 0;
    }
    else
    {
      uint64_t v242 = 1;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v227)(v240, v242, 1, v219);
    sub_1000E8A70(v240, v229, &qword_100261D90);
    sub_1000AA894(v221, &qword_100261D90);
    uint64_t v249 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
    int v250 = v249(v229, 1, v219);
LABEL_60:
    if (v250 == 1)
    {
      sub_1000AA894(v229, &qword_100261D90);
LABEL_67:
      id v268 = v833;
LABEL_96:
      static os_log_type_t.default.getter();
      uint64_t v338 = swift_allocObject();
      *(_OWORD *)(v338 + 16) = v825;
      unint64_t v339 = v837;
      *(void *)(v338 + 56) = &type metadata for String;
      *(void *)(v338 + 64) = v339;
      *(void *)(v338 + 32) = v841;
      uint64_t v340 = v840;
      *(void *)(v338 + 40) = v840;
      uint64_t v840 = v340;
      swift_bridgeObjectRetain();
      uint64_t v108 = (uint64_t)v268;
      id v341 = [(id)v108 description];
      uint64_t v342 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v344 = v343;

      *(void *)(v338 + 96) = &type metadata for String;
      *(void *)(v338 + 104) = v339;
      *(void *)(v338 + 72) = v342;
      *(void *)(v338 + 80) = v344;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      a1 = CKRecord.recordType.getter();
      uint64_t v3 = v345;
      if (a1 == 0x654B72657473614DLL && v345 == (char *)0xE900000000000079)
      {
        swift_bridgeObjectRelease();
        uint64_t v346 = v841;
        uint64_t v347 = v837;
        uint64_t v348 = v840;
        goto LABEL_101;
      }
      char v349 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v346 = v841;
      uint64_t v347 = v837;
      uint64_t v348 = v840;
      if (v349)
      {
        swift_bridgeObjectRelease();
LABEL_101:
        id v350 = (id)v108;
        uint64_t v351 = v821;
        uint64_t v352 = v818;
        sub_1000BDFC4(v350, v821);
        if (!v352)
        {
          sub_10018F764(v351, v826 & 1);
          sub_1001AEFFC(v351, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
LABEL_174:
          uint64_t v235 = v835;
          v236 = (void *)v834;
          id v237 = v833;
          uint64_t v238 = (uint64_t)v829;
LABEL_175:
          sub_1000ABFF0((uint64_t)&v848);
          goto LABEL_203;
        }
LABEL_173:
        static os_log_type_t.error.getter();
        uint64_t v436 = swift_allocObject();
        sub_1000C1DBC(v436, 3);
        v438 = v437;
        v437[3] = (uint64_t)&type metadata for String;
        v437[4] = v347;
        uint64_t *v437 = v346;
        v437[1] = v348;
        swift_bridgeObjectRetain();
        id v439 = (id)v108;
        id v440 = [v439 description];
        uint64_t v441 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v443 = v442;

        unint64_t v444 = v837;
        v438[8] = (uint64_t)&type metadata for String;
        v438[9] = v444;
        v438[5] = v441;
        v438[6] = v443;
        *(void *)&long long v845 = v352;
        swift_errorRetain();
        sub_1000AA024(&qword_100261D60);
        uint64_t v445 = String.init<A>(describing:)();
        unint64_t v446 = v837;
        v438[13] = (uint64_t)&type metadata for String;
        v438[14] = v446;
        v438[10] = v445;
        v438[11] = v447;
        BTUserTransaction.capture()();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        goto LABEL_174;
      }
      if (a1 == 0x6552656369766544 && v3 == (char *)0xEC00000064726F63
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v353 = (id)v108;
        uint64_t v354 = v805;
        uint64_t v352 = v818;
        sub_1000A6E98(v353, (uint64_t *)v805);
        if (v352) {
          goto LABEL_173;
        }
        uint64_t v355 = v793;
        sub_100161850(v793);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v796 + 48))(v355, 1, v801) == 1)
        {
          sub_1000AA894(v355, (uint64_t *)&unk_100263BA0);
          uint64_t v235 = v835;
          v236 = (void *)v834;
          id v237 = v833;
          uint64_t v238 = (uint64_t)v829;
LABEL_247:
          sub_10018DDDC((uint64_t)v354, v826 & 1);
          v432 = type metadata accessor for DeviceRecord;
          goto LABEL_248;
        }
        uint64_t v388 = v791;
        sub_1001AF05C(v355, v791, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        v389 = sub_100101DD0();
        v390 = sub_10013B424((unint64_t)v389, v354, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        swift_bridgeObjectRelease();
        uint64_t v235 = v835;
        v236 = (void *)v834;
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
        if (!v390)
        {
          sub_1001AEFFC(v388, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
          goto LABEL_247;
        }
        id v391 = [v390 name];
        if (v391)
        {
          v392 = v391;
          uint64_t v393 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v395 = v394;

          v396 = &v805[*(int *)(v810 + 28)];
          if (v393 == *(void *)v396 && v395 == *((void *)v396 + 1))
          {
            swift_bridgeObjectRelease();
LABEL_181:
            sub_1001AEFFC(v388, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);

            uint64_t v354 = v805;
            goto LABEL_247;
          }
          char v453 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v453) {
            goto LABEL_181;
          }
        }
        uint64_t v454 = v810;
        v455 = (uint64_t *)v805;
        v456 = &v805[*(int *)(v810 + 24)];
        v457 = *(char **)v456;
        uint64_t v458 = *((void *)v456 + 1);
        id v459 = objc_allocWithZone((Class)BTCloudDevice);
        swift_bridgeObjectRetain();
        v824 = v457;
        NSString v460 = String._bridgeToObjectiveC()();
        *(void *)&long long v825 = v458;
        swift_bridgeObjectRelease();
        v831 = [v459 initWithBluetoothAddress:v460];

        LODWORD(v828) = static os_log_type_t.default.getter();
        v830 = (void (**)(char *, uint64_t, void *))qword_10026ADE8;
        uint64_t v461 = swift_allocObject();
        v827 = (void (*)(char *, uint64_t))sub_1000C1DBC(v461, 3);
        unint64_t v462 = v837;
        v464 = v463;
        v463[3] = &type metadata for String;
        v463[4] = v462;
        uint64_t v465 = v840;
        void *v463 = v841;
        v463[1] = v465;
        swift_bridgeObjectRetain();
        v466 = v390;
        id v467 = [v466 description];
        uint64_t v468 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v470 = v469;
        v471 = v466;

        uint64_t v472 = v454;
        v464[8] = &type metadata for String;
        v464[9] = v462;
        v464[5] = v468;
        v464[6] = v470;
        uint64_t v473 = sub_1000A56C4();
        v464[13] = &type metadata for String;
        v464[14] = v462;
        v464[10] = v473;
        v464[11] = v474;
        uint64_t v235 = v835;
        BTUserTransaction.capture()();
        uint64_t v475 = v791;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        sub_100197224((unint64_t *)&unk_100263BD0, (void (*)(uint64_t))&type metadata accessor for Date);
        if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
        {
          id v552 = [v471 name];
          [v831 setNickname:v552];

          static os_log_type_t.default.getter();
          uint64_t v553 = swift_allocObject();
          sub_1000C1DBC(v553, 3);
          v555 = v554;
          v554[3] = &type metadata for String;
          v554[4] = v462;
          uint64_t v556 = v840;
          void *v554 = v841;
          v554[1] = v556;
          swift_bridgeObjectRetain();
          id v557 = [v471 name];
          v481 = v471;
          if (v557)
          {
            v558 = v557;
            uint64_t v559 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v561 = v560;
          }
          else
          {
            uint64_t v559 = 0;
            uint64_t v561 = 0;
          }
          uint64_t v238 = (uint64_t)v829;
          uint64_t v354 = v805;
          *(void *)&long long v845 = v559;
          *((void *)&v845 + 1) = v561;
          sub_1000AA024(&qword_1002632D0);
          uint64_t v580 = String.init<A>(describing:)();
          unint64_t v581 = v837;
          v555[8] = &type metadata for String;
          v555[9] = v581;
          v555[5] = v580;
          v555[6] = v582;
          v583 = &v354[*(int *)(v810 + 28)];
          uint64_t v584 = *(void *)v583;
          uint64_t v585 = *((void *)v583 + 1);
          v555[13] = &type metadata for String;
          v555[14] = v581;
          v555[10] = v584;
          v555[11] = v585;
          BTUserTransaction.capture()();
          swift_bridgeObjectRetain();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v235 = v835;
          uint64_t v475 = v791;
          id v480 = v831;
          goto LABEL_246;
        }
        v476 = (uint64_t *)((char *)v455 + *(int *)(v472 + 40));
        uint64_t v477 = *v476;
        unint64_t v478 = v476[1];
        swift_bridgeObjectRetain();
        uint64_t v479 = sub_10015430C(v477, v478);
        uint64_t v238 = (uint64_t)v829;
        uint64_t v354 = (char *)v455;
        id v480 = v831;
        v481 = v471;
        if (v482) {
          goto LABEL_246;
        }
        uint64_t v483 = v479;
        id v484 = [v471 name];
        if (!v484) {
          goto LABEL_246;
        }
        v485 = v484;
        uint64_t v486 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v488 = v487;

        swift_bridgeObjectRelease();
        uint64_t v489 = HIBYTE(v488) & 0xF;
        BOOL v490 = (v488 & 0x2000000000000000) == 0;
        uint64_t v475 = v791;
        if (v490) {
          uint64_t v489 = v486 & 0xFFFFFFFFFFFFLL;
        }
        if (!v489) {
          goto LABEL_246;
        }
        id v491 = [self getProductNameFromProductID:v483];
        uint64_t v492 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v494 = v493;

        v495 = &v354[*(int *)(v810 + 28)];
        uint64_t v497 = *(void *)v495;
        uint64_t v496 = *((void *)v495 + 1);
        if (v492 == *(void *)v495 && v494 == v496)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v667 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t v475 = v791;
          if ((v667 & 1) == 0)
          {
LABEL_246:
            sub_1000A7F34(v480);

            sub_1001AEFFC(v475, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
            v236 = (void *)v834;
            id v237 = v833;
            goto LABEL_247;
          }
        }
        static os_log_type_t.default.getter();
        v830 = (void (**)(char *, uint64_t, void *))qword_10026ADE8;
        uint64_t v668 = swift_allocObject();
        sub_1000C1DBC(v668, 3);
        uint64_t v669 = v840;
        v671 = v670;
        unint64_t v672 = v837;
        v670[3] = &type metadata for String;
        v670[4] = v672;
        void *v670 = v841;
        v670[1] = v669;
        swift_bridgeObjectRetain();
        id v673 = [v481 name];
        if (v673)
        {
          v674 = v673;
          uint64_t v675 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v677 = v676;
        }
        else
        {
          uint64_t v675 = 0;
          uint64_t v677 = 0;
        }
        *(void *)&long long v845 = v675;
        *((void *)&v845 + 1) = v677;
        sub_1000AA024(&qword_1002632D0);
        uint64_t v691 = String.init<A>(describing:)();
        unint64_t v692 = v837;
        v671[8] = &type metadata for String;
        v671[9] = v692;
        v671[5] = v691;
        v671[6] = v693;
        v671[13] = &type metadata for String;
        v671[14] = v692;
        v671[10] = v497;
        v671[11] = v496;
        BTUserTransaction.capture()();
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        id v694 = objc_allocWithZone((Class)BTCloudDevice);
        swift_bridgeObjectRetain();
        NSString v695 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v696 = [v694 initWithBluetoothAddress:v695];

        id v697 = [v481 name];
        [v696 setNickname:v697];

        uint64_t v235 = v835;
        uint64_t v238 = (uint64_t)v829;
        uint64_t v475 = v791;
        uint64_t v354 = v805;
        goto LABEL_246;
      }
      if (a1 == 0xD00000000000001ELL && v3 == (char *)0x80000001001F6CC0
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        id v400 = (id)v108;
        uint64_t v354 = v790;
        uint64_t v352 = v818;
        sub_1000FA95C(v400, (uint64_t)v790);
        if (v352) {
          goto LABEL_173;
        }
        sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
        sub_1000AA024((uint64_t *)&unk_100263BE8);
        uint64_t v401 = (uint64_t)v784;
        uint64_t v402 = v794;
        char v403 = swift_dynamicCast();
        v404 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v792 + 56);
        if (v403)
        {
          v404(v401, 0, 1, v402);
          uint64_t v405 = v776;
          sub_1001AF05C(v401, v776, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
          id v406 = sub_1000C9E80();
          sub_1000FC230(v406);

          sub_1001AEFFC(v405, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        }
        else
        {
          v404(v401, 1, 1, v402);
          sub_1000AA894(v401, (uint64_t *)&unk_100263A00);
        }
        uint64_t v235 = v835;
        v236 = (void *)v834;
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
        sub_10018E274((uint64_t)v354, v826 & 1);
        v432 = type metadata accessor for DeviceSupportInformationRecord;
LABEL_248:
        sub_1001AEFFC((uint64_t)v354, (uint64_t (*)(void))v432);
        goto LABEL_175;
      }
      if (a1 == 0x746553636967614DLL && v3 == (char *)0xED000073676E6974)
      {
        swift_bridgeObjectRelease();
        uint64_t v428 = (uint64_t)v782;
        v429 = v785;
        goto LABEL_172;
      }
      char v434 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v428 = (uint64_t)v782;
      v429 = v785;
      if (v434)
      {
        swift_bridgeObjectRelease();
LABEL_172:
        id v435 = (id)v108;
        uint64_t v352 = v818;
        sub_1000DCE94(v435, (uint64_t)v429);
        if (v352) {
          goto LABEL_173;
        }
        uint64_t v562 = v773;
        sub_100161850(v773);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v796 + 48))(v562, 1, v801) == 1)
        {
          sub_1000AA894(v562, (uint64_t *)&unk_100263BA0);
          uint64_t v235 = v835;
          v236 = (void *)v834;
          id v237 = v833;
          uint64_t v238 = (uint64_t)v829;
LABEL_298:
          uint64_t v666 = (uint64_t)v785;
          sub_10018E708((uint64_t)v785, v826 & 1);
          sub_1001AEFFC(v666, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          goto LABEL_175;
        }
        sub_1001AF05C(v562, v428, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        v578 = sub_100101DD0();
        v579 = sub_10013B424((unint64_t)v578, v429, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        swift_bridgeObjectRelease();
        uint64_t v235 = v835;
        v236 = (void *)v834;
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
        if (v579)
        {
          sub_100197224((unint64_t *)&unk_100263BD0, (void (*)(uint64_t))&type metadata accessor for Date);
          if (dispatch thunk of static Comparable.< infix(_:_:)())
          {
            sub_1001AEFFC(v428, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);

            goto LABEL_298;
          }
          LODWORD(v830) = static os_log_type_t.default.getter();
          v831 = (void *)qword_10026ADE8;
          uint64_t v649 = swift_allocObject();
          sub_1000C1DBC(v649, 3);
          v651 = v650;
          uint64_t v652 = v837;
          v650[3] = (uint64_t)&type metadata for String;
          v650[4] = v652;
          uint64_t v653 = v840;
          uint64_t *v650 = v346;
          v650[1] = v653;
          swift_bridgeObjectRetain();
          id v654 = v435;
          id v655 = [v654 description];
          uint64_t v656 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v658 = v657;

          unint64_t v659 = v837;
          v651[8] = (uint64_t)&type metadata for String;
          v651[9] = v659;
          v651[5] = v656;
          v651[6] = v658;
          uint64_t v235 = v835;
          v660 = v579;
          id v661 = [v660 description];
          uint64_t v662 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v664 = v663;

          unint64_t v665 = v837;
          v651[13] = (uint64_t)&type metadata for String;
          v651[14] = v665;
          v651[10] = v662;
          v651[11] = v664;
          id v237 = v833;
          v236 = (void *)v834;
          BTUserTransaction.capture()();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_1000DF374(v660);

          uint64_t v648 = (uint64_t)v782;
        }
        else
        {
          uint64_t v648 = v428;
        }
        sub_1001AEFFC(v648, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        goto LABEL_298;
      }
      if (a1 == 0xD000000000000012 && v3 == (char *)0x80000001001F6CA0)
      {
        swift_bridgeObjectRelease();
        uint64_t v235 = v835;
        v236 = (void *)v834;
        id v237 = v833;
        uint64_t v238 = (uint64_t)v829;
LABEL_262:
        sub_10016EFE0((void *)v108, v826 & 1);
        goto LABEL_175;
      }
LABEL_260:
      char v611 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v235 = v835;
      v236 = (void *)v834;
      id v237 = v833;
      uint64_t v238 = (uint64_t)v829;
      if (v611)
      {
        swift_bridgeObjectRelease();
        goto LABEL_262;
      }
      if (a1 == 0x6563697665444141 && v3 == (char *)0xEE0064726F636552
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v846 = &type metadata for AudioAccessoryFeatures;
        unint64_t v847 = sub_1000AE4C4();
        char v678 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)&v845);
        if (v678)
        {
          id v679 = objc_allocWithZone((Class)type metadata accessor for AADeviceRecord());
          id v680 = (id)v108;
          uint64_t v352 = v818;
          id v681 = sub_10012B730(v680);
          if (!v352)
          {
            v682 = v681;
            sub_10018EBA4(v681, v826 & 1);

            goto LABEL_174;
          }
          goto LABEL_352;
        }
      }
      else
      {
        if ((a1 != 0xD000000000000011 || v3 != (char *)0x80000001001FDE80)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (a1 == 0xD000000000000013 && v3 == (char *)0x80000001001F7610)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v738 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v738 & 1) == 0)
            {
              static os_log_type_t.error.getter();
              uint64_t v747 = swift_allocObject();
              sub_1000C1DBC(v747, 2);
              v749 = v748;
              unint64_t v750 = v837;
              v748[3] = &type metadata for String;
              v748[4] = v750;
              uint64_t v751 = v840;
              void *v748 = v841;
              v748[1] = v751;
              swift_bridgeObjectRetain();
              id v752 = (id)v108;
              id v753 = [v752 description];
              uint64_t v754 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v756 = v755;

              v749[8] = &type metadata for String;
              v749[9] = v750;
              v749[5] = v754;
              v749[6] = v756;
              BTUserTransaction.capture()();
              os_log(_:dso:log:_:_:)();
              swift_bridgeObjectRelease();
              goto LABEL_174;
            }
          }
          goto LABEL_351;
        }
        swift_bridgeObjectRelease();
      }
      v846 = &type metadata for AudioAccessoryFeatures;
      unint64_t v847 = sub_1000AE4C4();
      char v699 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)&v845);
      if (v699)
      {
        id v700 = objc_allocWithZone((Class)type metadata accessor for AAProxCardsRecord());
        v701 = (char *)(id)v108;
        uint64_t v352 = v818;
        v702 = sub_1000B0ED8(v701);
        if (!v352)
        {
          v703 = v702;
          sub_10018EF94(v702, v826 & 1);

          goto LABEL_174;
        }
        goto LABEL_352;
      }
LABEL_351:
      id v739 = objc_allocWithZone((Class)type metadata accessor for HMDeviceCloudRecord());
      id v740 = (id)v108;
      uint64_t v352 = v818;
      v741 = sub_1000EF5DC(v740);
      if (!v352)
      {
        v742 = v741;
        sub_10018F37C(v741, v826 & 1);

        goto LABEL_174;
      }
LABEL_352:
      uint64_t v348 = v840;
      uint64_t v346 = v841;
      uint64_t v347 = v837;
      goto LABEL_173;
    }
    v831 = v227;
    uint64_t v251 = v820;
    v830 = *(void (***)(char *, uint64_t, void *))(v220 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v830)(v820, v229, v219);
    uint64_t v252 = *((void *)&v849 + 1);
    unint64_t v253 = v850;
    sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
    v254 = v832;
    (*(void (**)(uint64_t, unint64_t))(v253 + 40))(v252, v253);
    LOBYTE(v252) = static Date.> infix(_:_:)();
    uint64_t v255 = v219;
    uint64_t v257 = (void (*)(char *, uint64_t))(v220 + 8);
    uint64_t v256 = *(void (**)(char *, uint64_t))(v220 + 8);
    v256(v254, v255);
    if ((v252 & 1) == 0)
    {
      v256(v251, v255);
      goto LABEL_67;
    }
    v829 = (char *)(v220 + 32);
    uint64_t v258 = v255;
    v828 = (char *)v256;
    v827 = v257;
    static os_log_type_t.error.getter();
    uint64_t v259 = swift_allocObject();
    sub_1000C1DBC(v259, 1);
    uint64_t v261 = v260;
    sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
    sub_1000AA024((uint64_t *)&unk_100263BE8);
    uint64_t v262 = String.init<A>(describing:)();
    uint64_t v263 = v837;
    v261[3] = (uint64_t)&type metadata for String;
    v261[4] = v263;
    *uint64_t v261 = v262;
    v261[1] = v264;
    BTUserTransaction.capture()();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v266 = CKRecord.recordType.getter();
    uint64_t v267 = v265;
    if (v266 == 0x6552656369766544 && v265 == 0xEC00000064726F63
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
      uint64_t v276 = (uint64_t)v803;
      uint64_t v277 = v810;
      char v278 = swift_dynamicCast();
      uint64_t v279 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v802 + 56);
      if (v278)
      {
        v279(v276, 0, 1, v277);
        uint64_t v280 = v276;
        uint64_t v281 = v798;
        sub_1001AF05C(v280, v798, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v282 = v833;
        uint64_t v283 = v797;
        uint64_t v284 = v818;
        sub_1000A6E98(v282, v797);
        if (v284)
        {
          uint64_t v826 = (uint64_t)v249;
          unint64_t v285 = type metadata accessor for DeviceRecord;
LABEL_78:
          unint64_t v286 = v285;
          uint64_t v287 = v281;
LABEL_79:
          sub_1001AEFFC(v287, (uint64_t (*)(void))v286);
LABEL_80:
          unint64_t v288 = v837;
          id v289 = v833;
LABEL_81:
          LODWORD(v824) = static os_log_type_t.error.getter();
          *(void *)&long long v825 = qword_10026ADE8;
          uint64_t v290 = swift_allocObject();
          sub_1000C1DBC(v290, 3);
          unint64_t v292 = v291;
          v291[3] = &type metadata for String;
          v291[4] = v288;
          uint64_t v293 = v840;
          *unint64_t v291 = v841;
          v291[1] = v293;
          swift_bridgeObjectRetain();
          id v294 = v289;
          id v295 = [v294 description];
          uint64_t v296 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v298 = v297;

          v292[8] = &type metadata for String;
          v292[9] = v288;
          v292[5] = v296;
          v292[6] = v298;
          *(void *)&long long v845 = v284;
          swift_errorRetain();
          sub_1000AA024(&qword_100261D60);
          uint64_t v299 = String.init<A>(describing:)();
          v292[13] = &type metadata for String;
          v292[14] = v288;
          v292[10] = v299;
          v292[11] = v300;
          BTUserTransaction.capture()();
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v301 = swift_errorRelease();
LABEL_82:
          uint64_t v258 = v835;
          uint64_t v249 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v826;
LABEL_251:
          sub_100162CD8(v301);
          uint64_t v588 = *((void *)&v849 + 1);
          unint64_t v589 = v850;
          sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
          v590 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v589 + 56))(v588, v589);
          id v591 = [v590 creationDate];

          uint64_t v592 = (uint64_t)v808;
          if (v591)
          {
            v593 = v832;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            v594 = (void (*)(char *, uint64_t, uint64_t))v830;
            ((void (*)(uint64_t, char *, uint64_t))v830)(v592, v593, v258);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v831)(v592, 0, 1, v258);
          }
          else
          {
            v594 = (void (*)(char *, uint64_t, uint64_t))v830;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v831)(v808, 1, 1, v258);
          }
          sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
          if (v249(v592, 1, v258) == 1)
          {
            v595 = v846;
            unint64_t v596 = v847;
            sub_1000ABF58(&v845, (uint64_t)v846);
            v597 = v807;
            (*(void (**)(ValueMetadata *, unint64_t))(v596 + 40))(v595, v596);
            sub_1000AA894(v592, &qword_100261D90);
          }
          else
          {
            v597 = v807;
            v594(v807, v592, v258);
          }
          uint64_t v133 = v840;
          v598 = v820;
          uint64_t v134 = v841;
          sub_1000ABFF0((uint64_t)&v845);
          Date.timeIntervalSince1970.getter();
          double v600 = v599;
          v601 = (void (*)(char *, uint64_t))v828;
          ((void (*)(char *, uint64_t))v828)(v597, v258);
          Date.timeIntervalSince1970.getter();
          id v603 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v600 - v602];
          NSString v604 = String._bridgeToObjectiveC()();
          sub_1000AA024(&qword_1002631E8);
          uint64_t v605 = swift_allocObject();
          sub_1000C1DAC(v605, 1);
          void *v606 = 0xD00000000000001ALL;
          v606[1] = 0x80000001001FFA20;
          v606[2] = v603;
          BTUserTransaction.capture()();
          uint64_t v608 = v607;
          id v609 = v603;
          sub_1000AFB88(v608);
          sub_1000B66A0(0, &qword_1002631F0);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          CUMetricsLog();

          v601(v598, v258);
          sub_1000AA894((uint64_t)v851, &qword_100263BE0);
          sub_1000ABFF0((uint64_t)&v848);
          goto LABEL_214;
        }
        uint64_t v397 = v281;
        id v398 = sub_1000C50F4();
        sub_1000A7F34(v398);

        sub_10018DDDC((uint64_t)v283, 0);
        v399 = type metadata accessor for DeviceRecord;
        goto LABEL_250;
      }
      v279(v276, 1, 1, v277);
      v374 = (uint64_t *)&unk_100263A10;
      goto LABEL_223;
    }
    if (v266 == 0xD00000000000001ELL && v267 == 0x80000001001F6CC0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
      uint64_t v276 = (uint64_t)v789;
      uint64_t v407 = v794;
      char v408 = swift_dynamicCast();
      v409 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v792 + 56);
      if (v408)
      {
        v409(v276, 0, 1, v407);
        uint64_t v410 = v787;
        sub_1001AF05C(v276, v787, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        id v411 = v833;
        uint64_t v283 = v786;
        uint64_t v284 = v818;
        sub_1000FA95C(v411, (uint64_t)v786);
        if (v284)
        {
          uint64_t v826 = (uint64_t)v249;
          unint64_t v286 = type metadata accessor for DeviceSupportInformationRecord;
          uint64_t v287 = v410;
          goto LABEL_79;
        }
        uint64_t v397 = v410;
        id v433 = sub_1000C9E80();
        sub_1000FC230(v433);

        sub_10018E274((uint64_t)v283, 0);
        v399 = type metadata accessor for DeviceSupportInformationRecord;
        goto LABEL_250;
      }
      v409(v276, 1, 1, v407);
      v374 = (uint64_t *)&unk_100263A00;
      goto LABEL_223;
    }
    if (v266 == 0x746553636967614DLL && v267 == 0xED000073676E6974
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
      uint64_t v276 = (uint64_t)v778;
      uint64_t v448 = v783;
      char v449 = swift_dynamicCast();
      v450 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v777 + 56);
      if (v449)
      {
        v450(v276, 0, 1, v448);
        uint64_t v451 = v276;
        uint64_t v281 = v775;
        sub_1001AF05C(v451, v775, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        id v452 = v833;
        uint64_t v283 = v774;
        uint64_t v284 = v818;
        sub_1000DCE94(v452, (uint64_t)v774);
        if (v284)
        {
          uint64_t v826 = (uint64_t)v249;
          unint64_t v285 = type metadata accessor for MagicPairingSettingsRecord;
          goto LABEL_78;
        }
        uint64_t v397 = v281;
        id v586 = sub_1000CE96C();
        sub_1000DF374(v586);

        sub_10018E708((uint64_t)v283, 0);
        v399 = type metadata accessor for MagicPairingSettingsRecord;
LABEL_250:
        v587 = v399;
        sub_1001AEFFC((uint64_t)v283, (uint64_t (*)(void))v399);
        uint64_t v301 = sub_1001AEFFC(v397, (uint64_t (*)(void))v587);
        goto LABEL_251;
      }
      v450(v276, 1, 1, v448);
      v374 = &qword_1002623D0;
LABEL_223:
      uint64_t v301 = sub_1000AA894(v276, v374);
      goto LABEL_251;
    }
    if (v266 == 0x6563697665444141 && v267 == 0xEE0064726F636552
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v846 = &type metadata for AudioAccessoryFeatures;
      unint64_t v847 = sub_1000AE4C4();
      char v612 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)&v845);
      if (v612)
      {
        sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
        v613 = (objc_class *)type metadata accessor for AADeviceRecord();
        uint64_t v301 = swift_dynamicCast();
        if ((v301 & 1) == 0) {
          goto LABEL_251;
        }
        v614 = v842;
        id v615 = objc_allocWithZone(v613);
        id v616 = v833;
        uint64_t v284 = v818;
        id v617 = sub_10012B730(v616);
        if (!v284)
        {
          v698 = v617;
          sub_10012EAB4(v614);
          sub_10018EBA4(v698, 0);

          goto LABEL_251;
        }
        uint64_t v826 = (uint64_t)v249;

        goto LABEL_80;
      }
    }
    else
    {
      if ((v266 != 0xD000000000000011 || v267 != 0x80000001001FDE80)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        v704 = v249;
        if (v266 == 0xD000000000000013 && v267 == 0x80000001001F7610)
        {
          swift_bridgeObjectRelease();
          uint64_t v258 = v835;
        }
        else
        {
          char v726 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t v258 = v835;
          if ((v726 & 1) == 0)
          {
            static os_log_type_t.error.getter();
            uint64_t v826 = qword_10026ADE8;
            uint64_t v731 = swift_allocObject();
            sub_1000C1DBC(v731, 2);
            v733 = v732;
            unint64_t v734 = v837;
            v732[3] = &type metadata for String;
            v732[4] = v734;
            uint64_t v735 = v840;
            void *v732 = v841;
            v732[1] = v735;
            swift_bridgeObjectRetain();
            uint64_t v736 = CKRecord.recordType.getter();
            v733[8] = &type metadata for String;
            v733[9] = v734;
            uint64_t v249 = v704;
            v733[5] = v736;
            v733[6] = v737;
            BTUserTransaction.capture()();
            os_log(_:dso:log:_:_:)();
            uint64_t v301 = swift_bridgeObjectRelease();
            goto LABEL_251;
          }
        }
        goto LABEL_338;
      }
      swift_bridgeObjectRelease();
    }
    v846 = &type metadata for AudioAccessoryFeatures;
    unint64_t v847 = sub_1000AE4C4();
    char v640 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)&v845);
    if (v640)
    {
      sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
      v641 = (objc_class *)type metadata accessor for AAProxCardsRecord();
      uint64_t v301 = swift_dynamicCast();
      if ((v301 & 1) == 0) {
        goto LABEL_251;
      }
      uint64_t v826 = (uint64_t)v249;
      v642 = (char *)v842;
      id v643 = objc_allocWithZone(v641);
      id v289 = v833;
      v644 = (char *)v833;
      uint64_t v284 = v818;
      v645 = sub_1000B0ED8(v644);
      if (!v284)
      {
        v646 = v645;
        sub_1000B3E9C(v642);
        sub_10018EF94(v646, 0);
LABEL_342:

        goto LABEL_82;
      }
      goto LABEL_340;
    }
LABEL_338:
    sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
    v727 = (objc_class *)type metadata accessor for HMDeviceCloudRecord();
    uint64_t v301 = swift_dynamicCast();
    if ((v301 & 1) == 0) {
      goto LABEL_251;
    }
    uint64_t v826 = (uint64_t)v249;
    v642 = (char *)v842;
    id v728 = objc_allocWithZone(v727);
    id v289 = v833;
    id v729 = v833;
    uint64_t v284 = v818;
    v730 = sub_1000EF5DC(v729);
    if (!v284)
    {
      v646 = v730;
      sub_1000F5E78(v642);
      sub_10018F37C(v646, 0);
      goto LABEL_342;
    }
LABEL_340:

    unint64_t v288 = v837;
    goto LABEL_81;
  }
  id v243 = [v213 creationDate];
  if (v243)
  {
    uint64_t v244 = v243;
    uint64_t v245 = (uint64_t)v811;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v246 = *(void **)(v220 + 56);
    uint64_t v247 = (char *)v245;
    uint64_t v248 = 0;
  }
  else
  {
    v246 = *(void **)(v220 + 56);
    uint64_t v245 = (uint64_t)v811;
    uint64_t v247 = v811;
    uint64_t v248 = 1;
  }
  v831 = v246;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v246)(v247, v248, 1, v219);
  uint64_t v270 = v219;
  uint64_t v271 = v814;
  uint64_t v272 = (uint64_t)v813;
  uint64_t v273 = v812;
  sub_1000E8A70(v245, v812, &qword_100261D90);
  uint64_t v274 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v220 + 48);
  if (v274(v273, 1, v270))
  {
    sub_1000AA894(v273, &qword_100261D90);
    double v275 = 0.0;
  }
  else
  {
    uint64_t v302 = v832;
    (*(void (**)(char *, uint64_t, uint64_t))(v220 + 16))(v832, v273, v270);
    sub_1000AA894(v273, &qword_100261D90);
    Date.timeIntervalSince1970.getter();
    double v275 = v303;
    (*(void (**)(char *, uint64_t))(v220 + 8))(v302, v270);
  }
  uint64_t v304 = *((void *)&v849 + 1);
  unint64_t v305 = v850;
  sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
  v306 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v305 + 56))(v304, v305);
  id v307 = [v306 creationDate];

  if (v307)
  {
    v308 = v832;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v309 = v835;
    (*(void (**)(uint64_t, char *, uint64_t))(v220 + 32))(v272, v308, v835);
    uint64_t v310 = 0;
  }
  else
  {
    uint64_t v310 = 1;
    uint64_t v309 = v835;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v831)(v272, v310, 1, v309);
  sub_1001AE584((uint64_t)&v848, (uint64_t)&v845);
  unsigned int v311 = v274(v272, 1, v309);
  v828 = (char *)v274;
  if (v311 == 1)
  {
    v312 = v846;
    unint64_t v313 = v847;
    sub_1000ABF58(&v845, (uint64_t)v846);
    (*(void (**)(ValueMetadata *, unint64_t))(v313 + 40))(v312, v313);
    sub_1000AA894(v272, &qword_100261D90);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v220 + 32))(v271, v272, v309);
  }
  sub_1000ABFF0((uint64_t)&v845);
  Date.timeIntervalSince1970.getter();
  double v315 = v314;
  v827 = *(void (**)(char *, uint64_t))(v220 + 8);
  v827(v271, v309);
  id v316 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v275 - v315];
  NSString v317 = String._bridgeToObjectiveC()();
  sub_1000AA024(&qword_1002631E8);
  uint64_t v318 = swift_allocObject();
  sub_1000C1DAC(v318, 1);
  void *v319 = 0xD000000000000016;
  v319[1] = 0x80000001001FF7E0;
  v319[2] = v316;
  BTUserTransaction.capture()();
  uint64_t v321 = v320;
  v830 = (void (**)(char *, uint64_t, void *))v316;
  sub_1000AFB88(v321);
  sub_1000B66A0(0, &qword_1002631F0);
  Class v322 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CUMetricsLog();

  id v323 = [v833 creationDate];
  if (!v323)
  {
    uint64_t v327 = (uint64_t)v815;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v831)(v815, 1, 1, v309);
    goto LABEL_95;
  }
  v324 = v323;
  v325 = v832;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v326 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
  uint64_t v327 = (uint64_t)v815;
  v326(v815, v325, v309);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v831)(v327, 0, 1, v309);
  uint64_t v328 = v309;
  v329 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v828;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v828)(v327, 1, v328) == 1)
  {
LABEL_95:

    sub_1000AA894(v327, &qword_100261D90);
    id v268 = v833;
    goto LABEL_96;
  }
  uint64_t v330 = v835;
  v326(v804, (char *)v327, v835);
  uint64_t v331 = *((void *)&v849 + 1);
  unint64_t v332 = v850;
  sub_1000ABF58(&v848, *((uint64_t *)&v849 + 1));
  uint64_t v333 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v332 + 56))(v331, v332);
  id v334 = [v333 creationDate];

  if (v334)
  {
    uint64_t v335 = v832;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v336 = (uint64_t)v799;
    v326(v799, v335, v330);
    uint64_t v337 = 0;
  }
  else
  {
    uint64_t v337 = 1;
    uint64_t v336 = (uint64_t)v799;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v831)(v336, v337, 1, v330);
  sub_1001AE584((uint64_t)&v848, (uint64_t)&v842);
  if (v329(v336, 1, v330) == 1)
  {
    uint64_t v375 = v843;
    uint64_t v376 = v844;
    sub_1000ABF58(&v842, v843);
    v377 = v800;
    (*(void (**)(uint64_t, uint64_t))(v376 + 40))(v375, v376);
    sub_1000AA894(v336, &qword_100261D90);
  }
  else
  {
    v377 = v800;
    v326(v800, (char *)v336, v330);
  }
  id v268 = v833;
  v378 = v804;
  v379 = v827;
  sub_1000ABFF0((uint64_t)&v842);
  char v380 = static Date.> infix(_:_:)();
  v379(v377, v330);
  if ((v380 & 1) == 0)
  {
    v379(v378, v330);

    goto LABEL_96;
  }
  static os_log_type_t.error.getter();
  uint64_t v381 = swift_allocObject();
  sub_1000C1DBC(v381, 1);
  v383 = v382;
  sub_1001AE584((uint64_t)&v848, (uint64_t)&v842);
  sub_1000AA024((uint64_t *)&unk_100263BE8);
  uint64_t v384 = String.init<A>(describing:)();
  uint64_t v385 = v837;
  v383[3] = (uint64_t)&type metadata for String;
  v383[4] = v385;
  uint64_t *v383 = v384;
  v383[1] = v386;
  BTUserTransaction.capture()();
  os_log(_:dso:log:_:_:)();
  uint64_t v387 = swift_bridgeObjectRelease();
  sub_100162CD8(v387);

  v379(v378, v330);
  sub_1000AA894((uint64_t)v851, &qword_100263BE0);
  sub_1000ABFF0((uint64_t)&v848);
  uint64_t v133 = v840;
  uint64_t v134 = v841;
LABEL_214:
  sub_10018DA9C(v839, v134, v133);
  return swift_bridgeObjectRelease();
}

void sub_10016E190(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v4 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v42 - v8;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v45 = (char *)&v42 - v14;
  __chkstk_darwin(v15);
  uint64_t v44 = (char *)&v42 - v16;
  uint64_t v17 = type metadata accessor for DeviceSupportInformationRecord();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  sub_1000FB560(a1, &v50);
  if (!v2)
  {
    uint64_t v48 = 0;
    id v21 = v50;
    id v22 = [v50 recordChangeTag];
    if (v22)
    {
      uint64_t v23 = v22;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      swift_bridgeObjectRelease();
      sub_1001AEF94(v49, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      if (v25)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, &v19[*(int *)(v17 + 64)], v9);
        id v26 = [v21 modificationDate];
        id v43 = v21;
        if (v26)
        {
          uint64_t v27 = v26;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
          uint64_t v29 = (uint64_t)v46;
          v28((uint64_t)v46, v12, v9);
          uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v42(v29, 0, 1, v9);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v29, 1, v9) != 1)
          {
            v28((uint64_t)v45, v46, v9);
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
          v42((uint64_t)v46, 1, 1, v9);
        }
        id v30 = [v21 creationDate];
        if (v30)
        {
          uint64_t v31 = v30;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
          v32(v6, v12, v9);
          v42((uint64_t)v6, 0, 1, v9);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
          {
            v32(v45, v6, v9);
LABEL_15:
            sub_1000AA894((uint64_t)v46, &qword_100261D90);
LABEL_16:
            uint64_t v34 = v44;
            uint64_t v33 = v45;
            char v35 = static Date.> infix(_:_:)();
            uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
            v36(v33, v9);
            v36(v34, v9);
            sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
            id v21 = v43;
            if ((v35 & 1) == 0)
            {
LABEL_20:

              return;
            }
LABEL_17:
            static os_log_type_t.default.getter();
            if (qword_100261948 != -1) {
              swift_once();
            }
            sub_1000AA024((uint64_t *)&unk_100262110);
            uint64_t v37 = swift_allocObject();
            *(_OWORD *)(v37 + 16) = xmmword_1001CFDB0;
            uint64_t v38 = sub_1000F8EB8();
            uint64_t v40 = v39;
            *(void *)(v37 + 56) = &type metadata for String;
            *(void *)(v37 + 64) = sub_1000AA5E0();
            *(void *)(v37 + 32) = v38;
            *(void *)(v37 + 40) = v40;
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
            sub_100160454();
            uint64_t v41 = swift_allocObject();
            swift_weakInit();
            swift_retain();
            sub_10011B210(v21, 0, (uint64_t)sub_1001AED40, v41);
            swift_unknownObjectRelease();
            swift_release_n();
            goto LABEL_20;
          }
        }
        else
        {
          v42((uint64_t)v6, 1, 1, v9);
        }
        static Date.now.getter();
        sub_1000AA894((uint64_t)v6, &qword_100261D90);
        goto LABEL_15;
      }
    }
    else
    {
      sub_1001AEF94(v49, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    }
    sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_10016E7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v3 - 8);
  uint64_t v47 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)&v45 - v13;
  __chkstk_darwin(v14);
  uint64_t v49 = (char *)&v45 - v15;
  uint64_t v16 = type metadata accessor for MagicPairingSettingsRecord();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)&v45 - v20;
  id v52 = sub_1000B6C74();
  id v22 = [v52 recordChangeTag];
  uint64_t v50 = a1;
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v46 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    swift_bridgeObjectRelease();
    sub_1001AEF94(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v49, &v21[*(int *)(v16 + 120)], v8);
      id v26 = [v52 modificationDate];
      uint64_t v45 = v18;
      if (v26)
      {
        uint64_t v27 = v26;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        uint64_t v29 = (uint64_t)v46;
        v28(v46, v11, v8);
        id v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        v30(v29, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v29, 1, v8) != 1)
        {
          v28(v48, (char *)v29, v8);
          id v31 = v52;
          goto LABEL_15;
        }
      }
      else
      {
        id v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v29 = (uint64_t)v46;
        v30((uint64_t)v46, 1, 1, v8);
      }
      id v32 = [v52 creationDate:v45];
      if (v32)
      {
        uint64_t v33 = v32;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v34 = *(void (**)(void))(v9 + 32);
        uint64_t v35 = (uint64_t)v47;
        v34();
        v30(v35, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v35, 1, v8) != 1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v34)(v48, v35, v8);
LABEL_14:
          id v31 = v52;
          sub_1000AA894(v29, &qword_100261D90);
LABEL_15:
          uint64_t v36 = v48;
          uint64_t v37 = v49;
          char v38 = static Date.> infix(_:_:)();
          uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 8);
          v39(v36, v8);
          v39(v37, v8);
          sub_1001AEFFC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          uint64_t v18 = v45;
          if ((v38 & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v35 = (uint64_t)v47;
        v30((uint64_t)v47, 1, 1, v8);
      }
      static Date.now.getter();
      sub_1000AA894(v35, &qword_100261D90);
      goto LABEL_14;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  }
  sub_1001AEFFC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  id v31 = v52;
LABEL_16:
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1001CFDB0;
  sub_1001AEF94(v50, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v41 = sub_1000DA054();
  uint64_t v43 = v42;
  sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_1000AA5E0();
  *(void *)(v40 + 32) = v41;
  *(void *)(v40 + 40) = v43;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100160454();
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10011B210(v31, 0, (uint64_t)sub_1001AECC8, v44);
  swift_unknownObjectRelease();
  swift_release_n();
LABEL_19:
}

void sub_10016EE68(void *a1, char a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2)
    {
      swift_errorRetain();
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1001CFDB0;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v5 = String.init<A>(describing:)();
      uint64_t v7 = v6;
      *(void *)(v4 + 56) = &type metadata for String;
      *(void *)(v4 + 64) = sub_1000AA5E0();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v7;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10016EFE0(a1, 0);
    }
    swift_release();
    sub_100129200(a1, a2 & 1);
  }
}

uint64_t sub_10016EFE0(void *a1, int a2)
{
  LODWORD(v145) = a2;
  uint64_t v3 = type metadata accessor for BTDeferredRecord();
  uint64_t v4 = *(uint64_t **)(v3 - 8);
  uint64_t v151 = v3;
  uint64_t v152 = v4;
  __chkstk_darwin(v3);
  uint64_t v147 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v153 = (uint64_t)&v127 - v7;
  __chkstk_darwin(v8);
  uint64_t v148 = (char *)&v127 - v9;
  __chkstk_darwin(v10);
  uint64_t v154 = (char *)&v127 - v11;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v143 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v141 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v142 = (char *)type metadata accessor for DispatchQoS();
  uint64_t v140 = *((void *)v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v139 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SoundProfileRecord();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v18 - 8);
  id v144 = (char *)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v22 = (char *)&v127 - v21;
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v158 = *(void *)(v23 - 8);
  uint64_t v159 = v23;
  __chkstk_darwin(v23);
  uint64_t v150 = (char *)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  id v149 = (char *)&v127 - v26;
  __chkstk_darwin(v27);
  uint64_t v146 = (char *)&v127 - v28;
  __chkstk_darwin(v29);
  id v31 = (char *)&v127 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v127 - v33;
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v127 - v36;
  __chkstk_darwin(v38);
  uint64_t v156 = (char *)&v127 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v127 - v41;
  __chkstk_darwin(v43);
  uint64_t v155 = (char *)&v127 - v44;
  if (CKRecord.recordType.getter() == 0xD000000000000012 && v45 == 0x80000001001F6CA0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v46 & 1) == 0) {
      return result;
    }
  }
  id v48 = [a1 valueStore];
  sub_1000B66A0(0, (unint64_t *)&unk_100263B70);
  CKRecordKeyValueSetting.subscript.getter();

  if (!v161)
  {
    uint64_t v65 = (uint64_t *)&unk_100261F00;
    uint64_t v66 = (char *)aBlock;
    return sub_1000AA894((uint64_t)v66, v65);
  }
  sub_1000AA024((uint64_t *)&unk_100263B80);
  sub_1000B66A0(0, &qword_100261EF0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  id v138 = v164;
  id v49 = [v164 fileURL];
  if (!v49)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56))(v22, 1, 1, v159);
    goto LABEL_16;
  }
  uint64_t v50 = v49;
  unint64_t v137 = 0xD000000000000011;
  uint64_t v130 = v12;
  uint64_t v133 = v17;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v52 = v158;
  uint64_t v51 = v159;
  uint64_t v53 = v158 + 32;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
  v54(v22, v42, v159);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v22, 0, 1, v51);
  uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  uint64_t v136 = v52 + 48;
  unint64_t v135 = v55;
  if (v55(v22, 1, v51) == 1)
  {
LABEL_16:

    uint64_t v65 = (uint64_t *)&unk_100261A00;
    uint64_t v66 = v22;
    return sub_1000AA894((uint64_t)v66, v65);
  }
  uint64_t v132 = v53;
  v54(v155, v22, v51);
  int v56 = IsAppleInternalBuild();
  uint64_t v131 = v54;
  id v129 = a1;
  if (v56
    && (id v57 = [self standardUserDefaults],
        NSString v58 = String._bridgeToObjectiveC()(),
        unsigned int v59 = [v57 BOOLForKey:v58],
        v57,
        v58,
        v59))
  {
    uint64_t v60 = v158;
    uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 16);
    uint64_t v62 = v159;
    v61(v42, v157 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL, v159);
    if (qword_100261870 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1000AA0CC(v62, (uint64_t)qword_10026AB50);
    id v128 = (void (*)(char *, char *, uint64_t))v61;
    v61(v37, v63, v62);
    URL.path.getter();
    uint64_t v64 = *(void (**)(char *, uint64_t))(v60 + 8);
    v64(v37, v62);
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v134 = v64;
    v64(v42, v62);
  }
  else
  {
    uint64_t v67 = v158;
    uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 16);
    uint64_t v69 = v159;
    v68(v42, v157 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL, v159);
    if (qword_100261870 != -1) {
      swift_once();
    }
    uint64_t v70 = sub_1000AA0CC(v69, (uint64_t)qword_10026AB50);
    id v128 = (void (*)(char *, char *, uint64_t))v68;
    v68(v31, v70, v69);
    id v71 = [a1 recordID];
    id v72 = [v71 recordName];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v73 = *(void (**)(char *, uint64_t))(v67 + 8);
    v73(v31, v69);
    URL.appendingPathExtension(_:)();
    v73(v34, v69);
    URL.path.getter();
    v73(v37, v69);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v134 = v73;
    v73(v42, v69);
  }
  int v74 = IsAppleInternalBuild();
  uint64_t v75 = (uint64_t)v154;
  if (v74
    && (id v76 = [self standardUserDefaults],
        NSString v77 = String._bridgeToObjectiveC()(),
        unsigned __int8 v78 = [v76 BOOLForKey:v77],
        v76,
        v77,
        (v78 & 1) != 0))
  {
    uint64_t v79 = v129;
  }
  else
  {
    uint64_t v80 = sub_10015F0D4();
    __chkstk_darwin(v80);
    uint64_t v81 = v155;
    *(&v127 - 2) = (uint64_t)v156;
    *(&v127 - 1) = (uint64_t)v81;
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v79 = v129;
    swift_release();
  }
  uint64_t v82 = (uint64_t)v146;
  v128(v146, v156, v159);
  id v83 = v79;
  uint64_t v84 = v133;
  sub_1000B934C(v83, v82, v133);
  uint64_t v85 = (uint64_t)v147;
  uint64_t v86 = sub_10015F0D4();
  __chkstk_darwin(v86);
  *(&v127 - 2) = v87;
  *(&v127 - 1) = (uint64_t)v84;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v146 = 0;
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v92 = swift_allocObject();
  *(_OWORD *)(v92 + 16) = xmmword_1001CFDB0;
  uint64_t v93 = sub_1000B7170();
  uint64_t v95 = v94;
  *(void *)(v92 + 56) = &type metadata for String;
  *(void *)(v92 + 64) = sub_1000AA5E0();
  *(void *)(v92 + 32) = v93;
  *(void *)(v92 + 40) = v95;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v96 = _swiftEmptyArrayStorage;
  if (v145)
  {
    sub_1000B66A0(0, (unint64_t *)&qword_100263210);
    uint64_t v97 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v162 = sub_10018FBF8;
    uint64_t v163 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    id v161 = &unk_10023B720;
    uint64_t v98 = _Block_copy(aBlock);
    uint64_t v99 = v139;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v100 = v141;
    uint64_t v85 = (uint64_t)v147;
    uint64_t v101 = v130;
    uint64_t v96 = _swiftEmptyArrayStorage;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v98);

    (*(void (**)(char *, uint64_t))(v143 + 8))(v100, v101);
    (*(void (**)(char *, char *))(v140 + 8))(v99, v142);
  }
  uint64_t v102 = sub_1001607FC();
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v103 = v159;
  unint64_t v145 = *(void *)(v102 + 16);
  if (v145)
  {
    unint64_t v104 = 0;
    uint64_t v105 = _swiftEmptyArrayStorage;
    unint64_t v142 = "tsNew";
    unint64_t v143 = 0x80000001001F6CA0;
    uint64_t v106 = v148;
    while (1)
    {
      if (v104 >= *(void *)(v102 + 16))
      {
        __break(1u);
        swift_once();
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v88 = swift_allocObject();
        *(_OWORD *)(v88 + 16) = xmmword_1001CFDB0;
        aBlock[0] = v106;
        swift_errorRetain();
        sub_1000AA024(&qword_100261D60);
        uint64_t v89 = String.init<A>(describing:)();
        uint64_t v91 = v90;
        *(void *)(v88 + 56) = &type metadata for String;
        *(void *)(v88 + 64) = sub_1000AA5E0();
        *(void *)(v88 + 32) = v89;
        *(void *)(v88 + 40) = v91;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        return swift_errorRelease();
      }
      unint64_t v107 = (*((unsigned __int8 *)v152 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v152 + 80);
      uint64_t v108 = v152[9];
      sub_1001AEF94(v102 + v107 + v108 * v104, v75, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if (*(void *)(v75 + 8) == 0xD000000000000012 && *(void *)(v75 + 16) == v143)
      {
        sub_1001AEF94(v75, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      }
      else
      {
        char v109 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1001AEF94(v75, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        if ((v109 & 1) == 0)
        {
          sub_1001AEFFC((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
          goto LABEL_33;
        }
      }
      if (*v106 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1001AEFFC((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
LABEL_43:
        sub_1001AF05C(v75, v153, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001909B4(0, v105[2] + 1, 1);
        }
        uint64_t v105 = (void *)aBlock[0];
        unint64_t v112 = *(void *)(aBlock[0] + 16);
        unint64_t v111 = *(void *)(aBlock[0] + 24);
        if (v112 >= v111 >> 1)
        {
          sub_1001909B4(v111 > 1, v112 + 1, 1);
          uint64_t v105 = (void *)aBlock[0];
        }
        v105[2] = v112 + 1;
        sub_1001AF05C(v153, (uint64_t)v105 + v107 + v112 * v108, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        uint64_t v103 = v159;
        uint64_t v106 = v148;
        uint64_t v75 = (uint64_t)v154;
        goto LABEL_34;
      }
      char v110 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1001AEFFC((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if (v110) {
        goto LABEL_43;
      }
LABEL_33:
      sub_1001AEFFC(v75, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
LABEL_34:
      if (v145 == ++v104)
      {
        uint64_t v96 = (void *)aBlock[0];
        uint64_t v85 = (uint64_t)v147;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  id v113 = (char *)v96[2];
  if (v113)
  {
    unint64_t v114 = (*((unsigned __int8 *)v152 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v152 + 80);
    unint64_t v143 = (unint64_t)v96;
    uint64_t v115 = (uint64_t)v96 + v114;
    uint64_t v147 = (char *)v152[9];
    uint64_t v148 = (char *)(v158 + 8);
    unint64_t v145 = 0x80000001001F6CA0;
    uint64_t v116 = v144;
    uint64_t v117 = v149;
    uint64_t v118 = (uint64_t (*)(char *, uint64_t))v134;
    while (1)
    {
      uint64_t v153 = v115;
      uint64_t v154 = v113;
      sub_1001AEF94(v115, v85, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v119 = sub_10015F0D4();
      uint64_t v120 = UUID.uuidString.getter();
      uint64_t v122 = v121;
      URL.init(string:)();
      uint64_t result = v135(v116, 1, v103);
      if (result == 1) {
        break;
      }
      unint64_t v123 = v150;
      v131(v150, v116, v103);
      URL.appendingPathComponent(_:)();
      uint64_t v124 = v118(v123, v103);
      uint64_t v152 = &v127;
      __chkstk_darwin(v124);
      *(&v127 - 4) = v119;
      *(&v127 - 3) = v120;
      *(&v127 - 2) = v122;
      *(&v127 - 1) = (uint64_t)v117;
      uint64_t v125 = v146;
      OS_dispatch_queue.sync<A>(execute:)();
      uint64_t v146 = v125;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v103 = v159;
      v118(v117, v159);
      sub_1001AEFFC(v85, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      uint64_t v115 = (uint64_t)&v147[v153];
      id v113 = v154 - 1;
      if (v154 == (char *)1) {
        goto LABEL_53;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_53:
    swift_release();

    sub_1001AEFFC((uint64_t)v133, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    uint64_t v126 = (uint64_t (*)(char *, uint64_t))v134;
    v134(v156, v103);
    return v126(v155, v103);
  }
  return result;
}

void sub_100170534(void **a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v43 - v13;
  __chkstk_darwin(v14);
  id v48 = (char *)&v43 - v15;
  uint64_t v16 = (char *)*a1;
  uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v19, v18);
  Class isa = sub_100130420(v19, v18);
  sub_1000AA8F0(v19, v18);
  if (!isa)
  {
    uint64_t v21 = v16;
    Class isa = sub_1000B4F04((uint64_t)v21).super.isa;
  }
  id v47 = isa;
  sub_10012E130(&v47);
  id v22 = [isa recordChangeTag];
  if (v22)
  {

    uint64_t v23 = &v16[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_lastModifiedDate];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v23, v8);
    id v24 = [isa modificationDate];
    if (v24)
    {
      uint64_t v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v26(v7, v11, v8);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        v26(v45, v7, v8);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 1, 1, v8);
    }
    id v29 = [isa creationDate];
    if (v29)
    {
      uint64_t v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v31 = *(void (**)(void))(v9 + 32);
      uint64_t v32 = (uint64_t)v44;
      v31();
      v27((char *)v32, 0, 1, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v32, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        ((void (*)(char *, uint64_t, uint64_t))v31)(v45, v32, v8);
LABEL_13:
        sub_1000AA894((uint64_t)v7, &qword_100261D90);
LABEL_14:
        uint64_t v33 = v48;
        char v34 = static Date.> infix(_:_:)();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v9 + 8);
        v35(v28, v8);
        v35(v33, v8);
        if ((v34 & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v32 = (uint64_t)v44;
      v27(v44, 1, 1, v8);
    }
    uint64_t v28 = v45;
    static Date.now.getter();
    sub_1000AA894(v32, &qword_100261D90);
    goto LABEL_13;
  }
LABEL_15:
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
  uint64_t v37 = v16;
  id v38 = [v37 description];
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_1000AA5E0();
  *(void *)(v36 + 32) = v39;
  *(void *)(v36 + 40) = v41;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100160454();
  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10011B210(isa, 0, (uint64_t)sub_1001AEBD8, v42);
  swift_unknownObjectRelease();
  swift_release_n();
LABEL_18:
}

void sub_100170B0C(void **a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v43 - v13;
  __chkstk_darwin(v14);
  id v48 = (char *)&v43 - v15;
  uint64_t v16 = (char *)*a1;
  uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v19, v18);
  Class isa = sub_100130420(v19, v18);
  sub_1000AA8F0(v19, v18);
  if (!isa)
  {
    uint64_t v21 = v16;
    Class isa = sub_1000B4D2C((uint64_t)v21).super.isa;
  }
  id v47 = isa;
  sub_1000B37D0((unint64_t)&v47);
  id v22 = [isa recordChangeTag];
  if (v22)
  {

    uint64_t v23 = &v16[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_lastModifiedDate];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v23, v8);
    id v24 = [isa modificationDate];
    if (v24)
    {
      uint64_t v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v26(v7, v11, v8);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        v26(v45, v7, v8);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 1, 1, v8);
    }
    id v29 = [isa creationDate];
    if (v29)
    {
      uint64_t v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v31 = *(void (**)(void))(v9 + 32);
      uint64_t v32 = (uint64_t)v44;
      v31();
      v27((char *)v32, 0, 1, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v32, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        ((void (*)(char *, uint64_t, uint64_t))v31)(v45, v32, v8);
LABEL_13:
        sub_1000AA894((uint64_t)v7, &qword_100261D90);
LABEL_14:
        uint64_t v33 = v48;
        char v34 = static Date.> infix(_:_:)();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v9 + 8);
        v35(v28, v8);
        v35(v33, v8);
        if ((v34 & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v32 = (uint64_t)v44;
      v27(v44, 1, 1, v8);
    }
    uint64_t v28 = v45;
    static Date.now.getter();
    sub_1000AA894(v32, &qword_100261D90);
    goto LABEL_13;
  }
LABEL_15:
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
  uint64_t v37 = v16;
  id v38 = [v37 description];
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_1000AA5E0();
  *(void *)(v36 + 32) = v39;
  *(void *)(v36 + 40) = v41;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100160454();
  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10011B210(isa, 0, (uint64_t)sub_1001AEB60, v42);
  swift_unknownObjectRelease();
  swift_release_n();
LABEL_18:
}

void sub_1001710E4(void **a1, uint64_t a2)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v3 - 8);
  uint64_t v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v45 = (char *)&v43 - v13;
  __chkstk_darwin(v14);
  id v48 = (char *)&v43 - v15;
  uint64_t v16 = (char *)*a1;
  uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v19, v18);
  Class isa = sub_100130420(v19, v18);
  sub_1000AA8F0(v19, v18);
  if (!isa)
  {
    uint64_t v21 = v16;
    Class isa = sub_1000B4D08((uint64_t)v21).super.isa;
  }
  id v47 = isa;
  sub_1000F45CC(&v47);
  id v22 = [isa recordChangeTag];
  if (v22)
  {

    uint64_t v23 = &v16[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_lastModifiedDate];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v23, v8);
    id v24 = [isa modificationDate];
    if (v24)
    {
      uint64_t v25 = v24;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v26(v7, v11, v8);
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        v26(v45, v7, v8);
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v27(v7, 1, 1, v8);
    }
    id v29 = [isa creationDate];
    if (v29)
    {
      uint64_t v30 = v29;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v31 = *(void (**)(void))(v9 + 32);
      uint64_t v32 = (uint64_t)v44;
      v31();
      v27((char *)v32, 0, 1, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v32, 1, v8) != 1)
      {
        uint64_t v28 = v45;
        ((void (*)(char *, uint64_t, uint64_t))v31)(v45, v32, v8);
LABEL_13:
        sub_1000AA894((uint64_t)v7, &qword_100261D90);
LABEL_14:
        uint64_t v33 = v48;
        char v34 = static Date.> infix(_:_:)();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v9 + 8);
        v35(v28, v8);
        v35(v33, v8);
        if ((v34 & 1) == 0) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v32 = (uint64_t)v44;
      v27(v44, 1, 1, v8);
    }
    uint64_t v28 = v45;
    static Date.now.getter();
    sub_1000AA894(v32, &qword_100261D90);
    goto LABEL_13;
  }
LABEL_15:
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
  uint64_t v37 = v16;
  id v38 = [v37 description];
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = sub_1000AA5E0();
  *(void *)(v36 + 32) = v39;
  *(void *)(v36 + 40) = v41;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100160454();
  uint64_t v42 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_10011B210(isa, 0, (uint64_t)sub_1001AEC50, v42);
  swift_unknownObjectRelease();
  swift_release_n();
LABEL_18:
}

uint64_t sub_1001716BC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a6;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v24 = v13;
    unint64_t v18 = *(void **)(result + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    char v20 = a2 & 1;
    *(unsigned char *)(v19 + 24) = v20;
    *(void *)(v19 + 32) = v17;
    aBlock[4] = a5;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = v25;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v18;
    sub_1001227E8(a1, v20);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);
    swift_release();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v24);
    return swift_release();
  }
  return result;
}

void sub_1001719D8(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v4 = String.init<A>(describing:)();
    uint64_t v6 = v5;
    *(void *)(v3 + 56) = &type metadata for String;
    *(void *)(v3 + 64) = sub_1000AA5E0();
    *(void *)(v3 + 32) = v4;
    *(void *)(v3 + 40) = v6;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100129200(a1, 1);
  }
  else
  {
    sub_100167DA8((uint64_t)a1, (uint64_t)_swiftEmptyArrayStorage, 0);
    sub_100129200(a1, 0);
  }
}

uint64_t sub_100171B60(void *a1)
{
  uint64_t v2 = type metadata accessor for LegacyAccountMagicKeysRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v19 - v10;
  sub_10015F1F8((uint64_t)v19 - v10);
  LODWORD(v2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2);
  sub_1000AA894((uint64_t)v11, &qword_1002623C0);
  if (v2 == 1)
  {
    sub_1000BDFC4(a1, (uint64_t)v5);
    uint64_t v12 = sub_10015F0D4();
    __chkstk_darwin(v12);
    v19[-2] = v13;
    v19[-1] = v5;
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1001AEFFC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
    return swift_release();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    sub_10015F1F8((uint64_t)v8);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000AA5E0();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100171F28()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1000AA024(&qword_1002623C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for LegacyAccountMagicKeysRecord();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10015F1F8((uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000AA894((uint64_t)v6, &qword_1002623C0);
  }
  sub_1001AF05C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v12 = sub_10015F0D4();
  uint64_t v13 = UUID.uuidString.getter();
  uint64_t v15 = v14;
  if (qword_100261878 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1000AA0CC(v0, (uint64_t)qword_10026AB68);
  uint64_t v17 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v16, v0);
  __chkstk_darwin(v17);
  *(void *)&v18[-32] = v12;
  *(void *)&v18[-24] = v13;
  *(void *)&v18[-16] = v15;
  *(void *)&v18[-8] = v3;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1001AEFFC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
}

void sub_100172290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v109 = a6;
  char v110 = a5;
  uint64_t v90 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v90);
  uint64_t v93 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (uint64_t)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v95);
  uint64_t v98 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v94 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v107 = v14;
  uint64_t v108 = v15;
  __chkstk_darwin(v14);
  uint64_t v106 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v88 - v18;
  __chkstk_darwin(v20);
  id v113 = (char *)&v88 - v21;
  uint64_t v102 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v102);
  uint64_t v105 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DeviceRecord();
  uint64_t v103 = *(void *)(v23 - 8);
  uint64_t v104 = v23;
  __chkstk_darwin(v23);
  uint64_t v99 = (uint64_t)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v100 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  long long v88 = xmmword_1001D0A20;
  *(_OWORD *)(v25 + 16) = xmmword_1001D0A20;
  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v26 = sub_1000AA5E0();
  *(void *)(v25 + 32) = a3;
  *(void *)(v25 + 40) = a4;
  *(void *)(v25 + 96) = &type metadata for String;
  *(void *)(v25 + 104) = v26;
  unint64_t v101 = v26;
  *(void *)(v25 + 64) = v26;
  *(void *)(v25 + 72) = a1;
  uint64_t v112 = a1;
  *(void *)(v25 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v111 = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (a3 == 0x6552656369766544 && a4 == 0xEC00000064726F63
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v27 = v19;
    uint64_t v28 = sub_10015F0D4();
    if (qword_100261850 != -1) {
      swift_once();
    }
    uint64_t v29 = v107;
    sub_1000AA0CC(v107, (uint64_t)qword_10026AAE0);
    uint64_t v30 = v108;
    (*(void (**)(void))(v108 + 16))();
    URL.path.getter();
    uint64_t v32 = v106;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v32, v29);
    __chkstk_darwin(v34);
    *((void *)&v88 - 2) = v19;
    *((void *)&v88 - 1) = v28;
    uint64_t v35 = (uint64_t)v105;
    OS_dispatch_queue.sync<A>(execute:)();
    v33(v27, v29);
    swift_release();
    v33(v113, v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v35, 1, v104) == 1)
    {
      sub_1000AA894(v35, (uint64_t *)&unk_100263A10);
      static os_log_type_t.error.getter();
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1001CFDB0;
      unint64_t v37 = v101;
      *(void *)(v36 + 56) = &type metadata for String;
      *(void *)(v36 + 64) = v37;
      *(void *)(v36 + 32) = v112;
      *(void *)(v36 + 40) = v111;
      swift_bridgeObjectRetain();
LABEL_18:
      os_log(_:dso:log:_:_:)();
LABEL_19:
      swift_bridgeObjectRelease();
      ((void (*)(void))v110)(0);
      return;
    }
    uint64_t v38 = v35;
    uint64_t v39 = v99;
    sub_1001AF05C(v38, v99, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    sub_1001735C0(v39, (uint64_t (*)(void))v110, v109);
    uint64_t v40 = type metadata accessor for DeviceRecord;
    goto LABEL_29;
  }
  uint64_t v41 = v19;
  if (a3 == 0xD00000000000001ELL && a4 == 0x80000001001F6CC0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v42 = sub_10015F0D4();
    if (qword_1002618E8 != -1) {
      swift_once();
    }
    uint64_t v43 = v107;
    sub_1000AA0CC(v107, (uint64_t)qword_10026AD20);
    uint64_t v44 = v108;
    (*(void (**)(void))(v108 + 16))();
    URL.path.getter();
    uint64_t v46 = v106;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    id v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v47(v46, v43);
    __chkstk_darwin(v48);
    *((void *)&v88 - 2) = v19;
    *((void *)&v88 - 1) = v42;
    uint64_t v49 = (uint64_t)v98;
    OS_dispatch_queue.sync<A>(execute:)();
    v47(v41, v43);
    swift_release();
    v47(v113, v43);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v49, 1, v97) == 1)
    {
      sub_1000AA894(v49, (uint64_t *)&unk_100263A00);
      static os_log_type_t.error.getter();
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1001CFDB0;
      unint64_t v51 = v101;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = v51;
      *(void *)(v50 + 32) = v112;
      *(void *)(v50 + 40) = v111;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    uint64_t v52 = v49;
    uint64_t v39 = v94;
    sub_1001AF05C(v52, v94, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    sub_10017B740(v39, (void (*)(void))v110, v109);
    uint64_t v40 = type metadata accessor for DeviceSupportInformationRecord;
    goto LABEL_29;
  }
  uint64_t v53 = v111;
  if (a3 == 0x746553636967614DLL && a4 == 0xED000073676E6974
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v54 = sub_10015F0D4();
    if (qword_100261890 != -1) {
      swift_once();
    }
    uint64_t v55 = v107;
    sub_1000AA0CC(v107, (uint64_t)qword_10026AB90);
    uint64_t v56 = v108;
    (*(void (**)(void))(v108 + 16))();
    URL.path.getter();
    NSString v58 = v106;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    unsigned int v59 = *(void (**)(char *, uint64_t))(v56 + 8);
    v59(v58, v55);
    __chkstk_darwin(v60);
    *((void *)&v88 - 2) = v41;
    *((void *)&v88 - 1) = v54;
    uint64_t v61 = (uint64_t)v93;
    OS_dispatch_queue.sync<A>(execute:)();
    v59(v41, v55);
    swift_release();
    v59(v113, v55);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v61, 1, v92) == 1)
    {
      sub_1000AA894(v61, &qword_1002623D0);
      static os_log_type_t.error.getter();
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1001CFDB0;
      unint64_t v63 = v101;
      *(void *)(v62 + 56) = &type metadata for String;
      *(void *)(v62 + 64) = v63;
      *(void *)(v62 + 32) = v112;
      *(void *)(v62 + 40) = v111;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    uint64_t v64 = v61;
    uint64_t v39 = v89;
    sub_1001AF05C(v64, v89, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    sub_1001848D4(v39, 0, (uint64_t (*)(void))v110, v109);
    uint64_t v40 = type metadata accessor for MagicPairingSettingsRecord;
LABEL_29:
    sub_1001AEFFC(v39, (uint64_t (*)(void))v40);
    return;
  }
  uint64_t v65 = v53;
  if (a3 == 0x6563697665444141 && a4 == 0xEE0064726F636552
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v115 = &type metadata for AudioAccessoryFeatures;
    unint64_t v116 = sub_1000AE4C4();
    char v66 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v114);
    uint64_t v67 = v112;
    if (v66)
    {
      sub_10015F0D4();
      if (qword_100261918 != -1) {
        swift_once();
      }
      uint64_t v68 = v107;
      uint64_t v69 = sub_1000AA0CC(v107, (uint64_t)qword_10026AD60);
      uint64_t v70 = v108;
      uint64_t v71 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v113, v69, v68);
      id v72 = (void *)sub_10015CA58(v67, v65, v71, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v71, v68);
      if (v72)
      {
        sub_10017D2B0(v72, v110, v109);

        return;
      }
LABEL_55:
      static os_log_type_t.error.getter();
      uint64_t v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_1001CFDB0;
      unint64_t v85 = v101;
      *(void *)(v84 + 56) = &type metadata for String;
      *(void *)(v84 + 64) = v85;
      *(void *)(v84 + 32) = v67;
      *(void *)(v84 + 40) = v65;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v67 = v112;
    if ((a3 != 0xD000000000000011 || a4 != 0x80000001001FDE80)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if ((a3 != 0xD000000000000013 || a4 != 0x80000001001F7610)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        static os_log_type_t.error.getter();
        uint64_t v86 = swift_allocObject();
        *(_OWORD *)(v86 + 16) = v88;
        unint64_t v87 = v101;
        *(void *)(v86 + 56) = &type metadata for String;
        *(void *)(v86 + 64) = v87;
        *(void *)(v86 + 32) = a3;
        *(void *)(v86 + 40) = a4;
        *(void *)(v86 + 96) = &type metadata for String;
        *(void *)(v86 + 104) = v87;
        *(void *)(v86 + 72) = v67;
        *(void *)(v86 + 80) = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        goto LABEL_19;
      }
      goto LABEL_51;
    }
  }
  uint64_t v115 = &type metadata for AudioAccessoryFeatures;
  unint64_t v116 = sub_1000AE4C4();
  char v73 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v114);
  if ((v73 & 1) == 0)
  {
LABEL_51:
    sub_10015F0D4();
    if (qword_1002618E0 != -1) {
      swift_once();
    }
    uint64_t v79 = v107;
    uint64_t v80 = sub_1000AA0CC(v107, (uint64_t)qword_10026AC28);
    uint64_t v81 = v108;
    uint64_t v82 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v113, v80, v79);
    id v83 = (void *)sub_10015CA58(v67, v65, v82, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v79);
    if (!v83) {
      goto LABEL_55;
    }
    sub_10018038C(v83, (void (*)(void))v110, v109);

    return;
  }
  sub_10015F0D4();
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v74 = v107;
  uint64_t v75 = sub_1000AA0CC(v107, (uint64_t)qword_10026AB00);
  uint64_t v76 = v108;
  uint64_t v77 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v113, v75, v74);
  unsigned __int8 v78 = (void *)sub_10015CA58(v67, v65, v77, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v74);
  if (!v78) {
    goto LABEL_55;
  }
  sub_10017EB54(v78, v110, v109);
}

uint64_t sub_1001735C0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v127 = a3;
  id v128 = a2;
  uint64_t v120 = type metadata accessor for DispatchPredicate();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v118 = (uint64_t *)((char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v117 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  id v113 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for UUID();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v111 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v112);
  unint64_t v123 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v135 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v132 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v134 = (char *)&v104 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v104 - v15;
  uint64_t v133 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v133);
  uint64_t v136 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DeviceRecord();
  uint64_t v137 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v107 = (uint64_t)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v105 = (uint64_t)&v104 - v21;
  __chkstk_darwin(v22);
  uint64_t v110 = (uint64_t)&v104 - v23;
  __chkstk_darwin(v24);
  uint64_t v108 = (uint64_t)&v104 - v25;
  uint64_t v106 = v26;
  __chkstk_darwin(v27);
  uint64_t v121 = (uint64_t *)((char *)&v104 - v28);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v125 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v29 = swift_allocObject();
  long long v124 = xmmword_1001CFDB0;
  *(_OWORD *)(v29 + 16) = xmmword_1001CFDB0;
  uint64_t v30 = sub_1000A56C4();
  uint64_t v32 = v31;
  *(void *)(v29 + 56) = &type metadata for String;
  unint64_t v126 = sub_1000AA5E0();
  *(void *)(v29 + 64) = v126;
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v32;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v122 = v4;
  uint64_t v33 = sub_10015F0D4();
  uint64_t v34 = *(int *)(v18 + 24);
  uint64_t v138 = a1;
  uint64_t v35 = (uint64_t *)(a1 + v34);
  uint64_t v131 = v18;
  uint64_t v129 = *v35;
  uint64_t v109 = v35;
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000AA0CC(v10, (uint64_t)qword_10026AAE0);
  uint64_t v37 = v135;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  uint64_t v130 = v16;
  v38(v16, v36, v10);
  URL.path.getter();
  uint64_t v40 = v132;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v134;
  URL.appendingPathComponent(_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v40, v10);
  __chkstk_darwin(v43);
  *(&v104 - 2) = (uint64_t)v41;
  *(&v104 - 1) = v33;
  uint64_t v44 = (uint64_t)v136;
  OS_dispatch_queue.sync<A>(execute:)();
  v42(v41, v10);
  swift_release();
  v42(v130, v10);
  uint64_t v45 = v131;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v44, 1, v131) == 1)
  {
    sub_1000AA894(v44, (uint64_t *)&unk_100263A10);
    static os_log_type_t.error.getter();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v124;
    uint64_t v47 = sub_1000A56C4();
    unint64_t v48 = v126;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = v48;
    *(void *)(v46 + 32) = v47;
    *(void *)(v46 + 40) = v49;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return v128(0);
  }
  else
  {
    uint64_t v51 = v44;
    uint64_t v52 = v121;
    sub_1001AF05C(v51, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v54 = *v52;
    unint64_t v55 = v52[1];
    sub_1000AA680(*v52, v55);
    Class isa = sub_100130420(v54, v55);
    sub_1000AA8F0(v54, v55);
    uint64_t v57 = v108;
    sub_1001AEF94((uint64_t)v52, v108, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!isa) {
      Class isa = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v57, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v58 = (uint64_t)v123;
    id v139 = isa;
    sub_1000A7948(&v139);
    id v59 = [isa recordID];

    uint64_t v61 = *v52;
    unint64_t v62 = v52[1];
    sub_1000AA680(*v52, v62);
    unint64_t v63 = sub_100130420(v61, v62);
    sub_1000AA8F0(v61, v62);
    uint64_t v64 = v110;
    sub_1001AEF94((uint64_t)v52, v110, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!v63) {
      unint64_t v63 = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v64, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v65 = v122;
    id v139 = v63;
    sub_1000A7948(&v139);
    uint64_t v66 = CKRecord.recordType.getter();
    uint64_t v68 = v67;

    sub_100174420(v59, v66, v68, 0);
    swift_bridgeObjectRelease();
    uint64_t v69 = v138 + *(int *)(v45 + 20);
    uint64_t v70 = v114;
    uint64_t v71 = v111;
    uint64_t v72 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v111, v69, v115);
    uint64_t v74 = *v109;
    uint64_t v73 = v109[1];
    swift_bridgeObjectRetain();
    uint64_t v75 = v113;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v77 = v76;
    (*(void (**)(char *, uint64_t))(v116 + 8))(v75, v117);
    *(unsigned char *)uint64_t v58 = 1;
    strcpy((char *)(v58 + 8), "DeviceRecord");
    *(unsigned char *)(v58 + 21) = 0;
    *(_WORD *)(v58 + 22) = -5120;
    unsigned __int8 v78 = (int *)v112;
    (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v58 + *(int *)(v112 + 24), v71, v72);
    uint64_t v79 = (void *)(v58 + v78[7]);
    *uint64_t v79 = v74;
    v79[1] = v73;
    *(void *)(v58 + v78[8]) = v77;
    *(_OWORD *)(v58 + v78[9]) = xmmword_1001D3390;
    sub_100185B98(v65, v58);
    uint64_t v81 = *(void **)(sub_100160454() + 72);
    uint64_t v82 = v118;
    *uint64_t v118 = v81;
    uint64_t v83 = v119;
    uint64_t v84 = v120;
    (*(void (**)(void *, void, uint64_t))(v119 + 104))(v82, enum case for DispatchPredicate.notOnQueue(_:), v120);
    id v85 = v81;
    LOBYTE(v74) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v83 + 8))(v82, v84);
    if (v74)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v139 == 1)
      {
        uint64_t v86 = sub_100160454();
        uint64_t v88 = *v52;
        unint64_t v89 = v52[1];
        sub_1000AA680(*v52, v89);
        uint64_t v90 = sub_100130420(v88, v89);
        sub_1000AA8F0(v88, v89);
        uint64_t v91 = v105;
        sub_1001AEF94((uint64_t)v52, v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (!v90) {
          uint64_t v90 = sub_1000B4B34().super.isa;
        }
        sub_1001AEFFC(v91, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v139 = v90;
        sub_1000A7948(&v139);
        id v92 = [v90 recordID];

        uint64_t v93 = swift_allocObject();
        swift_weakInit();
        uint64_t v94 = v107;
        sub_1001AEF94((uint64_t)v52, v107, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        unint64_t v95 = (*(unsigned __int8 *)(v137 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
        unint64_t v96 = (v106 + v95 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v97 = swift_allocObject();
        sub_1001AF05C(v94, v97 + v95, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        *(void *)(v97 + v96) = v93;
        uint64_t v98 = swift_allocObject();
        *(void *)(v98 + 16) = v86;
        *(void *)(v98 + 24) = v92;
        *(void *)(v98 + 32) = sub_1001AE95C;
        *(void *)(v98 + 40) = v97;
        *(unsigned char *)(v98 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v99 = v92;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v98);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v100 = swift_allocObject();
        *(_OWORD *)(v100 + 16) = v124;
        uint64_t v101 = sub_1000A56C4();
        unint64_t v102 = v126;
        *(void *)(v100 + 56) = &type metadata for String;
        *(void *)(v100 + 64) = v102;
        *(void *)(v100 + 32) = v101;
        *(void *)(v100 + 40) = v103;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      v128(0);
      sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      return sub_1001AEFFC((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100174420(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v256 = a4;
  uint64_t v262 = a2;
  uint64_t v263 = a3;
  uint64_t v230 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v229 = *(void *)(v230 - 8);
  __chkstk_darwin(v230);
  uint64_t v227 = (char *)&v222 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = type metadata accessor for DispatchQoS();
  uint64_t v226 = *(void *)(v228 - 8);
  __chkstk_darwin(v228);
  v225 = (char *)&v222 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v237 = (uint64_t)&v222 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = type metadata accessor for SoundProfileRecord();
  uint64_t v235 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  uint64_t v234 = (uint64_t)&v222 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v244 = (uint64_t)&v222 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v242 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  v241 = (char *)&v222 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v240 = (uint64_t)&v222 - v14;
  uint64_t v15 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v15 - 8);
  uint64_t v250 = (uint64_t)&v222 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v248 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  uint64_t v247 = (char *)&v222 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v246 = (uint64_t)&v222 - v19;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v254 = v20;
  uint64_t v255 = v21;
  __chkstk_darwin(v20);
  unint64_t v253 = (char *)&v222 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v23 - 8);
  uint64_t v259 = (uint64_t)&v222 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DeviceRecord();
  uint64_t v258 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v222 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v252 = (uint64_t)&v222 - v29;
  uint64_t v30 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v30 - 8);
  id v232 = (char *)&v222 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v231 = (char *)&v222 - v33;
  __chkstk_darwin(v34);
  uint64_t v233 = (char *)&v222 - v35;
  __chkstk_darwin(v36);
  id v239 = (char *)&v222 - v37;
  __chkstk_darwin(v38);
  uint64_t v245 = (char *)&v222 - v39;
  __chkstk_darwin(v40);
  uint64_t v251 = (char *)&v222 - v41;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v222 - v43;
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v265 = *(void *)(v45 - 8);
  uint64_t v266 = v45;
  __chkstk_darwin(v45);
  id v223 = (char *)&v222 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  char v222 = (char *)&v222 - v48;
  __chkstk_darwin(v49);
  v224 = (char *)&v222 - v50;
  __chkstk_darwin(v51);
  uint64_t v238 = (char *)&v222 - v52;
  __chkstk_darwin(v53);
  uint64_t v257 = (char *)&v222 - v54;
  __chkstk_darwin(v55);
  uint64_t v264 = (char *)&v222 - v56;
  __chkstk_darwin(v57);
  id v59 = (char *)&v222 - v58;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v260 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1001D0A20;
  *(void *)(v60 + 56) = sub_1000B66A0(0, &qword_1002629E0);
  *(void *)(v60 + 64) = sub_1001AD6DC(&qword_100263308, &qword_1002629E0);
  *(void *)(v60 + 32) = a1;
  *(void *)(v60 + 96) = &type metadata for String;
  unint64_t v261 = sub_1000AA5E0();
  *(void *)(v60 + 104) = v261;
  uint64_t v61 = a1;
  uint64_t v62 = v262;
  uint64_t v63 = v263;
  *(void *)(v60 + 72) = v262;
  *(void *)(v60 + 80) = v63;
  uint64_t v64 = v61;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (v62 == 0x6552656369766544 && v63 == 0xEC00000064726F63
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    id v65 = [v64 recordName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v67 = v265;
    uint64_t v66 = v266;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v44, 1, v266) == 1)
    {
      sub_1000AA894((uint64_t)v44, &qword_100261EA0);
      static os_log_type_t.error.getter();
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = xmmword_1001CFDB0;
      id v69 = [v64 recordName];
      uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v72 = v71;

      unint64_t v73 = v261;
      *(void *)(v68 + 56) = &type metadata for String;
      *(void *)(v68 + 64) = v73;
      *(void *)(v68 + 32) = v70;
      *(void *)(v68 + 40) = v72;
LABEL_60:
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v264 = v64;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v59, v44, v66);
    if ([self isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261850 != -1) {
        swift_once();
      }
      uint64_t v74 = v254;
      uint64_t v75 = sub_1000AA0CC(v254, (uint64_t)qword_10026AAE0);
      uint64_t v76 = v255;
      uint64_t v77 = (uint64_t)v253;
      (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v75, v74);
      unsigned __int8 v78 = sub_10015DA98(v77, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v74);
    }
    else
    {
      static os_log_type_t.error.getter();
      unsigned __int8 v78 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
    uint64_t v90 = v78[2];
    uint64_t v91 = v258;
    if (v90)
    {
      uint64_t v92 = (uint64_t)v78
          + ((*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80));
      uint64_t v93 = *(void *)(v258 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1001AEF94(v92, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (static UUID.== infix(_:_:)()) {
          break;
        }
        sub_1001AEFFC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        v92 += v93;
        if (!--v90)
        {
          swift_bridgeObjectRelease();
          uint64_t v94 = 1;
          uint64_t v67 = v265;
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v95 = v259;
      sub_1001AF05C((uint64_t)v27, v259, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      uint64_t v94 = 0;
      uint64_t v67 = v265;
    }
    else
    {
      uint64_t v94 = 1;
LABEL_24:
      uint64_t v95 = v259;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v95, v94, 1, v25);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v95, 1, v25) == 1)
    {
      sub_1000AA894(v95, (uint64_t *)&unk_100263A10);
      static os_log_type_t.error.getter();
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = xmmword_1001CFDB0;
      id v97 = [v264 recordName];
      uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v100 = v99;

      unint64_t v101 = v261;
      *(void *)(v96 + 56) = &type metadata for String;
      *(void *)(v96 + 64) = v101;
      *(void *)(v96 + 32) = v98;
      *(void *)(v96 + 40) = v100;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v102 = v252;
      sub_1001AF05C(v95, v252, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      sub_100177104(v102, v256 & 1);
      sub_1001AEFFC(v102, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v266);
    return;
  }
  uint64_t v79 = v64;
  uint64_t v80 = v265;
  if ((v62 != 0xD00000000000001ELL || v63 != 0x80000001001F6CC0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v62 == 0x746553636967614DLL && v63 == 0xED000073676E6974
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v109 = [v64 recordName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v110 = (uint64_t)v245;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v111 = v266;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v110, 1, v266) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v257, v110, v111);
        if ([self isFirstUnlocked])
        {
          sub_10015F0D4();
          uint64_t v126 = (uint64_t)v241;
          if (qword_100261890 != -1) {
            swift_once();
          }
          uint64_t v127 = v254;
          uint64_t v128 = sub_1000AA0CC(v254, (uint64_t)qword_10026AB90);
          uint64_t v129 = v255;
          uint64_t v130 = (uint64_t)v253;
          (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v128, v127);
          uint64_t v131 = sub_10015DA98(v130, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v130, v127);
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v131 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
          uint64_t v126 = (uint64_t)v241;
        }
        uint64_t v140 = v131[2];
        uint64_t v141 = v242;
        if (v140)
        {
          uint64_t v142 = (uint64_t)v131
               + ((*(unsigned __int8 *)(v242 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80));
          uint64_t v143 = *(void *)(v242 + 72);
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_1001AEF94(v142, v126, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            if (static UUID.== infix(_:_:)()) {
              break;
            }
            sub_1001AEFFC(v126, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            v142 += v143;
            if (!--v140)
            {
              swift_bridgeObjectRelease();
              goto LABEL_67;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v145 = v244;
          sub_1001AF05C(v126, v244, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          uint64_t v144 = 0;
        }
        else
        {
LABEL_67:
          uint64_t v144 = 1;
          uint64_t v145 = v244;
        }
        uint64_t v146 = v243;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v141 + 56))(v145, v144, 1, v243);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v145, 1, v146) == 1)
        {
          sub_1000AA894(v145, &qword_1002623D0);
          static os_log_type_t.error.getter();
          uint64_t v147 = swift_allocObject();
          *(_OWORD *)(v147 + 16) = xmmword_1001CFDB0;
          id v148 = [v79 recordName];
          uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v151 = v150;

          unint64_t v152 = v261;
          *(void *)(v147 + 56) = &type metadata for String;
          *(void *)(v147 + 64) = v152;
          *(void *)(v147 + 32) = v149;
          *(void *)(v147 + 40) = v151;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v153 = v240;
          sub_1001AF05C(v145, v240, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          sub_10017812C(v153, v256 & 1);
          sub_1001AEFFC(v153, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        }
        (*(void (**)(char *, uint64_t))(v80 + 8))(v257, v266);
        return;
      }
LABEL_59:
      sub_1000AA894(v110, &qword_100261EA0);
      static os_log_type_t.error.getter();
      uint64_t v134 = swift_allocObject();
      *(_OWORD *)(v134 + 16) = xmmword_1001CFDB0;
      id v135 = [v64 recordName];
      uint64_t v136 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v138 = v137;

      unint64_t v139 = v261;
      *(void *)(v134 + 56) = &type metadata for String;
      *(void *)(v134 + 64) = v139;
      *(void *)(v134 + 32) = v136;
      *(void *)(v134 + 40) = v138;
      goto LABEL_60;
    }
    if (v62 == 0xD000000000000012 && v63 == 0x80000001001F6CA0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v132 = [v64 recordName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v110 = (uint64_t)v239;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v133 = v266;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v110, 1, v266) != 1)
      {
        uint64_t v154 = v238;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v238, v110, v133);
        uint64_t v155 = v237;
        sub_100161B8C(v237);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v155, 1, v236) == 1)
        {
          sub_1000AA894(v155, &qword_1002623B8);
        }
        else
        {
          uint64_t v161 = v234;
          sub_1001AF05C(v155, v234, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          if (static UUID.== infix(_:_:)())
          {
            sub_1001788FC(v161, 0);
            if (v256)
            {
              sub_1000B66A0(0, (unint64_t *)&qword_100263210);
              uint64_t v162 = (void *)static OS_dispatch_queue.main.getter();
              v269 = sub_10018FBF8;
              uint64_t v270 = 0;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              void aBlock[2] = sub_100106F90;
              id v268 = (ValueMetadata *)&unk_10023B478;
              uint64_t v163 = _Block_copy(aBlock);
              id v164 = v225;
              static DispatchQoS.unspecified.getter();
              aBlock[0] = _swiftEmptyArrayStorage;
              sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
              sub_1000AA024(&qword_100263550);
              sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
              uint64_t v165 = v227;
              uint64_t v166 = v230;
              dispatch thunk of SetAlgebra.init<A>(_:)();
              OS_dispatch_queue.async(group:qos:flags:execute:)();
              _Block_release(v163);

              (*(void (**)(char *, uint64_t))(v229 + 8))(v165, v166);
              (*(void (**)(char *, uint64_t))(v226 + 8))(v164, v228);
              sub_10015F0D4();
              OS_dispatch_queue.sync<A>(execute:)();
              swift_release();
              uint64_t v133 = v266;
              uint64_t v154 = v238;
            }
            sub_1001AEFFC(v161, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v154, v133);
            return;
          }
          sub_1001AEFFC(v161, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        }
        static os_log_type_t.error.getter();
        uint64_t v167 = swift_allocObject();
        *(_OWORD *)(v167 + 16) = xmmword_1001CFDB0;
        id v168 = [v64 recordName];
        uint64_t v169 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v171 = v170;

        unint64_t v172 = v261;
        *(void *)(v167 + 56) = &type metadata for String;
        *(void *)(v167 + 64) = v172;
        *(void *)(v167 + 32) = v169;
        *(void *)(v167 + 40) = v171;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v238, v266);
        return;
      }
      goto LABEL_59;
    }
    if (v62 == 0x6563697665444141 && v63 == 0xEE0064726F636552
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v268 = &type metadata for AudioAccessoryFeatures;
      unint64_t v156 = sub_1000AE4C4();
      v269 = (uint64_t (*)())v156;
      char v157 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)aBlock);
      if (v157)
      {
        id v158 = [v79 recordName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v159 = (uint64_t)v233;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        uint64_t v160 = v266;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v159, 1, v266) == 1) {
          goto LABEL_91;
        }
        uint64_t v183 = v224;
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v224, v159, v160);
        id v268 = &type metadata for AudioAccessoryFeatures;
        v269 = (uint64_t (*)())v156;
        char v184 = isFeatureEnabled(_:)();
        uint64_t v185 = sub_1000ABFF0((uint64_t)aBlock);
        if (v184)
        {
          if ([self isFirstUnlocked])
          {
            sub_10015F0D4();
            if (qword_100261918 != -1) {
              swift_once();
            }
            uint64_t v186 = v254;
            uint64_t v187 = sub_1000AA0CC(v254, (uint64_t)qword_10026AD60);
            uint64_t v188 = v255;
            uint64_t v189 = (uint64_t)v253;
            (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v187, v186);
            id v190 = (void *)sub_10015D120(v189, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
            swift_release();
            uint64_t v185 = (*(uint64_t (**)(uint64_t, uint64_t))(v188 + 8))(v189, v186);
          }
          else
          {
            static os_log_type_t.error.getter();
            id v190 = _swiftEmptyArrayStorage;
            uint64_t v185 = os_log(_:dso:log:_:_:)();
          }
        }
        else
        {
          id v190 = _swiftEmptyArrayStorage;
        }
        __chkstk_darwin(v185);
        *(&v222 - 2) = v183;
        id v213 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD7B4, (uint64_t)(&v222 - 4), (unint64_t)v190);
        swift_bridgeObjectRelease();
        if (v213)
        {
          sub_100179110(v213, v256 & 1);
          goto LABEL_125;
        }
        goto LABEL_126;
      }
    }
    else if ((v62 != 0xD000000000000011 || v63 != 0x80000001001FDE80) {
           && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    }
    {
      if ((v62 != 0xD000000000000013 || v63 != 0x80000001001F7610)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        static os_log_type_t.error.getter();
        uint64_t v220 = swift_allocObject();
        *(_OWORD *)(v220 + 16) = xmmword_1001CFDB0;
        unint64_t v221 = v261;
        *(void *)(v220 + 56) = &type metadata for String;
        *(void *)(v220 + 64) = v221;
        *(void *)(v220 + 32) = v62;
        *(void *)(v220 + 40) = v63;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_108:
      id v198 = [v79 recordName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v199 = (uint64_t)v232;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v200 = v266;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v199, 1, v266) == 1)
      {
        sub_1000AA894(v199, &qword_100261EA0);
        static os_log_type_t.error.getter();
        uint64_t v201 = swift_allocObject();
        *(_OWORD *)(v201 + 16) = xmmword_1001CFDB0;
        id v202 = [v79 recordName];
        uint64_t v203 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v205 = v204;

        unint64_t v206 = v261;
        *(void *)(v201 + 56) = &type metadata for String;
        *(void *)(v201 + 64) = v206;
        *(void *)(v201 + 32) = v203;
        *(void *)(v201 + 40) = v205;
        goto LABEL_60;
      }
      uint64_t v183 = v223;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v223, v199, v200);
      if ([self isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_1002618E0 != -1) {
          swift_once();
        }
        uint64_t v207 = v254;
        uint64_t v208 = sub_1000AA0CC(v254, (uint64_t)qword_10026AC28);
        uint64_t v209 = v255;
        uint64_t v210 = (uint64_t)v253;
        (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v208, v207);
        uint64_t v211 = (void *)sub_10015D120(v210, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
        swift_release();
        uint64_t v212 = (*(uint64_t (**)(uint64_t, uint64_t))(v209 + 8))(v210, v207);
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v211 = _swiftEmptyArrayStorage;
        uint64_t v212 = os_log(_:dso:log:_:_:)();
      }
      __chkstk_darwin(v212);
      *(&v222 - 2) = v183;
      id v213 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD72C, (uint64_t)(&v222 - 4), (unint64_t)v211);
      swift_bridgeObjectRelease();
      if (v213)
      {
        sub_100179FE8(v213, v256 & 1);
LABEL_125:
        (*(void (**)(char *, uint64_t))(v80 + 8))(v183, v266);

        return;
      }
LABEL_126:
      static os_log_type_t.error.getter();
      uint64_t v214 = swift_allocObject();
      *(_OWORD *)(v214 + 16) = xmmword_1001CFDB0;
      id v215 = [v79 recordName];
      uint64_t v216 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v218 = v217;

      unint64_t v219 = v261;
      *(void *)(v214 + 56) = &type metadata for String;
      *(void *)(v214 + 64) = v219;
      *(void *)(v214 + 32) = v216;
      *(void *)(v214 + 40) = v218;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v183, v266);
      return;
    }
    id v268 = &type metadata for AudioAccessoryFeatures;
    unint64_t v173 = sub_1000AE4C4();
    v269 = (uint64_t (*)())v173;
    char v174 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)aBlock);
    if (v174)
    {
      id v175 = [v79 recordName];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v159 = (uint64_t)v231;
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      uint64_t v176 = v266;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v159, 1, v266) == 1)
      {
LABEL_91:
        sub_1000AA894(v159, &qword_100261EA0);
        static os_log_type_t.error.getter();
        uint64_t v177 = swift_allocObject();
        *(_OWORD *)(v177 + 16) = xmmword_1001CFDB0;
        id v178 = [v79 recordName];
        uint64_t v179 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v181 = v180;

        unint64_t v182 = v261;
        *(void *)(v177 + 56) = &type metadata for String;
        *(void *)(v177 + 64) = v182;
        *(void *)(v177 + 32) = v179;
        *(void *)(v177 + 40) = v181;
        goto LABEL_60;
      }
      uint64_t v183 = v222;
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v222, v159, v176);
      id v268 = &type metadata for AudioAccessoryFeatures;
      v269 = (uint64_t (*)())v173;
      char v191 = isFeatureEnabled(_:)();
      uint64_t v192 = sub_1000ABFF0((uint64_t)aBlock);
      if (v191)
      {
        if ([self isFirstUnlocked])
        {
          sub_10015F0D4();
          if (qword_100261860 != -1) {
            swift_once();
          }
          uint64_t v193 = v254;
          uint64_t v194 = sub_1000AA0CC(v254, (uint64_t)qword_10026AB00);
          uint64_t v195 = v255;
          uint64_t v196 = (uint64_t)v253;
          (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v194, v193);
          unint64_t v197 = (void *)sub_10015D120(v196, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
          swift_release();
          uint64_t v192 = (*(uint64_t (**)(uint64_t, uint64_t))(v195 + 8))(v196, v193);
        }
        else
        {
          static os_log_type_t.error.getter();
          unint64_t v197 = _swiftEmptyArrayStorage;
          uint64_t v192 = os_log(_:dso:log:_:_:)();
        }
      }
      else
      {
        unint64_t v197 = _swiftEmptyArrayStorage;
      }
      __chkstk_darwin(v192);
      *(&v222 - 2) = v183;
      id v213 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD770, (uint64_t)(&v222 - 4), (unint64_t)v197);
      swift_bridgeObjectRelease();
      if (v213)
      {
        sub_100179880(v213, v256 & 1);
        goto LABEL_125;
      }
      goto LABEL_126;
    }
    goto LABEL_108;
  }
  id v81 = [v64 recordName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v82 = (uint64_t)v251;
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v83 = v266;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v82, 1, v266) == 1)
  {
    sub_1000AA894(v82, &qword_100261EA0);
    static os_log_type_t.error.getter();
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1001CFDB0;
    id v85 = [v79 recordName];
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v88 = v87;

    unint64_t v89 = v261;
    *(void *)(v84 + 56) = &type metadata for String;
    *(void *)(v84 + 64) = v89;
    *(void *)(v84 + 32) = v86;
    *(void *)(v84 + 40) = v88;
    goto LABEL_60;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v264, v82, v83);
  if ([self isFirstUnlocked])
  {
    sub_10015F0D4();
    uint64_t v103 = (uint64_t)v247;
    if (qword_1002618E8 != -1) {
      swift_once();
    }
    uint64_t v104 = v254;
    uint64_t v105 = sub_1000AA0CC(v254, (uint64_t)qword_10026AD20);
    uint64_t v106 = v255;
    uint64_t v107 = (uint64_t)v253;
    (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v253, v105, v104);
    uint64_t v108 = sub_10015DA98(v107, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v107, v104);
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v108 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v103 = (uint64_t)v247;
  }
  uint64_t v112 = v108[2];
  uint64_t v113 = v248;
  if (v112)
  {
    uint64_t v114 = (uint64_t)v108
         + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    uint64_t v115 = *(void *)(v248 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1001AEF94(v114, v103, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      sub_1001AEFFC(v103, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      v114 += v115;
      if (!--v112)
      {
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v117 = v250;
    sub_1001AF05C(v103, v250, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v116 = 0;
  }
  else
  {
LABEL_45:
    uint64_t v116 = 1;
    uint64_t v117 = v250;
  }
  uint64_t v118 = v249;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v117, v116, 1, v249);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v117, 1, v118) == 1)
  {
    sub_1000AA894(v117, (uint64_t *)&unk_100263A00);
    static os_log_type_t.error.getter();
    uint64_t v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = xmmword_1001CFDB0;
    id v120 = [v79 recordName];
    uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v123 = v122;

    unint64_t v124 = v261;
    *(void *)(v119 + 56) = &type metadata for String;
    *(void *)(v119 + 64) = v124;
    *(void *)(v119 + 32) = v121;
    *(void *)(v119 + 40) = v123;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v125 = v246;
    sub_1001AF05C(v117, v246, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    sub_100177904(v125, v256 & 1);
    sub_1001AEFFC(v125, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v264, v266);
}

uint64_t sub_100176ED4(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    uint64_t v9 = sub_1000A56C4();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100177104(a2, 0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100177104(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v46 - v10;
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v46 - v12;
  uint64_t v13 = type metadata accessor for DeviceRecord();
  uint64_t v46 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v46 - v17;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v49 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001D0A20;
  *(void *)(v19 + 56) = &type metadata for Bool;
  *(void *)(v19 + 64) = &protocol witness table for Bool;
  int v52 = a2;
  *(unsigned char *)(v19 + 32) = a2 & 1;
  sub_1001AEF94(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v22 = v21;
  *(void *)(v19 + 96) = &type metadata for String;
  unint64_t v48 = sub_1000AA5E0();
  *(void *)(v19 + 104) = v48;
  *(void *)(v19 + 72) = v20;
  *(void *)(v19 + 80) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v23 = sub_1000B6DE4();
  id v24 = [v23 encryptedValues];

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 objectForKeyedSubscript:v25];
  swift_unknownObjectRelease();

  if (v26 && (id v57 = v26, sub_1000AA024(&qword_1002629D0), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v27 = v55;
    uint64_t v28 = v56;
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (v28) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  }
  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v28 = v29;
LABEL_9:
  uint64_t v47 = a1;
  sub_1001AEFFC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  uint64_t v30 = sub_10015F0D4();
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000AA0CC(v6, (uint64_t)qword_10026AAE0);
  uint64_t v32 = v53;
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v53, v31, v6);
  __chkstk_darwin(v33);
  *(&v46 - 4) = v30;
  *(&v46 - 3) = v27;
  *(&v46 - 2) = v28;
  *(&v46 - 1) = (uint64_t)v32;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34(v32, v6);
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = v54;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v36, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v38 = v50;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v50, v36, v6);
    uint64_t v39 = v51;
    URL.appendingPathComponent(_:)();
    uint64_t v40 = ((uint64_t (*)(char *, uint64_t))v34)(v38, v6);
    __chkstk_darwin(v40);
    *(&v46 - 4) = v35;
    *(&v46 - 3) = v27;
    *(&v46 - 2) = v28;
    *(&v46 - 1) = (uint64_t)v39;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v34(v39, v6);
    char v41 = v52;
    if ((v52 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024((uint64_t *)&unk_100263B30);
      unint64_t v42 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1001CFDB0;
      sub_1001AEF94(v47, v43 + v42, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      sub_1001518C8(v43, (uint64_t)&unk_10023B4D8, (uint64_t)sub_1001AD894, (uint64_t)&unk_10023B4F0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1001CFDB0;
      unint64_t v45 = v48;
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = v45;
      *(void *)(v44 + 32) = v27;
      *(void *)(v44 + 40) = v28;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v27, v28, v41 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100177904(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v58 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)&v50 - v9;
  __chkstk_darwin(v10);
  uint64_t v56 = (char *)&v50 - v11;
  uint64_t v12 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v50 - v16;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001D0A20;
  *(void *)(v18 + 56) = &type metadata for Bool;
  *(void *)(v18 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v18 + 32) = a2 & 1;
  sub_1001AEF94(a1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  uint64_t v19 = String.init<A>(describing:)();
  uint64_t v21 = v20;
  *(void *)(v18 + 96) = &type metadata for String;
  unint64_t v52 = sub_1000AA5E0();
  *(void *)(v18 + 104) = v52;
  *(void *)(v18 + 72) = v19;
  *(void *)(v18 + 80) = v21;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1000FB560(a1, v61);
  id v23 = v61[0];
  id v24 = [v61[0] encryptedValues];

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 objectForKeyedSubscript:v25];
  swift_unknownObjectRelease();

  int v59 = a2;
  if (v26 && (void v61[2] = v26, sub_1000AA024(&qword_1002629D0), (swift_dynamicCast() & 1) != 0))
  {
    id v27 = v61[0];
    id v28 = v61[1];
    sub_1001AEF94(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    if (v28)
    {
      uint64_t v29 = v56;
      uint64_t v60 = (uint64_t)v27;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  }
  uint64_t v29 = v56;
  uint64_t v60 = UUID.uuidString.getter();
  id v28 = v30;
LABEL_9:
  uint64_t v31 = v57;
  uint64_t v57 = a1;
  sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  uint64_t v32 = sub_10015F0D4();
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1000AA0CC(v6, (uint64_t)qword_10026AD20);
  uint64_t v34 = v58;
  uint64_t v35 = v29;
  uint64_t v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 16))(v29, v33, v6);
  __chkstk_darwin(v36);
  uint64_t v37 = v60;
  *(&v50 - 4) = v32;
  *(&v50 - 3) = v37;
  *(&v50 - 2) = (uint64_t)v28;
  *(&v50 - 1) = (uint64_t)v29;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  v38(v35, v6);
  uint64_t v39 = sub_10015F0D4();
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v31, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v41 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v54, v31, v6);
    unint64_t v42 = v55;
    URL.appendingPathComponent(_:)();
    uint64_t v43 = ((uint64_t (*)(char *, uint64_t))v38)(v41, v6);
    __chkstk_darwin(v43);
    uint64_t v44 = v60;
    *(&v50 - 4) = v39;
    *(&v50 - 3) = v44;
    *(&v50 - 2) = (uint64_t)v28;
    *(&v50 - 1) = (uint64_t)v42;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v38(v42, v6);
    if ((v59 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024(&qword_100263B60);
      unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1001CFDB0;
      sub_1001AEF94(v57, v46 + v45, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      sub_1001518C8(v46, (uint64_t)&unk_10023B578, (uint64_t)sub_1001AD8FC, (uint64_t)&unk_10023B590);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      unint64_t v48 = v52;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = v48;
      uint64_t v49 = v60;
      *(void *)(v47 + 32) = v60;
      *(void *)(v47 + 40) = v28;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v49, (uint64_t)v28, v59 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10017812C(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v4 - 8);
  int v59 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v54 = (char *)&v51 - v10;
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v51 - v12;
  uint64_t v13 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v51 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001D0A20;
  *(void *)(v19 + 56) = &type metadata for Bool;
  *(void *)(v19 + 64) = &protocol witness table for Bool;
  int v57 = a2;
  *(unsigned char *)(v19 + 32) = a2 & 1;
  sub_1001AEF94(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v22 = v21;
  *(void *)(v19 + 96) = &type metadata for String;
  unint64_t v23 = sub_1000AA5E0();
  *(void *)(v19 + 104) = v23;
  *(void *)(v19 + 72) = v20;
  *(void *)(v19 + 80) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v24 = sub_1000B6C74();
  id v25 = [v24 encryptedValues];

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 objectForKeyedSubscript:v26];
  swift_unknownObjectRelease();

  uint64_t v56 = a1;
  unint64_t v53 = v23;
  if (v27 && (id v62 = v27, sub_1000AA024(&qword_1002629D0), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v28 = v60;
    uint64_t v29 = v61;
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (v29)
    {
      uint64_t v30 = v58;
      uint64_t v31 = v28;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  }
  uint64_t v31 = UUID.uuidString.getter();
  uint64_t v29 = v32;
  uint64_t v30 = v58;
LABEL_9:
  sub_1001AEFFC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v33 = sub_10015F0D4();
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1000AA0CC(v6, (uint64_t)qword_10026AB90);
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v34, v6);
  __chkstk_darwin(v35);
  *(&v51 - 4) = v33;
  *(&v51 - 3) = v31;
  *(&v51 - 2) = v29;
  *(&v51 - 1) = (uint64_t)v30;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36(v30, v6);
  uint64_t v37 = (char *)v31;
  uint64_t v38 = sub_10015F0D4();
  uint64_t v39 = v59;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v39, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v41 = v52;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v52, v39, v6);
    unint64_t v42 = v54;
    URL.appendingPathComponent(_:)();
    uint64_t v43 = ((uint64_t (*)(char *, uint64_t))v36)(v41, v6);
    __chkstk_darwin(v43);
    *(&v51 - 4) = v38;
    *(&v51 - 3) = (uint64_t)v37;
    int v59 = v37;
    *(&v51 - 2) = v29;
    *(&v51 - 1) = (uint64_t)v42;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v36(v42, v6);
    char v44 = v57;
    uint64_t v45 = v56;
    if (v57)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000AA024(&qword_100263B58);
        unint64_t v46 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
        sub_1001AEF94(v45, v47 + v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        sub_1001518C8(v47, (uint64_t)&unk_10023B5C8, (uint64_t)sub_1001AD930, (uint64_t)&unk_10023B5E0);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
    }
    static os_log_type_t.default.getter();
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1001CFDB0;
    unint64_t v49 = v53;
    *(void *)(v48 + 56) = &type metadata for String;
    *(void *)(v48 + 64) = v49;
    uint64_t v50 = (uint64_t)v59;
    *(void *)(v48 + 32) = v59;
    *(void *)(v48 + 40) = v29;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10018FC04(v50, v29, v44 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001788FC(uint64_t a1, int a2)
{
  uint64_t v4 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v60 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v57 = (char *)&v50 - v10;
  __chkstk_darwin(v11);
  int v59 = (char *)&v50 - v12;
  uint64_t v13 = type metadata accessor for SoundProfileRecord();
  uint64_t v51 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v50 - v17;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1001D0A20;
  *(void *)(v19 + 56) = &type metadata for Bool;
  *(void *)(v19 + 64) = &protocol witness table for Bool;
  int v58 = a2;
  *(unsigned char *)(v19 + 32) = a2 & 1;
  sub_1001AEF94(a1, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v22 = v21;
  *(void *)(v19 + 96) = &type metadata for String;
  unint64_t v53 = sub_1000AA5E0();
  *(void *)(v19 + 104) = v53;
  *(void *)(v19 + 72) = v20;
  *(void *)(v19 + 80) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v23 = sub_1000B6D90();
  id v24 = [v23 encryptedValues];

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 objectForKeyedSubscript:v25];
  swift_unknownObjectRelease();

  if (v26 && (id v63 = v26, sub_1000AA024(&qword_1002629D0), (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v27 = v61;
    uint64_t v28 = v62;
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (v28) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_1001AEF94(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
  }
  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v28 = v29;
LABEL_9:
  uint64_t v52 = a1;
  sub_1001AEFFC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
  uint64_t v30 = sub_10015F0D4();
  if (qword_100261868 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000AA0CC(v6, (uint64_t)qword_10026AB38);
  uint64_t v32 = v59;
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v59, v31, v6);
  __chkstk_darwin(v33);
  *(&v50 - 4) = v30;
  *(&v50 - 3) = v27;
  *(&v50 - 2) = v28;
  *(&v50 - 1) = (uint64_t)v32;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v55 = 0;
  swift_release();
  uint64_t v34 = v28;
  uint64_t v35 = (char *)v27;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36(v32, v6);
  uint64_t v37 = sub_10015F0D4();
  uint64_t v38 = v60;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v38, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = v56;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v56, v38, v6);
    char v41 = v57;
    URL.appendingPathComponent(_:)();
    uint64_t v42 = ((uint64_t (*)(char *, uint64_t))v36)(v40, v6);
    __chkstk_darwin(v42);
    *(&v50 - 4) = v37;
    *(&v50 - 3) = (uint64_t)v35;
    uint64_t v60 = v35;
    uint64_t v43 = v34;
    *(&v50 - 2) = v34;
    *(&v50 - 1) = (uint64_t)v41;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v36(v41, v6);
    char v44 = v58;
    if ((v58 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024(&qword_100263B68);
      unint64_t v45 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1001CFDB0;
      sub_1001AEF94(v52, v46 + v45, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      sub_1001518C8(v46, (uint64_t)&unk_10023B618, (uint64_t)sub_1001AD964, (uint64_t)&unk_10023B630);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
      unint64_t v48 = v53;
      *(void *)(v47 + 56) = &type metadata for String;
      *(void *)(v47 + 64) = v48;
      uint64_t v49 = (uint64_t)v60;
      *(void *)(v47 + 32) = v60;
      *(void *)(v47 + 40) = v43;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v49, v43, v44 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100179110(void *a1, int a2)
{
  uint64_t v4 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v53 = (char *)&v49 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v49 - v12;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001D0A20;
  *(void *)(v14 + 56) = &type metadata for Bool;
  *(void *)(v14 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v14 + 32) = a2 & 1;
  v56[0] = a1;
  type metadata accessor for AADeviceRecord();
  uint64_t v15 = a1;
  uint64_t v16 = String.init<A>(describing:)();
  uint64_t v18 = v17;
  *(void *)(v14 + 96) = &type metadata for String;
  unint64_t v50 = sub_1000AA5E0();
  *(void *)(v14 + 104) = v50;
  *(void *)(v14 + 72) = v16;
  *(void *)(v14 + 80) = v18;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)&v15[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v21 = *(void *)&v15[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v20, v21);
  Class isa = sub_100130420(v20, v21);
  sub_1000AA8F0(v20, v21);
  if (!isa)
  {
    id v23 = v15;
    Class isa = sub_1000B4F04((uint64_t)v23).super.isa;
  }
  v56[0] = isa;
  sub_10012E130(v56);
  id v24 = [isa encryptedValues];

  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 objectForKeyedSubscript:v25];
  swift_unknownObjectRelease();

  int v54 = a2;
  id v49 = v15;
  if (v26 && (v56[2] = v26, sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
  {
    uint64_t v27 = (char *)v56[0];
    id v28 = v56[1];
  }
  else
  {
    uint64_t v29 = v15;
    uint64_t v27 = (char *)UUID.uuidString.getter();
    id v28 = v30;
  }
  uint64_t v31 = sub_10015F0D4();
  if (qword_100261918 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1000AA0CC(v6, (uint64_t)qword_10026AD60);
  uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v13, v32, v6);
  __chkstk_darwin(v33);
  *(&v49 - 4) = (id)v31;
  *(&v49 - 3) = v27;
  *(&v49 - 2) = v28;
  *(&v49 - 1) = v13;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34(v13, v6);
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = v55;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v36, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v52, v36, v6);
    uint64_t v39 = v53;
    URL.appendingPathComponent(_:)();
    uint64_t v40 = ((uint64_t (*)(char *, uint64_t))v34)(v38, v6);
    __chkstk_darwin(v40);
    *(&v49 - 4) = (id)v35;
    *(&v49 - 3) = v27;
    uint64_t v55 = v27;
    *(&v49 - 2) = v28;
    *(&v49 - 1) = v39;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v34(v39, v6);
    char v41 = v54;
    if ((v54 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1001D2D40;
      uint64_t v43 = v49;
      *(void *)(v42 + 32) = v49;
      v56[0] = (id)v42;
      specialized Array._endMutation()();
      id v44 = v56[0];
      id v45 = v43;
      sub_1001518C8((uint64_t)v44, (uint64_t)&unk_10023B528, (uint64_t)sub_1001AD8C8, (uint64_t)&unk_10023B540);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1001CFDB0;
      unint64_t v47 = v50;
      *(void *)(v46 + 56) = &type metadata for String;
      *(void *)(v46 + 64) = v47;
      uint64_t v48 = (uint64_t)v55;
      *(void *)(v46 + 32) = v55;
      *(void *)(v46 + 40) = v28;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v48, (uint64_t)v28, v41 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100179880(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v54 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v54 - v14;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D0A20;
  *(void *)(v16 + 56) = &type metadata for Bool;
  *(void *)(v16 + 64) = &protocol witness table for Bool;
  int v61 = a2;
  *(unsigned char *)(v16 + 32) = a2 & 1;
  v64[0] = a1;
  type metadata accessor for AAProxCardsRecord();
  uint64_t v17 = a1;
  uint64_t v18 = String.init<A>(describing:)();
  uint64_t v20 = v19;
  *(void *)(v16 + 96) = &type metadata for String;
  unint64_t v56 = sub_1000AA5E0();
  *(void *)(v16 + 104) = v56;
  *(void *)(v16 + 72) = v18;
  *(void *)(v16 + 80) = v20;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)&v17[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v23 = *(void *)&v17[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v22, v23);
  Class isa = sub_100130420(v22, v23);
  sub_1000AA8F0(v22, v23);
  if (!isa)
  {
    NSString v25 = v17;
    Class isa = sub_1000B4D2C((uint64_t)v25).super.isa;
  }
  v64[0] = isa;
  sub_1000B37D0((unint64_t)v64);
  id v26 = [isa encryptedValues];

  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 objectForKeyedSubscript:v27];
  swift_unknownObjectRelease();

  if (v28 && (v64[2] = v28, sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
  {
    uint64_t v29 = v64[0];
    uint64_t v30 = (char *)v64[1];
  }
  else
  {
    uint64_t v31 = v17;
    uint64_t v29 = UUID.uuidString.getter();
    uint64_t v30 = v32;
  }
  uint64_t v63 = v29;
  id v55 = v17;
  uint64_t v33 = sub_10015F0D4();
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1000AA0CC(v8, (uint64_t)qword_10026AB00);
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v34, v8);
  __chkstk_darwin(v35);
  uint64_t v36 = v63;
  *(&v54 - 4) = v33;
  *(&v54 - 3) = v36;
  *(&v54 - 2) = (uint64_t)v30;
  *(&v54 - 1) = (uint64_t)v15;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v15, v8);
  uint64_t v58 = v3;
  uint64_t v38 = sub_10015F0D4();
  uint64_t v39 = v62;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v39, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v41 = v59;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v59, v39, v8);
    uint64_t v42 = v60;
    URL.appendingPathComponent(_:)();
    uint64_t v43 = ((uint64_t (*)(char *, uint64_t))v37)(v41, v8);
    __chkstk_darwin(v43);
    uint64_t v44 = v63;
    *(&v54 - 4) = v38;
    *(&v54 - 3) = v44;
    uint64_t v62 = v30;
    *(&v54 - 2) = (uint64_t)v30;
    *(&v54 - 1) = (uint64_t)v42;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v37(v42, v8);
    char v45 = v61;
    if ((v61 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1001D2D40;
      unint64_t v47 = v55;
      *(void *)(v46 + 32) = v55;
      v64[0] = v46;
      specialized Array._endMutation()();
      uint64_t v48 = v64[0];
      id v49 = v47;
      sub_1001518C8(v48, (uint64_t)&unk_10023B668, (uint64_t)sub_1001AD998, (uint64_t)&unk_10023B680);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1001CFDB0;
      unint64_t v51 = v56;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = v51;
      uint64_t v52 = (uint64_t)v62;
      uint64_t v53 = v63;
      *(void *)(v50 + 32) = v63;
      *(void *)(v50 + 40) = v52;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v53, v52, v45 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100179FE8(void *a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v6 - 8);
  uint64_t v62 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v60 = (char *)&v54 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v54 - v14;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1001D0A20;
  *(void *)(v16 + 56) = &type metadata for Bool;
  *(void *)(v16 + 64) = &protocol witness table for Bool;
  int v61 = a2;
  *(unsigned char *)(v16 + 32) = a2 & 1;
  v64[0] = a1;
  type metadata accessor for HMDeviceCloudRecord();
  uint64_t v17 = a1;
  uint64_t v18 = String.init<A>(describing:)();
  uint64_t v20 = v19;
  *(void *)(v16 + 96) = &type metadata for String;
  unint64_t v56 = sub_1000AA5E0();
  *(void *)(v16 + 104) = v56;
  *(void *)(v16 + 72) = v18;
  *(void *)(v16 + 80) = v20;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)&v17[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v23 = *(void *)&v17[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v22, v23);
  Class isa = sub_100130420(v22, v23);
  sub_1000AA8F0(v22, v23);
  if (!isa)
  {
    NSString v25 = v17;
    Class isa = sub_1000B4D08((uint64_t)v25).super.isa;
  }
  v64[0] = isa;
  sub_1000F45CC(v64);
  id v26 = [isa encryptedValues];

  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v26 objectForKeyedSubscript:v27];
  swift_unknownObjectRelease();

  if (v28 && (v64[2] = v28, sub_1000AA024(&qword_1002629D0), swift_dynamicCast()))
  {
    id v29 = v64[0];
    uint64_t v30 = (char *)v64[1];
  }
  else
  {
    uint64_t v31 = v17;
    id v29 = (id)UUID.uuidString.getter();
    uint64_t v30 = v32;
  }
  uint64_t v63 = (uint64_t)v29;
  id v55 = v17;
  uint64_t v33 = sub_10015F0D4();
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1000AA0CC(v8, (uint64_t)qword_10026AC28);
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, v34, v8);
  __chkstk_darwin(v35);
  uint64_t v36 = v63;
  *(&v54 - 4) = v33;
  *(&v54 - 3) = v36;
  *(&v54 - 2) = (uint64_t)v30;
  *(&v54 - 1) = (uint64_t)v15;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v15, v8);
  uint64_t v58 = v3;
  uint64_t v38 = sub_10015F0D4();
  uint64_t v39 = v62;
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v39, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v41 = v59;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v59, v39, v8);
    uint64_t v42 = v60;
    URL.appendingPathComponent(_:)();
    uint64_t v43 = ((uint64_t (*)(char *, uint64_t))v37)(v41, v8);
    __chkstk_darwin(v43);
    uint64_t v44 = v63;
    *(&v54 - 4) = v38;
    *(&v54 - 3) = v44;
    uint64_t v62 = v30;
    *(&v54 - 2) = (uint64_t)v30;
    *(&v54 - 1) = (uint64_t)v42;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v37(v42, v8);
    char v45 = v61;
    if ((v61 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1001D2D40;
      unint64_t v47 = v55;
      *(void *)(v46 + 32) = v55;
      v64[0] = (id)v46;
      specialized Array._endMutation()();
      id v48 = v64[0];
      id v49 = v47;
      sub_1001518C8((uint64_t)v48, (uint64_t)&unk_10023B6B8, (uint64_t)sub_1001AD9CC, (uint64_t)&unk_10023B6D0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      static os_log_type_t.default.getter();
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1001CFDB0;
      unint64_t v51 = v56;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = v51;
      uint64_t v52 = (uint64_t)v62;
      uint64_t v53 = v63;
      *(void *)(v50 + 32) = v63;
      *(void *)(v50 + 40) = v52;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_10018FC04(v53, v52, v45 & 1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10017A750(uint64_t a1, char *a2)
{
  uint64_t v115 = type metadata accessor for DispatchPredicate();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v113 = (void *)((char *)v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for Date();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v106 = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v107);
  uint64_t v117 = (char *)v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DispatchQoS();
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v100 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v128 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v125 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v127 = (char *)v99 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v99 - v15;
  uint64_t v126 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v126);
  uint64_t v129 = (char *)v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v131 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v120 = (uint64_t)v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = v19;
  __chkstk_darwin(v20);
  uint64_t v116 = (uint64_t)v99 - v21;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  v99[1] = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v22 = swift_allocObject();
  long long v118 = xmmword_1001CFDB0;
  *(_OWORD *)(v22 + 16) = xmmword_1001CFDB0;
  unint64_t v23 = sub_1000F8EB8();
  uint64_t v25 = v24;
  *(void *)(v22 + 56) = &type metadata for String;
  v99[0] = sub_1000AA5E0();
  *(void *)(v22 + 64) = v99[0];
  *(void *)(v22 + 32) = v23;
  *(void *)(v22 + 40) = v25;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v130 = a2;
  uint64_t v26 = sub_10015F0D4();
  NSString v27 = (uint64_t *)(a1 + *(int *)(v18 + 24));
  uint64_t v124 = v18;
  uint64_t v28 = *v27;
  uint64_t v121 = a1;
  uint64_t v122 = v28;
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1000AA0CC(v10, (uint64_t)qword_10026AD20);
  uint64_t v30 = v128;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
  uint64_t v123 = v16;
  v31(v16, v29, v10);
  URL.path.getter();
  uint64_t v33 = v125;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = v127;
  URL.appendingPathComponent(_:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v10);
  __chkstk_darwin(v36);
  v99[-2] = v34;
  v99[-1] = v26;
  uint64_t v37 = (uint64_t)v129;
  OS_dispatch_queue.sync<A>(execute:)();
  v35(v34, v10);
  swift_release();
  v35(v123, v10);
  uint64_t v38 = v131;
  uint64_t v39 = v124;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v37, 1, v124) == 1)
  {
    sub_1000AA894(v37, (uint64_t *)&unk_100263A00);
    uint64_t v40 = *(void **)&v130[OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue];
    uint64_t v41 = v120;
    sub_1001AEF94(v121, v120, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    unint64_t v42 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    unint64_t v43 = (v119 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = (char *)swift_allocObject();
    sub_1001AF05C(v41, (uint64_t)&v44[v42], (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    char v45 = (uint64_t (**)())&v44[v43];
    *char v45 = sub_1000CBD38;
    v45[1] = 0;
    aBlock[4] = sub_1001AE920;
    aBlock[5] = v44;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023CC60;
    uint64_t v46 = _Block_copy(aBlock);
    id v47 = v40;
    id v48 = v100;
    static DispatchQoS.unspecified.getter();
    id v132 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v49 = v102;
    uint64_t v50 = v105;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v46);

    (*(void (**)(char *, uint64_t))(v104 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v48, v103);
    return swift_release();
  }
  uint64_t v52 = v116;
  sub_1001AF05C(v37, v116, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  sub_1000FB560(v52, aBlock);
  id v54 = aBlock[0];
  id v55 = [aBlock[0] recordID];

  sub_1000FB560(v52, aBlock);
  uint64_t v57 = v39;
  id v58 = aBlock[0];
  uint64_t v59 = CKRecord.recordType.getter();
  uint64_t v61 = v60;

  uint64_t v62 = v130;
  sub_100174420(v55, v59, v61, 0);

  uint64_t v63 = v62;
  swift_bridgeObjectRelease();
  uint64_t v64 = v109;
  id v65 = v106;
  uint64_t v66 = v110;
  (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v106, v52, v110);
  uint64_t v67 = (uint64_t *)(v52 + *(int *)(v57 + 24));
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  swift_bridgeObjectRetain();
  uint64_t v70 = v108;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v72 = v71;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v70, v112);
  uint64_t v73 = (uint64_t)v117;
  *uint64_t v117 = 1;
  *(void *)(v73 + 8) = 0xD00000000000001ELL;
  *(void *)(v73 + 16) = 0x80000001001F6CC0;
  uint64_t v74 = (int *)v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v73 + *(int *)(v107 + 24), v65, v66);
  uint64_t v75 = (void *)(v73 + v74[7]);
  *uint64_t v75 = v69;
  v75[1] = v68;
  *(void *)(v73 + v74[8]) = v72;
  *(_OWORD *)(v73 + v74[9]) = xmmword_1001D3390;
  sub_100185B98((uint64_t)v63, v73);
  uint64_t v77 = *(void **)(sub_100160454() + 72);
  unsigned __int8 v78 = v113;
  *uint64_t v113 = v77;
  uint64_t v79 = v114;
  uint64_t v80 = v115;
  (*(void (**)(void *, void, uint64_t))(v114 + 104))(v78, enum case for DispatchPredicate.notOnQueue(_:), v115);
  id v81 = v77;
  LOBYTE(v69) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v79 + 8))(v78, v80);
  if (v69)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if (LOBYTE(aBlock[0]) == 1)
    {
      uint64_t v82 = sub_100160454();
      sub_1000FB560(v52, aBlock);
      uint64_t v80 = v99[0];
      id v84 = aBlock[0];
      id v85 = [aBlock[0] recordID];

      uint64_t v86 = swift_allocObject();
      swift_weakInit();
      uint64_t v87 = v120;
      sub_1001AEF94(v52, v120, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      unint64_t v88 = (*(unsigned __int8 *)(v131 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
      unint64_t v89 = (v119 + v88 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v90 = swift_allocObject();
      sub_1001AF05C(v87, v90 + v88, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      *(void *)(v90 + v89) = v86;
      uint64_t v91 = swift_allocObject();
      *(void *)(v91 + 16) = v82;
      *(void *)(v91 + 24) = v85;
      *(void *)(v91 + 32) = sub_1001AE928;
      *(void *)(v91 + 40) = v90;
      *(unsigned char *)(v91 + 48) = 1;
      swift_retain();
      swift_unknownObjectRetain();
      id v92 = v85;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v91);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_release();
      uint64_t v63 = &type metadata for String;
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v118;
      uint64_t v94 = sub_1000F8EB8();
      uint64_t v63 = &type metadata for String;
      uint64_t v80 = v99[0];
      *(void *)(v93 + 56) = &type metadata for String;
      *(void *)(v93 + 64) = v80;
      *(void *)(v93 + 32) = v94;
      *(void *)(v93 + 40) = v95;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    static os_log_type_t.debug.getter();
    if (qword_100261940 == -1) {
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_12:
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v118;
  aBlock[0] = 0;
  sub_1000AA024(&qword_100263C40);
  uint64_t v97 = String.init<A>(describing:)();
  *(void *)(v96 + 56) = v63;
  *(void *)(v96 + 64) = v80;
  *(void *)(v96 + 32) = v97;
  *(void *)(v96 + 40) = v98;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1001AEFFC(v73, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
  return sub_1001AEFFC(v52, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
}

void sub_10017B740(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v123 = a2;
  uint64_t v124 = a3;
  uint64_t v114 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v111 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for DispatchPredicate();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v115 = (uint64_t *)((char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v108 = type metadata accessor for Date();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v104 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for UUID();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v102 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v103);
  uint64_t v119 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v127 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v129 = (char *)&v98 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v98 - v18;
  uint64_t v128 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v128);
  uint64_t v130 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v121 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = v21;
  __chkstk_darwin(v22);
  uint64_t v118 = (uint64_t)&v98 - v23;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v101 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v24 = swift_allocObject();
  long long v100 = xmmword_1001CFDB0;
  *(_OWORD *)(v24 + 16) = xmmword_1001CFDB0;
  uint64_t v25 = sub_1000F8EB8();
  uint64_t v27 = v26;
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v99 = sub_1000AA5E0();
  *(void *)(v24 + 64) = v99;
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v27;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v132 = v4;
  uint64_t v28 = sub_10015F0D4();
  uint64_t v29 = *(int *)(v133 + 24);
  uint64_t v122 = a1;
  uint64_t v125 = *(void *)(a1 + v29);
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1000AA0CC(v12, (uint64_t)qword_10026AD20);
  uint64_t v31 = v13;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v126 = v19;
  v32(v19, v30, v12);
  uint64_t v34 = v28;
  URL.path.getter();
  uint64_t v35 = v127;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v36 = v129;
  URL.appendingPathComponent(_:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
  v37(v35, v12);
  __chkstk_darwin(v38);
  *(&v98 - 2) = (uint64_t)v36;
  *(&v98 - 1) = v34;
  uint64_t v39 = (uint64_t)v130;
  OS_dispatch_queue.sync<A>(execute:)();
  v37(v36, v12);
  swift_release();
  v37(v126, v12);
  uint64_t v40 = v131;
  uint64_t v41 = v133;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v39, 1, v133) == 1)
  {
    sub_1000AA894(v39, (uint64_t *)&unk_100263A00);
    unint64_t v42 = *(void **)(v132 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v43 = v121;
    sub_1001AEF94(v122, v121, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    unint64_t v44 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v45 = (v120 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v46 = (char *)swift_allocObject();
    sub_1001AF05C(v43, (uint64_t)&v46[v44], (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    id v47 = &v46[v45];
    uint64_t v48 = v124;
    *(void *)id v47 = v123;
    *((void *)v47 + 1) = v48;
    aBlock[4] = sub_1001AE920;
    aBlock[5] = v46;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023BE00;
    id v49 = _Block_copy(aBlock);
    id v50 = v42;
    swift_retain();
    unint64_t v51 = v109;
    static DispatchQoS.unspecified.getter();
    uint64_t v134 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v52 = v111;
    uint64_t v53 = v114;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v49);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v52, v53);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v51, v112);
    swift_release();
  }
  else
  {
    uint64_t v54 = v118;
    sub_1001AF05C(v39, v118, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    sub_1000FB560(v54, aBlock);
    id v56 = aBlock[0];
    id v57 = [aBlock[0] recordID];

    sub_1000FB560(v54, aBlock);
    id v59 = aBlock[0];
    uint64_t v60 = CKRecord.recordType.getter();
    uint64_t v62 = v61;

    uint64_t v63 = v132;
    sub_100174420(v57, v60, v62, 0);

    swift_bridgeObjectRelease();
    uint64_t v64 = v105;
    id v65 = v102;
    uint64_t v66 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v102, v54, v106);
    uint64_t v67 = (uint64_t *)(v54 + *(int *)(v41 + 24));
    uint64_t v69 = *v67;
    uint64_t v68 = v67[1];
    swift_bridgeObjectRetain();
    uint64_t v70 = v104;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v72 = v71;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v70, v108);
    uint64_t v73 = (uint64_t)v119;
    *uint64_t v119 = 1;
    *(void *)(v73 + 8) = 0xD00000000000001ELL;
    *(void *)(v73 + 16) = 0x80000001001F6CC0;
    uint64_t v74 = (int *)v103;
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v73 + *(int *)(v103 + 24), v65, v66);
    uint64_t v75 = (void *)(v73 + v74[7]);
    *uint64_t v75 = v69;
    v75[1] = v68;
    *(void *)(v73 + v74[8]) = v72;
    *(_OWORD *)(v73 + v74[9]) = xmmword_1001D3390;
    sub_100185B98(v63, v73);
    uint64_t v77 = *(void **)(sub_100160454() + 72);
    unsigned __int8 v78 = v115;
    *uint64_t v115 = v77;
    uint64_t v79 = v116;
    uint64_t v80 = v117;
    (*(void (**)(void *, void, uint64_t))(v116 + 104))(v78, enum case for DispatchPredicate.notOnQueue(_:), v117);
    id v81 = v77;
    LOBYTE(v69) = _dispatchPreconditionTest(_:)();
    uint64_t v82 = (void *)(*(uint64_t (**)(void *, uint64_t))(v79 + 8))(v78, v80);
    if (v69)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (LOBYTE(aBlock[0]) == 1)
      {
        uint64_t v83 = sub_100160454();
        sub_1000FB560(v54, aBlock);
        id v85 = aBlock[0];
        id v86 = [aBlock[0] recordID];

        uint64_t v87 = swift_allocObject();
        swift_weakInit();
        uint64_t v88 = v121;
        sub_1001AEF94(v54, v121, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        unint64_t v89 = (*(unsigned __int8 *)(v131 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
        unint64_t v90 = (v120 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v91 = swift_allocObject();
        sub_1001AF05C(v88, v91 + v89, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        *(void *)(v91 + v90) = v87;
        uint64_t v92 = swift_allocObject();
        *(void *)(v92 + 16) = v83;
        *(void *)(v92 + 24) = v86;
        *(void *)(v92 + 32) = sub_1001AE928;
        *(void *)(v92 + 40) = v91;
        *(unsigned char *)(v92 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v93 = v86;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v92);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = v100;
        uint64_t v95 = sub_1000F8EB8();
        unint64_t v96 = v99;
        *(void *)(v94 + 56) = &type metadata for String;
        *(void *)(v94 + 64) = v96;
        *(void *)(v94 + 32) = v95;
        *(void *)(v94 + 40) = v97;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      v123(0);
      sub_1001AEFFC(v73, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    }
    else
    {
      __break(1u);
      __break(1u);
    }
  }
}

uint64_t sub_10017C680(uint64_t a1, uint64_t (*a2)(void))
{
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001CFDB0;
  uint64_t v4 = sub_1000F8EB8();
  uint64_t v6 = v5;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 64) = sub_1000AA5E0();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v6;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return a2(0);
}

uint64_t sub_10017C78C(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    uint64_t v9 = sub_1000F8EB8();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100177904(a2, 0);
      return swift_release();
    }
  }
  return result;
}

void sub_10017C9BC(char *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = &type metadata for AudioAccessoryFeatures;
  v70[4] = (id)sub_1000AE4C4();
  char v12 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v70);
  if ((v12 & 1) == 0)
  {
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v36 = 0x8000000000000038;
    a2();
    swift_errorRelease();
    return;
  }
  sub_10015F0D4();
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  if (qword_100261918 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1000AA0CC(v8, (uint64_t)qword_10026AD60);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  uint64_t v16 = (char *)sub_10015CA58(v13, v14, (uint64_t)v11, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v69 = a3;
  if (v16)
  {
    char v17 = sub_10012F050((uint64_t)a1);
    uint64_t v68 = a2;
    if ((v17 & 1) == 0)
    {
      uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
      unint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
      sub_1000AA680(v19, v20);
      Class isa = sub_100130420(v19, v20);
      sub_1000AA8F0(v19, v20);
      if (!isa)
      {
        uint64_t v22 = v16;
        Class isa = sub_1000B4F04((uint64_t)v22).super.isa;
      }
      v70[0] = isa;
      sub_10012E130(v70);
      id v23 = [isa recordChangeTag];

      if (v23)
      {

        static os_log_type_t.default.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1001D0A20;
        uint64_t v25 = v16;
        id v26 = [v25 description];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;

        *(void *)(v24 + 56) = &type metadata for String;
        unint64_t v30 = sub_1000AA5E0();
        *(void *)(v24 + 64) = v30;
        *(void *)(v24 + 32) = v27;
        *(void *)(v24 + 40) = v29;
        uint64_t v31 = a1;
        id v32 = [v31 description];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        *(void *)(v24 + 96) = &type metadata for String;
        *(void *)(v24 + 104) = v30;
        *(void *)(v24 + 72) = v33;
        *(void *)(v24 + 80) = v35;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        ((void (*)(void))v68)(0);

        return;
      }
    }
    v67[3] = static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1001D0A20;
    uint64_t v38 = v16;
    id v39 = [v38 description];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    *(void *)(v37 + 56) = &type metadata for String;
    unint64_t v43 = sub_1000AA5E0();
    *(void *)(v37 + 64) = v43;
    *(void *)(v37 + 32) = v40;
    *(void *)(v37 + 40) = v42;
    unint64_t v44 = a1;
    id v45 = [v44 description];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    *(void *)(v37 + 96) = &type metadata for String;
    *(void *)(v37 + 104) = v43;
    *(void *)(v37 + 72) = v46;
    *(void *)(v37 + 80) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v49 = v38;
    sub_10012EAB4((unsigned __int8 *)v44);

    a2 = v68;
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1001CFDB0;
    unint64_t v51 = a1;
    id v52 = [v51 description];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;

    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_1000AA5E0();
    *(void *)(v50 + 32) = v53;
    *(void *)(v50 + 40) = v55;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v49 = v51;
  }
  uint64_t v56 = sub_10015F0D4();
  v70[0] = v49;
  __chkstk_darwin(v56);
  *(void *)&v67[-4] = v57;
  *(void *)&v67[-2] = v70;
  id v58 = v49;
  OS_dispatch_queue.sync<A>(execute:)();

  swift_release();
  ((void (*)(void))a2)(0);
  id v59 = v58;
  uint64_t v61 = *(void *)&v59[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v62 = *(void *)&v59[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v61, v62);
  uint64_t v63 = sub_100130420(v61, v62);
  sub_1000AA8F0(v61, v62);
  if (!v63)
  {
    uint64_t v64 = v59;
    uint64_t v63 = sub_1000B4F04((uint64_t)v64).super.isa;
  }
  v70[0] = v63;
  sub_10012E130(v70);

  sub_100160454();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v4;
  *(void *)(v65 + 24) = v63;
  swift_retain();
  id v66 = v63;
  sub_10011B210(v66, 1, (uint64_t)sub_1001AE8B8, v65);
  swift_unknownObjectRelease();
  swift_release();
}

uint64_t sub_10017D2B0(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  __chkstk_darwin(v6);
  uint64_t v109 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v120 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v119 = (uint64_t *)((char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v118 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v115 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v116 = *(void *)(v13 - 8);
  uint64_t v117 = v13;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v114);
  uint64_t v16 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = &type metadata for AudioAccessoryFeatures;
  unint64_t v125 = sub_1000AE4C4();
  char v21 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if (v21)
  {
    uint64_t v101 = v11;
    uint64_t v102 = v9;
    uint64_t v103 = v16;
    uint64_t v105 = a2;
    uint64_t v106 = a3;
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v100 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v22 = swift_allocObject();
    long long v99 = xmmword_1001CFDB0;
    *(_OWORD *)(v22 + 16) = xmmword_1001CFDB0;
    id v23 = a1;
    id v24 = [v23 description];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v98 = sub_1000AA5E0();
    *(void *)(v22 + 64) = v98;
    *(void *)(v22 + 32) = v25;
    *(void *)(v22 + 40) = v27;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10015F0D4();
    id v104 = v23;
    uint64_t v28 = *(void *)&v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
    uint64_t v29 = *(void *)&v23[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
    if (qword_100261918 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1000AA0CC(v17, (uint64_t)qword_10026AD60);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v30, v17);
    uint64_t v31 = (char *)sub_10015CA58(v28, v29, (uint64_t)v20, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    if (v31)
    {
      uint64_t v33 = (uint64_t *)&v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
      uint64_t v34 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
      unint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
      sub_1000AA680(v34, v35);
      Class isa = sub_100130420(v34, v35);
      sub_1000AA8F0(v34, v35);
      if (!isa)
      {
        uint64_t v37 = v31;
        Class isa = sub_1000B4F04((uint64_t)v37).super.isa;
      }
      uint64_t v38 = v101;
      aBlock[0] = isa;
      sub_10012E130(aBlock);
      id v39 = [isa recordID];

      uint64_t v41 = *v33;
      unint64_t v42 = v33[1];
      sub_1000AA680(*v33, v42);
      unint64_t v43 = sub_100130420(v41, v42);
      sub_1000AA8F0(v41, v42);
      if (!v43)
      {
        unint64_t v44 = v31;
        unint64_t v43 = sub_1000B4F04((uint64_t)v44).super.isa;
      }
      aBlock[0] = v43;
      sub_10012E130(aBlock);
      uint64_t v45 = CKRecord.recordType.getter();
      uint64_t v47 = v46;

      uint64_t v48 = v121;
      sub_100174420(v39, v45, v47, 0);

      swift_bridgeObjectRelease();
      uint64_t v50 = v116;
      uint64_t v49 = v117;
      unint64_t v51 = v113;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v113, &v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v117);
      uint64_t v52 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
      uint64_t v53 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
      swift_bridgeObjectRetain();
      uint64_t v54 = v115;
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v56 = v55;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v54, v38);
      uint64_t v57 = (uint64_t)v103;
      *uint64_t v103 = 1;
      strcpy((char *)(v57 + 8), "AADeviceRecord");
      *(unsigned char *)(v57 + 23) = -18;
      id v58 = (int *)v114;
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v57 + *(int *)(v114 + 24), v51, v49);
      id v59 = (void *)(v57 + v58[7]);
      *id v59 = v52;
      v59[1] = v53;
      *(void *)(v57 + v58[8]) = v56;
      *(_OWORD *)(v57 + v58[9]) = xmmword_1001D3390;
      sub_100185B98(v48, v57);
      uint64_t v61 = *(void **)(sub_100160454() + 72);
      uint64_t v63 = v119;
      uint64_t v62 = v120;
      *uint64_t v119 = v61;
      uint64_t v64 = v102;
      (*(void (**)(void *, void, uint64_t))(v62 + 104))(v63, enum case for DispatchPredicate.notOnQueue(_:), v102);
      id v65 = v61;
      LOBYTE(v49) = _dispatchPreconditionTest(_:)();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v62 + 8))(v63, v64);
      if (v49)
      {
        OS_dispatch_queue.sync<A>(execute:)();
        swift_unknownObjectRelease();
        if (LOBYTE(aBlock[0]) == 1)
        {
          uint64_t v67 = sub_100160454();
          uint64_t v69 = *v33;
          unint64_t v70 = v33[1];
          sub_1000AA680(*v33, v70);
          uint64_t v71 = sub_100130420(v69, v70);
          sub_1000AA8F0(v69, v70);
          if (!v71)
          {
            uint64_t v72 = v31;
            uint64_t v71 = sub_1000B4F04((uint64_t)v72).super.isa;
          }
          aBlock[0] = v71;
          sub_10012E130(aBlock);
          id v73 = [v71 recordID];

          uint64_t v74 = swift_allocObject();
          swift_weakInit();
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = v31;
          *(void *)(v75 + 24) = v74;
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = v67;
          *(void *)(v76 + 24) = v73;
          *(void *)(v76 + 32) = sub_1001AE8A8;
          *(void *)(v76 + 40) = v75;
          *(unsigned char *)(v76 + 48) = 1;
          uint64_t v77 = v31;
          swift_retain();
          swift_unknownObjectRetain();
          id v78 = v73;
          swift_retain();
          sub_10011A9F8((uint64_t)sub_1001AD6BC, v76);
          swift_unknownObjectRelease();

          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v90 = swift_allocObject();
          *(_OWORD *)(v90 + 16) = v99;
          id v91 = v104;
          id v92 = [v91 description];
          uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v95 = v94;

          unint64_t v96 = v98;
          *(void *)(v90 + 56) = &type metadata for String;
          *(void *)(v90 + 64) = v96;
          *(void *)(v90 + 32) = v93;
          *(void *)(v90 + 40) = v95;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
        }
        ((void (*)(void))v105)(0);

        return sub_1001AEFFC(v57, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      uint64_t v80 = *(void **)(v121 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
      id v81 = (void *)swift_allocObject();
      id v82 = v104;
      uint64_t v83 = v105;
      v81[2] = v104;
      v81[3] = v83;
      v81[4] = v106;
      unint64_t v125 = (unint64_t)sub_1001AE884;
      uint64_t v126 = v81;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      void aBlock[2] = sub_100106F90;
      uint64_t v124 = (ValueMetadata *)&unk_10023BCE8;
      id v84 = _Block_copy(aBlock);
      id v85 = v82;
      id v86 = v80;
      swift_retain();
      uint64_t v87 = v107;
      static DispatchQoS.unspecified.getter();
      uint64_t v122 = _swiftEmptyArrayStorage;
      sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AA024(&qword_100263550);
      sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
      uint64_t v88 = v109;
      uint64_t v89 = v112;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v84);

      (*(void (**)(char *, uint64_t))(v111 + 8))(v88, v89);
      (*(void (**)(char *, uint64_t))(v108 + 8))(v87, v110);
      return swift_release();
    }
  }
  else
  {
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v79 = 0x8000000000000038;
    a2();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10017E00C(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    id v9 = a2;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v11;
    *(void *)(v8 + 40) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100179110(v9, 0);
      return swift_release();
    }
  }
  return result;
}

void sub_10017E260(char *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = &type metadata for AudioAccessoryFeatures;
  v70[4] = sub_1000AE4C4();
  char v12 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v70);
  if ((v12 & 1) == 0)
  {
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v36 = 0x8000000000000038;
    a2();
    swift_errorRelease();
    return;
  }
  sub_10015F0D4();
  uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1000AA0CC(v8, (uint64_t)qword_10026AB00);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v15, v8);
  uint64_t v16 = (char *)sub_10015CA58(v13, v14, (uint64_t)v11, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v69 = a3;
  if (v16)
  {
    char v17 = sub_1000B44E4((uint64_t)a1);
    uint64_t v68 = a2;
    if ((v17 & 1) == 0)
    {
      uint64_t v19 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
      unint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
      sub_1000AA680(v19, v20);
      Class isa = sub_100130420(v19, v20);
      sub_1000AA8F0(v19, v20);
      if (!isa)
      {
        uint64_t v22 = v16;
        Class isa = sub_1000B4D2C((uint64_t)v22).super.isa;
      }
      v70[0] = isa;
      sub_1000B37D0((unint64_t)v70);
      id v23 = [isa recordChangeTag];

      if (v23)
      {

        static os_log_type_t.default.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1001D0A20;
        uint64_t v25 = v16;
        id v26 = [v25 description];
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v28;

        *(void *)(v24 + 56) = &type metadata for String;
        unint64_t v30 = sub_1000AA5E0();
        *(void *)(v24 + 64) = v30;
        *(void *)(v24 + 32) = v27;
        *(void *)(v24 + 40) = v29;
        uint64_t v31 = a1;
        id v32 = [v31 description];
        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        *(void *)(v24 + 96) = &type metadata for String;
        *(void *)(v24 + 104) = v30;
        *(void *)(v24 + 72) = v33;
        *(void *)(v24 + 80) = v35;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        ((void (*)(void))v68)(0);

        return;
      }
    }
    v67[3] = static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1001D0A20;
    uint64_t v38 = v16;
    id v39 = [v38 description];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    *(void *)(v37 + 56) = &type metadata for String;
    unint64_t v43 = sub_1000AA5E0();
    *(void *)(v37 + 64) = v43;
    *(void *)(v37 + 32) = v40;
    *(void *)(v37 + 40) = v42;
    unint64_t v44 = a1;
    id v45 = [v44 description];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    *(void *)(v37 + 96) = &type metadata for String;
    *(void *)(v37 + 104) = v43;
    *(void *)(v37 + 72) = v46;
    *(void *)(v37 + 80) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v49 = v38;
    sub_1000B3E9C(v44);

    a2 = v68;
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1001CFDB0;
    unint64_t v51 = a1;
    id v52 = [v51 description];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;

    *(void *)(v50 + 56) = &type metadata for String;
    *(void *)(v50 + 64) = sub_1000AA5E0();
    *(void *)(v50 + 32) = v53;
    *(void *)(v50 + 40) = v55;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v49 = v51;
  }
  uint64_t v56 = sub_10015F0D4();
  v70[0] = v49;
  __chkstk_darwin(v56);
  *(void *)&v67[-4] = v57;
  *(void *)&v67[-2] = v70;
  id v58 = v49;
  OS_dispatch_queue.sync<A>(execute:)();

  swift_release();
  ((void (*)(void))a2)(0);
  id v59 = v58;
  uint64_t v61 = *(void *)&v59[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v62 = *(void *)&v59[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v61, v62);
  uint64_t v63 = sub_100130420(v61, v62);
  sub_1000AA8F0(v61, v62);
  if (!v63)
  {
    uint64_t v64 = v59;
    uint64_t v63 = sub_1000B4D2C((uint64_t)v64).super.isa;
  }
  v70[0] = v63;
  sub_1000B37D0((unint64_t)v70);

  sub_100160454();
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v4;
  *(void *)(v65 + 24) = v63;
  swift_retain();
  id v66 = v63;
  sub_10011B210(v66, 1, (uint64_t)sub_1001AE7E8, v65);
  swift_unknownObjectRelease();
  swift_release();
}

uint64_t sub_10017EB54(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v111 = v6;
  __chkstk_darwin(v6);
  uint64_t v108 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for DispatchQoS();
  uint64_t v107 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v106 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v119 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v118 = (uint64_t *)((char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v114 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for UUID();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v113);
  uint64_t v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = &type metadata for AudioAccessoryFeatures;
  unint64_t v124 = sub_1000AE4C4();
  char v20 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if (v20)
  {
    uint64_t v100 = v11;
    uint64_t v101 = v9;
    uint64_t v102 = v15;
    id v104 = a2;
    uint64_t v105 = a3;
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v99 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v21 = swift_allocObject();
    long long v98 = xmmword_1001CFDB0;
    *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
    uint64_t v22 = a1;
    id v23 = [v22 description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    *(void *)(v21 + 56) = &type metadata for String;
    unint64_t v97 = sub_1000AA5E0();
    *(void *)(v21 + 64) = v97;
    *(void *)(v21 + 32) = v24;
    *(void *)(v21 + 40) = v26;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10015F0D4();
    id v103 = v22;
    uint64_t v27 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
    uint64_t v28 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
    if (qword_100261860 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1000AA0CC(v16, (uint64_t)qword_10026AB00);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v29, v16);
    unint64_t v30 = (char *)sub_10015CA58(v27, v28, (uint64_t)v19, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    if (v30)
    {
      id v32 = (uint64_t *)&v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
      uint64_t v33 = *(void *)&v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
      unint64_t v34 = *(void *)&v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
      sub_1000AA680(v33, v34);
      Class isa = sub_100130420(v33, v34);
      sub_1000AA8F0(v33, v34);
      if (!isa)
      {
        uint64_t v36 = v30;
        Class isa = sub_1000B4D2C((uint64_t)v36).super.isa;
      }
      uint64_t v37 = v100;
      aBlock[0] = isa;
      sub_1000B37D0((unint64_t)aBlock);
      id v38 = [isa recordID];

      uint64_t v40 = *v32;
      unint64_t v41 = v32[1];
      sub_1000AA680(*v32, v41);
      uint64_t v42 = sub_100130420(v40, v41);
      sub_1000AA8F0(v40, v41);
      if (!v42)
      {
        unint64_t v43 = v30;
        uint64_t v42 = sub_1000B4D2C((uint64_t)v43).super.isa;
      }
      aBlock[0] = v42;
      sub_1000B37D0((unint64_t)aBlock);
      uint64_t v44 = CKRecord.recordType.getter();
      uint64_t v46 = v45;

      uint64_t v47 = v120;
      sub_100174420(v38, v44, v46, 0);

      swift_bridgeObjectRelease();
      uint64_t v48 = v115;
      uint64_t v49 = v112;
      uint64_t v50 = v117;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, &v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_identifier], v117);
      uint64_t v51 = *(void *)&v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
      uint64_t v52 = *(void *)&v30[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
      swift_bridgeObjectRetain();
      uint64_t v53 = v114;
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v55 = v54;
      (*(void (**)(char *, uint64_t))(v116 + 8))(v53, v37);
      uint64_t v56 = (uint64_t)v102;
      *uint64_t v102 = 1;
      *(void *)(v56 + 8) = 0xD000000000000011;
      *(void *)(v56 + 16) = 0x80000001001FDE80;
      uint64_t v57 = (int *)v113;
      (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v56 + *(int *)(v113 + 24), v49, v50);
      id v58 = (void *)(v56 + v57[7]);
      void *v58 = v51;
      v58[1] = v52;
      *(void *)(v56 + v57[8]) = v55;
      *(_OWORD *)(v56 + v57[9]) = xmmword_1001D3390;
      sub_100185B98(v47, v56);
      uint64_t v60 = *(void **)(sub_100160454() + 72);
      unint64_t v62 = v118;
      uint64_t v61 = v119;
      *uint64_t v118 = v60;
      uint64_t v63 = v101;
      (*(void (**)(void *, void, uint64_t))(v61 + 104))(v62, enum case for DispatchPredicate.notOnQueue(_:), v101);
      id v64 = v60;
      LOBYTE(v50) = _dispatchPreconditionTest(_:)();
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v61 + 8))(v62, v63);
      if (v50)
      {
        OS_dispatch_queue.sync<A>(execute:)();
        swift_unknownObjectRelease();
        if (LOBYTE(aBlock[0]) == 1)
        {
          uint64_t v66 = sub_100160454();
          uint64_t v68 = *v32;
          unint64_t v69 = v32[1];
          sub_1000AA680(*v32, v69);
          unint64_t v70 = sub_100130420(v68, v69);
          sub_1000AA8F0(v68, v69);
          if (!v70)
          {
            uint64_t v71 = v30;
            unint64_t v70 = sub_1000B4D2C((uint64_t)v71).super.isa;
          }
          aBlock[0] = v70;
          sub_1000B37D0((unint64_t)aBlock);
          id v72 = [v70 recordID];

          uint64_t v73 = swift_allocObject();
          swift_weakInit();
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = v30;
          *(void *)(v74 + 24) = v73;
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = v66;
          *(void *)(v75 + 24) = v72;
          *(void *)(v75 + 32) = sub_1001AE7D8;
          *(void *)(v75 + 40) = v74;
          *(unsigned char *)(v75 + 48) = 1;
          uint64_t v76 = v30;
          swift_retain();
          swift_unknownObjectRetain();
          id v77 = v72;
          swift_retain();
          sub_10011A9F8((uint64_t)sub_1001AD6BC, v75);
          swift_unknownObjectRelease();

          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v89 = swift_allocObject();
          *(_OWORD *)(v89 + 16) = v98;
          id v90 = v103;
          id v91 = [v90 description];
          uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v94 = v93;

          unint64_t v95 = v97;
          *(void *)(v89 + 56) = &type metadata for String;
          *(void *)(v89 + 64) = v95;
          *(void *)(v89 + 32) = v92;
          *(void *)(v89 + 40) = v94;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
        }
        ((void (*)(void))v104)(0);

        return sub_1001AEFFC(v56, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      uint64_t v79 = *(void **)(v120 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
      uint64_t v80 = (void *)swift_allocObject();
      id v81 = v103;
      id v82 = v104;
      v80[2] = v103;
      v80[3] = v82;
      v80[4] = v105;
      unint64_t v124 = (unint64_t)sub_1001B1B4C;
      unint64_t v125 = v80;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100106F90;
      uint64_t v123 = (ValueMetadata *)&unk_10023BBD0;
      uint64_t v83 = _Block_copy(aBlock);
      id v84 = v81;
      id v85 = v79;
      swift_retain();
      id v86 = v106;
      static DispatchQoS.unspecified.getter();
      uint64_t v121 = _swiftEmptyArrayStorage;
      sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000AA024(&qword_100263550);
      sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
      uint64_t v87 = v108;
      uint64_t v88 = v111;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v83);

      (*(void (**)(char *, uint64_t))(v110 + 8))(v87, v88);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v86, v109);
      return swift_release();
    }
  }
  else
  {
    sub_1000EB9B4();
    swift_allocError();
    *id v78 = 0x8000000000000038;
    a2();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_10017F8B0(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    id v9 = a2;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v11;
    *(void *)(v8 + 40) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100179880(v9, 0);
      return swift_release();
    }
  }
  return result;
}

void sub_10017FB04(char *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = a3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015F0D4();
  uint64_t v11 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1000AA0CC(v7, (uint64_t)qword_10026AC28);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
  uint64_t v14 = (char *)sub_10015CA58(v11, v12, (uint64_t)v10, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v14)
  {
    char v15 = sub_1000F6E08(a1);
    uint64_t v66 = a2;
    if ((v15 & 1) == 0)
    {
      uint64_t v17 = *(void *)&v14[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
      unint64_t v18 = *(void *)&v14[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
      sub_1000AA680(v17, v18);
      Class isa = (char *)sub_100130420(v17, v18);
      sub_1000AA8F0(v17, v18);
      if (!isa)
      {
        char v20 = v14;
        Class isa = (char *)sub_1000B4D08((uint64_t)v20).super.isa;
      }
      uint64_t v68 = isa;
      sub_1000F45CC((id *)&v68);
      id v21 = [isa recordChangeTag];

      if (v21)
      {

        static os_log_type_t.default.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1001D0A20;
        id v23 = v14;
        id v24 = [v23 description];
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v26;

        *(void *)(v22 + 56) = &type metadata for String;
        unint64_t v28 = sub_1000AA5E0();
        *(void *)(v22 + 64) = v28;
        *(void *)(v22 + 32) = v25;
        *(void *)(v22 + 40) = v27;
        uint64_t v29 = a1;
        id v30 = [v29 description];
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;

        *(void *)(v22 + 96) = &type metadata for String;
        *(void *)(v22 + 104) = v28;
        *(void *)(v22 + 72) = v31;
        *(void *)(v22 + 80) = v33;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        v66(0);

        return;
      }
    }
    uint64_t v65 = v4;
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1001D0A20;
    uint64_t v35 = v14;
    id v36 = [v35 description];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    *(void *)(v34 + 56) = &type metadata for String;
    unint64_t v40 = sub_1000AA5E0();
    *(void *)(v34 + 64) = v40;
    *(void *)(v34 + 32) = v37;
    *(void *)(v34 + 40) = v39;
    unint64_t v41 = a1;
    id v42 = [v41 description];
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    *(void *)(v34 + 96) = &type metadata for String;
    *(void *)(v34 + 104) = v40;
    *(void *)(v34 + 72) = v43;
    *(void *)(v34 + 80) = v45;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v46 = v35;
    sub_1000F5E78(v41);

    uint64_t v4 = v65;
    a2 = v66;
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
    uint64_t v48 = a1;
    id v49 = [v48 description];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    *(void *)(v47 + 56) = &type metadata for String;
    *(void *)(v47 + 64) = sub_1000AA5E0();
    *(void *)(v47 + 32) = v50;
    *(void *)(v47 + 40) = v52;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v46 = v48;
  }
  uint64_t v53 = sub_10015F0D4();
  uint64_t v68 = v46;
  __chkstk_darwin(v53);
  *(&v64 - 2) = v54;
  *(&v64 - 1) = (uint64_t)&v68;
  uint64_t v55 = v46;
  OS_dispatch_queue.sync<A>(execute:)();

  swift_release();
  a2(0);
  uint64_t v56 = v55;
  uint64_t v58 = *(void *)&v56[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v59 = *(void *)&v56[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v58, v59);
  uint64_t v60 = (char *)sub_100130420(v58, v59);
  sub_1000AA8F0(v58, v59);
  if (!v60)
  {
    uint64_t v61 = v56;
    uint64_t v60 = (char *)sub_1000B4D08((uint64_t)v61).super.isa;
  }
  uint64_t v68 = v60;
  sub_1000F45CC((id *)&v68);

  sub_100160454();
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v4;
  *(void *)(v62 + 24) = v60;
  swift_retain();
  uint64_t v63 = v60;
  sub_10011B210(v63, 1, (uint64_t)sub_1001ADED8, v62);
  swift_unknownObjectRelease();
  swift_release();
}

uint64_t sub_10018038C(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v112 = a3;
  uint64_t v111 = a2;
  long long v98 = (uint64_t *)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v97 = *(v98 - 1);
  __chkstk_darwin(v98);
  unint64_t v95 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for DispatchQoS();
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v93 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  __chkstk_darwin(v6);
  uint64_t v106 = (uint64_t *)((char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = type metadata accessor for Date();
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v101 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for UUID();
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v99 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v100);
  uint64_t v109 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v92 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v15 = swift_allocObject();
  long long v91 = xmmword_1001CFDB0;
  *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
  uint64_t v16 = a1;
  id v17 = [v16 description];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v90 = sub_1000AA5E0();
  *(void *)(v15 + 64) = v90;
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v20;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = v113;
  sub_10015F0D4();
  id v110 = v16;
  uint64_t v22 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v23 = *(void *)&v16[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1000AA0CC(v11, (uint64_t)qword_10026AC28);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v24, v11);
  uint64_t v25 = (char *)sub_10015CA58(v22, v23, (uint64_t)v14, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v25)
  {
    uint64_t v27 = (uint64_t *)&v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
    uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
    unint64_t v29 = *(void *)&v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
    sub_1000AA680(v28, v29);
    Class isa = sub_100130420(v28, v29);
    sub_1000AA8F0(v28, v29);
    if (!isa)
    {
      uint64_t v31 = v25;
      Class isa = sub_1000B4D08((uint64_t)v31).super.isa;
    }
    uint64_t v32 = (uint64_t)v109;
    aBlock[0] = isa;
    sub_1000F45CC(aBlock);
    id v33 = [isa recordID];

    uint64_t v35 = *v27;
    unint64_t v36 = v27[1];
    sub_1000AA680(*v27, v36);
    uint64_t v37 = sub_100130420(v35, v36);
    sub_1000AA8F0(v35, v36);
    long long v98 = v27;
    if (!v37)
    {
      uint64_t v38 = v25;
      uint64_t v37 = sub_1000B4D08((uint64_t)v38).super.isa;
    }
    aBlock[0] = v37;
    sub_1000F45CC(aBlock);
    uint64_t v39 = CKRecord.recordType.getter();
    uint64_t v41 = v40;

    uint64_t v42 = v21;
    sub_100174420(v33, v39, v41, 0);

    swift_bridgeObjectRelease();
    uint64_t v43 = v102;
    uint64_t v44 = v99;
    uint64_t v45 = v104;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, &v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_identifier], v104);
    uint64_t v47 = *(void *)&v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
    uint64_t v46 = *(void *)&v25[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
    swift_bridgeObjectRetain();
    uint64_t v48 = v101;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v50 = v49;
    (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v105);
    *(unsigned char *)uint64_t v32 = 1;
    *(void *)(v32 + 8) = 0xD000000000000013;
    *(void *)(v32 + 16) = 0x80000001001F7610;
    uint64_t v51 = (int *)v100;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v32 + *(int *)(v100 + 24), v44, v45);
    uint64_t v52 = (void *)(v32 + v51[7]);
    void *v52 = v47;
    v52[1] = v46;
    *(void *)(v32 + v51[8]) = v50;
    *(_OWORD *)(v32 + v51[9]) = xmmword_1001D3390;
    sub_100185B98(v42, v32);
    uint64_t v54 = *(void **)(sub_100160454() + 72);
    uint64_t v55 = v106;
    uint64_t v56 = v107;
    *uint64_t v106 = v54;
    uint64_t v57 = v108;
    (*(void (**)(void *, void, uint64_t))(v56 + 104))(v55, enum case for DispatchPredicate.notOnQueue(_:), v108);
    id v58 = v54;
    LOBYTE(v47) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v56 + 8))(v55, v57);
    if (v47)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (LOBYTE(aBlock[0]) == 1)
      {
        uint64_t v60 = sub_100160454();
        uint64_t v62 = *v98;
        unint64_t v63 = v98[1];
        sub_1000AA680(*v98, v63);
        uint64_t v64 = sub_100130420(v62, v63);
        sub_1000AA8F0(v62, v63);
        if (!v64)
        {
          uint64_t v65 = v25;
          uint64_t v64 = sub_1000B4D08((uint64_t)v65).super.isa;
        }
        aBlock[0] = v64;
        sub_1000F45CC(aBlock);
        id v66 = [v64 recordID];

        uint64_t v67 = swift_allocObject();
        swift_weakInit();
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = v25;
        *(void *)(v68 + 24) = v67;
        uint64_t v69 = swift_allocObject();
        *(void *)(v69 + 16) = v60;
        *(void *)(v69 + 24) = v66;
        *(void *)(v69 + 32) = sub_1001ADEA8;
        *(void *)(v69 + 40) = v68;
        *(unsigned char *)(v69 + 48) = 1;
        unint64_t v70 = v25;
        swift_retain();
        swift_unknownObjectRetain();
        id v71 = v66;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v69);
        swift_unknownObjectRelease();

        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = v91;
        id v83 = v110;
        id v84 = [v83 description];
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v87 = v86;

        unint64_t v88 = v90;
        *(void *)(v82 + 56) = &type metadata for String;
        *(void *)(v82 + 64) = v88;
        *(void *)(v82 + 32) = v85;
        *(void *)(v82 + 40) = v87;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      v111(0);

      return sub_1001AEFFC(v32, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    id v72 = *(void **)(v21 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v73 = (void *)swift_allocObject();
    id v75 = v110;
    uint64_t v74 = v111;
    v73[2] = v110;
    v73[3] = v74;
    v73[4] = v112;
    aBlock[4] = sub_1001B1B4C;
    aBlock[5] = v73;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023B8D8;
    uint64_t v76 = _Block_copy(aBlock);
    id v77 = v75;
    id v78 = v72;
    swift_retain();
    uint64_t v79 = v93;
    static DispatchQoS.unspecified.getter();
    uint64_t v114 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v80 = v95;
    id v81 = v98;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v76);

    (*(void (**)(char *, uint64_t *))(v97 + 8))(v80, v81);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v79, v96);
    return swift_release();
  }
  return result;
}

uint64_t sub_100181058(void *a1, uint64_t (*a2)(void))
{
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001CFDB0;
  id v5 = a1;
  id v6 = [v5 description];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_1000AA5E0();
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return a2(0);
}

uint64_t sub_100181190(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v3 = String.init<A>(describing:)();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_1000AA5E0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1001CFDB0;
    id v9 = a2;
    id v10 = [v9 description];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_1000AA5E0();
    *(void *)(v8 + 32) = v11;
    *(void *)(v8 + 40) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100179FE8(v9, 0);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1001813E4(void *a1, int a2, void (*a3)(uint64_t), uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v199 = a4;
  uint64_t v200 = a3;
  LODWORD(v6) = a2;
  uint64_t v187 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v181 = *(void (**)(char *, uint64_t, uint64_t))(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v186 = (char *)&v159 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for DispatchQoS();
  *(void *)&long long v180 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  char v184 = (char *)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = type metadata accessor for URL();
  uint64_t v179 = *(void (***)(void *, uint64_t, uint64_t, void *))(v192 - 8);
  __chkstk_darwin(v192);
  char v191 = (char *)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v11 - 8);
  unint64_t v197 = (char *)&v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v194 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  uint64_t v190 = (uint64_t)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v205 = (uint64_t)&v159 - v15;
  uint64_t v183 = v16;
  __chkstk_darwin(v17);
  uint64_t v189 = (uint64_t)&v159 - v18;
  uint64_t v19 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v19 - 8);
  uint64_t v201 = (char *)&v159 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v159 - v22;
  uint64_t v195 = type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v193 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v25 = (char *)&v159 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v159 - v27;
  __chkstk_darwin(v29);
  uint64_t v196 = (uint64_t)&v159 - v30;
  *(void *)&double v32 = __chkstk_darwin(v31).n128_u64[0];
  uint64_t v34 = (uint64_t)&v159 - v33;
  uint64_t v35 = (uint64_t)[a1 modifiedByDevice:v32];
  unint64_t v182 = v25;
  if (v35)
  {
    unint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v203 = v37;
  }
  else
  {
    unint64_t v36 = 0;
    unint64_t v203 = 0;
  }
  id v38 = a1;
  uint64_t v39 = 0;
  sub_100104984(v38, v34);
  uint64_t v40 = &unk_100261000;
  id v178 = v38;
  sub_100161850((uint64_t)v23);
  sub_1001AEF94(v34, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  uint64_t v41 = v193 + 48;
  unint64_t v172 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v193 + 48);
  int v42 = v172(v23, 1, v195);
  uint64_t v173 = v41;
  if (v42 == 1)
  {
    sub_1001AF05C((uint64_t)v28, v196, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    sub_1000AA894((uint64_t)v23, (uint64_t *)&unk_100263BA0);
  }
  else
  {
    sub_1001AEFFC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    sub_1001AF05C((uint64_t)v23, v196, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  unint64_t v43 = (unint64_t)sub_100101DD0();
  uint64_t v44 = (int *)&type metadata for String;
  if (v43 >> 62) {
    goto LABEL_122;
  }
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  swift_bridgeObjectRelease();
  unint64_t v46 = (unint64_t)sub_100101DD0();
  if (v46 >> 62) {
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  int64_t v204 = v47;
  uint64_t v207 = v45;
  id v198 = (void *)v34;
  unint64_t v202 = v5;
  swift_bridgeObjectRelease();
  static os_log_type_t.default.getter();
  if (v40[297] != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1001D25F0;
  *(void *)(v49 + 56) = &type metadata for Bool;
  *(void *)(v49 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v49 + 32) = v6 & 1;
  *(void *)(v49 + 96) = v44;
  unint64_t v50 = sub_1000AA5E0();
  if (v203) {
    uint64_t v51 = v36;
  }
  else {
    uint64_t v51 = 15932;
  }
  LODWORD(v176) = v6;
  if (v203) {
    unint64_t v52 = v203;
  }
  else {
    unint64_t v52 = 0xE200000000000000;
  }
  *(void *)(v49 + 72) = v51;
  *(void *)(v49 + 80) = v52;
  *(void *)(v49 + 136) = &type metadata for Int;
  *(void *)(v49 + 144) = &protocol witness table for Int;
  unint64_t v177 = v50;
  uint64_t v53 = v207;
  *(void *)(v49 + 104) = v50;
  *(void *)(v49 + 112) = v53;
  *(void *)(v49 + 176) = &type metadata for Int;
  *(void *)(v49 + 184) = &protocol witness table for Int;
  *(void *)(v49 + 152) = v204;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_10015F0D4();
  __chkstk_darwin(v54);
  uint64_t v55 = (uint64_t)v198;
  *((void *)&v159 - 2) = v56;
  *((void *)&v159 - 1) = v55;
  OS_dispatch_queue.sync<A>(execute:)();
  if (v39)
  {

    swift_bridgeObjectRelease();
    swift_release();
    sub_1001AEFFC(v196, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      goto LABEL_119;
    }
    goto LABEL_21;
  }
  unint64_t v166 = v52;
  uint64_t v167 = v51;
  swift_release();
  static os_log_type_t.default.getter();
  uint64_t v188 = v48;
  uint64_t v40 = (void *)swift_allocObject();
  long long v165 = xmmword_1001D0A20;
  *((_OWORD *)v40 + 1) = xmmword_1001D0A20;
  v40[7] = sub_1000B66A0(0, (unint64_t *)&qword_100262960);
  v40[8] = sub_1001AD6DC((unint64_t *)&qword_100261A40, (unint64_t *)&qword_100262960);
  id v64 = v178;
  v40[4] = v178;
  uint64_t v65 = v55;
  id v66 = (uint64_t *)(v55 + *(int *)(v195 + 20));
  uint64_t v67 = *v66;
  unint64_t v5 = v66[1];
  id v68 = v64;
  sub_1000AA680(v67, v5);
  uint64_t v69 = Data.hexString.getter(v67, v5);
  uint64_t v71 = v70;
  sub_1000AA8F0(v67, v5);
  unint64_t v72 = v177;
  v40[12] = &type metadata for String;
  v40[13] = v72;
  v40[9] = v69;
  v40[10] = v71;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (v176)
  {
    swift_bridgeObjectRelease();

    v200(0);
    sub_1001AEFFC(v196, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    uint64_t v73 = v65;
    return sub_1001AEFFC(v73, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
  if (v204 >= (uint64_t)v207)
  {
    swift_bridgeObjectRelease();

    uint64_t v44 = (int *)v201;
    id v75 = v198;
    goto LABEL_176;
  }
  id v74 = [self sharedInstance];
  unsigned int v171 = [v74 isLegacyDevice:v35];

  unint64_t v6 = (unint64_t)sub_100101DD0();
  uint64_t v211 = v6;
  id v75 = v198;
  unint64_t v76 = (unint64_t)sub_100101DD0();
  unint64_t v77 = v76;
  uint64_t v44 = (int *)v201;
  uint64_t v39 = v202;
  uint64_t v176 = (unsigned int (**)(void *, uint64_t, void *))v76;
  if (v76 >> 62) {
    goto LABEL_132;
  }
  uint64_t v34 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v34)
  {
LABEL_133:
    swift_bridgeObjectRelease();
LABEL_134:
    if (v6 >> 62) {
      goto LABEL_174;
    }
    uint64_t v103 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v103)
    {
LABEL_136:
      id v178 = self;
      unint64_t v104 = 0;
      uint64_t v170 = v39 + 24;
      int64_t v204 = v6 & 0xC000000000000001;
      uint64_t v164 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v175 = v6;
      unint64_t v163 = v6 + 32;
      uint64_t v169 = (void (**)(char *, uint64_t, uint64_t))(v179 + 2);
      id v168 = (void (**)(uint64_t, uint64_t))(v179 + 1);
      uint64_t v179 = (void (**)(void *, uint64_t, uint64_t, void *))(v194 + 56);
      uint64_t v176 = (unsigned int (**)(void *, uint64_t, void *))(v194 + 48);
      uint64_t v162 = v210;
      uint64_t v161 = (void (**)(char *, uint64_t))((char *)v181 + 8);
      uint64_t v160 = (void (**)(char *, uint64_t))(v180 + 8);
      long long v159 = xmmword_1001D2D40;
      long long v180 = xmmword_1001CFDB0;
      uint64_t v181 = (void (*)(char *, uint64_t, uint64_t))v103;
      do
      {
        if (v204)
        {
          id v112 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v75 = v197;
          uint64_t v44 = (int *)v206;
          BOOL v80 = __OFADD__(v104, 1);
          uint64_t v113 = (void (*)(char *, uint64_t, uint64_t))(v104 + 1);
          if (v80) {
            goto LABEL_172;
          }
        }
        else
        {
          id v75 = v197;
          uint64_t v44 = (int *)v206;
          if (v104 >= *(void *)(v164 + 16)) {
            goto LABEL_173;
          }
          id v112 = *(id *)(v163 + 8 * v104);
          BOOL v80 = __OFADD__(v104, 1);
          uint64_t v113 = (void (*)(char *, uint64_t, uint64_t))(v104 + 1);
          if (v80)
          {
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            swift_bridgeObjectRetain();
            uint64_t v103 = _CocoaArrayWrapper.endIndex.getter();
            if (!v103) {
              break;
            }
            goto LABEL_136;
          }
        }
        unsigned int v114 = [v178 isFirstUnlocked:v159];
        uint64_t v207 = v113;
        if (v114)
        {
          unint64_t v6 = sub_10015F0D4();
          if (qword_100261890 != -1) {
            swift_once();
          }
          uint64_t v115 = v192;
          uint64_t v116 = sub_1000AA0CC(v192, (uint64_t)qword_10026AB90);
          uint64_t v117 = (uint64_t)v191;
          (*v169)(v191, v116, v115);
          uint64_t v118 = sub_10015DA98(v117, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
          swift_release();
          (*v168)(v117, v115);
          uint64_t v119 = v118[2];
          if (!v119)
          {
LABEL_159:
            (*v179)(v75, 1, 1, v44);
            goto LABEL_162;
          }
        }
        else
        {
          static os_log_type_t.error.getter();
          uint64_t v118 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
          uint64_t v119 = _swiftEmptyArrayStorage[2];
          if (!v119) {
            goto LABEL_159;
          }
        }
        uint64_t v120 = v194;
        unint64_t v6 = (unint64_t)v118
           + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
        swift_bridgeObjectRetain();
        uint64_t v121 = *(void *)(v120 + 72);
        uint64_t v122 = v205;
        while (1)
        {
          sub_1001AEF94(v6, v122, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          uint64_t v123 = (uint64_t *)(v122 + v44[6]);
          uint64_t v125 = *v123;
          uint64_t v124 = v123[1];
          id v126 = [v112 bluetoothAddress];
          uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v129 = v128;

          if (v125 == v127 && v124 == v129) {
            break;
          }
          char v131 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v131) {
            goto LABEL_161;
          }
          uint64_t v122 = v205;
          sub_1001AEFFC(v205, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
          v6 += v121;
          --v119;
          uint64_t v44 = (int *)v206;
          if (!v119)
          {
            swift_bridgeObjectRelease();
            id v75 = v197;
            goto LABEL_159;
          }
        }
        swift_bridgeObjectRelease();
LABEL_161:
        uint64_t v44 = (int *)v206;
        swift_bridgeObjectRelease();
        id v75 = v197;
        sub_1001AF05C(v205, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        (*v179)(v75, 0, 1, v44);
LABEL_162:
        swift_bridgeObjectRelease();
        if ((*v176)(v75, 1, v44) == 1)
        {
          sub_1000AA894((uint64_t)v75, &qword_1002623D0);
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (!Strong) {
            goto LABEL_168;
          }
          unint64_t v6 = Strong;
          sub_1000AA024(&qword_100263AE0);
          uint64_t v133 = swift_allocObject();
          *(_OWORD *)(v133 + 16) = v159;
          *(void *)(v133 + 32) = v112;
          aBlock[0] = v133;
          specialized Array._endMutation()();
          uint64_t v134 = aBlock[0];
          id v135 = *(void **)(v6 + OBJC_IVAR____TtC15audioaccessoryd13DeviceManager_clientQueue);
          uint64_t v136 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v137 = swift_allocObject();
          *(void *)(v137 + 16) = v136;
          *(void *)(v137 + 24) = v134;
          v210[2] = sub_1001ADB40;
          v210[3] = v137;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          v210[0] = sub_100106F90;
          v210[1] = &unk_10023B810;
          uint64_t v138 = _Block_copy(aBlock);
          id v174 = v112;
          id v139 = v135;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v140 = v184;
          static DispatchQoS.unspecified.getter();
          uint64_t v208 = _swiftEmptyArrayStorage;
          sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000AA024(&qword_100263550);
          sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
          uint64_t v141 = v186;
          uint64_t v142 = v187;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v138);

          (*v161)(v141, v142);
          (*v160)(v140, v185);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_release();
          swift_release();
          goto LABEL_169;
        }
        uint64_t v143 = v189;
        sub_1001AF05C((uint64_t)v75, v189, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        static os_log_type_t.default.getter();
        uint64_t v144 = swift_allocObject();
        *(_OWORD *)(v144 + 16) = v180;
        uint64_t v145 = v190;
        sub_1001AEF94(v143, v190, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v146 = sub_1000DA054();
        uint64_t v148 = v147;
        sub_1001AEFFC(v145, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v149 = v177;
        *(void *)(v144 + 56) = &type metadata for String;
        *(void *)(v144 + 64) = v149;
        *(void *)(v144 + 32) = v146;
        *(void *)(v144 + 40) = v148;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        if (!v171)
        {
          unint64_t v6 = type metadata accessor for Date();
          sub_100197224((unint64_t *)&unk_100263BD0, (void (*)(uint64_t))&type metadata accessor for Date);
          if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
          {
            static os_log_type_t.default.getter();
            uint64_t v150 = swift_allocObject();
            *(_OWORD *)(v150 + 16) = v180;
            unint64_t v6 = (unint64_t)v112;
            id v151 = [(id)v6 description];
            uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v154 = v153;

            unint64_t v155 = v177;
            *(void *)(v150 + 56) = &type metadata for String;
            *(void *)(v150 + 64) = v155;
            *(void *)(v150 + 32) = v152;
            *(void *)(v150 + 40) = v154;
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
            uint64_t v39 = v202;
            sub_10017812C(v143, 1);

            sub_1001AEFFC(v143, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
            goto LABEL_138;
          }
          sub_1001AEFFC(v143, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
LABEL_168:

LABEL_169:
          uint64_t v39 = v202;
          goto LABEL_138;
        }
        static os_log_type_t.default.getter();
        id v174 = (id)qword_10026ADE8;
        uint64_t v105 = swift_allocObject();
        *(_OWORD *)(v105 + 16) = v165;
        unint64_t v6 = (unint64_t)type metadata accessor for MagicPairingSettingsRecord;
        sub_1001AEF94(v143, v145, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v106 = sub_1000DA054();
        uint64_t v108 = v107;
        sub_1001AEFFC(v145, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v105 + 56) = &type metadata for String;
        *(void *)(v105 + 64) = v149;
        *(void *)(v105 + 32) = v106;
        *(void *)(v105 + 40) = v108;
        *(void *)(v105 + 96) = &type metadata for String;
        *(void *)(v105 + 104) = v149;
        unint64_t v109 = v166;
        *(void *)(v105 + 72) = v167;
        *(void *)(v105 + 80) = v109;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        sub_1001AEF94(v143, v145, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v110 = (*(unsigned __int8 *)(v194 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
        uint64_t v111 = swift_allocObject();
        sub_1001AF05C(v145, v111 + v110, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v39 = v202;
        sub_1001848D4(v143, 1, (uint64_t (*)(void))sub_1001ADDFC, v111);

        swift_release();
        sub_1001AEFFC(v143, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
LABEL_138:
        unint64_t v104 = (unint64_t)v207;
        id v75 = v198;
        uint64_t v44 = (int *)v201;
      }
      while (v207 != v181);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_176:
    sub_100161850((uint64_t)v44);
    if (v172((char *)v44, 1, v195) == 1)
    {
      sub_1000AA894((uint64_t)v44, (uint64_t *)&unk_100263BA0);
    }
    else
    {
      uint64_t v156 = (uint64_t)v182;
      sub_1001AF05C((uint64_t)v44, (uint64_t)v182, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000AA024((uint64_t *)&unk_100263BC0);
        unint64_t v157 = (*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80);
        uint64_t v158 = swift_allocObject();
        *(_OWORD *)(v158 + 16) = xmmword_1001CFDB0;
        sub_1001AEF94(v156, v158 + v157, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
        sub_10013B5C4(v158);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1001AEFFC(v156, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    }
    v200(0);
    sub_1001AEFFC(v196, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
    uint64_t v73 = (uint64_t)v75;
    return sub_1001AEFFC(v73, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  }
LABEL_27:
  unint64_t v78 = 0;
  unint64_t v175 = v77 & 0xC000000000000001;
  uint64_t v170 = v77 & 0xFFFFFFFFFFFFFF8;
  uint64_t v169 = (void (**)(char *, uint64_t, uint64_t))(v77 + 32);
  id v174 = (id)v34;
  while (1)
  {
    if (v175)
    {
      uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v78 >= *(void *)(v170 + 16)) {
        goto LABEL_131;
      }
      uint64_t v79 = v169[v78];
    }
    uint64_t v207 = v79;
    BOOL v80 = __OFADD__(v78, 1);
    unint64_t v36 = v78 + 1;
    if (v80) {
      goto LABEL_120;
    }
    id v178 = (id)v36;
    uint64_t v81 = v211;
    if ((unint64_t)v211 >> 62) {
      break;
    }
    uint64_t v82 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v82) {
      goto LABEL_35;
    }
LABEL_94:
    swift_bridgeObjectRelease();
LABEL_95:
    if ((unint64_t)v81 >> 62)
    {
      if (v81 < 0) {
        unint64_t v36 = v81;
      }
      else {
        unint64_t v36 = v81 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((unint64_t)v81 >> 62) {
        goto LABEL_106;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_97:
      if ((unint64_t)v81 >> 62)
      {
LABEL_106:
        if (v81 < 0) {
          unint64_t v36 = v81;
        }
        else {
          unint64_t v36 = v81 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
    }
    unint64_t v6 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_99:
    uint64_t v44 = (int *)v201;
    uint64_t v39 = v202;
    id v75 = v198;
    uint64_t v34 = (uint64_t)v174;
    if ((uint64_t)v6 < v35) {
      goto LABEL_121;
    }
    sub_1001A6354(v35, v6);

    unint64_t v78 = (unint64_t)v178;
    if (v178 == (id)v34)
    {
      swift_bridgeObjectRelease();
      unint64_t v6 = v211;
      goto LABEL_134;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
  if (!v82) {
    goto LABEL_94;
  }
LABEL_35:
  uint64_t v35 = 0;
  int64_t v204 = v81 & 0xC000000000000001;
  uint64_t v34 = 5;
  while (1)
  {
    if (v204) {
      id v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v83 = *(id *)(v81 + 8 * v35 + 32);
    }
    id v75 = v83;
    id v84 = [v83 bluetoothAddress];
    uint64_t v40 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v85;

    unint64_t v36 = (unint64_t)[v207 bluetoothAddress];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v86;

    if (v40 == (void *)v39 && v44 == (int *)v5)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_49:
      swift_bridgeObjectRelease();
      unint64_t v6 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        goto LABEL_130;
      }
      uint64_t v81 = v211;
      if ((unint64_t)v211 >> 62)
      {
        if (v211 < 0) {
          unint64_t v36 = v211;
        }
        else {
          unint64_t v36 = v211 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v39 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      while (1)
      {
        if (v6 == v39) {
          goto LABEL_97;
        }
        unint64_t v6 = v34 - 4;
        if ((v81 & 0xC000000000000001) != 0)
        {
          id v89 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_116;
          }
          if (v6 >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_117;
          }
          id v89 = *(id *)(v81 + 8 * v34);
        }
        unint64_t v90 = v89;
        id v91 = [v89 bluetoothAddress];
        uint64_t v44 = (int *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v75 = v92;

        unint64_t v36 = (unint64_t)[v207 bluetoothAddress];
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v5 = v93;

        if (v44 == (int *)v39 && v75 == (void *)v5)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          unint64_t v36 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v36 & 1) == 0)
          {
            if (v6 != v35)
            {
              uint64_t v95 = v211;
              if ((v211 & 0xC000000000000001) != 0)
              {
                id v75 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v97 = (int *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (v35 < 0)
                {
                  __break(1u);
LABEL_125:
                  __break(1u);
LABEL_126:
                  __break(1u);
LABEL_127:
                  __break(1u);
LABEL_128:
                  __break(1u);
LABEL_129:
                  __break(1u);
LABEL_130:
                  __break(1u);
LABEL_131:
                  __break(1u);
LABEL_132:
                  uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
                  unint64_t v77 = (unint64_t)v176;
                  uint64_t v34 = v102;
                  if (!v102) {
                    goto LABEL_133;
                  }
                  goto LABEL_27;
                }
                unint64_t v36 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v35 >= v36) {
                  goto LABEL_125;
                }
                id v96 = *(id *)(v211 + 8 * v35 + 32);
                if ((v6 & 0x8000000000000000) != 0) {
                  goto LABEL_126;
                }
                if (v6 >= v36) {
                  goto LABEL_127;
                }
                id v75 = v96;
                uint64_t v97 = (int *)*(id *)(v95 + 8 * v34);
              }
              uint64_t v44 = v97;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || v95 < 0
                || (v95 & 0x4000000000000000) != 0)
              {
                uint64_t v95 = sub_1001B330C(v95);
                uint64_t v211 = v95;
              }
              long long v98 = *(void **)((v95 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20);
              *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 8 * v35 + 0x20) = v44;

              specialized Array._endMutation()();
              uint64_t v99 = v211;
              if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
                || v99 < 0
                || (v99 & 0x4000000000000000) != 0)
              {
                uint64_t v99 = sub_1001B330C(v99);
                uint64_t v211 = v99;
              }
              if ((v6 & 0x8000000000000000) != 0) {
                goto LABEL_128;
              }
              uint64_t v100 = v99 & 0xFFFFFFFFFFFFFF8;
              if (v6 >= *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_129;
              }
              uint64_t v101 = *(void **)(v100 + 8 * v34);
              *(void *)(v100 + 8 * v34) = v75;

              specialized Array._endMutation()();
            }
            BOOL v80 = __OFADD__(v35++, 1);
            if (v80)
            {
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              uint64_t v45 = (void (*)(char *, uint64_t, uint64_t))_CocoaArrayWrapper.endIndex.getter();
              goto LABEL_9;
            }
          }
        }
        BOOL v80 = __OFADD__(v6, 1);
        unint64_t v6 = v34 - 3;
        if (v80) {
          goto LABEL_118;
        }
        uint64_t v81 = v211;
        if ((unint64_t)v211 >> 62)
        {
          if (v211 < 0) {
            unint64_t v36 = v211;
          }
          else {
            unint64_t v36 = v211 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          ++v34;
        }
        else
        {
          uint64_t v39 = *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10);
          ++v34;
        }
      }
    }
    unint64_t v36 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t v44 = (int *)v81;
      goto LABEL_49;
    }
    uint64_t v88 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    ++v35;
    ++v34;
    if (v88 == v82)
    {
      swift_bridgeObjectRelease();
      uint64_t v81 = v211;
      goto LABEL_95;
    }
  }
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  swift_once();
LABEL_21:
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_1001CFDB0;
  aBlock[0] = v39;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v58 = String.init<A>(describing:)();
  uint64_t v60 = v59;
  *(void *)(v57 + 56) = &type metadata for String;
  *(void *)(v57 + 64) = sub_1000AA5E0();
  *(void *)(v57 + 32) = v58;
  *(void *)(v57 + 40) = v60;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1000EB9B4();
  uint64_t v61 = swift_allocError();
  *uint64_t v62 = v39 | 0x4000000000000000;
  swift_errorRetain();
  v200(v61);
  swift_errorRelease();
  return swift_errorRelease();
}

void sub_100183278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001D0A20;
    sub_1001AEF94(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v8 = sub_1000DA054();
    uint64_t v10 = v9;
    sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v11 = sub_1000AA5E0();
    *(void *)(v7 + 64) = v11;
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    v14[1] = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v12 = String.init<A>(describing:)();
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v11;
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100183434(int a1, void (*a2)(void), void *a3)
{
  id v87 = a3;
  int v79 = a1;
  uint64_t v5 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v83 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v81 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000AA024((uint64_t *)&unk_100263BA0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LegacyMagicPairingSettingsRecords();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v84 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v72 - v20;
  sub_100161850((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000AA894((uint64_t)v15, (uint64_t *)&unk_100263BA0);
    if (swift_unknownObjectWeakLoadStrong())
    {
      if ([self isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_100261890 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_1000AA0CC(v9, (uint64_t)qword_10026AB90);
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v22, v9);
        uint64_t v23 = sub_10015DA98((uint64_t)v12, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
        swift_release();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
      else
      {
        static os_log_type_t.error.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        uint64_t v23 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
      sub_1001518C8((uint64_t)v23, (uint64_t)&unk_10023B7A8, (uint64_t)sub_1001ADA98, (uint64_t)&unk_10023B7C0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    return ((uint64_t (*)(void))a2)(0);
  }
  unint64_t v77 = (void (*)(uint64_t, uint64_t))a2;
  unint64_t v78 = v12;
  uint64_t v85 = v3;
  uint64_t v80 = v10;
  sub_1001AF05C((uint64_t)v15, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v75 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v24 = swift_allocObject();
  long long v74 = xmmword_1001CFDB0;
  *(_OWORD *)(v24 + 16) = xmmword_1001CFDB0;
  uint64_t v25 = v84;
  sub_1001AEF94((uint64_t)v21, v84, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  uint64_t v26 = sub_100103500();
  uint64_t v28 = v27;
  sub_1001AEFFC(v25, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  *(void *)(v24 + 56) = &type metadata for String;
  unint64_t v73 = sub_1000AA5E0();
  *(void *)(v24 + 64) = v73;
  *(void *)(v24 + 32) = v26;
  *(void *)(v24 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v29 = sub_10015F0D4();
  uint64_t v82 = v21;
  uint64_t v30 = UUID.uuidString.getter();
  uint64_t v32 = v31;
  if (qword_1002618F0 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1000AA0CC(v9, (uint64_t)qword_10026AD38);
  uint64_t v34 = v80;
  uint64_t v35 = v80 + 16;
  uint64_t v36 = (uint64_t)v78;
  unint64_t v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 16);
  uint64_t v37 = v76(v78, v33, v9);
  __chkstk_darwin(v37);
  *(&v72 - 4) = v29;
  *(&v72 - 3) = v30;
  *(&v72 - 2) = v32;
  *(&v72 - 1) = v36;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v39 = v34 + 8;
  id v38 = v40;
  v40(v36, v9);
  ((void (*)(void))v77)(0);
  id v87 = self;
  if ([v87 isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261890 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1000AA0CC(v9, (uint64_t)qword_10026AB90);
    v76((char *)v36, v41, v9);
    int v42 = sub_10015DA98(v36, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
    swift_release();
    v38(v36, v9);
  }
  else
  {
    static os_log_type_t.error.getter();
    int v42 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  uint64_t v43 = v83;
  if (v42[2])
  {
    sub_1001AEF94((uint64_t)v42 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80)), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
  }
  uint64_t v45 = (void *)v86;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v7, v44, 1, v86);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v43 + 48))(v7, 1, v45) != 1)
  {
    uint64_t v83 = v35;
    uint64_t v46 = v81;
    sub_1001AF05C((uint64_t)v7, v81, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v47 = (unint64_t)sub_100101DD0();
    unint64_t v48 = v47;
    if (v47 >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_23:
        if ((v48 & 0xC000000000000001) != 0)
        {
          id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_59;
          }
          id v49 = *(id *)(v48 + 32);
        }
        uint64_t v45 = v49;
        swift_bridgeObjectRelease();
        if (![v87 isFirstUnlocked])
        {
          static os_log_type_t.error.getter();
          uint64_t v51 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
          goto LABEL_35;
        }
        sub_10015F0D4();
        if (qword_100261890 == -1)
        {
LABEL_28:
          uint64_t v50 = sub_1000AA0CC(v9, (uint64_t)qword_10026AB90);
          v76((char *)v36, v50, v9);
          uint64_t v51 = sub_10015DA98(v36, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
          swift_release();
          v38(v36, v9);
LABEL_35:
          uint64_t v53 = v51[2];
          swift_bridgeObjectRelease();
          if (v53 != 1
            || ((unint64_t v54 = (unint64_t)sub_100101DD0(), v54 >> 62)
              ? (uint64_t v55 = _CocoaArrayWrapper.endIndex.getter())
              : (uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10)),
                swift_bridgeObjectRelease(),
                v55 != 1))
          {
            sub_1001AEFFC(v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);

            goto LABEL_49;
          }
          unint64_t v77 = v38;
          uint64_t v80 = v39;
          uint64_t v56 = (uint64_t *)(v46 + *(int *)(v86 + 24));
          uint64_t v58 = *v56;
          uint64_t v57 = v56[1];
          swift_bridgeObjectRetain();
          id v59 = [v45 bluetoothAddress];
          uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v61;

          if (v58 == v60 && v57 == v62)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v63 & 1) == 0)
            {
              sub_1001AEFFC(v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);

              goto LABEL_46;
            }
          }
          static os_log_type_t.default.getter();
          uint64_t v86 = qword_10026ADE8;
          uint64_t v64 = swift_allocObject();
          *(_OWORD *)(v64 + 16) = v74;
          uint64_t v65 = v84;
          sub_1001AEF94((uint64_t)v82, v84, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
          uint64_t v66 = sub_100103500();
          uint64_t v68 = v67;
          sub_1001AEFFC(v65, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
          unint64_t v69 = v73;
          *(void *)(v64 + 56) = &type metadata for String;
          *(void *)(v64 + 64) = v69;
          *(void *)(v64 + 32) = v66;
          *(void *)(v64 + 40) = v68;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          sub_10017812C(v46, (v79 & 1) == 0);

          sub_1001AEFFC(v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
LABEL_46:
          id v38 = v77;
          goto LABEL_49;
        }
LABEL_59:
        swift_once();
        goto LABEL_28;
      }
    }
    else if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    sub_1001AEFFC(v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    goto LABEL_49;
  }
  sub_1000AA894((uint64_t)v7, &qword_1002623D0);
LABEL_49:
  if (swift_unknownObjectWeakLoadStrong())
  {
    if ([v87 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261890 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1000AA0CC(v9, (uint64_t)qword_10026AB90);
      v76((char *)v36, v70, v9);
      uint64_t v71 = sub_10015DA98(v36, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
      swift_release();
      v38(v36, v9);
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v71 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
    sub_1001518C8((uint64_t)v71, (uint64_t)&unk_10023B7A8, (uint64_t)sub_1001ADA98, (uint64_t)&unk_10023B7C0);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1001AEFFC((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
}

uint64_t sub_100184338(void *a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(a3 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  char v19 = a2 & 1;
  *(unsigned char *)(v18 + 24) = a2 & 1;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  aBlock[4] = v25;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100106F90;
  void aBlock[3] = v26;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v17;
  sub_1001227E8(a1, v19);
  swift_retain();
  id v22 = a4;
  static DispatchQoS.unspecified.getter();
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000AA024(&qword_100263550);
  sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v27);
  return swift_release();
}

void sub_100184628(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1001CFDB0;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v16 = v15;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_1000AA5E0();
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v16;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100167DA8(a4, (uint64_t)_swiftEmptyArrayStorage, 0);
    sub_100129200(a1, 1);
  }
  else
  {
    id v5 = a1;
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1001CFDB0;
    id v7 = v5;
    id v8 = [v7 description];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    sub_100129200(a1, 0);
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_1000AA5E0();
    *(void *)(v6 + 32) = v9;
    *(void *)(v6 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_100167DA8((uint64_t)v7, (uint64_t)_swiftEmptyArrayStorage, 0);
    sub_100129200(a1, 0);
  }
}

uint64_t sub_1001848D4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v133 = a4;
  uint64_t v134 = a3;
  int v116 = a2;
  uint64_t v124 = type metadata accessor for DispatchPredicate();
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v122 = (uint64_t *)((char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v121 = type metadata accessor for Date();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v117 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for UUID();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  unsigned int v114 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v115);
  id v126 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = (uint64_t *)type metadata accessor for URL();
  uint64_t v139 = *(v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v137 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v140 = (char *)&v109 - v13;
  __chkstk_darwin(v14);
  uint64_t v144 = (char *)&v109 - v15;
  uint64_t v138 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v138);
  uint64_t v141 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v143 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v110 = (uint64_t)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v113 = (uint64_t)&v109 - v20;
  __chkstk_darwin(v21);
  uint64_t v112 = (uint64_t)&v109 - v22;
  __chkstk_darwin(v23);
  uint64_t v125 = (uint64_t)&v109 - v24;
  uint64_t v111 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v109 - v27;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v128 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v29 = swift_allocObject();
  long long v127 = xmmword_1001CFDB0;
  *(_OWORD *)(v29 + 16) = xmmword_1001CFDB0;
  sub_1001AEF94(a1, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v30 = a1;
  uint64_t v31 = sub_1000DA054();
  uint64_t v33 = v32;
  char v131 = v28;
  sub_1001AEFFC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  *(void *)(v29 + 56) = &type metadata for String;
  unint64_t v129 = sub_1000AA5E0();
  *(void *)(v29 + 64) = v129;
  *(void *)(v29 + 32) = v31;
  *(void *)(v29 + 40) = v33;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v132 = v5;
  uint64_t v34 = sub_10015F0D4();
  uint64_t v35 = *(int *)(v17 + 24);
  uint64_t v130 = v30;
  uint64_t v135 = *(void *)(v30 + v35);
  uint64_t v136 = v17;
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v36 = v142;
  sub_1000AA0CC((uint64_t)v142, (uint64_t)qword_10026AB90);
  uint64_t v37 = v139;
  (*(void (**)(void))(v139 + 16))();
  URL.path.getter();
  uint64_t v39 = v137;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v140;
  URL.appendingPathComponent(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t *))(v37 + 8);
  v41(v39, v36);
  __chkstk_darwin(v42);
  *(&v109 - 2) = (uint64_t)v40;
  *(&v109 - 1) = v34;
  uint64_t v43 = (uint64_t)v141;
  OS_dispatch_queue.sync<A>(execute:)();
  v41(v40, v36);
  swift_release();
  v41(v144, v36);
  uint64_t v44 = v136;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v43, 1, v136) == 1)
  {
    sub_1000AA894(v43, &qword_1002623D0);
    static os_log_type_t.error.getter();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v127;
    uint64_t v46 = (uint64_t)v131;
    sub_1001AEF94(v130, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v47 = sub_1000DA054();
    uint64_t v49 = v48;
    sub_1001AEFFC(v46, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v50 = v129;
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v50;
    *(void *)(v45 + 32) = v47;
    *(void *)(v45 + 40) = v49;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return v134(0);
  }
  else
  {
    uint64_t v144 = 0;
    uint64_t v52 = v125;
    sub_1001AF05C(v43, v125, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v54 = (uint64_t *)(v52 + *(int *)(v44 + 20));
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    sub_1000AA680(*v54, v56);
    Class isa = sub_100130420(v55, v56);
    sub_1000AA8F0(v55, v56);
    uint64_t v58 = v112;
    sub_1001AEF94(v52, v112, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (!isa) {
      Class isa = sub_1000B4934(v58).super.isa;
    }
    sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v59 = (uint64_t)v126;
    id v145 = isa;
    sub_1000DE038(&v145);
    id v60 = [isa recordID];

    uint64_t v142 = v54;
    uint64_t v62 = *v54;
    unint64_t v63 = v54[1];
    sub_1000AA680(v62, v63);
    uint64_t v64 = sub_100130420(v62, v63);
    sub_1000AA8F0(v62, v63);
    uint64_t v65 = v113;
    sub_1001AEF94(v52, v113, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v66 = v44;
    if (!v64) {
      uint64_t v64 = sub_1000B4934(v65).super.isa;
    }
    sub_1001AEFFC(v65, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v145 = v64;
    sub_1000DE038(&v145);
    uint64_t v67 = CKRecord.recordType.getter();
    uint64_t v69 = v68;

    uint64_t v70 = v132;
    sub_100174420(v60, v67, v69, v116 & 1);

    swift_bridgeObjectRelease();
    uint64_t v71 = v118;
    uint64_t v72 = v114;
    uint64_t v73 = v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v114, v52, v119);
    long long v74 = (uint64_t *)(v52 + *(int *)(v66 + 24));
    uint64_t v76 = *v74;
    uint64_t v75 = v74[1];
    swift_bridgeObjectRetain();
    unint64_t v77 = v117;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v79 = v78;
    (*(void (**)(char *, uint64_t))(v120 + 8))(v77, v121);
    uint64_t v80 = v59;
    *(unsigned char *)uint64_t v59 = 1;
    strcpy((char *)(v59 + 8), "MagicSettings");
    *(_WORD *)(v59 + 22) = -4864;
    uint64_t v81 = (int *)v115;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v59 + *(int *)(v115 + 24), v72, v73);
    uint64_t v82 = (void *)(v59 + v81[7]);
    *uint64_t v82 = v76;
    v82[1] = v75;
    *(void *)(v59 + v81[8]) = v79;
    *(_OWORD *)(v59 + v81[9]) = xmmword_1001D3390;
    sub_100185B98(v70, v59);
    uint64_t v84 = *(void **)(sub_100160454() + 72);
    uint64_t v85 = v122;
    *uint64_t v122 = v84;
    uint64_t v86 = v123;
    uint64_t v87 = v124;
    (*(void (**)(void *, void, uint64_t))(v123 + 104))(v85, enum case for DispatchPredicate.notOnQueue(_:), v124);
    id v88 = v84;
    LOBYTE(v76) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v86 + 8))(v85, v87);
    if (v76)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v145 == 1)
      {
        uint64_t v89 = sub_100160454();
        uint64_t v91 = *v142;
        unint64_t v92 = v142[1];
        sub_1000AA680(*v142, v92);
        unint64_t v93 = sub_100130420(v91, v92);
        sub_1000AA8F0(v91, v92);
        uint64_t v94 = v110;
        sub_1001AEF94(v52, v110, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        if (!v93) {
          unint64_t v93 = sub_1000B4934(v94).super.isa;
        }
        sub_1001AEFFC(v94, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        id v145 = v93;
        sub_1000DE038(&v145);
        id v95 = [v93 recordID];

        uint64_t v96 = swift_allocObject();
        swift_weakInit();
        uint64_t v97 = (uint64_t)v131;
        sub_1001AEF94(v52, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v98 = (*(unsigned __int8 *)(v143 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
        unint64_t v99 = (v111 + v98 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v100 = swift_allocObject();
        sub_1001AF05C(v97, v100 + v98, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v100 + v99) = v96;
        uint64_t v101 = swift_allocObject();
        *(void *)(v101 + 16) = v89;
        *(void *)(v101 + 24) = v95;
        *(void *)(v101 + 32) = sub_1001ADA3C;
        *(void *)(v101 + 40) = v100;
        *(unsigned char *)(v101 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v102 = v95;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v101);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = v127;
        uint64_t v104 = (uint64_t)v131;
        sub_1001AEF94(v130, (uint64_t)v131, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v105 = sub_1000DA054();
        uint64_t v107 = v106;
        sub_1001AEFFC(v104, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v108 = v129;
        *(void *)(v103 + 56) = &type metadata for String;
        *(void *)(v103 + 64) = v108;
        *(void *)(v103 + 32) = v105;
        *(void *)(v103 + 40) = v107;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      v134(0);
      sub_1001AEFFC(v80, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      return sub_1001AEFFC(v52, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001857EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MagicPairingSettingsRecord();
  __chkstk_darwin(v4);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1001CFDB0;
    uint64_t v23 = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_1000AA5E0();
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
    sub_1001AEF94(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v13 = sub_1000DA054();
    uint64_t v15 = v14;
    sub_1001AEFFC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    *(void *)(v12 + 56) = &type metadata for String;
    *(void *)(v12 + 64) = sub_1000AA5E0();
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v15;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_10017812C(a2, 0);
      swift_release();
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100160454();
      swift_release();
      uint64_t v16 = sub_1000B6C74();
      id v17 = [v16 recordID];

      id v18 = [v17 zoneID];
      uint64_t v19 = (uint64_t *)(a2 + *(int *)(v4 + 24));
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      swift_bridgeObjectRetain();
      sub_10011F48C((uint64_t)&off_100236020, (uint64_t)v18, 0xD000000000000010, 0x80000001001F6C20, v20, v21);

      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_arrayDestroy();
    }
  }
  return result;
}

uint64_t sub_100185B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v4);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10015F0D4();
  uint64_t v17 = a2;
  OS_dispatch_queue.sync<A>(execute:)();
  if (!v2) {
    return swift_release();
  }
  swift_release();
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001D0A20;
  sub_1001AEF94(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000AA5E0();
  *(void *)(v7 + 64) = v11;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  uint64_t v18 = v2;
  swift_errorRetain();
  sub_1000AA024(&qword_100261D60);
  uint64_t v12 = String.init<A>(describing:)();
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v11;
  *(void *)(v7 + 72) = v12;
  *(void *)(v7 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  return swift_errorRelease();
}

uint64_t sub_100185DB0(void *a1, void (*a2)(void), uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v140 = a3;
  uint64_t v141 = a2;
  uint64_t v138 = type metadata accessor for Date();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SoundProfileRecord();
  uint64_t v149 = *(void *)(v7 - 8);
  uint64_t v150 = v7;
  __chkstk_darwin(v7);
  v125[0] = (uint64_t)v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v135 = (uint64_t *)((char *)v125 - v10);
  __chkstk_darwin(v11);
  uint64_t v142 = (uint64_t *)((char *)v125 - v12);
  uint64_t v13 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v133 = (uint64_t *)((char *)v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v129 = (uint64_t)v125 - v16;
  uint64_t v17 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v17 - 8);
  long long v127 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for UUID();
  uint64_t v154 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v147 = (char *)v125 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v148 = (char *)v125 - v21;
  uint64_t v22 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v22 - 8);
  id v126 = (char *)v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v153 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v130 = (char *)v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v128 = (char *)v125 - v27;
  __chkstk_darwin(v28);
  char v131 = (char *)v125 - v29;
  __chkstk_darwin(v30);
  uint64_t v146 = (char *)v125 - v31;
  __chkstk_darwin(v32);
  id v151 = (char *)v125 - v33;
  __chkstk_darwin(v34);
  uint64_t v161 = (char *)v125 - v35;
  __chkstk_darwin(v36);
  uint64_t v160 = (char *)v125 - v37;
  uint64_t v162 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for BTDeferredRecord();
  unint64_t v166 = (void (*)(char *, uint64_t))*((void *)v162 - 1);
  __chkstk_darwin(v162);
  uint64_t v143 = (char *)v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v167 = (uint64_t)v125 - v40;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)v125 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)v125 - v45;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
LABEL_39:
  }
    swift_once();
  uint64_t v145 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v47 = swift_allocObject();
  long long v144 = xmmword_1001CFDB0;
  *(_OWORD *)(v47 + 16) = xmmword_1001CFDB0;
  uint64_t v48 = sub_100197224((unint64_t *)&unk_100263280, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v139 = a1;
  uint64_t v132 = v48;
  uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v51 = v50;
  *(void *)(v47 + 56) = &type metadata for String;
  unint64_t v134 = sub_1000AA5E0();
  *(void *)(v47 + 64) = v134;
  *(void *)(v47 + 32) = v49;
  *(void *)(v47 + 40) = v51;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  unint64_t v163 = v4;
  uint64_t v52 = sub_1001607FC();
  a1 = _swiftEmptyArrayStorage;
  id v168 = _swiftEmptyArrayStorage;
  long long v165 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v52 + 16);
  if (v165)
  {
    unint64_t v53 = 0;
    long long v159 = "tsNew";
    uint64_t v164 = (uint64_t *)0x80000001001F6CA0;
    while (1)
    {
      if (v53 >= *(void *)(v52 + 16))
      {
        __break(1u);
        goto LABEL_39;
      }
      unint64_t v54 = (*((unsigned __int8 *)v166 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v166 + 80);
      uint64_t v55 = *((void *)v166 + 9);
      sub_1001AEF94(v52 + v54 + v55 * v53, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if (*((void *)v46 + 1) == 0xD000000000000012 && *((uint64_t **)v46 + 2) == v164)
      {
        sub_1001AEF94((uint64_t)v46, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      }
      else
      {
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1001AEF94((uint64_t)v46, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        if ((v56 & 1) == 0)
        {
          sub_1001AEFFC((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
          goto LABEL_5;
        }
      }
      if (*v43 == 1)
      {
        swift_bridgeObjectRelease();
        sub_1001AEFFC((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
LABEL_15:
        sub_1001AF05C((uint64_t)v46, v167, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001909B4(0, a1[2] + 1, 1);
        }
        a1 = v168;
        unint64_t v4 = v168[2];
        unint64_t v58 = v168[3];
        if (v4 >= v58 >> 1)
        {
          sub_1001909B4(v58 > 1, v4 + 1, 1);
          a1 = v168;
        }
        a1[2] = v4 + 1;
        sub_1001AF05C(v167, (uint64_t)a1 + v54 + v4 * v55, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
        goto LABEL_6;
      }
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_1001AEFFC((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      if (v57) {
        goto LABEL_15;
      }
LABEL_5:
      sub_1001AEFFC((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
LABEL_6:
      if (v165 == (uint64_t (*)(uint64_t *, uint64_t, uint64_t))++v53)
      {
        a1 = v168;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v59 = (void (*)(char *, uint64_t))a1[2];
  uint64_t v167 = v24;
  uint64_t v60 = (uint64_t)v143;
  if (!v59)
  {
LABEL_25:
    swift_release();
    uint64_t v75 = v129;
    sub_100161B8C(v129);
    uint64_t v76 = v150;
    unint64_t v77 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v149 + 48);
    v149 += 48;
    long long v165 = v77;
    int v78 = v77((uint64_t *)v75, 1, v150);
    uint64_t v79 = v154;
    if (v78 == 1)
    {
      sub_1000AA894(v75, &qword_1002623B8);
      uint64_t v80 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v127, 1, 1, v152);
      uint64_t v81 = (uint64_t)v128;
    }
    else
    {
      uint64_t v82 = v75 + *(int *)(v76 + 20);
      uint64_t v80 = (uint64_t)v127;
      uint64_t v83 = v152;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v127, v82, v152);
      sub_1001AEFFC(v75, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v83);
      int v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v80, 1, v83);
      uint64_t v81 = (uint64_t)v128;
      if (v84 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v148, v80, v152);
        goto LABEL_30;
      }
    }
    UUID.init()();
    sub_1000AA894(v80, &qword_100261EA0);
LABEL_30:
    type metadata accessor for DeviceStore();
    sub_10013ACBC(v81);
    if (qword_100261870 != -1) {
      swift_once();
    }
    uint64_t v85 = sub_1000AA0CC(v24, (uint64_t)qword_10026AB50);
    uint64_t v86 = v153;
    uint64_t v87 = v130;
    uint64_t v164 = *(uint64_t **)(v153 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v164)(v130, v85, v24);
    URL.path.getter();
    id v88 = *(void (**)(char *, uint64_t))(v86 + 8);
    v88(v87, v24);
    uint64_t v89 = v131;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    v88((char *)v81, v24);
    unint64_t v90 = v148;
    UUID.uuidString.getter();
    uint64_t v91 = v146;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    v88(v89, v24);
    URL.appendingPathExtension(_:)();
    uint64_t v153 = v86 + 8;
    unint64_t v166 = v88;
    v88(v91, v24);
    unint64_t v92 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
    v92(v147, v90, v152);
    unint64_t v93 = v133;
    sub_100161B8C((uint64_t)v133);
    int v94 = v165(v93, 1, v150);
    uint64_t v162 = (void (*)(uint64_t, char *, uint64_t))v92;
    if (v94 == 1)
    {
      sub_1000AA894((uint64_t)v93, &qword_1002623B8);
      uint64_t v95 = 0;
      unint64_t v96 = 0xC000000000000000;
    }
    else
    {
      uint64_t v95 = *v93;
      unint64_t v96 = v93[1];
      sub_1000AA680(*v93, v96);
      sub_1001AEFFC((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    }
    uint64_t v97 = v146;
    uint64_t v98 = v167;
    unint64_t v99 = v164;
    ((void (*)(char *, char *, uint64_t))v164)(v146, v151, v167);
    uint64_t v100 = (uint64_t)v135;
    uint64_t *v135 = v95;
    *(void *)(v100 + 8) = v96;
    uint64_t v101 = v150;
    id v102 = v147;
    uint64_t v103 = v152;
    v162(v100 + *(int *)(v150 + 20), v147, v152);
    uint64_t v104 = v98;
    ((void (*)(uint64_t, char *, uint64_t))v99)(v100 + *(int *)(v101 + 24), v97, v98);
    uint64_t v105 = v136;
    static Date.now.getter();
    v166(v97, v104);
    long long v165 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v154 + 8);
    v154 += 8;
    ((void (*)(char *, uint64_t))v165)(v102, v103);
    (*(void (**)(uint64_t, char *, uint64_t))(v137 + 32))(v100 + *(int *)(v101 + 28), v105, v138);
    uint64_t v106 = v142;
    sub_1001AF05C(v100, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    static os_log_type_t.default.getter();
    uint64_t v107 = swift_allocObject();
    *(_OWORD *)(v107 + 16) = v144;
    uint64_t v108 = (uint64_t)v151;
    uint64_t v109 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v110 = v134;
    *(void *)(v107 + 56) = &type metadata for String;
    *(void *)(v107 + 64) = v110;
    *(void *)(v107 + 32) = v109;
    *(void *)(v107 + 40) = v111;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v112 = sub_10015F0D4();
    __chkstk_darwin(v112);
    uint64_t v113 = (uint64_t)v139;
    v125[-2] = v108;
    v125[-1] = v113;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    uint64_t v114 = sub_10015F0D4();
    __chkstk_darwin(v114);
    v125[-2] = v115;
    v125[-1] = (uint64_t)v106;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    notify_post("BTCloudServicesSoundProfileChangedNotification");
    v141(0);
    uint64_t v117 = *v106;
    unint64_t v118 = v106[1];
    sub_1000AA680(*v106, v118);
    Class isa = sub_100130420(v117, v118);
    sub_1000AA8F0(v117, v118);
    uint64_t v120 = v125[0];
    sub_1001AEF94((uint64_t)v106, v125[0], (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (!isa) {
      Class isa = sub_1000B4970().super.isa;
    }
    sub_1001AEFFC(v120, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    uint64_t v121 = (void (*)(char *, uint64_t))v165;
    id v168 = isa;
    sub_1000B98F0((id *)&v168);
    sub_100160454();
    uint64_t v122 = swift_allocObject();
    swift_weakInit();
    uint64_t v123 = swift_allocObject();
    *(void *)(v123 + 16) = v122;
    *(void *)(v123 + 24) = isa;
    swift_retain();
    uint64_t v124 = isa;
    sub_10011B210(v124, 1, (uint64_t)sub_1001ADA10, v123);

    swift_unknownObjectRelease();
    swift_release();
    sub_1001AEFFC((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    v166(v151, v167);
    v121(v148, v152);
    return swift_release();
  }
  unint64_t v61 = (*((unsigned __int8 *)v166 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v166 + 80);
  v125[1] = (uint64_t)a1;
  uint64_t v62 = (uint64_t)a1 + v61;
  long long v159 = (char *)(v153 + 48);
  uint64_t v157 = v153 + 8;
  uint64_t v158 = (void (**)(char *, char *, uint64_t))(v153 + 32);
  uint64_t v63 = *((void *)v166 + 9);
  unint64_t v155 = 0x80000001001F6CA0;
  uint64_t v156 = v63;
  uint64_t v64 = v126;
  uint64_t v65 = (uint64_t)v160;
  uint64_t v66 = (uint64_t (**)(char *, uint64_t))(v153 + 8);
  while (1)
  {
    long long v165 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v62;
    unint64_t v166 = v59;
    sub_1001AEF94(v62, v60, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    uint64_t v67 = sub_10015F0D4();
    uint64_t v68 = UUID.uuidString.getter();
    uint64_t v70 = v69;
    URL.init(string:)();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))v159)(v64, 1, v24);
    if (result == 1) {
      break;
    }
    uint64_t v72 = v161;
    (*v158)(v161, v64, v24);
    URL.appendingPathComponent(_:)();
    uint64_t v73 = *v66;
    uint64_t v74 = (*v66)(v72, v167);
    uint64_t v164 = v125;
    __chkstk_darwin(v74);
    v125[-4] = v67;
    v125[-3] = v68;
    v125[-2] = v70;
    v125[-1] = v65;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    swift_bridgeObjectRelease();
    v73((char *)v65, v167);
    uint64_t v24 = v167;
    sub_1001AEFFC(v60, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    uint64_t v62 = (uint64_t)v165 + v156;
    uint64_t v59 = (void (*)(char *, uint64_t))((char *)v166 - 1);
    if (v166 == (void (*)(char *, uint64_t))1) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

void sub_10018729C(void *a1, char a2, uint64_t a3, id a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2)
    {
      swift_errorRetain();
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1001CFDB0;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v8 = String.init<A>(describing:)();
      uint64_t v10 = v9;
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_1000AA5E0();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v10;
    }
    else
    {
      id v11 = a1;
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
      a4 = v11;
      id v13 = [a4 description];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      sub_100129200(a1, 0);
      *(void *)(v12 + 56) = &type metadata for String;
      *(void *)(v12 + 64) = sub_1000AA5E0();
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v16;
    }
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10016EFE0(a4, 0);
    swift_release();
    sub_100129200(a1, a2 & 1);
  }
}

uint64_t sub_100187500(void (*a1)(void), void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SoundProfileRecord();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v39 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v37 - v16);
  sub_100161B8C((uint64_t)v8);
  uint64_t v40 = v10;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000AA894((uint64_t)v8, &qword_1002623B8);
    sub_1000EB9B4();
    swift_allocError();
    *uint64_t v18 = 0x8000000000000020;
    a1();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v41 = a1;
    uint64_t v42 = a2;
    sub_1001AF05C((uint64_t)v8, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_10015F0D4();
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:_:_:)();
    notify_post("BTCloudServicesSoundProfileChangedNotification");
    ((void (*)(void))v41)(0);
    uint64_t v21 = *v17;
    unint64_t v22 = v17[1];
    sub_1000AA680(*v17, v22);
    Class isa = sub_100130420(v21, v22);
    sub_1000AA8F0(v21, v22);
    sub_1001AEF94((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    if (!isa) {
      Class isa = sub_1000B4970().super.isa;
    }
    sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    id v43 = isa;
    sub_1000B98F0(&v43);
    id v24 = [isa recordID];

    id v37 = [v24 zoneID];
    uint64_t v25 = sub_100160454();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    uint64_t v38 = type metadata accessor for SoundProfileRecord;
    uint64_t v27 = v39;
    sub_1001AEF94((uint64_t)v17, v39, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    unint64_t v28 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v29 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = v3;
    uint64_t v31 = swift_allocObject();
    sub_1001AF05C(v27, v31 + v28, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    *(void *)(v31 + v29) = v26;
    uint64_t v32 = (void (**)(void))(v31 + v30);
    uint64_t v33 = v42;
    *uint64_t v32 = v41;
    v32[1] = v33;
    *(void *)(v31 + ((v30 + 23) & 0xFFFFFFFFFFFFFFF8)) = v24;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v25;
    *(void *)(v34 + 24) = v24;
    *(void *)(v34 + 32) = sub_1001AD600;
    *(void *)(v34 + 40) = v31;
    *(unsigned char *)(v34 + 48) = 1;
    id v35 = v24;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    sub_10011A9F8((uint64_t)sub_1001AD6BC, v34);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    sub_100160454();
    id v36 = v37;
    sub_10011F48C((uint64_t)&off_100235FC0, (uint64_t)v37, 0, 0, 0, 0);
    swift_arrayDestroy();

    swift_unknownObjectRelease();
    return sub_1001AEFFC((uint64_t)v17, (uint64_t (*)(void))v38);
  }
}

uint64_t sub_100187AB4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void *a6)
{
  uint64_t v39 = a2;
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a3 + 16;
  if (a1)
  {
    uint64_t v36 = v19;
    uint64_t v37 = a5;
    uint64_t v38 = a4;
    swift_errorRetain();
    v35[1] = static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1001CFDB0;
    uint64_t v43 = a1;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v23 = v22;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_1000AA5E0();
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v23;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v24 = type metadata accessor for SoundProfileRecord();
    uint64_t v25 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v39 + *(int *)(v24 + 20), v41);
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v42);
    *uint64_t v18 = 1;
    *((void *)v18 + 1) = 0xD000000000000012;
    *((void *)v18 + 2) = 0x80000001001F6CA0;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16[6]], v15, v25);
    unint64_t v28 = &v18[v16[7]];
    *(void *)unint64_t v28 = 0xD000000000000011;
    *((void *)v28 + 1) = 0x80000001001F75A0;
    *(void *)&v18[v16[8]] = v27;
    *(_OWORD *)&v18[v16[9]] = xmmword_1001D3390;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v30 = Strong;
      sub_100185B98(v30, (uint64_t)v18);
      swift_release();
    }
    sub_1000EB9B4();
    uint64_t v32 = swift_allocError();
    void *v33 = a1;
    swift_errorRetain();
    v38(v32);
    swift_errorRelease();
    swift_errorRelease();
    return sub_1001AEFFC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_100174420(a6, 0xD000000000000012, 0x80000001001F6CA0, 0);
      swift_release();
    }
    return ((uint64_t (*)(void))a4)(0);
  }
}

uint64_t sub_100187FA8(uint64_t a1, uint64_t a2)
{
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_1000B66A0(0, (unint64_t *)&unk_100261E70);
  v4._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4._object = v5;
  v6._object = (void *)0x80000001001F7460;
  v6._uint64_t countAndFlagsBits = 0xD000000000000010;
  Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v6, v4).super.isa;
  sub_100160454();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = v8;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &off_100235F90;
  *(void *)(v11 + 32) = isa;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(void *)(v11 + 72) = sub_1001AD37C;
  *(void *)(v11 + 80) = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v12 = isa;
  swift_retain();
  sub_10011A9F8((uint64_t)sub_1001AD3EC, v11);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_1001881DC(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SoundProfileRecord();
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v42 = swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t)sub_100190E94(v42);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v50[0] = v11;
  sub_100191C24(v50, sub_10019273C);
  uint64_t v12 = v50[0];
  uint64_t v48 = v10;
  if ((v50[0] & 0x8000000000000000) == 0 && (v50[0] & 0x4000000000000000) == 0)
  {
    if (*(void *)(v50[0] + 16)) {
      goto LABEL_7;
    }
LABEL_23:
    swift_release();
    static os_log_type_t.error.getter();
    if (qword_100261948 == -1)
    {
LABEL_24:
      os_log(_:dso:log:_:_:)();
      a2(0);
      return;
    }
LABEL_27:
    swift_once();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v43) {
    goto LABEL_23;
  }
LABEL_7:
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  v44[0] = a4;
  v44[1] = v8;
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if (!*(void *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_27;
  }
  id v13 = *(id *)(v12 + 32);
LABEL_10:
  uint64_t v14 = v13;
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v15 = swift_allocObject();
  long long v45 = xmmword_1001CFDB0;
  *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
  id v16 = v14;
  id v17 = [v16 description:v44[0]];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v21 = sub_1000AA5E0();
  *(void *)(v15 + 64) = v21;
  *(void *)(v15 + 32) = v18;
  *(void *)(v15 + 40) = v20;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v22 = v16;
  uint64_t v23 = v48;
  sub_1000B882C(v22, v48);
  static os_log_type_t.default.getter();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v45;
  uint64_t v25 = sub_1000B7170();
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = v21;
  *(void *)(v24 + 32) = v25;
  *(void *)(v24 + 40) = v26;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  id v27 = objc_allocWithZone((Class)BTCloudSoundProfileRecord);
  URL._bridgeToObjectiveC()(v28);
  uint64_t v30 = v29;
  id v31 = [v27 initWithFileURL:v29];

  v47(v31);
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {

    sub_1001AEFFC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    return;
  }
  if (!IsAppleInternalBuild())
  {
    swift_release();
    goto LABEL_19;
  }
  id v32 = [self standardUserDefaults];
  NSString v33 = String._bridgeToObjectiveC()();
  unsigned __int8 v34 = [v32 BOOLForKey:v33];
  swift_release();

  if ((v34 & 1) == 0)
  {
LABEL_19:
    sub_1001AEFFC((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);

    return;
  }
  id v35 = [self defaultManager];
  URL._bridgeToObjectiveC()(v36);
  uint64_t v38 = v37;
  v49[0] = 0;
  unsigned int v39 = [v35 removeItemAtURL:v37 error:v49];

  if (v39)
  {
    id v40 = v49[0];
    goto LABEL_19;
  }
  id v41 = v49[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRelease();

  sub_1001AEFFC((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
}

uint64_t sub_100188818(void **a1, id *a2)
{
  uint64_t v5 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v5 - 8);
  unint64_t v54 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v49 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v50 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v49 - v19;
  *(void *)&double v22 = __chkstk_darwin(v21).n128_u64[0];
  uint64_t v55 = (char *)&v49 - v23;
  uint64_t v24 = *a1;
  id v53 = *a2;
  id v25 = [v24 modificationDate:v22];
  uint64_t v26 = &selRef_lastConnectTime;
  uint64_t v52 = v2;
  if (v25)
  {
    id v27 = v25;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v28(v14, v20, v15);
    unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v29(v14, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
    {
      v28(v55, v14, v15);
      uint64_t v34 = (uint64_t)v51;
      goto LABEL_12;
    }
    uint64_t v26 = &selRef_lastConnectTime;
  }
  else
  {
    unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v29(v14, 1, 1, v15);
  }
  id v30 = [v24 v26[227]];
  if (!v30)
  {
    v29(v11, 1, 1, v15);
    uint64_t v34 = (uint64_t)v51;
    goto LABEL_10;
  }
  id v31 = v30;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  id v32 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v32(v11, v20, v15);
  v29(v11, 0, 1, v15);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15);
  uint64_t v34 = (uint64_t)v51;
  if (v33 == 1)
  {
LABEL_10:
    static Date.now.getter();
    sub_1000AA894((uint64_t)v11, &qword_100261D90);
    goto LABEL_11;
  }
  v32(v55, v11, v15);
LABEL_11:
  sub_1000AA894((uint64_t)v14, &qword_100261D90);
LABEL_12:
  id v36 = v53;
  uint64_t v35 = (uint64_t)v54;
  id v37 = [v53 modificationDate];
  if (!v37)
  {
    v29((char *)v34, 1, 1, v15);
LABEL_16:
    id v41 = [v36 creationDate];
    if (v41)
    {
      unint64_t v42 = v41;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v43 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
      v43(v35, v20, v15);
      v29((char *)v35, 0, 1, v15);
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v35, 1, v15);
      id v40 = v50;
      if (v44 != 1)
      {
        v43((uint64_t)v50, (char *)v35, v15);
LABEL_21:
        sub_1000AA894(v34, &qword_100261D90);
        goto LABEL_22;
      }
    }
    else
    {
      v29((char *)v35, 1, 1, v15);
      id v40 = v50;
    }
    static Date.now.getter();
    sub_1000AA894(v35, &qword_100261D90);
    goto LABEL_21;
  }
  uint64_t v38 = v37;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  unsigned int v39 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 32);
  v39(v34, v20, v15);
  v29((char *)v34, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v34, 1, v15) == 1) {
    goto LABEL_16;
  }
  id v40 = v50;
  v39((uint64_t)v50, (char *)v34, v15);
LABEL_22:
  long long v45 = v55;
  char v46 = static Date.> infix(_:_:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v16 + 8);
  v47(v40, v15);
  v47(v45, v15);
  return v46 & 1;
}

double sub_100188DF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v139 = a3;
  uint64_t v140 = a2;
  uint64_t v141 = a1;
  uint64_t v6 = sub_1000AA024(&qword_1002623B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v128 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for SoundProfileRecord();
  uint64_t v8 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v120 = (uint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v10 - 8);
  uint64_t v127 = (uint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v129 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v13 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v121 = (uint64_t)&v119 - v15;
  uint64_t v16 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v16 - 8);
  uint64_t v130 = (uint64_t)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v133 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v19 = (char *)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v125 = (uint64_t)&v119 - v21;
  uint64_t v22 = type metadata accessor for DeviceRecord();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v25 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v136 = *(void *)(v26 - 8);
  uint64_t v137 = v26;
  __chkstk_darwin(v26);
  uint64_t v135 = (char *)&v119 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v28 - 8);
  id v30 = (char *)&v119 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v134 = self;
  unsigned int v31 = [v134 isFirstUnlocked];
  uint64_t v138 = a4;
  uint64_t v132 = v4;
  uint64_t v122 = v8;
  uint64_t v124 = v13;
  if (v31)
  {
    sub_10015F0D4();
    if (qword_100261850 != -1) {
      swift_once();
    }
    uint64_t v32 = v137;
    uint64_t v33 = sub_1000AA0CC(v137, (uint64_t)qword_10026AAE0);
    uint64_t v35 = (uint64_t)v135;
    uint64_t v34 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v33, v32);
    id v36 = sub_10015DA98(v35, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v32);
    a4 = v138;
    uint64_t v37 = v36[2];
    if (v37) {
      goto LABEL_5;
    }
LABEL_20:
    uint64_t v42 = 1;
    goto LABEL_23;
  }
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  id v36 = _swiftEmptyArrayStorage;
  os_log(_:dso:log:_:_:)();
  uint64_t v37 = _swiftEmptyArrayStorage[2];
  if (!v37) {
    goto LABEL_20;
  }
LABEL_5:
  uint64_t v38 = (uint64_t)v36 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  BOOL v40 = v140 == 0x6552656369766544 && v139 == 0xEC00000064726F63;
  uint64_t v41 = *(void *)(v23 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1001AEF94(v38, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (static UUID.== infix(_:_:)() & 1) != 0 && (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)()))
    {
      swift_bridgeObjectRelease();
      sub_1001AF05C((uint64_t)v25, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      uint64_t v42 = 0;
      goto LABEL_22;
    }
    sub_1001AEFFC((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    v38 += v41;
    --v37;
  }
  while (v37);
  swift_bridgeObjectRelease();
  uint64_t v42 = 1;
LABEL_22:
  a4 = v138;
LABEL_23:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v30, v42, 1, v22);
  swift_bridgeObjectRelease();
  int v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22);
  uint64_t v44 = v140;
  if (v43 != 1)
  {
    *(void *)(a4 + 24) = v22;
    *(void *)(a4 + 32) = sub_100197224((unint64_t *)&unk_100263A48, (void (*)(uint64_t))type metadata accessor for DeviceRecord);
    id v53 = sub_1000F8B34((uint64_t *)a4);
    unint64_t v54 = type metadata accessor for DeviceRecord;
    uint64_t v55 = (uint64_t)v30;
LABEL_75:
    sub_1001AF05C(v55, (uint64_t)v53, (uint64_t (*)(void))v54);
    return result;
  }
  sub_1000AA894((uint64_t)v30, (uint64_t *)&unk_100263A10);
  if ([v134 isFirstUnlocked])
  {
    sub_10015F0D4();
    uint64_t v45 = v139;
    uint64_t v46 = v141;
    if (qword_100261890 != -1) {
      swift_once();
    }
    uint64_t v47 = v137;
    uint64_t v48 = sub_1000AA0CC(v137, (uint64_t)qword_10026AB90);
    uint64_t v50 = (uint64_t)v135;
    uint64_t v49 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v48, v47);
    uint64_t v51 = sub_10015DA98(v50, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v47);
    uint64_t v52 = v51[2];
    if (!v52) {
      goto LABEL_46;
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v45 = v139;
    uint64_t v46 = v141;
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v51 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v52 = _swiftEmptyArrayStorage[2];
    if (!v52) {
      goto LABEL_46;
    }
  }
  uint64_t v56 = (uint64_t)v51 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
  BOOL v58 = v44 == 0x746553636967614DLL && v45 == 0xED000073676E6974;
  uint64_t v59 = *(void *)(v133 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1001AEF94(v56, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (static UUID.== infix(_:_:)() & 1) != 0 && (v58 || (_stringCompareWithSmolCheck(_:_:expecting:)()))
    {
      swift_bridgeObjectRelease();
      uint64_t v60 = v130;
      sub_1001AF05C((uint64_t)v19, v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      uint64_t v61 = 0;
      goto LABEL_47;
    }
    sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    v56 += v59;
    --v52;
  }
  while (v52);
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v61 = 1;
  uint64_t v60 = v130;
LABEL_47:
  uint64_t v62 = v133;
  uint64_t v63 = v131;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v133 + 56))(v60, v61, 1, v131);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v63) != 1)
  {
    unint64_t v77 = type metadata accessor for MagicPairingSettingsRecord;
    uint64_t v78 = v125;
    sub_1001AF05C(v60, v125, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    *(void *)(a4 + 24) = v63;
    uint64_t v79 = (unint64_t *)&unk_100263A40;
    uint64_t v80 = type metadata accessor for MagicPairingSettingsRecord;
LABEL_74:
    *(void *)(a4 + 32) = sub_100197224(v79, (void (*)(uint64_t))v80);
    id v53 = sub_1000F8B34((uint64_t *)a4);
    uint64_t v55 = v78;
    unint64_t v54 = v77;
    goto LABEL_75;
  }
  sub_1000AA894(v60, &qword_1002623D0);
  if ([v134 isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_1002618E8 != -1) {
      swift_once();
    }
    uint64_t v64 = v137;
    uint64_t v65 = sub_1000AA0CC(v137, (uint64_t)qword_10026AD20);
    uint64_t v67 = (uint64_t)v135;
    uint64_t v66 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v65, v64);
    uint64_t v68 = sub_10015DA98(v67, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v64);
    uint64_t v69 = v68[2];
    if (v69) {
      goto LABEL_52;
    }
LABEL_68:
    uint64_t v76 = 1;
    uint64_t v75 = v127;
    goto LABEL_70;
  }
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v68 = _swiftEmptyArrayStorage;
  os_log(_:dso:log:_:_:)();
  uint64_t v69 = _swiftEmptyArrayStorage[2];
  if (!v69) {
    goto LABEL_68;
  }
LABEL_52:
  uint64_t v70 = (uint64_t)v68 + ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80));
  BOOL v72 = v44 == 0xD00000000000001ELL && v45 == 0x80000001001F6CC0;
  uint64_t v73 = *(void *)(v129 + 72);
  swift_bridgeObjectRetain();
  uint64_t v74 = (uint64_t)v124;
  do
  {
    sub_1001AEF94(v70, v74, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    if (static UUID.== infix(_:_:)() & 1) != 0 && (v72 || (_stringCompareWithSmolCheck(_:_:expecting:)()))
    {
      swift_bridgeObjectRelease();
      uint64_t v75 = v127;
      sub_1001AF05C(v74, v127, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      uint64_t v76 = 0;
      a4 = v138;
      uint64_t v46 = v141;
      goto LABEL_70;
    }
    sub_1001AEFFC(v74, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    v70 += v73;
    --v69;
  }
  while (v69);
  swift_bridgeObjectRelease();
  uint64_t v76 = 1;
  a4 = v138;
  uint64_t v46 = v141;
  uint64_t v75 = v127;
LABEL_70:
  uint64_t v81 = v129;
  uint64_t v82 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v75, v76, 1, v126);
  swift_bridgeObjectRelease();
  int v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v75, 1, v82);
  uint64_t v84 = (uint64_t)v128;
  if (v83 != 1)
  {
    unint64_t v77 = type metadata accessor for DeviceSupportInformationRecord;
    uint64_t v78 = v121;
    sub_1001AF05C(v75, v121, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    *(void *)(a4 + 24) = v82;
    uint64_t v79 = (unint64_t *)&unk_100263A38;
    uint64_t v80 = type metadata accessor for DeviceSupportInformationRecord;
    goto LABEL_74;
  }
  sub_1000AA894(v75, (uint64_t *)&unk_100263A00);
  sub_100161B8C(v84);
  uint64_t v85 = v123;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v84, 1, v123) == 1)
  {
    sub_1000AA894(v84, &qword_1002623B8);
    uint64_t v86 = v140;
    goto LABEL_82;
  }
  uint64_t v88 = v84;
  uint64_t v89 = v120;
  sub_1001AF05C(v88, v120, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
  char v90 = static UUID.== infix(_:_:)();
  uint64_t v86 = v140;
  if ((v90 & 1) != 0
    && (v140 == 0xD000000000000012 && v45 == 0x80000001001F6CA0
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    *(void *)(a4 + 24) = v85;
    *(void *)(a4 + 32) = sub_100197224((unint64_t *)&unk_100263AD0, (void (*)(uint64_t))type metadata accessor for SoundProfileRecord);
    id v53 = sub_1000F8B34((uint64_t *)a4);
    unint64_t v54 = type metadata accessor for SoundProfileRecord;
    uint64_t v55 = v89;
    goto LABEL_75;
  }
  sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
LABEL_82:
  uint64_t v143 = &type metadata for AudioAccessoryFeatures;
  unint64_t v91 = sub_1000AE4C4();
  unint64_t v144 = v91;
  char v92 = isFeatureEnabled(_:)();
  uint64_t v93 = sub_1000ABFF0((uint64_t)v142);
  if (v92)
  {
    if ([v134 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261918 != -1) {
        swift_once();
      }
      uint64_t v94 = v137;
      uint64_t v95 = sub_1000AA0CC(v137, (uint64_t)qword_10026AD60);
      uint64_t v96 = (uint64_t)v135;
      uint64_t v97 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v95, v94);
      uint64_t v98 = (void *)sub_10015D120(v96, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
      swift_release();
      uint64_t v93 = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 8))(v96, v94);
      a4 = v138;
    }
    else
    {
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      uint64_t v98 = _swiftEmptyArrayStorage;
      uint64_t v93 = os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v98 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v93);
  *(&v119 - 4) = v46;
  *(&v119 - 3) = v86;
  *(&v119 - 2) = v45;
  unint64_t v99 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD298, (uint64_t)(&v119 - 6), (unint64_t)v98);
  swift_bridgeObjectRelease();
  if (v99)
  {
    *(void *)(a4 + 24) = type metadata accessor for AADeviceRecord();
    *(void *)(a4 + 32) = sub_100197224(&qword_100263A30, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
    *(void *)a4 = v99;
    return result;
  }
  uint64_t v143 = &type metadata for AudioAccessoryFeatures;
  unint64_t v144 = v91;
  char v100 = isFeatureEnabled(_:)();
  uint64_t v101 = sub_1000ABFF0((uint64_t)v142);
  if (v100)
  {
    if ([v134 isFirstUnlocked])
    {
      uint64_t v102 = a4;
      sub_10015F0D4();
      uint64_t v103 = v141;
      if (qword_100261860 != -1) {
        swift_once();
      }
      uint64_t v104 = v137;
      uint64_t v105 = sub_1000AA0CC(v137, (uint64_t)qword_10026AB00);
      uint64_t v106 = (uint64_t)v135;
      uint64_t v107 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v105, v104);
      uint64_t v108 = (void *)sub_10015D120(v106, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
      swift_release();
      uint64_t v101 = (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 8))(v106, v104);
      a4 = v102;
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v103 = v141;
      if (qword_100261948 != -1) {
        swift_once();
      }
      uint64_t v108 = _swiftEmptyArrayStorage;
      uint64_t v101 = os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v108 = _swiftEmptyArrayStorage;
    uint64_t v103 = v141;
  }
  __chkstk_darwin(v101);
  *(&v119 - 4) = v103;
  *(&v119 - 3) = v86;
  *(&v119 - 2) = v45;
  uint64_t v109 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD2BC, (uint64_t)(&v119 - 6), (unint64_t)v108);
  swift_bridgeObjectRelease();
  if (v109)
  {
    *(void *)(a4 + 24) = type metadata accessor for AAProxCardsRecord();
    unint64_t v110 = (unint64_t *)&unk_100263A28;
    uint64_t v111 = type metadata accessor for AAProxCardsRecord;
LABEL_113:
    *(void *)(a4 + 32) = sub_100197224(v110, (void (*)(uint64_t))v111);
    *(void *)a4 = v109;
    return result;
  }
  if ([v134 isFirstUnlocked])
  {
    uint64_t v112 = a4;
    sub_10015F0D4();
    if (qword_1002618E0 != -1) {
      swift_once();
    }
    uint64_t v113 = v137;
    uint64_t v114 = sub_1000AA0CC(v137, (uint64_t)qword_10026AC28);
    uint64_t v115 = (uint64_t)v135;
    uint64_t v116 = v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v135, v114, v113);
    uint64_t v117 = (void *)sub_10015D120(v115, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
    swift_release();
    uint64_t v118 = (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v115, v113);
    a4 = v112;
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v117 = _swiftEmptyArrayStorage;
    uint64_t v118 = os_log(_:dso:log:_:_:)();
  }
  __chkstk_darwin(v118);
  *(&v119 - 4) = v103;
  *(&v119 - 3) = v86;
  *(&v119 - 2) = v45;
  uint64_t v109 = sub_10013B2FC((uint64_t (*)(id *))sub_1001AD2E0, (uint64_t)(&v119 - 6), (unint64_t)v117);
  swift_bridgeObjectRelease();
  if (v109)
  {
    *(void *)(a4 + 24) = type metadata accessor for HMDeviceCloudRecord();
    unint64_t v110 = (unint64_t *)&unk_100263A20;
    uint64_t v111 = type metadata accessor for HMDeviceCloudRecord;
    goto LABEL_113;
  }
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_10018A4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (a3 == 0x6563697665444141 && a4 == 0xEE0064726F636552) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
}

uint64_t sub_10018A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (a3 == 0xD000000000000011 && a4 == 0x80000001001FDE80) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
}

uint64_t sub_10018A66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if (a3 == 0xD000000000000013 && a4 == 0x80000001001F7610) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
}

double sub_10018A718@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v140 = a4;
  uint64_t v141 = a3;
  uint64_t v137 = a5;
  uint64_t v8 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v126 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v122 = (uint64_t)&v121 - v15;
  uint64_t v16 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v16 - 8);
  uint64_t v130 = (uint64_t)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v131 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v19 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v124 = (uint64_t)&v121 - v21;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v134 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v133 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v24 - 8);
  uint64_t v135 = (uint64_t)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DeviceRecord();
  uint64_t v136 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v129 = (uint64_t)&v121 - v30;
  id v132 = self;
  unsigned int v31 = [v132 isFirstUnlocked];
  uint64_t v127 = v22;
  uint64_t v128 = v5;
  uint64_t v125 = v10;
  uint64_t v138 = v11;
  uint64_t v123 = v13;
  if (v31)
  {
    sub_10015F0D4();
    if (qword_100261850 != -1) {
      swift_once();
    }
    uint64_t v32 = a2;
    uint64_t v33 = sub_1000AA0CC(v22, (uint64_t)qword_10026AAE0);
    uint64_t v35 = (uint64_t)v133;
    uint64_t v34 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v33, v22);
    id v36 = sub_10015DA98(v35, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v22);
    uint64_t v37 = v36[2];
    if (!v37) {
      goto LABEL_26;
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v32 = a2;
    id v36 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v37 = _swiftEmptyArrayStorage[2];
    if (!v37) {
      goto LABEL_26;
    }
  }
  uint64_t v38 = (uint64_t)v36 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80));
  BOOL v39 = v141 == 0x6552656369766544 && v140 == 0xEC00000064726F63;
  char v40 = v39;
  uint64_t v41 = *(void *)(v136 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1001AEF94(v38, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v42 = &v28[*(int *)(v26 + 24)];
    BOOL v43 = *(void *)v42 == a1 && *((void *)v42 + 1) == v32;
    if (v43 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && ((v40 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v44 = v135;
      sub_1001AF05C((uint64_t)v28, v135, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      uint64_t v45 = 0;
      uint64_t v46 = v137;
      goto LABEL_27;
    }
    sub_1001AEFFC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    v38 += v41;
    --v37;
  }
  while (v37);
  swift_bridgeObjectRelease();
LABEL_26:
  uint64_t v45 = 1;
  uint64_t v46 = v137;
  uint64_t v44 = v135;
LABEL_27:
  uint64_t v47 = v136;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v44, v45, 1, v26);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v26) != 1)
  {
    char v57 = type metadata accessor for DeviceRecord;
    uint64_t v58 = v129;
    sub_1001AF05C(v44, v129, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    v46[3] = v26;
    v46[4] = sub_100197224((unint64_t *)&unk_100263A48, (void (*)(uint64_t))type metadata accessor for DeviceRecord);
    uint64_t v59 = v46;
LABEL_90:
    uint64_t v81 = sub_1000F8B34(v59);
    uint64_t v82 = v58;
    goto LABEL_91;
  }
  uint64_t v48 = v32;
  sub_1000AA894(v44, (uint64_t *)&unk_100263A10);
  if ([v132 isFirstUnlocked])
  {
    sub_10015F0D4();
    uint64_t v49 = v140;
    uint64_t v50 = v141;
    if (qword_100261890 != -1) {
      swift_once();
    }
    uint64_t v51 = v127;
    uint64_t v52 = sub_1000AA0CC(v127, (uint64_t)qword_10026AB90);
    uint64_t v54 = (uint64_t)v133;
    uint64_t v53 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v52, v51);
    uint64_t v55 = sub_10015DA98(v54, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v51);
    uint64_t v56 = v55[2];
    if (!v56) {
      goto LABEL_54;
    }
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v49 = v140;
    uint64_t v50 = v141;
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v55 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
    uint64_t v56 = _swiftEmptyArrayStorage[2];
    if (!v56) {
      goto LABEL_54;
    }
  }
  uint64_t v60 = (uint64_t)v55 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
  BOOL v62 = v50 == 0x746553636967614DLL && v49 == 0xED000073676E6974;
  uint64_t v63 = *(void *)(v131 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1001AEF94(v60, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v64 = &v19[*(int *)(v139 + 24)];
    BOOL v65 = *(void *)v64 == a1 && *((void *)v64 + 1) == v48;
    if (v65 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && (v62 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v66 = v130;
      sub_1001AF05C((uint64_t)v19, v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      uint64_t v67 = v131;
      uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
      uint64_t v69 = v66;
      uint64_t v70 = 0;
      goto LABEL_55;
    }
    sub_1001AEFFC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    v60 += v63;
    --v56;
  }
  while (v56);
  swift_bridgeObjectRelease();
LABEL_54:
  uint64_t v66 = v130;
  uint64_t v67 = v131;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
  uint64_t v69 = v130;
  uint64_t v70 = 1;
LABEL_55:
  uint64_t v71 = v139;
  v68(v69, v70, 1, v139);
  swift_bridgeObjectRelease();
  int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v66, 1, v71);
  uint64_t v73 = v137;
  if (v72 != 1)
  {
    char v57 = type metadata accessor for MagicPairingSettingsRecord;
    uint64_t v79 = v66;
    uint64_t v80 = v124;
    sub_1001AF05C(v79, v124, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    v73[3] = v71;
    v73[4] = sub_100197224(&qword_100263A40, (void (*)(uint64_t))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v81 = sub_1000F8B34(v73);
    uint64_t v82 = v80;
LABEL_91:
    sub_1001AF05C(v82, (uint64_t)v81, (uint64_t (*)(void))v57);
    return result;
  }
  sub_1000AA894(v66, &qword_1002623D0);
  if ([v132 isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_1002618E8 != -1) {
      swift_once();
    }
    uint64_t v74 = v127;
    uint64_t v75 = sub_1000AA0CC(v127, (uint64_t)qword_10026AD20);
    uint64_t v77 = (uint64_t)v133;
    uint64_t v76 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v75, v74);
    uint64_t v78 = sub_10015DA98(v77, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v77, v74);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v78 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  uint64_t v83 = v78[2];
  uint64_t v139 = a1;
  if (v83)
  {
    uint64_t v84 = (uint64_t)v78 + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80));
    BOOL v39 = v50 == 0xD00000000000001ELL;
    uint64_t v85 = v49;
    char v87 = v39 && v49 == 0x80000001001F6CC0;
    uint64_t v88 = *(void *)(v126 + 72);
    swift_bridgeObjectRetain();
    uint64_t v89 = (uint64_t)v123;
    do
    {
      sub_1001AEF94(v84, v89, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      char v90 = (void *)(v89 + *(int *)(v138 + 24));
      BOOL v91 = *v90 == v139 && v90[1] == v48;
      if (v91 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && ((v87 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v92 = (uint64_t)v125;
        sub_1001AF05C(v89, (uint64_t)v125, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
        uint64_t v93 = v126;
        uint64_t v94 = v138;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v92, 0, 1, v138);
        uint64_t v49 = v85;
        goto LABEL_83;
      }
      sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      v84 += v88;
      --v83;
    }
    while (v83);
    swift_bridgeObjectRelease();
    uint64_t v49 = v85;
  }
  uint64_t v93 = v126;
  uint64_t v92 = (uint64_t)v125;
  uint64_t v94 = v138;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v125, 1, 1, v138);
LABEL_83:
  swift_bridgeObjectRelease();
  int v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v92, 1, v94);
  uint64_t v96 = v137;
  if (v95 != 1)
  {
    char v57 = type metadata accessor for DeviceSupportInformationRecord;
    uint64_t v58 = v122;
    sub_1001AF05C(v92, v122, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    v96[3] = v94;
    v96[4] = sub_100197224(&qword_100263A38, (void (*)(uint64_t))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v59 = v96;
    goto LABEL_90;
  }
  sub_1000AA894(v92, (uint64_t *)&unk_100263A00);
  uint64_t v143 = &type metadata for AudioAccessoryFeatures;
  unint64_t v97 = sub_1000AE4C4();
  unint64_t v144 = v97;
  char v98 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v142);
  if (v98)
  {
    if ([v132 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261918 != -1) {
        swift_once();
      }
      uint64_t v99 = v127;
      uint64_t v100 = sub_1000AA0CC(v127, (uint64_t)qword_10026AD60);
      uint64_t v102 = (uint64_t)v133;
      uint64_t v101 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v100, v99);
      uint64_t v103 = (void *)sub_10015D120(v102, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v99);
      uint64_t v49 = v140;
    }
    else
    {
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      uint64_t v103 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v103 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v105 = sub_100196D0C((unint64_t)v103, v139, v48, v141, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v105)
  {
    v96[3] = type metadata accessor for AADeviceRecord();
    v96[4] = sub_100197224(&qword_100263A30, (void (*)(uint64_t))type metadata accessor for AADeviceRecord);
    *uint64_t v96 = (uint64_t)v105;
    return result;
  }
  uint64_t v143 = &type metadata for AudioAccessoryFeatures;
  unint64_t v144 = v97;
  char v106 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v142);
  if (v106)
  {
    if ([v132 isFirstUnlocked])
    {
      sub_10015F0D4();
      uint64_t v107 = v141;
      if (qword_100261860 != -1) {
        swift_once();
      }
      uint64_t v108 = v127;
      uint64_t v109 = sub_1000AA0CC(v127, (uint64_t)qword_10026AB00);
      uint64_t v111 = (uint64_t)v133;
      uint64_t v110 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v109, v108);
      uint64_t v112 = (void *)sub_10015D120(v111, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v111, v108);
      uint64_t v49 = v140;
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v107 = v141;
      if (qword_100261948 != -1) {
        swift_once();
      }
      uint64_t v112 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v112 = _swiftEmptyArrayStorage;
    uint64_t v107 = v141;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v113 = sub_100196ECC((unint64_t)v112, v139, v48, v107, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v113)
  {
    v96[3] = type metadata accessor for AAProxCardsRecord();
    uint64_t v114 = (unint64_t *)&unk_100263A28;
    uint64_t v115 = type metadata accessor for AAProxCardsRecord;
LABEL_118:
    v96[4] = sub_100197224(v114, (void (*)(uint64_t))v115);
    *uint64_t v96 = (uint64_t)v113;
    return result;
  }
  if ([v132 isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_1002618E0 != -1) {
      swift_once();
    }
    uint64_t v116 = v127;
    uint64_t v117 = sub_1000AA0CC(v127, (uint64_t)qword_10026AC28);
    uint64_t v119 = (uint64_t)v133;
    uint64_t v118 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, v117, v116);
    uint64_t v120 = (void *)sub_10015D120(v119, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v119, v116);
    uint64_t v49 = v140;
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    uint64_t v120 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v113 = sub_100197078((unint64_t)v120, v139, v48, v107, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v113)
  {
    v96[3] = type metadata accessor for HMDeviceCloudRecord();
    uint64_t v114 = (unint64_t *)&unk_100263A20;
    uint64_t v115 = type metadata accessor for HMDeviceCloudRecord;
    goto LABEL_118;
  }
  v96[4] = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v96 = 0u;
  *((_OWORD *)v96 + 1) = 0u;
  return result;
}

uint64_t sub_10018BC7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  return sub_1001AF224(a4, a5);
}

uint64_t sub_10018BCA8(void *a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v53 = 0;
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v10 = (uint64_t *)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v11 = [a1 zoneName:v8];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  uint64_t v15 = &selRef_hijackAwayRemoteScore;
  if (v12 == 0xD00000000000001ELL && v14 == 0x80000001001F6D00
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    uint64_t v16 = v52;
    if (qword_100261948 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v50 = v16 + 24;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = (void *)Strong;
      uint64_t v19 = *(void **)(sub_100160454() + 72);
      *uint64_t v10 = v19;
      (*(void (**)(void *, void, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.notOnQueue(_:), v6);
      id v20 = v19;
      uint64_t v21 = _dispatchPreconditionTest(_:)();
      uint64_t v23 = *(void (**)(void *, uint64_t))(v7 + 8);
      uint64_t v22 = v7 + 8;
      v23(v10, v6);
      if ((v21 & 1) == 0)
      {
        __break(1u);
        goto LABEL_71;
      }
      uint64_t v24 = v53;
      OS_dispatch_queue.sync<A>(execute:)();
      uint64_t v53 = v24;
      swift_unknownObjectRelease();
      sub_1000D6D80(v54[0], 1);
      swift_unknownObjectRelease();
    }
    uint64_t v18 = self;
    uint64_t v21 = (uint64_t)&selRef_hijackAwayRemoteScore;
    uint64_t v22 = v3;
    if (![v18 isFirstUnlocked])
    {
      static os_log_type_t.error.getter();
      uint64_t v26 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
      uint64_t v3 = v51;
      goto LABEL_13;
    }
    sub_10015F0D4();
    uint64_t v3 = v51;
    if (qword_100261850 == -1)
    {
LABEL_11:
      uint64_t v25 = sub_1000AA0CC(v3, (uint64_t)qword_10026AAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, v25, v3);
      uint64_t v26 = sub_10015DA98((uint64_t)v5, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
LABEL_13:
      if ([v18 *(SEL *)(v21 + 736)])
      {
        sub_10015F0D4();
        if (qword_1002618E8 != -1) {
          swift_once();
        }
        uint64_t v27 = sub_1000AA0CC(v3, (uint64_t)qword_10026AD20);
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, v27, v3);
        uint64_t v28 = sub_10015DA98((uint64_t)v5, (uint64_t *)&unk_100263A00, (uint64_t (*)(void, __n128))type metadata accessor for DeviceSupportInformationRecord, (uint64_t)sub_10019731C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A50);
        swift_release();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v28 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
      if ([v18 *(SEL *)(v21 + 736)])
      {
        sub_10015F0D4();
        if (qword_100261890 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_1000AA0CC(v3, (uint64_t)qword_10026AB90);
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, v29, v3);
        uint64_t v30 = sub_10015DA98((uint64_t)v5, &qword_1002623D0, (uint64_t (*)(void, __n128))type metadata accessor for MagicPairingSettingsRecord, (uint64_t)sub_1001972C4, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2D04);
        swift_release();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v30 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
      sub_10018CB78();
      sub_10015F0D4();
      uint64_t v31 = v53;
      OS_dispatch_queue.sync<A>(execute:)();
      if (!v31)
      {
        swift_release();
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_1001518C8((uint64_t)v26, (uint64_t)&unk_10023B4D8, (uint64_t)sub_1001AD894, (uint64_t)&unk_10023B4F0);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_1001518C8((uint64_t)v28, (uint64_t)&unk_10023B578, (uint64_t)sub_1001AD8FC, (uint64_t)&unk_10023B590);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (!swift_unknownObjectWeakLoadStrong()) {
          return swift_bridgeObjectRelease();
        }
        sub_1001518C8((uint64_t)v30, (uint64_t)&unk_10023B5C8, (uint64_t)sub_1001AD930, (uint64_t)&unk_10023B5E0);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v15 = &selRef_hijackAwayRemoteScore;
      goto LABEL_36;
    }
LABEL_71:
    swift_once();
    goto LABEL_11;
  }
  if (v12 == 0xD000000000000010 && v14 == 0x80000001001F7460)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = v3;
  }
  else
  {
    uint64_t v22 = v3;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v3 = v51;
      if (v12 == 0xD000000000000012 && v14 == 0x80000001001F75F0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
          static os_log_type_t.default.getter();
          if (qword_100261948 != -1) {
            swift_once();
          }
          sub_1000AA024((uint64_t *)&unk_100262110);
          uint64_t v45 = swift_allocObject();
          *(_OWORD *)(v45 + 16) = xmmword_1001CFDB0;
          id v46 = [a1 zoneName];
          uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v49 = v48;

          *(void *)(v45 + 56) = &type metadata for String;
          *(void *)(v45 + 64) = sub_1000AA5E0();
          *(void *)(v45 + 32) = v47;
          *(void *)(v45 + 40) = v49;
          os_log(_:dso:log:_:_:)();
          return swift_bridgeObjectRelease();
        }
      }
      uint64_t v55 = &type metadata for AudioAccessoryFeatures;
      unint64_t v42 = sub_1000AE4C4();
      unint64_t v56 = v42;
      char v43 = isFeatureEnabled(_:)();
      uint64_t result = sub_1000ABFF0((uint64_t)v54);
      if ((v43 & 1) == 0) {
        return result;
      }
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      sub_10018CB78();
      sub_10015F0D4();
      uint64_t v55 = &type metadata for AudioAccessoryFeatures;
      unint64_t v56 = v42;
      char v44 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v54);
      if ((v44 & 1) == 0) {
        return swift_release();
      }
      uint64_t v31 = v53;
      OS_dispatch_queue.sync<A>(execute:)();
      if (!v31) {
        return swift_release();
      }
      goto LABEL_35;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = v51;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_10015F0D4();
  uint64_t v31 = v53;
  OS_dispatch_queue.sync<A>(execute:)();
  if (v31)
  {
LABEL_35:
    swift_release();
LABEL_36:
    static os_log_type_t.error.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1001D0A20;
    if ([self v15[92]])
    {
      sub_10015F0D4();
      if (qword_100261850 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1000AA0CC(v3, (uint64_t)qword_10026AAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v5, v33, v3);
      sub_10015DA98((uint64_t)v5, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
      swift_release();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
    }
    else
    {
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
    }
    type metadata accessor for DeviceRecord();
    uint64_t v34 = Array.description.getter();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    *(void *)(v32 + 56) = &type metadata for String;
    unint64_t v37 = sub_1000AA5E0();
    *(void *)(v32 + 64) = v37;
    *(void *)(v32 + 32) = v34;
    *(void *)(v32 + 40) = v36;
    *(void *)uint64_t v54 = v31;
    swift_errorRetain();
    sub_1000AA024(&qword_100261D60);
    uint64_t v38 = String.init<A>(describing:)();
    *(void *)(v32 + 96) = &type metadata for String;
    *(void *)(v32 + 104) = v37;
    *(void *)(v32 + 72) = v38;
    *(void *)(v32 + 80) = v39;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  swift_release();

  return notify_post("BTCloudServicesSoundProfileChangedNotification");
}

uint64_t sub_10018CB78()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v15 = &type metadata for AudioAccessoryFeatures;
    unint64_t v16 = sub_1000AE4C4();
    char v4 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v14);
    if (v4)
    {
      if ([self isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_100261918 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_1000AA0CC(v0, (uint64_t)qword_10026AD60);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
        uint64_t v6 = (void *)sub_10015D120((uint64_t)v3, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v6 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
    }
    else
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }
    sub_1001518C8((uint64_t)v6, (uint64_t)&unk_10023B528, (uint64_t)sub_1001AD8C8, (uint64_t)&unk_10023B540);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v15 = &type metadata for AudioAccessoryFeatures;
    unint64_t v16 = sub_1000AE4C4();
    char v7 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v14);
    if (v7)
    {
      if ([self isFirstUnlocked])
      {
        sub_10015F0D4();
        if (qword_100261860 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_1000AA0CC(v0, (uint64_t)qword_10026AB00);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
        uint64_t v9 = (void *)sub_10015D120((uint64_t)v3, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
        swift_release();
        (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v9 = _swiftEmptyArrayStorage;
        os_log(_:dso:log:_:_:)();
      }
    }
    else
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
    }
    sub_1001518C8((uint64_t)v9, (uint64_t)&unk_10023B668, (uint64_t)sub_1001AD998, (uint64_t)&unk_10023B680);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if ([self isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_1002618E0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_1000AA0CC(v0, (uint64_t)qword_10026AC28);
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16))(v3, v11, v0);
      uint64_t v12 = (void *)sub_10015D120((uint64_t)v3, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v12 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
    sub_1001518C8((uint64_t)v12, (uint64_t)&unk_10023B6B8, (uint64_t)sub_1001AD9CC, (uint64_t)&unk_10023B6D0);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10018D110(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if (!*(void *)(result + 48))
    {
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1001CFDB0;
      *(void *)(v5 + 56) = &type metadata for Bool;
      *(void *)(v5 + 64) = &protocol witness table for Bool;
      *(unsigned char *)(v5 + 32) = a2 & 1;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      char v6 = *(unsigned char *)(v4 + 16);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        sub_1000D6D80(1, (v6 ^ 1) & a2);
        uint64_t Strong = swift_unknownObjectRelease();
      }
      *(unsigned char *)(v4 + 16) = a2 & 1;
      sub_100162CD8(Strong);
    }
    return swift_release();
  }
  return result;
}

void sub_10018D270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  char v6 = self;
  if ([v6 isFirstUnlocked])
  {
    sub_10015F0D4();
    if (qword_100261850 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1000AA0CC(v2, (uint64_t)qword_10026AAE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v7, v2);
    id v20 = sub_10015DA98((uint64_t)v5, (uint64_t *)&unk_100263A10, (uint64_t (*)(void, __n128))type metadata accessor for DeviceRecord, (uint64_t)sub_10019726C, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(BOOL, uint64_t, uint64_t, void *))sub_1001B2A1C);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    static os_log_type_t.error.getter();
    id v20 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  uint64_t v22 = &type metadata for AudioAccessoryFeatures;
  unint64_t v8 = sub_1000AE4C4();
  unint64_t v23 = v8;
  char v9 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v21);
  if (v9)
  {
    if ([v6 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261918 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1000AA0CC(v2, (uint64_t)qword_10026AD60);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
      uint64_t v19 = (void *)sub_10015D120((uint64_t)v5, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v19 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = &type metadata for AudioAccessoryFeatures;
  unint64_t v23 = v8;
  char v11 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v21);
  if (v11)
  {
    if ([v6 isFirstUnlocked])
    {
      sub_10015F0D4();
      if (qword_100261860 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1000AA0CC(v2, (uint64_t)qword_10026AB00);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
      uint64_t v13 = (void *)sub_10015D120((uint64_t)v5, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v13 = _swiftEmptyArrayStorage;
      os_log(_:dso:log:_:_:)();
    }
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  if (objc_msgSend(v6, "isFirstUnlocked", v19))
  {
    sub_10015F0D4();
    if (qword_1002618E0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1000AA0CC(v2, (uint64_t)qword_10026AC28);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    uint64_t v15 = (void *)sub_10015D120((uint64_t)v5, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    static os_log_type_t.error.getter();
    uint64_t v15 = _swiftEmptyArrayStorage;
    os_log(_:dso:log:_:_:)();
  }
  sub_10015F0D4();
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1001518C8((uint64_t)v20, (uint64_t)&unk_10023C298, (uint64_t)sub_1001AF21C, (uint64_t)&unk_10023C2B0);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = &type metadata for AudioAccessoryFeatures;
  unint64_t v23 = v8;
  char v16 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)v21);
  if (v16)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1001518C8((uint64_t)v19, (uint64_t)&unk_10023C1F8, (uint64_t)sub_1001AF1B4, (uint64_t)&unk_10023C210);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1001518C8((uint64_t)v13, (uint64_t)&unk_10023C1A8, (uint64_t)sub_1001AF180, (uint64_t)&unk_10023C1C0);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_38:
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1001518C8((uint64_t)v15, (uint64_t)&unk_10023C248, (uint64_t)sub_1001AF1E8, (uint64_t)&unk_10023C260);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer;
  [*(id *)(a1 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer) invalidate];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = 0;

  if (!*(void *)(a1 + 48))
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000D6D80(0, 1);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10018DA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v19[-v13];
  uint64_t v15 = sub_10015F0D4();
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
    CKRecord.recordType.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8);
    uint64_t v18 = v17(v11, v8);
    __chkstk_darwin(v18);
    *(void *)&v19[-32] = v15;
    *(void *)&v19[-24] = a2;
    *(void *)&v19[-16] = a3;
    *(void *)&v19[-8] = v14;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    return v17(v14, v8);
  }
  return result;
}

uint64_t sub_10018DD08@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_1000ABF58(a1, v3);
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(v3, v4);
  id v6 = [v5 encryptedValues];

  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 objectForKeyedSubscript:v7];

  uint64_t result = swift_unknownObjectRelease();
  *a2 = v8;
  return result;
}

uint64_t sub_10018DDDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DeviceRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10015F0D4();
  uint64_t v26 = a1;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v23 = v7;
  swift_release();
  LODWORD(v24) = static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D0A20;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000AA5E0();
  *(void *)(v10 + 64) = v11;
  strcpy((char *)(v10 + 32), "DeviceRecord");
  *(unsigned char *)(v10 + 45) = 0;
  *(_WORD *)(v10 + 46) = -5120;
  sub_1001AEF94(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  uint64_t v12 = String.init<A>(describing:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v11;
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v15 = swift_allocObject();
    long long v24 = xmmword_1001CFDB0;
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v27 = Strong;
    uint64_t v28 = v17;
    sub_1000AA024(&qword_100263BF8);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v11;
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 40) = v19;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024((uint64_t *)&unk_100263B30);
      unint64_t v20 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v24;
      sub_1001AEF94(a1, v21 + v20, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      sub_1001518C8(v21, (uint64_t)&unk_10023BA28, (uint64_t)sub_1001AE680, (uint64_t)&unk_10023BA40);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018E274(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10015F0D4();
  uint64_t v26 = a1;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v23 = v7;
  swift_release();
  LODWORD(v24) = static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D0A20;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000AA5E0();
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = 0xD00000000000001ELL;
  *(void *)(v10 + 40) = 0x80000001001F6CC0;
  sub_1001AEF94(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  uint64_t v12 = String.init<A>(describing:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v11;
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v15 = swift_allocObject();
    long long v24 = xmmword_1001CFDB0;
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v27 = Strong;
    uint64_t v28 = v17;
    sub_1000AA024(&qword_100263BF8);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v11;
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 40) = v19;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024(&qword_100263B60);
      unint64_t v20 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v24;
      sub_1001AEF94(a1, v21 + v20, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      sub_1001518C8(v21, (uint64_t)&unk_10023BA78, (uint64_t)sub_1001AE6D0, (uint64_t)&unk_10023BA90);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018E708(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10015F0D4();
  uint64_t v26 = a1;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v23 = v7;
  swift_release();
  LODWORD(v24) = static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D0A20;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000AA5E0();
  *(void *)(v10 + 64) = v11;
  strcpy((char *)(v10 + 32), "MagicSettings");
  *(_WORD *)(v10 + 46) = -4864;
  sub_1001AEF94(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v12 = String.init<A>(describing:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v11;
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v15 = swift_allocObject();
    long long v24 = xmmword_1001CFDB0;
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v27 = Strong;
    uint64_t v28 = v17;
    sub_1000AA024(&qword_100263BF8);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v11;
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 40) = v19;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024(&qword_100263B58);
      unint64_t v20 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v24;
      sub_1001AEF94(a1, v21 + v20, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      sub_1001518C8(v21, (uint64_t)&unk_10023B7A8, (uint64_t)sub_1001ADA98, (uint64_t)&unk_10023B7C0);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018EBA4(void *a1, char a2)
{
  sub_10015F0D4();
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001D0A20;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v4 + 64) = v5;
  strcpy((char *)(v4 + 32), "AADeviceRecord");
  *(unsigned char *)(v4 + 47) = -18;
  type metadata accessor for AADeviceRecord();
  id v14 = a1;
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
    swift_unknownObjectWeakLoadStrong();
    sub_1000AA024(&qword_100263BF8);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = v5;
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1001D2D40;
      *(void *)(v12 + 32) = v14;
      uint64_t v15 = v12;
      specialized Array._endMutation()();
      id v13 = v14;
      sub_1001518C8(v15, (uint64_t)&unk_10023BAC8, (uint64_t)sub_1001AE740, (uint64_t)&unk_10023BAE0);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018EF94(void *a1, char a2)
{
  sub_10015F0D4();
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001D0A20;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = 0xD000000000000011;
  *(void *)(v4 + 40) = 0x80000001001FDE80;
  type metadata accessor for AAProxCardsRecord();
  id v14 = a1;
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
    swift_unknownObjectWeakLoadStrong();
    sub_1000AA024(&qword_100263BF8);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = v5;
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1001D2D40;
      *(void *)(v12 + 32) = v14;
      uint64_t v15 = v12;
      specialized Array._endMutation()();
      id v13 = v14;
      sub_1001518C8(v15, (uint64_t)&unk_10023BB18, (uint64_t)sub_1001AE794, (uint64_t)&unk_10023BB30);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018F37C(void *a1, char a2)
{
  sub_10015F0D4();
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001D0A20;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000AA5E0();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 32) = 0xD000000000000013;
  *(void *)(v4 + 40) = 0x80000001001F7610;
  type metadata accessor for HMDeviceCloudRecord();
  id v14 = a1;
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v7;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1001CFDB0;
    swift_unknownObjectWeakLoadStrong();
    sub_1000AA024(&qword_100263BF8);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = v5;
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1001D2D40;
      *(void *)(v12 + 32) = v14;
      uint64_t v15 = v12;
      specialized Array._endMutation()();
      id v13 = v14;
      sub_1001518C8(v15, (uint64_t)&unk_10023BB68, (uint64_t)sub_1001AE7C8, (uint64_t)&unk_10023BB80);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018F764(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LegacyAccountMagicKeysRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10015F0D4();
  uint64_t v26 = a1;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v23 = v7;
  swift_release();
  LODWORD(v24) = static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001D0A20;
  *(void *)(v10 + 56) = &type metadata for String;
  unint64_t v11 = sub_1000AA5E0();
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = 0x654B72657473614DLL;
  *(void *)(v10 + 40) = 0xE900000000000079;
  sub_1001AEF94(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
  uint64_t v12 = String.init<A>(describing:)();
  *(void *)(v10 + 96) = &type metadata for String;
  *(void *)(v10 + 104) = v11;
  *(void *)(v10 + 72) = v12;
  *(void *)(v10 + 80) = v13;
  os_log(_:dso:log:_:_:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (a2)
  {
    static os_log_type_t.default.getter();
    uint64_t v15 = swift_allocObject();
    long long v24 = xmmword_1001CFDB0;
    *(_OWORD *)(v15 + 16) = xmmword_1001CFDB0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v17 = *(void *)(v3 + 32);
    uint64_t v27 = Strong;
    uint64_t v28 = v17;
    sub_1000AA024(&qword_100263BF8);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v11;
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 40) = v19;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000AA024((uint64_t *)&unk_100263C00);
      unint64_t v20 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v24;
      sub_1001AEF94(a1, v21 + v20, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
      sub_1001518C8(v21, (uint64_t)&unk_10023B9D8, (uint64_t)sub_1001AE630, (uint64_t)&unk_10023B9F0);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10018FBF8()
{
  return notify_post("BTCloudServicesSoundProfileChangedNotification");
}

uint64_t sub_10018FC04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1000AA024((uint64_t *)&unk_100261A00);
  __chkstk_darwin(v7 - 8);
  uint64_t v89 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)&v84 - v10;
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v84 - v12;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v97 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v85 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v84 - v16;
  __chkstk_darwin(v17);
  char v87 = (char *)&v84 - v18;
  __chkstk_darwin(v19);
  uint64_t v88 = (char *)&v84 - v20;
  __chkstk_darwin(v21);
  char v90 = (char *)&v84 - v22;
  __chkstk_darwin(v23);
  BOOL v91 = (char *)&v84 - v24;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v84 - v26;
  uint64_t v28 = &unk_100261000;
  uint64_t v95 = v3;
  uint64_t v96 = a2;
  uint64_t v98 = a1;
  if (a3)
  {
    uint64_t v100 = &type metadata for AudioAccessoryFeatures;
    unint64_t v29 = sub_1000AE4C4();
    unint64_t v101 = v29;
    char v30 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v99);
    if (v30)
    {
      uint64_t v100 = &type metadata for AudioAccessoryFeatures;
      unint64_t v101 = v29;
      char v31 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v99);
      if (v31)
      {
        if ([self isFirstUnlocked])
        {
          sub_10015F0D4();
          if (qword_100261918 != -1) {
            swift_once();
          }
          uint64_t v32 = sub_1000AA0CC(v13, (uint64_t)qword_10026AD60);
          uint64_t v33 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v27, v32, v13);
          uint64_t v34 = (void *)sub_10015D120((uint64_t)v27, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
          swift_release();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v13);
        }
        else
        {
          static os_log_type_t.error.getter();
          if (qword_100261948 != -1) {
            swift_once();
          }
          uint64_t v34 = _swiftEmptyArrayStorage;
          os_log(_:dso:log:_:_:)();
        }
      }
      else
      {
        uint64_t v34 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();
      uint64_t v36 = v98;
      unint64_t v37 = sub_100196BC8((unint64_t)v34, v98, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37)
      {
        uint64_t v94 = 0;
        static os_log_type_t.default.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_1001CFDB0;
        id v39 = v37;
        id v40 = [v39 description];
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = sub_1000AA5E0();
        *(void *)(v38 + 32) = v41;
        *(void *)(v38 + 40) = v43;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_1000AA024(&qword_100263AE0);
          uint64_t v44 = swift_allocObject();
          *(_OWORD *)(v44 + 16) = xmmword_1001D2D40;
          *(void *)(v44 + 32) = v39;
          v99[0] = v44;
          specialized Array._endMutation()();
          uint64_t v45 = v99[0];
          id v46 = v39;
          sub_1001518C8(v45, (uint64_t)&unk_10023B528, (uint64_t)sub_1001AD8C8, (uint64_t)&unk_10023B540);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }

        uint64_t v35 = v36;
        uint64_t v28 = (void *)&unk_100261000;
      }
      else
      {
        uint64_t v35 = v36;
      }
    }
    else
    {
      uint64_t v35 = a1;
    }
  }
  else
  {
    uint64_t v35 = a1;
  }
  uint64_t v47 = sub_10015F0D4();
  if (v28[291] != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1000AA0CC(v13, (uint64_t)qword_10026AD60);
  uint64_t v49 = v97;
  uint64_t v50 = v27;
  uint64_t v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 16);
  uint64_t v51 = v94(v27, v48, v13);
  __chkstk_darwin(v51);
  *(&v84 - 4) = v47;
  *(&v84 - 3) = v35;
  uint64_t v52 = v96;
  *(&v84 - 2) = v96;
  *(&v84 - 1) = (uint64_t)v27;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v49 + 8);
  v53(v50, v13);
  uint64_t v54 = sub_10015F0D4();
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v55 = sub_1000AA0CC(v13, (uint64_t)qword_10026AB00);
  uint64_t v56 = v94(v50, v55, v13);
  __chkstk_darwin(v56);
  uint64_t v57 = v98;
  *(&v84 - 4) = v54;
  *(&v84 - 3) = v57;
  *(&v84 - 2) = v52;
  *(&v84 - 1) = (uint64_t)v50;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  v53(v50, v13);
  uint64_t v58 = sub_10015F0D4();
  uint64_t v59 = v13;
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_1000AA0CC(v13, (uint64_t)qword_10026AC28);
  uint64_t v61 = v94(v50, v60, v13);
  __chkstk_darwin(v61);
  uint64_t v62 = v98;
  *(&v84 - 4) = v58;
  *(&v84 - 3) = v62;
  *(&v84 - 2) = v96;
  *(&v84 - 1) = (uint64_t)v50;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  v53(v50, v13);
  uint64_t v63 = sub_10015F0D4();
  uint64_t v64 = v93;
  URL.init(string:)();
  uint64_t v65 = v97;
  uint64_t v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
  uint64_t result = v94(v64, 1, v13);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v97 = v65 + 32;
  uint64_t v68 = v90;
  v67(v90, v64, v59);
  uint64_t v69 = v91;
  URL.appendingPathComponent(_:)();
  uint64_t v70 = ((uint64_t (*)(char *, uint64_t))v53)(v68, v59);
  __chkstk_darwin(v70);
  uint64_t v71 = v98;
  *(&v84 - 4) = v63;
  *(&v84 - 3) = v71;
  *(&v84 - 2) = v96;
  *(&v84 - 1) = (uint64_t)v69;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  v53(v69, v59);
  uint64_t v72 = sub_10015F0D4();
  uint64_t v73 = v92;
  URL.init(string:)();
  uint64_t result = v94(v73, 1, v59);
  if (result == 1)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v74 = v87;
  v67(v87, v73, v59);
  uint64_t v75 = v88;
  URL.appendingPathComponent(_:)();
  uint64_t v76 = ((uint64_t (*)(char *, uint64_t))v53)(v74, v59);
  __chkstk_darwin(v76);
  uint64_t v77 = v98;
  *(&v84 - 4) = v72;
  *(&v84 - 3) = v77;
  *(&v84 - 2) = v96;
  *(&v84 - 1) = (uint64_t)v75;
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  v53(v75, v59);
  uint64_t v78 = sub_10015F0D4();
  uint64_t v79 = v89;
  URL.init(string:)();
  uint64_t result = v94(v79, 1, v59);
  if (result != 1)
  {
    uint64_t v80 = v85;
    v67(v85, v79, v59);
    uint64_t v81 = v86;
    URL.appendingPathComponent(_:)();
    uint64_t v82 = ((uint64_t (*)(char *, uint64_t))v53)(v80, v59);
    __chkstk_darwin(v82);
    uint64_t v83 = v98;
    *(&v84 - 4) = v78;
    *(&v84 - 3) = v83;
    *(&v84 - 2) = v96;
    *(&v84 - 1) = (uint64_t)v81;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v53)(v81, v59);
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1001908A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100190B5C(a1, a2, a3, (void *)*v3, &qword_100263B58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001908E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100190B5C(a1, a2, a3, (void *)*v3, &qword_100263B60, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_10019091C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100190B5C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100263B30, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100190958(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001909F0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100190978(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100190B5C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100263BC0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001909B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100190B5C(a1, a2, a3, (void *)*v3, &qword_100263B98, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1001909F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AA024((uint64_t *)&unk_100263CB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100190B5C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AA024(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_100190DA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AA024(&qword_100263AE0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  unint64_t v6 = sub_1001966B8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1001B0984();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_100190E94(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_1000AA024(&qword_100263AE0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_10019642C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

unsigned __int8 *sub_100190F8C(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1001910B4(a1, a2, a3);
}

uint64_t sub_100190FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100190FBC(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_1001910B4);
}

uint64_t sub_100190FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1001915AC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v9 = (void *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1001910B4(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  unint64_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_100191330(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1001915AC()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_10019162C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10019162C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100191784(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_100191884(v9, 0),
          unint64_t v12 = sub_1001918EC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100191784(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100191B00(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100191B00(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

void *sub_100191884(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AA024((uint64_t *)&unk_100262B50);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1001918EC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    void *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100191B00(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_100191B00(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100191B00(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

void sub_100191B7C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SoundProfileRecord() - 8);
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v3 = (void *)sub_100196660(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100191CA8(v5);
  *a1 = v3;
}

uint64_t sub_100191C24(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v4 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_1001966A4(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return specialized ContiguousArray._endMutation()();
}

void sub_100191CA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v135 = type metadata accessor for SoundProfileRecord();
  uint64_t v128 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v125 = (uint64_t)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v136 = (uint64_t)&v119 - v6;
  __chkstk_darwin(v7);
  uint64_t v132 = (uint64_t)&v119 - v8;
  __chkstk_darwin(v9);
  uint64_t v131 = (uint64_t)&v119 - v10;
  Swift::Int v11 = a1[1];
  Swift::Int v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0) {
      goto LABEL_142;
    }
    if (v11) {
      sub_1001945DC(0, v11, 1, a1);
    }
    return;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_150;
  }
  Swift::Int v121 = v12;
  if (v11 < 2)
  {
    unint64_t v17 = &_swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    if (v11 != 1)
    {
      unint64_t v20 = *((void *)&_swiftEmptyArrayStorage + 2);
      char v19 = (char *)&_swiftEmptyArrayStorage;
LABEL_107:
      uint64_t v120 = v17;
      if (v20 >= 2)
      {
        uint64_t v111 = *a1;
        do
        {
          unint64_t v112 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_137;
          }
          if (!v111) {
            goto LABEL_149;
          }
          uint64_t v113 = v19;
          uint64_t v114 = v19 + 32;
          uint64_t v115 = *(void *)&v19[16 * v112 + 32];
          uint64_t v116 = *(void *)&v19[16 * v20 + 24];
          sub_100194E08(v111 + *(void *)(v128 + 72) * v115, v111 + *(void *)(v128 + 72) * *(void *)&v114[16 * v20 - 16], v111 + *(void *)(v128 + 72) * v116, v127);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_1001962E0((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_139;
          }
          uint64_t v117 = &v113[16 * v112 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v113 + 2);
          if (v20 > v118) {
            goto LABEL_140;
          }
          char v19 = v113;
          memmove(&v113[16 * v20 + 16], &v113[16 * v20 + 32], 16 * (v118 - v20));
          *((void *)v113 + 2) = v118 - 1;
          unint64_t v20 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v120[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v120 = &_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v120 = (void *)v15;
    unint64_t v127 = v15 + ((v16 + 32) & ~v16);
  }
  Swift::Int v18 = 0;
  char v19 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v134 = a1;
  while (1)
  {
    Swift::Int v21 = v18;
    Swift::Int v22 = v18 + 1;
    Swift::Int v126 = v18;
    if (v18 + 1 >= v11)
    {
      Swift::Int v35 = v18 + 1;
      goto LABEL_59;
    }
    uint64_t v123 = v2;
    Swift::Int v23 = *a1;
    Swift::Int v24 = *(void *)(v128 + 72);
    uint64_t v25 = v131;
    sub_1001AEF94(*a1 + v24 * v22, v131, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    uint64_t v26 = v132;
    sub_1001AEF94(v23 + v24 * v21, v132, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    LODWORD(v133) = static Date.> infix(_:_:)();
    sub_1001AEFFC(v26, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    sub_1001AEFFC(v25, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
    Swift::Int v130 = v23;
    Swift::Int v137 = v24;
    if (v21 + 2 >= v11)
    {
      Swift::Int v29 = v21 + 2;
    }
    else
    {
      uint64_t v122 = v19;
      uint64_t v27 = v24 * v22;
      Swift::Int v28 = v23;
      Swift::Int v29 = v21 + 2;
      uint64_t v30 = v24 * (v21 + 2);
      while (1)
      {
        Swift::Int v31 = v11;
        uint64_t v32 = v131;
        sub_1001AEF94(v28 + v30, v131, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        uint64_t v33 = v132;
        sub_1001AEF94(v28 + v27, v132, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        int v34 = static Date.> infix(_:_:)();
        sub_1001AEFFC(v33, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        sub_1001AEFFC(v32, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        if ((v133 ^ v34)) {
          break;
        }
        v28 += v137;
        ++v29;
        Swift::Int v11 = v31;
        if (v31 == v29)
        {
          Swift::Int v29 = v31;
          char v19 = v122;
          Swift::Int v21 = v126;
          goto LABEL_25;
        }
      }
      char v19 = v122;
      Swift::Int v21 = v126;
      Swift::Int v11 = v31;
    }
LABEL_25:
    a1 = v134;
    if ((v133 & 1) == 0)
    {
      Swift::Int v35 = v29;
      goto LABEL_39;
    }
    if (v29 < v21) {
      goto LABEL_143;
    }
    Swift::Int v35 = v29;
    if (v21 < v29) {
      break;
    }
LABEL_39:
    uint64_t v2 = v123;
    if (v35 < v11) {
      goto LABEL_42;
    }
LABEL_59:
    if (v35 < v21) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v133 = v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v19 = sub_100195FE8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v60 = *((void *)v19 + 2);
    unint64_t v59 = *((void *)v19 + 3);
    unint64_t v20 = v60 + 1;
    if (v60 >= v59 >> 1) {
      char v19 = sub_100195FE8((char *)(v59 > 1), v60 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v20;
    uint64_t v61 = v19 + 32;
    uint64_t v62 = &v19[16 * v60 + 32];
    Swift::Int v63 = v133;
    *(void *)uint64_t v62 = v21;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v69 = &v61[16 * v20];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_125;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_126;
          }
          unint64_t v76 = v20 - 2;
          uint64_t v77 = &v61[16 * v20 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_128;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_131;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_135;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_96;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v93 = *((void *)v19 + 4);
            uint64_t v94 = *((void *)v19 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_90;
          }
          uint64_t v66 = *((void *)v19 + 4);
          uint64_t v65 = *((void *)v19 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_127;
        }
        unint64_t v76 = v20 - 2;
        uint64_t v82 = &v61[16 * v20 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_130;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_133;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_134;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_96:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v87) {
          goto LABEL_129;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_132;
        }
        if (v98 < v86) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v20)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v104 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v105 = v19;
        char v106 = &v61[16 * v103];
        uint64_t v107 = *(void *)v106;
        uint64_t v108 = &v61[16 * v64];
        uint64_t v109 = *((void *)v108 + 1);
        sub_100194E08(v104 + *(void *)(v128 + 72) * *(void *)v106, v104 + *(void *)(v128 + 72) * *(void *)v108, v104 + *(void *)(v128 + 72) * v109, v127);
        if (v2) {
          goto LABEL_118;
        }
        if (v109 < v107) {
          goto LABEL_122;
        }
        if (v64 > *((void *)v105 + 2)) {
          goto LABEL_123;
        }
        *(void *)char v106 = v107;
        *(void *)&v61[16 * v103 + 8] = v109;
        unint64_t v110 = *((void *)v105 + 2);
        if (v64 >= v110) {
          goto LABEL_124;
        }
        char v19 = v105;
        unint64_t v20 = v110 - 1;
        memmove(&v61[16 * v64], v108 + 16, 16 * (v110 - 1 - v64));
        *((void *)v105 + 2) = v110 - 1;
        a1 = v134;
        if (v110 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_15:
    Swift::Int v11 = a1[1];
    Swift::Int v18 = v133;
    if (v133 >= v11)
    {
      unint64_t v17 = v120;
      goto LABEL_107;
    }
  }
  Swift::Int v133 = v11;
  uint64_t v122 = v19;
  uint64_t v36 = 0;
  Swift::Int v37 = v137;
  uint64_t v38 = v137 * (v29 - 1);
  Swift::Int v39 = v29 * v137;
  Swift::Int v40 = v21;
  uint64_t v41 = v21 * v137;
  do
  {
    if (v40 != v35 + v36 - 1)
    {
      Swift::Int v42 = v130;
      if (!v130) {
        goto LABEL_148;
      }
      unint64_t v43 = v130 + v41;
      sub_1001AF05C(v130 + v41, v125, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      if (v41 < v38 || v43 >= v42 + v39)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v41 != v38)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      sub_1001AF05C(v125, v42 + v38, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      a1 = v134;
      Swift::Int v35 = v29;
      Swift::Int v37 = v137;
    }
    ++v40;
    --v36;
    v38 -= v37;
    v39 -= v37;
    v41 += v37;
  }
  while (v40 < v35 + v36);
  char v19 = v122;
  uint64_t v2 = v123;
  Swift::Int v21 = v126;
  Swift::Int v11 = v133;
  if (v35 >= v133) {
    goto LABEL_59;
  }
LABEL_42:
  if (__OFSUB__(v35, v21)) {
    goto LABEL_141;
  }
  if (v35 - v21 >= v121) {
    goto LABEL_59;
  }
  if (__OFADD__(v21, v121)) {
    goto LABEL_144;
  }
  if (v21 + v121 >= v11) {
    Swift::Int v44 = v11;
  }
  else {
    Swift::Int v44 = v21 + v121;
  }
  if (v44 >= v21)
  {
    if (v35 != v44)
    {
      uint64_t v122 = v19;
      uint64_t v123 = v2;
      uint64_t v45 = *(void *)(v128 + 72);
      uint64_t v46 = v45 * (v35 - 1);
      uint64_t v129 = v45;
      Swift::Int v47 = v35 * v45;
      Swift::Int v124 = v44;
      do
      {
        uint64_t v49 = 0;
        Swift::Int v133 = v35;
        Swift::Int v130 = v47;
        while (1)
        {
          Swift::Int v137 = v21;
          uint64_t v50 = *a1;
          uint64_t v51 = v131;
          sub_1001AEF94(v47 + v49 + *a1, v131, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          uint64_t v52 = v46;
          uint64_t v53 = v46 + v49 + v50;
          uint64_t v54 = a1;
          uint64_t v55 = v132;
          sub_1001AEF94(v53, v132, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          LOBYTE(v50) = static Date.> infix(_:_:)();
          sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          sub_1001AEFFC(v51, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          if ((v50 & 1) == 0) {
            break;
          }
          uint64_t v56 = *v54;
          if (!*v54) {
            goto LABEL_146;
          }
          Swift::Int v47 = v130;
          uint64_t v46 = v52;
          uint64_t v57 = v56 + v52 + v49;
          sub_1001AF05C(v56 + v130 + v49, v136, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          swift_arrayInitWithTakeFrontToBack();
          sub_1001AF05C(v136, v57, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          v49 -= v129;
          Swift::Int v21 = v137 + 1;
          Swift::Int v48 = v133;
          a1 = v134;
          if (v133 == v137 + 1) {
            goto LABEL_52;
          }
        }
        Swift::Int v48 = v133;
        a1 = v54;
        uint64_t v46 = v52;
        Swift::Int v47 = v130;
LABEL_52:
        Swift::Int v35 = v48 + 1;
        v46 += v129;
        v47 += v129;
        Swift::Int v21 = v126;
      }
      while (v35 != v124);
      Swift::Int v35 = v124;
      char v19 = v122;
      uint64_t v2 = v123;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10019273C(uint64_t *a1)
{
  uint64_t v2 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v147 - v6;
  __chkstk_darwin(v8);
  uint64_t v166 = (uint64_t)&v147 - v9;
  __chkstk_darwin(v10);
  Swift::Int v12 = (char *)&v147 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v165 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v168 = (char *)&v147 - v17;
  __chkstk_darwin(v18);
  uint64_t v164 = (char *)&v147 - v19;
  Swift::Int v20 = a1[1];
  Swift::Int v21 = _minimumMergeRunLength(_:)(v20);
  if (v21 >= v20)
  {
    if (v20 < 0) {
      goto LABEL_159;
    }
    if (v20) {
      sub_10019488C(0, v20, 1, a1);
    }
    return;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_168;
  }
  Swift::Int v151 = v21;
  long long v159 = v4;
  if (v20 < 2)
  {
    uint64_t v25 = (char *)_swiftEmptyArrayStorage;
    uint64_t v174 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v156 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v20 != 1)
    {
      unint64_t v89 = _swiftEmptyArrayStorage[2];
LABEL_124:
      uint64_t v140 = v157;
      if (v89 >= 2)
      {
        uint64_t v141 = *a1;
        do
        {
          unint64_t v142 = v89 - 2;
          if (v89 < 2) {
            goto LABEL_154;
          }
          if (!v141) {
            goto LABEL_167;
          }
          uint64_t v143 = *(void *)&v25[16 * v142 + 32];
          uint64_t v144 = *(void *)&v25[16 * v89 + 24];
          sub_1001952FC((id *)(v141 + 8 * v143), (id *)(v141 + 8 * *(void *)&v25[16 * v89 + 16]), v141 + 8 * v144, v156);
          if (v140) {
            break;
          }
          if (v144 < v143) {
            goto LABEL_155;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v25 = sub_1001962E0((uint64_t)v25);
          }
          if (v142 >= *((void *)v25 + 2)) {
            goto LABEL_156;
          }
          uint64_t v145 = &v25[16 * v142 + 32];
          *(void *)uint64_t v145 = v143;
          *((void *)v145 + 1) = v144;
          unint64_t v146 = *((void *)v25 + 2);
          if (v89 > v146) {
            goto LABEL_157;
          }
          memmove(&v25[16 * v89 + 16], &v25[16 * v89 + 32], 16 * (v146 - v89));
          *((void *)v25 + 2) = v146 - 1;
          unint64_t v89 = v146 - 1;
        }
        while (v146 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
LABEL_137:
      *(void *)((v174 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v23 = v22 >> 1;
    sub_1000B66A0(0, (unint64_t *)&qword_100262960);
    uint64_t v24 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) = v23;
    uint64_t v156 = (id *)((v24 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v174 = v24;
  }
  Swift::Int v26 = 0;
  uint64_t v148 = a1;
  uint64_t v27 = *a1;
  uint64_t v170 = (void (**)(void))(v14 + 32);
  unsigned int v171 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v167 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  uint64_t v160 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v150 = v27 + 16;
  uint64_t v149 = v27 - 8;
  uint64_t v25 = (char *)_swiftEmptyArrayStorage;
  uint64_t v158 = v7;
  unint64_t v163 = v12;
  Swift::Int v152 = v20;
  uint64_t v162 = v27;
  while (1)
  {
    Swift::Int v28 = v26;
    Swift::Int v29 = v26 + 1;
    Swift::Int v154 = v26;
    if (v26 + 1 >= v20) {
      goto LABEL_31;
    }
    uint64_t v30 = *(void **)(v27 + 8 * v29);
    id v172 = *(id *)(v27 + 8 * v26);
    id v31 = v172;
    v173[0] = v30;
    id v32 = v30;
    id v33 = v31;
    uint64_t v34 = v157;
    int v35 = sub_100188818(v173, &v172);
    uint64_t v157 = v34;
    if (v34)
    {
      swift_bridgeObjectRelease();

      goto LABEL_137;
    }
    int v36 = v35;

    Swift::Int v29 = v28 + 2;
    if (v28 + 2 >= v20) {
      goto LABEL_23;
    }
    Swift::Int v37 = (void **)(v150 + 8 * v28);
    while (1)
    {
      uint64_t v38 = *v37;
      id v172 = *(v37 - 1);
      id v39 = v172;
      v173[0] = v38;
      id v40 = v38;
      id v41 = v39;
      uint64_t v42 = v157;
      int v43 = sub_100188818(v173, &v172);
      uint64_t v157 = v42;
      if (v42)
      {
        swift_bridgeObjectRelease();

        goto LABEL_137;
      }
      int v44 = v43;

      if ((v36 ^ v44)) {
        break;
      }
      ++v29;
      ++v37;
      Swift::Int v20 = v152;
      if (v152 == v29)
      {
        Swift::Int v29 = v152;
        goto LABEL_22;
      }
    }
    Swift::Int v20 = v152;
LABEL_22:
    Swift::Int v28 = v154;
LABEL_23:
    uint64_t v27 = v162;
    if (v36) {
      break;
    }
LABEL_31:
    if (v29 >= v20) {
      goto LABEL_70;
    }
    if (__OFSUB__(v29, v28)) {
      goto LABEL_160;
    }
    if (v29 - v28 >= v151) {
      goto LABEL_70;
    }
    if (__OFADD__(v28, v151)) {
      goto LABEL_161;
    }
    if (v28 + v151 >= v20) {
      Swift::Int v50 = v20;
    }
    else {
      Swift::Int v50 = v28 + v151;
    }
    if (v50 < v28)
    {
LABEL_162:
      __break(1u);
      goto LABEL_163;
    }
    if (v29 == v50) {
      goto LABEL_70;
    }
    uint64_t v147 = v25;
    uint64_t v51 = v149 + 8 * v29;
    Swift::Int v153 = v50;
    while (2)
    {
      uint64_t v53 = *(void **)(v27 + 8 * v29);
      Swift::Int v54 = v28;
      uint64_t v155 = v51;
      Swift::Int v161 = v29;
      while (1)
      {
        uint64_t v55 = *(void **)v51;
        id v56 = v53;
        id v57 = v55;
        id v58 = [v56 modificationDate];
        id v169 = v56;
        if (v58)
        {
          unint64_t v59 = v58;
          unint64_t v60 = v168;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v61 = *v170;
          uint64_t v62 = (uint64_t)v163;
          Swift::Int v63 = v60;
          unint64_t v64 = v170;
          ((void (*)(char *, char *, uint64_t))*v170)(v163, v63, v13);
          uint64_t v65 = *v171;
          (*v171)(v62, 0, 1, v13);
          if ((*v167)(v62, 1, v13) != 1)
          {
            ((void (*)(char *, uint64_t, uint64_t))v61)(v164, v62, v13);
            goto LABEL_55;
          }
          id v56 = v169;
        }
        else
        {
          uint64_t v65 = *v171;
          (*v171)((uint64_t)v163, 1, 1, v13);
          unint64_t v64 = v170;
        }
        id v66 = [v56 creationDate:v147];
        if (!v66)
        {
          uint64_t v70 = (uint64_t)v159;
          v65((uint64_t)v159, 1, 1, v13);
LABEL_53:
          static Date.now.getter();
          sub_1000AA894(v70, &qword_100261D90);
          unint64_t v64 = v170;
          goto LABEL_54;
        }
        uint64_t v67 = v66;
        char v68 = v168;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v69 = *v64;
        uint64_t v70 = (uint64_t)v159;
        ((void (*)(char *, char *, uint64_t))v69)(v159, v68, v13);
        v65(v70, 0, 1, v13);
        if ((*v167)(v70, 1, v13) == 1) {
          goto LABEL_53;
        }
        uint64_t v71 = v70;
        unint64_t v64 = v170;
        ((void (*)(char *, uint64_t, uint64_t))v69)(v164, v71, v13);
LABEL_54:
        sub_1000AA894((uint64_t)v163, &qword_100261D90);
LABEL_55:
        id v72 = [v57 modificationDate:v147];
        if (v72)
        {
          uint64_t v73 = v72;
          uint64_t v74 = v168;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          BOOL v75 = *v64;
          uint64_t v76 = v166;
          ((void (*)(uint64_t, char *, uint64_t))v75)(v166, v74, v13);
          v65(v76, 0, 1, v13);
          uint64_t v77 = v76;
          unint64_t v64 = v170;
          if ((*v167)(v77, 1, v13) != 1)
          {
            ((void (*)(char *, uint64_t, uint64_t))v75)(v165, v166, v13);
            goto LABEL_65;
          }
        }
        else
        {
          v65(v166, 1, 1, v13);
        }
        id v78 = [v57 creationDate];
        if (!v78)
        {
          uint64_t v81 = (uint64_t)v158;
          v65((uint64_t)v158, 1, 1, v13);
LABEL_63:
          static Date.now.getter();
          sub_1000AA894(v81, &qword_100261D90);
          goto LABEL_64;
        }
        uint64_t v79 = v78;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v80 = *v64;
        uint64_t v81 = (uint64_t)v158;
        (*v64)();
        v65(v81, 0, 1, v13);
        if ((*v167)(v81, 1, v13) == 1) {
          goto LABEL_63;
        }
        ((void (*)(char *, uint64_t, uint64_t))v80)(v165, v81, v13);
LABEL_64:
        sub_1000AA894(v166, &qword_100261D90);
LABEL_65:
        uint64_t v82 = v164;
        uint64_t v83 = v165;
        char v84 = static Date.> infix(_:_:)();
        BOOL v85 = *v160;
        (*v160)(v83, v13);
        v85(v82, v13);

        if ((v84 & 1) == 0) {
          break;
        }
        uint64_t v27 = v162;
        if (!v162) {
          goto LABEL_164;
        }
        uint64_t v86 = *(void **)v51;
        uint64_t v53 = *(void **)(v51 + 8);
        *(void *)uint64_t v51 = v53;
        *(void *)(v51 + 8) = v86;
        v51 -= 8;
        ++v54;
        Swift::Int v52 = v161;
        if (v161 == v54) {
          goto LABEL_42;
        }
      }
      Swift::Int v52 = v161;
      uint64_t v27 = v162;
LABEL_42:
      Swift::Int v29 = v52 + 1;
      Swift::Int v28 = v154;
      uint64_t v51 = v155 + 8;
      if (v29 != v153) {
        continue;
      }
      break;
    }
    Swift::Int v29 = v153;
    uint64_t v25 = v147;
LABEL_70:
    if (v29 < v28) {
      goto LABEL_158;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = sub_100195FE8(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v88 = *((void *)v25 + 2);
    unint64_t v87 = *((void *)v25 + 3);
    unint64_t v89 = v88 + 1;
    uint64_t v27 = v162;
    if (v88 >= v87 >> 1)
    {
      uint64_t v139 = sub_100195FE8((char *)(v87 > 1), v88 + 1, 1, v25);
      uint64_t v27 = v162;
      uint64_t v25 = v139;
    }
    *((void *)v25 + 2) = v89;
    uint64_t v90 = &v25[16 * v88 + 32];
    *(void *)uint64_t v90 = v28;
    *((void *)v90 + 1) = v29;
    Swift::Int v161 = v29;
    if (v88)
    {
      uint64_t v91 = v25 + 32;
      while (1)
      {
        unint64_t v92 = v89 - 1;
        if (v89 >= 4)
        {
          uint64_t v97 = &v91[16 * v89];
          uint64_t v98 = *((void *)v97 - 8);
          uint64_t v99 = *((void *)v97 - 7);
          BOOL v103 = __OFSUB__(v99, v98);
          uint64_t v100 = v99 - v98;
          if (v103) {
            goto LABEL_143;
          }
          uint64_t v102 = *((void *)v97 - 6);
          uint64_t v101 = *((void *)v97 - 5);
          BOOL v103 = __OFSUB__(v101, v102);
          uint64_t v95 = v101 - v102;
          char v96 = v103;
          if (v103) {
            goto LABEL_144;
          }
          unint64_t v104 = v89 - 2;
          uint64_t v105 = &v91[16 * v89 - 32];
          uint64_t v107 = *(void *)v105;
          uint64_t v106 = *((void *)v105 + 1);
          BOOL v103 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v103) {
            goto LABEL_146;
          }
          BOOL v103 = __OFADD__(v95, v108);
          uint64_t v109 = v95 + v108;
          if (v103) {
            goto LABEL_149;
          }
          if (v109 >= v100)
          {
            unint64_t v127 = &v91[16 * v92];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            BOOL v103 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v103) {
              goto LABEL_153;
            }
            BOOL v120 = v95 < v130;
            goto LABEL_108;
          }
        }
        else
        {
          if (v89 != 3)
          {
            uint64_t v121 = *((void *)v25 + 4);
            uint64_t v122 = *((void *)v25 + 5);
            BOOL v103 = __OFSUB__(v122, v121);
            uint64_t v114 = v122 - v121;
            char v115 = v103;
            goto LABEL_102;
          }
          uint64_t v94 = *((void *)v25 + 4);
          uint64_t v93 = *((void *)v25 + 5);
          BOOL v103 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          char v96 = v103;
        }
        if (v96) {
          goto LABEL_145;
        }
        unint64_t v104 = v89 - 2;
        unint64_t v110 = &v91[16 * v89 - 32];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v113 = __OFSUB__(v111, v112);
        uint64_t v114 = v111 - v112;
        char v115 = v113;
        if (v113) {
          goto LABEL_148;
        }
        uint64_t v116 = &v91[16 * v92];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        BOOL v103 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v103) {
          goto LABEL_151;
        }
        if (__OFADD__(v114, v119)) {
          goto LABEL_152;
        }
        if (v114 + v119 >= v95)
        {
          BOOL v120 = v95 < v119;
LABEL_108:
          if (v120) {
            unint64_t v92 = v104;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v115) {
          goto LABEL_147;
        }
        uint64_t v123 = &v91[16 * v92];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v103 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v103) {
          goto LABEL_150;
        }
        if (v126 < v114) {
          goto LABEL_119;
        }
LABEL_110:
        unint64_t v131 = v92 - 1;
        if (v92 - 1 >= v89)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
          goto LABEL_162;
        }
        if (!v27) {
          goto LABEL_165;
        }
        uint64_t v132 = v25;
        Swift::Int v133 = &v91[16 * v131];
        uint64_t v134 = *(void *)v133;
        uint64_t v135 = &v91[16 * v92];
        uint64_t v136 = *((void *)v135 + 1);
        uint64_t v137 = v157;
        sub_1001952FC((id *)(v27 + 8 * *(void *)v133), (id *)(v27 + 8 * *(void *)v135), v27 + 8 * v136, v156);
        uint64_t v157 = v137;
        if (v137) {
          goto LABEL_135;
        }
        if (v136 < v134) {
          goto LABEL_140;
        }
        if (v92 > *((void *)v132 + 2)) {
          goto LABEL_141;
        }
        *(void *)Swift::Int v133 = v134;
        *(void *)&v91[16 * v131 + 8] = v136;
        unint64_t v138 = *((void *)v132 + 2);
        if (v92 >= v138) {
          goto LABEL_142;
        }
        uint64_t v25 = v132;
        unint64_t v89 = v138 - 1;
        memmove(&v91[16 * v92], v135 + 16, 16 * (v138 - 1 - v92));
        *((void *)v132 + 2) = v138 - 1;
        uint64_t v27 = v162;
        if (v138 <= 2) {
          goto LABEL_119;
        }
      }
    }
    unint64_t v89 = 1;
LABEL_119:
    Swift::Int v20 = v152;
    Swift::Int v26 = v161;
    if (v161 >= v152)
    {
      a1 = v148;
      goto LABEL_124;
    }
  }
  if (v29 >= v28)
  {
    if (v28 < v29)
    {
      uint64_t v45 = (uint64_t *)(v149 + 8 * v29);
      Swift::Int v46 = v29;
      Swift::Int v47 = v28;
      Swift::Int v48 = (uint64_t *)(v162 + 8 * v28);
      while (1)
      {
        if (v47 != --v46)
        {
          if (!v27) {
            goto LABEL_166;
          }
          uint64_t v49 = *v48;
          uint64_t *v48 = *v45;
          *uint64_t v45 = v49;
        }
        ++v47;
        --v45;
        ++v48;
        if (v47 >= v46) {
          goto LABEL_31;
        }
      }
    }
    goto LABEL_31;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001934B0(uint64_t *a1)
{
  uint64_t v2 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v178 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v178 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v178 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v178 - v12;
  __chkstk_darwin(v14);
  uint64_t v185 = (char *)&v178 - v15;
  __chkstk_darwin(v16);
  uint64_t v186 = (char *)&v178 - v17;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::Int v21 = (char *)&v178 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v209 = (char *)&v178 - v23;
  __chkstk_darwin(v24);
  char v191 = (char *)&v178 - v25;
  __chkstk_darwin(v26);
  uint64_t v196 = (char *)&v178 - v27;
  __chkstk_darwin(v28);
  char v184 = (char *)&v178 - v29;
  __chkstk_darwin(v30);
  uint64_t v206 = (char *)&v178 - v31;
  __chkstk_darwin(v32);
  uint64_t v187 = (char *)&v178 - v33;
  Swift::Int v34 = a1[1];
  Swift::Int v35 = _minimumMergeRunLength(_:)(v34);
  if (v35 >= v34)
  {
    if (v34 < 0) {
      goto LABEL_169;
    }
    if (v34) {
      sub_10019497C(0, v34, 1, a1);
    }
    return;
  }
  if (v34 >= 0) {
    uint64_t v36 = v34;
  }
  else {
    uint64_t v36 = v34 + 1;
  }
  if (v34 < -1) {
    goto LABEL_177;
  }
  Swift::Int v182 = v35;
  uint64_t v189 = v10;
  uint64_t v193 = (char *)v34;
  if (v34 < 2)
  {
    id v39 = (char *)_swiftEmptyArrayStorage;
    uint64_t v211 = (uint64_t)_swiftEmptyArrayStorage;
    unint64_t v197 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v34 != 1)
    {
      unint64_t v43 = _swiftEmptyArrayStorage[2];
LABEL_133:
      uint64_t v164 = v198;
      if (v43 >= 2)
      {
        uint64_t v165 = *a1;
        do
        {
          unint64_t v166 = v43 - 2;
          if (v43 < 2) {
            goto LABEL_164;
          }
          if (!v165) {
            goto LABEL_176;
          }
          unint64_t v167 = v43 - 1;
          uint64_t v168 = (uint64_t)v39;
          uint64_t v169 = *(void *)&v39[16 * v166 + 32];
          uint64_t v170 = *(void *)&v39[16 * v43 + 24];
          sub_100195634((char *)(v165 + 8 * v169), (void **)(v165 + 8 * *(void *)&v39[16 * v43 + 16]), (char *)(v165 + 8 * v170), v197);
          if (v164) {
            break;
          }
          if (v170 < v169) {
            goto LABEL_165;
          }
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unsigned int v171 = (char *)v168;
          }
          else {
            unsigned int v171 = sub_1001962E0(v168);
          }
          if (v166 >= *((void *)v171 + 2)) {
            goto LABEL_166;
          }
          id v172 = v171 + 32;
          uint64_t v173 = &v171[16 * v166 + 32];
          *(void *)uint64_t v173 = v169;
          *((void *)v173 + 1) = v170;
          unint64_t v174 = *((void *)v171 + 2);
          if (v43 > v174) {
            goto LABEL_167;
          }
          unint64_t v175 = &v172[16 * v43];
          size_t v176 = 16 * (v174 - v43);
          unint64_t v177 = v171;
          memmove(&v172[16 * v167], v175, v176);
          id v39 = v177;
          *((void *)v177 + 2) = v174 - 1;
          unint64_t v43 = v174 - 1;
        }
        while (v174 > 2);
      }
LABEL_146:
      swift_bridgeObjectRelease();
      *(void *)((v211 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v37 = v36 >> 1;
    sub_1000B66A0(0, (unint64_t *)&qword_100262960);
    uint64_t v38 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) = v37;
    unint64_t v197 = (void **)((v38 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v211 = v38;
  }
  uint64_t v40 = 0;
  uint64_t v179 = a1;
  uint64_t v41 = *a1;
  uint64_t v207 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v210 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v205 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  uint64_t v201 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v181 = v41 + 16;
  uint64_t v180 = v41 - 8;
  id v39 = (char *)_swiftEmptyArrayStorage;
  unint64_t v202 = v4;
  uint64_t v200 = v7;
  uint64_t v188 = v13;
  uint64_t v199 = v21;
  uint64_t v42 = v193;
  uint64_t v203 = v41;
  while (2)
  {
    uint64_t v44 = v40;
    uint64_t v45 = v40 + 1;
    uint64_t v194 = v40;
    if (v40 + 1 >= (uint64_t)v42) {
      goto LABEL_53;
    }
    uint64_t v183 = v39;
    Swift::Int v46 = *(void **)(v41 + 8 * v40);
    id v47 = *(id *)(v41 + 8 * v45);
    int64_t v204 = v46;
    id v48 = [v47 creationDate];
    uint64_t v49 = (uint64_t)v185;
    Swift::Int v50 = v207;
    if (v48)
    {
      uint64_t v51 = v48;
      Swift::Int v52 = v206;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v53 = *v50;
      uint64_t v54 = (uint64_t)v186;
      (*v50)(v186, v52, v18);
      uint64_t v208 = *v210;
      v208((char *)v54, 0, 1, v18);
      if ((*v205)(v54, 1, v18) != 1)
      {
        v53(v187, (char *)v54, v18);
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v54 = (uint64_t)v186;
      uint64_t v208 = *v210;
      v208(v186, 1, 1, v18);
    }
    static Date.now.getter();
    sub_1000AA894(v54, &qword_100261D90);
LABEL_21:
    id v55 = [v204 creationDate];
    id v56 = v184;
    if (!v55)
    {
      v208((char *)v49, 1, 1, v18);
      goto LABEL_25;
    }
    id v57 = v55;
    id v58 = v206;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v59 = *v50;
    (*v50)((char *)v49, v58, v18);
    v208((char *)v49, 0, 1, v18);
    if ((*v205)(v49, 1, v18) == 1)
    {
LABEL_25:
      static Date.now.getter();
      sub_1000AA894(v49, &qword_100261D90);
      goto LABEL_26;
    }
    v59(v56, (char *)v49, v18);
LABEL_26:
    unint64_t v60 = v187;
    LODWORD(v192) = static Date.> infix(_:_:)();
    uint64_t v61 = *v201;
    (*v201)(v56, v18);
    uint64_t v190 = v61;
    v61(v60, v18);

    uint64_t v44 = v194;
    uint64_t v45 = v194 + 2;
    if (v194 + 2 >= (uint64_t)v42) {
      goto LABEL_44;
    }
    int64_t v204 = (char *)(v194 + 2);
    uint64_t v62 = (id *)(v181 + 8 * v194);
    while (1)
    {
      Swift::Int v63 = *(v62 - 1);
      unint64_t v64 = (void **)*v62;
      id v65 = v63;
      uint64_t v195 = v64;
      id v66 = [v64 creationDate];
      if (v66)
      {
        uint64_t v67 = v66;
        char v68 = v206;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v69 = *v207;
        uint64_t v70 = (uint64_t)v188;
        (*v207)(v188, v68, v18);
        v208((char *)v70, 0, 1, v18);
        if ((*v205)(v70, 1, v18) != 1)
        {
          v69(v196, (char *)v70, v18);
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)v188;
        v208(v188, 1, 1, v18);
      }
      static Date.now.getter();
      sub_1000AA894(v70, &qword_100261D90);
LABEL_33:
      id v71 = [v65 creationDate];
      if (!v71)
      {
        uint64_t v75 = (uint64_t)v189;
        v208(v189, 1, 1, v18);
        uint64_t v76 = v191;
        goto LABEL_37;
      }
      id v72 = v71;
      uint64_t v73 = v206;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = *v207;
      uint64_t v75 = (uint64_t)v189;
      (*v207)(v189, v73, v18);
      v208((char *)v75, 0, 1, v18);
      if ((*v205)(v75, 1, v18) == 1)
      {
        uint64_t v76 = v191;
LABEL_37:
        uint64_t v77 = v195;
        static Date.now.getter();
        sub_1000AA894(v75, &qword_100261D90);
        goto LABEL_39;
      }
      uint64_t v76 = v191;
      v74(v191, (char *)v75, v18);
      uint64_t v77 = v195;
LABEL_39:
      id v78 = v196;
      int v79 = static Date.> infix(_:_:)();
      uint64_t v80 = v76;
      int v81 = v79;
      uint64_t v82 = v190;
      v190(v80, v18);
      v82(v78, v18);

      if ((v192 ^ v81)) {
        break;
      }
      ++v62;
      uint64_t v42 = v193;
      if (v193 == ++v204)
      {
        uint64_t v45 = (uint64_t)v193;
        goto LABEL_43;
      }
    }
    uint64_t v42 = v193;
    uint64_t v45 = (uint64_t)v204;
LABEL_43:
    uint64_t v44 = v194;
LABEL_44:
    id v39 = v183;
    uint64_t v41 = v203;
    if (v192)
    {
      if (v45 < v44) {
        goto LABEL_170;
      }
      if (v44 < v45)
      {
        uint64_t v83 = (uint64_t *)(v180 + 8 * v45);
        uint64_t v84 = v45;
        uint64_t v85 = v44;
        uint64_t v86 = (uint64_t *)(v203 + 8 * v44);
        do
        {
          if (v85 != --v84)
          {
            if (!v41) {
              goto LABEL_175;
            }
            uint64_t v87 = *v86;
            *uint64_t v86 = *v83;
            *uint64_t v83 = v87;
          }
          ++v85;
          --v83;
          ++v86;
        }
        while (v85 < v84);
      }
    }
LABEL_53:
    if (v45 >= (uint64_t)v42) {
      goto LABEL_82;
    }
    if (__OFSUB__(v45, v44)) {
      goto LABEL_168;
    }
    if (v45 - v44 >= v182) {
      goto LABEL_82;
    }
    if (__OFADD__(v44, v182)) {
      goto LABEL_171;
    }
    if (v44 + v182 >= (uint64_t)v42) {
      unint64_t v88 = v42;
    }
    else {
      unint64_t v88 = (char *)(v44 + v182);
    }
    if ((uint64_t)v88 >= v44)
    {
      if ((char *)v45 == v88) {
        goto LABEL_82;
      }
      uint64_t v183 = v39;
      unint64_t v89 = (void **)(v180 + 8 * v45);
      uint64_t v192 = v88;
      while (2)
      {
        int64_t v204 = (char *)v45;
        uint64_t v90 = *(void **)(v41 + 8 * v45);
        uint64_t v91 = (char *)v44;
        uint64_t v195 = v89;
        while (2)
        {
          unint64_t v92 = *v89;
          uint64_t v93 = v90;
          id v94 = v92;
          uint64_t v208 = v93;
          id v95 = [v93 creationDate];
          if (!v95)
          {
            uint64_t v100 = *v210;
            uint64_t v99 = (uint64_t)v200;
            (*v210)(v200, 1, 1, v18);
            goto LABEL_70;
          }
          char v96 = v95;
          uint64_t v97 = v206;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v98 = *v207;
          uint64_t v99 = (uint64_t)v200;
          (*v207)(v200, v97, v18);
          uint64_t v100 = *v210;
          (*v210)((char *)v99, 0, 1, v18);
          if ((*v205)(v99, 1, v18) == 1)
          {
LABEL_70:
            static Date.now.getter();
            sub_1000AA894(v99, &qword_100261D90);
          }
          else
          {
            v98(v209, (char *)v99, v18);
          }
          id v101 = [v94 creationDate];
          if (v101)
          {
            uint64_t v102 = v101;
            BOOL v103 = v206;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v104 = *v207;
            (*v207)(v4, v103, v18);
            v100(v4, 0, 1, v18);
            if ((*v205)((uint64_t)v4, 1, v18) != 1)
            {
              uint64_t v105 = v199;
              v104(v199, v4, v18);
              goto LABEL_77;
            }
          }
          else
          {
            v100(v4, 1, 1, v18);
          }
          uint64_t v105 = v199;
          static Date.now.getter();
          sub_1000AA894((uint64_t)v4, &qword_100261D90);
LABEL_77:
          uint64_t v106 = v209;
          char v107 = static Date.> infix(_:_:)();
          uint64_t v108 = *v201;
          (*v201)(v105, v18);
          v108(v106, v18);

          if (v107)
          {
            uint64_t v41 = v203;
            if (!v203) {
              goto LABEL_173;
            }
            uint64_t v109 = *v89;
            uint64_t v90 = v89[1];
            *unint64_t v89 = v90;
            v89[1] = v109;
            --v89;
            ++v91;
            uint64_t v4 = v202;
            if (v204 == v91) {
              goto LABEL_64;
            }
            continue;
          }
          break;
        }
        uint64_t v4 = v202;
        uint64_t v41 = v203;
LABEL_64:
        uint64_t v45 = (uint64_t)(v204 + 1);
        uint64_t v44 = v194;
        unint64_t v89 = v195 + 1;
        if (v204 + 1 != v192) {
          continue;
        }
        break;
      }
      uint64_t v45 = (uint64_t)v192;
      id v39 = v183;
LABEL_82:
      if (v45 < v44) {
        goto LABEL_163;
      }
      unint64_t v110 = v39;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        id v39 = v110;
      }
      else {
        id v39 = sub_100195FE8(0, *((void *)v110 + 2) + 1, 1, v110);
      }
      unint64_t v112 = *((void *)v39 + 2);
      unint64_t v111 = *((void *)v39 + 3);
      unint64_t v43 = v112 + 1;
      uint64_t v41 = v203;
      int64_t v204 = (char *)v45;
      if (v112 >= v111 >> 1)
      {
        unint64_t v163 = sub_100195FE8((char *)(v111 > 1), v112 + 1, 1, v39);
        uint64_t v41 = v203;
        id v39 = v163;
      }
      *((void *)v39 + 2) = v43;
      BOOL v113 = v39 + 32;
      uint64_t v114 = &v39[16 * v112 + 32];
      char v115 = v204;
      *(void *)uint64_t v114 = v44;
      *((void *)v114 + 1) = v115;
      if (v112)
      {
        while (2)
        {
          unint64_t v116 = v43 - 1;
          if (v43 >= 4)
          {
            uint64_t v121 = &v113[16 * v43];
            uint64_t v122 = *((void *)v121 - 8);
            uint64_t v123 = *((void *)v121 - 7);
            BOOL v127 = __OFSUB__(v123, v122);
            uint64_t v124 = v123 - v122;
            if (v127) {
              goto LABEL_152;
            }
            uint64_t v126 = *((void *)v121 - 6);
            uint64_t v125 = *((void *)v121 - 5);
            BOOL v127 = __OFSUB__(v125, v126);
            uint64_t v119 = v125 - v126;
            char v120 = v127;
            if (v127) {
              goto LABEL_153;
            }
            unint64_t v128 = v43 - 2;
            uint64_t v129 = &v113[16 * v43 - 32];
            uint64_t v131 = *(void *)v129;
            uint64_t v130 = *((void *)v129 + 1);
            BOOL v127 = __OFSUB__(v130, v131);
            uint64_t v132 = v130 - v131;
            if (v127) {
              goto LABEL_155;
            }
            BOOL v127 = __OFADD__(v119, v132);
            uint64_t v133 = v119 + v132;
            if (v127) {
              goto LABEL_158;
            }
            if (v133 >= v124)
            {
              Swift::Int v151 = &v113[16 * v116];
              uint64_t v153 = *(void *)v151;
              uint64_t v152 = *((void *)v151 + 1);
              BOOL v127 = __OFSUB__(v152, v153);
              uint64_t v154 = v152 - v153;
              if (v127) {
                goto LABEL_162;
              }
              BOOL v144 = v119 < v154;
            }
            else
            {
LABEL_101:
              if (v120) {
                goto LABEL_154;
              }
              unint64_t v128 = v43 - 2;
              uint64_t v134 = &v113[16 * v43 - 32];
              uint64_t v136 = *(void *)v134;
              uint64_t v135 = *((void *)v134 + 1);
              BOOL v137 = __OFSUB__(v135, v136);
              uint64_t v138 = v135 - v136;
              char v139 = v137;
              if (v137) {
                goto LABEL_157;
              }
              uint64_t v140 = &v113[16 * v116];
              uint64_t v142 = *(void *)v140;
              uint64_t v141 = *((void *)v140 + 1);
              BOOL v127 = __OFSUB__(v141, v142);
              uint64_t v143 = v141 - v142;
              if (v127) {
                goto LABEL_160;
              }
              if (__OFADD__(v138, v143)) {
                goto LABEL_161;
              }
              if (v138 + v143 < v119) {
                goto LABEL_113;
              }
              BOOL v144 = v119 < v143;
            }
            if (v144) {
              unint64_t v116 = v128;
            }
          }
          else
          {
            if (v43 == 3)
            {
              uint64_t v118 = *((void *)v39 + 4);
              uint64_t v117 = *((void *)v39 + 5);
              BOOL v127 = __OFSUB__(v117, v118);
              uint64_t v119 = v117 - v118;
              char v120 = v127;
              goto LABEL_101;
            }
            uint64_t v145 = *((void *)v39 + 4);
            uint64_t v146 = *((void *)v39 + 5);
            BOOL v127 = __OFSUB__(v146, v145);
            uint64_t v138 = v146 - v145;
            char v139 = v127;
LABEL_113:
            if (v139) {
              goto LABEL_156;
            }
            uint64_t v147 = &v113[16 * v116];
            uint64_t v149 = *(void *)v147;
            uint64_t v148 = *((void *)v147 + 1);
            BOOL v127 = __OFSUB__(v148, v149);
            uint64_t v150 = v148 - v149;
            if (v127) {
              goto LABEL_159;
            }
            if (v150 < v138) {
              goto LABEL_14;
            }
          }
          unint64_t v155 = v116 - 1;
          if (v116 - 1 >= v43)
          {
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }
          if (!v41) {
            goto LABEL_174;
          }
          uint64_t v156 = v39;
          uint64_t v157 = &v113[16 * v155];
          uint64_t v158 = *(void *)v157;
          long long v159 = &v113[16 * v116];
          uint64_t v160 = *((void *)v159 + 1);
          uint64_t v161 = v198;
          sub_100195634((char *)(v41 + 8 * *(void *)v157), (void **)(v41 + 8 * *(void *)v159), (char *)(v41 + 8 * v160), v197);
          uint64_t v198 = v161;
          if (v161) {
            goto LABEL_146;
          }
          if (v160 < v158) {
            goto LABEL_149;
          }
          if (v116 > *((void *)v156 + 2)) {
            goto LABEL_150;
          }
          *(void *)uint64_t v157 = v158;
          *(void *)&v113[16 * v155 + 8] = v160;
          unint64_t v162 = *((void *)v156 + 2);
          if (v116 >= v162) {
            goto LABEL_151;
          }
          unint64_t v43 = v162 - 1;
          memmove(&v113[16 * v116], v159 + 16, 16 * (v162 - 1 - v116));
          id v39 = v156;
          *((void *)v156 + 2) = v162 - 1;
          uint64_t v4 = v202;
          uint64_t v41 = v203;
          if (v162 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v43 = 1;
LABEL_14:
      uint64_t v42 = v193;
      uint64_t v40 = (uint64_t)v204;
      if ((uint64_t)v204 >= (uint64_t)v193)
      {
        a1 = v179;
        goto LABEL_133;
      }
      continue;
    }
    break;
  }
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001945DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = a1;
  uint64_t v27 = type metadata accessor for SoundProfileRecord();
  __chkstk_darwin(v27);
  uint64_t v28 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v26 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v30 = v15 * (v26 - 1);
    uint64_t v25 = v15;
    uint64_t v29 = v15 * v26;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v24;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = a4;
      sub_1001AEF94(v29 + v16 + *a4, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      sub_1001AEF94(v30 + v16 + v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      LOBYTE(v18) = static Date.> infix(_:_:)();
      sub_1001AEFFC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      sub_1001AEFFC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v30 += v25;
        v29 += v25;
        if (++v26 == v23) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v21 = v20 + v30 + v16;
      sub_1001AF05C(v20 + v29 + v16, v28, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      swift_arrayInitWithTakeFrontToBack();
      sub_1001AF05C(v28, v21, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
      v16 -= v25;
      ++v17;
      a4 = v19;
      if (v26 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_10019488C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = a1;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v9 = *(void **)(v7 + 8 * v5);
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v19 = v9;
      id v18 = *(id *)v10;
      id v11 = v18;
      id v12 = v9;
      id v13 = v11;
      char v14 = sub_100188818(&v19, &v18);

      if (v4) {
        break;
      }
      if (v14)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        id v15 = *(id *)v10;
        uint64_t v9 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v9;
        *(void *)(v10 + 8) = v15;
        v10 -= 8;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = a1;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

void sub_10019497C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v47 = a1;
  uint64_t v7 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v7 - 8);
  Swift::Int v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v45 - v10;
  uint64_t v12 = type metadata accessor for Date();
  __chkstk_darwin(v12);
  char v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v56 = (char *)&v45 - v16;
  __chkstk_darwin(v17);
  uint64_t v49 = (char *)&v45 - v19;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *a4;
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    unint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    id v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    Swift::Int v50 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v51 = v14;
    uint64_t v53 = v20;
    uint64_t v22 = v20 + 8 * a3 - 8;
    id v57 = (void (**)(char *, char *, uint64_t))(v18 + 32);
LABEL_5:
    uint64_t v23 = *(void **)(v53 + 8 * a3);
    uint64_t v24 = v47;
    uint64_t v48 = v22;
    uint64_t v25 = v49;
    uint64_t v54 = a3;
    while (1)
    {
      uint64_t v26 = *(void **)v22;
      id v27 = v23;
      id v60 = v26;
      id v58 = v27;
      id v28 = [v27 creationDate];
      if (v28)
      {
        uint64_t v29 = v28;
        uint64_t v30 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = *v21;
        (*v21)(v11, v30, v12);
        uint64_t v32 = *v59;
        (*v59)(v11, 0, 1, v12);
        if ((*v55)(v11, 1, v12) != 1)
        {
          v31(v25, v11, v12);
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v32 = *v59;
        (*v59)(v11, 1, 1, v12);
      }
      static Date.now.getter();
      sub_1000AA894((uint64_t)v11, &qword_100261D90);
LABEL_11:
      uint64_t v33 = v11;
      id v34 = [v60 creationDate];
      if (v34)
      {
        Swift::Int v35 = v34;
        uint64_t v36 = v56;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v37 = *v57;
        uint64_t v38 = (uint64_t)v52;
        id v39 = v36;
        uint64_t v25 = v49;
        (*v57)(v52, v39, v12);
        v32((char *)v38, 0, 1, v12);
        if ((*v55)((char *)v38, 1, v12) != 1)
        {
          uint64_t v40 = v51;
          v37(v51, (char *)v38, v12);
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v38 = (uint64_t)v52;
        v32(v52, 1, 1, v12);
      }
      uint64_t v40 = v51;
      static Date.now.getter();
      sub_1000AA894(v38, &qword_100261D90);
LABEL_16:
      char v41 = static Date.> infix(_:_:)();
      uint64_t v42 = *v50;
      (*v50)(v40, v12);
      v42(v25, v12);

      uint64_t v43 = v54;
      id v11 = v33;
      uint64_t v21 = v57;
      if ((v41 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v53)
      {
        __break(1u);
        return;
      }
      uint64_t v44 = *(void **)v22;
      uint64_t v23 = *(void **)(v22 + 8);
      *(void *)uint64_t v22 = v23;
      *(void *)(v22 + 8) = v44;
      v22 -= 8;
      if (v43 == ++v24)
      {
LABEL_4:
        a3 = v43 + 1;
        uint64_t v22 = v48 + 8;
        if (a3 == v46) {
          return;
        }
        goto LABEL_5;
      }
    }
  }
}

uint64_t sub_100194E08(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = type metadata accessor for SoundProfileRecord();
  __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v28 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v29 = a3 + v28;
          sub_1001AEF94(v26 + v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          unint64_t v30 = a2 + v28;
          unint64_t v31 = a3;
          uint64_t v32 = (uint64_t)v11;
          uint64_t v33 = v44;
          sub_1001AEF94(a2 + v28, v44, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          char v34 = static Date.> infix(_:_:)();
          uint64_t v35 = v33;
          id v11 = (char *)v32;
          sub_1001AEFFC(v35, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          sub_1001AEFFC(v32, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
          if (v34)
          {
            if (v31 < a2 || v29 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              BOOL v36 = v31 == a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
              if (!v36) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v48 += v28;
          }
          else
          {
            unint64_t v39 = v46;
            v46 += v28;
            if (v31 < v39 || v29 >= v39)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v30 = a2;
              unint64_t v37 = v42;
              unint64_t v38 = v43;
            }
            else
            {
              unint64_t v38 = v43;
              if (v31 != v39) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v30 = a2;
              unint64_t v37 = v42;
            }
          }
          unint64_t v26 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v30;
          a3 = v29;
        }
        while (v30 > v38);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1001AEF94(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        uint64_t v21 = v44;
        sub_1001AEF94(a4, v44, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        char v22 = static Date.> infix(_:_:)();
        sub_1001AEFFC(v21, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        sub_1001AEFFC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
        unint64_t v23 = v48;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v48 < a2 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v47 + v13;
          if (v48 < v47 || v48 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v47 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v48 = v23 + v13;
        a4 = v47;
        if (v47 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_1001960E4(&v48, &v47, (uint64_t *)&v46);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001952FC(id *__src, id *a2, unint64_t a3, id *__dst)
{
  uint64_t v35 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v41 = __src;
  uint64_t v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      uint64_t v21 = &__dst[v12];
      unint64_t v39 = v21;
      uint64_t v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        char v22 = (void **)(a3 - 8);
        unint64_t v23 = v5;
        char v34 = v6;
        while (1)
        {
          unint64_t v24 = v21;
          unint64_t v25 = *--v21;
          unint64_t v38 = v25;
          unint64_t v26 = *--v23;
          id v37 = v26;
          id v27 = v38;
          id v28 = v26;
          char v29 = sub_100188818(&v38, &v37);
          if (v36) {
            break;
          }
          char v30 = v29;
          uint64_t v36 = 0;
          unint64_t v31 = v22 + 1;

          if (v30)
          {
            uint64_t v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              char *v22 = *v23;
            }
            uint64_t v41 = v23;
            uint64_t v21 = v24;
          }
          else
          {
            unint64_t v39 = v21;
            uint64_t v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              char *v22 = *v21;
            }
            unint64_t v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            uint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    uint64_t v13 = &__dst[v9];
    unint64_t v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        unint64_t v38 = *v5;
        int64_t v14 = __dst;
        id v37 = *__dst;
        id v15 = v37;
        uint64_t v16 = v38;
        id v17 = v15;
        char v18 = sub_100188818(&v38, &v37);
        if (v36) {
          break;
        }
        char v19 = v18;

        if (v19)
        {
          uint64_t v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          uint64_t v40 = v14 + 1;
          uint64_t v20 = v5;
        }
        uint64_t v36 = 0;
        uint64_t v41 = ++v6;
        if (__dst < v13)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_100196224((void **)&v41, (const void **)&v40, &v39);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100195634(char *a1, void **a2, char *a3, void **a4)
{
  uint64_t v8 = sub_1000AA024(&qword_100261D90);
  __chkstk_darwin(v8 - 8);
  id v94 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v95 = (void **)((char *)&v90 - v11);
  __chkstk_darwin(v12);
  uint64_t v99 = (char *)&v90 - v13;
  __chkstk_darwin(v14);
  uint64_t v93 = (void (**)(void))((char *)&v90 - v15);
  uint64_t v16 = type metadata accessor for Date();
  __chkstk_darwin(v16);
  unint64_t v92 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v102 = (char *)&v90 - v19;
  __chkstk_darwin(v20);
  uint64_t v91 = (char *)&v90 - v21;
  __chkstk_darwin(v22);
  BOOL v103 = (char *)&v90 - v23;
  __chkstk_darwin(v24);
  id v101 = (char *)&v90 - v26;
  uint64_t v27 = (char *)a2 - a1;
  uint64_t v28 = (char *)a2 - a1 + 7;
  if ((char *)a2 - a1 >= 0) {
    uint64_t v28 = (char *)a2 - a1;
  }
  uint64_t v29 = v28 >> 3;
  char v96 = a3;
  uint64_t v30 = a3 - (char *)a2;
  uint64_t v31 = v30 / 8;
  uint64_t v108 = (void **)a1;
  uint64_t v105 = a4;
  char v107 = a4;
  if (v28 >> 3 >= v30 / 8)
  {
    if (v30 < -7) {
      goto LABEL_64;
    }
    id v57 = v105;
    if (v105 != a2 || &a2[v31] <= v105)
    {
      uint64_t v58 = v25;
      memmove(v105, a2, 8 * v31);
      uint64_t v25 = v58;
    }
    unint64_t v59 = &v57[v31];
    uint64_t v106 = v59;
    uint64_t v108 = a2;
    uint64_t v60 = (uint64_t)v95;
    if (v30 < 8 || a1 >= (char *)a2)
    {
LABEL_63:
      sub_100196224((void **)&v108, (const void **)&v107, &v106);
      return 1;
    }
    uint64_t v93 = (void (**)(void))(v25 + 32);
    id v101 = (char *)(v25 + 56);
    uint64_t v91 = (char *)(v25 + 8);
    uint64_t v61 = (void **)(v96 - 8);
    uint64_t v62 = &selRef_lastConnectTime;
    Swift::Int v63 = a2;
    char v96 = a1;
    uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    while (1)
    {
      uint64_t v100 = v59;
      unint64_t v64 = *--v59;
      id v65 = *(v63 - 1);
      uint64_t v98 = v63 - 1;
      id v66 = v64;
      id v104 = v65;
      uint64_t v67 = v62[227];
      uint64_t v99 = v66;
      id v68 = [v66 v67];
      if (v68)
      {
        uint64_t v69 = v68;
        uint64_t v70 = v103;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        id v71 = v93;
        id v72 = *v93;
        ((void (*)(uint64_t, char *, uint64_t))*v93)(v60, v70, v16);
        uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v101;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))v101)(v60, 0, 1, v16);
        if ((*v97)(v60, 1, v16) != 1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v72)(v102, v60, v16);
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v101;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v101)(v60, 1, 1, v16);
        id v71 = v93;
      }
      static Date.now.getter();
      sub_1000AA894(v60, &qword_100261D90);
LABEL_46:
      id v74 = [v104 v62[227]:v90];
      if (!v74)
      {
        uint64_t v77 = (uint64_t)v94;
        v73(v94, 1, 1, v16);
LABEL_50:
        id v78 = a2;
        uint64_t v80 = v92;
        static Date.now.getter();
        sub_1000AA894(v77, &qword_100261D90);
        goto LABEL_51;
      }
      uint64_t v75 = v74;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v76 = *v71;
      uint64_t v77 = (uint64_t)v94;
      (*v71)();
      v73((char *)v77, 0, 1, v16);
      if ((*v97)(v77, 1, v16) == 1) {
        goto LABEL_50;
      }
      id v78 = a2;
      int v79 = v92;
      ((void (*)(char *, uint64_t, uint64_t))v76)(v92, v77, v16);
      uint64_t v80 = v79;
LABEL_51:
      int v81 = v61 + 1;
      uint64_t v82 = v102;
      char v83 = static Date.> infix(_:_:)();
      uint64_t v84 = v80;
      char v85 = v83;
      uint64_t v86 = *(void (**)(char *, uint64_t))v91;
      (*(void (**)(char *, uint64_t))v91)(v84, v16);
      v86(v82, v16);

      if (v85)
      {
        uint64_t v87 = v105;
        uint64_t v60 = (uint64_t)v95;
        unint64_t v88 = (unint64_t)v96;
        unint64_t v59 = v100;
        Swift::Int v63 = v98;
        if (v81 != v78 || v61 >= v78) {
          *uint64_t v61 = *v98;
        }
        uint64_t v108 = v63;
      }
      else
      {
        uint64_t v106 = v59;
        uint64_t v87 = v105;
        uint64_t v60 = (uint64_t)v95;
        unint64_t v88 = (unint64_t)v96;
        if (v81 < v100 || v61 >= v100 || v81 != v100) {
          *uint64_t v61 = *v59;
        }
        Swift::Int v63 = v78;
      }
      uint64_t v62 = &selRef_lastConnectTime;
      if (v59 > v87)
      {
        --v61;
        a2 = v63;
        if ((unint64_t)v63 > v88) {
          continue;
        }
      }
      goto LABEL_63;
    }
  }
  if (v27 >= -7)
  {
    uint64_t v32 = v105;
    uint64_t v33 = (uint64_t)v99;
    if (v105 != (void **)a1 || &a1[8 * v29] <= (char *)v105)
    {
      uint64_t v34 = v25;
      memmove(v105, a1, 8 * v29);
      uint64_t v25 = v34;
    }
    id v95 = &v32[v29];
    uint64_t v106 = v95;
    if (v27 >= 8 && a2 < (void **)v96)
    {
      uint64_t v35 = (void **)(v25 + 32);
      uint64_t v102 = (char *)(v25 + 56);
      uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
      uint64_t v98 = (void **)(v25 + 32);
      id v94 = (char *)(v25 + 8);
      while (1)
      {
        uint64_t v36 = *a2;
        uint64_t v105 = v32;
        id v37 = *v32;
        unint64_t v38 = v36;
        id v104 = v37;
        uint64_t v100 = (void **)v38;
        id v39 = [v38 creationDate];
        if (v39)
        {
          uint64_t v40 = v39;
          uint64_t v41 = v103;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v42 = (void (*)(char *, uint64_t, uint64_t))*v35;
          uint64_t v43 = (uint64_t)v93;
          ((void (*)(void (**)(void), char *, uint64_t))*v35)(v93, v41, v16);
          uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v102;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))v102)(v43, 0, 1, v16);
          if ((*v97)(v43, 1, v16) != 1)
          {
            v42(v101, v43, v16);
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v102;
          uint64_t v43 = (uint64_t)v93;
          (*(void (**)(void (**)(void), uint64_t, uint64_t, uint64_t))v102)(v93, 1, 1, v16);
        }
        static Date.now.getter();
        sub_1000AA894(v43, &qword_100261D90);
LABEL_16:
        id v45 = [v104 creationDate:v90];
        unint64_t v46 = v91;
        if (v45)
        {
          unint64_t v47 = v45;
          unint64_t v48 = v103;
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))*v35;
          Swift::Int v50 = v48;
          uint64_t v33 = (uint64_t)v99;
          ((void (*)(char *, char *, uint64_t))*v35)(v99, v50, v16);
          v44(v33, 0, 1, v16);
          if ((*v97)(v33, 1, v16) != 1)
          {
            uint64_t v51 = v33;
            v49(v46, v33, v16);
            goto LABEL_21;
          }
        }
        else
        {
          v44(v33, 1, 1, v16);
        }
        static Date.now.getter();
        uint64_t v51 = v33;
        sub_1000AA894(v33, &qword_100261D90);
LABEL_21:
        Swift::Int v52 = v101;
        char v53 = static Date.> infix(_:_:)();
        uint64_t v54 = *(void (**)(char *, uint64_t))v94;
        (*(void (**)(char *, uint64_t))v94)(v46, v16);
        v54(v52, v16);

        if (v53)
        {
          id v55 = a2 + 1;
          uint64_t v32 = v105;
          if (a1 >= (char *)a2 && a1 < (char *)v55)
          {
            uint64_t v33 = v51;
            if (a1 != (char *)a2) {
              *(void *)a1 = *a2;
            }
            goto LABEL_31;
          }
          *(void *)a1 = *a2;
        }
        else
        {
          id v56 = v105;
          if (a1 != (char *)v105) {
            *(void *)a1 = *v105;
          }
          uint64_t v32 = v56 + 1;
          char v107 = v32;
          id v55 = a2;
        }
        uint64_t v33 = v51;
LABEL_31:
        uint64_t v35 = v98;
        a1 += 8;
        uint64_t v108 = (void **)a1;
        if (v32 < v95)
        {
          a2 = v55;
          if (v55 < (void **)v96) {
            continue;
          }
        }
        goto LABEL_63;
      }
    }
    goto LABEL_63;
  }
LABEL_64:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100195FE8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000AA024(&qword_100263AF8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001960E4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for SoundProfileRecord();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_100196224(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1001962E0(uint64_t a1)
{
  return sub_100195FE8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void (*sub_1001962F4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1001963A4(v6, a2, a3);
  return sub_10019635C;
}

void sub_10019635C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1001963A4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  unint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)unint64_t v3 = v4;
    return sub_100196424;
  }
  __break(1u);
  return result;
}

void sub_100196424(id *a1)
{
}

uint64_t sub_10019642C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000B5E24((unint64_t *)&unk_100263AE8, &qword_1002631D0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000AA024(&qword_1002631D0);
          uint64_t v12 = sub_1001962F4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000B66A0(0, (unint64_t *)&qword_100262960);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100196660(void *a1)
{
  return sub_100190B5C(0, a1[2], 0, a1, &qword_100263B68, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
}

uint64_t sub_1001966A4(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1001966B8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 48) + 8 * v16);
    *int64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001968B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  *(unsigned char *)(v5 + 16) = 0;
  *(void *)(v5 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 48) = 0;
  *(void *)(v5 + 56) = [objc_allocWithZone((Class)ACAccountStore) init];
  *(unsigned char *)(v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_networkUp) = 1;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___fileManager) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_retryTimer) = 0;
  unint64_t v9 = (void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore____lazy_storage___cloudCoordinator);
  void *v9 = 0;
  v9[1] = 0;
  static os_log_type_t.default.getter();
  if (qword_100261938 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001CFDB0;
  uint64_t v11 = URL.absoluteString.getter();
  uint64_t v13 = v12;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_1000AA5E0();
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v13;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 32) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v14 = v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_directoryURL;
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, a3, v15);
  *(void *)(v5 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue) = a4;
  int64_t v17 = self;
  id v18 = a4;
  id v19 = [v17 defaultCenter];
  aBlock[4] = sub_1001B14A8;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10016290C;
  void aBlock[3] = &unk_10023D1D8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v21 = [v19 addObserverForName:@"com.apple.bluetooth.services.BTNetworkMonitor.networkChanged" object:0 queue:0 usingBlock:v20];
  _Block_release(v20);
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
  return v5;
}

void *sub_100196BC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(a1 + 8 * v7);
      unint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      BOOL v11 = *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress] == a2
         && *(void *)&v8[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8] == a3;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100196D0C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    BOOL v10 = a4 == 0x6563697665444141 && a5 == 0xEE0064726F636552;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v12 = (a1 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(a1 + 8 * v11);
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      BOOL v15 = *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress] == a2
         && *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8] == a3;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return v13;
      }

      ++v11;
      if (v14 == v8) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100196ECC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    BOOL v10 = a4 == 0xD000000000000011 && a5 == 0x80000001001FDE80;
    BOOL v17 = v10;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v12 = (a1 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(a1 + 8 * v11);
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      BOOL v15 = *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress] == a2
         && *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8] == a3;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return v13;
      }

      ++v11;
      if (v14 == v8) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_100197078(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    BOOL v10 = a4 == 0xD000000000000013 && a5 == 0x80000001001F7610;
    BOOL v17 = v10;
    uint64_t v11 = 4;
    while (1)
    {
      uint64_t v12 = (a1 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(a1 + 8 * v11);
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      BOOL v15 = *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress] == a2
         && *(void *)&v12[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8] == a3;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        return v13;
      }

      ++v11;
      if (v14 == v8) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100197224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10019726C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for DeviceRecord, (void (*)(uint64_t, unint64_t))sub_100154768, (uint64_t (*)(void))type metadata accessor for DeviceRecord, a1);
}

uint64_t sub_1001972C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (void (*)(uint64_t, unint64_t))sub_100154B50, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, a1);
}

uint64_t sub_10019731C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (void (*)(uint64_t, unint64_t))sub_10015495C, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, a1);
}

uint64_t sub_100197374@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001ACFC4((uint64_t (*)(uint64_t, unint64_t))sub_100154570, a1);
}

void *sub_1001973A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      uint64_t v16 = a5;
      uint64_t v8 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(a1 + 8 * v8);
        }
        a5 = v10;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        id v12 = [v10 encryptedValues];
        swift_getObjectType();
        CKRecordKeyValueSetting.subscript.getter();
        swift_unknownObjectRelease();
        if (v20)
        {
          if (v19 == a2 && v20 == a3)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0) {
              goto LABEL_5;
            }
          }
          if (CKRecord.recordType.getter() == a4 && v14 == v16)
          {
            swift_bridgeObjectRelease();
LABEL_19:
            swift_bridgeObjectRelease();
            return a5;
          }
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            goto LABEL_19;
          }
        }
LABEL_5:

        ++v8;
      }
      while (v11 != v7);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1001975C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001976B8(a1, a2, a3, a4, a5, (unint64_t)sub_1001B1AD4, (uint64_t)sub_1001B1B34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C776C, (uint64_t)&unk_10023D170, (uint64_t)sub_1001B1B58);
}

uint64_t sub_100197640(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001976B8(a1, a2, a3, a4, a5, (unint64_t)sub_1001B1AD4, (uint64_t)sub_1001B1B34, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1000C7D44, (uint64_t)&unk_10023D0F8, (uint64_t)sub_1001B1368);
}

uint64_t sub_1001976B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v118 = a8;
  uint64_t v116 = a7;
  unint64_t v126 = a6;
  uint64_t v127 = a3;
  uint64_t v128 = a4;
  uint64_t v129 = a5;
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8);
  unint64_t v112 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  BOOL v17 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v125 = (char *)&v109 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v109 - v21;
  uint64_t v122 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v122);
  uint64_t v121 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DeviceRecord();
  uint64_t v123 = *(void *)(v24 - 8);
  uint64_t v124 = v24;
  __chkstk_darwin(v24);
  uint64_t v110 = (uint64_t)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v109 = (uint64_t)&v109 - v27;
  __chkstk_darwin(v28);
  unint64_t v111 = (uint64_t *)((char *)&v109 - v29);
  __chkstk_darwin(v30);
  uint64_t v113 = (uint64_t)&v109 - v31;
  __chkstk_darwin(v32);
  uint64_t v114 = a2;
  char v115 = (uint64_t *)((char *)&v109 - v33);
  uint64_t v34 = sub_10015F0D4();
  uint64_t v117 = a1;
  id v35 = [a1 bluetoothAddress];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1000AA0CC(v14, (uint64_t)qword_10026AAE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v22, v38, v14);
  char v120 = v22;
  uint64_t v40 = v39;
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t)v125;
  uint64_t v119 = v37;
  URL.appendingPathComponent(_:)();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v15 + 8);
  v42(v17, v14);
  __chkstk_darwin(v43);
  *(&v109 - 2) = v41;
  *(&v109 - 1) = v34;
  uint64_t v44 = (uint64_t)v121;
  OS_dispatch_queue.sync<A>(execute:)();
  v42((char *)v41, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v42(v120, v14);
  int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v44, 1, v124);
  unint64_t v126 = 0;
  if (v45 == 1)
  {
    sub_1000AA894(v44, (uint64_t *)&unk_100263A10);
    static os_log_type_t.default.getter();
    unint64_t v46 = v117;
    unint64_t v47 = v118;
    uint64_t v48 = v114;
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1001CFDB0;
    id v50 = v46;
    id v51 = [v50 description];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;

    *(void *)(v49 + 56) = &type metadata for String;
    *(void *)(v49 + 64) = sub_1000AA5E0();
    *(void *)(v49 + 32) = v52;
    *(void *)(v49 + 40) = v54;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v55 = v50;
    uint64_t v56 = (uint64_t)v112;
    UUID.init()();
    id v57 = v115;
    sub_1000A5EC4(v56, 0, 0xC000000000000000, v55, v115);
LABEL_17:
    uint64_t v88 = sub_10015F0D4();
    __chkstk_darwin(v88);
    *(&v109 - 2) = v89;
    *(&v109 - 1) = (uint64_t)v57;
    unint64_t v90 = v126;
    OS_dispatch_queue.sync<A>(execute:)();
    if (v90)
    {
      swift_release();
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1001CFDB0;
      v130[0] = (id)v90;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v92 = String.init<A>(describing:)();
      uint64_t v94 = v93;
      *(void *)(v91 + 56) = &type metadata for String;
      *(void *)(v91 + 64) = sub_1000AA5E0();
      *(void *)(v91 + 32) = v92;
      *(void *)(v91 + 40) = v94;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000EB9B4();
      uint64_t v95 = swift_allocError();
      *char v96 = v90 | 0x4000000000000000;
      swift_errorRetain();
      v47(v95, v127, v128, v129);
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      swift_release();
      v47(0, v127, v128, v129);
      static os_log_type_t.default.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = xmmword_1001CFDB0;
      uint64_t v98 = sub_1000A56C4();
      uint64_t v100 = v99;
      *(void *)(v97 + 56) = &type metadata for String;
      *(void *)(v97 + 64) = sub_1000AA5E0();
      *(void *)(v97 + 32) = v98;
      *(void *)(v97 + 40) = v100;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v102 = *v57;
      unint64_t v103 = v57[1];
      sub_1000AA680(*v57, v103);
      Class isa = sub_100130420(v102, v103);
      sub_1000AA8F0(v102, v103);
      uint64_t v105 = v110;
      sub_1001AEF94((uint64_t)v57, v110, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      if (!isa) {
        Class isa = sub_1000B4B34().super.isa;
      }
      sub_1001AEFFC(v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
      v130[0] = isa;
      sub_1000A7948(v130);
      sub_100160454();
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = v48;
      *(void *)(v106 + 24) = isa;
      swift_retain();
      id v107 = isa;
      sub_10011B210(v107, 1, a10, v106);

      swift_unknownObjectRelease();
      swift_release();
    }
    return sub_1001AEFFC((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  }
  uint64_t v58 = v113;
  sub_1001AF05C(v44, v113, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  unint64_t v59 = v117;
  char v60 = sub_1000A83C8(v117);
  uint64_t v61 = v111;
  sub_1001AEF94(v58, (uint64_t)v111, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (v60) {
    goto LABEL_14;
  }
  uint64_t v63 = *v61;
  unint64_t v64 = v61[1];
  sub_1000AA680(*v61, v64);
  id v65 = sub_100130420(v63, v64);
  sub_1000AA8F0(v63, v64);
  uint64_t v66 = v109;
  sub_1001AEF94((uint64_t)v61, v109, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  if (!v65) {
    id v65 = sub_1000B4B34().super.isa;
  }
  sub_1001AEFFC(v66, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  v130[0] = v65;
  sub_1000A7948(v130);
  id v67 = [v65 recordChangeTag];

  if (!v67)
  {
LABEL_14:
    sub_1001AEFFC((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_1001D0A20;
    uint64_t v79 = sub_1000A56C4();
    uint64_t v81 = v80;
    *(void *)(v78 + 56) = &type metadata for String;
    unint64_t v82 = sub_1000AA5E0();
    *(void *)(v78 + 64) = v82;
    *(void *)(v78 + 32) = v79;
    *(void *)(v78 + 40) = v81;
    id v83 = v59;
    id v84 = [v83 description];
    uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v87 = v86;

    *(void *)(v78 + 96) = &type metadata for String;
    *(void *)(v78 + 104) = v82;
    *(void *)(v78 + 72) = v85;
    *(void *)(v78 + 80) = v87;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v57 = v115;
    sub_1001AEF94(v58, (uint64_t)v115, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    sub_1000A7F34(v83);
    sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    unint64_t v47 = v118;
    uint64_t v48 = v114;
    goto LABEL_17;
  }

  sub_1001AEFFC((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_1001D0A20;
  uint64_t v69 = sub_1000A56C4();
  uint64_t v71 = v70;
  *(void *)(v68 + 56) = &type metadata for String;
  unint64_t v72 = sub_1000AA5E0();
  *(void *)(v68 + 64) = v72;
  *(void *)(v68 + 32) = v69;
  *(void *)(v68 + 40) = v71;
  id v73 = v59;
  id v74 = [v73 description];
  uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v77 = v76;

  *(void *)(v68 + 96) = &type metadata for String;
  *(void *)(v68 + 104) = v72;
  *(void *)(v68 + 72) = v75;
  *(void *)(v68 + 80) = v77;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  v118(0, v127, v128, v129);
  id v57 = (uint64_t *)v58;
  return sub_1001AEFFC((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
}

void sub_1001983DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v126 = a4;
  uint64_t v127 = a5;
  uint64_t v125 = a3;
  uint64_t v118 = type metadata accessor for DispatchPredicate();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t *)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for Date();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  unint64_t v111 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v109 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v110);
  uint64_t v121 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v102 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v129 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v129);
  uint64_t v132 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for DeviceRecord();
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v105 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v102 - v22;
  __chkstk_darwin(v23);
  uint64_t v108 = (uint64_t)&v102 - v24;
  __chkstk_darwin(v25);
  uint64_t v106 = (uint64_t)&v102 - v26;
  uint64_t v104 = v27;
  __chkstk_darwin(v28);
  uint64_t v119 = (uint64_t *)((char *)&v102 - v29);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v123 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v122 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000A56C4();
  uint64_t v33 = v32;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v124 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v124;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = a2;
  uint64_t v34 = sub_10015F0D4();
  uint64_t v35 = *(int *)(v135 + 24);
  uint64_t v134 = a1;
  id v107 = (uint64_t *)(a1 + v35);
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000AA0CC(v11, (uint64_t)qword_10026AAE0);
  uint64_t v37 = v131;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  uint64_t v128 = v18;
  v38(v18, v36, v11);
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v130;
  URL.appendingPathComponent(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v13, v11);
  __chkstk_darwin(v42);
  *(&v102 - 2) = (uint64_t)v40;
  *(&v102 - 1) = v34;
  uint64_t v43 = (uint64_t)v132;
  OS_dispatch_queue.sync<A>(execute:)();
  v41(v40, v11);
  swift_release();
  v41(v128, v11);
  uint64_t v44 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v43, 1, v135) == 1)
  {
    sub_1000AA894(v43, (uint64_t *)&unk_100263A10);
    static os_log_type_t.error.getter();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v122;
    uint64_t v46 = sub_1000A56C4();
    unint64_t v47 = v124;
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v47;
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 40) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C87F8(0, v125, v126, v127);
  }
  else
  {
    uint64_t v49 = v119;
    sub_1001AF05C(v43, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v51 = *v49;
    unint64_t v52 = v49[1];
    sub_1000AA680(*v49, v52);
    Class isa = sub_100130420(v51, v52);
    sub_1000AA8F0(v51, v52);
    uint64_t v54 = v106;
    sub_1001AEF94((uint64_t)v49, v106, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!isa) {
      Class isa = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v55 = (uint64_t)v121;
    id v136 = isa;
    sub_1000A7948(&v136);
    id v56 = [isa recordID];

    uint64_t v58 = *v49;
    unint64_t v59 = v49[1];
    sub_1000AA680(*v49, v59);
    char v60 = sub_100130420(v58, v59);
    sub_1000AA8F0(v58, v59);
    uint64_t v61 = v108;
    sub_1001AEF94((uint64_t)v49, v108, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!v60) {
      char v60 = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v62 = v120;
    id v136 = v60;
    sub_1000A7948(&v136);
    uint64_t v63 = CKRecord.recordType.getter();
    uint64_t v65 = v64;

    sub_100174420(v56, v63, v65, 0);
    swift_bridgeObjectRelease();
    uint64_t v66 = v134 + *(int *)(v44 + 20);
    uint64_t v67 = v112;
    uint64_t v68 = v109;
    uint64_t v69 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v66, v113);
    uint64_t v71 = *v107;
    uint64_t v70 = v107[1];
    swift_bridgeObjectRetain();
    unint64_t v72 = v111;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v74 = v73;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v72, v115);
    *(unsigned char *)uint64_t v55 = 1;
    strcpy((char *)(v55 + 8), "DeviceRecord");
    *(unsigned char *)(v55 + 21) = 0;
    *(_WORD *)(v55 + 22) = -5120;
    uint64_t v75 = (int *)v110;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v55 + *(int *)(v110 + 24), v68, v69);
    uint64_t v76 = (void *)(v55 + v75[7]);
    *uint64_t v76 = v71;
    v76[1] = v70;
    *(void *)(v55 + v75[8]) = v74;
    *(_OWORD *)(v55 + v75[9]) = xmmword_1001D3390;
    sub_100185B98(v62, v55);
    uint64_t v78 = (void *)sub_100160454();
    uint64_t v79 = (void *)v78[9];
    uint64_t v80 = v116;
    *uint64_t v116 = v79;
    uint64_t v81 = v117;
    uint64_t v82 = v118;
    (*(void (**)(void *, void, uint64_t))(v117 + 104))(v80, enum case for DispatchPredicate.notOnQueue(_:), v118);
    id v83 = v79;
    LOBYTE(v71) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v81 + 8))(v80, v82);
    if (v71)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v136)
      {
        uint64_t v84 = sub_100160454();
        uint64_t v86 = *v49;
        unint64_t v87 = v49[1];
        sub_1000AA680(*v49, v87);
        uint64_t v88 = sub_100130420(v86, v87);
        sub_1000AA8F0(v86, v87);
        uint64_t v89 = v103;
        sub_1001AEF94((uint64_t)v49, v103, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (!v88) {
          uint64_t v88 = sub_1000B4B34().super.isa;
        }
        sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v136 = v88;
        sub_1000A7948(&v136);
        id v90 = [v88 recordID];

        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        uint64_t v92 = v105;
        sub_1001AEF94((uint64_t)v49, v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        unint64_t v93 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        unint64_t v94 = (v104 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v95 = swift_allocObject();
        sub_1001AF05C(v92, v95 + v93, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        *(void *)(v95 + v94) = v91;
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v84;
        *(void *)(v96 + 24) = v90;
        *(void *)(v96 + 32) = sub_1001AE95C;
        *(void *)(v96 + 40) = v95;
        *(unsigned char *)(v96 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v97 = v90;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v96);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v122;
        uint64_t v99 = sub_1000A56C4();
        unint64_t v100 = v124;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = v100;
        *(void *)(v98 + 32) = v99;
        *(void *)(v98 + 40) = v101;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      sub_1000C87F8(0, v125, v126, v127);
      sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      __break(1u);
    }
  }
}

void sub_100199238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v126 = a3;
  uint64_t v127 = a5;
  uint64_t v125 = a4;
  uint64_t v118 = type metadata accessor for DispatchPredicate();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t *)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for Date();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  unint64_t v111 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v109 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v110);
  uint64_t v121 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v102 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v129 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v129);
  uint64_t v132 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for DeviceRecord();
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v105 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v102 - v22;
  __chkstk_darwin(v23);
  uint64_t v108 = (uint64_t)&v102 - v24;
  __chkstk_darwin(v25);
  uint64_t v106 = (uint64_t)&v102 - v26;
  uint64_t v104 = v27;
  __chkstk_darwin(v28);
  uint64_t v119 = (uint64_t *)((char *)&v102 - v29);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v123 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v122 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000A56C4();
  uint64_t v33 = v32;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v124 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v124;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = a2;
  uint64_t v34 = sub_10015F0D4();
  uint64_t v35 = *(int *)(v135 + 24);
  uint64_t v134 = a1;
  id v107 = (uint64_t *)(a1 + v35);
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000AA0CC(v11, (uint64_t)qword_10026AAE0);
  uint64_t v37 = v131;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  uint64_t v128 = v18;
  v38(v18, v36, v11);
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v130;
  URL.appendingPathComponent(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v13, v11);
  __chkstk_darwin(v42);
  *(&v102 - 2) = (uint64_t)v40;
  *(&v102 - 1) = v34;
  uint64_t v43 = (uint64_t)v132;
  OS_dispatch_queue.sync<A>(execute:)();
  v41(v40, v11);
  swift_release();
  v41(v128, v11);
  uint64_t v44 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v43, 1, v135) == 1)
  {
    sub_1000AA894(v43, (uint64_t *)&unk_100263A10);
    static os_log_type_t.error.getter();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v122;
    uint64_t v46 = sub_1000A56C4();
    unint64_t v47 = v124;
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v47;
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 40) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C8ADC(0, v126, v125, v127);
  }
  else
  {
    uint64_t v49 = v119;
    sub_1001AF05C(v43, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v51 = *v49;
    unint64_t v52 = v49[1];
    sub_1000AA680(*v49, v52);
    Class isa = sub_100130420(v51, v52);
    sub_1000AA8F0(v51, v52);
    uint64_t v54 = v106;
    sub_1001AEF94((uint64_t)v49, v106, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!isa) {
      Class isa = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v55 = (uint64_t)v121;
    id v136 = isa;
    sub_1000A7948(&v136);
    id v56 = [isa recordID];

    uint64_t v58 = *v49;
    unint64_t v59 = v49[1];
    sub_1000AA680(*v49, v59);
    char v60 = sub_100130420(v58, v59);
    sub_1000AA8F0(v58, v59);
    uint64_t v61 = v108;
    sub_1001AEF94((uint64_t)v49, v108, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!v60) {
      char v60 = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v62 = v120;
    id v136 = v60;
    sub_1000A7948(&v136);
    uint64_t v63 = CKRecord.recordType.getter();
    uint64_t v65 = v64;

    sub_100174420(v56, v63, v65, 0);
    swift_bridgeObjectRelease();
    uint64_t v66 = v134 + *(int *)(v44 + 20);
    uint64_t v67 = v112;
    uint64_t v68 = v109;
    uint64_t v69 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v66, v113);
    uint64_t v71 = *v107;
    uint64_t v70 = v107[1];
    swift_bridgeObjectRetain();
    unint64_t v72 = v111;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v74 = v73;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v72, v115);
    *(unsigned char *)uint64_t v55 = 1;
    strcpy((char *)(v55 + 8), "DeviceRecord");
    *(unsigned char *)(v55 + 21) = 0;
    *(_WORD *)(v55 + 22) = -5120;
    uint64_t v75 = (int *)v110;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v55 + *(int *)(v110 + 24), v68, v69);
    uint64_t v76 = (void *)(v55 + v75[7]);
    *uint64_t v76 = v71;
    v76[1] = v70;
    *(void *)(v55 + v75[8]) = v74;
    *(_OWORD *)(v55 + v75[9]) = xmmword_1001D3390;
    sub_100185B98(v62, v55);
    uint64_t v78 = (void *)sub_100160454();
    uint64_t v79 = (void *)v78[9];
    uint64_t v80 = v116;
    *uint64_t v116 = v79;
    uint64_t v81 = v117;
    uint64_t v82 = v118;
    (*(void (**)(void *, void, uint64_t))(v117 + 104))(v80, enum case for DispatchPredicate.notOnQueue(_:), v118);
    id v83 = v79;
    LOBYTE(v71) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v81 + 8))(v80, v82);
    if (v71)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v136)
      {
        uint64_t v84 = sub_100160454();
        uint64_t v86 = *v49;
        unint64_t v87 = v49[1];
        sub_1000AA680(*v49, v87);
        uint64_t v88 = sub_100130420(v86, v87);
        sub_1000AA8F0(v86, v87);
        uint64_t v89 = v103;
        sub_1001AEF94((uint64_t)v49, v103, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (!v88) {
          uint64_t v88 = sub_1000B4B34().super.isa;
        }
        sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v136 = v88;
        sub_1000A7948(&v136);
        id v90 = [v88 recordID];

        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        uint64_t v92 = v105;
        sub_1001AEF94((uint64_t)v49, v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        unint64_t v93 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        unint64_t v94 = (v104 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v95 = swift_allocObject();
        sub_1001AF05C(v92, v95 + v93, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        *(void *)(v95 + v94) = v91;
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v84;
        *(void *)(v96 + 24) = v90;
        *(void *)(v96 + 32) = sub_1001AE95C;
        *(void *)(v96 + 40) = v95;
        *(unsigned char *)(v96 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v97 = v90;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v96);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v122;
        uint64_t v99 = sub_1000A56C4();
        unint64_t v100 = v124;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = v100;
        *(void *)(v98 + 32) = v99;
        *(void *)(v98 + 40) = v101;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      sub_1000C8ADC(0, v126, v125, v127);
      sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_10019A09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v131 = type metadata accessor for DispatchPredicate();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (uint64_t *)((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = type metadata accessor for Date();
  uint64_t v126 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  unint64_t v124 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for UUID();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  long long v122 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v123);
  uint64_t v133 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v118 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for DispatchQoS();
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v140 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v142 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v109 - v22;
  uint64_t v141 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v141);
  uint64_t v143 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v146 = v25;
  __chkstk_darwin(v25);
  uint64_t v135 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v26;
  __chkstk_darwin(v27);
  uint64_t v132 = (uint64_t)&v109 - v28;
  uint64_t v29 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v29 + 2) = a3;
  *((void *)v29 + 3) = a4;
  uint64_t v113 = a4;
  BOOL v137 = v29;
  *((void *)v29 + 4) = a5;
  uint64_t v115 = a3;
  swift_retain();
  uint64_t v114 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v112 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v111 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000F8EB8();
  uint64_t v32 = a1;
  uint64_t v34 = v33;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v110 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v110;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v144 = a2;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v146 + 24);
  uint64_t v136 = v32;
  uint64_t v138 = *(void *)(v32 + v36);
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1000AA0CC(v16, (uint64_t)qword_10026AD20);
  uint64_t v38 = v17;
  id v39 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  char v139 = v23;
  v39(v23, v37, v16);
  uint64_t v41 = v35;
  URL.path.getter();
  unint64_t v42 = v140;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v43 = v142;
  URL.appendingPathComponent(_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v42, v16);
  __chkstk_darwin(v45);
  *(&v109 - 2) = (uint64_t)v43;
  *(&v109 - 1) = v41;
  uint64_t v46 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v44(v43, v16);
  swift_release();
  v44(v139, v16);
  uint64_t v47 = v145;
  uint64_t v48 = v146;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v46, 1, v146) == 1)
  {
    sub_1000AA894(v46, (uint64_t *)&unk_100263A00);
    uint64_t v49 = *(void **)(v144 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v50 = v135;
    sub_1001AEF94(v136, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v52 = (v134 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v53 = (char *)swift_allocObject();
    sub_1001AF05C(v50, (uint64_t)&v53[v51], (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v54 = (uint64_t (**)(uint64_t))&v53[v52];
    uint64_t v55 = v137;
    void *v54 = sub_1001B0B58;
    v54[1] = v55;
    aBlock[4] = sub_1001AE920;
    aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023CD78;
    id v56 = _Block_copy(aBlock);
    id v57 = v49;
    swift_retain();
    uint64_t v58 = v116;
    static DispatchQoS.unspecified.getter();
    uint64_t v147 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    unint64_t v59 = v118;
    uint64_t v60 = v121;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v58, v119);
    swift_release();
LABEL_12:
    swift_release();
    return;
  }
  uint64_t v61 = v46;
  uint64_t v62 = v132;
  sub_1001AF05C(v61, v132, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  sub_1000FB560(v62, aBlock);
  uint64_t v64 = v144;
  id v65 = aBlock[0];
  id v66 = [aBlock[0] recordID];

  sub_1000FB560(v62, aBlock);
  uint64_t v68 = (uint64_t)v133;
  id v69 = aBlock[0];
  uint64_t v70 = CKRecord.recordType.getter();
  uint64_t v72 = v71;

  uint64_t v73 = v64;
  sub_100174420(v66, v70, v72, 0);

  swift_bridgeObjectRelease();
  uint64_t v74 = v125;
  uint64_t v75 = v122;
  uint64_t v76 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v122, v62, v127);
  uint64_t v77 = *(int *)(v48 + 24);
  uint64_t v78 = v73;
  uint64_t v79 = (uint64_t *)(v62 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  swift_bridgeObjectRetain();
  uint64_t v82 = v124;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v84 = v83;
  (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v128);
  *(unsigned char *)uint64_t v68 = 1;
  *(void *)(v68 + 8) = 0xD00000000000001ELL;
  *(void *)(v68 + 16) = 0x80000001001F6CC0;
  uint64_t v85 = (int *)v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v68 + *(int *)(v123 + 24), v75, v76);
  uint64_t v86 = (void *)(v68 + v85[7]);
  *uint64_t v86 = v81;
  v86[1] = v80;
  *(void *)(v68 + v85[8]) = v84;
  *(_OWORD *)(v68 + v85[9]) = xmmword_1001D3390;
  sub_100185B98(v78, v68);
  uint64_t v88 = (void *)sub_100160454();
  uint64_t v89 = (void *)v88[9];
  id v90 = v129;
  *uint64_t v129 = v89;
  uint64_t v91 = v130;
  uint64_t v92 = v131;
  (*(void (**)(void *, void, uint64_t))(v130 + 104))(v90, enum case for DispatchPredicate.notOnQueue(_:), v131);
  id v93 = v89;
  LOBYTE(v81) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v91 + 8))(v90, v92);
  if (v81)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v94 = sub_100160454();
      sub_1000FB560(v62, aBlock);
      id v96 = aBlock[0];
      id v97 = [aBlock[0] recordID];

      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      uint64_t v99 = v135;
      sub_1001AEF94(v62, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      unint64_t v100 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      unint64_t v101 = (v134 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v102 = swift_allocObject();
      sub_1001AF05C(v99, v102 + v100, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      *(void *)(v102 + v101) = v98;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v94;
      *(void *)(v103 + 24) = v97;
      *(void *)(v103 + 32) = sub_1001AE928;
      *(void *)(v103 + 40) = v102;
      *(unsigned char *)(v103 + 48) = 1;
      swift_retain();
      swift_unknownObjectRetain();
      id v104 = v97;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v103);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v111;
      uint64_t v106 = sub_1000F8EB8();
      unint64_t v107 = v110;
      *(void *)(v105 + 56) = &type metadata for String;
      *(void *)(v105 + 64) = v107;
      *(void *)(v105 + 32) = v106;
      *(void *)(v105 + 40) = v108;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000C8ADC(0, v115, v113, v114);
    sub_1001AEFFC(v68, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    sub_1001AEFFC(v62, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    goto LABEL_12;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_10019B094(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v135 = a4;
  uint64_t v136 = a6;
  uint64_t v134 = a5;
  int v117 = a2;
  uint64_t v125 = type metadata accessor for DispatchPredicate();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (uint64_t *)((char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = type metadata accessor for Date();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v118 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for UUID();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v115 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v116);
  uint64_t v133 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for URL();
  uint64_t v141 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  char v139 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v142 = (char *)&v110 - v14;
  __chkstk_darwin(v15);
  uint64_t v146 = (uint64_t *)((char *)&v110 - v16);
  uint64_t v140 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v140);
  uint64_t v143 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v145 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v111 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v114 = (uint64_t)&v110 - v21;
  __chkstk_darwin(v22);
  uint64_t v113 = (uint64_t)&v110 - v23;
  __chkstk_darwin(v24);
  uint64_t v132 = (uint64_t)&v110 - v25;
  uint64_t v112 = v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v110 - v28;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v127 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v126 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  sub_1001AEF94(a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v31 = a1;
  uint64_t v32 = sub_1000DA054();
  uint64_t v34 = v33;
  uint64_t v130 = v29;
  sub_1001AEFFC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v128 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v128;
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v131 = a3;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v18 + 24);
  uint64_t v129 = v31;
  uint64_t v137 = *(void *)(v31 + v36);
  uint64_t v138 = v18;
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v37 = v144;
  sub_1000AA0CC(v144, (uint64_t)qword_10026AB90);
  uint64_t v38 = v141;
  (*(void (**)(void))(v141 + 16))();
  URL.path.getter();
  uint64_t v40 = v139;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v142;
  URL.appendingPathComponent(_:)();
  unint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v40, v37);
  __chkstk_darwin(v43);
  *(&v110 - 2) = (uint64_t)v41;
  *(&v110 - 1) = v35;
  uint64_t v44 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v42(v41, v37);
  swift_release();
  v42((char *)v146, v37);
  uint64_t v45 = v138;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v44, 1, v138) == 1)
  {
    sub_1000AA894(v44, &qword_1002623D0);
    static os_log_type_t.error.getter();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v126;
    uint64_t v47 = (uint64_t)v130;
    sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v48 = sub_1000DA054();
    uint64_t v50 = v49;
    sub_1001AEFFC(v47, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v51 = v128;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = v51;
    *(void *)(v46 + 32) = v48;
    *(void *)(v46 + 40) = v50;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000C8ADC(0, v135, v134, v136);
  }
  else
  {
    uint64_t v52 = v132;
    sub_1001AF05C(v44, v132, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v54 = (uint64_t *)(v52 + *(int *)(v45 + 20));
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    sub_1000AA680(*v54, v56);
    Class isa = sub_100130420(v55, v56);
    sub_1000AA8F0(v55, v56);
    uint64_t v58 = v113;
    sub_1001AEF94(v52, v113, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (!isa) {
      Class isa = sub_1000B4934(v58).super.isa;
    }
    sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = isa;
    sub_1000DE038(&v147);
    id v59 = [isa recordID];

    uint64_t v146 = v54;
    uint64_t v61 = *v54;
    unint64_t v62 = v54[1];
    sub_1000AA680(v61, v62);
    uint64_t v63 = sub_100130420(v61, v62);
    sub_1000AA8F0(v61, v62);
    uint64_t v64 = v114;
    sub_1001AEF94(v52, v114, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v65 = v45;
    if (!v63) {
      uint64_t v63 = sub_1000B4934(v64).super.isa;
    }
    sub_1001AEFFC(v64, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = v63;
    sub_1000DE038(&v147);
    uint64_t v66 = CKRecord.recordType.getter();
    uint64_t v68 = v67;

    uint64_t v69 = v131;
    sub_100174420(v59, v66, v68, v117 & 1);

    swift_bridgeObjectRelease();
    uint64_t v70 = v119;
    uint64_t v71 = v115;
    uint64_t v72 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v115, v52, v120);
    uint64_t v73 = (uint64_t *)(v52 + *(int *)(v65 + 24));
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    swift_bridgeObjectRetain();
    uint64_t v76 = v118;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v78 = v77;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v122);
    uint64_t v79 = v133;
    unsigned char *v133 = 1;
    strcpy(v79 + 8, "MagicSettings");
    *((_WORD *)v79 + 11) = -4864;
    uint64_t v80 = (int *)v116;
    (*(void (**)(unsigned char *, char *, uint64_t))(v70 + 32))(&v79[*(int *)(v116 + 24)], v71, v72);
    uint64_t v81 = &v79[v80[7]];
    *uint64_t v81 = v75;
    v81[1] = v74;
    *(void *)&v79[v80[8]] = v78;
    *(_OWORD *)&v79[v80[9]] = xmmword_1001D3390;
    sub_100185B98(v69, (uint64_t)v79);
    uint64_t v83 = (void *)sub_100160454();
    uint64_t v84 = (void *)v83[9];
    uint64_t v85 = v123;
    *uint64_t v123 = v84;
    uint64_t v86 = v124;
    uint64_t v87 = v125;
    (*(void (**)(void *, void, uint64_t))(v124 + 104))(v85, enum case for DispatchPredicate.notOnQueue(_:), v125);
    id v88 = v84;
    LOBYTE(v75) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v86 + 8))(v85, v87);
    if (v75)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v147)
      {
        uint64_t v89 = sub_100160454();
        uint64_t v91 = *v146;
        unint64_t v92 = v146[1];
        sub_1000AA680(*v146, v92);
        id v93 = sub_100130420(v91, v92);
        sub_1000AA8F0(v91, v92);
        uint64_t v94 = v132;
        uint64_t v95 = v111;
        sub_1001AEF94(v132, v111, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        if (!v93) {
          id v93 = sub_1000B4934(v95).super.isa;
        }
        sub_1001AEFFC(v95, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        id v147 = v93;
        sub_1000DE038(&v147);
        id v96 = [v93 recordID];

        uint64_t v97 = swift_allocObject();
        swift_weakInit();
        uint64_t v98 = (uint64_t)v130;
        sub_1001AEF94(v94, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v99 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
        unint64_t v100 = (v112 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v101 = swift_allocObject();
        sub_1001AF05C(v98, v101 + v99, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v101 + v100) = v97;
        uint64_t v102 = swift_allocObject();
        *(void *)(v102 + 16) = v89;
        *(void *)(v102 + 24) = v96;
        *(void *)(v102 + 32) = sub_1001ADA3C;
        *(void *)(v102 + 40) = v101;
        *(unsigned char *)(v102 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v103 = v96;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v102);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v104 = swift_allocObject();
        *(_OWORD *)(v104 + 16) = v126;
        uint64_t v105 = (uint64_t)v130;
        sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v106 = sub_1000DA054();
        uint64_t v108 = v107;
        sub_1001AEFFC(v105, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v109 = v128;
        *(void *)(v104 + 56) = &type metadata for String;
        *(void *)(v104 + 64) = v109;
        *(void *)(v104 + 32) = v106;
        *(void *)(v104 + 40) = v108;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v94 = v132;
      }
      sub_1000C8ADC(0, v135, v134, v136);
      sub_1001AEFFC((uint64_t)v133, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC(v94, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_10019BFE4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v125 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v122 = *(void *)(v9 - 8);
  uint64_t v123 = v9;
  __chkstk_darwin(v9);
  uint64_t v121 = (uint64_t *)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  __chkstk_darwin(v11);
  uint64_t v116 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = v13;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v115);
  uint64_t v124 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v111 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v109 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a3;
  void v23[3] = a4;
  unsigned char v23[4] = a5;
  unint64_t v128 = &type metadata for AudioAccessoryFeatures;
  unint64_t v129 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v24 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v24 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v82 = swift_allocError();
    *uint64_t v83 = 0x8000000000000038;
    sub_1000C8ADC(v82, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v108 = v16;
  uint64_t v103 = a4;
  uint64_t v104 = a3;
  uint64_t v105 = a5;
  uint64_t v107 = v23;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v102 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  long long v101 = xmmword_1001CFDB0;
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  uint64_t v26 = a1;
  id v27 = [v26 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v100 = sub_1000AA5E0();
  *(void *)(v25 + 64) = v100;
  *(void *)(v25 + 32) = v28;
  *(void *)(v25 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v106 = v26;
  uint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  if (qword_100261918 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1000AA0CC(v19, (uint64_t)qword_10026AD60);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v33, v19);
  uint64_t v34 = (char *)sub_10015CA58(v31, v32, (uint64_t)v22, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v35 = v108;
  if (!v34)
  {
    uint64_t v84 = *(void **)((char *)v125 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v85 = (void *)swift_allocObject();
    id v86 = v106;
    v85[2] = v106;
    v85[3] = sub_1001B1838;
    void v85[4] = v107;
    unint64_t v129 = (unint64_t)sub_1001B1B4C;
    uint64_t v130 = v85;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    unint64_t v128 = (ValueMetadata *)&unk_10023CE90;
    uint64_t v87 = _Block_copy(aBlock);
    id v88 = v86;
    id v89 = v84;
    swift_retain();
    id v90 = v109;
    static DispatchQoS.unspecified.getter();
    long long v126 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v91 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v87);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v35);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v90, v112);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v37 = (uint64_t *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v39 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v38, v39);
  Class isa = sub_100130420(v38, v39);
  sub_1000AA8F0(v38, v39);
  if (!isa)
  {
    uint64_t v41 = v34;
    Class isa = sub_1000B4F04((uint64_t)v41).super.isa;
  }
  unint64_t v42 = v124;
  uint64_t v43 = (uint64_t)v125;
  aBlock[0] = isa;
  sub_10012E130(aBlock);
  id v44 = [isa recordID];

  uint64_t v125 = v37;
  uint64_t v46 = *v37;
  unint64_t v47 = v37[1];
  sub_1000AA680(v46, v47);
  uint64_t v48 = sub_100130420(v46, v47);
  sub_1000AA8F0(v46, v47);
  if (!v48)
  {
    uint64_t v49 = v34;
    uint64_t v48 = sub_1000B4F04((uint64_t)v49).super.isa;
  }
  aBlock[0] = v48;
  sub_10012E130(aBlock);
  uint64_t v50 = CKRecord.recordType.getter();
  uint64_t v52 = v51;

  sub_100174420(v44, v50, v52, 0);
  swift_bridgeObjectRelease();
  uint64_t v54 = v117;
  uint64_t v53 = v118;
  uint64_t v55 = v114;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v114, &v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v118);
  uint64_t v57 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v56 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v58 = v116;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v58, v120);
  *unint64_t v42 = 1;
  strcpy(v42 + 8, "AADeviceRecord");
  v42[23] = -18;
  uint64_t v61 = (int *)v115;
  (*(void (**)(unsigned char *, char *, uint64_t))(v54 + 32))(&v42[*(int *)(v115 + 24)], v55, v53);
  unint64_t v62 = &v42[v61[7]];
  *unint64_t v62 = v57;
  v62[1] = v56;
  *(void *)&v42[v61[8]] = v60;
  *(_OWORD *)&v42[v61[9]] = xmmword_1001D3390;
  sub_100185B98(v43, (uint64_t)v42);
  uint64_t v64 = (void *)sub_100160454();
  uint64_t v65 = (void *)v64[9];
  uint64_t v67 = v121;
  uint64_t v66 = v122;
  *uint64_t v121 = v65;
  uint64_t v68 = v123;
  (*(void (**)(void *, void, uint64_t))(v66 + 104))(v67, enum case for DispatchPredicate.notOnQueue(_:), v123);
  id v69 = v65;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v66 + 8))(v67, v68);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v70 = sub_100160454();
      uint64_t v72 = *v125;
      unint64_t v73 = v125[1];
      sub_1000AA680(*v125, v73);
      uint64_t v74 = sub_100130420(v72, v73);
      sub_1000AA8F0(v72, v73);
      if (!v74)
      {
        uint64_t v75 = v34;
        uint64_t v74 = sub_1000B4F04((uint64_t)v75).super.isa;
      }
      aBlock[0] = v74;
      sub_10012E130(aBlock);
      id v76 = [v74 recordID];

      uint64_t v77 = swift_allocObject();
      swift_weakInit();
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v34;
      *(void *)(v78 + 24) = v77;
      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v70;
      *(void *)(v79 + 24) = v76;
      *(void *)(v79 + 32) = sub_1001B1B5C;
      *(void *)(v79 + 40) = v78;
      *(unsigned char *)(v79 + 48) = 1;
      uint64_t v80 = v34;
      swift_retain();
      swift_unknownObjectRetain();
      id v81 = v76;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v79);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = v101;
      id v93 = v106;
      id v94 = [v93 description];
      uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v97 = v96;

      unint64_t v98 = v100;
      *(void *)(v92 + 56) = &type metadata for String;
      *(void *)(v92 + 64) = v98;
      *(void *)(v92 + 32) = v95;
      *(void *)(v92 + 40) = v97;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000C8ADC(0, v104, v103, v105);

    sub_1001AEFFC((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_10019CDC8(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v123 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v121 = v9;
  __chkstk_darwin(v9);
  uint64_t v119 = (uint64_t *)((char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for UUID();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v113);
  uint64_t v122 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v109 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a3;
  v21[3] = a4;
  v21[4] = a5;
  long long v126 = &type metadata for AudioAccessoryFeatures;
  unint64_t v127 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v22 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v22 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v80 = swift_allocError();
    *id v81 = 0x8000000000000038;
    sub_1000C8ADC(v80, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v106 = v14;
  uint64_t v101 = a4;
  uint64_t v102 = a3;
  uint64_t v103 = a5;
  uint64_t v105 = v21;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v100 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v23 = swift_allocObject();
  long long v99 = xmmword_1001CFDB0;
  *(_OWORD *)(v23 + 16) = xmmword_1001CFDB0;
  char v24 = a1;
  id v25 = [v24 description];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v98 = sub_1000AA5E0();
  *(void *)(v23 + 64) = v98;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v104 = v24;
  uint64_t v29 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000AA0CC(v17, (uint64_t)qword_10026AB00);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v31, v17);
  uint64_t v32 = (char *)sub_10015CA58(v29, v30, (uint64_t)v20, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v33 = v106;
  if (!v32)
  {
    uint64_t v82 = *(void **)((char *)v123 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v83 = (void *)swift_allocObject();
    id v84 = v104;
    v83[2] = v104;
    v83[3] = sub_1001B1838;
    v83[4] = v105;
    unint64_t v127 = (unint64_t)sub_1001B1B4C;
    unint64_t v128 = v83;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    long long v126 = (ValueMetadata *)&unk_10023CF58;
    uint64_t v85 = _Block_copy(aBlock);
    id v86 = v84;
    id v87 = v82;
    swift_retain();
    id v88 = v107;
    static DispatchQoS.unspecified.getter();
    uint64_t v124 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v89 = v109;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v85);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v89, v33);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v88, v110);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v35 = (uint64_t *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  uint64_t v36 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v37 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v36, v37);
  Class isa = sub_100130420(v36, v37);
  sub_1000AA8F0(v36, v37);
  if (!isa)
  {
    unint64_t v39 = v32;
    Class isa = sub_1000B4D2C((uint64_t)v39).super.isa;
  }
  uint64_t v40 = (uint64_t)v122;
  uint64_t v41 = (uint64_t)v123;
  aBlock[0] = isa;
  sub_1000B37D0((unint64_t)aBlock);
  id v42 = [isa recordID];

  uint64_t v123 = v35;
  uint64_t v44 = *v35;
  unint64_t v45 = v35[1];
  sub_1000AA680(v44, v45);
  uint64_t v46 = sub_100130420(v44, v45);
  sub_1000AA8F0(v44, v45);
  if (!v46)
  {
    unint64_t v47 = v32;
    uint64_t v46 = sub_1000B4D2C((uint64_t)v47).super.isa;
  }
  aBlock[0] = v46;
  sub_1000B37D0((unint64_t)aBlock);
  uint64_t v48 = CKRecord.recordType.getter();
  uint64_t v50 = v49;

  sub_100174420(v42, v48, v50, 0);
  swift_bridgeObjectRelease();
  uint64_t v51 = v115;
  uint64_t v52 = v112;
  uint64_t v53 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, &v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_identifier], v117);
  uint64_t v55 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v54 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v56 = v114;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v56, v118);
  *(unsigned char *)uint64_t v40 = 1;
  *(void *)(v40 + 8) = 0xD000000000000011;
  *(void *)(v40 + 16) = 0x80000001001FDE80;
  uint64_t v59 = (int *)v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v40 + *(int *)(v113 + 24), v52, v53);
  uint64_t v60 = (void *)(v40 + v59[7]);
  *uint64_t v60 = v55;
  v60[1] = v54;
  *(void *)(v40 + v59[8]) = v58;
  *(_OWORD *)(v40 + v59[9]) = xmmword_1001D3390;
  sub_100185B98(v41, v40);
  unint64_t v62 = (void *)sub_100160454();
  uint64_t v63 = (void *)v62[9];
  uint64_t v65 = v119;
  uint64_t v64 = v120;
  *uint64_t v119 = v63;
  uint64_t v66 = v121;
  (*(void (**)(void *, void, uint64_t))(v64 + 104))(v65, enum case for DispatchPredicate.notOnQueue(_:), v121);
  id v67 = v63;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v64 + 8))(v65, v66);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if (aBlock[0])
    {
      uint64_t v68 = sub_100160454();
      uint64_t v70 = *v123;
      unint64_t v71 = v123[1];
      sub_1000AA680(*v123, v71);
      uint64_t v72 = sub_100130420(v70, v71);
      sub_1000AA8F0(v70, v71);
      if (!v72)
      {
        unint64_t v73 = v32;
        uint64_t v72 = sub_1000B4D2C((uint64_t)v73).super.isa;
      }
      aBlock[0] = v72;
      sub_1000B37D0((unint64_t)aBlock);
      id v74 = [v72 recordID];

      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      uint64_t v76 = swift_allocObject();
      *(void *)(v76 + 16) = v32;
      *(void *)(v76 + 24) = v75;
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v68;
      *(void *)(v77 + 24) = v74;
      *(void *)(v77 + 32) = sub_1001B1B60;
      *(void *)(v77 + 40) = v76;
      *(unsigned char *)(v77 + 48) = 1;
      uint64_t v78 = v32;
      swift_retain();
      swift_unknownObjectRetain();
      id v79 = v74;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v77);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = v99;
      id v91 = v104;
      id v92 = [v91 description];
      uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v95 = v94;

      unint64_t v96 = v98;
      *(void *)(v90 + 56) = &type metadata for String;
      *(void *)(v90 + 64) = v96;
      *(void *)(v90 + 32) = v93;
      *(void *)(v90 + 40) = v95;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000C8ADC(0, v102, v101, v103);

    sub_1001AEFFC(v40, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_10019DBB4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v118 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v114 = *(void *)(v9 - 8);
  uint64_t v115 = v9;
  __chkstk_darwin(v9);
  uint64_t v113 = (id *)((char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v106 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v107);
  uint64_t v116 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  long long v99 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for DispatchQoS();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  v20[3] = a4;
  uint64_t v103 = a4;
  uint64_t v117 = v20;
  v20[4] = a5;
  uint64_t v105 = a3;
  swift_retain();
  uint64_t v104 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v96 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v21 = swift_allocObject();
  long long v95 = xmmword_1001CFDB0;
  *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
  char v22 = a1;
  id v23 = [v22 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v21 + 56) = &type metadata for String;
  unint64_t v94 = sub_1000AA5E0();
  *(void *)(v21 + 64) = v94;
  *(void *)(v21 + 32) = v24;
  *(void *)(v21 + 40) = v26;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v118;
  sub_10015F0D4();
  uint64_t v28 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v29 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1000AA0CC(v16, (uint64_t)qword_10026AC28);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v30, v16);
  uint64_t v31 = (char *)sub_10015CA58(v28, v29, (uint64_t)v19, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (!v31)
  {
    uint64_t v78 = *(void **)((char *)v27 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    id v79 = (void *)swift_allocObject();
    v79[2] = v22;
    v79[3] = sub_1001B1838;
    v79[4] = v117;
    aBlock[4] = sub_1001B1B4C;
    aBlock[5] = v79;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023D020;
    uint64_t v80 = _Block_copy(aBlock);
    id v81 = v22;
    id v82 = v78;
    swift_retain();
    uint64_t v83 = v97;
    static DispatchQoS.unspecified.getter();
    uint64_t v119 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v84 = v99;
    uint64_t v85 = v102;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v80);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v85);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v83, v100);
    swift_release();
LABEL_18:
    swift_release();
    return;
  }
  uint64_t v33 = (uint64_t *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  uint64_t v34 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v34, v35);
  Class isa = sub_100130420(v34, v35);
  sub_1000AA8F0(v34, v35);
  uint64_t v37 = (uint64_t)v27;
  if (!isa)
  {
    uint64_t v38 = v31;
    Class isa = sub_1000B4D08((uint64_t)v38).super.isa;
  }
  uint64_t v39 = (uint64_t)v116;
  aBlock[0] = isa;
  sub_1000F45CC(aBlock);
  id v40 = [isa recordID];

  uint64_t v42 = *v33;
  unint64_t v43 = v33[1];
  sub_1000AA680(*v33, v43);
  uint64_t v44 = sub_100130420(v42, v43);
  sub_1000AA8F0(v42, v43);
  id v93 = v22;
  if (!v44)
  {
    unint64_t v45 = v31;
    uint64_t v44 = sub_1000B4D08((uint64_t)v45).super.isa;
  }
  uint64_t v118 = v33;
  aBlock[0] = v44;
  sub_1000F45CC(aBlock);
  uint64_t v46 = CKRecord.recordType.getter();
  uint64_t v48 = v47;

  sub_100174420(v40, v46, v48, 0);
  swift_bridgeObjectRelease();
  uint64_t v49 = v109;
  uint64_t v50 = v106;
  uint64_t v51 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, &v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_identifier], v111);
  uint64_t v53 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v52 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v54 = v108;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v56 = v55;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v112);
  *(unsigned char *)uint64_t v39 = 1;
  *(void *)(v39 + 8) = 0xD000000000000013;
  *(void *)(v39 + 16) = 0x80000001001F7610;
  uint64_t v57 = (int *)v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v39 + *(int *)(v107 + 24), v50, v51);
  uint64_t v58 = (void *)(v39 + v57[7]);
  void *v58 = v53;
  v58[1] = v52;
  *(void *)(v39 + v57[8]) = v56;
  *(_OWORD *)(v39 + v57[9]) = xmmword_1001D3390;
  sub_100185B98(v37, v39);
  uint64_t v60 = (void *)sub_100160454();
  uint64_t v61 = (void *)v60[9];
  uint64_t v63 = v113;
  uint64_t v62 = v114;
  *uint64_t v113 = v61;
  uint64_t v64 = v115;
  (*(void (**)(void *, void, uint64_t))(v62 + 104))(v63, enum case for DispatchPredicate.notOnQueue(_:), v115);
  id v65 = v61;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v62 + 8))(v63, v64);
  if (v49)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v66 = sub_100160454();
      uint64_t v68 = *v118;
      unint64_t v69 = v118[1];
      sub_1000AA680(*v118, v69);
      uint64_t v70 = sub_100130420(v68, v69);
      sub_1000AA8F0(v68, v69);
      if (!v70)
      {
        unint64_t v71 = v31;
        uint64_t v70 = sub_1000B4D08((uint64_t)v71).super.isa;
      }
      aBlock[0] = v70;
      sub_1000F45CC(aBlock);
      id v72 = [v70 recordID:v93];

      uint64_t v73 = swift_allocObject();
      swift_weakInit();
      uint64_t v74 = swift_allocObject();
      *(void *)(v74 + 16) = v31;
      *(void *)(v74 + 24) = v73;
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v66;
      *(void *)(v75 + 24) = v72;
      *(void *)(v75 + 32) = sub_1001B1B64;
      *(void *)(v75 + 40) = v74;
      *(unsigned char *)(v75 + 48) = 1;
      uint64_t v76 = v31;
      swift_retain();
      swift_unknownObjectRetain();
      id v77 = v72;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v75);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = v95;
      id v87 = v93;
      id v88 = [v87 description];
      uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v91 = v90;

      unint64_t v92 = v94;
      *(void *)(v86 + 56) = &type metadata for String;
      *(void *)(v86 + 64) = v92;
      *(void *)(v86 + 32) = v89;
      *(void *)(v86 + 40) = v91;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000C8ADC(0, v105, v103, v104);

    sub_1001AEFFC(v39, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_18;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

uint64_t sub_10019E91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001A4E4C(a1, a2, a3, a4, a5, a6, a7, a8, (char *)sub_1001B1AD4, sub_100199238, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000C8ADC, (char *)sub_1001B1ABC, sub_10019A09C, (uint64_t)sub_1001B1AA4, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_10019B094, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10019BFE4, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10019CDC8, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10019DBB4);
}

uint64_t sub_10019EA04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10019EAF4(a1, a2, a3, a4, a5, (uint64_t)sub_1001B1ABC, (uint64_t)sub_1001B1B1C, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000CCDD8, (uint64_t)&unk_10023CC20, (uint64_t)sub_1001B1B54);
}

uint64_t sub_10019EA7C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10019EAF4(a1, a2, a3, a4, a5, (uint64_t)sub_1001B1ABC, (uint64_t)sub_1001B1B1C, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000CCDB0, (uint64_t)&unk_10023CBF8, (uint64_t)sub_1001B1B54);
}

uint64_t sub_10019EAF4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10)
{
  uint64_t v104 = a8;
  uint64_t v105 = a5;
  uint64_t v90 = a7;
  uint64_t v100 = a6;
  uint64_t v102 = a3;
  uint64_t v103 = a4;
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8);
  id v88 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v99 = (char *)&v87 - v19;
  __chkstk_darwin(v20);
  char v22 = (char *)&v87 - v21;
  uint64_t v96 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v96);
  long long v95 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v97 = *(void *)(v24 - 8);
  uint64_t v98 = v24;
  __chkstk_darwin(v24);
  uint64_t v87 = (uint64_t)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v87 - v27;
  __chkstk_darwin(v28);
  uint64_t v91 = a2;
  uint64_t v92 = (uint64_t)&v87 - v29;
  uint64_t v30 = sub_10015F0D4();
  uint64_t v101 = a1;
  id v31 = [a1 bluetoothAddress];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1000AA0CC(v14, (uint64_t)qword_10026AD20);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v22, v34, v14);
  unint64_t v94 = v22;
  uint64_t v36 = v35;
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v99;
  uint64_t v93 = v33;
  URL.appendingPathComponent(_:)();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v15 + 8);
  v38(v17, v14);
  __chkstk_darwin(v39);
  *(&v87 - 2) = v37;
  *(&v87 - 1) = v30;
  uint64_t v40 = (uint64_t)v95;
  OS_dispatch_queue.sync<A>(execute:)();
  v38((char *)v37, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v38(v94, v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v40, 1, v98) == 1)
  {
    sub_1000AA894(v40, (uint64_t *)&unk_100263A00);
    static os_log_type_t.default.getter();
    uint64_t v41 = v101;
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1001CFDB0;
    id v43 = v41;
    id v44 = [v43 description];
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;

    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = sub_1000AA5E0();
    *(void *)(v42 + 32) = v45;
    *(void *)(v42 + 40) = v47;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    id v48 = v43;
    uint64_t v49 = (uint64_t)v88;
    UUID.init()();
    uint64_t v50 = v92;
    sub_1000F97A4(v49, v48, v92);
LABEL_15:
    uint64_t v79 = v91;
    uint64_t v80 = sub_10015F0D4();
    __chkstk_darwin(v80);
    *(&v87 - 2) = v81;
    *(&v87 - 1) = v50;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    v104(0, v102, v103, v105);
    sub_1000FB560(v50, v106);
    id v83 = v106[0];
    sub_100160454();
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v79;
    *(void *)(v84 + 24) = v83;
    swift_retain();
    id v85 = v83;
    sub_10011B210(v85, 1, a10, v84);

    swift_unknownObjectRelease();
    swift_release();
    return sub_1001AEFFC(v50, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  }
  uint64_t v51 = v89;
  sub_1001AF05C(v40, v89, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  uint64_t v52 = v101;
  unsigned __int8 v53 = sub_1000FCDD8(v101);
  uint64_t v54 = v87;
  sub_1001AEF94(v51, v87, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  if ((v53 & 1) != 0
        sub_1000FB560(v54, v106),
        id v56 = v106[0],
        id v57 = [v106[0] recordChangeTag],
        v56,
        !v57))
  {
    sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    LODWORD(v100) = static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_1001D0A20;
    unint64_t v69 = sub_1000F8EB8();
    uint64_t v71 = v70;
    uint64_t v72 = v51;
    *(void *)(v68 + 56) = &type metadata for String;
    unint64_t v73 = sub_1000AA5E0();
    *(void *)(v68 + 64) = v73;
    *(void *)(v68 + 32) = v69;
    *(void *)(v68 + 40) = v71;
    id v74 = v52;
    id v75 = [v74 description];
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;

    *(void *)(v68 + 96) = &type metadata for String;
    *(void *)(v68 + 104) = v73;
    *(void *)(v68 + 72) = v76;
    *(void *)(v68 + 80) = v78;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v50 = v92;
    sub_1001AEF94(v72, v92, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    sub_1000FC230(v74);
    sub_1001AEFFC(v72, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    goto LABEL_15;
  }

  sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1001D0A20;
  uint64_t v59 = sub_1000F8EB8();
  uint64_t v61 = v60;
  *(void *)(v58 + 56) = &type metadata for String;
  unint64_t v62 = sub_1000AA5E0();
  *(void *)(v58 + 64) = v62;
  *(void *)(v58 + 32) = v59;
  *(void *)(v58 + 40) = v61;
  id v63 = v52;
  id v64 = [v63 description];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  *(void *)(v58 + 96) = &type metadata for String;
  *(void *)(v58 + 104) = v62;
  *(void *)(v58 + 72) = v65;
  *(void *)(v58 + 80) = v67;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  v104(0, v102, v103, v105);
  uint64_t v50 = v51;
  return sub_1001AEFFC(v50, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
}

uint64_t sub_10019F608(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10019EAF4(a1, a2, a3, a4, a5, (uint64_t)sub_1001B1ABC, (uint64_t)sub_1001B1B1C, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000CD3B0, (uint64_t)&unk_10023CB80, (uint64_t)sub_1001B0AD4);
}

void sub_10019F680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v126 = a3;
  uint64_t v127 = a5;
  uint64_t v125 = a4;
  uint64_t v118 = type metadata accessor for DispatchPredicate();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t *)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for Date();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v111 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v109 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v110);
  uint64_t v121 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v102 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v129 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v129);
  uint64_t v132 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for DeviceRecord();
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v105 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v102 - v22;
  __chkstk_darwin(v23);
  uint64_t v108 = (uint64_t)&v102 - v24;
  __chkstk_darwin(v25);
  uint64_t v106 = (uint64_t)&v102 - v26;
  uint64_t v104 = v27;
  __chkstk_darwin(v28);
  uint64_t v119 = (uint64_t *)((char *)&v102 - v29);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v123 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v122 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000A56C4();
  uint64_t v33 = v32;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v124 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v124;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = a2;
  uint64_t v34 = sub_10015F0D4();
  uint64_t v35 = *(int *)(v135 + 24);
  uint64_t v134 = a1;
  uint64_t v107 = (uint64_t *)(a1 + v35);
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000AA0CC(v11, (uint64_t)qword_10026AAE0);
  uint64_t v37 = v131;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  unint64_t v128 = v18;
  v38(v18, v36, v11);
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v130;
  URL.appendingPathComponent(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v13, v11);
  __chkstk_darwin(v42);
  *(&v102 - 2) = (uint64_t)v40;
  *(&v102 - 1) = v34;
  uint64_t v43 = (uint64_t)v132;
  OS_dispatch_queue.sync<A>(execute:)();
  v41(v40, v11);
  swift_release();
  v41(v128, v11);
  uint64_t v44 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v43, 1, v135) == 1)
  {
    sub_1000AA894(v43, (uint64_t *)&unk_100263A10);
    static os_log_type_t.error.getter();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v122;
    uint64_t v46 = sub_1000A56C4();
    unint64_t v47 = v124;
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v47;
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 40) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000CD620(0, v126, v125, v127);
  }
  else
  {
    uint64_t v49 = v119;
    sub_1001AF05C(v43, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v51 = *v49;
    unint64_t v52 = v49[1];
    sub_1000AA680(*v49, v52);
    Class isa = sub_100130420(v51, v52);
    sub_1000AA8F0(v51, v52);
    uint64_t v54 = v106;
    sub_1001AEF94((uint64_t)v49, v106, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!isa) {
      Class isa = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v55 = (uint64_t)v121;
    id v136 = isa;
    sub_1000A7948(&v136);
    id v56 = [isa recordID];

    uint64_t v58 = *v49;
    unint64_t v59 = v49[1];
    sub_1000AA680(*v49, v59);
    uint64_t v60 = sub_100130420(v58, v59);
    sub_1000AA8F0(v58, v59);
    uint64_t v61 = v108;
    sub_1001AEF94((uint64_t)v49, v108, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!v60) {
      uint64_t v60 = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v62 = v120;
    id v136 = v60;
    sub_1000A7948(&v136);
    uint64_t v63 = CKRecord.recordType.getter();
    uint64_t v65 = v64;

    sub_100174420(v56, v63, v65, 0);
    swift_bridgeObjectRelease();
    uint64_t v66 = v134 + *(int *)(v44 + 20);
    uint64_t v67 = v112;
    uint64_t v68 = v109;
    uint64_t v69 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v66, v113);
    uint64_t v71 = *v107;
    uint64_t v70 = v107[1];
    swift_bridgeObjectRetain();
    uint64_t v72 = v111;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v74 = v73;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v72, v115);
    *(unsigned char *)uint64_t v55 = 1;
    strcpy((char *)(v55 + 8), "DeviceRecord");
    *(unsigned char *)(v55 + 21) = 0;
    *(_WORD *)(v55 + 22) = -5120;
    id v75 = (int *)v110;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v55 + *(int *)(v110 + 24), v68, v69);
    uint64_t v76 = (void *)(v55 + v75[7]);
    *uint64_t v76 = v71;
    v76[1] = v70;
    *(void *)(v55 + v75[8]) = v74;
    *(_OWORD *)(v55 + v75[9]) = xmmword_1001D3390;
    sub_100185B98(v62, v55);
    uint64_t v78 = (void *)sub_100160454();
    uint64_t v79 = (void *)v78[9];
    uint64_t v80 = v116;
    *uint64_t v116 = v79;
    uint64_t v81 = v117;
    uint64_t v82 = v118;
    (*(void (**)(void *, void, uint64_t))(v117 + 104))(v80, enum case for DispatchPredicate.notOnQueue(_:), v118);
    id v83 = v79;
    LOBYTE(v71) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v81 + 8))(v80, v82);
    if (v71)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v136)
      {
        uint64_t v84 = sub_100160454();
        uint64_t v86 = *v49;
        unint64_t v87 = v49[1];
        sub_1000AA680(*v49, v87);
        id v88 = sub_100130420(v86, v87);
        sub_1000AA8F0(v86, v87);
        uint64_t v89 = v103;
        sub_1001AEF94((uint64_t)v49, v103, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (!v88) {
          id v88 = sub_1000B4B34().super.isa;
        }
        sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v136 = v88;
        sub_1000A7948(&v136);
        id v90 = [v88 recordID];

        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        uint64_t v92 = v105;
        sub_1001AEF94((uint64_t)v49, v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        unint64_t v93 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        unint64_t v94 = (v104 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v95 = swift_allocObject();
        sub_1001AF05C(v92, v95 + v93, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        *(void *)(v95 + v94) = v91;
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v84;
        *(void *)(v96 + 24) = v90;
        *(void *)(v96 + 32) = sub_1001AE95C;
        *(void *)(v96 + 40) = v95;
        *(unsigned char *)(v96 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v97 = v90;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v96);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v122;
        uint64_t v99 = sub_1000A56C4();
        unint64_t v100 = v124;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = v100;
        *(void *)(v98 + 32) = v99;
        *(void *)(v98 + 40) = v101;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      sub_1000CD620(0, v126, v125, v127);
      sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_1001A04E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v131 = type metadata accessor for DispatchPredicate();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (uint64_t *)((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = type metadata accessor for Date();
  uint64_t v126 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  unint64_t v124 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for UUID();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  long long v122 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v123);
  uint64_t v133 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v118 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for DispatchQoS();
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v140 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v142 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v109 - v22;
  uint64_t v141 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v141);
  uint64_t v143 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v146 = v25;
  __chkstk_darwin(v25);
  uint64_t v135 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v26;
  __chkstk_darwin(v27);
  uint64_t v132 = (uint64_t)&v109 - v28;
  uint64_t v29 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v29 + 2) = a3;
  *((void *)v29 + 3) = a4;
  uint64_t v113 = a4;
  uint64_t v137 = v29;
  *((void *)v29 + 4) = a5;
  uint64_t v115 = a3;
  swift_retain();
  uint64_t v114 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v112 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v111 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000F8EB8();
  uint64_t v32 = a1;
  uint64_t v34 = v33;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v110 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v110;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v144 = a2;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v146 + 24);
  uint64_t v136 = v32;
  uint64_t v138 = *(void *)(v32 + v36);
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1000AA0CC(v16, (uint64_t)qword_10026AD20);
  uint64_t v38 = v17;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  char v139 = v23;
  v39(v23, v37, v16);
  uint64_t v41 = v35;
  URL.path.getter();
  uint64_t v42 = v140;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v43 = v142;
  URL.appendingPathComponent(_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v42, v16);
  __chkstk_darwin(v45);
  *(&v109 - 2) = (uint64_t)v43;
  *(&v109 - 1) = v41;
  uint64_t v46 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v44(v43, v16);
  swift_release();
  v44(v139, v16);
  uint64_t v47 = v145;
  uint64_t v48 = v146;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v46, 1, v146) == 1)
  {
    sub_1000AA894(v46, (uint64_t *)&unk_100263A00);
    uint64_t v49 = *(void **)(v144 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v50 = v135;
    sub_1001AEF94(v136, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v52 = (v134 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    unsigned __int8 v53 = (char *)swift_allocObject();
    sub_1001AF05C(v50, (uint64_t)&v53[v51], (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v54 = (uint64_t (**)(uint64_t))&v53[v52];
    uint64_t v55 = v137;
    char *v54 = sub_1001B0A80;
    v54[1] = v55;
    aBlock[4] = sub_1001AE920;
    aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023C850;
    id v56 = _Block_copy(aBlock);
    id v57 = v49;
    swift_retain();
    uint64_t v58 = v116;
    static DispatchQoS.unspecified.getter();
    id v147 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    unint64_t v59 = v118;
    uint64_t v60 = v121;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v58, v119);
    swift_release();
LABEL_12:
    swift_release();
    return;
  }
  uint64_t v61 = v46;
  uint64_t v62 = v132;
  sub_1001AF05C(v61, v132, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  sub_1000FB560(v62, aBlock);
  uint64_t v64 = v144;
  id v65 = aBlock[0];
  id v66 = [aBlock[0] recordID];

  sub_1000FB560(v62, aBlock);
  uint64_t v68 = (uint64_t)v133;
  id v69 = aBlock[0];
  uint64_t v70 = CKRecord.recordType.getter();
  uint64_t v72 = v71;

  uint64_t v73 = v64;
  sub_100174420(v66, v70, v72, 0);

  swift_bridgeObjectRelease();
  uint64_t v74 = v125;
  id v75 = v122;
  uint64_t v76 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v122, v62, v127);
  uint64_t v77 = *(int *)(v48 + 24);
  uint64_t v78 = v73;
  uint64_t v79 = (uint64_t *)(v62 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  swift_bridgeObjectRetain();
  uint64_t v82 = v124;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v84 = v83;
  (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v128);
  *(unsigned char *)uint64_t v68 = 1;
  *(void *)(v68 + 8) = 0xD00000000000001ELL;
  *(void *)(v68 + 16) = 0x80000001001F6CC0;
  id v85 = (int *)v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v68 + *(int *)(v123 + 24), v75, v76);
  uint64_t v86 = (void *)(v68 + v85[7]);
  *uint64_t v86 = v81;
  v86[1] = v80;
  *(void *)(v68 + v85[8]) = v84;
  *(_OWORD *)(v68 + v85[9]) = xmmword_1001D3390;
  sub_100185B98(v78, v68);
  id v88 = (void *)sub_100160454();
  uint64_t v89 = (void *)v88[9];
  id v90 = v129;
  *uint64_t v129 = v89;
  uint64_t v91 = v130;
  uint64_t v92 = v131;
  (*(void (**)(void *, void, uint64_t))(v130 + 104))(v90, enum case for DispatchPredicate.notOnQueue(_:), v131);
  id v93 = v89;
  LOBYTE(v81) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v91 + 8))(v90, v92);
  if (v81)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v94 = sub_100160454();
      sub_1000FB560(v62, aBlock);
      id v96 = aBlock[0];
      id v97 = [aBlock[0] recordID];

      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      uint64_t v99 = v135;
      sub_1001AEF94(v62, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      unint64_t v100 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      unint64_t v101 = (v134 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v102 = swift_allocObject();
      sub_1001AF05C(v99, v102 + v100, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      *(void *)(v102 + v101) = v98;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v94;
      *(void *)(v103 + 24) = v97;
      *(void *)(v103 + 32) = sub_1001AE928;
      *(void *)(v103 + 40) = v102;
      *(unsigned char *)(v103 + 48) = 1;
      swift_retain();
      swift_unknownObjectRetain();
      id v104 = v97;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v103);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v111;
      uint64_t v106 = sub_1000F8EB8();
      unint64_t v107 = v110;
      *(void *)(v105 + 56) = &type metadata for String;
      *(void *)(v105 + 64) = v107;
      *(void *)(v105 + 32) = v106;
      *(void *)(v105 + 40) = v108;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000CD620(0, v115, v113, v114);
    sub_1001AEFFC(v68, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    sub_1001AEFFC(v62, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    goto LABEL_12;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001A14DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v135 = a4;
  uint64_t v136 = a6;
  uint64_t v134 = a5;
  int v117 = a2;
  uint64_t v125 = type metadata accessor for DispatchPredicate();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (uint64_t *)((char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = type metadata accessor for Date();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v118 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for UUID();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v115 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v116);
  uint64_t v133 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for URL();
  uint64_t v141 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  char v139 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v142 = (char *)&v110 - v14;
  __chkstk_darwin(v15);
  uint64_t v146 = (uint64_t *)((char *)&v110 - v16);
  uint64_t v140 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v140);
  uint64_t v143 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v145 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v111 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v114 = (uint64_t)&v110 - v21;
  __chkstk_darwin(v22);
  uint64_t v113 = (uint64_t)&v110 - v23;
  __chkstk_darwin(v24);
  uint64_t v132 = (uint64_t)&v110 - v25;
  uint64_t v112 = v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v110 - v28;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v127 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v126 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  sub_1001AEF94(a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v31 = a1;
  uint64_t v32 = sub_1000DA054();
  uint64_t v34 = v33;
  uint64_t v130 = v29;
  sub_1001AEFFC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v128 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v128;
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v131 = a3;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v18 + 24);
  uint64_t v129 = v31;
  uint64_t v137 = *(void *)(v31 + v36);
  uint64_t v138 = v18;
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v37 = v144;
  sub_1000AA0CC(v144, (uint64_t)qword_10026AB90);
  uint64_t v38 = v141;
  (*(void (**)(void))(v141 + 16))();
  URL.path.getter();
  uint64_t v40 = v139;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v142;
  URL.appendingPathComponent(_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v40, v37);
  __chkstk_darwin(v43);
  *(&v110 - 2) = (uint64_t)v41;
  *(&v110 - 1) = v35;
  uint64_t v44 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v42(v41, v37);
  swift_release();
  v42((char *)v146, v37);
  uint64_t v45 = v138;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v44, 1, v138) == 1)
  {
    sub_1000AA894(v44, &qword_1002623D0);
    static os_log_type_t.error.getter();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v126;
    uint64_t v47 = (uint64_t)v130;
    sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v48 = sub_1000DA054();
    uint64_t v50 = v49;
    sub_1001AEFFC(v47, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v51 = v128;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = v51;
    *(void *)(v46 + 32) = v48;
    *(void *)(v46 + 40) = v50;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000CD620(0, v135, v134, v136);
  }
  else
  {
    uint64_t v52 = v132;
    sub_1001AF05C(v44, v132, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v54 = (uint64_t *)(v52 + *(int *)(v45 + 20));
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    sub_1000AA680(*v54, v56);
    Class isa = sub_100130420(v55, v56);
    sub_1000AA8F0(v55, v56);
    uint64_t v58 = v113;
    sub_1001AEF94(v52, v113, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (!isa) {
      Class isa = sub_1000B4934(v58).super.isa;
    }
    sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = isa;
    sub_1000DE038(&v147);
    id v59 = [isa recordID];

    uint64_t v146 = v54;
    uint64_t v61 = *v54;
    unint64_t v62 = v54[1];
    sub_1000AA680(v61, v62);
    uint64_t v63 = sub_100130420(v61, v62);
    sub_1000AA8F0(v61, v62);
    uint64_t v64 = v114;
    sub_1001AEF94(v52, v114, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v65 = v45;
    if (!v63) {
      uint64_t v63 = sub_1000B4934(v64).super.isa;
    }
    sub_1001AEFFC(v64, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = v63;
    sub_1000DE038(&v147);
    uint64_t v66 = CKRecord.recordType.getter();
    uint64_t v68 = v67;

    uint64_t v69 = v131;
    sub_100174420(v59, v66, v68, v117 & 1);

    swift_bridgeObjectRelease();
    uint64_t v70 = v119;
    uint64_t v71 = v115;
    uint64_t v72 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v115, v52, v120);
    uint64_t v73 = (uint64_t *)(v52 + *(int *)(v65 + 24));
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    swift_bridgeObjectRetain();
    uint64_t v76 = v118;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v78 = v77;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v122);
    uint64_t v79 = v133;
    unsigned char *v133 = 1;
    strcpy(v79 + 8, "MagicSettings");
    *((_WORD *)v79 + 11) = -4864;
    uint64_t v80 = (int *)v116;
    (*(void (**)(unsigned char *, char *, uint64_t))(v70 + 32))(&v79[*(int *)(v116 + 24)], v71, v72);
    uint64_t v81 = &v79[v80[7]];
    *uint64_t v81 = v75;
    v81[1] = v74;
    *(void *)&v79[v80[8]] = v78;
    *(_OWORD *)&v79[v80[9]] = xmmword_1001D3390;
    sub_100185B98(v69, (uint64_t)v79);
    uint64_t v83 = (void *)sub_100160454();
    uint64_t v84 = (void *)v83[9];
    id v85 = v123;
    *uint64_t v123 = v84;
    uint64_t v86 = v124;
    uint64_t v87 = v125;
    (*(void (**)(void *, void, uint64_t))(v124 + 104))(v85, enum case for DispatchPredicate.notOnQueue(_:), v125);
    id v88 = v84;
    LOBYTE(v75) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v86 + 8))(v85, v87);
    if (v75)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v147)
      {
        uint64_t v89 = sub_100160454();
        uint64_t v91 = *v146;
        unint64_t v92 = v146[1];
        sub_1000AA680(*v146, v92);
        id v93 = sub_100130420(v91, v92);
        sub_1000AA8F0(v91, v92);
        uint64_t v94 = v132;
        uint64_t v95 = v111;
        sub_1001AEF94(v132, v111, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        if (!v93) {
          id v93 = sub_1000B4934(v95).super.isa;
        }
        sub_1001AEFFC(v95, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        id v147 = v93;
        sub_1000DE038(&v147);
        id v96 = [v93 recordID];

        uint64_t v97 = swift_allocObject();
        swift_weakInit();
        uint64_t v98 = (uint64_t)v130;
        sub_1001AEF94(v94, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v99 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
        unint64_t v100 = (v112 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v101 = swift_allocObject();
        sub_1001AF05C(v98, v101 + v99, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v101 + v100) = v97;
        uint64_t v102 = swift_allocObject();
        *(void *)(v102 + 16) = v89;
        *(void *)(v102 + 24) = v96;
        *(void *)(v102 + 32) = sub_1001ADA3C;
        *(void *)(v102 + 40) = v101;
        *(unsigned char *)(v102 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v103 = v96;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v102);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v104 = swift_allocObject();
        *(_OWORD *)(v104 + 16) = v126;
        uint64_t v105 = (uint64_t)v130;
        sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v106 = sub_1000DA054();
        uint64_t v108 = v107;
        sub_1001AEFFC(v105, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v109 = v128;
        *(void *)(v104 + 56) = &type metadata for String;
        *(void *)(v104 + 64) = v109;
        *(void *)(v104 + 32) = v106;
        *(void *)(v104 + 40) = v108;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v94 = v132;
      }
      sub_1000CD620(0, v135, v134, v136);
      sub_1001AEFFC((uint64_t)v133, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC(v94, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_1001A242C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v125 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v122 = *(void *)(v9 - 8);
  uint64_t v123 = v9;
  __chkstk_darwin(v9);
  uint64_t v121 = (uint64_t *)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  __chkstk_darwin(v11);
  uint64_t v116 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = v13;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v115);
  uint64_t v124 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v111 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v109 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a3;
  void v23[3] = a4;
  unsigned char v23[4] = a5;
  unint64_t v128 = &type metadata for AudioAccessoryFeatures;
  unint64_t v129 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v24 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v24 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v82 = swift_allocError();
    *uint64_t v83 = 0x8000000000000038;
    sub_1000CD620(v82, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v108 = v16;
  uint64_t v103 = a4;
  uint64_t v104 = a3;
  uint64_t v105 = a5;
  uint64_t v107 = v23;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v102 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  long long v101 = xmmword_1001CFDB0;
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  uint64_t v26 = a1;
  id v27 = [v26 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v100 = sub_1000AA5E0();
  *(void *)(v25 + 64) = v100;
  *(void *)(v25 + 32) = v28;
  *(void *)(v25 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v106 = v26;
  uint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  if (qword_100261918 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1000AA0CC(v19, (uint64_t)qword_10026AD60);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v33, v19);
  uint64_t v34 = (char *)sub_10015CA58(v31, v32, (uint64_t)v22, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v35 = v108;
  if (!v34)
  {
    uint64_t v84 = *(void **)((char *)v125 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    id v85 = (void *)swift_allocObject();
    id v86 = v106;
    v85[2] = v106;
    v85[3] = sub_1001B1834;
    void v85[4] = v107;
    unint64_t v129 = (unint64_t)sub_1001B1B4C;
    uint64_t v130 = v85;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    unint64_t v128 = (ValueMetadata *)&unk_10023C968;
    uint64_t v87 = _Block_copy(aBlock);
    id v88 = v86;
    id v89 = v84;
    swift_retain();
    id v90 = v109;
    static DispatchQoS.unspecified.getter();
    long long v126 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v91 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v87);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v35);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v90, v112);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v37 = (uint64_t *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v39 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v38, v39);
  Class isa = sub_100130420(v38, v39);
  sub_1000AA8F0(v38, v39);
  if (!isa)
  {
    uint64_t v41 = v34;
    Class isa = sub_1000B4F04((uint64_t)v41).super.isa;
  }
  uint64_t v42 = v124;
  uint64_t v43 = (uint64_t)v125;
  aBlock[0] = isa;
  sub_10012E130(aBlock);
  id v44 = [isa recordID];

  uint64_t v125 = v37;
  uint64_t v46 = *v37;
  unint64_t v47 = v37[1];
  sub_1000AA680(v46, v47);
  uint64_t v48 = sub_100130420(v46, v47);
  sub_1000AA8F0(v46, v47);
  if (!v48)
  {
    uint64_t v49 = v34;
    uint64_t v48 = sub_1000B4F04((uint64_t)v49).super.isa;
  }
  aBlock[0] = v48;
  sub_10012E130(aBlock);
  uint64_t v50 = CKRecord.recordType.getter();
  uint64_t v52 = v51;

  sub_100174420(v44, v50, v52, 0);
  swift_bridgeObjectRelease();
  uint64_t v54 = v117;
  uint64_t v53 = v118;
  uint64_t v55 = v114;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v114, &v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v118);
  uint64_t v57 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v56 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v58 = v116;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v58, v120);
  *uint64_t v42 = 1;
  strcpy(v42 + 8, "AADeviceRecord");
  v42[23] = -18;
  uint64_t v61 = (int *)v115;
  (*(void (**)(unsigned char *, char *, uint64_t))(v54 + 32))(&v42[*(int *)(v115 + 24)], v55, v53);
  unint64_t v62 = &v42[v61[7]];
  *unint64_t v62 = v57;
  v62[1] = v56;
  *(void *)&v42[v61[8]] = v60;
  *(_OWORD *)&v42[v61[9]] = xmmword_1001D3390;
  sub_100185B98(v43, (uint64_t)v42);
  uint64_t v64 = (void *)sub_100160454();
  uint64_t v65 = (void *)v64[9];
  uint64_t v67 = v121;
  uint64_t v66 = v122;
  *uint64_t v121 = v65;
  uint64_t v68 = v123;
  (*(void (**)(void *, void, uint64_t))(v66 + 104))(v67, enum case for DispatchPredicate.notOnQueue(_:), v123);
  id v69 = v65;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v66 + 8))(v67, v68);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v70 = sub_100160454();
      uint64_t v72 = *v125;
      unint64_t v73 = v125[1];
      sub_1000AA680(*v125, v73);
      uint64_t v74 = sub_100130420(v72, v73);
      sub_1000AA8F0(v72, v73);
      if (!v74)
      {
        uint64_t v75 = v34;
        uint64_t v74 = sub_1000B4F04((uint64_t)v75).super.isa;
      }
      aBlock[0] = v74;
      sub_10012E130(aBlock);
      id v76 = [v74 recordID];

      uint64_t v77 = swift_allocObject();
      swift_weakInit();
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v34;
      *(void *)(v78 + 24) = v77;
      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v70;
      *(void *)(v79 + 24) = v76;
      *(void *)(v79 + 32) = sub_1001B1B5C;
      *(void *)(v79 + 40) = v78;
      *(unsigned char *)(v79 + 48) = 1;
      uint64_t v80 = v34;
      swift_retain();
      swift_unknownObjectRetain();
      id v81 = v76;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v79);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = v101;
      id v93 = v106;
      id v94 = [v93 description];
      uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v97 = v96;

      unint64_t v98 = v100;
      *(void *)(v92 + 56) = &type metadata for String;
      *(void *)(v92 + 64) = v98;
      *(void *)(v92 + 32) = v95;
      *(void *)(v92 + 40) = v97;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000CD620(0, v104, v103, v105);

    sub_1001AEFFC((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001A3210(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v123 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v121 = v9;
  __chkstk_darwin(v9);
  uint64_t v119 = (uint64_t *)((char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for UUID();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v113);
  uint64_t v122 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v109 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a3;
  v21[3] = a4;
  v21[4] = a5;
  long long v126 = &type metadata for AudioAccessoryFeatures;
  unint64_t v127 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v22 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v22 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v80 = swift_allocError();
    *id v81 = 0x8000000000000038;
    sub_1000CD620(v80, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v106 = v14;
  uint64_t v101 = a4;
  uint64_t v102 = a3;
  uint64_t v103 = a5;
  uint64_t v105 = v21;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v100 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v23 = swift_allocObject();
  long long v99 = xmmword_1001CFDB0;
  *(_OWORD *)(v23 + 16) = xmmword_1001CFDB0;
  char v24 = a1;
  id v25 = [v24 description];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v98 = sub_1000AA5E0();
  *(void *)(v23 + 64) = v98;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v104 = v24;
  uint64_t v29 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000AA0CC(v17, (uint64_t)qword_10026AB00);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v31, v17);
  uint64_t v32 = (char *)sub_10015CA58(v29, v30, (uint64_t)v20, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v33 = v106;
  if (!v32)
  {
    uint64_t v82 = *(void **)((char *)v123 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v83 = (void *)swift_allocObject();
    id v84 = v104;
    v83[2] = v104;
    v83[3] = sub_1001B1834;
    v83[4] = v105;
    unint64_t v127 = (unint64_t)sub_1001B1B4C;
    unint64_t v128 = v83;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    long long v126 = (ValueMetadata *)&unk_10023CA30;
    id v85 = _Block_copy(aBlock);
    id v86 = v84;
    id v87 = v82;
    swift_retain();
    id v88 = v107;
    static DispatchQoS.unspecified.getter();
    uint64_t v124 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v89 = v109;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v85);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v89, v33);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v88, v110);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v35 = (uint64_t *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  uint64_t v36 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v37 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v36, v37);
  Class isa = sub_100130420(v36, v37);
  sub_1000AA8F0(v36, v37);
  if (!isa)
  {
    unint64_t v39 = v32;
    Class isa = sub_1000B4D2C((uint64_t)v39).super.isa;
  }
  uint64_t v40 = (uint64_t)v122;
  uint64_t v41 = (uint64_t)v123;
  aBlock[0] = isa;
  sub_1000B37D0((unint64_t)aBlock);
  id v42 = [isa recordID];

  uint64_t v123 = v35;
  uint64_t v44 = *v35;
  unint64_t v45 = v35[1];
  sub_1000AA680(v44, v45);
  uint64_t v46 = sub_100130420(v44, v45);
  sub_1000AA8F0(v44, v45);
  if (!v46)
  {
    unint64_t v47 = v32;
    uint64_t v46 = sub_1000B4D2C((uint64_t)v47).super.isa;
  }
  aBlock[0] = v46;
  sub_1000B37D0((unint64_t)aBlock);
  uint64_t v48 = CKRecord.recordType.getter();
  uint64_t v50 = v49;

  sub_100174420(v42, v48, v50, 0);
  swift_bridgeObjectRelease();
  uint64_t v51 = v115;
  uint64_t v52 = v112;
  uint64_t v53 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, &v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_identifier], v117);
  uint64_t v55 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v54 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v56 = v114;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v56, v118);
  *(unsigned char *)uint64_t v40 = 1;
  *(void *)(v40 + 8) = 0xD000000000000011;
  *(void *)(v40 + 16) = 0x80000001001FDE80;
  uint64_t v59 = (int *)v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v40 + *(int *)(v113 + 24), v52, v53);
  uint64_t v60 = (void *)(v40 + v59[7]);
  *uint64_t v60 = v55;
  v60[1] = v54;
  *(void *)(v40 + v59[8]) = v58;
  *(_OWORD *)(v40 + v59[9]) = xmmword_1001D3390;
  sub_100185B98(v41, v40);
  unint64_t v62 = (void *)sub_100160454();
  uint64_t v63 = (void *)v62[9];
  uint64_t v65 = v119;
  uint64_t v64 = v120;
  *uint64_t v119 = v63;
  uint64_t v66 = v121;
  (*(void (**)(void *, void, uint64_t))(v64 + 104))(v65, enum case for DispatchPredicate.notOnQueue(_:), v121);
  id v67 = v63;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v64 + 8))(v65, v66);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if (aBlock[0])
    {
      uint64_t v68 = sub_100160454();
      uint64_t v70 = *v123;
      unint64_t v71 = v123[1];
      sub_1000AA680(*v123, v71);
      uint64_t v72 = sub_100130420(v70, v71);
      sub_1000AA8F0(v70, v71);
      if (!v72)
      {
        unint64_t v73 = v32;
        uint64_t v72 = sub_1000B4D2C((uint64_t)v73).super.isa;
      }
      aBlock[0] = v72;
      sub_1000B37D0((unint64_t)aBlock);
      id v74 = [v72 recordID];

      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      uint64_t v76 = swift_allocObject();
      *(void *)(v76 + 16) = v32;
      *(void *)(v76 + 24) = v75;
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v68;
      *(void *)(v77 + 24) = v74;
      *(void *)(v77 + 32) = sub_1001B1B60;
      *(void *)(v77 + 40) = v76;
      *(unsigned char *)(v77 + 48) = 1;
      uint64_t v78 = v32;
      swift_retain();
      swift_unknownObjectRetain();
      id v79 = v74;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v77);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = v99;
      id v91 = v104;
      id v92 = [v91 description];
      uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v95 = v94;

      unint64_t v96 = v98;
      *(void *)(v90 + 56) = &type metadata for String;
      *(void *)(v90 + 64) = v96;
      *(void *)(v90 + 32) = v93;
      *(void *)(v90 + 40) = v95;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000CD620(0, v102, v101, v103);

    sub_1001AEFFC(v40, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001A3FFC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v118 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v114 = *(void *)(v9 - 8);
  uint64_t v115 = v9;
  __chkstk_darwin(v9);
  uint64_t v113 = (id *)((char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v106 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v107);
  uint64_t v116 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  long long v99 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for DispatchQoS();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  v20[3] = a4;
  uint64_t v103 = a4;
  uint64_t v117 = v20;
  v20[4] = a5;
  uint64_t v105 = a3;
  swift_retain();
  uint64_t v104 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v96 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v21 = swift_allocObject();
  long long v95 = xmmword_1001CFDB0;
  *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
  char v22 = a1;
  id v23 = [v22 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v21 + 56) = &type metadata for String;
  unint64_t v94 = sub_1000AA5E0();
  *(void *)(v21 + 64) = v94;
  *(void *)(v21 + 32) = v24;
  *(void *)(v21 + 40) = v26;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v118;
  sub_10015F0D4();
  uint64_t v28 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v29 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1000AA0CC(v16, (uint64_t)qword_10026AC28);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v30, v16);
  uint64_t v31 = (char *)sub_10015CA58(v28, v29, (uint64_t)v19, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (!v31)
  {
    uint64_t v78 = *(void **)((char *)v27 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    id v79 = (void *)swift_allocObject();
    v79[2] = v22;
    v79[3] = sub_1001B1834;
    v79[4] = v117;
    aBlock[4] = sub_1001B1B4C;
    aBlock[5] = v79;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023CAF8;
    uint64_t v80 = _Block_copy(aBlock);
    id v81 = v22;
    id v82 = v78;
    swift_retain();
    uint64_t v83 = v97;
    static DispatchQoS.unspecified.getter();
    uint64_t v119 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v84 = v99;
    uint64_t v85 = v102;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v80);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v85);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v83, v100);
    swift_release();
LABEL_18:
    swift_release();
    return;
  }
  uint64_t v33 = (uint64_t *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  uint64_t v34 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v34, v35);
  Class isa = sub_100130420(v34, v35);
  sub_1000AA8F0(v34, v35);
  uint64_t v37 = (uint64_t)v27;
  if (!isa)
  {
    uint64_t v38 = v31;
    Class isa = sub_1000B4D08((uint64_t)v38).super.isa;
  }
  uint64_t v39 = (uint64_t)v116;
  aBlock[0] = isa;
  sub_1000F45CC(aBlock);
  id v40 = [isa recordID];

  uint64_t v42 = *v33;
  unint64_t v43 = v33[1];
  sub_1000AA680(*v33, v43);
  uint64_t v44 = sub_100130420(v42, v43);
  sub_1000AA8F0(v42, v43);
  id v93 = v22;
  if (!v44)
  {
    unint64_t v45 = v31;
    uint64_t v44 = sub_1000B4D08((uint64_t)v45).super.isa;
  }
  uint64_t v118 = v33;
  aBlock[0] = v44;
  sub_1000F45CC(aBlock);
  uint64_t v46 = CKRecord.recordType.getter();
  uint64_t v48 = v47;

  sub_100174420(v40, v46, v48, 0);
  swift_bridgeObjectRelease();
  uint64_t v49 = v109;
  uint64_t v50 = v106;
  uint64_t v51 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, &v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_identifier], v111);
  uint64_t v53 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v52 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v54 = v108;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v56 = v55;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v112);
  *(unsigned char *)uint64_t v39 = 1;
  *(void *)(v39 + 8) = 0xD000000000000013;
  *(void *)(v39 + 16) = 0x80000001001F7610;
  uint64_t v57 = (int *)v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v39 + *(int *)(v107 + 24), v50, v51);
  uint64_t v58 = (void *)(v39 + v57[7]);
  void *v58 = v53;
  v58[1] = v52;
  *(void *)(v39 + v57[8]) = v56;
  *(_OWORD *)(v39 + v57[9]) = xmmword_1001D3390;
  sub_100185B98(v37, v39);
  uint64_t v60 = (void *)sub_100160454();
  uint64_t v61 = (void *)v60[9];
  uint64_t v63 = v113;
  uint64_t v62 = v114;
  *uint64_t v113 = v61;
  uint64_t v64 = v115;
  (*(void (**)(void *, void, uint64_t))(v62 + 104))(v63, enum case for DispatchPredicate.notOnQueue(_:), v115);
  id v65 = v61;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v62 + 8))(v63, v64);
  if (v49)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v66 = sub_100160454();
      uint64_t v68 = *v118;
      unint64_t v69 = v118[1];
      sub_1000AA680(*v118, v69);
      uint64_t v70 = sub_100130420(v68, v69);
      sub_1000AA8F0(v68, v69);
      if (!v70)
      {
        unint64_t v71 = v31;
        uint64_t v70 = sub_1000B4D08((uint64_t)v71).super.isa;
      }
      aBlock[0] = v70;
      sub_1000F45CC(aBlock);
      id v72 = [v70 recordID:v93];

      uint64_t v73 = swift_allocObject();
      swift_weakInit();
      uint64_t v74 = swift_allocObject();
      *(void *)(v74 + 16) = v31;
      *(void *)(v74 + 24) = v73;
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v66;
      *(void *)(v75 + 24) = v72;
      *(void *)(v75 + 32) = sub_1001B1B64;
      *(void *)(v75 + 40) = v74;
      *(unsigned char *)(v75 + 48) = 1;
      uint64_t v76 = v31;
      swift_retain();
      swift_unknownObjectRetain();
      id v77 = v72;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v75);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = v95;
      id v87 = v93;
      id v88 = [v87 description];
      uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v91 = v90;

      unint64_t v92 = v94;
      *(void *)(v86 + 56) = &type metadata for String;
      *(void *)(v86 + 64) = v92;
      *(void *)(v86 + 32) = v89;
      *(void *)(v86 + 40) = v91;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000CD620(0, v105, v103, v104);

    sub_1001AEFFC(v39, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_18;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

uint64_t sub_1001A4D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001A4E4C(a1, a2, a3, a4, a5, a6, a7, a8, (char *)sub_1001B1AD4, sub_10019F680, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000CD620, (char *)sub_1001B1ABC, sub_1001A04E4, (uint64_t)sub_1001B1AA4, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A14DC, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A242C, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A3210, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A3FFC);
}

uint64_t sub_1001A4E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, void (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a11)(void, uint64_t, uint64_t, uint64_t), char *a12, void (*a13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a14, void (*a15)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a16)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a17)(void *, uint64_t, uint64_t, uint64_t, uint64_t), void (*a18)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v132 = a7;
  uint64_t v135 = a5;
  uint64_t v123 = a11;
  uint64_t v112 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v112);
  uint64_t v115 = (char *)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v111 = (uint64_t)&v110 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v117);
  uint64_t v124 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v116 = (uint64_t)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v129 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v130 = (char *)&v110 - v31;
  __chkstk_darwin(v32);
  uint64_t v138 = (char *)&v110 - v33;
  uint64_t v125 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v125);
  unint64_t v128 = (char *)&v110 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for DeviceRecord();
  uint64_t v126 = *(void *)(v35 - 8);
  uint64_t v127 = v35;
  __chkstk_darwin(v35);
  uint64_t v120 = (uint64_t)&v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = a6;
  swift_retain_n();
  uint64_t v134 = a8;
  swift_retain_n();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v121 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v37 = swift_allocObject();
  long long v110 = xmmword_1001D0A20;
  *(_OWORD *)(v37 + 16) = xmmword_1001D0A20;
  *(void *)(v37 + 56) = &type metadata for String;
  unint64_t v38 = sub_1000AA5E0();
  *(void *)(v37 + 32) = a3;
  *(void *)(v37 + 40) = a4;
  *(void *)(v37 + 96) = &type metadata for String;
  *(void *)(v37 + 104) = v38;
  unint64_t v122 = v38;
  *(void *)(v37 + 64) = v38;
  *(void *)(v37 + 72) = a1;
  uint64_t v136 = a1;
  *(void *)(v37 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v137 = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3;
  if ((a3 != 0x6552656369766544 || a4 != 0xEC00000064726F63)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (a3 == 0xD00000000000001ELL && a4 == 0x80000001001F6CC0
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v57 = v138;
      unint64_t v128 = a12;
      uint64_t v58 = sub_10015F0D4();
      if (qword_1002618E8 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1000AA0CC(v28, (uint64_t)qword_10026AD20);
      uint64_t v60 = v131;
      (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v57, v59, v28);
      URL.path.getter();
      uint64_t v62 = v129;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v63 = v130;
      URL.appendingPathComponent(_:)();
      uint64_t v64 = *(void (**)(char *, uint64_t))(v60 + 8);
      v64(v62, v28);
      __chkstk_darwin(v65);
      *((void *)&v110 - 2) = v63;
      *((void *)&v110 - 1) = v58;
      uint64_t v66 = (uint64_t)v124;
      OS_dispatch_queue.sync<A>(execute:)();
      v64(v63, v28);
      swift_release();
      v64(v138, v28);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v66, 1, v119) == 1)
      {
        sub_1000AA894(v66, (uint64_t *)&unk_100263A00);
        static os_log_type_t.error.getter();
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_1001CFDB0;
        unint64_t v68 = v122;
        *(void *)(v67 + 56) = &type metadata for String;
        *(void *)(v67 + 64) = v68;
        *(void *)(v67 + 32) = v136;
        *(void *)(v67 + 40) = v137;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      uint64_t v53 = v116;
      sub_1001AF05C(v66, v116, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      uint64_t v69 = v133;
      swift_retain();
      uint64_t v70 = v134;
      swift_retain();
      a13(v53, v135, v69, v132, v70);
      swift_release();
      swift_release();
      uint64_t v56 = type metadata accessor for DeviceSupportInformationRecord;
LABEL_29:
      sub_1001AEFFC(v53, (uint64_t (*)(void))v56);
      goto LABEL_30;
    }
    uint64_t v71 = v137;
    if (a3 == 0x746553636967614DLL && a4 == 0xED000073676E6974
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      id v72 = v138;
      uint64_t v73 = sub_10015F0D4();
      if (qword_100261890 != -1) {
        swift_once();
      }
      uint64_t v74 = sub_1000AA0CC(v28, (uint64_t)qword_10026AB90);
      uint64_t v75 = v131;
      (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v72, v74, v28);
      URL.path.getter();
      id v77 = v129;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v78 = v130;
      URL.appendingPathComponent(_:)();
      id v79 = *(void (**)(char *, uint64_t))(v75 + 8);
      v79(v77, v28);
      __chkstk_darwin(v80);
      *((void *)&v110 - 2) = v78;
      *((void *)&v110 - 1) = v73;
      uint64_t v81 = (uint64_t)v115;
      OS_dispatch_queue.sync<A>(execute:)();
      v79(v78, v28);
      swift_release();
      v79(v138, v28);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v81, 1, v114) == 1)
      {
        sub_1000AA894(v81, &qword_1002623D0);
        static os_log_type_t.error.getter();
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = xmmword_1001CFDB0;
        unint64_t v83 = v122;
        *(void *)(v82 + 56) = &type metadata for String;
        *(void *)(v82 + 64) = v83;
        *(void *)(v82 + 32) = v136;
        *(void *)(v82 + 40) = v137;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      uint64_t v53 = v111;
      sub_1001AF05C(v81, v111, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      uint64_t v87 = v133;
      swift_retain();
      uint64_t v88 = v134;
      swift_retain();
      a15(v53, 0, v135, v87, v132, v88);
      swift_release();
      swift_release();
      uint64_t v56 = type metadata accessor for MagicPairingSettingsRecord;
      goto LABEL_29;
    }
    uint64_t v90 = v28;
    uint64_t v91 = v135;
    if (a3 == 0x6563697665444141 && a4 == 0xEE0064726F636552
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v140 = &type metadata for AudioAccessoryFeatures;
      unint64_t v141 = sub_1000AE4C4();
      char v92 = isFeatureEnabled(_:)();
      sub_1000ABFF0((uint64_t)v139);
      uint64_t v93 = v133;
      uint64_t v86 = v134;
      if (v92)
      {
        sub_10015F0D4();
        if (qword_100261918 != -1) {
          swift_once();
        }
        uint64_t v94 = sub_1000AA0CC(v28, (uint64_t)qword_10026AD60);
        uint64_t v95 = v131;
        uint64_t v96 = (uint64_t)v138;
        (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v138, v94, v90);
        uint64_t v97 = v136;
        uint64_t v98 = (void *)sub_10015CA58(v136, v71, v96, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v96, v90);
        if (v98)
        {
          swift_retain();
          swift_retain();
          a16(v98, v91, v93, v132, v86);
LABEL_57:

          swift_release_n();
          goto LABEL_31;
        }
        goto LABEL_58;
      }
    }
    else
    {
      uint64_t v93 = v133;
      uint64_t v86 = v134;
      if ((a3 != 0xD000000000000011 || a4 != 0x80000001001FDE80)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if ((a3 != 0xD000000000000013 || a4 != 0x80000001001F7610)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          static os_log_type_t.error.getter();
          uint64_t v108 = swift_allocObject();
          *(_OWORD *)(v108 + 16) = v110;
          unint64_t v109 = v122;
          *(void *)(v108 + 56) = &type metadata for String;
          *(void *)(v108 + 64) = v109;
          *(void *)(v108 + 32) = v39;
          *(void *)(v108 + 40) = a4;
          *(void *)(v108 + 96) = &type metadata for String;
          *(void *)(v108 + 104) = v109;
          *(void *)(v108 + 72) = v136;
          *(void *)(v108 + 80) = v71;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_log(_:dso:log:_:_:)();
          goto LABEL_59;
        }
LABEL_53:
        sub_10015F0D4();
        if (qword_1002618E0 != -1) {
          swift_once();
        }
        uint64_t v103 = sub_1000AA0CC(v28, (uint64_t)qword_10026AC28);
        uint64_t v104 = v131;
        uint64_t v105 = (uint64_t)v138;
        (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v138, v103, v90);
        uint64_t v97 = v136;
        uint64_t v98 = (void *)sub_10015CA58(v136, v71, v105, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v105, v90);
        if (v98)
        {
          swift_retain();
          swift_retain();
          a18(v98, v91, v93, v132, v86);
          goto LABEL_57;
        }
LABEL_58:
        static os_log_type_t.error.getter();
        uint64_t v106 = swift_allocObject();
        *(_OWORD *)(v106 + 16) = xmmword_1001CFDB0;
        unint64_t v107 = v122;
        *(void *)(v106 + 56) = &type metadata for String;
        *(void *)(v106 + 64) = v107;
        *(void *)(v106 + 32) = v97;
        *(void *)(v106 + 40) = v71;
        swift_bridgeObjectRetain();
        os_log(_:dso:log:_:_:)();
LABEL_59:
        swift_bridgeObjectRelease();
        uint64_t v85 = v93;
        uint64_t v84 = v132;
        goto LABEL_27;
      }
    }
    uint64_t v140 = &type metadata for AudioAccessoryFeatures;
    unint64_t v141 = sub_1000AE4C4();
    char v99 = isFeatureEnabled(_:)();
    sub_1000ABFF0((uint64_t)v139);
    if (v99)
    {
      sub_10015F0D4();
      if (qword_100261860 != -1) {
        swift_once();
      }
      uint64_t v100 = sub_1000AA0CC(v28, (uint64_t)qword_10026AB00);
      uint64_t v101 = v131;
      uint64_t v102 = (uint64_t)v138;
      (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v138, v100, v90);
      uint64_t v97 = v136;
      uint64_t v98 = (void *)sub_10015CA58(v136, v71, v102, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v102, v90);
      if (v98)
      {
        swift_retain();
        swift_retain();
        a17(v98, v91, v93, v132, v86);
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    goto LABEL_53;
  }
  id v40 = v138;
  uint64_t v41 = v28;
  uint64_t v124 = a9;
  uint64_t v42 = sub_10015F0D4();
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_1000AA0CC(v28, (uint64_t)qword_10026AAE0);
  uint64_t v44 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v40, v43, v28);
  URL.path.getter();
  uint64_t v46 = v129;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v47 = v130;
  URL.appendingPathComponent(_:)();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
  v48(v46, v41);
  __chkstk_darwin(v49);
  *((void *)&v110 - 2) = v47;
  *((void *)&v110 - 1) = v42;
  uint64_t v50 = (uint64_t)v128;
  OS_dispatch_queue.sync<A>(execute:)();
  v48(v47, v41);
  swift_release();
  v48(v138, v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v50, 1, v127) != 1)
  {
    uint64_t v53 = v120;
    sub_1001AF05C(v50, v120, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v54 = v133;
    swift_retain();
    uint64_t v55 = v134;
    swift_retain();
    a10(v53, v135, v54, v132, v55);
    swift_release();
    swift_release();
    uint64_t v56 = type metadata accessor for DeviceRecord;
    goto LABEL_29;
  }
  sub_1000AA894(v50, (uint64_t *)&unk_100263A10);
  static os_log_type_t.error.getter();
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_1001CFDB0;
  unint64_t v52 = v122;
  *(void *)(v51 + 56) = &type metadata for String;
  *(void *)(v51 + 64) = v52;
  *(void *)(v51 + 32) = v136;
  *(void *)(v51 + 40) = v137;
  swift_bridgeObjectRetain();
LABEL_26:
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v84 = v132;
  uint64_t v85 = v133;
  uint64_t v86 = v134;
LABEL_27:
  v123(0, v85, v84, v86);
LABEL_30:
  swift_release_n();
LABEL_31:
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_1001A6354(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t *v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  uint64_t v13 = (char *)(v11 + 32 + 8 * v4);
  sub_1000B66A0(0, (unint64_t *)&unk_100263B40);
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_1001A6670(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001A6760(a1, a2, a3, a4, a5, (unint64_t)sub_1001B1AA4, (uint64_t)sub_1001B1B04, (void (*)(void))sub_1000D0520, (uint64_t)&unk_10023C798, (uint64_t)sub_1001B1B50);
}

uint64_t sub_1001A66E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001A6760(a1, a2, a3, a4, a5, (unint64_t)sub_1001B1AA4, (uint64_t)sub_1001B1B04, (void (*)(void))sub_1000D04F8, (uint64_t)&unk_10023C770, (uint64_t)sub_1001B1B50);
}

uint64_t sub_1001A6760(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9, uint64_t a10)
{
  uint64_t v165 = a5;
  unint64_t v166 = a8;
  uint64_t v157 = a7;
  unint64_t v173 = a6;
  uint64_t v163 = a3;
  uint64_t v164 = a4;
  uint64_t v12 = type metadata accessor for UUID();
  __chkstk_darwin(v12 - 8);
  uint64_t v154 = (char *)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v153 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v153 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v153 - v22;
  uint64_t v171 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v171);
  uint64_t v170 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v172 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  uint64_t v155 = (uint64_t)&v153 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v160 = (uint64_t)&v153 - v27;
  __chkstk_darwin(v28);
  uint64_t v156 = (uint64_t)&v153 - v29;
  __chkstk_darwin(v30);
  uint64_t v159 = (uint64_t)&v153 - v31;
  __chkstk_darwin(v32);
  uint64_t v162 = (uint64_t)&v153 - v33;
  __chkstk_darwin(v34);
  uint64_t v158 = (uint64_t)&v153 - v35;
  uint64_t v161 = a2;
  uint64_t v36 = sub_10015F0D4();
  unint64_t v174 = a1;
  id v37 = [a1 bluetoothAddress];
  uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v38;

  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1000AA0CC(v14, (uint64_t)qword_10026AB90);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v23, v40, v14);
  uint64_t v169 = v23;
  uint64_t v42 = v41;
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v167 = v39;
  URL.appendingPathComponent(_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v15 + 8);
  v43(v17, v14);
  __chkstk_darwin(v44);
  *(&v153 - 2) = (uint64_t)v20;
  *(&v153 - 1) = v36;
  uint64_t v45 = (uint64_t)v170;
  OS_dispatch_queue.sync<A>(execute:)();
  v43(v20, v14);
  swift_release();
  swift_bridgeObjectRelease();
  v43(v169, v14);
  uint64_t v46 = v175;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v45, 1, v175) != 1)
  {
    uint64_t v87 = v162;
    sub_1001AF05C(v45, v162, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v88 = v174;
    unsigned __int8 v89 = sub_1000E0A90(v174);
    uint64_t v90 = v159;
    sub_1001AEF94(v87, v159, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if ((v89 & 1) == 0)
    {
      char v92 = (uint64_t *)(v90 + *(int *)(v46 + 20));
      uint64_t v93 = *v92;
      unint64_t v94 = v92[1];
      sub_1000AA680(*v92, v94);
      Class isa = sub_100130420(v93, v94);
      sub_1000AA8F0(v93, v94);
      uint64_t v96 = v156;
      sub_1001AEF94(v90, v156, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      if (!isa) {
        Class isa = sub_1000B4934(v96).super.isa;
      }
      sub_1001AEFFC(v96, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      v176[0] = isa;
      sub_1000DE038(v176);
      id v97 = [isa recordChangeTag];

      if (v97)
      {

        sub_1001AEFFC(v90, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        LODWORD(v175) = static os_log_type_t.default.getter();
        if (qword_100261948 != -1) {
          swift_once();
        }
        sub_1000AA024((uint64_t *)&unk_100262110);
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = xmmword_1001D0A20;
        uint64_t v99 = v162;
        uint64_t v100 = v160;
        sub_1001AEF94(v162, v160, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v101 = sub_1000DA054();
        uint64_t v103 = v102;
        sub_1001AEFFC(v100, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v98 + 56) = &type metadata for String;
        unint64_t v104 = sub_1000AA5E0();
        *(void *)(v98 + 64) = v104;
        *(void *)(v98 + 32) = v101;
        *(void *)(v98 + 40) = v103;
        id v105 = v88;
        id v106 = [v105 description];
        uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v109 = v108;

        *(void *)(v98 + 96) = &type metadata for String;
        *(void *)(v98 + 104) = v104;
        *(void *)(v98 + 72) = v107;
        *(void *)(v98 + 80) = v109;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        ((void (*)(void, uint64_t, uint64_t, uint64_t))v166)(0, v163, v164, v165);
        uint64_t v110 = v99;
        return sub_1001AEFFC(v110, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      }
    }
    unint64_t v173 = 0;
    sub_1001AEFFC(v90, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    static os_log_type_t.default.getter();
    if (qword_100261948 != -1) {
      swift_once();
    }
    sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v119 = swift_allocObject();
    *(_OWORD *)(v119 + 16) = xmmword_1001CFDB0;
    uint64_t v120 = v162;
    uint64_t v121 = v160;
    sub_1001AEF94(v162, v160, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v122 = sub_1000DA054();
    uint64_t v124 = v123;
    sub_1001AEFFC(v121, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    *(void *)(v119 + 56) = &type metadata for String;
    unint64_t v125 = sub_1000AA5E0();
    *(void *)(v119 + 64) = v125;
    *(void *)(v119 + 32) = v122;
    *(void *)(v119 + 40) = v124;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.default.getter();
    uint64_t v126 = swift_allocObject();
    *(_OWORD *)(v126 + 16) = xmmword_1001D0A20;
    uint64_t v127 = (uint64_t *)(v120 + *(int *)(v175 + 24));
    uint64_t v129 = *v127;
    uint64_t v128 = v127[1];
    *(void *)(v126 + 56) = &type metadata for String;
    *(void *)(v126 + 64) = v125;
    *(void *)(v126 + 32) = v129;
    *(void *)(v126 + 40) = v128;
    swift_bridgeObjectRetain();
    uint64_t v130 = v174;
    id v131 = [v130 description];
    uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v134 = v133;

    *(void *)(v126 + 96) = &type metadata for String;
    *(void *)(v126 + 104) = v125;
    *(void *)(v126 + 72) = v132;
    *(void *)(v126 + 80) = v134;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v86 = v158;
    sub_1001AEF94(v120, v158, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    sub_1000DF374(v130);
    sub_1001AEFFC(v120, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
LABEL_26:
    uint64_t v135 = sub_10015F0D4();
    __chkstk_darwin(v135);
    *(&v153 - 2) = v136;
    *(&v153 - 1) = v86;
    unint64_t v137 = v173;
    OS_dispatch_queue.sync<A>(execute:)();
    if (v137)
    {
      swift_release();
      static os_log_type_t.error.getter();
      if (qword_100261948 != -1) {
        swift_once();
      }
      sub_1000AA024((uint64_t *)&unk_100262110);
      uint64_t v138 = swift_allocObject();
      *(_OWORD *)(v138 + 16) = xmmword_1001CFDB0;
      v176[0] = (id)v137;
      swift_errorRetain();
      sub_1000AA024(&qword_100261D60);
      uint64_t v139 = String.init<A>(describing:)();
      uint64_t v141 = v140;
      *(void *)(v138 + 56) = &type metadata for String;
      *(void *)(v138 + 64) = sub_1000AA5E0();
      *(void *)(v138 + 32) = v139;
      *(void *)(v138 + 40) = v141;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1000EB9B4();
      uint64_t v142 = swift_allocError();
      *uint64_t v143 = v137 | 0x4000000000000000;
      swift_errorRetain();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v166)(v142, v163, v164, v165);
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      swift_release();
      ((void (*)(void, uint64_t, uint64_t, uint64_t))v166)(0, v163, v164, v165);
      uint64_t v145 = (uint64_t *)(v86 + *(int *)(v175 + 20));
      uint64_t v146 = *v145;
      unint64_t v147 = v145[1];
      sub_1000AA680(*v145, v147);
      uint64_t v148 = sub_100130420(v146, v147);
      sub_1000AA8F0(v146, v147);
      uint64_t v149 = v155;
      sub_1001AEF94(v86, v155, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      if (!v148) {
        uint64_t v148 = sub_1000B4934(v149).super.isa;
      }
      sub_1001AEFFC(v149, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
      v176[0] = v148;
      sub_1000DE038(v176);
      uint64_t v150 = v161;
      sub_100160454();
      uint64_t v151 = swift_allocObject();
      *(void *)(v151 + 16) = v150;
      *(void *)(v151 + 24) = v148;
      swift_retain();
      id v152 = v148;
      sub_10011B210(v152, 1, a10, v151);

      swift_unknownObjectRelease();
      swift_release();
    }
    uint64_t v110 = v86;
    return sub_1001AEFFC(v110, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  }
  unint64_t v173 = 0;
  sub_1000AA894(v45, &qword_1002623D0);
  uint64_t v47 = v174;
  id v48 = [v174 masterKey];
  if (v48)
  {
    uint64_t v49 = v48;
    uint64_t v50 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    sub_1000AA8F0(v50, v52);
    id v53 = [v47 masterHint];
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v57 = v56;

      sub_1000AA8F0(v55, v57);
      id v58 = [v47 accessoryKey];
      if (v58)
      {
        uint64_t v59 = v58;
        uint64_t v60 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v62 = v61;

        sub_1000AA8F0(v60, v62);
        id v63 = [v47 accessoryHint];
        if (v63)
        {
          uint64_t v64 = v63;
          uint64_t v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v67 = v66;

          sub_1000AA8F0(v65, v67);
          id v68 = [v47 encryptionKey];
          if (v68)
          {
            uint64_t v69 = v68;
            uint64_t v70 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v72 = v71;

            sub_1000AA8F0(v70, v72);
            id v73 = [v47 irk];
            if (v73)
            {
              uint64_t v74 = v73;
              uint64_t v75 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v77 = v76;

              sub_1000AA8F0(v75, v77);
              static os_log_type_t.default.getter();
              if (qword_100261948 != -1) {
                swift_once();
              }
              sub_1000AA024((uint64_t *)&unk_100262110);
              uint64_t v78 = swift_allocObject();
              *(_OWORD *)(v78 + 16) = xmmword_1001CFDB0;
              id v79 = v47;
              id v80 = [v79 description];
              uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v83 = v82;

              *(void *)(v78 + 56) = &type metadata for String;
              *(void *)(v78 + 64) = sub_1000AA5E0();
              *(void *)(v78 + 32) = v81;
              *(void *)(v78 + 40) = v83;
              os_log(_:dso:log:_:_:)();
              swift_bridgeObjectRelease();
              id v84 = v79;
              uint64_t v85 = (uint64_t)v154;
              UUID.init()();
              uint64_t v86 = v158;
              sub_1000DAE44(v85, v84, v158);
              goto LABEL_26;
            }
          }
        }
      }
    }
  }
  static os_log_type_t.error.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v111 = swift_allocObject();
  *(_OWORD *)(v111 + 16) = xmmword_1001CFDB0;
  id v112 = v47;
  id v113 = [v112 description];
  uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v116 = v115;

  *(void *)(v111 + 56) = &type metadata for String;
  *(void *)(v111 + 64) = sub_1000AA5E0();
  *(void *)(v111 + 32) = v114;
  *(void *)(v111 + 40) = v116;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1000EB9B4();
  swift_allocError();
  *uint64_t v117 = 0x8000000000000028;
  v166();
  return swift_errorRelease();
}

uint64_t sub_1001A7780(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1001A6760(a1, a2, a3, a4, a5, (unint64_t)sub_1001B1AA4, (uint64_t)sub_1001B1B04, (void (*)(void))sub_1000D0FB0, (uint64_t)&unk_10023C6F8, (uint64_t)sub_1001B0A08);
}

void sub_1001A77F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v126 = a3;
  uint64_t v127 = a5;
  uint64_t v125 = a4;
  uint64_t v118 = type metadata accessor for DispatchPredicate();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v116 = (uint64_t *)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v115 = type metadata accessor for Date();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v111 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for UUID();
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v109 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v110);
  uint64_t v121 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v131 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v102 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v102 - v17;
  uint64_t v129 = sub_1000AA024((uint64_t *)&unk_100263A10);
  __chkstk_darwin(v129);
  uint64_t v132 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for DeviceRecord();
  uint64_t v133 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v105 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v102 - v22;
  __chkstk_darwin(v23);
  uint64_t v108 = (uint64_t)&v102 - v24;
  __chkstk_darwin(v25);
  uint64_t v106 = (uint64_t)&v102 - v26;
  uint64_t v104 = v27;
  __chkstk_darwin(v28);
  uint64_t v119 = (uint64_t *)((char *)&v102 - v29);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v123 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v122 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000A56C4();
  uint64_t v33 = v32;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v124 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v124;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v33;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v120 = a2;
  uint64_t v34 = sub_10015F0D4();
  uint64_t v35 = *(int *)(v135 + 24);
  uint64_t v134 = a1;
  uint64_t v107 = (uint64_t *)(a1 + v35);
  if (qword_100261850 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1000AA0CC(v11, (uint64_t)qword_10026AAE0);
  uint64_t v37 = v131;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 16);
  uint64_t v128 = v18;
  v38(v18, v36, v11);
  URL.path.getter();
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v40 = v130;
  URL.appendingPathComponent(_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v13, v11);
  __chkstk_darwin(v42);
  *(&v102 - 2) = (uint64_t)v40;
  *(&v102 - 1) = v34;
  uint64_t v43 = (uint64_t)v132;
  OS_dispatch_queue.sync<A>(execute:)();
  v41(v40, v11);
  swift_release();
  v41(v128, v11);
  uint64_t v44 = v135;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v43, 1, v135) == 1)
  {
    sub_1000AA894(v43, (uint64_t *)&unk_100263A10);
    static os_log_type_t.error.getter();
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v122;
    uint64_t v46 = sub_1000A56C4();
    unint64_t v47 = v124;
    *(void *)(v45 + 56) = &type metadata for String;
    *(void *)(v45 + 64) = v47;
    *(void *)(v45 + 32) = v46;
    *(void *)(v45 + 40) = v48;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000D1900(0, v126, v125, v127);
  }
  else
  {
    uint64_t v49 = v119;
    sub_1001AF05C(v43, (uint64_t)v119, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v51 = *v49;
    unint64_t v52 = v49[1];
    sub_1000AA680(*v49, v52);
    Class isa = sub_100130420(v51, v52);
    sub_1000AA8F0(v51, v52);
    uint64_t v54 = v106;
    sub_1001AEF94((uint64_t)v49, v106, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!isa) {
      Class isa = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v54, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v55 = (uint64_t)v121;
    id v136 = isa;
    sub_1000A7948(&v136);
    id v56 = [isa recordID];

    uint64_t v58 = *v49;
    unint64_t v59 = v49[1];
    sub_1000AA680(*v49, v59);
    uint64_t v60 = sub_100130420(v58, v59);
    sub_1000AA8F0(v58, v59);
    uint64_t v61 = v108;
    sub_1001AEF94((uint64_t)v49, v108, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    if (!v60) {
      uint64_t v60 = sub_1000B4B34().super.isa;
    }
    sub_1001AEFFC(v61, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    uint64_t v62 = v120;
    id v136 = v60;
    sub_1000A7948(&v136);
    uint64_t v63 = CKRecord.recordType.getter();
    uint64_t v65 = v64;

    sub_100174420(v56, v63, v65, 0);
    swift_bridgeObjectRelease();
    uint64_t v66 = v134 + *(int *)(v44 + 20);
    uint64_t v67 = v112;
    id v68 = v109;
    uint64_t v69 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v109, v66, v113);
    uint64_t v71 = *v107;
    uint64_t v70 = v107[1];
    swift_bridgeObjectRetain();
    unint64_t v72 = v111;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v74 = v73;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v72, v115);
    *(unsigned char *)uint64_t v55 = 1;
    strcpy((char *)(v55 + 8), "DeviceRecord");
    *(unsigned char *)(v55 + 21) = 0;
    *(_WORD *)(v55 + 22) = -5120;
    uint64_t v75 = (int *)v110;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v55 + *(int *)(v110 + 24), v68, v69);
    unint64_t v76 = (void *)(v55 + v75[7]);
    *unint64_t v76 = v71;
    v76[1] = v70;
    *(void *)(v55 + v75[8]) = v74;
    *(_OWORD *)(v55 + v75[9]) = xmmword_1001D3390;
    sub_100185B98(v62, v55);
    uint64_t v78 = (void *)sub_100160454();
    id v79 = (void *)v78[9];
    id v80 = v116;
    *uint64_t v116 = v79;
    uint64_t v81 = v117;
    uint64_t v82 = v118;
    (*(void (**)(void *, void, uint64_t))(v117 + 104))(v80, enum case for DispatchPredicate.notOnQueue(_:), v118);
    id v83 = v79;
    LOBYTE(v71) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v81 + 8))(v80, v82);
    if (v71)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v136)
      {
        uint64_t v84 = sub_100160454();
        uint64_t v86 = *v49;
        unint64_t v87 = v49[1];
        sub_1000AA680(*v49, v87);
        uint64_t v88 = sub_100130420(v86, v87);
        sub_1000AA8F0(v86, v87);
        uint64_t v89 = v103;
        sub_1001AEF94((uint64_t)v49, v103, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        if (!v88) {
          uint64_t v88 = sub_1000B4B34().super.isa;
        }
        sub_1001AEFFC(v89, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        id v136 = v88;
        sub_1000A7948(&v136);
        id v90 = [v88 recordID];

        uint64_t v91 = swift_allocObject();
        swift_weakInit();
        uint64_t v92 = v105;
        sub_1001AEF94((uint64_t)v49, v105, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        unint64_t v93 = (*(unsigned __int8 *)(v133 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80);
        unint64_t v94 = (v104 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v95 = swift_allocObject();
        sub_1001AF05C(v92, v95 + v93, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
        *(void *)(v95 + v94) = v91;
        uint64_t v96 = swift_allocObject();
        *(void *)(v96 + 16) = v84;
        *(void *)(v96 + 24) = v90;
        *(void *)(v96 + 32) = sub_1001AE95C;
        *(void *)(v96 + 40) = v95;
        *(unsigned char *)(v96 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v97 = v90;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v96);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = v122;
        uint64_t v99 = sub_1000A56C4();
        unint64_t v100 = v124;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = v100;
        *(void *)(v98 + 32) = v99;
        *(void *)(v98 + 40) = v101;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
      sub_1000D1900(0, v126, v125, v127);
      sub_1001AEFFC(v55, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_1001A865C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v131 = type metadata accessor for DispatchPredicate();
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (uint64_t *)((char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v128 = type metadata accessor for Date();
  uint64_t v126 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  unint64_t v124 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for UUID();
  uint64_t v125 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  long long v122 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v123);
  uint64_t v133 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v120 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v118 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for DispatchQoS();
  uint64_t v117 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v140 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v142 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v109 - v22;
  uint64_t v141 = sub_1000AA024((uint64_t *)&unk_100263A00);
  __chkstk_darwin(v141);
  uint64_t v143 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DeviceSupportInformationRecord();
  uint64_t v145 = *(void *)(v25 - 8);
  uint64_t v146 = v25;
  __chkstk_darwin(v25);
  uint64_t v135 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v26;
  __chkstk_darwin(v27);
  uint64_t v132 = (uint64_t)&v109 - v28;
  uint64_t v29 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v29 + 2) = a3;
  *((void *)v29 + 3) = a4;
  uint64_t v113 = a4;
  unint64_t v137 = v29;
  *((void *)v29 + 4) = a5;
  uint64_t v115 = a3;
  swift_retain();
  uint64_t v114 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v112 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v111 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  uint64_t v31 = sub_1000F8EB8();
  uint64_t v32 = a1;
  uint64_t v34 = v33;
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v110 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v110;
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v144 = a2;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v146 + 24);
  uint64_t v136 = v32;
  uint64_t v138 = *(void *)(v32 + v36);
  if (qword_1002618E8 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1000AA0CC(v16, (uint64_t)qword_10026AD20);
  uint64_t v38 = v17;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v139 = v23;
  v39(v23, v37, v16);
  uint64_t v41 = v35;
  URL.path.getter();
  uint64_t v42 = v140;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v43 = v142;
  URL.appendingPathComponent(_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v42, v16);
  __chkstk_darwin(v45);
  *(&v109 - 2) = (uint64_t)v43;
  *(&v109 - 1) = v41;
  uint64_t v46 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v44(v43, v16);
  swift_release();
  v44(v139, v16);
  uint64_t v47 = v145;
  uint64_t v48 = v146;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v46, 1, v146) == 1)
  {
    sub_1000AA894(v46, (uint64_t *)&unk_100263A00);
    uint64_t v49 = *(void **)(v144 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v50 = v135;
    sub_1001AEF94(v136, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    unint64_t v51 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    unint64_t v52 = (v134 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v53 = (char *)swift_allocObject();
    sub_1001AF05C(v50, (uint64_t)&v53[v51], (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    uint64_t v54 = (uint64_t (**)(uint64_t))&v53[v52];
    uint64_t v55 = v137;
    void *v54 = sub_1001B09B4;
    v54[1] = v55;
    aBlock[4] = sub_1001AE920;
    aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023C3C8;
    id v56 = _Block_copy(aBlock);
    id v57 = v49;
    swift_retain();
    uint64_t v58 = v116;
    static DispatchQoS.unspecified.getter();
    unint64_t v147 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    unint64_t v59 = v118;
    uint64_t v60 = v121;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v117 + 8))(v58, v119);
    swift_release();
LABEL_12:
    swift_release();
    return;
  }
  uint64_t v61 = v46;
  uint64_t v62 = v132;
  sub_1001AF05C(v61, v132, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
  sub_1000FB560(v62, aBlock);
  uint64_t v64 = v144;
  id v65 = aBlock[0];
  id v66 = [aBlock[0] recordID];

  sub_1000FB560(v62, aBlock);
  uint64_t v68 = (uint64_t)v133;
  id v69 = aBlock[0];
  uint64_t v70 = CKRecord.recordType.getter();
  uint64_t v72 = v71;

  uint64_t v73 = v64;
  sub_100174420(v66, v70, v72, 0);

  swift_bridgeObjectRelease();
  uint64_t v74 = v125;
  uint64_t v75 = v122;
  uint64_t v76 = v127;
  (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v122, v62, v127);
  uint64_t v77 = *(int *)(v48 + 24);
  uint64_t v78 = v73;
  id v79 = (uint64_t *)(v62 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  swift_bridgeObjectRetain();
  uint64_t v82 = v124;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v84 = v83;
  (*(void (**)(char *, uint64_t))(v126 + 8))(v82, v128);
  *(unsigned char *)uint64_t v68 = 1;
  *(void *)(v68 + 8) = 0xD00000000000001ELL;
  *(void *)(v68 + 16) = 0x80000001001F6CC0;
  uint64_t v85 = (int *)v123;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v68 + *(int *)(v123 + 24), v75, v76);
  uint64_t v86 = (void *)(v68 + v85[7]);
  *uint64_t v86 = v81;
  v86[1] = v80;
  *(void *)(v68 + v85[8]) = v84;
  *(_OWORD *)(v68 + v85[9]) = xmmword_1001D3390;
  sub_100185B98(v78, v68);
  uint64_t v88 = (void *)sub_100160454();
  uint64_t v89 = (void *)v88[9];
  id v90 = v129;
  *uint64_t v129 = v89;
  uint64_t v91 = v130;
  uint64_t v92 = v131;
  (*(void (**)(void *, void, uint64_t))(v130 + 104))(v90, enum case for DispatchPredicate.notOnQueue(_:), v131);
  id v93 = v89;
  LOBYTE(v81) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v91 + 8))(v90, v92);
  if (v81)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v94 = sub_100160454();
      sub_1000FB560(v62, aBlock);
      id v96 = aBlock[0];
      id v97 = [aBlock[0] recordID];

      uint64_t v98 = swift_allocObject();
      swift_weakInit();
      uint64_t v99 = v135;
      sub_1001AEF94(v62, v135, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      unint64_t v100 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
      unint64_t v101 = (v134 + v100 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v102 = swift_allocObject();
      sub_1001AF05C(v99, v102 + v100, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
      *(void *)(v102 + v101) = v98;
      uint64_t v103 = swift_allocObject();
      *(void *)(v103 + 16) = v94;
      *(void *)(v103 + 24) = v97;
      *(void *)(v103 + 32) = sub_1001AE928;
      *(void *)(v103 + 40) = v102;
      *(unsigned char *)(v103 + 48) = 1;
      swift_retain();
      swift_unknownObjectRetain();
      id v104 = v97;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v103);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v105 = swift_allocObject();
      *(_OWORD *)(v105 + 16) = v111;
      uint64_t v106 = sub_1000F8EB8();
      unint64_t v107 = v110;
      *(void *)(v105 + 56) = &type metadata for String;
      *(void *)(v105 + 64) = v107;
      *(void *)(v105 + 32) = v106;
      *(void *)(v105 + 40) = v108;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000D1900(0, v115, v113, v114);
    sub_1001AEFFC(v68, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    sub_1001AEFFC(v62, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
    goto LABEL_12;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001A9654(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v135 = a4;
  uint64_t v136 = a6;
  uint64_t v134 = a5;
  int v117 = a2;
  uint64_t v125 = type metadata accessor for DispatchPredicate();
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (uint64_t *)((char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v122 = type metadata accessor for Date();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v118 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for UUID();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v115 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v116);
  uint64_t v133 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for URL();
  uint64_t v141 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v139 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v142 = (char *)&v110 - v14;
  __chkstk_darwin(v15);
  uint64_t v146 = (uint64_t *)((char *)&v110 - v16);
  uint64_t v140 = sub_1000AA024(&qword_1002623D0);
  __chkstk_darwin(v140);
  uint64_t v143 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MagicPairingSettingsRecord();
  uint64_t v145 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v111 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v114 = (uint64_t)&v110 - v21;
  __chkstk_darwin(v22);
  uint64_t v113 = (uint64_t)&v110 - v23;
  __chkstk_darwin(v24);
  uint64_t v132 = (uint64_t)&v110 - v25;
  uint64_t v112 = v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v110 - v28;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v127 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v30 = swift_allocObject();
  long long v126 = xmmword_1001CFDB0;
  *(_OWORD *)(v30 + 16) = xmmword_1001CFDB0;
  sub_1001AEF94(a1, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  uint64_t v31 = a1;
  uint64_t v32 = sub_1000DA054();
  uint64_t v34 = v33;
  uint64_t v130 = v29;
  sub_1001AEFFC((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
  *(void *)(v30 + 56) = &type metadata for String;
  unint64_t v128 = sub_1000AA5E0();
  *(void *)(v30 + 64) = v128;
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 40) = v34;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v131 = a3;
  uint64_t v35 = sub_10015F0D4();
  uint64_t v36 = *(int *)(v18 + 24);
  uint64_t v129 = v31;
  uint64_t v137 = *(void *)(v31 + v36);
  uint64_t v138 = v18;
  if (qword_100261890 != -1) {
    swift_once();
  }
  uint64_t v37 = v144;
  sub_1000AA0CC(v144, (uint64_t)qword_10026AB90);
  uint64_t v38 = v141;
  (*(void (**)(void))(v141 + 16))();
  URL.path.getter();
  uint64_t v40 = v139;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v142;
  URL.appendingPathComponent(_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v40, v37);
  __chkstk_darwin(v43);
  *(&v110 - 2) = (uint64_t)v41;
  *(&v110 - 1) = v35;
  uint64_t v44 = (uint64_t)v143;
  OS_dispatch_queue.sync<A>(execute:)();
  v42(v41, v37);
  swift_release();
  v42((char *)v146, v37);
  uint64_t v45 = v138;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v44, 1, v138) == 1)
  {
    sub_1000AA894(v44, &qword_1002623D0);
    static os_log_type_t.error.getter();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v126;
    uint64_t v47 = (uint64_t)v130;
    sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v48 = sub_1000DA054();
    uint64_t v50 = v49;
    sub_1001AEFFC(v47, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    unint64_t v51 = v128;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = v51;
    *(void *)(v46 + 32) = v48;
    *(void *)(v46 + 40) = v50;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1000D1900(0, v135, v134, v136);
  }
  else
  {
    uint64_t v52 = v132;
    sub_1001AF05C(v44, v132, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v54 = (uint64_t *)(v52 + *(int *)(v45 + 20));
    uint64_t v55 = *v54;
    unint64_t v56 = v54[1];
    sub_1000AA680(*v54, v56);
    Class isa = sub_100130420(v55, v56);
    sub_1000AA8F0(v55, v56);
    uint64_t v58 = v113;
    sub_1001AEF94(v52, v113, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    if (!isa) {
      Class isa = sub_1000B4934(v58).super.isa;
    }
    sub_1001AEFFC(v58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = isa;
    sub_1000DE038(&v147);
    id v59 = [isa recordID];

    uint64_t v146 = v54;
    uint64_t v61 = *v54;
    unint64_t v62 = v54[1];
    sub_1000AA680(v61, v62);
    uint64_t v63 = sub_100130420(v61, v62);
    sub_1000AA8F0(v61, v62);
    uint64_t v64 = v114;
    sub_1001AEF94(v52, v114, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    uint64_t v65 = v45;
    if (!v63) {
      uint64_t v63 = sub_1000B4934(v64).super.isa;
    }
    sub_1001AEFFC(v64, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    id v147 = v63;
    sub_1000DE038(&v147);
    uint64_t v66 = CKRecord.recordType.getter();
    uint64_t v68 = v67;

    uint64_t v69 = v131;
    sub_100174420(v59, v66, v68, v117 & 1);

    swift_bridgeObjectRelease();
    uint64_t v70 = v119;
    uint64_t v71 = v115;
    uint64_t v72 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v115, v52, v120);
    uint64_t v73 = (uint64_t *)(v52 + *(int *)(v65 + 24));
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    swift_bridgeObjectRetain();
    uint64_t v76 = v118;
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v78 = v77;
    (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v122);
    id v79 = v133;
    unsigned char *v133 = 1;
    strcpy(v79 + 8, "MagicSettings");
    *((_WORD *)v79 + 11) = -4864;
    uint64_t v80 = (int *)v116;
    (*(void (**)(unsigned char *, char *, uint64_t))(v70 + 32))(&v79[*(int *)(v116 + 24)], v71, v72);
    uint64_t v81 = &v79[v80[7]];
    *uint64_t v81 = v75;
    v81[1] = v74;
    *(void *)&v79[v80[8]] = v78;
    *(_OWORD *)&v79[v80[9]] = xmmword_1001D3390;
    sub_100185B98(v69, (uint64_t)v79);
    uint64_t v83 = (void *)sub_100160454();
    uint64_t v84 = (void *)v83[9];
    uint64_t v85 = v123;
    *uint64_t v123 = v84;
    uint64_t v86 = v124;
    uint64_t v87 = v125;
    (*(void (**)(void *, void, uint64_t))(v124 + 104))(v85, enum case for DispatchPredicate.notOnQueue(_:), v125);
    id v88 = v84;
    LOBYTE(v75) = _dispatchPreconditionTest(_:)();
    (*(void (**)(void *, uint64_t))(v86 + 8))(v85, v87);
    if (v75)
    {
      OS_dispatch_queue.sync<A>(execute:)();
      swift_unknownObjectRelease();
      if (v147)
      {
        uint64_t v89 = sub_100160454();
        uint64_t v91 = *v146;
        unint64_t v92 = v146[1];
        sub_1000AA680(*v146, v92);
        id v93 = sub_100130420(v91, v92);
        sub_1000AA8F0(v91, v92);
        uint64_t v94 = v132;
        uint64_t v95 = v111;
        sub_1001AEF94(v132, v111, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        if (!v93) {
          id v93 = sub_1000B4934(v95).super.isa;
        }
        sub_1001AEFFC(v95, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        id v147 = v93;
        sub_1000DE038(&v147);
        id v96 = [v93 recordID];

        uint64_t v97 = swift_allocObject();
        swift_weakInit();
        uint64_t v98 = (uint64_t)v130;
        sub_1001AEF94(v94, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v99 = (*(unsigned __int8 *)(v145 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
        unint64_t v100 = (v112 + v99 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v101 = swift_allocObject();
        sub_1001AF05C(v98, v101 + v99, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        *(void *)(v101 + v100) = v97;
        uint64_t v102 = swift_allocObject();
        *(void *)(v102 + 16) = v89;
        *(void *)(v102 + 24) = v96;
        *(void *)(v102 + 32) = sub_1001ADA3C;
        *(void *)(v102 + 40) = v101;
        *(unsigned char *)(v102 + 48) = 1;
        swift_retain();
        swift_unknownObjectRetain();
        id v103 = v96;
        swift_retain();
        sub_10011A9F8((uint64_t)sub_1001AD6BC, v102);
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        static os_log_type_t.error.getter();
        uint64_t v104 = swift_allocObject();
        *(_OWORD *)(v104 + 16) = v126;
        uint64_t v105 = (uint64_t)v130;
        sub_1001AEF94(v129, (uint64_t)v130, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        uint64_t v106 = sub_1000DA054();
        uint64_t v108 = v107;
        sub_1001AEFFC(v105, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
        unint64_t v109 = v128;
        *(void *)(v104 + 56) = &type metadata for String;
        *(void *)(v104 + 64) = v109;
        *(void *)(v104 + 32) = v106;
        *(void *)(v104 + 40) = v108;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v94 = v132;
      }
      sub_1000D1900(0, v135, v134, v136);
      sub_1001AEFFC((uint64_t)v133, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
      sub_1001AEFFC(v94, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
    }
    else
    {
      __break(1u);
      swift_release();
      swift_release();
      __break(1u);
    }
  }
}

void sub_1001AA5A4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v125 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v122 = *(void *)(v9 - 8);
  uint64_t v123 = v9;
  __chkstk_darwin(v9);
  uint64_t v121 = (uint64_t *)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  __chkstk_darwin(v11);
  uint64_t v116 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = v13;
  __chkstk_darwin(v13);
  uint64_t v114 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v115);
  uint64_t v124 = (char *)&v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v111 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v109 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a3;
  void v23[3] = a4;
  unsigned char v23[4] = a5;
  unint64_t v128 = &type metadata for AudioAccessoryFeatures;
  unint64_t v129 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v24 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v24 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v82 = swift_allocError();
    *uint64_t v83 = 0x8000000000000038;
    sub_1000D1900(v82, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v108 = v16;
  uint64_t v103 = a4;
  uint64_t v104 = a3;
  uint64_t v105 = a5;
  uint64_t v107 = v23;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v102 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v25 = swift_allocObject();
  long long v101 = xmmword_1001CFDB0;
  *(_OWORD *)(v25 + 16) = xmmword_1001CFDB0;
  uint64_t v26 = a1;
  id v27 = [v26 description];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  *(void *)(v25 + 56) = &type metadata for String;
  unint64_t v100 = sub_1000AA5E0();
  *(void *)(v25 + 64) = v100;
  *(void *)(v25 + 32) = v28;
  *(void *)(v25 + 40) = v30;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v106 = v26;
  uint64_t v31 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v32 = *(void *)&v26[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  if (qword_100261918 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1000AA0CC(v19, (uint64_t)qword_10026AD60);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v33, v19);
  uint64_t v34 = (char *)sub_10015CA58(v31, v32, (uint64_t)v22, (uint64_t *)&unk_100263A80, (uint64_t)sub_100197374);
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v35 = v108;
  if (!v34)
  {
    uint64_t v84 = *(void **)((char *)v125 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v85 = (void *)swift_allocObject();
    id v86 = v106;
    v85[2] = v106;
    v85[3] = sub_1001B1830;
    void v85[4] = v107;
    unint64_t v129 = (unint64_t)sub_1001B1B4C;
    uint64_t v130 = v85;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    unint64_t v128 = (ValueMetadata *)&unk_10023C4E0;
    uint64_t v87 = _Block_copy(aBlock);
    id v88 = v86;
    id v89 = v84;
    swift_retain();
    id v90 = v109;
    static DispatchQoS.unspecified.getter();
    long long v126 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    uint64_t v91 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v87);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v91, v35);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v90, v112);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v37 = (uint64_t *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  uint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata];
  unint64_t v39 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_cloudMetadata + 8];
  sub_1000AA680(v38, v39);
  Class isa = sub_100130420(v38, v39);
  sub_1000AA8F0(v38, v39);
  if (!isa)
  {
    uint64_t v41 = v34;
    Class isa = sub_1000B4F04((uint64_t)v41).super.isa;
  }
  uint64_t v42 = v124;
  uint64_t v43 = (uint64_t)v125;
  aBlock[0] = isa;
  sub_10012E130(aBlock);
  id v44 = [isa recordID];

  uint64_t v125 = v37;
  uint64_t v46 = *v37;
  unint64_t v47 = v37[1];
  sub_1000AA680(v46, v47);
  uint64_t v48 = sub_100130420(v46, v47);
  sub_1000AA8F0(v46, v47);
  if (!v48)
  {
    uint64_t v49 = v34;
    uint64_t v48 = sub_1000B4F04((uint64_t)v49).super.isa;
  }
  aBlock[0] = v48;
  sub_10012E130(aBlock);
  uint64_t v50 = CKRecord.recordType.getter();
  uint64_t v52 = v51;

  sub_100174420(v44, v50, v52, 0);
  swift_bridgeObjectRelease();
  uint64_t v54 = v117;
  uint64_t v53 = v118;
  uint64_t v55 = v114;
  (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v114, &v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_identifier], v118);
  uint64_t v57 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress];
  uint64_t v56 = *(void *)&v34[OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v58 = v116;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v119 + 8))(v58, v120);
  *uint64_t v42 = 1;
  strcpy(v42 + 8, "AADeviceRecord");
  v42[23] = -18;
  uint64_t v61 = (int *)v115;
  (*(void (**)(unsigned char *, char *, uint64_t))(v54 + 32))(&v42[*(int *)(v115 + 24)], v55, v53);
  unint64_t v62 = &v42[v61[7]];
  *unint64_t v62 = v57;
  v62[1] = v56;
  *(void *)&v42[v61[8]] = v60;
  *(_OWORD *)&v42[v61[9]] = xmmword_1001D3390;
  sub_100185B98(v43, (uint64_t)v42);
  uint64_t v64 = (void *)sub_100160454();
  uint64_t v65 = (void *)v64[9];
  uint64_t v67 = v121;
  uint64_t v66 = v122;
  *uint64_t v121 = v65;
  uint64_t v68 = v123;
  (*(void (**)(void *, void, uint64_t))(v66 + 104))(v67, enum case for DispatchPredicate.notOnQueue(_:), v123);
  id v69 = v65;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v66 + 8))(v67, v68);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v70 = sub_100160454();
      uint64_t v72 = *v125;
      unint64_t v73 = v125[1];
      sub_1000AA680(*v125, v73);
      uint64_t v74 = sub_100130420(v72, v73);
      sub_1000AA8F0(v72, v73);
      if (!v74)
      {
        uint64_t v75 = v34;
        uint64_t v74 = sub_1000B4F04((uint64_t)v75).super.isa;
      }
      aBlock[0] = v74;
      sub_10012E130(aBlock);
      id v76 = [v74 recordID];

      uint64_t v77 = swift_allocObject();
      swift_weakInit();
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v34;
      *(void *)(v78 + 24) = v77;
      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v70;
      *(void *)(v79 + 24) = v76;
      *(void *)(v79 + 32) = sub_1001B1B5C;
      *(void *)(v79 + 40) = v78;
      *(unsigned char *)(v79 + 48) = 1;
      uint64_t v80 = v34;
      swift_retain();
      swift_unknownObjectRetain();
      id v81 = v76;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v79);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = v101;
      id v93 = v106;
      id v94 = [v93 description];
      uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v97 = v96;

      unint64_t v98 = v100;
      *(void *)(v92 + 56) = &type metadata for String;
      *(void *)(v92 + 64) = v98;
      *(void *)(v92 + 32) = v95;
      *(void *)(v92 + 40) = v97;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000D1900(0, v104, v103, v105);

    sub_1001AEFFC((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001AB388(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v123 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v121 = v9;
  __chkstk_darwin(v9);
  uint64_t v119 = (uint64_t *)((char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for UUID();
  uint64_t v115 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v113);
  uint64_t v122 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v109 = (char *)&v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)swift_allocObject();
  void v21[2] = a3;
  v21[3] = a4;
  v21[4] = a5;
  long long v126 = &type metadata for AudioAccessoryFeatures;
  unint64_t v127 = sub_1000AE4C4();
  swift_retain();
  swift_retain();
  char v22 = isFeatureEnabled(_:)();
  sub_1000ABFF0((uint64_t)aBlock);
  if ((v22 & 1) == 0)
  {
    sub_1000EB9B4();
    uint64_t v80 = swift_allocError();
    *id v81 = 0x8000000000000038;
    sub_1000D1900(v80, a3, a4, a5);
    swift_errorRelease();
LABEL_20:
    swift_release();
    return;
  }
  uint64_t v106 = v14;
  uint64_t v101 = a4;
  uint64_t v102 = a3;
  uint64_t v103 = a5;
  uint64_t v105 = v21;
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v100 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v23 = swift_allocObject();
  long long v99 = xmmword_1001CFDB0;
  *(_OWORD *)(v23 + 16) = xmmword_1001CFDB0;
  char v24 = a1;
  id v25 = [v24 description];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  *(void *)(v23 + 56) = &type metadata for String;
  unint64_t v98 = sub_1000AA5E0();
  *(void *)(v23 + 64) = v98;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v28;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10015F0D4();
  id v104 = v24;
  uint64_t v29 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  if (qword_100261860 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1000AA0CC(v17, (uint64_t)qword_10026AB00);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v31, v17);
  uint64_t v32 = (char *)sub_10015CA58(v29, v30, (uint64_t)v20, (uint64_t *)&unk_100263A98, (uint64_t)sub_1001ACFF8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v33 = v106;
  if (!v32)
  {
    uint64_t v82 = *(void **)((char *)v123 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    uint64_t v83 = (void *)swift_allocObject();
    id v84 = v104;
    v83[2] = v104;
    v83[3] = sub_1001B1830;
    v83[4] = v105;
    unint64_t v127 = (unint64_t)sub_1001B1B4C;
    unint64_t v128 = v83;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100106F90;
    long long v126 = (ValueMetadata *)&unk_10023C5A8;
    uint64_t v85 = _Block_copy(aBlock);
    id v86 = v84;
    id v87 = v82;
    swift_retain();
    id v88 = v107;
    static DispatchQoS.unspecified.getter();
    uint64_t v124 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v89 = v109;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v85);

    (*(void (**)(char *, uint64_t))(v111 + 8))(v89, v33);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v88, v110);
    swift_release();
    goto LABEL_20;
  }
  uint64_t v35 = (uint64_t *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  uint64_t v36 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata];
  unint64_t v37 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_cloudMetadata + 8];
  sub_1000AA680(v36, v37);
  Class isa = sub_100130420(v36, v37);
  sub_1000AA8F0(v36, v37);
  if (!isa)
  {
    unint64_t v39 = v32;
    Class isa = sub_1000B4D2C((uint64_t)v39).super.isa;
  }
  uint64_t v40 = (uint64_t)v122;
  uint64_t v41 = (uint64_t)v123;
  aBlock[0] = isa;
  sub_1000B37D0((unint64_t)aBlock);
  id v42 = [isa recordID];

  uint64_t v123 = v35;
  uint64_t v44 = *v35;
  unint64_t v45 = v35[1];
  sub_1000AA680(v44, v45);
  uint64_t v46 = sub_100130420(v44, v45);
  sub_1000AA8F0(v44, v45);
  if (!v46)
  {
    unint64_t v47 = v32;
    uint64_t v46 = sub_1000B4D2C((uint64_t)v47).super.isa;
  }
  aBlock[0] = v46;
  sub_1000B37D0((unint64_t)aBlock);
  uint64_t v48 = CKRecord.recordType.getter();
  uint64_t v50 = v49;

  sub_100174420(v42, v48, v50, 0);
  swift_bridgeObjectRelease();
  uint64_t v51 = v115;
  uint64_t v52 = v112;
  uint64_t v53 = v117;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, &v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_identifier], v117);
  uint64_t v55 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress];
  uint64_t v54 = *(void *)&v32[OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v56 = v114;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v58 = v57;
  (*(void (**)(char *, uint64_t))(v116 + 8))(v56, v118);
  *(unsigned char *)uint64_t v40 = 1;
  *(void *)(v40 + 8) = 0xD000000000000011;
  *(void *)(v40 + 16) = 0x80000001001FDE80;
  uint64_t v59 = (int *)v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v40 + *(int *)(v113 + 24), v52, v53);
  uint64_t v60 = (void *)(v40 + v59[7]);
  *uint64_t v60 = v55;
  v60[1] = v54;
  *(void *)(v40 + v59[8]) = v58;
  *(_OWORD *)(v40 + v59[9]) = xmmword_1001D3390;
  sub_100185B98(v41, v40);
  unint64_t v62 = (void *)sub_100160454();
  uint64_t v63 = (void *)v62[9];
  uint64_t v65 = v119;
  uint64_t v64 = v120;
  *uint64_t v119 = v63;
  uint64_t v66 = v121;
  (*(void (**)(void *, void, uint64_t))(v64 + 104))(v65, enum case for DispatchPredicate.notOnQueue(_:), v121);
  id v67 = v63;
  LOBYTE(v53) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v64 + 8))(v65, v66);
  if (v53)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if (aBlock[0])
    {
      uint64_t v68 = sub_100160454();
      uint64_t v70 = *v123;
      unint64_t v71 = v123[1];
      sub_1000AA680(*v123, v71);
      uint64_t v72 = sub_100130420(v70, v71);
      sub_1000AA8F0(v70, v71);
      if (!v72)
      {
        unint64_t v73 = v32;
        uint64_t v72 = sub_1000B4D2C((uint64_t)v73).super.isa;
      }
      aBlock[0] = v72;
      sub_1000B37D0((unint64_t)aBlock);
      id v74 = [v72 recordID];

      uint64_t v75 = swift_allocObject();
      swift_weakInit();
      uint64_t v76 = swift_allocObject();
      *(void *)(v76 + 16) = v32;
      *(void *)(v76 + 24) = v75;
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v68;
      *(void *)(v77 + 24) = v74;
      *(void *)(v77 + 32) = sub_1001B1B60;
      *(void *)(v77 + 40) = v76;
      *(unsigned char *)(v77 + 48) = 1;
      uint64_t v78 = v32;
      swift_retain();
      swift_unknownObjectRetain();
      id v79 = v74;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v77);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = v99;
      id v91 = v104;
      id v92 = [v91 description];
      uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v95 = v94;

      unint64_t v96 = v98;
      *(void *)(v90 + 56) = &type metadata for String;
      *(void *)(v90 + 64) = v96;
      *(void *)(v90 + 32) = v93;
      *(void *)(v90 + 40) = v95;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000D1900(0, v102, v101, v103);

    sub_1001AEFFC(v40, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_20;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

void sub_1001AC174(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v118 = a2;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v114 = *(void *)(v9 - 8);
  uint64_t v115 = v9;
  __chkstk_darwin(v9);
  uint64_t v113 = (id *)((char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v106 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for BTDeferredRecord();
  __chkstk_darwin(v107);
  uint64_t v116 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  long long v99 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for DispatchQoS();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  v20[3] = a4;
  uint64_t v103 = a4;
  uint64_t v117 = v20;
  v20[4] = a5;
  uint64_t v105 = a3;
  swift_retain();
  uint64_t v104 = a5;
  swift_retain();
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    swift_once();
  }
  uint64_t v96 = sub_1000AA024((uint64_t *)&unk_100262110);
  uint64_t v21 = swift_allocObject();
  long long v95 = xmmword_1001CFDB0;
  *(_OWORD *)(v21 + 16) = xmmword_1001CFDB0;
  char v22 = a1;
  id v23 = [v22 description];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  *(void *)(v21 + 56) = &type metadata for String;
  unint64_t v94 = sub_1000AA5E0();
  *(void *)(v21 + 64) = v94;
  *(void *)(v21 + 32) = v24;
  *(void *)(v21 + 40) = v26;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v27 = v118;
  sub_10015F0D4();
  uint64_t v28 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v29 = *(void *)&v22[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  if (qword_1002618E0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1000AA0CC(v16, (uint64_t)qword_10026AC28);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v30, v16);
  uint64_t v31 = (char *)sub_10015CA58(v28, v29, (uint64_t)v19, (uint64_t *)&unk_100263AB0, (uint64_t)sub_1001AD024);
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (!v31)
  {
    uint64_t v78 = *(void **)((char *)v27 + OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue);
    id v79 = (void *)swift_allocObject();
    v79[2] = v22;
    v79[3] = sub_1001B1830;
    v79[4] = v117;
    aBlock[4] = sub_1001B1B4C;
    aBlock[5] = v79;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_100106F90;
    void aBlock[3] = &unk_10023C670;
    uint64_t v80 = _Block_copy(aBlock);
    id v81 = v22;
    id v82 = v78;
    swift_retain();
    uint64_t v83 = v97;
    static DispatchQoS.unspecified.getter();
    uint64_t v119 = _swiftEmptyArrayStorage;
    sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000AA024(&qword_100263550);
    sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
    id v84 = v99;
    uint64_t v85 = v102;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v80);

    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v85);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v83, v100);
    swift_release();
LABEL_18:
    swift_release();
    return;
  }
  uint64_t v33 = (uint64_t *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  uint64_t v34 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata];
  unint64_t v35 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_cloudMetadata + 8];
  sub_1000AA680(v34, v35);
  Class isa = sub_100130420(v34, v35);
  sub_1000AA8F0(v34, v35);
  uint64_t v37 = (uint64_t)v27;
  if (!isa)
  {
    uint64_t v38 = v31;
    Class isa = sub_1000B4D08((uint64_t)v38).super.isa;
  }
  uint64_t v39 = (uint64_t)v116;
  aBlock[0] = isa;
  sub_1000F45CC(aBlock);
  id v40 = [isa recordID];

  uint64_t v42 = *v33;
  unint64_t v43 = v33[1];
  sub_1000AA680(*v33, v43);
  uint64_t v44 = sub_100130420(v42, v43);
  sub_1000AA8F0(v42, v43);
  id v93 = v22;
  if (!v44)
  {
    unint64_t v45 = v31;
    uint64_t v44 = sub_1000B4D08((uint64_t)v45).super.isa;
  }
  uint64_t v118 = v33;
  aBlock[0] = v44;
  sub_1000F45CC(aBlock);
  uint64_t v46 = CKRecord.recordType.getter();
  uint64_t v48 = v47;

  sub_100174420(v40, v46, v48, 0);
  swift_bridgeObjectRelease();
  uint64_t v49 = v109;
  uint64_t v50 = v106;
  uint64_t v51 = v111;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v106, &v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_identifier], v111);
  uint64_t v53 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress];
  uint64_t v52 = *(void *)&v31[OBJC_IVAR____TtC15audioaccessoryd19HMDeviceCloudRecord_bluetoothAddress + 8];
  swift_bridgeObjectRetain();
  uint64_t v54 = v108;
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v56 = v55;
  (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v112);
  *(unsigned char *)uint64_t v39 = 1;
  *(void *)(v39 + 8) = 0xD000000000000013;
  *(void *)(v39 + 16) = 0x80000001001F7610;
  uint64_t v57 = (int *)v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v39 + *(int *)(v107 + 24), v50, v51);
  uint64_t v58 = (void *)(v39 + v57[7]);
  void *v58 = v53;
  v58[1] = v52;
  *(void *)(v39 + v57[8]) = v56;
  *(_OWORD *)(v39 + v57[9]) = xmmword_1001D3390;
  sub_100185B98(v37, v39);
  uint64_t v60 = (void *)sub_100160454();
  uint64_t v61 = (void *)v60[9];
  uint64_t v63 = v113;
  uint64_t v62 = v114;
  *uint64_t v113 = v61;
  uint64_t v64 = v115;
  (*(void (**)(void *, void, uint64_t))(v62 + 104))(v63, enum case for DispatchPredicate.notOnQueue(_:), v115);
  id v65 = v61;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v62 + 8))(v63, v64);
  if (v49)
  {
    OS_dispatch_queue.sync<A>(execute:)();
    swift_unknownObjectRelease();
    if ((uint64_t)aBlock[0])
    {
      uint64_t v66 = sub_100160454();
      uint64_t v68 = *v118;
      unint64_t v69 = v118[1];
      sub_1000AA680(*v118, v69);
      uint64_t v70 = sub_100130420(v68, v69);
      sub_1000AA8F0(v68, v69);
      if (!v70)
      {
        unint64_t v71 = v31;
        uint64_t v70 = sub_1000B4D08((uint64_t)v71).super.isa;
      }
      aBlock[0] = v70;
      sub_1000F45CC(aBlock);
      id v72 = [v70 recordID:v93];

      uint64_t v73 = swift_allocObject();
      swift_weakInit();
      uint64_t v74 = swift_allocObject();
      *(void *)(v74 + 16) = v31;
      *(void *)(v74 + 24) = v73;
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v66;
      *(void *)(v75 + 24) = v72;
      *(void *)(v75 + 32) = sub_1001B1B64;
      *(void *)(v75 + 40) = v74;
      *(unsigned char *)(v75 + 48) = 1;
      uint64_t v76 = v31;
      swift_retain();
      swift_unknownObjectRetain();
      id v77 = v72;
      swift_retain();
      sub_10011A9F8((uint64_t)sub_1001AD6BC, v75);
      swift_unknownObjectRelease();

      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v86 = swift_allocObject();
      *(_OWORD *)(v86 + 16) = v95;
      id v87 = v93;
      id v88 = [v87 description];
      uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v91 = v90;

      unint64_t v92 = v94;
      *(void *)(v86 + 56) = &type metadata for String;
      *(void *)(v86 + 64) = v92;
      *(void *)(v86 + 32) = v89;
      *(void *)(v86 + 40) = v91;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    sub_1000D1900(0, v105, v103, v104);

    sub_1001AEFFC(v39, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
    goto LABEL_18;
  }
  __break(1u);
  swift_release();
  swift_release();
  __break(1u);
}

uint64_t sub_1001ACEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1001A4E4C(a1, a2, a3, a4, a5, a6, a7, a8, (char *)sub_1001B1AD4, sub_1001A77F8, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1000D1900, (char *)sub_1001B1ABC, sub_1001A865C, (uint64_t)sub_1001B1AA4, (void (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001A9654, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001AA5A4, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001AB388, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001AC174);
}

uint64_t sub_1001ACFC4@<X0>(uint64_t (*a1)(uint64_t, unint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001AD050(*(void *)(v2 + 16), a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1001ACFF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001ACFC4((uint64_t (*)(uint64_t, unint64_t))sub_100154F38, a1);
}

uint64_t sub_1001AD024@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001ACFC4((uint64_t (*)(uint64_t, unint64_t))sub_100155130, a1);
}

uint64_t sub_1001AD050(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t))
{
  if ([self isFirstUnlocked])
  {
    uint64_t v4 = Data.init(contentsOf:options:)();
    if (v2)
    {
      swift_errorRelease();
      return 0;
    }
    else
    {
      uint64_t v6 = v4;
      unint64_t v7 = v5;
      uint64_t v9 = a2(v6, v7);
      sub_1000AA8F0(v6, v7);
    }
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_100261950 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    return 0;
  }
  return v9;
}

uint64_t sub_1001AD298(uint64_t a1)
{
  return sub_10018A4FC(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1001AD2BC(uint64_t a1)
{
  return sub_10018A5C0(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1001AD2E0(uint64_t a1)
{
  return sub_10018A66C(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_1001AD304()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AD33C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001AD37C(uint64_t a1)
{
  sub_1001881DC(a1, *(void (**)(id))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1001AD388()
{
  swift_release();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1001AD3EC(uint64_t a1, uint64_t a2)
{
  return sub_100120120(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_1001AD428()
{
  return sub_1000EA540();
}

uint64_t sub_1001AD444()
{
  uint64_t v1 = (int *)(type metadata accessor for SoundProfileRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  sub_1000AA8F0(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v6 + v1[8];
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v6 + v1[9];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_1001AD600(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SoundProfileRecord() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void (**)(uint64_t))(v1 + v6);
  uint64_t v9 = *(void *)(v1 + v6 + 8);
  uint64_t v10 = *(void **)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_100187AB4(a1, v1 + v4, v7, v8, v9, v10);
}

void sub_1001AD6C0()
{
  sub_10015B998(*(char **)(v0 + 16), *(void (**)(char *, uint64_t))(v0 + 24));
}

uint64_t sub_1001AD6DC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000B66A0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AD72C()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_1001AD770()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_1001AD7B4()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_1001AD7F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001AD808()
{
  return swift_release();
}

uint64_t sub_1001AD810@<X0>(char *a1@<X8>)
{
  return sub_1000E9D14(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1001AD830()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001AD868()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_1001AD894()
{
  return sub_100150D9C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD89C()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AD8C8()
{
  return sub_10014CC64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD8D0()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_1001AD8FC()
{
  return sub_100150268(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD904()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_1001AD930()
{
  return sub_10014F734(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD938()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_1001AD964()
{
  return sub_10014EC08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD96C()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AD998()
{
  return sub_10014E198(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD9A0()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AD9CC()
{
  return sub_10014D6D4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AD9D4()
{
  return sub_1000E9280(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001AD9F0()
{
  sub_100159CAC(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001ADA10(void *a1, char a2)
{
  sub_10018729C(a1, a2 & 1, *(void *)(v2 + 16), *(id *)(v2 + 24));
}

uint64_t sub_1001ADA1C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001087A8(v1, a1);
}

uint64_t sub_1001ADA3C(uint64_t a1)
{
  return sub_1001B129C(a1, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1001857EC);
}

uint64_t sub_1001ADA6C()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001ADA98()
{
  return sub_10013E1BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001ADAA0@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (void (*)(uint64_t, unint64_t))sub_100155710, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, a1);
}

void sub_1001ADAF8()
{
  sub_100158A24(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001ADB14()
{
  return sub_1001B1448((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1001ADB40()
{
}

uint64_t sub_1001ADB48()
{
  uint64_t v1 = (int *)(type metadata accessor for MagicPairingSettingsRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1000AA8F0(*(void *)(v6 + v1[7]), *(void *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease();
  sub_1000AA8F0(*(void *)(v6 + v1[9]), *(void *)(v6 + v1[9] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[10]), *(void *)(v6 + v1[10] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[11]), *(void *)(v6 + v1[11] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[12]), *(void *)(v6 + v1[12] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[13]), *(void *)(v6 + v1[13] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[14]), *(void *)(v6 + v1[14] + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[32];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v4, v5);
}

void sub_1001ADDFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MagicPairingSettingsRecord() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100183278(a1, v4);
}

uint64_t sub_1001ADE6C()
{
  return sub_1001B1448((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1001ADE98()
{
  sub_10013B8D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001ADEA8(uint64_t a1)
{
  return sub_100181190(a1, *(void **)(v1 + 16));
}

void sub_1001ADEB4()
{
  sub_10015AF9C(*(char **)(v0 + 16), **(void ***)(v0 + 24));
}

uint64_t sub_1001ADED8(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023B988, (uint64_t)sub_1001ADF20, (uint64_t)&unk_10023B9A0);
}

void sub_1001ADF20()
{
}

uint64_t sub_1001ADF3C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100108400(v1, a1);
}

uint64_t sub_1001ADF58(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      unint64_t *v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_1000B66A0(0, (unint64_t *)&qword_100262960);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

void sub_1001AE248(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7 = String._bridgeToObjectiveC()();
  sub_1000AA024(&qword_1002631E8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001D2D50;
  *(void *)(inited + 32) = 0x726F727245;
  *(void *)(inited + 40) = 0xE500000000000000;
  id v9 = objc_allocWithZone((Class)NSString);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 initWithString:v10];

  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = 0x6D69547473726946;
  *(void *)(inited + 64) = 0xE900000000000065;
  *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithBool:a2 & 1];
  *(void *)(inited + 80) = 0x795464726F636552;
  *(void *)(inited + 88) = 0xEA00000000006570;
  CKRecord.recordType.getter();
  id v12 = objc_allocWithZone((Class)NSString);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithString:v13];

  *(void *)(inited + 96) = v14;
  *(void *)(inited + 104) = 0x73736563637553;
  *(void *)(inited + 112) = 0xE700000000000000;
  *(void *)(inited + 120) = [objc_allocWithZone((Class)NSNumber) initWithBool:a5 == 0];
  strcpy((char *)(inited + 128), "SyncDuration");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  Date.timeIntervalSince(_:)();
  *(void *)(inited + 144) = [objc_allocWithZone((Class)NSNumber) initWithDouble:v15];
  strcpy((char *)(inited + 152), "UploadDuration");
  *(unsigned char *)(inited + 167) = -18;
  *(void *)(inited + 168) = [objc_allocWithZone((Class)NSNumber) initWithDouble:0.0];
  strcpy((char *)(inited + 176), "UserInitiated");
  *(_WORD *)(inited + 190) = -4864;
  *(void *)(inited + 192) = [objc_allocWithZone((Class)NSNumber) initWithBool:0];
  sub_1000AFB88(inited);
  sub_1000B66A0(0, &qword_1002631F0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CUMetricsLog();
}

uint64_t sub_1001AE550(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1001AE568@<X0>(void *a1@<X8>)
{
  return sub_10018DD08(*(void **)(v1 + 16), a1);
}

uint64_t sub_1001AE584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1001AE5E8()
{
  sub_100156DA0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AE604()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE630()
{
  return sub_10014695C(*(void *)(v0 + 16));
}

void sub_1001AE638()
{
  sub_100157634(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AE654()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE680()
{
  return sub_100144778(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001AE688()
{
  sub_100158030(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AE6A4()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE6D0()
{
  return sub_10014258C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001AE6D8()
{
  sub_1001592B8(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001AE6F4()
{
  sub_100155AF8(*(char **)(v0 + 16), **(char ***)(v0 + 24));
}

uint64_t sub_1001AE714()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE740()
{
  return sub_10014ACF0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001AE748()
{
  sub_10015A570(*(void *)(v0 + 16), **(void ***)(v0 + 24));
}

uint64_t sub_1001AE768()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE794()
{
  return sub_100148D7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AE79C()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AE7C8()
{
  return sub_100146DBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AE7D8(uint64_t a1)
{
  return sub_10017F8B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001AE7E8(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023BC80, (uint64_t)sub_1001AE830, (uint64_t)&unk_10023BC98);
}

void sub_1001AE830()
{
}

void sub_1001AE84C()
{
  sub_100184628(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001AE884()
{
  return sub_100181058(*(void **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_1001AE8A8(uint64_t a1)
{
  return sub_10017E00C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001AE8B8(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023BD98, (uint64_t)sub_1001AE900, (uint64_t)&unk_10023BDB0);
}

void sub_1001AE900()
{
}

uint64_t sub_1001AE928(uint64_t a1)
{
  return sub_1001B129C(a1, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_10017C78C);
}

uint64_t sub_1001AE95C(uint64_t a1)
{
  return sub_1001B129C(a1, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_100176ED4);
}

uint64_t sub_1001AE98C()
{
  return sub_100163BC8();
}

void sub_1001AE994(void *a1, char a2)
{
}

uint64_t sub_1001AE9A0(void *a1)
{
  return sub_1001676F8(a1, *(void *)(v1 + 16), &OBJC_IVAR____TtC15audioaccessoryd17AAProxCardsRecord_bluetoothAddress) & 1;
}

uint64_t sub_1001AE9C8(void *a1)
{
  return sub_1001676F8(a1, *(void *)(v1 + 16), &OBJC_IVAR____TtC15audioaccessoryd14AADeviceRecord_bluetoothAddress) & 1;
}

uint64_t sub_1001AE9F0()
{
  uint64_t v1 = (int *)(type metadata accessor for BTDeferredRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[8];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  NSString v7 = (uint64_t *)(v0 + v3 + v1[11]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_1000AA8F0(*v7, v8);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1001AEB30(uint64_t a1)
{
  return sub_1001B129C(a1, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_1001671F0);
}

uint64_t sub_1001AEB60(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023BF50, (uint64_t)sub_1001AEBA8, (uint64_t)&unk_10023BF68);
}

void sub_1001AEBA8()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AEBD8(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023BFA0, (uint64_t)sub_1001AEC20, (uint64_t)&unk_10023BFB8);
}

void sub_1001AEC20()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AEC50(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023BFF0, (uint64_t)sub_1001AEC98, (uint64_t)&unk_10023C008);
}

void sub_1001AEC98()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AECC8(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023C040, (uint64_t)sub_1001AED10, (uint64_t)&unk_10023C058);
}

void sub_1001AED10()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AED40(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023C090, (uint64_t)sub_1001AED88, (uint64_t)&unk_10023C0A8);
}

void sub_1001AED88()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AEDB8(void *a1, char a2)
{
  return sub_1001716BC(a1, a2 & 1, v2, (uint64_t)&unk_10023C0E0, (uint64_t)sub_1001AEE44, (uint64_t)&unk_10023C0F8);
}

uint64_t sub_1001AEE00()
{
  sub_100129200(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001AEE44()
{
  sub_1001719D8(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1001AEE74()
{
}

uint64_t sub_1001AEE7C(void *a1)
{
  return sub_1001633F4(a1);
}

void sub_1001AEE84()
{
}

uint64_t sub_1001AEE8C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (void (*)(uint64_t, unint64_t))sub_100154D44, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, a1);
}

uint64_t sub_1001AEEE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (void (*)(uint64_t, unint64_t))sub_10015551C, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, a1);
}

uint64_t sub_1001AEF3C@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (void (*)(uint64_t, unint64_t))sub_100155904, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, a1);
}

uint64_t sub_1001AEF94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AEFFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001AF05C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AF0C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10015CC10((uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration, (void (*)(uint64_t, unint64_t))sub_100155328, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration, a1);
}

uint64_t sub_1001AF11C()
{
  return sub_1000EAF50();
}

uint64_t sub_1001AF138()
{
  return sub_1000EA780();
}

uint64_t sub_1001AF154()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AF180()
{
  return sub_100152518(*(void *)(v0 + 16));
}

uint64_t sub_1001AF188()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AF1B4()
{
  return sub_100152E08(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AF1BC()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001AF1E8()
{
  return sub_100151BD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001AF1F0()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_1001AF21C()
{
  return sub_1001536F8(*(void *)(v0 + 16));
}

uint64_t sub_1001AF224(uint64_t a1, unint64_t a2)
{
  uint64_t v140 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v120 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v139 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for DispatchQoS();
  uint64_t v119 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v137 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000AA024(&qword_100261EA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v130 = (long long *)((char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = 0;
  uint64_t v8 = type metadata accessor for UUID();
  id v9 = *(char **)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_100261948 != -1) {
    goto LABEL_126;
  }
  while (1)
  {
    uint64_t v129 = sub_1000AA024((uint64_t *)&unk_100262110);
    uint64_t v12 = swift_allocObject();
    long long v131 = xmmword_1001CFDB0;
    *(_OWORD *)(v12 + 16) = xmmword_1001CFDB0;
    NSString v13 = *(uint64_t (***)(uint64_t))(a1 + 16);
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v144 = v13;
    unint64_t v121 = a2 >> 62;
    if (!v13) {
      break;
    }
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = (char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v149 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = 0;
    uint64_t v143 = (void (**)(char *, uint64_t))(a1 + 32);
    unint64_t v148 = a2 & 0xC000000000000001;
    unint64_t v128 = (unsigned int (**)(long long *, uint64_t, uint64_t))(v9 + 48);
    unint64_t v127 = (void (**)(char *, long long *, uint64_t))(v9 + 32);
    long long v126 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v141 = _swiftEmptyArrayStorage;
    uint64_t v133 = "gCustomKeyBlobZone";
    unint64_t v132 = 0x80000001001F75F0;
    unint64_t v122 = 0x80000001001F6C20;
    uint64_t v125 = "Updating main device record: %@";
    unint64_t v123 = 0x80000001001F6D00;
    uint64_t v118 = "debugDescription";
    unint64_t v117 = 0x80000001001F7460;
    unint64_t v135 = v8;
    uint64_t v134 = v11;
    double v15 = v144;
    uint64_t v136 = (const char *)a1;
    while (1)
    {
      if ((uint64_t (**)(uint64_t))v14 == v15) {
        goto LABEL_125;
      }
      uint64_t v146 = v14;
      uint64_t v18 = (void **)&v143[3 * v14];
      uint64_t v19 = *v18;
      id v147 = (void (*)(void, void))v18[1];
      uint64_t v20 = v18[2];
      unint64_t v150 = (unint64_t)v20;
      if (v149) {
        break;
      }
      id v36 = v19;
      swift_bridgeObjectRetain();
LABEL_29:
      uint64_t v37 = v19;
      id v38 = [v19 zoneID:v117, v118];
      id v39 = [v38 zoneName];

      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      if (v40 == 0xD000000000000012 && v42 == v132 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v156 = &type metadata for AudioAccessoryFeatures;
        unint64_t v157 = sub_1000AE4C4();
        char v43 = isFeatureEnabled(_:)();
        sub_1000ABFF0((uint64_t)aBlock);
        if (v43) {
          goto LABEL_39;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        static os_log_type_t.error.getter();
        id v9 = (char *)qword_10026ADE8;
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = v131;
        *(void *)(v16 + 56) = sub_1000B66A0(0, &qword_1002629E0);
        *(void *)(v16 + 64) = sub_1001AD6DC(&qword_100263308, &qword_1002629E0);
        *(void *)(v16 + 32) = v37;
        id v17 = v37;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
      if (v40 == 0xD00000000000001ELL && v42 == v123 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
LABEL_39:
        id v44 = [v37 recordName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v45 = v130;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        if ((*v128)(v45, 1, v8) == 1)
        {
          uint64_t v46 = v45;
          uint64_t v47 = &qword_100261EA0;
          goto LABEL_52;
        }
        (*v127)(v11, v45, v8);
        double v48 = sub_100188DF8((uint64_t)v11, (uint64_t)v147, (uint64_t)v20, (uint64_t)&v152);
        if (v153)
        {
          sub_1001AE550(&v152, (uint64_t)aBlock);
          uint64_t v49 = v156;
          unint64_t v50 = v157;
          sub_1000ABF58(aBlock, (uint64_t)v156);
          uint64_t v51 = (void *)(*(uint64_t (**)(ValueMetadata *, unint64_t))(v50 + 56))(v49, v50);
          id v52 = [v51 encryptedValues];

          NSString v53 = String._bridgeToObjectiveC()();
          id v54 = [v52 objectForKeyedSubscript:v53];
          swift_unknownObjectRelease();

          if (v54)
          {
            id v151 = v54;
            sub_1000AA024(&qword_1002629D0);
            if (swift_dynamicCast())
            {
              long long v55 = v152;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v56 = v124;
              uint64_t v57 = sub_1001973A0(a2, v55, *((uint64_t *)&v55 + 1), (uint64_t)v147, v20);
              uint64_t v124 = v56;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              if (v57)
              {
                swift_bridgeObjectRelease();
                static os_log_type_t.debug.getter();
                uint64_t v58 = swift_allocObject();
                *(_OWORD *)(v58 + 16) = v131;
                sub_1001AE584((uint64_t)aBlock, (uint64_t)&v152);
                sub_1000AA024((uint64_t *)&unk_100263BE8);
                uint64_t v59 = String.init<A>(describing:)();
                uint64_t v61 = v60;
                *(void *)(v58 + 56) = &type metadata for String;
                *(void *)(v58 + 64) = sub_1000AA5E0();
                *(void *)(v58 + 32) = v59;
                *(void *)(v58 + 40) = v61;
                os_log(_:dso:log:_:_:)();
                swift_bridgeObjectRelease();
                static os_log_type_t.default.getter();
                uint64_t v62 = swift_allocObject();
                *(_OWORD *)(v62 + 16) = v131;
                *(void *)(v62 + 56) = sub_1000B66A0(0, (unint64_t *)&qword_100262960);
                *(void *)(v62 + 64) = sub_1001AD6DC((unint64_t *)&qword_100261A40, (unint64_t *)&qword_100262960);
                *(void *)(v62 + 32) = v57;
                id v9 = v57;
                os_log(_:dso:log:_:_:)();
                swift_bridgeObjectRelease();
                sub_1001AE584((uint64_t)aBlock, (uint64_t)&v152);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v141 = sub_1001B3074(0, v141[2] + 1, 1, v141);
                }
                unint64_t v64 = v141[2];
                unint64_t v63 = v141[3];
                a1 = (uint64_t)v136;
                if (v64 >= v63 >> 1) {
                  uint64_t v141 = sub_1001B3074((void *)(v63 > 1), v64 + 1, 1, v141);
                }
                uint64_t v8 = v135;
                id v11 = (char *)v134;
                id v65 = v141;
                v141[2] = v64 + 1;
                sub_1001AE550(&v152, (uint64_t)&v65[5 * v64 + 4]);

                (*v126)(v11, v8);
                sub_1000ABFF0((uint64_t)aBlock);
                goto LABEL_7;
              }
            }
          }
          (*v126)(v11, v8);
          sub_1000ABFF0((uint64_t)aBlock);
        }
        else
        {
          ((void (*)(char *, uint64_t, double))*v126)(v11, v8, v48);
          uint64_t v46 = &v152;
          uint64_t v47 = &qword_100263BE0;
LABEL_52:
          sub_1000AA894((uint64_t)v46, v47);
        }
        id v9 = v145;
        sub_100174420(v37, (uint64_t)v147, (uint64_t)v20, 1);
        swift_bridgeObjectRelease();

        goto LABEL_7;
      }
      if (v40 == 0xD000000000000010 && v42 == v117)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v66 & 1) == 0) {
          goto LABEL_6;
        }
      }
      if (v149)
      {
        if (v148)
        {
          swift_bridgeObjectRetain();
          uint64_t v68 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          id v67 = *(void **)(a2 + 32);
          swift_bridgeObjectRetain();
          uint64_t v68 = v67;
        }
        id v9 = v68;
        if ((void (*)(void, void))CKRecord.recordType.getter() == v147 && v69 == v20)
        {

          swift_bridgeObjectRelease();
          goto LABEL_68;
        }
        char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        if (v71)
        {

LABEL_68:
          swift_bridgeObjectRelease();
LABEL_69:
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        if (v149 != (char *)1)
        {
          uint64_t v72 = a1;
          if (v148)
          {
            uint64_t v73 = 1;
            while (1)
            {
              uint64_t v74 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v75 = (char *)(v73 + 1);
              if (__OFADD__(v73, 1)) {
                goto LABEL_132;
              }
              id v9 = (char *)v74;
              if ((void (*)(void, void))CKRecord.recordType.getter() == v147 && v76 == v150) {
                break;
              }
              char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease();
              if (v77) {
                goto LABEL_89;
              }
              ++v73;
              if (v75 == v149) {
                goto LABEL_88;
              }
            }

            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v72;
          }
          else
          {
            uint64_t v78 = 5;
            while (1)
            {
              id v79 = (char *)(v78 - 3);
              if (__OFADD__(v78 - 4, 1)) {
                goto LABEL_133;
              }
              id v9 = (char *)*(id *)(a2 + 8 * v78);
              if ((void (*)(void, void))CKRecord.recordType.getter() == v147 && v80 == v150) {
                break;
              }
              char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              if (v82)
              {
LABEL_89:

                swift_bridgeObjectRelease();
                a1 = v72;
                goto LABEL_69;
              }
              ++v78;
              if (v79 == v149)
              {
LABEL_88:
                uint64_t v70 = v37;
                swift_bridgeObjectRelease();
                a1 = v72;
                uint64_t v20 = (void *)v150;
                goto LABEL_65;
              }
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v72;
          }
          goto LABEL_69;
        }
        uint64_t v70 = v37;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v70 = v37;
      }
LABEL_65:
      id v9 = v145;
      sub_100174420(v70, (uint64_t)v147, (uint64_t)v20, 1);
      swift_bridgeObjectRelease();

LABEL_7:
      uint64_t v14 = v146 + 1;
      double v15 = v144;
      if ((uint64_t (**)(uint64_t))(v146 + 1) == v144)
      {
        swift_bridgeObjectRelease();
        goto LABEL_95;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v142 = (void (**)(char *, uint64_t))v19;
    id v21 = v19;
    swift_bridgeObjectRetain();
    a1 = 4;
    while (1)
    {
      id v23 = v148
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(a2 + 8 * a1);
      id v9 = v23;
      uint64_t v24 = (char *)(a1 - 3);
      if (__OFADD__(a1 - 4, 1)) {
        break;
      }
      unint64_t v25 = a2;
      id v26 = [v23 recordID];
      id v27 = [v26 recordName];

      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;

      id v30 = [v21 recordName];
      id v11 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      if ((char *)v8 == v11 && v29 == v32)
      {
        swift_bridgeObjectRelease_n();
        a2 = v25;
      }
      else
      {
        uint64_t v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a2 = v25;
        if ((v8 & 1) == 0)
        {

          uint64_t v20 = (void *)v150;
          goto LABEL_12;
        }
      }
      uint64_t v34 = CKRecord.recordType.getter();
      uint64_t v20 = (void *)v150;
      if ((void (*)(void, void))v34 == v147 && v35 == v150)
      {
        swift_bridgeObjectRelease();

LABEL_34:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a1 = (uint64_t)v136;
        uint64_t v8 = v135;
        id v11 = (char *)v134;
        goto LABEL_7;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_34;
      }
LABEL_12:
      ++a1;
      if (v24 == v149)
      {
        swift_bridgeObjectRelease();
        a1 = (uint64_t)v136;
        uint64_t v8 = v135;
        id v11 = (char *)v134;
        uint64_t v19 = v142;
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    swift_once();
  }
  uint64_t v141 = _swiftEmptyArrayStorage;
LABEL_95:
  static os_log_type_t.default.getter();
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v131;
  unint64_t v84 = v121;
  if (v121)
  {
    swift_bridgeObjectRetain();
    uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v85 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v83 + 56) = &type metadata for Int;
  *(void *)(v83 + 64) = &protocol witness table for Int;
  *(void *)(v83 + 32) = v85;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (v84)
  {
    unint64_t v87 = swift_bridgeObjectRetain();
    uint64_t v86 = (uint64_t)sub_100190E94(v87);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v86 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  aBlock[0] = v86;
  uint64_t v88 = v124;
  sub_100191C24(aBlock, sub_1001934B0);
  uint64_t v89 = aBlock[0];
  if (v88) {
    goto LABEL_134;
  }
  if (aBlock[0] < 0 || (aBlock[0] & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v90) {
      goto LABEL_129;
    }
LABEL_104:
    if (v90 >= 1)
    {
      uint64_t v91 = 0;
      uint64_t v146 = OBJC_IVAR____TtC15audioaccessoryd11DeviceStore_clientQueue;
      unint64_t v150 = v89 & 0xC000000000000001;
      uint64_t v144 = &v155;
      uint64_t v143 = (void (**)(char *, uint64_t))(v120 + 8);
      uint64_t v142 = (void (**)(char *, uint64_t))(v119 + 8);
      uint64_t v149 = "gCustomKeyBlobZone";
      unint64_t v148 = 0x80000001001F75F0;
      uint64_t v136 = "Updating main device record: %@";
      unint64_t v135 = 0x80000001001F6D00;
      uint64_t v134 = "debugDescription";
      uint64_t v133 = (char *)0x80000001001F7460;
      id v147 = (void (*)(void, void))v89;
      while (1)
      {
        if (v150) {
          id v104 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v104 = *(id *)(v89 + 8 * v91 + 32);
        }
        uint64_t v105 = v104;
        id v106 = [v104 recordID:v117];
        id v107 = [v106 zoneID];

        id v108 = [v107 zoneName];
        uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v111 = v110;

        if (v109 == 0xD000000000000012 && v111 == (char *)v148
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v156 = &type metadata for AudioAccessoryFeatures;
          unint64_t v157 = sub_1000AE4C4();
          char v112 = isFeatureEnabled(_:)();
          sub_1000ABFF0((uint64_t)aBlock);
          if ((v112 & 1) == 0) {
            goto LABEL_116;
          }
        }
        else if (v109 == 0xD00000000000001ELL && v111 == (char *)v135 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        }
               || v109 == 0xD000000000000010 && v111 == v133)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v113 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v113 & 1) == 0)
          {
            static os_log_type_t.error.getter();
            uint64_t v114 = swift_allocObject();
            *(_OWORD *)(v114 + 16) = v131;
            id v115 = [v105 recordID];
            *(void *)(v114 + 56) = sub_1000B66A0(0, &qword_1002629E0);
            *(void *)(v114 + 64) = sub_1001AD6DC(&qword_100263308, &qword_1002629E0);
            *(void *)(v114 + 32) = v115;
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
LABEL_116:

            goto LABEL_108;
          }
        }
        unint64_t v92 = v145;
        id v93 = *(void **)&v145[v146];
        unint64_t v94 = (void *)swift_allocObject();
        v94[2] = v92;
        v94[3] = v105;
        v94[4] = v141;
        unint64_t v157 = (unint64_t)sub_1001B0954;
        uint64_t v158 = v94;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        uint64_t v155 = sub_100106F90;
        uint64_t v156 = (ValueMetadata *)&unk_10023C300;
        long long v95 = _Block_copy(aBlock);
        id v96 = v93;
        swift_retain();
        id v97 = v105;
        swift_bridgeObjectRetain();
        uint64_t v98 = v137;
        static DispatchQoS.unspecified.getter();
        *(void *)&long long v152 = _swiftEmptyArrayStorage;
        sub_100197224((unint64_t *)&qword_100263140, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000AA024(&qword_100263550);
        sub_1000B5E24((unint64_t *)&qword_100263150, &qword_100263550);
        long long v99 = v139;
        uint64_t v100 = v90;
        uint64_t v101 = v140;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v95);

        uint64_t v102 = v99;
        uint64_t v89 = (uint64_t)v147;
        uint64_t v103 = v101;
        uint64_t v90 = v100;
        (*v143)(v102, v103);
        (*v142)(v98, v138);
        swift_release();
LABEL_108:
        if (v90 == ++v91) {
          goto LABEL_129;
        }
      }
    }
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v90 = *(void *)(aBlock[0] + 16);
  if (v90) {
    goto LABEL_104;
  }
LABEL_129:
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1001B090C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001B0954()
{
  return sub_100167DA8(*(void *)(v0 + 24), *(void *)(v0 + 32), 1);
}

uint64_t sub_1001B0984()
{
  return swift_release();
}

uint64_t sub_1001B098C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10010840C(v1, a1);
}

uint64_t sub_1001B09B4(uint64_t a1)
{
  return sub_1000D1900(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001B0A08(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023C720, (uint64_t)sub_1001B0A50, (uint64_t)&unk_10023C738);
}

void sub_1001B0A50()
{
}

uint64_t sub_1001B0A80(uint64_t a1)
{
  return sub_1000CD620(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001B0AD4(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023CBA8, (uint64_t)sub_1001B0B1C, (uint64_t)&unk_10023CBC0);
}

void sub_1001B0B1C()
{
}

uint64_t sub_1001B0B58(uint64_t a1)
{
  return sub_1000C8ADC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001B0B68()
{
  uint64_t v1 = *(void *)(type metadata accessor for DeviceSupportInformationRecord() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10017C680(v0 + v2, v3);
}

uint64_t sub_1001B0BFC()
{
  uint64_t v1 = (int *)(type metadata accessor for DeviceSupportInformationRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1000AA8F0(*(void *)(v6 + v1[7]), *(void *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[18];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1001B0DEC()
{
  uint64_t v1 = (int *)(type metadata accessor for MagicPairingSettingsRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_1000AA8F0(*(void *)(v6 + v1[7]), *(void *)(v6 + v1[7] + 8));
  swift_bridgeObjectRelease();
  sub_1000AA8F0(*(void *)(v6 + v1[9]), *(void *)(v6 + v1[9] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[10]), *(void *)(v6 + v1[10] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[11]), *(void *)(v6 + v1[11] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[12]), *(void *)(v6 + v1[12] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[13]), *(void *)(v6 + v1[13] + 8));
  sub_1000AA8F0(*(void *)(v6 + v1[14]), *(void *)(v6 + v1[14] + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[32];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1001B10EC()
{
  uint64_t v1 = (int *)(type metadata accessor for DeviceRecord() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  sub_1000AA8F0(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v6 + v1[14];
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1001B129C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, v3 + v6, v7);
}

uint64_t sub_1001B1354(uint64_t a1, uint64_t a2)
{
  return sub_10011EA7C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48));
}

uint64_t sub_1001B1368(void *a1, char a2)
{
  return sub_100184338(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), (uint64_t)&unk_10023D120, (uint64_t)sub_1001B13FC, (uint64_t)&unk_10023D138);
}

uint64_t sub_1001B13B0()
{
  sub_100129200(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001B13FC()
{
}

uint64_t sub_1001B141C()
{
  return sub_1001B1448((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1001B1448(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, 32, 7);
}

uint64_t sub_1001B14A0()
{
  return sub_1001403A4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001B14A8(uint64_t a1)
{
  return sub_100162344(a1, v1);
}

uint64_t sub_1001B14B0()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1001B1554()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1001626EC(v0 + v2, v3);
}

unint64_t *initializeBufferWithCopyOfBuffer for DeviceStore.DeviceStoreError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1001B1614(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1001B1614(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_errorRetain();
  }
  return result;
}

unint64_t destroy for DeviceStore.DeviceStoreError(unint64_t *a1)
{
  return sub_1001B1638(*a1);
}

unint64_t sub_1001B1638(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for DeviceStore.DeviceStoreError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1001B1614(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1001B1638(v4);
  return a1;
}

unint64_t *assignWithTake for DeviceStore.DeviceStoreError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1001B1638(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceStore.DeviceStoreError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DeviceStore.DeviceStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1001B1770(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_1001B178C(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1001B179C(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for DeviceStore.DeviceStoreError()
{
  return &type metadata for DeviceStore.DeviceStoreError;
}

unint64_t sub_1001B17DC()
{
  unint64_t result = qword_100263CE0;
  if (!qword_100263CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263CE0);
  }
  return result;
}

void sub_1001B183C()
{
}

void sub_1001B1854()
{
}

void sub_1001B186C()
{
}

uint64_t sub_1001B196C@<X0>(char *a1@<X8>)
{
  return sub_1001AD810(a1);
}

uint64_t sub_1001B1A74()
{
  return sub_1001AD9D4();
}

void sub_1001B1A8C()
{
}

uint64_t sub_1001B1AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001972C4(a1);
}

uint64_t sub_1001B1ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_10019731C(a1);
}

uint64_t sub_1001B1AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_10019726C(a1);
}

void sub_1001B1AEC()
{
}

void sub_1001B1B04()
{
}

void sub_1001B1B1C()
{
}

void sub_1001B1B34()
{
}

uint64_t sub_1001B1B68()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADC8 = result;
  return result;
}

uint64_t sub_1001B1BBC()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADD0 = result;
  return result;
}

uint64_t sub_1001B1C14()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADD8 = result;
  return result;
}

uint64_t sub_1001B1C70()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADE0 = result;
  return result;
}

uint64_t sub_1001B1CDC()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADE8 = result;
  return result;
}

uint64_t sub_1001B1D44()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADF0 = result;
  return result;
}

unint64_t sub_1001B1DAC()
{
  unint64_t result = qword_100263CE8;
  if (!qword_100263CE8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100263CE8);
  }
  return result;
}

uint64_t sub_1001B1DEC()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026ADF8 = result;
  return result;
}

uint64_t sub_1001B1E50()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026AE00 = result;
  return result;
}

uint64_t sub_1001B1EB4()
{
  sub_1001B1DAC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_10026AE08 = result;
  return result;
}

uint64_t Data.hexString.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001B3704(0xD000000000000010, 0x8000000100201230);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_23;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 + 0x4000000000000000 < 0) {
        goto LABEL_22;
      }
      NSString v13 = sub_1001B2910(0, (2 * v9) & ~((2 * v9) >> 63), 0, _swiftEmptyArrayStorage);
      if (a2 >> 62) {
        sub_1000AA680(a1, a2);
      }
LABEL_10:
      Data.Iterator.init(_:at:)();
      Swift::UInt8_optional v14 = Data.Iterator.next()();
      if ((*(_WORD *)&v14 & 0x100) != 0) {
        goto LABEL_19;
      }
      Swift::UInt8 value = v14.value;
      uint64_t v16 = v8 + 4;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_24;
    case 3uLL:
      NSString v13 = sub_1001B2910(0, 0, 0, _swiftEmptyArrayStorage);
      goto LABEL_10;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
  do
  {
    unint64_t v17 = value >> 4;
    if (v17 >= v8[2])
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      JUMPOUT(0x1001B21F4);
    }
    __int16 v18 = *((_WORD *)v16 + v17);
    unint64_t v20 = v13[2];
    unint64_t v19 = v13[3];
    unint64_t v21 = v20 + 1;
    if (v20 >= v19 >> 1) {
      NSString v13 = sub_1001B2910((void *)(v19 > 1), v20 + 1, 1, v13);
    }
    void v13[2] = v21;
    *((_WORD *)v13 + v20 + 16) = v18;
    if ((unint64_t)(value & 0xF) >= v8[2]) {
      goto LABEL_21;
    }
    __int16 v22 = *((_WORD *)v16 + (value & 0xF));
    unint64_t v23 = v13[3];
    if ((uint64_t)(v20 + 2) > (uint64_t)(v23 >> 1)) {
      NSString v13 = sub_1001B2910((void *)(v23 > 1), v20 + 2, 1, v13);
    }
    void v13[2] = v20 + 2;
    *((_WORD *)v13 + v21 + 16) = v22;
    Swift::UInt8_optional v24 = Data.Iterator.next()();
    Swift::UInt8 value = v24.value;
  }
  while ((*(_WORD *)&v24 & 0x100) == 0);
LABEL_19:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  uint64_t v25 = String.init(utf16CodeUnits:count:)();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t Data.write(to:excludeFromBackup:options:)(uint64_t a1, int a2)
{
  v15[1] = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  uint64_t v18 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLResourceValues();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  uint64_t v11 = v19;
  uint64_t result = Data.write(to:options:)();
  if (!v11)
  {
    URLResourceValues.init()();
    URLResourceValues.isExcludedFromBackup.setter();
    uint64_t v13 = v17;
    uint64_t v14 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, v16, v17);
    URL.setResourceValues(_:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t Data.init(hexString:)()
{
  if (String.count.getter())
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::String v0 = String.uppercased()();
  uint64_t v1 = sub_1001B3B70(v0._countAndFlagsBits, (unint64_t)v0._object);
  swift_bridgeObjectRelease();
  uint64_t v2 = String.count.getter();
  if (v2 >= 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = v2 + 1;
  }
  uint64_t v4 = sub_1001B2604(0, v3 >> 1);
  uint64_t v5 = String.count.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 < 1)
  {
LABEL_31:
    swift_release();
    uint64_t v18 = sub_1001B432C((uint64_t)v4);
    swift_bridgeObjectRelease();
    return v18;
  }
  unint64_t v7 = 0;
  uint64_t v8 = v1 + 4;
  while (1)
  {
    uint64_t v9 = __OFADD__(v7, 2) ? 0x7FFFFFFFFFFFFFFFLL : v7 + 2;
    if ((v7 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v10 = v1[2];
    if (v7 >= v10) {
      goto LABEL_36;
    }
    if (v7 + 1 >= v10) {
      goto LABEL_37;
    }
    unsigned int v11 = *((unsigned __int8 *)v8 + v7);
    unsigned int v12 = *((unsigned __int8 *)v8 + v7 + 1);
    if (!isxdigit(v11) || (uint64_t result = isxdigit(v12), !result))
    {
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    }
    if (v11 >= 0x41) {
      int v13 = 55;
    }
    else {
      int v13 = 48;
    }
    unsigned int v14 = v11 - v13;
    if ((v14 & 0xFFFFFF00) != 0) {
      goto LABEL_38;
    }
    if (v12 >= 0x41) {
      int v15 = 55;
    }
    else {
      int v15 = 48;
    }
    unsigned int v16 = v12 - v15;
    if ((v16 & 0xFFFFFF00) != 0) {
      goto LABEL_39;
    }
    if (v14 > 0xFu) {
      goto LABEL_40;
    }
    char v17 = 16 * (v14 & 0xF) + v16;
    if (((16 * (v14 & 0xF) + v16) & 0x100) != 0) {
      goto LABEL_41;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001B338C(v4);
      uint64_t v4 = (void *)result;
    }
    if (v7 >> 1 >= v4[2]) {
      goto LABEL_42;
    }
    *((unsigned char *)v4 + (v7 >> 1) + 32) = v17;
    unint64_t v7 = v9;
    if (v9 >= v5) {
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1001B2604(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return (void *)v4;
  }
  return result;
}

uint64_t Data.intValue.getter(uint64_t a1, unint64_t a2)
{
  uint64_t result = Data.hexString.getter(a1, a2);
  uint64_t v4 = v3;
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (uint64_t)sub_1001B33A0(result, v4, 16);
    char v11 = v24;
    goto LABEL_48;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v9 = (uint64_t)sub_1001B3488(v8, v6, 16);
    char v11 = v10 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      return v9;
    }
    return 0;
  }
  v25[0] = result;
  v25[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v5)
    {
      uint64_t v17 = v5 - 1;
      if (v17)
      {
        uint64_t v9 = 0;
        uint64_t v18 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          int v19 = *v18;
          unsigned __int8 v20 = v19 - 48;
          if ((v19 - 48) >= 0xA)
          {
            if ((v19 - 65) < 6)
            {
              unsigned __int8 v20 = v19 - 55;
            }
            else
            {
              if ((v19 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v20 = v19 - 87;
            }
          }
          if ((unint64_t)(v9 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v16 = __OFADD__(16 * v9, v20);
          uint64_t v9 = 16 * v9 + v20;
          if (v16) {
            break;
          }
          ++v18;
          if (!--v17)
          {
LABEL_46:
            char v11 = 0;
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v5)
      {
        uint64_t v9 = 0;
        unint64_t v21 = (unsigned __int8 *)v25;
        while (1)
        {
          int v22 = *v21;
          unsigned __int8 v23 = v22 - 48;
          if ((v22 - 48) >= 0xA)
          {
            if ((v22 - 65) < 6)
            {
              unsigned __int8 v23 = v22 - 55;
            }
            else
            {
              if ((v22 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v23 = v22 - 87;
            }
          }
          if ((unint64_t)(v9 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v16 = __OFADD__(16 * v9, v23);
          uint64_t v9 = 16 * v9 + v23;
          if (v16) {
            break;
          }
          ++v21;
          if (!--v5) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_47;
    }
    if (v5)
    {
      uint64_t v12 = v5 - 1;
      if (v12)
      {
        uint64_t v9 = 0;
        int v13 = (unsigned __int8 *)v25 + 1;
        while (1)
        {
          int v14 = *v13;
          unsigned __int8 v15 = v14 - 48;
          if ((v14 - 48) >= 0xA)
          {
            if ((v14 - 65) < 6)
            {
              unsigned __int8 v15 = v14 - 55;
            }
            else
            {
              if ((v14 - 97) > 5) {
                break;
              }
              unsigned __int8 v15 = v14 - 87;
            }
          }
          if ((unint64_t)(v9 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v16 = __OFSUB__(16 * v9, v15);
          uint64_t v9 = 16 * v9 - v15;
          if (v16) {
            break;
          }
          ++v13;
          if (!--v12) {
            goto LABEL_46;
          }
        }
      }
LABEL_47:
      uint64_t v9 = 0;
      char v11 = 1;
      goto LABEL_48;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1001B2910(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AA024((uint64_t *)&unk_100263D20);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      void v10[2] = v8;
      v10[3] = v12 & 0xFFFFFFFFFFFFFFFELL;
      int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 2 * v8 + 32)) {
          memmove(v13, a4 + 4, 2 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B3C0C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2A1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, (uint64_t *)&unk_100263B30, (uint64_t (*)(void))type metadata accessor for DeviceRecord, (uint64_t (*)(void))type metadata accessor for DeviceRecord);
}

uint64_t sub_1001B2A50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, &qword_100263B60, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord, (uint64_t (*)(void))type metadata accessor for DeviceSupportInformationRecord);
}

uint64_t sub_1001B2A84(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000AA024(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001B3DEC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1001B2D04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, &qword_100263B58, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord, (uint64_t (*)(void))type metadata accessor for MagicPairingSettingsRecord);
}

uint64_t sub_1001B2D38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, &qword_100263B68, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord, (uint64_t (*)(void))type metadata accessor for SoundProfileRecord);
}

uint64_t sub_1001B2D6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, &qword_100263CF0, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration, (uint64_t (*)(void))type metadata accessor for CloudCoordinatorConfiguration);
}

void *sub_1001B2DA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AA024((uint64_t *)&unk_100263CB0);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001B3CF8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B2EB0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, (uint64_t *)&unk_100263BC0, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords, (uint64_t (*)(void))type metadata accessor for LegacyMagicPairingSettingsRecords);
}

uint64_t sub_1001B2EE4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, (uint64_t *)&unk_100263C00, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord, (uint64_t (*)(void))type metadata accessor for LegacyAccountMagicKeysRecord);
}

uint64_t sub_1001B2F18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001B2A84(a1, a2, a3, a4, &qword_100263B98, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord, (uint64_t (*)(void))type metadata accessor for BTDeferredRecord);
}

void *sub_1001B2F4C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AA024(&qword_100263D00);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B3F48(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B3074(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AA024(&qword_100263CF8);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B4058(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001B3198(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000AA024((uint64_t *)&unk_100262B50);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001B43C8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unsigned char *sub_1001B3294@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1001B4168(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1001B422C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1001B42A8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1001B3310(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *sub_1001B338C(void *a1)
{
  return sub_1001B3198(0, a1[2], 0, a1);
}

unsigned __int8 *sub_1001B33A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1001915AC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  size_t v11 = sub_1001B3488(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1001B3488(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  size_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

void *sub_1001B3704(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_5;
  }
  uint64_t v4 = String.UTF16View._nativeGetOffset(for:)();
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    uint64_t v5 = sub_1001B3AFC(v4, 0);
    swift_bridgeObjectRetain();
    unint64_t v2 = sub_1001B37D8((uint64_t)v7, (uint64_t)(v5 + 4), v4, a1, v2);
    swift_bridgeObjectRelease();
    if (v2 == v4) {
      break;
    }
    __break(1u);
LABEL_5:
    uint64_t v4 = String.UTF16View._foreignCount()();
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v5;
}

uint64_t sub_1001B37D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if ((a5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v8 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!a2)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    a3 = 0;
    char v15 = 1;
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  if (!a3)
  {
    uint64_t v11 = 0;
    __int16 v12 = 0;
    char v15 = 1;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
    __break(1u);
    JUMPOUT(0x1001B3ADCLL);
  }
  uint64_t v11 = 0;
  __int16 v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = a5 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v27 = a1;
  char v15 = 1;
  while (1)
  {
    if ((v15 & 1) == 0)
    {
      char v15 = 1;
      LOWORD(v16) = v12;
      __int16 v12 = 0;
      goto LABEL_9;
    }
    if (v11 >= v8) {
      break;
    }
    if ((a5 & 0x1000000000000000) != 0)
    {
      uint64_t v21 = v14;
      unsigned int v22 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
      uint64_t v14 = v21;
      unsigned int v16 = v22;
    }
    else
    {
      if ((a5 & 0x2000000000000000) == 0)
      {
        uint64_t v17 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a4 & 0x1000000000000000) == 0)
        {
          uint64_t v25 = v14;
          uint64_t v17 = _StringObject.sharedUTF8.getter();
          uint64_t v14 = v25;
        }
        unsigned int v16 = *(unsigned __int8 *)(v17 + v11);
        if (*(char *)(v17 + v11) < 0)
        {
          switch(__clz(v16 ^ 0xFF))
          {
            case 0x1Au:
              LOWORD(v16) = *(unsigned char *)(v11 + v17 + 1) & 0x3F | ((v16 & 0x1F) << 6);
              uint64_t v18 = 2;
              goto LABEL_18;
            case 0x1Bu:
              LOWORD(v16) = ((v16 & 0xF) << 12) | ((*(unsigned char *)(v11 + v17 + 1) & 0x3F) << 6) | *(unsigned char *)(v11 + v17 + 2) & 0x3F;
              uint64_t v18 = 3;
              goto LABEL_18;
            case 0x1Cu:
              unsigned int v20 = (char *)(v11 + v17);
              goto LABEL_29;
            default:
              break;
          }
        }
        uint64_t v18 = 1;
LABEL_18:
        v11 += v18;
        char v15 = 1;
        goto LABEL_9;
      }
      v28[0] = a4;
      v28[1] = v14;
      unsigned int v16 = *((unsigned __int8 *)v28 + v11);
      if (*((char *)v28 + v11) < 0)
      {
        switch(__clz(v16 ^ 0xFF))
        {
          case 0x1Au:
            unsigned int v16 = *((unsigned char *)v28 + v11 + 1) & 0x3F | ((v16 & 0x1F) << 6);
            uint64_t v19 = 2;
            break;
          case 0x1Bu:
            unsigned int v16 = ((v16 & 0xF) << 12) | ((*((unsigned char *)v28 + v11 + 1) & 0x3F) << 6) | *((unsigned char *)v28 + v11 + 2) & 0x3F;
            uint64_t v19 = 3;
            break;
          case 0x1Cu:
            unsigned int v20 = (char *)v28 + v11;
LABEL_29:
            unsigned int v16 = ((v16 & 0xF) << 18) | ((v20[1] & 0x3F) << 12) | ((v20[2] & 0x3F) << 6) | v20[3] & 0x3F;
            uint64_t v19 = 4;
            break;
          default:
            goto LABEL_20;
        }
      }
      else
      {
LABEL_20:
        uint64_t v19 = 1;
      }
    }
    v11 += v19;
    if (HIWORD(v16))
    {
      uint64_t v23 = v14;
      __int16 v12 = Unicode.Scalar.UTF16View.subscript.getter();
      __int16 v24 = Unicode.Scalar.UTF16View.subscript.getter();
      uint64_t v14 = v23;
      LOWORD(v16) = v24;
      char v15 = 0;
    }
    else
    {
      char v15 = 1;
    }
LABEL_9:
    *(_WORD *)(a2 + 2 * v13++) = v16;
    if (a3 == v13) {
      goto LABEL_37;
    }
  }
  char v15 = 1;
  a3 = v13;
LABEL_37:
  a1 = v27;
LABEL_38:
  swift_bridgeObjectRelease();
LABEL_39:
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = v11;
  *(void *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 34) = v15;
  return a3;
}

void *sub_1001B3AFC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000AA024((uint64_t *)&unk_100263D20);
  uint64_t v4 = (void *)swift_allocObject();
  int64_t v5 = j__malloc_size(v4);
  int64_t v6 = v5 - 32;
  if (v5 < 32) {
    int64_t v6 = v5 - 31;
  }
  v4[2] = a1;
  v4[3] = v6 & 0xFFFFFFFFFFFFFFFELL;
  return v4;
}

void *sub_1001B3B70(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      uint64_t v3 = sub_100191884(v2, 0);
      uint64_t result = (void *)_StringGuts.copyUTF8(into:)();
      if (v5) {
        break;
      }
      if (result == (void *)v2) {
        return v3;
      }
      __break(1u);
LABEL_9:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

char *sub_1001B3C0C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    unsigned __int8 v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B3CF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B3DEC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B3F48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1000AA024(&qword_100263D08);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4058(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1000AA024((uint64_t *)&unk_100263BE8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B4168(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1001B422C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1001B42A8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1001B432C(uint64_t a1)
{
  uint64_t v9 = sub_1000AA024(&qword_100263D10);
  unint64_t v10 = sub_1001B44B0();
  v8[0] = a1;
  uint64_t v2 = sub_1000ABF58(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1001B3294(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_1000ABFF0((uint64_t)v8);
  return v5;
}

char *sub_1001B43C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1001B44B0()
{
  unint64_t result = qword_100263D18;
  if (!qword_100263D18)
  {
    sub_1000AF194(&qword_100263D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100263D18);
  }
  return result;
}

uint64_t LocalDispatchTimer.__allocating_init(deadline:repeating:leeway:queue:block:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  LocalDispatchTimer.init(deadline:repeating:leeway:queue:block:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t sub_1001B458C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000AA068(v0, qword_10026AE10);
  sub_1000AA0CC(v0, (uint64_t)qword_10026AE10);
  return Logger.init(subsystem:category:)();
}

uint64_t LocalDispatchTimer.isCancelled.getter()
{
  return OS_dispatch_source.isCancelled.getter() & 1;
}

uint64_t LocalDispatchTimer.init(deadline:repeating:leeway:queue:block:)(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v76 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchTimeInterval();
  uint64_t v84 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v73 = (uint64_t *)((char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  unsigned int v20 = (uint64_t *)((char *)&v64 - v19);
  uint64_t v80 = type metadata accessor for DispatchTime();
  uint64_t v21 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v74 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v83 = (char *)&v64 - v24;
  uint64_t v25 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v69 = (void *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v67 = *(v69 - 1);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v65);
  char v66 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v31);
  id v79 = (char *)&v64 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 16) = 0x408F400000000000;
  double v35 = a4 * 1000.0;
  double v36 = fmin(v35, 2147483650.0);
  if ((~*(void *)&v36 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v36 <= -2147483650.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v36 >= 2147483650.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  a5 = a5 * 1000.0;
  *(_DWORD *)(v7 + 24) = (int)v36;
  double v37 = fmin(a5, 2147483650.0);
  if ((~*(void *)&v37 & 0x7FF0000000000000) == 0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v37 <= -2147483650.0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v37 >= 2147483650.0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  a6 = a6 * 1000.0;
  *(_DWORD *)(v7 + 28) = (int)v37;
  double v38 = fmin(a6, 2147483650.0);
  if ((~*(void *)&v38 & 0x7FF0000000000000) == 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v38 <= -2147483650.0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v38 >= 2147483650.0)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v70 = v26;
  uint64_t v71 = v33;
  uint64_t v72 = v32;
  *(_DWORD *)(v7 + 32) = (int)v38;
  uint64_t v81 = v7;
  uint64_t v82 = v21;
  uint64_t v78 = a3;
  if (v35 <= 2147483650.0 && a5 <= 2147483650.0 && a6 <= 2147483650.0) {
    goto LABEL_17;
  }
  uint64_t v64 = (uint64_t)a1;
  if (qword_100261970 != -1) {
    goto LABEL_33;
  }
LABEL_14:
  uint64_t v39 = type metadata accessor for Logger();
  sub_1000AA0CC(v39, (uint64_t)qword_10026AE10);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134218752;
    aBlock[0] = 0x41DFFFFFFFC00000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 12) = 2048;
    *(double *)unint64_t aBlock = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 22) = 2048;
    *(double *)unint64_t aBlock = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 32) = 2048;
    *(double *)unint64_t aBlock = a6;
    a3 = v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "LocalDispatchTimer: Exceeded maximum value of %f: deadline: %f, repeating: %f, leeway: %f", (uint8_t *)v42, 0x2Au);
    uint64_t v7 = v81;
    swift_slowDealloc();
  }

  a1 = (void *)v64;
LABEL_17:
  *(void *)(v7 + 48) = a2;
  *(void *)(v7 + 56) = a3;
  if (a1)
  {
    swift_retain();
    char v43 = a1;
  }
  else
  {
    uint64_t v64 = sub_1000B66A0(0, (unint64_t *)&qword_100263210);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001B54B8((unint64_t *)&unk_100263C90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_1000AA024((uint64_t *)&unk_100263220);
    sub_1000D8D38((unint64_t *)&qword_100263CA0, (uint64_t *)&unk_100263220);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, void *))(v67 + 104))(v68, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v69);
    a1 = 0;
    char v43 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  }
  uint64_t v44 = v81;
  *(void *)(v81 + 64) = v43;
  sub_1000B66A0(0, &qword_100263D30);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001B54B8(&qword_100263D38, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  unint64_t v69 = a1;
  uint64_t v68 = v43;
  sub_1000AA024(&qword_100263D40);
  sub_1000D8D38(&qword_100263D48, &qword_100263D40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v45 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v28, v25);
  *(void *)(v44 + 40) = v45;
  uint64_t v46 = v74;
  static DispatchTime.now()();
  void *v20 = *(int *)(v44 + 24);
  uint64_t v47 = enum case for DispatchTimeInterval.milliseconds(_:);
  uint64_t v48 = v84;
  uint64_t v49 = *(void (**)(void *, uint64_t, uint64_t))(v84 + 104);
  v49(v20, enum case for DispatchTimeInterval.milliseconds(_:), v16);
  + infix(_:_:)();
  unint64_t v50 = v20;
  uint64_t v51 = v20;
  uint64_t v52 = v16;
  uint64_t v70 = *(void *)(v48 + 8);
  ((void (*)(void *, uint64_t))v70)(v51, v16);
  NSString v53 = *(char **)(v82 + 8);
  v82 += 8;
  uint64_t v74 = v53;
  ((void (*)(char *, uint64_t))v53)(v46, v80);
  uint64_t v54 = *(unsigned int *)(v44 + 28);
  if ((int)v54 < 1)
  {
    uint64_t v56 = enum case for DispatchTimeInterval.never(_:);
    long long v55 = v73;
  }
  else
  {
    long long v55 = v73;
    *uint64_t v73 = v54;
    uint64_t v56 = v47;
  }
  v49(v55, v56, v16);
  uint64_t v57 = v81;
  swift_getObjectType();
  void *v50 = *(int *)(v57 + 32);
  v49(v50, v47, v16);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
  uint64_t v84 = v48 + 8;
  uint64_t v58 = (void (*)(void *, uint64_t))v70;
  ((void (*)(void *, uint64_t))v70)(v50, v16);
  swift_getObjectType();
  uint64_t v59 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1001B52DC;
  aBlock[5] = v59;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_100106F90;
  void aBlock[3] = &unk_10023D308;
  uint64_t v60 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v61 = v79;
  static DispatchQoS.unspecified.getter();
  uint64_t v62 = v75;
  sub_1001B52FC();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)();
  _Block_release(v60);

  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v62, v77);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v61, v72);
  v58(v55, v52);
  ((void (*)(char *, uint64_t))v74)(v83, v80);
  swift_release();
  swift_release();
  return v57;
}

uint64_t sub_1001B522C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B5264()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result + 48);
    swift_retain();
    uint64_t v2 = swift_release();
    v1(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001B52DC()
{
  return sub_1001B5264();
}

uint64_t sub_1001B52E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001B52F4()
{
  return swift_release();
}

uint64_t sub_1001B52FC()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

Swift::Void __swiftcall LocalDispatchTimer.resume()()
{
}

Swift::Void __swiftcall LocalDispatchTimer.cancel()()
{
}

uint64_t LocalDispatchTimer.deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return v0;
}

uint64_t LocalDispatchTimer.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for LocalDispatchTimer()
{
  return self;
}

uint64_t sub_1001B54B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B5500()
{
  uint64_t v0 = abort_report_np();
  return sub_1001B5528(v0);
}

void sub_1001B5528()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Error Fetching Local IDS Identifier or local name. try again in sometime.", v2, v3, v4, v5, v6);
}

void sub_1001B555C()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Did not receive Public Address, defer...", v2, v3, v4, v5, v6);
}

void sub_1001B5590()
{
  sub_10006B57C();
  sub_10006B564((void *)&_mh_execute_header, v0, v1, "MUC - Invalid devices from bluetoothd: %@", v2);
}

void sub_1001B55FC()
{
  sub_10006B5FC();
  uint64_t v2 = &off_1002448F8;
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "XPC Version Check Failure, recieved version: %@, current version: %@", v1, 0x16u);
}

void sub_1001B567C(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_10006B564((void *)&_mh_execute_header, a2, a3, "Error checking in with bluetoothd: %@", (uint8_t *)&v4);
}

void sub_1001B56F0()
{
  sub_10006B57C();
  sub_10006B564((void *)&_mh_execute_header, v0, v1, "Unable to fetch public address: %@", v2);
}

void sub_1001B575C()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Public Address is not available, skipping updateCloudPairings", v2, v3, v4, v5, v6);
}

void sub_1001B5790(uint64_t a1, uint64_t a2)
{
  [sub_10006B5D0(a1, a2) loginID];
  id v4 = objc_claimAutoreleasedReturnValue();
  id v5 = [v4 UTF8String];
  _DWORD *v3 = 136380675;
  *uint64_t v2 = v5;
  sub_10006B5B0((void *)&_mh_execute_header, v6, v7, "Bad Account details \"%{private}s\" can't send!");
}

void sub_1001B57F4(uint64_t a1, uint64_t a2)
{
  [sub_10006B5D0(a1, a2) loginID];
  id v4 = objc_claimAutoreleasedReturnValue();
  id v5 = [v4 UTF8String];
  _DWORD *v3 = 136380675;
  *uint64_t v2 = v5;
  sub_10006B5B0((void *)&_mh_execute_header, v6, v7, "Account \"%{private}s\" can't send!");
}

void sub_1001B5858(uint64_t a1, uint64_t a2)
{
  [sub_10006B5D0(a1, a2) loginID];
  id v4 = objc_claimAutoreleasedReturnValue();
  id v5 = [v4 UTF8String];
  _DWORD *v3 = 136380675;
  *uint64_t v2 = v5;
  sub_10006B5B0((void *)&_mh_execute_header, v6, v7, "Account \"%{private}s\" is not active!");
}

void sub_1001B58BC(void *a1, int a2, NSObject *a3)
{
  id v5 = [a1 totalCloudDeviceCount];
  uint64_t v6 = a2;
  uint64_t v7 = _IDSStringFromIDSRegistrationStatus();
  int v8 = 134218498;
  id v9 = v5;
  __int16 v10 = 2048;
  uint64_t v11 = v6;
  __int16 v12 = 2112;
  unint64_t v13 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "No devices found even though IDS Account registered, C: %ld, R: %ld %@", (uint8_t *)&v8, 0x20u);
}

void sub_1001B5988()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Received devices changed event but couldn't retrieve local cloud identifier", v2, v3, v4, v5, v6);
}

void sub_1001B59BC()
{
  sub_10006B5A4();
  [v1 UTF8String];
  id v2 = [v0 description];
  [v2 UTF8String];
  sub_10006B554();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Message %s failed with error %s", v5, v6, v7, v8, 2u);
}

void sub_1001B5A68(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"DeviceName"];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Ignoring %@ since it is not in our cloudPaired devices list.", v4, v5, v6, v7, v8);
}

void sub_1001B5AF4(void *a1)
{
  id v1 = [a1 objectForKeyedSubscript:@"MessageType"];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Ignoring message with unknown type %@", v4, v5, v6, v7, v8);
}

void sub_1001B5B80(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Ignoring cloud pairing message from IDS device %{private}s containing no supported versions", v4, v5, v6, v7, v8);
}

void sub_1001B5C0C()
{
  sub_10006B5A4();
  id v1 = [v0 description];
  [v1 UTF8String];
  [ (id) sub_10006B5E4() UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v2, v3, "Ignoring cloud pairing message from IDS device %{private}s with unknown type \"%s\"", v4, v5, v6, v7, v8);
}

void sub_1001B5CAC(void *a1, void *a2)
{
  id v3 = [a1 description];
  [v3 UTF8String];
  id v4 = [a2 cloudIdentifier];
  [v4 UTF8String];
  sub_10006B554();
  sub_10006B534((void *)&_mh_execute_header, v5, v6, "Received 'InitiatorPairingKeys' message from IDS device %{private}s, but we aren't responder (%s)", v7, v8, v9, v10, 3u);
}

void sub_1001B5D70(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_10006B564((void *)&_mh_execute_header, a2, a3, "Error generating keys: %@", (uint8_t *)&v4);
}

void sub_1001B5DE4()
{
  sub_10006B5FC();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Error completing pairing: %{private}@ with error: %@");
}

void sub_1001B5E50(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 48) description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Invalid cloud pairing ID %{private}s", v4, v5, v6, v7, v8);
}

void sub_1001B5EE0(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Unknown role with IDS device %{private}s as we have no local iCloud identifier", v4, v5, v6, v7, v8);
}

void sub_1001B5F6C(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Unknown role with IDS device %{private}s as they have no iCloud identifier", v4, v5, v6, v7, v8);
}

void sub_1001B5FF8()
{
  sub_10006B5A4();
  id v1 = [v0 description];
  [v1 UTF8String];
  id v2 = [(id)sub_10006B5E4() cloudIdentifier];
  [v2 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Received 'ResponderPairingKeys' message from IDS device %{private}s, but we aren't responder (%s)", v5, v6, v7, v8, v9);
}

void sub_1001B60A8()
{
  sub_10006B5A4();
  id v1 = [v0 description];
  [v1 UTF8String];
  id v2 = [(id)sub_10006B5E4() cloudIdentifier];
  [v2 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Received 'security request' message from IDS device %{private}s, but we aren't initiator (%s)", v5, v6, v7, v8, v9);
}

void sub_1001B6158()
{
  sub_10006B5A4();
  id v1 = [v0 description];
  [v1 UTF8String];
  id v2 = [(id)sub_10006B5E4() cloudIdentifier];
  [v2 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Received 'pairing request' message from IDS device %{private}s, but we aren't responder (%s)", v5, v6, v7, v8, v9);
}

void sub_1001B6208()
{
  sub_10006B5A4();
  id v1 = [v0 description];
  [v1 UTF8String];
  id v2 = [(id)sub_10006B5E4() cloudIdentifier];
  [v2 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Received 'pairing response' message from IDS device %{private}s, but we aren't initiator (%s)", v5, v6, v7, v8, v9);
}

void sub_1001B62B8()
{
  sub_10006B5A4();
  id v2 = [v1 description];
  [v2 UTF8String];
  id v3 = [v0 objectForKeyedSubscript:@"FailureReason"];
  [v3 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v4, v5, "Received 'pairing failure' message from IDS device %{private}s - \"%s\"", v6, v7, v8, v9, v10);
}

void sub_1001B6374(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Dropping pairing initiation message to IDS device %{private}s as our role is unknown", v4, v5, v6, v7, v8);
}

void sub_1001B6400(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Dropping pairing initiation message to IDS device %{private}s as our role is unknown", v4, v5, v6, v7, v8);
}

void sub_1001B6490(void *a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a1 idsDevice];
  id v6 = [v5 cpDescription];
  id v7 = [v6 UTF8String];
  id v8 = [a2 description];
  [v8 UTF8String];
  int v9 = 136380931;
  id v10 = v7;
  sub_10006B554();
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to create destination identifier to IDS device %{private}s - cannot send message %s", (uint8_t *)&v9, 0x16u);
}

void sub_1001B6578(void *a1)
{
  id v1 = [a1 description];
  [v1 UTF8String];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v2, v3, "Failed to send message with error %s", v4, v5, v6, v7, v8);
}

void sub_1001B6604(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "cloudpaird: sendRePairRequest: Failed to find existing CloudDevice - Maybe a new device - do we still allow repairing?", buf, 2u);
}

void sub_1001B6644()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "cloudpaird: sendRePairCloudPairingMessage: Device is not associated with an iCloud account - can't send message", v2, v3, v4, v5, v6);
}

void sub_1001B6678()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "cloudpaird: No destination ID available", v2, v3, v4, v5, v6);
}

void sub_1001B66AC()
{
  sub_10006B5A4();
  id v1 = [v0 cpDescription];
  [v1 UTF8String];
  id v2 = [(id)sub_10006B5E4() description];
  [v2 UTF8String];
  sub_10006B51C();
  sub_10006B534((void *)&_mh_execute_header, v3, v4, "Failed to create destination identifier to IDS device %{private}s - cannot send message %s", v5, v6, v7, v8, v9);
}

void sub_1001B675C()
{
  sub_10006B57C();
  sub_10006B564((void *)&_mh_execute_header, v0, v1, "Error unpairing Cloud Device: %@", v2);
}

void sub_1001B67C8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&v3[4] = *(void *)(a1 + 48);
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = a2;
  sub_10006B610((void *)&_mh_execute_header, a2, a3, "Unable to unpair Cloud Device: %@ with error: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16]);
}

void sub_1001B6844(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 40) idsDevice];
  id v2 = [v1 uniqueID];
  sub_10006B57C();
  sub_10006B4FC((void *)&_mh_execute_header, v3, v4, "Error unpairing Cloud Device properly for - %@", v5, v6, v7, v8, v9);
}

void sub_1001B68E4()
{
  sub_10006B57C();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "cloudpaird: publicAddressForIDSDevice: Device requested :%@", v1, 0xCu);
}

void sub_1001B6958(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B69C8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B6A38(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B6AA8()
{
  __error();
  sub_10006C91C((void *)&_mh_execute_header, v0, v1, "### _CS_DARWIN_USER_TEMP_DIR failed: %d", v2, v3, v4, v5, 0);
}

void sub_1001B6B28()
{
  __error();
  sub_10006C91C((void *)&_mh_execute_header, v0, v1, "### _set_user_dir_suffix failed: %d", v2, v3, v4, v5, 0);
}

void sub_1001B6BA8()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Invalid reference to accountStatusDidChange", v2, v3, v4, v5, v6);
}

void sub_1001B6BDC()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "MP fetchKeyBlob CKErrorServiceUnavailable/RateLimited, error: %@", v2, v3, v4, v5, v6);
}

void sub_1001B6C44()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Manate: Invalid reference to checkAccountStatusWithCompletionHandler", v2, v3, v4, v5, v6);
}

void sub_1001B6C78()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "MP fetchAccessoryKeyBlob CKErrorServiceUnavailable/RateLimited, error: %@", v2, v3, v4, v5, v6);
}

void sub_1001B6CE0()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "MP fetchAccessoryKeyBlob failed to save in device manager: %@", v2, v3, v4, v5, v6);
}

void sub_1001B6D48()
{
  sub_10006B57C();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Error querying master key record - %@, retry count - %lu");
}

void sub_1001B6DC0()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error no master key record/zone found, create zone/record and write data - %@", v2, v3, v4, v5, v6);
}

void sub_1001B6E28()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Non-Manatee: Cannot updateCloudKitAccessoryZone with %@, Account not active", v2, v3, v4, v5, v6);
}

void sub_1001B6E90()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error querying record - %@", v2, v3, v4, v5, v6);
}

void sub_1001B6EF8()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100078DB4();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Error Saving the modified record [%@] - %@");
}

void sub_1001B6F60()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100078DB4();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "MP Error caching the modified record in services layer [%@] - %@");
}

void sub_1001B6FC8()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error saving the modified record exceeded retry count - %@", v2, v3, v4, v5, v6);
}

void sub_1001B7030()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error saving the modified record network error - %@", v2, v3, v4, v5, v6);
}

void sub_1001B7098()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error no record/zone found, create zone/record and write data - %@", v2, v3, v4, v5, v6);
}

void sub_1001B7100()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error saving the modified record - %@", v2, v3, v4, v5, v6);
}

void sub_1001B7168()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error writing record exceeded retry count - %@", v2, v3, v4, v5, v6);
}

void sub_1001B71D0()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "writeAccessoryBlob failed with network error %@ ", v2, v3, v4, v5, v6);
}

void sub_1001B7238()
{
  sub_10006B57C();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Manatee: Error writing the record [%@] - %@");
}

void sub_1001B72AC()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100078DB4();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "MP Error caching the new record in services layer [%@] - %@");
}

void sub_1001B7314()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "MP: delete cloudkit zone, error: %@", v2, v3, v4, v5, v6);
}

void sub_1001B737C()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Found Duplicate SubscriptionID: %@ ", v2, v3, v4, v5, v6);
}

void sub_1001B73E4()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "ERROR Saving Subscription: %@ ", v2, v3, v4, v5, v6);
}

void sub_1001B744C()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Different subscription found - %@", v2, v3, v4, v5, v6);
}

void sub_1001B74B4()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100078DB4();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Error fetching subscription with ID (%@): %@");
}

void sub_1001B751C()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Invalid reference to verifyAndCacheSubscriptionID", v2, v3, v4, v5, v6);
}

void sub_1001B7550()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, " >>> Failed to Read record from LegacyNonManateeContainer %@", v2, v3, v4, v5, v6);
}

void sub_1001B75B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B7628()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, " >>> Failed to Mark Zone to LegacyManateeContainer %@", v2, v3, v4, v5, v6);
}

void sub_1001B7690()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, " >>> Failed to Mark LegacyNonManateeContainer %@", v2, v3, v4, v5, v6);
}

void sub_1001B76F8()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, " >>> Already upgraded to legacy manatee container", v2, v3, v4, v5, v6);
}

void sub_1001B772C()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, " >>> Legacy manatee container unavailable", v2, v3, v4, v5, v6);
}

void sub_1001B7760()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, " >>> Network offline to upgrade legacy manatee container", v2, v3, v4, v5, v6);
}

void sub_1001B7794()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Cannot upgrade bad accessory keys", v2, v3, v4, v5, v6);
}

void sub_1001B77C8()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Cannot upgrade bad account keys", v2, v3, v4, v5, v6);
}

void sub_1001B77FC()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, " >>> Created Zones on LegacyManateeContainer", v2, v3, v4, v5, v6);
}

void sub_1001B7830()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, " >>> Failed to Upgrade Zone to LegacyManateeContainer %@", v2, v3, v4, v5, v6);
}

void sub_1001B7898()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, " >>> Failed to Upgrade to LegacyManateeContainer %@", v2, v3, v4, v5, v6);
}

void sub_1001B7900(void *a1, uint8_t *buf, os_log_t log, void *a4)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Started monitoring for removal of directory: %@", buf, 0xCu);
}

void sub_1001B7960(void *a1, uint8_t *buf, os_log_t log, void *a4)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Started monitoring changes to directory: %@", buf, 0xCu);
}

void sub_1001B79C0(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to open %@", buf, 0xCu);
}

void sub_1001B7A18(void *a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Starting to watch for existence of %@/%@", buf, 0x16u);
}

void sub_1001B7A88(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [(id)sub_100079F80() directoryURL];
  uint64_t v5 = [v4 path];
  sub_10006B57C();
  sub_100079F60((void *)&_mh_execute_header, v6, v7, "Monitored directory changed: %@", v8, v9, v10, v11, v12);
}

void sub_1001B7B30(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [(id)sub_100079F80() directoryURL];
  uint64_t v5 = [v4 path];
  sub_10006B57C();
  sub_100079F60((void *)&_mh_execute_header, v6, v7, "Monitored directory went away: %@", v8, v9, v10, v11, v12);
}

void sub_1001B7BD8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Calling directory changed on startup", v1, 2u);
}

void sub_1001B7C1C(void *a1)
{
  id v2 = a1;
  id v3 = [(id)sub_100079F80() targetFilename];
  sub_10006B57C();
  sub_100079F60((void *)&_mh_execute_header, v4, v5, "File was not found in the directory yet: %@", v6, v7, v8, v9, v10);
}

void sub_1001B7CAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = [a2 directoryURL];
  sub_10006B57C();
  __int16 v8 = 2112;
  uint64_t v9 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error while trying to read the contents of directory %@: %@", v7, 0x16u);
}

void sub_1001B7D68(void *a1)
{
  id v2 = a1;
  id v3 = [(id)sub_100079F80() targetFilename];
  sub_10006B57C();
  sub_100079F60((void *)&_mh_execute_header, v4, v5, "Found file being watched: %@", v6, v7, v8, v9, v10);
}

void sub_1001B7DF8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Deinitializing watcher", v1, 2u);
}

void sub_1001B7E3C()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Failed to allocate security task - using framework-provided bundle identifier!", v2, v3, v4, v5, v6);
}

void sub_1001B7E70()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Failed to retrieve signing ID - using framework-provided bundle identifier!", v2, v3, v4, v5, v6);
}

void sub_1001B7EA4()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Failed to copy signing ID - using framework-provided bundle identifier!", v2, v3, v4, v5, v6);
}

void sub_1001B7ED8()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Failed to establish connection to bluetoothd", v2, v3, v4, v5, v6);
}

void sub_1001B7F0C()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100088FE4();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Invalid reference to send CK XPC object: %@", v2, v3, v4, v5, v6);
}

void sub_1001B7F74()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100088FE4();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Invalid reference to send CK XPC message: %@", v2, v3, v4, v5, v6);
}

void sub_1001B7FDC()
{
  sub_100078DCC(__stack_chk_guard);
  sub_100088FE4();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Invalid reference to reply: Sending CK XPC message: %@", v2, v3, v4, v5, v6);
}

void sub_1001B8044()
{
  sub_100088F94();
  sub_100088FC4((void *)&_mh_execute_header, v0, v1, "Error establishing connection to bluetoothd with XPC message: (%@)%{private}@ with error: %@");
}

void sub_1001B80B0()
{
  sub_100078DCC(__stack_chk_guard);
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = v0;
  sub_100088FB8();
  sub_10006B610((void *)&_mh_execute_header, v1, v2, "Error receiving reply for msg: %@ with error: %s", (void)v3, DWORD2(v3));
}

void sub_1001B8124()
{
  sub_100078DCC(__stack_chk_guard);
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = v0;
  sub_100088FB8();
  sub_10006B610((void *)&_mh_execute_header, v1, v2, "Unexpected object reply for msg: %@ with error: %@", (void)v3, DWORD2(v3));
}

void sub_1001B8198(void *a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = *a1;
  sub_100088FB8();
  sub_10006B610((void *)&_mh_execute_header, v1, v2, "Error receiving sync reply for msg: %@ with error: %s", (void)v3, DWORD2(v3));
}

void sub_1001B8210(void *a1)
{
  LODWORD(v3) = 138412546;
  *(void *)((char *)&v3 + 4) = *a1;
  sub_100088FB8();
  sub_10006B610((void *)&_mh_execute_header, v1, v2, "Unexpected object sync reply for msg: %@ with error: %@", (void)v3, DWORD2(v3));
}

void sub_1001B8288()
{
  sub_100088F94();
  sub_100088FC4((void *)&_mh_execute_header, v0, v1, "Error establishing connection to bluetoothd with XPC message for sync reply: (%@)%{private}@ with error: %@");
}

void sub_1001B82F4()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "XPC server error: %@", v2, v3, v4, v5, v6);
}

void sub_1001B835C()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Unexpected XPC server event: %@", v2, v3, v4, v5, v6);
}

void sub_1001B83C4()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error archiving devicesRemovedWithRecords: %@", v2, v3, v4, v5, v6);
}

void sub_1001B842C()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error archiving devicesUpdatedWithDevices: %@", v2, v3, v4, v5, v6);
}

void sub_1001B8494()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error archiving allDevicesRemoved: %@", v2, v3, v4, v5, v6);
}

void sub_1001B84FC()
{
  sub_10006B57C();
  sub_100088FB8();
  sub_10006B610((void *)&_mh_execute_header, v0, v1, "Error jsonifying legacy %@: %@");
}

void sub_1001B856C()
{
  sub_10006B5F0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Server Nil Message", v1, 2u);
}

void sub_1001B85AC()
{
  sub_10006B57C();
  sub_10006C71C((void *)&_mh_execute_header, v0, v1, "Error updating CachedLocalIDSIdentifiers: %@", v2, v3, v4, v5, v6);
}

void sub_1001B8614()
{
  sub_10006B5F0();
  sub_10006B588((void *)&_mh_execute_header, v0, v1, "Error cloudpairingRetry", v2, v3, v4, v5, v6);
}

void sub_1001B8648(void *a1)
{
  [a1 accountAvailable];
  sub_10006C91C((void *)&_mh_execute_header, v1, v2, "Error nicknaming device, Account status - %d", v3, v4, v5, v6, 0);
}