void sub_100003F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100004238()
{
  if (qword_10031E868 != -1) {
    dispatch_once(&qword_10031E868, &stru_1002DB490);
  }
  v0 = (void *)qword_10031E870;

  return v0;
}

void sub_100004298(uint64_t a1)
{
}

void sub_1000046BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  objc_destroyWeak(v23);
  _Block_object_dispose(&a23, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100004708(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100004734(uint64_t a1)
{
}

void sub_10000473C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = sub_1000596B0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_10023AD74(a1);
  }

  uint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  v5 = [WeakRetained request];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

  v6 = sub_1000596B0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_10023ACE0(a1);
  }

  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(void))(v7 + 16))();
  }
}

void sub_100004A18(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_100006974(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      v9 = [v3 fm_logID];
      int v16 = 138412546;
      v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      uint64_t v10 = "%@: successful with status %ld";
      v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        v9 = [v3 fm_logID];
        int v16 = 138412290;
        v17 = v9;
        uint64_t v10 = "%@: Cancelled";
        v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      v14 = [v3 httpResponseError];
      int v16 = 138412802;
      v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_100007204(id a1)
{
  qword_10031E698 = objc_alloc_init(FMDLocationManagerFactory);

  _objc_release_x1();
}

void sub_100007384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000073A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)unsigned int v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDLocationManagerFactory proxy dealloc callback", v6, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _discardLocationManager:v3];
}

void sub_10000761C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100007644(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100007654(uint64_t a1)
{
}

void sub_10000765C(uint64_t a1)
{
  id v6 = +[NSBundle bundleWithPath:@"/System/Library/PrivateFrameworks/FindMyDevice.framework"];
  id v2 = [objc_alloc((Class)CLLocationManager) initWithEffectiveBundle:v6];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  uint64_t v5 = [*(id *)(a1 + 32) locationManagers];
  [v5 addObject:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_1000077CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [*(id *)(a1 + 32) object];
  if (v3)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v4 = v3;
      [v4 setDelegate:0];
      [v4 stopUpdatingLocation];
      uint64_t v5 = [WeakRetained locationManagers];
      [v5 removeObject:v4];
    }
  }
  id v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = [WeakRetained locationManagers];
    int v8 = 134217984;
    id v9 = [v7 count];
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FMDLocationManagerFactory active location managers %ld", (uint8_t *)&v8, 0xCu);
  }
}

void sub_1000079DC(id a1)
{
  v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023AEF8(v1);
  }

  id v2 = [[FMDMessageMgr_iOS alloc] initSingleton];
  uint64_t v3 = (void *)qword_10031E6A8;
  qword_10031E6A8 = (uint64_t)v2;
}

void sub_1000083B0(uint64_t a1)
{
  CFRunLoopSourceRef RunLoopSource = CFUserNotificationCreateRunLoopSource(kCFAllocatorDefault, *(CFUserNotificationRef *)(a1 + 32), (CFUserNotificationCallBack)sub_100008438, 0);
  if (RunLoopSource)
  {
    id v2 = RunLoopSource;
    Current = CFRunLoopGetCurrent();
    CFRunLoopAddSource(Current, v2, kCFRunLoopCommonModes);
    CFRelease(v2);
  }
}

void sub_100008438(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[FMDMessageMgr_iOS sharedInstance];
  id v4 = [v3 activeMessage];

  if (a2 == 1)
  {
    id v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = [v4 fm_logID];
      int v18 = 138412290;
      id v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Alternate button activated for message %@", (uint8_t *)&v18, 0xCu);
    }
    v11 = [v4 alternateButtonAction];

    if (v11)
    {
      uint64_t v8 = [v4 alternateButtonAction];
      goto LABEL_11;
    }
  }
  else if (!a2)
  {
    uint64_t v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [v4 fm_logID];
      int v18 = 138412290;
      id v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Default button activated for message %@", (uint8_t *)&v18, 0xCu);
    }
    uint64_t v7 = [v4 defaultButtonAction];

    if (v7)
    {
      uint64_t v8 = [v4 defaultButtonAction];
LABEL_11:
      uint32_t v12 = (void *)v8;
      (*(void (**)(void))(v8 + 16))();
    }
  }
  id v13 = +[FMDMessageMgr_iOS sharedInstance];
  [v13 setActiveMessage:0];

  v14 = +[FMDMessageMgr_iOS sharedInstance];
  [v14 setCfNotification:0];

  uint64_t v15 = +[FMXPCTransactionManager sharedInstance];
  int v16 = +[FMDMessageMgr_iOS sharedInstance];
  v17 = [v16 _xpcTransactionNameFor:v4];
  [v15 endTransaction:v17];
}

void sub_100008744(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = sub_100004238();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_10023B0CC((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Playing XPC sound", v11, 2u);
  }
}

void sub_100008828(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = sub_100004238();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_10023B138((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Stopped XPC sound", v11, 2u);
  }
}

void sub_100008A30(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000AA30(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x10000A9B8);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000ACB4(_Unwind_Exception *a1)
{
}

void sub_10000B3D4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  id v17 = a3;
  id v11 = a4;
  id v12 = a5;
  id v13 = a6;
  unsigned int v14 = [*(id *)(a1 + 32) cancelled];
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v15 = *(void **)(a1 + 40);
  if (v14)
  {
    [v15 _disablePowerAssertionForRequest:v16];
    [*(id *)(a1 + 40) _endXPCTransactionForRequest:*(void *)(a1 + 32)];
  }
  else
  {
    [v15 _handleResponseForRequest:v16 withStatus:a2 headers:v17 body:v11 location:v12 error:v13];
  }
}

void sub_10000BEA0(_Unwind_Exception *a1)
{
}

void sub_10000C0EC(_Unwind_Exception *a1)
{
}

void sub_10000C3C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v15 - 40));
  _Unwind_Resume(a1);
}

void sub_10000C3F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _sendRequest:v2];
}

id sub_10000CAD0(id a1)
{
  return a1;
}

id sub_10000CB00(id a1)
{
  return a1;
}

void sub_10000CB24(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_10000D018(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 104));
  objc_destroyWeak((id *)(v4 - 96));
  _Unwind_Resume(a1);
}

void sub_10000D06C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v8 = sub_100004238();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v12 = 138412546;
    id v13 = v6;
    __int16 v14 = 2112;
    uint64_t v15 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Locator received location %@ for accessory %@", (uint8_t *)&v12, 0x16u);
  }

  uint64_t v10 = [[FMDLocation alloc] initWithLocation:v6 eventType:*(void *)(a1 + 56) positionType:255];
  [WeakRetained setLocation:v10];
  [WeakRetained updateLocationMetaData];
  if (a4 == 5 || a4 == 3)
  {
    id v11 = objc_loadWeakRetained((id *)(a1 + 48));
    [v11 stopLocator];
  }
}

void sub_10000D1AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = [WeakRetained locator];
    uint64_t v5 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v4;
    __int16 v10 = 2112;
    uint64_t v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Locator stopped %@ for accessory %@", (uint8_t *)&v8, 0x16u);
  }
  id v6 = [WeakRetained locator];
  uint64_t v7 = [v6 locatorPublisher];
  [v7 flushLocations];

  [WeakRetained _completeLocate];
}

id sub_10000D2BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) startLocator];
}

void sub_10000D5AC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10000D5E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _finishAction];
}

void sub_10000D628(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained accessoryUpdateFuture];
  uint64_t v2 = +[NSError errorWithDomain:@"com.apple.icloud.findmydeviced.accessoryCurrentLocationAction" code:1 userInfo:0];
  [v1 finishWithError:v2];
}

id sub_10000DBA4(uint64_t a1)
{
  return [*(id *)(a1 + 32) dispatchAnalytics:*(void *)(a1 + 40)];
}

NSDictionary *__cdecl sub_10000DE5C(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  uint64_t v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_10000DEAC(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10000DEB4(uint64_t a1)
{
  uint64_t v2 = +[NSMutableDictionary dictionary];
  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 8) account];
  uint64_t v4 = [v3 authId];
  [v2 fm_safeSetObject:v4 forKey:@"X-Apple-PrsId"];

  return v2;
}

void sub_10000DF40(id a1, FMDRequest *a2)
{
  uint64_t v2 = a2;
  if (![(FMDRequest *)v2 willRetry])
  {
    uint64_t v3 = [(FMDRequest *)v2 httpResponseError];
    if (v3
      || [(FMDRequest *)v2 httpResponseStatus] < 200
      || [(FMDRequest *)v2 httpResponseStatus] > 399)
    {
    }
    else if (![(FMDRequest *)v2 cancelled])
    {
      int v12 = sub_100059B70();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_16;
      }
      uint64_t v11 = [(FMDRequest *)v2 fm_logID];
      *(_DWORD *)buf = 138412546;
      __int16 v14 = v11;
      __int16 v15 = 2048;
      int64_t v16 = [(FMDRequest *)v2 httpResponseStatus];
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);
      goto LABEL_14;
    }
    unsigned int v4 = [(FMDRequest *)v2 cancelled];
    uint64_t v5 = sub_100059B70();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = [(FMDRequest *)v2 fm_logID];
        *(_DWORD *)buf = 138412290;
        __int16 v14 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:
      }
    }
    else if (v6)
    {
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int64_t v8 = [(FMDRequest *)v2 httpResponseStatus];
      uint64_t v9 = [(FMDRequest *)v2 httpResponseError];
      *(_DWORD *)buf = 138412802;
      __int16 v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = v8;
      __int16 v17 = 2112;
      int v18 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    __int16 v10 = [(FMDRequest *)v2 httpResponseError];

    if (!v10)
    {
      int v12 = +[NSString stringWithFormat:@"Server returned error code %ld", [(FMDRequest *)v2 httpResponseStatus]];
      goto LABEL_16;
    }
    uint64_t v11 = [(FMDRequest *)v2 httpResponseError];
    int v12 = +[NSString stringWithFormat:@"Error contacting the server: %@", v11];
LABEL_14:

LABEL_16:
  }
}

void sub_10000E2B8(id a1)
{
  qword_10031E6B8 = objc_alloc_init(ActionManager);

  _objc_release_x1();
}

void sub_10000E4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000E4C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unsigned int v4 = (id *)(a1 + 32);
  id v5 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  BOOL v6 = [v5 objectForKeyedSubscript:NSKeyValueChangeNewKey];

  id v7 = [v6 unsignedIntegerValue];
  [WeakRetained refreshTransactionState:v7];
}

void sub_10000E69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000E6B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000E6C4(uint64_t a1)
{
}

void sub_10000E6CC(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = objc_opt_class();
    unsigned int v4 = *(MetaAction **)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    double v46 = *(double *)&v3;
    __int16 v47 = 2048;
    v48 = v4;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received enqueue for action %@ (0x%lX)", buf, 0x16u);
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int isKindOfClass = 1;
  }
  else
  {
    objc_opt_class();
    int isKindOfClass = objc_opt_isKindOfClass();
  }
  id v7 = [*(id *)(a1 + 40) nextRegisterDate];
  BOOL v8 = v7 != 0;

  if ((v8 & isKindOfClass) == 0) {
    goto LABEL_10;
  }
  uint64_t v9 = (MetaAction *)*(id *)(a1 + 32);
  if ([(MetaAction *)v9 force]) {
    goto LABEL_9;
  }
  +[NSDate timeIntervalSinceReferenceDate];
  double v11 = v10;
  int v12 = [*(id *)(a1 + 40) nextRegisterDate];
  [v12 timeIntervalSinceReferenceDate];
  double v14 = v13;

  double v15 = v11 - v14;
  if (v15 >= 0.0)
  {
LABEL_9:

LABEL_10:
    uint64_t v16 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 40) nextActionIdNumber]);
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8);
    int v18 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v16;

    [*(id *)(a1 + 40) setNextActionIdNumber:((char *)[*(id *)(a1 + 40) nextActionIdNumber]) + 1];
    uint64_t v9 = [[MetaAction alloc] initWithAction:*(void *)(a1 + 32) id:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
    id v19 = sub_100004238();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v20 = objc_opt_class();
      v21 = *(MetaAction **)(a1 + 32);
      id v22 = v20;
      v23 = objc_opt_class();
      *(_DWORD *)buf = 138413058;
      double v46 = *(double *)&v20;
      __int16 v47 = 2048;
      v48 = v21;
      __int16 v49 = 2112;
      v50 = v23;
      __int16 v51 = 2048;
      v52 = v9;
      id v24 = v23;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Wrapping action %@ (0x%lX) in %@ (0x%lX)", buf, 0x2Au);
    }
    v25 = sub_100004238();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      v26 = objc_opt_class();
      v27 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      double v46 = *(double *)&v26;
      __int16 v47 = 2048;
      v48 = v9;
      __int16 v49 = 2112;
      v50 = v27;
      id v28 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Enqueuing action %@ (0x%lX). Current actions : %@", buf, 0x20u);
    }
    [*(id *)(a1 + 40) _setDependenciesForNewAction:v9];
    objc_initWeak(&location, v9);
    objc_initWeak(&from, *(id *)(a1 + 40));
    v37 = _NSConcreteStackBlock;
    uint64_t v38 = 3221225472;
    v39 = sub_10000EC2C;
    v40 = &unk_1002D9328;
    objc_copyWeak(&v41, &location);
    objc_copyWeak(&v42, &from);
    [(MetaAction *)v9 setCompletionBlock:&v37];
    v29 = [*(id *)(a1 + 40) weakActions:v37, v38, v39, v40];
    [v29 addPointer:v9];

    v30 = +[NSDate date];
    [(MetaAction *)v9 setQueueAddedDate:v30];

    v31 = [*(id *)(a1 + 40) actionExecutionQueue];
    [v31 addOperation:v9];

    v32 = sub_100004238();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
    {
      v33 = objc_opt_class();
      v34 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      double v46 = *(double *)&v33;
      __int16 v47 = 2048;
      v48 = v9;
      __int16 v49 = 2112;
      v50 = v34;
      id v35 = v33;
      _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Enqueued action %@ (0x%lX). Current actions : %@", buf, 0x20u);
    }
    objc_destroyWeak(&v42);
    objc_destroyWeak(&v41);
    objc_destroyWeak(&from);
    objc_destroyWeak(&location);
    goto LABEL_17;
  }
  v36 = sub_100004238();
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    double v46 = v15;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Throttling registers for %f", buf, 0xCu);
  }

LABEL_17:
}

void sub_10000EBEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_10000EC2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v4 = [v3 metadataModsQueue];
  if (v4)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_10000ECF0;
    v5[3] = &unk_1002D93F0;
    id v6 = WeakRetained;
    id v7 = v3;
    dispatch_sync(v4, v5);
  }
}

void sub_10000ECF0(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = objc_opt_class();
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    int v7 = 138412802;
    BOOL v8 = v3;
    __int16 v9 = 2048;
    uint64_t v10 = v4;
    __int16 v11 = 2112;
    uint64_t v12 = v5;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Completed action %@ (0x%lX). Current actions : %@", (uint8_t *)&v7, 0x20u);
  }
}

void sub_10000EE78(uint64_t a1)
{
  uint64_t v14 = 0;
  double v15 = &v14;
  uint64_t v16 = 0x3032000000;
  uint64_t v17 = sub_10000E6B4;
  int v18 = sub_10000E6C4;
  id v19 = 0;
  uint64_t v2 = [*(id *)(a1 + 32) weakActions];
  id v3 = [v2 allObjects];

  BOOL v8 = _NSConcreteStackBlock;
  uint64_t v9 = 3221225472;
  uint64_t v10 = sub_10000F060;
  __int16 v11 = &unk_1002D9530;
  id v12 = *(id *)(a1 + 40);
  double v13 = &v14;
  [v3 enumerateObjectsUsingBlock:&v8];
  uint64_t v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = objc_opt_class();
    uint64_t v6 = v15[5];
    *(_DWORD *)buf = 138412546;
    v21 = v5;
    __int16 v22 = 2048;
    uint64_t v23 = v6;
    id v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Cancelling action %@ (0x%lX)", buf, 0x16u);
  }
  [v15[5] cancel:v8, v9, v10, v11];

  _Block_object_dispose(&v14, 8);
}

void sub_10000F038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000F060(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  id v7 = [v9 actionId];
  BOOL v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_10000F17C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) actionExecutionQueue];
  [v1 cancelAllOperations];
}

id sub_10000F254(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v7 = 134217984;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "ActionManager operation count %lu", (uint8_t *)&v7, 0xCu);
  }

  uint64_t v4 = *(void *)(a1 + 40);
  if (!v4)
  {
    uint64_t v5 = +[FMXPCTransactionManager sharedInstance];
    [v5 endTransaction:@"ActionManagerTransaction"];
    goto LABEL_7;
  }
  if (([*(id *)(a1 + 32) operationTransactionActive] & 1) == 0)
  {
    uint64_t v5 = +[FMXPCTransactionManager sharedInstance];
    [v5 beginTransaction:@"ActionManagerTransaction"];
LABEL_7:
  }
  return [*(id *)(a1 + 32) setOperationTransactionActive:v4 != 0];
}

void sub_100010C84(id a1)
{
  qword_10031E6C8 = objc_alloc_init(FMDAbsintheV3SigningInterface);

  _objc_release_x1();
}

NSDictionary *__cdecl sub_100010E38(id a1)
{
  id v1 = +[NSMutableDictionary dictionary];
  uint64_t v2 = +[FMDAbsintheV3SigningInterface pscSUIURL];
  uint64_t v3 = [v2 URLByDeletingLastPathComponent];
  uint64_t v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v16 = 138412546;
    uint64_t v17 = v3;
    __int16 v18 = 2112;
    id v19 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Reading PSC.sui Folder %@, file %@", (uint8_t *)&v16, 0x16u);
  }

  uint64_t v5 = +[NSFileManager defaultManager];
  uint64_t v6 = [v2 path];
  int v7 = [v5 attributesOfItemAtPath:v6 error:0];

  if (v7)
  {
    [v1 fm_safeSetObject:v7 forKey:@"PSCFileAttributes"];
    uint64_t v8 = [v2 absoluteString];
    CFStringRef v9 = @"PSCFileURL";
  }
  else
  {
    uint64_t v8 = [v2 absoluteString];
    CFStringRef v9 = @"PSCFileNotFound";
  }
  [v1 fm_safeSetObject:v8 forKey:v9];

  uint64_t v10 = +[NSFileManager defaultManager];
  __int16 v11 = [v3 path];
  id v12 = [v10 attributesOfItemAtPath:v11 error:0];

  if (v12)
  {
    [v1 fm_safeSetObject:v12 forKey:@"PSCFolderAttributes"];
    double v13 = [v3 absoluteString];
    CFStringRef v14 = @"PSCFolderURL";
  }
  else
  {
    double v13 = [v3 absoluteString];
    CFStringRef v14 = @"PSCFolderNotFound";
  }
  [v1 fm_safeSetObject:v13 forKey:v14];

  return (NSDictionary *)v1;
}

void sub_100011268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100011294(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000112A4(uint64_t a1)
{
}

void sub_1000112AC(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v10)
  {
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    int v7 = v10;
  }
  else
  {
    uint64_t v6 = (void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    int v7 = v5;
  }
  id v8 = v7;
  CFStringRef v9 = *v6;
  void *v6 = v8;

  [*(id *)(a1 + 32) signal];
}

void sub_100011494(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDAbsintheV3SigningSession);
  [(FMDAbsintheV3SigningSession *)v2 setActivationLockRequestUUID:*(void *)(a1 + 32)];
  [(FMDAbsintheV3SigningSession *)v2 setCause:*(void *)(a1 + 40)];
  [(FMDAbsintheV3SigningSession *)v2 setMode:*(void *)(a1 + 72) != 0];
  uint64_t v3 = [*(id *)(a1 + 48) serverInteractionController];
  [(FMDAbsintheV3SigningSession *)v2 establishSessionWithServerInteractionController:v3];

  uint64_t v4 = *(void *)(a1 + 56);
  id v8 = 0;
  id v5 = [(FMDAbsintheV3SigningSession *)v2 signatureForData:v4 error:&v8];
  id v6 = v8;
  uint64_t v7 = *(void *)(a1 + 64);
  if (v7) {
    (*(void (**)(uint64_t, id, void *))(v7 + 16))(v7, v6, v5);
  }
}

void sub_100012130(id a1)
{
  id v1 = +[NSNull objectType];
  v10[0] = v1;
  v11[0] = objc_opt_class();
  uint64_t v2 = +[NSURL objectType];
  v10[1] = v2;
  v11[1] = objc_opt_class();
  uint64_t v3 = +[NSDate objectType];
  v10[2] = v3;
  v11[2] = objc_opt_class();
  uint64_t v4 = +[NSString objectType];
  v10[3] = v4;
  v11[3] = objc_opt_class();
  id v5 = +[NSNumber objectType];
  v10[4] = v5;
  v11[4] = objc_opt_class();
  id v6 = +[NSArray objectType];
  v10[5] = v6;
  v11[5] = objc_opt_class();
  uint64_t v7 = +[NSDictionary objectType];
  v10[6] = v7;
  v11[6] = objc_opt_class();
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:7];
  CFStringRef v9 = (void *)qword_10031E6D8;
  qword_10031E6D8 = v8;
}

uint64_t sub_100012CB4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100012CCC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100012CE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCurrentTask:0];
}

void sub_100012F48(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = sub_100059D38();
  id v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10023B6E8(v4, v6);
    }

    uint64_t v7 = [*(id *)(a1 + 32) currentTask];
    [v7 finishWithError:v4];
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Finished evaluating policy.", v8, 2u);
    }

    uint64_t v7 = [*(id *)(a1 + 32) currentTask];
    [v7 finishWithNoResult];
  }
}

void sub_100013F0C(id a1)
{
  id v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023B7AC(v1);
  }

  id v2 = [[FMDLostModeManager alloc] initSingleton];
  uint64_t v3 = (void *)qword_10031E6E8;
  qword_10031E6E8 = (uint64_t)v2;
}

NSDictionary *__cdecl sub_100014094(id a1)
{
  id v1 = +[NSMutableDictionary dictionary];
  id v2 = +[FMDPreferencesMgr lostModeInfo];
  if (v2) {
    [v1 addEntriesFromDictionary:v2];
  }

  return (NSDictionary *)v1;
}

void sub_100014AB8(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.AOSNotification.LostModeDisabled" object:0];
}

void sub_100014C50(id a1)
{
  qword_10031E6F8 = objc_alloc_init(FMDExtExtensionsDataSource);

  _objc_release_x1();
}

void sub_100014D80(uint64_t a1)
{
}

void sub_100014DDC(id a1)
{
  id v3 = [objc_alloc((Class)NSMutableSet) initWithArray:&off_1002F2D50];
  [v3 addObject:@"com.apple.icloud.FindMyDevice.FindMyExtensionContainer.FMDMagSafeExtension"];
  uint64_t v1 = +[NSSet setWithSet:v3];
  id v2 = (void *)qword_10031E708;
  qword_10031E708 = v1;
}

void sub_100014FEC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_100059878();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v34 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "error finding extensions %@", buf, 0xCu);
    }
  }
  else
  {
    if (![v5 count]) {
      goto LABEL_22;
    }
    uint64_t v8 = sub_100059878();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v34 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "all extensions %@", buf, 0xCu);
    }

    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    uint64_t v7 = v5;
    id v9 = [v7 countByEnumeratingWithState:&v28 objects:v32 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v23 = 0;
      id v24 = v5;
      uint64_t v11 = *(void *)v29;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v29 != v11) {
            objc_enumerationMutation(v7);
          }
          uint64_t v13 = *(void **)(*((void *)&v28 + 1) + 8 * i);
          uint64_t v14 = +[FMDExtExtensionsDataSource _allowedExtensionsIDForDataSource];
          uint64_t v15 = [v13 identifier];
          unsigned int v16 = [v14 containsObject:v15];

          uint64_t v17 = sub_100059878();
          BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          if (v16)
          {
            if (v18)
            {
              *(_DWORD *)buf = 138412290;
              id v34 = v13;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "found extension %@", buf, 0xCu);
            }

            [*(id *)(a1 + 32) _setCompleteionBlocksForExtension:v13];
            uint64_t v17 = [*(id *)(a1 + 32) extensions];
            id v19 = [v13 identifier];
            [v17 setObject:v13 forKey:v19];
          }
          else if (v18)
          {
            *(_DWORD *)buf = 138412290;
            id v34 = v13;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "skipping extension %@", buf, 0xCu);
          }
        }
        id v10 = [v7 countByEnumeratingWithState:&v28 objects:v32 count:16];
      }
      while (v10);
      id v6 = v23;
      id v5 = v24;
    }
  }

LABEL_22:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100015368;
  block[3] = &unk_1002D97B0;
  id v20 = *(id *)(a1 + 40);
  id v26 = v6;
  id v27 = v20;
  uint64_t v21 = qword_10031E718;
  id v22 = v6;
  if (v21 != -1) {
    dispatch_once(&qword_10031E718, block);
  }
}

uint64_t sub_100015368(uint64_t a1)
{
  id v2 = sub_100059878();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Extension data source calling completion block", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100015544(uint64_t a1)
{
  id v2 = sub_100059878();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ext extension request completed for %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000155EC(uint64_t a1)
{
  id v2 = sub_100059878();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#ext extension request interrupted for %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100015694(uint64_t a1)
{
  id v2 = sub_100059878();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "extension request cancelled for %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10001590C(id a1, NSDictionary *a2, NSError *a3)
{
  uint64_t v3 = a3;
  int v4 = sub_100004238();
  uint64_t v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023B978((uint64_t)v3, v5);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "OpenURL completed.", v6, 2u);
  }
}

void sub_100016740(id a1)
{
  uint64_t v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023BA68(v1);
  }

  id v2 = objc_alloc_init(FMDBLEStateOwner);
  uint64_t v3 = (void *)qword_10031E720;
  qword_10031E720 = (uint64_t)v2;
}

void sub_100016880(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _monitorWatchBLEStatus];
  [WeakRetained _updateBLEStatus];
}

void sub_100016AA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100016ADC(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothAvailabilityChangedNotification", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBLEStatus];
}

void sub_100016B5C(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothStateChangedNotification", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBLEStatus];
}

void sub_100016D78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateBLEStatus];
}

void sub_1000174D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000174EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000174FC(uint64_t a1)
{
}

void sub_100017504(uint64_t a1)
{
}

void sub_100017C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100017C7C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  uint64_t v7 = [v9 macAddress];
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100018BE4(id a1)
{
  qword_10031E730 = objc_alloc_init(FMDDaemon);

  _objc_release_x1();
}

NSDictionary *__cdecl sub_100018CF0(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  v15[0] = kFMDPrefDomain;
  v15[1] = kFMDNotBackedUpPrefDomain;
  v15[2] = kFMDPublicNotBackedUpPrefDomain;
  v15[3] = kFMDWatchPrefDomain;
  v15[4] = kFMDWatchNotBackedUpPrefDomain;
  +[NSArray arrayWithObjects:v15 count:5];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = (id)objc_claimAutoreleasedReturnValue();
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        CFStringRef v7 = *(const __CFString **)(*((void *)&v10 + 1) + 8 * i);
        CFDictionaryRef v8 = CFPreferencesCopyMultiple(0, v7, kCFPreferencesCurrentUser, kCFPreferencesAnyHost);
        [v1 fm_safeSetObject:v8 forKey:v7];
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  return (NSDictionary *)v1;
}

void sub_1000192F8(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [*(id *)(a1 + 32) apsHandlers];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v10 + 1) + 8 * (void)v6);
        CFDictionaryRef v8 = [*(id *)(a1 + 32) apsHandlers];
        id v9 = [v8 objectForKeyedSubscript:v7];

        [v9 resumeRegistrations];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

void sub_100019510(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) apsHandlerForEnvironment:v3];
  uint64_t v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412546;
    id v7 = v3;
    __int16 v8 = 2112;
    id v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Checked in APS mach handlder %@:%@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_10001974C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100019768(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100019778(uint64_t a1)
{
}

void sub_100019780(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) apsHandlers];
  uint64_t v3 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v6 = objc_alloc((Class)FMAPSHandler);
    uint64_t v7 = *(void *)(a1 + 40);
    __int16 v8 = [@"com.apple.icloud.findmydeviced.aps-" stringByAppendingString:v7];
    id v9 = [v6 initWithEnvironmentName:v7 launchOnDemandPort:v8];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    long long v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    if (([*(id *)(a1 + 32) startupComplete] & 1) == 0) {
      [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) suspendRegistrations];
    }
    uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    id v13 = [*(id *)(a1 + 32) apsHandlers];
    [v13 setObject:v12 forKeyedSubscript:*(void *)(a1 + 40)];
  }
}

void sub_100019A20(id a1)
{
  v36[0] = @"AppleLanguagePreferencesChangedNotification";
  v36[1] = @"AppleDatePreferencesChangedNotification";
  v36[2] = @"AppleTimePreferencesChangedNotification";
  v36[3] = @"AppleNumberPreferencesChangedNotification";
  v36[4] = @"AppleKeyboardsPreferencesChangedNotification";
  v36[5] = @"com.apple.language.changed";
  long long v30 = +[NSArray arrayWithObjects:v36 count:6];
  v34[0] = MCPasscodeChangedNotification;
  id v29 = [&stru_1002D99D0 copy];
  v35[0] = v29;
  v34[1] = MCAllowPasscodeModificationChangedNotification;
  id v28 = [&stru_1002D99F0 copy];
  v35[1] = v28;
  v34[2] = @"com.apple.locationd.authorization";
  id v27 = [&stru_1002D9A10 copy];
  v35[2] = v27;
  v34[3] = v30;
  id v26 = [&stru_1002D9A30 copy];
  v35[3] = v26;
  v34[4] = @"com.apple.purplebuddy.setupdone";
  id v25 = [&stru_1002D9A50 copy];
  v35[4] = v25;
  v34[5] = NRPairedDeviceRegistryDeviceDidPairDarwinNotification;
  id v24 = [&stru_1002D9A70 copy];
  v35[5] = v24;
  v34[6] = NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification;
  id v23 = [&stru_1002D9A90 copy];
  v35[6] = v23;
  v34[7] = kLockdownNotificationActivationStateChanged;
  id v22 = [&stru_1002D9AB0 copy];
  v35[7] = v22;
  v34[8] = @"com.apple.bluetooth.connection";
  id v21 = [&stru_1002D9AD0 copy];
  v35[8] = v21;
  v34[9] = @"com.apple.bluetooth.pairing";
  id v20 = [&stru_1002D9AF0 copy];
  v35[9] = v20;
  v34[10] = SPAccessoryDidPairNotification;
  id v19 = [&stru_1002D9B10 copy];
  v35[10] = v19;
  v34[11] = @"com.apple.icloud.findmydeviced.findkit.magSafe.added";
  id v18 = [&stru_1002D9B30 copy];
  v35[11] = v18;
  v34[12] = @"com.apple.icloud.findmydeviced.findkit.magSafe.removed";
  id v1 = [&stru_1002D9B50 copy];
  v35[12] = v1;
  v34[13] = @"com.apple.icloud.findmydeviced.findkit.magSafe.attach";
  id v2 = [&stru_1002D9B70 copy];
  v35[13] = v2;
  v34[14] = @"com.apple.icloud.findmydeviced.findkit.magSafe.detach";
  id v3 = [&stru_1002D9B90 copy];
  v35[14] = v3;
  v34[15] = @"com.apple.accessories.connection.passedMFi4Auth";
  id v4 = [&stru_1002D9BB0 copy];
  v35[15] = v4;
  v34[16] = @"com.apple.icloud.FindMy.addMagSafeAccessory";
  id v5 = [&stru_1002D9BD0 copy];
  v35[16] = v5;
  v34[17] = @"com.apple.accessories.connection.MFi4AccessoryDisconnected";
  id v6 = [&stru_1002D9BF0 copy];
  v35[17] = v6;
  v34[18] = @"com.apple.locationd/Prefs";
  id v7 = [&stru_1002D9C10 copy];
  v35[18] = v7;
  v34[19] = @"com.apple.system.hostname";
  id v8 = [&stru_1002D9C30 copy];
  v35[19] = v8;
  v34[20] = @"com.apple.icloud.searchparty.selfbeaconchanged";
  id v9 = [&stru_1002D9C50 copy];
  v35[20] = v9;
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:v35 forKeys:v34 count:21];
  long long v11 = (void *)qword_10031E740;
  qword_10031E740 = v10;

  uint64_t v12 = +[NSMutableDictionary dictionary];
  id v13 = (void *)qword_10031E740;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_10001A7B8;
  v31[3] = &unk_1002D9CA0;
  id v32 = v12;
  id v33 = v30;
  id v14 = v30;
  id v15 = v12;
  [v13 enumerateKeysAndObjectsUsingBlock:v31];
  id v16 = [v15 copy];
  uint64_t v17 = (void *)qword_10031E740;
  qword_10031E740 = (uint64_t)v16;
}

void sub_100019F18(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMDDevicePasscodeMayHaveChangedNotification" object:0];
}

void sub_100019F70(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMDAllowPasscodeModificationChangedNotification" object:0];
}

void sub_100019FC8(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMDLocationServiceAuthorizationChangedNotification" object:0];
}

void sub_10001A020(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMDLocaleChangedNotification" object:0];
}

void sub_10001A078(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"purplebuddy.setupdone" object:0];
}

void sub_10001A0D0(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"nano.devicedidpair" object:0];
}

void sub_10001A128(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"nano.devicedidunpair" object:0];
}

void sub_10001A180(id a1)
{
  id v1 = (void *)MAEGetActivationStateWithError();
  id v2 = 0;
  if (v2)
  {
    id v3 = sub_100004238();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_10023BCC8();
    }
  }
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v8 = v1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Received ActivationStateChanged. Current activation state : %@", buf, 0xCu);
  }

  if ([v1 isEqualToString:kMAActivationStateActivated])
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Device is activated. Deleting any post wipe lost mode info...", buf, 2u);
    }

    +[FMDPreferencesMgr setFMIPWipeLostModeInfo:0];
    id v6 = +[FMDLocalActivationLockInfoManager sharedInstance];
    [v6 clearAllState];
  }
}

void sub_10001A304(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMIPDeviceDidConnectBluetoothDevice" object:0];
}

void sub_10001A35C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMIPDeviceDidPairBluetoothDevice" object:0];
}

void sub_10001A3B4(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"kFMDAccessoryDidPairLocalNotification" object:0];
}

void sub_10001A40C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.icloud.findmydeviced.findkit.magSafe.added" object:0];
}

void sub_10001A464(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.icloud.findmydeviced.findkit.magSafe.removed" object:0];
}

void sub_10001A4BC(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.icloud.findmydeviced.findkit.magSafe.attach" object:0];
}

void sub_10001A514(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.icloud.findmydeviced.findkit.magSafe.detach" object:0];
}

void sub_10001A56C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.accessories.connection.passedMFi4Auth" object:0];
}

void sub_10001A5C4(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.icloud.FindMy.addMagSafeAccessory" object:0];
}

void sub_10001A61C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"com.apple.accessories.connection.MFi4AccessoryDisconnected" object:0];
}

void sub_10001A674(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"FMDLocationServicesStateChangedNotification" object:0];
}

void sub_10001A6CC(id a1)
{
  id v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Received darwin notification for host name change", v3, 2u);
  }

  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"FMDDeviceNameMayHaveChangedNotification" object:0];
}

void sub_10001A760(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"kFMDDeviceSPSelfBeaconChangeNotification" object:0];
}

void sub_10001A7B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10001A8A0;
  v9[3] = &unk_1002D9C78;
  id v10 = a3;
  id v11 = v5;
  id v12 = *(id *)(a1 + 40);
  id v6 = v5;
  id v7 = v10;
  id v8 = [v9 copy];
  [*(id *)(a1 + 32) setObject:v8 forKeyedSubscript:v6];
}

void sub_10001A8A0(uint64_t a1)
{
  id v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  v2[2]();
  id v3 = (__CFString *)*(id *)(a1 + 40);
  if ([*(id *)(a1 + 40) isEqual:*(void *)(a1 + 48)])
  {
    id v4 = @"FMDLocaleChangedNotification";

    id v3 = v4;
  }
  id v5 = +[NSString stringWithFormat:@"DarwinEvent.%@", v3];
  id v6 = [[FMDEventLoggerEventScalar alloc] initWithEventName:v5];
  id v7 = +[FMDEventLogger sharedLogger];
  id v8 = +[FMDEventLoggerFacilityDataPeek facilityName];
  id v10 = v8;
  id v9 = +[NSArray arrayWithObjects:&v10 count:1];
  [v7 logEvent:v6 toFacilitiesNamed:v9];
}

void sub_10001AA58(id a1)
{
  id v1 = (void *)qword_10031E750;
  qword_10031E750 = (uint64_t)&__NSDictionary0__struct;
}

void sub_10001B420()
{
  v0 = +[FMPreferencesUtil dictionaryForKey:@"FMIPWipeLostModeInfo" inDomain:kFMDPostWipePrefDomain];
  id v1 = [v0 objectForKey:@"lostModeEnabled"];
  unsigned int v2 = [v1 BOOLValue];

  if (v2)
  {
    id v3 = (void *)MAEGetActivationStateWithError();
    id v4 = 0;
    if (v4)
    {
      id v5 = sub_100004238();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_10023BCC8();
      }
    }
    id v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Doing fallback cleanup of postwipe preferences (notification).  Activation state: [%@]", buf, 0xCu);
    }

    +[FMDPreferencesMgr setFMIPWipeLostModeInfo:0];
  }
}

void sub_10001BF20(uint64_t a1)
{
  unsigned int v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) fm_logID];
    int v7 = 138412290;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Making %@ inactive because wipe was received", (uint8_t *)&v7, 0xCu);
  }
  [*(id *)(a1 + 40) makeProviderInactive];
  id v4 = [[WipeAction alloc] initWithProvider:*(void *)(a1 + 40)];
  [(WipeAction *)v4 setMaxDelayInterval:*(double *)(a1 + 48)];
  id v5 = +[ActionManager sharedManager];
  id v6 = [v5 enqueueAction:v4];
}

void sub_10001C0A4(id a1)
{
  qword_10031E760 = objc_alloc_init(FMDStartupRegisterManager);

  _objc_release_x1();
}

void sub_10001C34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001C364(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) info];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count] != 0;
}

void sub_10001C79C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) info];
  [v2 removeObjectForKey:@"qcPendingEpoch"];

  id v3 = [*(id *)(a1 + 32) infoAtStartup];
  id v4 = [v3 count];

  if (v4)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v5 = [*(id *)(a1 + 32) infoAtStartup];
    id v6 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v17;
      do
      {
        id v9 = 0;
        do
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void *)(*((void *)&v16 + 1) + 8 * (void)v9);
          id v11 = [*(id *)(a1 + 32) info];
          id v12 = [v11 objectForKeyedSubscript:v10];

          id v13 = [*(id *)(a1 + 32) infoAtStartup];
          id v14 = [v13 objectForKeyedSubscript:v10];

          if (v12)
          {
            if ([v12 isEqualToNumber:v14])
            {
              id v15 = [*(id *)(a1 + 32) info];
              [v15 removeObjectForKey:v10];
            }
          }

          id v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }
      while (v7);
    }

    [*(id *)(a1 + 32) setInfoAtStartup:0];
    [*(id *)(a1 + 32) _saveInfo];
  }
}

id sub_10001C9F8(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  [*(id *)(a1 + 32) setInfo:v2];

  id v3 = *(void **)(a1 + 32);

  return [v3 _saveInfo];
}

id sub_10001CB28(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) info];
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];

  id v3 = *(void **)(a1 + 32);

  return [v3 _saveInfo];
}

id sub_10001CC2C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) info];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];

  id v3 = *(void **)(a1 + 32);

  return [v3 _saveInfo];
}

void sub_10001CE20(id a1)
{
  qword_10031E770 = objc_alloc_init(FMDExtConfigurationRegistry);

  _objc_release_x1();
}

id sub_10001D0EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _initializeFromDisk];
}

void sub_10001D674(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

id sub_10001D6A4(uint64_t a1)
{
  return [*(id *)(a1 + 32) fetchSupportedAccessoryTypes];
}

void sub_10001D6AC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) listner];
  [v1 supportedAccessoryTypesUpdated];
}

void sub_10001DD7C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"version"];
  uint64_t v3 = [*(id *)(a1 + 40) version];
  if (!v3
    || (id v4 = (void *)v3,
        [*(id *)(a1 + 40) version],
        id v5 = objc_claimAutoreleasedReturnValue(),
        id v6 = [v2 compare:v5],
        v5,
        v4,
        v6))
  {
    [*(id *)(a1 + 40) setVersion:v2];
    id v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"accessoryTypes"];
    id v8 = [objc_alloc((Class)NSSet) initWithArray:v7];
    [*(id *)(a1 + 40) setSupportedAccessories:v8];

    id v9 = sub_100059878();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = [*(id *)(a1 + 40) version];
      id v11 = [*(id *)(a1 + 40) supportedAccessories];
      *(_DWORD *)buf = 138412546;
      id v30 = v10;
      __int16 v31 = 2112;
      id v32 = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "SupportedAccessoryTypes updated with version = %@ and accessories = %@", buf, 0x16u);
    }
    [*(id *)(a1 + 40) _updateDisk];
    id v12 = objc_alloc_init((Class)NSMutableArray);
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v13 = v7;
    id v14 = [v13 countByEnumeratingWithState:&v24 objects:v28 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v25;
      do
      {
        long long v17 = 0;
        do
        {
          if (*(void *)v25 != v16) {
            objc_enumerationMutation(v13);
          }
          uint64_t v18 = *(void *)(*((void *)&v24 + 1) + 8 * (void)v17);
          long long v19 = [*(id *)(a1 + 40) configurations];
          id v20 = [v19 objectForKeyedSubscript:v18];

          if (!v20) {
            [v12 addObject:v18];
          }
          long long v17 = (char *)v17 + 1;
        }
        while (v15 != v17);
        id v15 = [v13 countByEnumeratingWithState:&v24 objects:v28 count:16];
      }
      while (v15);
    }

    id v21 = sub_100059878();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v30 = v12;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "accessoryTypesNeedConfig %@", buf, 0xCu);
    }

    [*(id *)(a1 + 40) fetchConfigForAccessoryTypes:v12];
    id v22 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001E0C8;
    block[3] = &unk_1002D9378;
    void block[4] = *(void *)(a1 + 40);
    dispatch_async(v22, block);
  }
}

void sub_10001E0C8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) listner];
  [v1 supportedAccessoryTypesUpdated];
}

void sub_10001E280(id *a1)
{
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id obj = a1[4];
  id v1 = [obj countByEnumeratingWithState:&v35 objects:v41 count:16];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = *(void *)v36;
    id v4 = (mach_header_64 *)&_mh_execute_header;
    CFStringRef v5 = @"statusCode";
    CFStringRef v6 = @"200";
    uint64_t v30 = *(void *)v36;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v36 != v3) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v35 + 1) + 8 * (void)v7);
        id v9 = sub_100059878();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v40 = v8;
          _os_log_impl(v4, v9, OS_LOG_TYPE_DEFAULT, "received configuration %@", buf, 0xCu);
        }

        uint64_t v10 = sub_100059878();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          id v11 = [v8 objectForKeyedSubscript:v5];
          *(_DWORD *)buf = 138412290;
          v40 = v11;
          _os_log_impl(v4, v10, OS_LOG_TYPE_DEFAULT, "received statusCode %@", buf, 0xCu);
        }
        id v12 = [v8 objectForKeyedSubscript:v5];
        unsigned int v13 = [v12 isEqualToString:v6];

        if (v13)
        {
          id v14 = [[FMDExtAccessoryConfiguration alloc] initWithConfigurationInfo:v8];
          if (v14)
          {
            CFStringRef v15 = v5;
            CFStringRef v16 = v6;
            long long v17 = v4;
            uint64_t v18 = [a1[5] configurations];
            long long v19 = [(FMDExtAccessoryConfiguration *)v14 accessoryType];
            id v20 = [v18 objectForKeyedSubscript:v19];

            if (!v20
              || ([v20 version],
                  id v21 = objc_claimAutoreleasedReturnValue(),
                  [(FMDExtAccessoryConfiguration *)v14 version],
                  id v22 = objc_claimAutoreleasedReturnValue(),
                  unsigned __int8 v23 = [v21 isEqualToString:v22],
                  v22,
                  v21,
                  (v23 & 1) == 0))
            {
              long long v24 = [a1[5] configurations];
              long long v25 = [(FMDExtAccessoryConfiguration *)v14 accessoryType];
              [v24 setObject:v14 forKeyedSubscript:v25];

              id v26 = a1[6];
              long long v27 = [(FMDExtAccessoryConfiguration *)v14 accessoryType];
              [v26 addObject:v27];
            }
            id v4 = v17;
            CFStringRef v6 = v16;
            CFStringRef v5 = v15;
            uint64_t v3 = v30;
          }
          else
          {
            id v20 = sub_100059878();
            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138412290;
              v40 = v8;
              _os_log_error_impl(v4, v20, OS_LOG_TYPE_ERROR, "Invalid configuration received %@", buf, 0xCu);
            }
          }
        }
        id v7 = (char *)v7 + 1;
      }
      while (v2 != v7);
      id v2 = [obj countByEnumeratingWithState:&v35 objects:v41 count:16];
    }
    while (v2);
  }

  if ([a1[6] count])
  {
    [a1[5] _updateDisk];
    id v28 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10001E680;
    block[3] = &unk_1002D93F0;
    id v29 = a1[6];
    void block[4] = a1[5];
    id v34 = v29;
    dispatch_async(v28, block);
  }
}

void sub_10001E680(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) listner];
  [v2 configurationUpdated:*(void *)(a1 + 40)];
}

void sub_10001E7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001E7D4(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) supportedAccessories];
  if ([v4 containsObject:*(void *)(a1 + 40)])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
  else
  {
    id v2 = [*(id *)(a1 + 32) defaultConfigurations];
    uint64_t v3 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v3 != 0;
  }
}

void sub_10001E9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001E9BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001E9CC(uint64_t a1)
{
}

void sub_10001E9D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) defaultConfigurations];
  uint64_t v3 = (void *)(a1 + 40);
  id v4 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];

  CFStringRef v5 = *(void **)(a1 + 32);
  if (v4)
  {
    id v31 = [v5 defaultConfigurations];
    uint64_t v6 = [v31 objectForKeyedSubscript:*(void *)(a1 + 40)];
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;
  }
  else
  {
    id v9 = [v5 supportedAccessories];
    unsigned int v10 = [v9 containsObject:*v3];

    if (v10)
    {
      id v11 = [*(id *)(a1 + 32) configurations];
      id v12 = [v11 objectForKeyedSubscript:*(void *)(a1 + 40)];

      if (!v12)
      {
        unsigned int v13 = sub_100059878();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_10023BEA8(a1 + 40, v13, v14, v15, v16, v17, v18, v19);
        }
      }
      id v20 = [*(id *)(a1 + 32) configurations];
      uint64_t v21 = [v20 objectForKeyedSubscript:*(void *)(a1 + 40)];
      uint64_t v22 = *(void *)(*(void *)(a1 + 48) + 8);
      unsigned __int8 v23 = *(void **)(v22 + 40);
      *(void *)(v22 + 40) = v21;
    }
    else
    {
      long long v24 = sub_100059878();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_10023BF18((uint64_t)v3, v24, v25, v26, v27, v28, v29, v30);
      }
    }
  }
}

void sub_10001F184(id a1)
{
  qword_10031E780 = objc_alloc_init(FMDAutomationHelperFactory);

  _objc_release_x1();
}

void sub_10001FE14(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_10001FFE4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10001FFF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained terminate];
}

void sub_100020264(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100020288(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setCompletion:*(void *)(a1 + 32)];
}

id sub_1000204B4(uint64_t a1)
{
  id v2 = objc_alloc_init(FMDActingRequestDecorator);
  uint64_t v3 = [(FMDActingRequestDecorator *)v2 standardDeviceContext];

  id v4 = [*(id *)(a1 + 32) commandContext];
  CFStringRef v5 = [v4 lastCompletedIntentDictionary];
  uint64_t v6 = [v5 objectForKeyedSubscript:@"id"];

  [v3 fm_safeSetObject:v6 forKey:@"lastCommandId"];

  return v3;
}

id sub_100020568(uint64_t a1)
{
  id v2 = +[ServerDeviceInfo sharedInstance];
  uint64_t v3 = [v2 deviceInfoForAccount:*(void *)(a1 + 32) accessory:*(void *)(a1 + 40)];

  return v3;
}

void sub_1000206AC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000206C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [*(id *)(a1 + 32) accessoryIdentifier];
  id v4 = [WeakRetained accessory];
  CFStringRef v5 = [v4 accessoryIdentifier];
  if ([v3 isEqual:v5])
  {
    if (!*(unsigned char *)(a1 + 48))
    {

      goto LABEL_11;
    }
    unsigned __int8 v6 = [WeakRetained accessoryIsConnected:*(void *)(a1 + 32)];

    if (v6)
    {
LABEL_11:
      if (([WeakRetained enqueuedQC] & 1) == 0)
      {
        id v8 = sub_100004238();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t v9 = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "AccessoryAction enqueuing QC.", v9, 2u);
        }

        [WeakRetained setEnqueuedQC:1];
        [WeakRetained setAccessory:*(void *)(a1 + 32)];
        [WeakRetained _enqueueQCAction];
        [WeakRetained terminate];
      }
      goto LABEL_9;
    }
  }
  else
  {
  }
  uint64_t v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "AccessoryAction accessory not connected - waiting.", buf, 2u);
  }

LABEL_9:
}

void sub_100020A04(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100020A18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [*(id *)(a1 + 32) accessoryIdentifier];
  uint64_t v3 = [WeakRetained accessory];
  id v4 = [v3 accessoryIdentifier];
  unsigned int v5 = [v2 isEqual:v4];

  if (v5) {
    [WeakRetained terminate];
  }
}

void sub_100020CFC(id a1)
{
  qword_10031E7B8 = (uint64_t)dispatch_queue_create("com.apple.icloud.findmydeviced.accessoryRegisterDigestSerialQueue", 0);

  _objc_release_x1();
}

void sub_100021364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v18 - 224), 8);
  _Block_object_dispose((const void *)(v18 - 176), 8);
  _Block_object_dispose((const void *)(v18 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000213BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000213CC(uint64_t a1)
{
}

void sub_1000213D4(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) includeDeviceState];
  uint64_t v3 = +[ServerDeviceInfo sharedInstance];
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned int v5 = [*(id *)(a1 + 32) accessory];
  if (v2) {
    [v3 completeDeviceInfoForAccount:v4 accessory:v5];
  }
  else {
  unsigned __int8 v6 = [v3 deviceInfoForAccount:v4 accessory:v5];
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), v6);

  uint64_t v7 = [(id)objc_opt_class() volatileKeysToExcludeFromRegisterDigest];
  id v8 = +[FMDDigestSanitizer sanitizeDictionary:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) withExclusionKeys:v7];
  uint64_t v9 = [*(id *)(a1 + 32) digestWithDeviceInfo:v8];
  uint64_t v10 = *(void *)(*(void *)(a1 + 72) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  if (([*(id *)(a1 + 32) force] & 1) == 0)
  {
    if (qword_10031E7A0
      && [(id)qword_10031E7A0 isEqualToData:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)])
    {
      id v12 = sub_100004238();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = objc_opt_class();
        uint64_t v14 = *(void *)(a1 + 32);
        uint64_t v15 = *(void *)(a1 + 56);
        int v27 = 138412802;
        uint64_t v28 = v13;
        __int16 v29 = 2048;
        uint64_t v30 = v14;
        __int16 v31 = 2112;
        uint64_t v32 = v15;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Not sending register with cause %@ because there is already another register with the same registration information in-progress", (uint8_t *)&v27, 0x20u);
      }

      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 0;
    }
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24))
    {
      uint64_t v16 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 48)];
      uint64_t v17 = +[FMPreferencesUtil dataForKey:v16 inDomain:kFMDNotBackedUpPrefDomain];

      uint64_t v18 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 48)];
      uint64_t v19 = +[AccessoryRegisterAction accessoryRegisterDigestForKey:v18];

      if (!v19)
      {
        id v20 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 48)];
        +[AccessoryRegisterAction saveAccessoryRegisterDigest:v17 forKey:v20];
      }
      if (v17
        && [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) isEqualToData:v17])
      {
        uint64_t v21 = sub_100004238();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v22 = objc_opt_class();
          uint64_t v23 = *(void *)(a1 + 32);
          int v27 = 138412546;
          uint64_t v28 = v22;
          __int16 v29 = 2048;
          uint64_t v30 = v23;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) No need to register accessory, digests match.", (uint8_t *)&v27, 0x16u);
        }

        *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 0;
      }
    }
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24))
  {
    objc_storeStrong((id *)&qword_10031E7A0, *(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40));
    long long v24 = sub_100004238();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v25 = objc_opt_class();
      uint64_t v26 = *(void *)(a1 + 32);
      int v27 = 138412546;
      uint64_t v28 = v25;
      __int16 v29 = 2048;
      uint64_t v30 = v26;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Set inProgressAccessoryRegisterDigest to newRegisterDigest", (uint8_t *)&v27, 0x16u);
    }
  }
}

id sub_1000217A8(uint64_t a1)
{
  unsigned int v2 = objc_alloc_init(FMDActingRequestDecorator);
  uint64_t v3 = [(FMDActingRequestDecorator *)v2 registerDeviceContextForAccount:*(void *)(a1 + 32)];

  [v3 fm_safelyMapKey:@"cause" toObject:*(void *)(a1 + 40)];

  return v3;
}

id sub_10002181C(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
}

id sub_10002182C(uint64_t a1)
{
  unsigned int v2 = +[NSMutableDictionary dictionary];
  uint64_t v3 = [*(id *)(a1 + 32) authId];
  [v2 fm_safeSetObject:v3 forKey:@"X-Apple-PrsId"];

  return v2;
}

void sub_10002189C(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v5 = v3;
  if (([v5 willRetry] & 1) == 0)
  {
    unsigned __int8 v6 = [v5 httpResponseError];
    if (v6
      || (uint64_t)[v5 httpResponseStatus] < 200
      || (uint64_t)[v5 httpResponseStatus] > 399)
    {
    }
    else if (([v5 cancelled] & 1) == 0)
    {
      uint64_t v14 = sub_100004238();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v15 = [v5 fm_logID];
        *(_DWORD *)buf = 138412546;
        __int16 v31 = v15;
        __int16 v32 = 2048;
        id v33 = [v5 httpResponseStatus];
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);
      }
      uint64_t v16 = +[AccessoryRegisterAction sharedAccessoryRegisterDigestSerialQueue];
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_100021CA0;
      v26[3] = &unk_1002D9C78;
      uint64_t v17 = v5;
      int v27 = v17;
      id v28 = a1[4];
      id v29 = WeakRetained;
      dispatch_async(v16, v26);

      if ([v17 httpResponseStatus] == (id)200)
      {
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472;
        v22[2] = sub_100021E2C;
        v22[3] = &unk_1002D9C78;
        id v23 = a1[5];
        id v24 = a1[4];
        id v25 = a1[6];
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v22);
      }
      id v8 = v27;
      goto LABEL_12;
    }
    unsigned int v7 = [v5 cancelled];
    id v8 = sub_100004238();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if (v7)
    {
      if (v9)
      {
        uint64_t v10 = [v5 fm_logID];
        *(_DWORD *)buf = 138412290;
        __int16 v31 = v10;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:
      }
    }
    else if (v9)
    {
      uint64_t v10 = [v5 fm_logID];
      id v11 = [v5 httpResponseStatus];
      id v12 = [v5 httpResponseError];
      *(_DWORD *)buf = 138412802;
      __int16 v31 = v10;
      __int16 v32 = 2048;
      id v33 = v11;
      __int16 v34 = 2112;
      long long v35 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }
LABEL_12:

    uint64_t v13 = +[AccessoryRegisterAction sharedAccessoryRegisterDigestSerialQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100021EB0;
    block[3] = &unk_1002D9C78;
    id v19 = v5;
    id v20 = WeakRetained;
    id v21 = v19;
    dispatch_async(v13, block);

    [WeakRetained terminate];
  }
}

void sub_100021CA0(uint64_t a1)
{
  uint64_t v2 = qword_10031E7A0;
  id v3 = [*(id *)(a1 + 32) digestData];

  if ((void *)v2 == v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) digestData];
    id v5 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 40)];
    +[AccessoryRegisterAction saveAccessoryRegisterDigest:v4 forKey:v5];

    unsigned __int8 v6 = [*(id *)(a1 + 32) digestData];
    unsigned int v7 = [*(id *)(a1 + 32) digestKey];
    +[FMPreferencesUtil setData:v6 forKey:v7 inDomain:kFMDNotBackedUpPrefDomain];

    +[FMPreferencesUtil synchronizeDomain:kFMDNotBackedUpPrefDomain];
    id v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = objc_opt_class();
      uint64_t v10 = *(void *)(a1 + 48);
      int v11 = 138412546;
      uint64_t v12 = v9;
      __int16 v13 = 2048;
      uint64_t v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Save newDigest to pref", (uint8_t *)&v11, 0x16u);
    }
  }
}

void sub_100021E2C(void *a1)
{
  id v3 = [[AccessoryAction alloc] initWithAccount:a1[4] accessory:a1[5] requiresConnectivity:0 serverInteractionController:a1[6]];
  uint64_t v1 = +[ActionManager sharedManager];
  id v2 = [v1 enqueueAction:v3];
}

void sub_100021EB0(uint64_t a1)
{
  uint64_t v2 = qword_10031E7A0;
  id v3 = [*(id *)(a1 + 32) digestData];

  if ((void *)v2 == v3)
  {
    uint64_t v4 = (void *)qword_10031E7A0;
    qword_10031E7A0 = 0;

    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = objc_opt_class();
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 48);
      int v10 = 138413058;
      uint64_t v11 = v6;
      __int16 v12 = 2048;
      uint64_t v13 = v7;
      __int16 v14 = 2112;
      uint64_t v15 = v8;
      __int16 v16 = 2048;
      uint64_t v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressAccessoryRegisterDigest to nil", (uint8_t *)&v10, 0x2Au);
    }
  }
}

void sub_1000220E8(uint64_t a1)
{
  uint64_t v2 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 32)];
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    uint64_t v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Trying to delete register context for accessory %@", (uint8_t *)&v5, 0xCu);
  }

  +[FMPreferencesUtil removeKey:v2 inDomain:kFMDNotBackedUpPrefDomain];
  uint64_t v4 = +[AccessoryRegisterAction contextKeyForAccessory:*(void *)(a1 + 32)];
  +[AccessoryRegisterAction saveAccessoryRegisterDigest:0 forKey:v4];
}

uint64_t start()
{
  uint64_t v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "findmydeviced has been launched", v5, 2u);
  }

  uint64_t v2 = +[FMDDaemon sharedInstance];
  [v2 initialize];

  id v3 = +[NSRunLoop mainRunLoop];
  [v3 run];

  return 0;
}

void sub_1000227D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000227F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v5 = [v3 httpResponseError];
  if (v5
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {

    goto LABEL_5;
  }
  if ([v3 cancelled])
  {
LABEL_5:
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        uint64_t v9 = [v3 fm_logID];
        *(_DWORD *)buf = 138412290;
        int v27 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_10:
      }
    }
    else if (v8)
    {
      uint64_t v9 = [v3 fm_logID];
      id v10 = [v3 httpResponseStatus];
      uint64_t v11 = [v3 httpResponseError];
      *(_DWORD *)buf = 138412802;
      int v27 = v9;
      __int16 v28 = 2048;
      id v29 = v10;
      __int16 v30 = 2112;
      __int16 v31 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_10;
    }

    goto LABEL_12;
  }
  uint64_t v13 = [v3 httpResponseHeaders];
  id v25 = [v13 objectForKeyedSubscript:@"Last-Modified"];

  __int16 v14 = [v3 httpResponseHeaders];
  id v24 = [v14 objectForKeyedSubscript:@"etag"];

  id v23 = [FMDStandardAsset alloc];
  uint64_t v15 = [WeakRetained asset];
  __int16 v16 = [v15 fileURL];
  uint64_t v17 = [WeakRetained asset];
  id v18 = [v17 assetType];
  id v19 = [WeakRetained asset];
  id v20 = [v19 url];
  id v21 = [(FMDStandardAsset *)v23 initWithFileURL:v16 lastModified:v25 etag:v24 type:v18 url:v20];

  uint64_t v22 = [v3 fileLocation];
  [WeakRetained _saveAsset:v21 fromLocation:v22];

LABEL_12:
  uint64_t v12 = *(void *)(a1 + 32);
  if (v12) {
    (*(void (**)(void))(v12 + 16))();
  }
}

void sub_100023DD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      uint64_t v9 = [v3 fm_logID];
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      id v10 = "%@: successful with status %ld";
      uint64_t v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        uint64_t v9 = [v3 fm_logID];
        int v16 = 138412290;
        uint64_t v17 = v9;
        id v10 = "%@: Cancelled";
        uint64_t v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      uint64_t v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      __int16 v14 = [v3 httpResponseError];
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_10002415C(id a1)
{
  uint64_t v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023C468(v1);
  }

  id v2 = [[FMIPConfig alloc] initSingleton];
  id v3 = (void *)qword_10031E7C0;
  qword_10031E7C0 = (uint64_t)v2;
}

void sub_1000250F4(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  uint64_t v4 = a3;
  if (v4)
  {
    uint64_t v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10023C5AC((uint64_t)v4, v5);
    }
  }
  unsigned int v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Remote Lock: CDP update result %i", (uint8_t *)v7, 8u);
  }
}

void sub_100025268(id a1, FMDRequest *a2)
{
  id v2 = a2;
  if (![(FMDRequest *)v2 willRetry])
  {
    BOOL v3 = [(FMDRequest *)v2 httpResponseError];
    if (v3
      || [(FMDRequest *)v2 httpResponseStatus] < 200
      || [(FMDRequest *)v2 httpResponseStatus] > 399)
    {
    }
    else if (![(FMDRequest *)v2 cancelled])
    {
      +[FMDPreferencesMgr setNeedsLostModeExitAuth:0];
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification(DarwinNotifyCenter, FMDLostModeExitAuthCompleteNotification, 0, 0, 1u);
      uint64_t v5 = sub_100004238();
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_13;
      }
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int v14 = 138412546;
      uint64_t v15 = v7;
      __int16 v16 = 2048;
      int64_t v17 = [(FMDRequest *)v2 httpResponseStatus];
      BOOL v8 = "%@: successful with status %ld.";
      uint64_t v9 = v5;
      uint32_t v10 = 22;
      goto LABEL_9;
    }
    unsigned int v4 = [(FMDRequest *)v2 cancelled];
    uint64_t v5 = sub_100004238();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = [(FMDRequest *)v2 fm_logID];
        int v14 = 138412290;
        uint64_t v15 = v7;
        BOOL v8 = "%@: Cancelled";
        uint64_t v9 = v5;
        uint32_t v10 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v14, v10);
LABEL_12:
      }
    }
    else if (v6)
    {
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int64_t v11 = [(FMDRequest *)v2 httpResponseStatus];
      uint32_t v12 = [(FMDRequest *)v2 httpResponseError];
      int v14 = 138412802;
      uint64_t v15 = v7;
      __int16 v16 = 2048;
      int64_t v17 = v11;
      __int16 v18 = 2112;
      id v19 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v14, 0x20u);

      goto LABEL_12;
    }
LABEL_13:
  }
}

void sub_1000255F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = v3;
  if (v3 && [v3 count])
  {
    uint64_t v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 134217984;
      id v8 = [v4 count];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Sending %ld tracked locations", (uint8_t *)&v7, 0xCu);
    }

    BOOL v6 = [[FMDLocation alloc] initWithLocation:*(void *)(a1 + 32) eventType:0 positionType:255];
    [*(id *)(a1 + 40) sendTrackedLocations:v4 withCurrentLocation:v6];
  }
  else
  {
    sub_100004238();
    BOOL v6 = (FMDLocation *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v6->super, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, &v6->super, OS_LOG_TYPE_DEFAULT, "No tracked locations available. Not sending anything", (uint8_t *)&v7, 2u);
    }
  }
}

NSDictionary *__cdecl sub_1000258E8(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_100025938(uint64_t a1)
{
  id v2 = +[ServerDeviceInfo sharedInstance];
  id v3 = [*(id *)(a1 + 32) account];
  unsigned int v4 = [v2 deviceInfoForAccount:v3];

  return v4;
}

void sub_1000259B4(id a1, FMDRequest *a2)
{
  id v2 = a2;
  if (![(FMDRequest *)v2 willRetry])
  {
    id v3 = [(FMDRequest *)v2 httpResponseError];
    if (v3
      || [(FMDRequest *)v2 httpResponseStatus] < 200
      || [(FMDRequest *)v2 httpResponseStatus] > 399)
    {
    }
    else if (![(FMDRequest *)v2 cancelled])
    {
      uint64_t v5 = sub_100004238();
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_13;
      }
      int v7 = [(FMDRequest *)v2 fm_logID];
      int v13 = 138412546;
      int v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = [(FMDRequest *)v2 httpResponseStatus];
      id v8 = "%@: successful with status %ld";
      uint64_t v9 = v5;
      uint32_t v10 = 22;
      goto LABEL_9;
    }
    unsigned int v4 = [(FMDRequest *)v2 cancelled];
    uint64_t v5 = sub_100004238();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        int v7 = [(FMDRequest *)v2 fm_logID];
        int v13 = 138412290;
        int v14 = v7;
        id v8 = "%@: Cancelled";
        uint64_t v9 = v5;
        uint32_t v10 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v13, v10);
LABEL_12:
      }
    }
    else if (v6)
    {
      int v7 = [(FMDRequest *)v2 fm_logID];
      int64_t v11 = [(FMDRequest *)v2 httpResponseStatus];
      uint32_t v12 = [(FMDRequest *)v2 httpResponseError];
      int v13 = 138412802;
      int v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = v11;
      __int16 v17 = 2112;
      __int16 v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v13, 0x20u);

      goto LABEL_12;
    }
LABEL_13:
  }
}

void sub_1000261B8(id a1)
{
  qword_10031E7D0 = objc_alloc_init(FMDLocalActivationLockInfoManager);

  _objc_release_x1();
}

void sub_100026318(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];
  id v3 = [v2 retrieveMaskedAppleID];
  [*(id *)(a1 + 32) setMaskedAppleID:v3];

  unsigned int v4 = [*(id *)(a1 + 32) store];
  uint64_t v5 = [v4 retrieveActivationLockStatus];
  [*(id *)(a1 + 32) setActivationLockStatus:v5];

  BOOL v6 = [*(id *)(a1 + 32) store];
  int v7 = [v6 retrieveOfflineFindingStatus];
  [*(id *)(a1 + 32) setOfflineFindingStatus:v7];

  id v8 = [*(id *)(a1 + 32) store];
  uint64_t v9 = [v8 retrieveOfflineFindingInfo];
  [*(id *)(a1 + 32) setOfflineFindingInfo:v9];

  uint32_t v10 = sub_100004238();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    int64_t v11 = [[*(id *)(a1 + 32) fm_logID];
    uint32_t v12 = [*(id *)(a1 + 32) maskedAppleID];
    int v13 = [*(id *)(a1 + 32) activationLockStatus];
    int v14 = [*(id *)(a1 + 32) offlineFindingStatus];
    __int16 v15 = [*(id *)(a1 + 32) offlineFindingInfo];
    if (v15) {
      CFStringRef v16 = @"(not-nil)";
    }
    else {
      CFStringRef v16 = @"(nil)";
    }
    __int16 v17 = [*(id *)(a1 + 32) offlineFindingInfo];
    int v18 = 138413570;
    id v19 = v11;
    __int16 v20 = 2112;
    id v21 = v12;
    __int16 v22 = 2112;
    id v23 = v13;
    __int16 v24 = 2112;
    id v25 = v14;
    __int16 v26 = 2112;
    CFStringRef v27 = v16;
    __int16 v28 = 2048;
    id v29 = [v17 length];
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@ Cached local AL/SP state from persistent store. maskedAppleID %@ AL %@ OfflineFinding %@ offlineFindingInfo %@ datalen %lu", (uint8_t *)&v18, 0x3Eu);
  }
}

void sub_100026614(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [*(id *)(a1 + 32) fm_logID];
    int v10 = 138412802;
    int64_t v11 = v8;
    __int16 v12 = 2112;
    id v13 = v5;
    __int16 v14 = 2112;
    id v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Got BA status - %@ with reason - %@", (uint8_t *)&v10, 0x20u);
  }
  id v9 = [v5 isEqualToString:SPServiceStateEnabled];
  if ((v9 & 1) != 0 || [v5 isEqualToString:SPServiceStateDisabled]) {
    [*(id *)(a1 + 32) updateOfflineFindingStatus:v9];
  }
}

void sub_1000267F0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) activationLockStatus];
  if (!v2
    || (id v3 = (void *)v2,
        [*(id *)(a1 + 32) activationLockStatus],
        unsigned int v4 = objc_claimAutoreleasedReturnValue(),
        unsigned int v5 = [v4 BOOLValue],
        int v6 = *(unsigned __int8 *)(a1 + 40),
        v4,
        v3,
        v6 != v5))
  {
    int v7 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 40)];
    id v8 = [*(id *)(a1 + 32) store];
    [v8 updateActivationLockStatus:v7];

    [*(id *)(a1 + 32) setActivationLockStatus:v7];
    [*(id *)(a1 + 32) _postLocalActivationLockInfoChangedNotification];
    id v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = [*(id *)(a1 + 32) fm_logID];
      int64_t v11 = (void *)v10;
      CFStringRef v12 = @"YES";
      if (!*(unsigned char *)(a1 + 40)) {
        CFStringRef v12 = @"NO";
      }
      int v13 = 138412546;
      uint64_t v14 = v10;
      __int16 v15 = 2112;
      CFStringRef v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ Updating activation lock status with %@", (uint8_t *)&v13, 0x16u);
    }
  }
}

void sub_100026A10(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = +[FMDServiceProvider activeServiceProvider];
    id v3 = (char *)[v2 fmipState];
    int v4 = (unint64_t)(v3 - 4) < 0xFFFFFFFFFFFFFFFELL;
    if ((unint64_t)(v3 - 4) >= 0xFFFFFFFFFFFFFFFELL)
    {
      unsigned int v5 = sub_100004238();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        int v6 = [[*(id *)(a1 + 32) fm_logID];
        int v17 = 138412290;
        uint64_t v18 = (uint64_t)v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ Overriding offlineFindingStatus to NO since FMIP is OFF", (uint8_t *)&v17, 0xCu);
      }
    }
  }
  else
  {
    int v4 = 0;
  }
  uint64_t v7 = [*(id *)(a1 + 32) offlineFindingStatus];
  if (!v7
    || (id v8 = (void *)v7,
        [*(id *)(a1 + 32) offlineFindingStatus],
        id v9 = objc_claimAutoreleasedReturnValue(),
        unsigned int v10 = [v9 BOOLValue],
        v9,
        v8,
        v4 != v10))
  {
    int64_t v11 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 40)];
    CFStringRef v12 = [*(id *)(a1 + 32) store];
    [v12 updateOfflineFindingStatus:v11];

    [*(id *)(a1 + 32) setOfflineFindingStatus:v11];
    [*(id *)(a1 + 32) _postLocalActivationLockInfoChangedNotification];
    int v13 = sub_100004238();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = [[*(id *)(a1 + 32) fm_logID];
      __int16 v15 = (void *)v14;
      CFStringRef v16 = @"YES";
      if (!*(unsigned char *)(a1 + 40)) {
        CFStringRef v16 = @"NO";
      }
      int v17 = 138412546;
      uint64_t v18 = v14;
      __int16 v19 = 2112;
      CFStringRef v20 = v16;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@ Updating offlineFindingStatus with %@", (uint8_t *)&v17, 0x16u);
    }
  }
}

id sub_100026EAC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) store];
  [v2 clearMaskedAppleID];

  [*(id *)(a1 + 32) setMaskedAppleID:0];
  id v3 = *(void **)(a1 + 32);

  return [v3 _postLocalActivationLockInfoChangedNotification];
}

void sub_10002701C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100027034(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100027044(uint64_t a1)
{
}

uint64_t sub_10002704C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) maskedAppleID];

  return _objc_release_x1();
}

void sub_10002717C(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)FMDActivationLockInfo);
  id v3 = [*(id *)(a1 + 32) maskedAppleID];
  [v2 setMaskedAppleID:v3];

  int v4 = [*(id *)(a1 + 32) activationLockStatus];
  [v2 setIsActivationLocked:[v4 BOOLValue]];

  unsigned int v5 = [*(id *)(a1 + 32) offlineFindingStatus];
  [v2 setIsOfflineFindingEnabled:[v5 BOOLValue]];

  int v6 = +[FMDRestrictedRegions sharedInstance];
  [v2 setIsRestrictedSKU:[v6 isRestrictedSKU]];

  [v2 setIsFindMyLPEMEnabled:[*(id *)(a1 + 32) _readIODeviceSupportsFindMy]];
  [*(id *)(a1 + 32) _addLocalizedStrings:v2];
  uint64_t v7 = dispatch_get_global_queue(0, 0);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000272FC;
  v10[3] = &unk_1002D97B0;
  id v8 = *(id *)(a1 + 40);
  id v11 = v2;
  id v12 = v8;
  id v9 = v2;
  dispatch_async(v7, v10);
}

uint64_t sub_1000272FC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_1000273F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];
  [v2 updateOfflineFindingInfo:*(void *)(a1 + 40)];

  [*(id *)(a1 + 32) setOfflineFindingInfo:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) _postLocalActivationLockInfoChangedNotification];
  id v3 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000274C4;
  block[3] = &unk_1002DA130;
  id v5 = *(id *)(a1 + 48);
  dispatch_async(v3, block);
}

uint64_t sub_1000274C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000275B0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _fetchOfflineFindingInfoInternal];
  if (v2)
  {
    id v3 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000277A0;
    block[3] = &unk_1002D97B0;
    id v15 = *(id *)(a1 + 40);
    id v14 = v2;
    dispatch_async(v3, block);

    int v4 = v15;
  }
  else if ([*(id *)(a1 + 32) _isWithinDaemonStartupThreshold])
  {
    dispatch_time_t v5 = dispatch_time(0, 3000000000);
    int v6 = [*(id *)(a1 + 32) storeAccessQueue];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000277B8;
    v11[3] = &unk_1002DA108;
    uint64_t v7 = *(void **)(a1 + 40);
    v11[4] = *(void *)(a1 + 32);
    id v12 = v7;
    dispatch_after(v5, v6, v11);

    int v4 = v12;
  }
  else
  {
    id v8 = dispatch_get_global_queue(0, 0);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1000278B4;
    v9[3] = &unk_1002DA130;
    id v10 = *(id *)(a1 + 40);
    dispatch_async(v8, v9);

    int v4 = v10;
  }
}

uint64_t sub_1000277A0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_1000277B8(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [[*(id *)(a1 + 32) fm_logID];
    int v5 = 138412546;
    int v6 = v3;
    __int16 v7 = 2048;
    uint64_t v8 = 0x4008000000000000;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@ Executing fetchOfflineInfo after delay %f", (uint8_t *)&v5, 0x16u);
  }
  int v4 = [*(id *)(a1 + 32) _fetchOfflineFindingInfoInternal];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1000278B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100027A18(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];
  [v2 clearOfflineFindingInfo];

  [*(id *)(a1 + 32) setOfflineFindingInfo:0];
  [*(id *)(a1 + 32) _postLocalActivationLockInfoChangedNotification];
  id v3 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100027AE8;
  block[3] = &unk_1002DA130;
  id v5 = *(id *)(a1 + 40);
  dispatch_async(v3, block);
}

uint64_t sub_100027AE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100027B90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) store];
  [v2 clearMaskedAppleID];

  [*(id *)(a1 + 32) setMaskedAppleID:0];
  id v3 = [*(id *)(a1 + 32) store];
  [v3 updateActivationLockStatus:&__kCFBooleanFalse];

  [*(id *)(a1 + 32) setActivationLockStatus:0];
  int v4 = [*(id *)(a1 + 32) store];
  [v4 updateOfflineFindingStatus:&__kCFBooleanFalse];

  [*(id *)(a1 + 32) setOfflineFindingStatus:0];
  id v5 = [*(id *)(a1 + 32) store];
  [v5 clearOfflineFindingInfo];

  [*(id *)(a1 + 32) setOfflineFindingInfo:0];
  int v6 = *(void **)(a1 + 32);

  return [v6 _postLocalActivationLockInfoChangedNotification];
}

void sub_10002847C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000284C4(uint64_t a1)
{
  uint64_t result = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  if ((result + 1) >= 2) {
    return IOObjectRelease(result);
  }
  return result;
}

void sub_1000297F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029820(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained completion];
  id v2 = (void *)v1;
  if (v1) {
    (*(void (**)(uint64_t))(v1 + 16))(v1);
  }
}

void sub_10002A104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002A150(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134217984;
    uint64_t v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) Timeout waiting for device to connect.", buf, 0xCu);
  }

  id v5 = [WeakRetained accessory];
  id v6 = [v5 connectionState];

  if (v6 == (id)1)
  {
    NSErrorUserInfoKey v11 = NSLocalizedFailureReasonErrorKey;
    CFStringRef v12 = @"Timeout waiting for in-ear state.";
    __int16 v7 = +[NSDictionary dictionaryWithObjects:&v12 forKeys:&v11 count:1];
    uint64_t v8 = +[NSError errorWithDomain:@"com.apple.icloud.findmydeviced.FMDAccessoryPlaySoundAction" code:1 userInfo:v7];
    [WeakRetained setTimeoutError:v8];

    uint64_t v9 = [WeakRetained commandStatusForInternalAccessoryAudioSafetyStatus:[WeakRetained defaultAudioSafetyStatus]];
  }
  else
  {
    uint64_t v9 = +[NSNumber numberWithInteger:qword_10031CB88];
  }
  id v10 = (void *)v9;
  [WeakRetained notifyCompletionWithStatus:v9];

  [WeakRetained terminate];
}

void sub_10002A410(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10002A424(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained terminated])
  {
    id v3 = sub_100004238();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 134218240;
      uint64_t v75 = v4;
      __int16 v76 = 1024;
      LODWORD(v77) = [WeakRetained terminated];
      id v5 = "AccessoryPlaySoundAction (0x%lX) attempting to execute after beign terminated T%i";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v5, buf, 0x12u);
      goto LABEL_69;
    }
    goto LABEL_69;
  }
  if (![WeakRetained playingSound])
  {
    id v3 = [WeakRetained accessory];
    if (![v3 conformsToProtocol:&OBJC_PROTOCOL___FMDAudioAccessory])
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        [*(id *)(a1 + 32) _executePlaySoundUsingExtensions];
      }
      else
      {
        uint64_t v9 = sub_100004238();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v10 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 134217984;
          uint64_t v75 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) could not find an audio accessory", buf, 0xCu);
        }

        [*(id *)(a1 + 32) cancelTimer];
        NSErrorUserInfoKey v11 = +[NSNumber numberWithInteger:qword_10031CB80];
        [WeakRetained notifyCompletionWithStatus:v11];

        [WeakRetained terminate];
      }
      goto LABEL_69;
    }
    id v3 = v3;
    __int16 v7 = [WeakRetained channels];
    if (![v7 count])
    {
      [WeakRetained cancelTimer];
      CFStringRef v12 = [WeakRetained rampDownDuration];
      int v13 = sub_100004238();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 134218242;
        uint64_t v75 = v14;
        __int16 v76 = 2112;
        v77 = v3;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "PlaySoundAction (0x%lX) Stopping sound for accessory %@", buf, 0x16u);
      }

      id v15 = [WeakRetained accessoryRegistry];
      v70[0] = _NSConcreteStackBlock;
      v70[1] = 3221225472;
      v70[2] = sub_10002B228;
      v70[3] = &unk_1002D9378;
      v70[4] = WeakRetained;
      [v15 updateAccessory:v3 playbackChannels:v7 completion:v70];
      CFStringRef v16 = +[FMDFMIPManager sharedInstance];
      [v12 doubleValue];
      double v18 = v17;
      v66[0] = _NSConcreteStackBlock;
      v66[1] = 3221225472;
      v66[2] = sub_10002B290;
      v66[3] = &unk_1002DA1B8;
      __int16 v19 = v3;
      uint64_t v20 = *(void *)(a1 + 32);
      v67 = v19;
      uint64_t v68 = v20;
      id v69 = WeakRetained;
      [v16 stopPlayingSoundForAccessory:v19 rampDownDuration:v66 completion:v18];

LABEL_21:
      goto LABEL_68;
    }
    if ([v3 connectionState] != (id)1)
    {
      if ([WeakRetained forceConnection])
      {
        id v21 = sub_100004238();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v22 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 134218242;
          uint64_t v75 = v22;
          __int16 v76 = 2112;
          v77 = v3;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) Waiting to play sound 'till accessory is connected : %@", buf, 0x16u);
        }

        id v23 = [WeakRetained bluetoothManager];
        __int16 v24 = [v3 address];
        [v23 connectToDeviceAddress:v24];
      }
      goto LABEL_68;
    }
    if ([WeakRetained bypassInEarCheck]) {
      goto LABEL_12;
    }
    id v25 = +[FMSystemInfo sharedInstance];
    if ([v25 isInternalBuild])
    {
      unsigned __int8 v26 = +[FMPreferencesUtil BOOLForKey:@"DisableInEarCheck" inDomain:kFMDNotBackedUpPrefDomain];

      if (v26)
      {
LABEL_12:
        unsigned int v8 = 1;
LABEL_31:
        CFStringRef v27 = sub_100004238();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v28 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 134218496;
          uint64_t v75 = v28;
          __int16 v76 = 2050;
          v77 = v3;
          __int16 v78 = 2048;
          id v79 = [v3 audioSafetyStatus];
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) audioAccessory<%{public}p>.inEar %lu", buf, 0x20u);
        }

        id v29 = sub_100004238();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v30 = *(void *)(a1 + 32);
          unsigned int v31 = [v3 playingSound];
          *(_DWORD *)buf = 134218496;
          uint64_t v75 = v30;
          __int16 v76 = 2050;
          v77 = v3;
          __int16 v78 = 1024;
          LODWORD(v79) = v31;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) audioAccessory<%{public}p>.playingSound %i", buf, 0x1Cu);
        }

        if (!v8)
        {
          switch((unint64_t)[v3 audioSafetyStatus])
          {
            case 0uLL:
              __int16 v34 = sub_100004238();
              if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v35 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v35;
                _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar Unknown - waiting for update.", buf, 0xCu);
              }

              long long v36 = [WeakRetained inEarTimer];

              if (v36) {
                goto LABEL_68;
              }
              id v37 = objc_alloc((Class)FMDispatchTimer);
              long long v38 = [*(id *)(a1 + 32) inEarDetectionTimeout];
              [v38 doubleValue];
              v71[0] = _NSConcreteStackBlock;
              v71[1] = 3221225472;
              v71[2] = sub_10002B0AC;
              v71[3] = &unk_1002D93F0;
              uint64_t v39 = *(void *)(a1 + 32);
              v71[4] = WeakRetained;
              v71[5] = v39;
              id v40 = [v37 initWithQueue:&_dispatch_main_q timeout:v71 completion:];
              [WeakRetained setInEarTimer:v40];

              id v41 = [WeakRetained inEarTimer];
              [v41 start];

              CFStringRef v12 = sub_100004238();
              if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v42 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v42;
                _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) started pending in ear detection timer (from unknown).", buf, 0xCu);
              }
              goto LABEL_21;
            case 1uLL:
              goto LABEL_39;
            case 2uLL:
              v43 = sub_100004238();
              if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v44 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v44;
                _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar pending - waiting for other bud to report.", buf, 0xCu);
              }

              v45 = [WeakRetained inEarTimer];

              if (!v45)
              {
                id v46 = objc_alloc((Class)FMDispatchTimer);
                __int16 v47 = [*(id *)(a1 + 32) inEarDetectionTimeout];
                [v47 doubleValue];
                double v49 = v48;
                v72[0] = _NSConcreteStackBlock;
                v72[1] = 3221225472;
                v72[2] = sub_10002AFFC;
                v72[3] = &unk_1002D9C78;
                v72[4] = *(void *)(a1 + 32);
                v72[5] = WeakRetained;
                v73 = v3;
                id v50 = [v46 initWithQueue:&_dispatch_main_q timeout:v72 completion:v49];
                [WeakRetained setInEarTimer:v50];

                __int16 v51 = [WeakRetained inEarTimer];
                [v51 start];

                v52 = sub_100004238();
                if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v53 = *(void *)(a1 + 32);
                  *(_DWORD *)buf = 134217984;
                  uint64_t v75 = v53;
                  _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) started pending in ear detection timer (from pending).", buf, 0xCu);
                }
              }
              goto LABEL_68;
            case 3uLL:
              v54 = sub_100004238();
              if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v55 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v55;
                _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found inEar true - waiting for user warning.", buf, 0xCu);
              }

              v56 = &qword_10031CB90;
              goto LABEL_67;
            case 4uLL:
              v57 = sub_100004238();
              if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v58 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v58;
                _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onNeck true - waiting for user warning.", buf, 0xCu);
              }

              v56 = &qword_10031CBA8;
              goto LABEL_67;
            case 5uLL:
              v59 = sub_100004238();
              if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v60 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v60;
                _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onHead true - waiting for user warning.", buf, 0xCu);
              }

              v56 = &qword_10031CBB0;
              goto LABEL_67;
            case 6uLL:
              v61 = sub_100004238();
              if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v62 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v62;
                _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found onTableTop true - waiting for user warning.", buf, 0xCu);
              }

              v56 = &qword_10031CBB8;
              goto LABEL_67;
            case 7uLL:
              v63 = sub_100004238();
              if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
              {
                uint64_t v64 = *(void *)(a1 + 32);
                *(_DWORD *)buf = 134217984;
                uint64_t v75 = v64;
                _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) found carryingCaseClosed true - waiting for user warning.", buf, 0xCu);
              }

              v56 = &qword_10031CBC0;
LABEL_67:
              v65 = +[NSNumber numberWithInteger:*v56];
              [WeakRetained notifyCompletionWithStatus:v65];

              [WeakRetained terminate];
              goto LABEL_68;
            default:
              goto LABEL_68;
          }
        }
        __int16 v32 = sub_100004238();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v33 = *(void *)(a1 + 32);
          *(_DWORD *)buf = 134217984;
          uint64_t v75 = v33;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) ear check disabled.", buf, 0xCu);
        }

LABEL_39:
        [WeakRetained _playSoundNow:v3];
LABEL_68:

        goto LABEL_69;
      }
    }
    else
    {
    }
    unsigned int v8 = [v3 playingSound];
    goto LABEL_31;
  }
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134218240;
    uint64_t v75 = v6;
    __int16 v76 = 1024;
    LODWORD(v77) = [WeakRetained playingSound];
    id v5 = "AccessoryPlaySoundAction (0x%lX) attempting to execute after starting playback P%i";
    goto LABEL_7;
  }
LABEL_69:
}

id sub_10002AFFC(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) done waiting for in-ear, playing sound now.", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 40) _playSoundNow:*(void *)(a1 + 48)];
}

void sub_10002B0AC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) serialQueue];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10002B140;
  v3[3] = &unk_1002D93F0;
  int8x16_t v4 = vextq_s8(*(int8x16_t *)(a1 + 32), *(int8x16_t *)(a1 + 32), 8uLL);
  dispatch_sync(v2, v3);
}

id sub_10002B140(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v7 = 134217984;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "AccessoryPlaySoundAction (0x%lX) done waiting for in-ear. Asking for audio safety warning confirmation.", (uint8_t *)&v7, 0xCu);
  }

  int8x16_t v4 = *(void **)(a1 + 40);
  int v5 = [v4 commandStatusForInternalAccessoryAudioSafetyStatus:[v4 defaultAudioSafetyStatus]];
  [v4 notifyCompletionWithStatus:v5];

  return [*(id *)(a1 + 40) terminate];
}

void sub_10002B228(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = +[NSNumber numberWithInteger:qword_10031CB80];
  [v1 notifyCompletionWithStatus:v2];
}

void sub_10002B290(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int8x16_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023C82C();
    }
  }
  int v5 = [*(id *)(a1 + 40) discovery];
  [v5 stopDiscovery];

  [*(id *)(a1 + 48) terminate];
}

void sub_10002B45C(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_100059910();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_10023C8A8();
    }
  }
}

void sub_10002C414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  _Block_object_dispose((const void *)(v44 - 176), 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a44, 8);
  _Unwind_Resume(a1);
}

void sub_10002C4D0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = +[NSNumber numberWithInteger:qword_10031CB80];
  [v1 notifyCompletionWithStatus:v2];
}

void sub_10002C538(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int8x16_t v4 = sub_100059910();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023C82C();
    }
  }
  [*(id *)(a1 + 40) terminate];
}

void sub_10002C5A8(uint64_t a1, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0)
  {
    int v5 = sub_100059910();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10023CB7C();
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10002C618(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10002C628(uint64_t a1)
{
}

void sub_10002C630(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = sub_100059910();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    v13[0] = 67109634;
    v13[1] = a2;
    __int16 v14 = 2112;
    id v15 = v7;
    __int16 v16 = 2112;
    id v17 = v8;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "safe = %d alertType = %@ error = %@", (uint8_t *)v13, 0x1Cu);
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
  NSErrorUserInfoKey v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v12 = v7;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10002C748(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = sub_100059910();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    int v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "discovery started with error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10002C7F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_100059910();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = +[NSDate date];
    *(_DWORD *)buf = 138412546;
    long long v38 = v5;
    __int16 v39 = 2112;
    unint64_t v40 = (unint64_t)v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "completion called at %@ error = %@", buf, 0x16u);
  }
  if (v3)
  {
    uint64_t v6 = sub_100059910();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10023CBB0();
    }

    id v7 = [*(id *)(a1 + 32) timeoutDate];
    id v8 = +[NSDate date];
    [v7 timeIntervalSinceDate:v8];
    double v10 = v9;

    if ((uint64_t)[*(id *)(a1 + 32) playSoundRetryCounter] > 5 || v10 < 1.0)
    {
      unsigned __int8 v26 = sub_100004238();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        id v29 = *(void **)(a1 + 48);
        id v30 = [*(id *)(a1 + 32) playSoundRetryCounter];
        *(_DWORD *)buf = 138412802;
        long long v38 = v29;
        __int16 v39 = 2048;
        unint64_t v40 = (unint64_t)v10;
        __int16 v41 = 2048;
        id v42 = v30;
        _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "Timed out waiting for accessory[%@]: wait time remaining: %lu for retry count: %lu", buf, 0x20u);
      }

      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      uint64_t v28 = +[NSNumber numberWithInteger:qword_10031CB88];
      [WeakRetained notifyCompletionWithStatus:v28];

      [*(id *)(a1 + 32) terminate];
    }
    else
    {
      dispatch_time_t v11 = dispatch_time(0, 1000000000);
      id v12 = [*(id *)(a1 + 32) serialQueue];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10002CE40;
      block[3] = &unk_1002D9378;
      void block[4] = *(void *)(a1 + 32);
      dispatch_after(v11, v12, block);
    }
  }
  else
  {
    [*(id *)(a1 + 32) setPlayingSound:1];
    [*(id *)(a1 + 32) cancelTimer];
    id v13 = objc_loadWeakRetained((id *)(a1 + 56));
    __int16 v14 = *(void **)(a1 + 40);
    id v15 = [v13 accessory];
    __int16 v16 = [v13 channels];
    v35[0] = _NSConcreteStackBlock;
    v35[1] = 3221225472;
    v35[2] = sub_10002CCD0;
    v35[3] = &unk_1002D93C8;
    objc_copyWeak(&v36, (id *)(a1 + 56));
    [v14 updateAccessory:v15 playbackChannels:v16 completion:v35];

    id v17 = +[NSDate date];
    id v18 = objc_alloc((Class)FMDispatchTimer);
    id v19 = &_dispatch_main_q;
    uint64_t v20 = [v13 duration];
    [v20 doubleValue];
    double v22 = v21;
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472;
    v32[2] = sub_10002CD44;
    v32[3] = &unk_1002DA298;
    objc_copyWeak(&v34, (id *)(a1 + 56));
    v32[4] = *(void *)(a1 + 32);
    id v23 = v17;
    id v33 = v23;
    id v24 = [v18 initWithQueue:&_dispatch_main_q timeout:v32 completion:v22];
    [v13 setTimeoutTimer:v24];

    id v25 = [v13 timeoutTimer];
    [v25 start];

    objc_destroyWeak(&v34);
    objc_destroyWeak(&v36);
  }
}

void sub_10002CC90(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10002CCD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = +[NSNumber numberWithInteger:qword_10031CB80];
  [WeakRetained notifyCompletionWithStatus:v1];
}

void sub_10002CD44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = sub_100059910();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = +[NSDate date];
    [v5 timeIntervalSinceDate:*(void *)(a1 + 40)];
    int v7 = 134218240;
    uint64_t v8 = v4;
    __int16 v9 = 2048;
    uint64_t v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) ending, sound played %f", (uint8_t *)&v7, 0x16u);
  }
  [WeakRetained terminate];
}

id sub_10002CE40(uint64_t a1)
{
  return [*(id *)(a1 + 32) _executePlaySoundUsingExtensions];
}

void sub_10002D864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002D890(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!v3)
  {
    __int16 v16 = [*(id *)(a1 + 40) accessoryRegistry];
    uint64_t v17 = *(void *)(a1 + 32);
    uint64_t v18 = *(void *)(a1 + 48);
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_10002DFB0;
    v36[3] = &unk_1002D93C8;
    objc_copyWeak(&v37, (id *)(a1 + 64));
    [v16 updateAccessory:v17 playbackChannels:v18 completion:v36];
    id v19 = +[NSDate date];
    id v20 = objc_alloc((Class)FMDispatchTimer);
    id v21 = &_dispatch_main_q;
    [*(id *)(a1 + 56) doubleValue];
    double v23 = v22;
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_10002E024;
    v33[3] = &unk_1002DA298;
    objc_copyWeak(&v35, (id *)(a1 + 64));
    v33[4] = *(void *)(a1 + 40);
    id v24 = v19;
    id v34 = v24;
    id v25 = [v20 initWithQueue:&_dispatch_main_q timeout:v33 completion:v23];
    [WeakRetained setTimeoutTimer:v25];

    unsigned __int8 v26 = [WeakRetained timeoutTimer];
    [v26 start];

    objc_destroyWeak(&v35);
    objc_destroyWeak(&v37);

    goto LABEL_14;
  }
  int v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_10023CBE4();
  }

  uint64_t v6 = [v3 domain];
  if (![v6 isEqualToString:kFMDAccessoryPlaySoundErrorDomain])
  {

    goto LABEL_13;
  }
  BOOL v7 = [v3 code] == 0;

  if (!v7)
  {
LABEL_13:
    CFStringRef v27 = +[NSNumber numberWithInteger:qword_10031CB88];
    [WeakRetained notifyCompletionWithStatus:v27];

    [WeakRetained terminate];
    goto LABEL_14;
  }
  uint64_t v8 = [WeakRetained timeoutDate];
  __int16 v9 = +[NSDate date];
  [v8 timeIntervalSinceDate:v9];
  double v11 = v10;

  id v12 = sub_100004238();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v13 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 134218240;
    uint64_t v43 = v13;
    __int16 v44 = 2048;
    unint64_t v45 = (unint64_t)v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) waiting for routable accessory for: %lu", buf, 0x16u);
  }

  if ((uint64_t)[*(id *)(a1 + 40) playSoundRetryCounter] > 5 || v11 < 0.0)
  {
    uint64_t v28 = sub_100004238();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    {
      uint64_t v30 = *(void *)(a1 + 32);
      id v31 = [*(id *)(a1 + 40) playSoundRetryCounter];
      *(_DWORD *)buf = 138412802;
      uint64_t v43 = v30;
      __int16 v44 = 2048;
      unint64_t v45 = (unint64_t)v11;
      __int16 v46 = 2048;
      id v47 = v31;
      _os_log_error_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "Timed out routing for accessory[%@]: wait time remaining: %lu for retry count: %lu", buf, 0x20u);
    }

    id v29 = +[NSNumber numberWithInteger:qword_10031CB88];
    [WeakRetained notifyCompletionWithStatus:v29];

    [*(id *)(a1 + 40) terminate];
  }
  else
  {
    dispatch_time_t v14 = dispatch_time(0, 1000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10002DDAC;
    block[3] = &unk_1002DA2E8;
    int8x16_t v32 = *(int8x16_t *)(a1 + 32);
    id v15 = (id)v32.i64[0];
    int8x16_t v39 = vextq_s8(v32, v32, 8uLL);
    double v41 = v11;
    id v40 = WeakRetained;
    dispatch_after(v14, (dispatch_queue_t)&_dispatch_main_q, block);
  }
LABEL_14:
}

void sub_10002DD6C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10002DDAC(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) playSoundRetryCounter];
    *(_DWORD *)buf = 134217984;
    id v14 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction: RETRY: %lu", buf, 0xCu);
  }

  uint64_t v4 = +[FMDFMIPManager sharedInstance];
  int v5 = *(void **)(a1 + 40);
  double v6 = *(double *)(a1 + 56);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10002DEF4;
  v9[3] = &unk_1002DA1B8;
  id v7 = v5;
  uint64_t v8 = *(void *)(a1 + 48);
  id v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = *(void *)(a1 + 32);
  [v4 waitForRoutableAccessory:v7 timeout:v9 completion:v6];
}

void sub_10002DEF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023CC60();
    }

    int v5 = *(void **)(a1 + 40);
    double v6 = +[NSNumber numberWithInteger:qword_10031CB88];
    [v5 notifyCompletionWithStatus:v6];

    [*(id *)(a1 + 48) terminate];
  }
  else
  {
    [*(id *)(a1 + 40) setPlayingSound:0];
    [*(id *)(a1 + 40) _playSoundNow:*(void *)(a1 + 32)];
  }
}

void sub_10002DFB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = +[NSNumber numberWithInteger:qword_10031CB80];
  [WeakRetained notifyCompletionWithStatus:v1];
}

void sub_10002E024(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    int v5 = +[NSDate date];
    [v5 timeIntervalSinceDate:*(void *)(a1 + 40)];
    int v7 = 134218240;
    uint64_t v8 = v4;
    __int16 v9 = 2048;
    uint64_t v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDAccessoryPlaySoundAction (0x%lX) ending, sound played %f", (uint8_t *)&v7, 0x16u);
  }
  [WeakRetained terminate];
}

void sub_10002E45C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_100004238();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_10023CCDC();
    }
  }
  uint64_t v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Stop sound from panning done!", v5, 2u);
  }
}

id sub_10002E85C(uint64_t a1, void *a2)
{
  return [a2 code];
}

void sub_10002E878(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10002EDF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v6 = [[FMDNanoRegistryAccessory alloc] initWithNRDevice:v3];

  [(FMDNanoRegistryAccessory *)v6 setMigrationPossible:1];
  uint64_t v4 = *(void **)(a1 + 32);
  int v5 = [(FMDNanoRegistryAccessory *)v6 accessoryIdentifier];
  [v4 fm_safeSetObject:v6 forKey:v5];
}

void sub_10002EFC4(uint64_t a1, void *a2)
{
  id v10 = a2;
  if (!*(void *)(a1 + 32)
    || (objc_msgSend(v10, "valueForProperty:"),
        id v3 = objc_claimAutoreleasedReturnValue(),
        unsigned int v4 = [v3 BOOLValue],
        v3,
        int v5 = v10,
        v4))
  {
    uint64_t v6 = [[FMDNanoRegistryAccessory alloc] initWithNRDevice:v10];
    int v7 = *(void **)(a1 + 40);
    uint64_t v8 = [(FMDNanoRegistryAccessory *)v6 accessoryIdentifier];
    uint64_t v9 = [v7 objectForKey:v8];

    if (v9) {
      [(FMDNanoRegistryAccessory *)v6 setMigrationPossible:1];
    }
    [*(id *)(a1 + 48) addObject:v6];

    int v5 = v10;
  }
}

id sub_10002F1A8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = +[NSBundle bundleForClass:objc_opt_class()];
  id v3 = v2;
  if (v2)
  {
    unsigned int v4 = [v2 localizedStringForKey:v1 value:&stru_1002E7428 table:0];
  }
  else
  {
    unsigned int v4 = 0;
  }

  return v4;
}

id sub_10002F240(uint64_t a1)
{
  if (!a1)
  {
    unsigned int v4 = 0;
    goto LABEL_14;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  unsigned int v11 = 0;
  uint64_t v10 = 0;
  int v9 = 0;
  id v1 = +[NSScanner scannerWithString:a1];
  [v1 scanUnsignedLongLong:&v13];
  sub_1000F719C(v13, (uint64_t)&v12, (uint64_t)&v11, (uint64_t)&v10, (uint64_t)&v9);
  if (v2 == -45061)
  {
    int v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "ADIOTPRequest():kADIAccountNotProvisoned", v8, 2u);
    }

    goto LABEL_12;
  }
  int v3 = v2;
  if (v2)
  {
    uint64_t v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10023CD74(v3, v6);
    }

LABEL_12:
    unsigned int v4 = 0;
    goto LABEL_13;
  }
  unsigned int v4 = +[NSData dataWithBytes:v12 length:v11];
  sub_1000E8A6C(v12);
  sub_1000E8A6C(v10);
LABEL_13:

LABEL_14:

  return v4;
}

void sub_10002F574(id *a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if (([a1[4] containsObject:v7] & 1) == 0)
  {
    uint64_t v6 = [a1[6] _digestObject:v5 withExclusionKeys:a1[4]];
    if (v6) {
      [a1[5] setObject:v6 forKey:v7];
    }
  }
}

uint64_t sub_10002F708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [*(id *)(a1 + 48) _digestObject:a2 withExclusionKeys:*(void *)(a1 + 32)];
  if (v3) {
    [*(id *)(a1 + 40) addObject:v3];
  }

  return _objc_release_x1();
}

void sub_10002F7C4(id a1)
{
  id v1 = [[FMDSystemConfig_ios alloc] initSingleton];
  int v2 = (void *)qword_10031E7E0;
  qword_10031E7E0 = (uint64_t)v1;

  uint64_t v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = qword_10031E7E0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#start - inited system config instance %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10002F9C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 96);
  *(void *)(v2 + 96) = 0;

  *(void *)(*(void *)(a1 + 32) + 104) = 1;
}

void sub_10002FC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002FCA0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10002FCB0(uint64_t a1)
{
}

void sub_10002FCB8(double *a1)
{
  uint64_t v2 = *(void **)(*((void *)a1 + 4) + 96);
  if (v2)
  {
    objc_storeStrong((id *)(*(void *)(*((void *)a1 + 5) + 8) + 40), v2);
  }
  else
  {
    uint64_t v3 = objc_opt_new();
    int v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *((void *)a1 + 6);
      *(_DWORD *)buf = 134217984;
      uint64_t v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Fetching BA-UUID with timeout - %f", buf, 0xCu);
    }

    id v6 = [objc_alloc((Class)FMSynchronizer) initWithDescription:@"SP-BA-UUID" andTimeout:a1[6]];
    int v9 = _NSConcreteStackBlock;
    uint64_t v10 = 3221225472;
    unsigned int v11 = sub_10002FE40;
    uint64_t v12 = &unk_1002DA458;
    uint64_t v7 = *((void *)a1 + 5);
    id v13 = v6;
    uint64_t v14 = v7;
    id v8 = v6;
    [v3 getLocalPairingDataWithCompletion:&v9];
    [v8 wait:v9, v10, v11, v12];
    objc_storeStrong((id *)(*((void *)a1 + 4) + 96), *(id *)(*(void *)(*((void *)a1 + 5) + 8) + 40));
  }
}

id sub_10002FE40(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 UUIDString];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = *(void **)(a1 + 32);

  return [v6 signal];
}

void sub_10002FF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10002FF80(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 104);
  if (v2 == 1)
  {
    uint64_t v3 = objc_opt_new();
    uint64_t v4 = [v3 settingsConfiguration];

    id v5 = [objc_alloc((Class)FMSynchronizer) initWithDescription:@"SP-BA-STATUS" andTimeout:5.0];
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472;
    uint64_t v10 = sub_100030094;
    unsigned int v11 = &unk_1002DA4A8;
    uint64_t v6 = *(void *)(a1 + 40);
    id v12 = v5;
    uint64_t v13 = v6;
    id v7 = v5;
    [v4 beginRefreshingServiceStateWithBlock:&v8];
    [v7 wait:v8, v9, v10, v11];
    *(void *)(*(void *)(a1 + 32) + 104) = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  else
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2;
  }
}

void sub_100030094(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 138412546;
    id v10 = v5;
    __int16 v11 = 2112;
    id v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Got BA status - %@ with reason - %@", (uint8_t *)&v9, 0x16u);
  }

  if ([v5 isEqualToString:SPServiceStateEnabled])
  {
    uint64_t v8 = 3;
LABEL_7:
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v8;
    goto LABEL_8;
  }
  if ([v5 isEqualToString:SPServiceStateDisabled])
  {
    uint64_t v8 = 2;
    goto LABEL_7;
  }
LABEL_8:
  [*(id *)(a1 + 32) signal];
}

void sub_100031648(id a1)
{
  id v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023CF98(v1);
  }

  id v2 = [[FMDXPCManager alloc] initSingleton];
  uint64_t v3 = (void *)qword_10031E7F8;
  qword_10031E7F8 = (uint64_t)v2;
}

void sub_10003285C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf, int a12, __int16 a13, __int16 a14, id a15)
{
  if (a2 == 1)
  {
    id v15 = objc_begin_catch(a1);
    uint64_t v16 = sub_100004238();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = objc_opt_class();
      LODWORD(buf) = 138412802;
      *(void *)((char *)&buf + 4) = v17;
      WORD6(buf) = 2048;
      a14 = 2112;
      a15 = v15;
      id v18 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%@ (0x%lX) Received expection when encoding auth : %@", (uint8_t *)&buf, 0x20u);
    }
    objc_end_catch();
    JUMPOUT(0x100032810);
  }
  _Unwind_Resume(a1);
}

id *sub_1000332E0(id *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = a4;
    id v5 = result;
    id v6 = (unsigned __int8 *)(a2 + a3);
    do
    {
      unsigned int v7 = *v6++;
      uint64_t result = (id *)[v5[4] appendFormat:@"%02lx", v7];
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_100033FFC(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_100004238();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Could Not complete command notify : %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

NSDictionary *__cdecl sub_10003441C(id a1)
{
  id v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_10003446C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = +[ServerDeviceInfo sharedInstance];
  int v4 = [*(id *)(a1 + 40) account];
  if (v2) {
    [v3 deviceInfoForAccount:v4 accessory:*(void *)(a1 + 32)];
  }
  else {
  id v5 = [v3 deviceInfoForAccount:v4];
  }

  return v5;
}

void sub_100034508(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    int v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      unsigned int v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      int v9 = [v3 fm_logID];
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      id v10 = "%@: successful with status %ld";
      __int16 v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    unsigned int v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        int v9 = [v3 fm_logID];
        int v16 = 138412290;
        uint64_t v17 = v9;
        id v10 = "%@: Cancelled";
        __int16 v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      int v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      uint64_t v14 = [v3 httpResponseError];
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

uint64_t sub_100034D88(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100034DA0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100034DB8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setCurrentTask:0];
}

void sub_10003516C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    [*(id *)(a1 + 32) handleRatchetError:v6];
  }
  else if (v5)
  {
    unsigned int v7 = [v5 objectForKeyedSubscript:&off_1002F1EB8];
    BOOL v8 = sub_100059CA0();
    int v9 = v8;
    if (v7)
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        id v10 = [*(id *)(a1 + 32) ratchetIdentifier];
        int v16 = 138412290;
        uint64_t v17 = v10;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Ratchet armed %@, proceeding with operation.", (uint8_t *)&v16, 0xCu);
      }
      __int16 v11 = [*(id *)(a1 + 32) currentTask];
      [v11 finishWithNoResult];
    }
    else
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_10023D378(a1);
      }

      __int16 v11 = [*(id *)(a1 + 32) currentTask];
      uint64_t v15 = +[FMDRatchetManager ratchetErrorDeniedWithUnderlyingError:0];
      [v11 finishWithError:v15];
    }
  }
  else
  {
    uint32_t v12 = sub_100059CA0();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_10023D2EC(a1);
    }

    id v13 = [*(id *)(a1 + 32) currentTask];
    uint64_t v14 = +[FMDRatchetManager ratchetErrorDeniedWithUnderlyingError:0];
    [v13 finishWithError:v14];
  }
}

void sub_100035770(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10003589C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2 == 1)
  {
    id v9 = objc_begin_catch(exception_object);
    uint64_t v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(a9) = 138412290;
      *(void *)((char *)&a9 + 4) = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Exception caught in -URLByReplacingHost: -- %@", (uint8_t *)&a9, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x100035850);
  }
  _Unwind_Resume(exception_object);
}

void sub_100035D74(_Unwind_Exception *a1)
{
}

void sub_100035FD8(_Unwind_Exception *a1)
{
}

void sub_100036188(_Unwind_Exception *a1)
{
}

void sub_100036994(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = [[CLLocationFMGeoLocatableAdapter alloc] initWithLocation:v3];

  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100037038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100037058(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100059878();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 httpResponseStatus];
    unsigned int v7 = [v3 httpResponseBody];
    BOOL v8 = [v3 httpResponseHeaders];
    int v23 = 138413058;
    id v24 = v3;
    __int16 v25 = 2048;
    id v26 = v6;
    __int16 v27 = 2112;
    uint64_t v28 = v7;
    __int16 v29 = 2112;
    uint64_t v30 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v23, 0x2Au);
  }
  id v9 = [v3 httpResponseError];
  if (v9
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {

    goto LABEL_7;
  }
  if ([v3 cancelled])
  {
LABEL_7:
    unsigned int v10 = [v3 cancelled];
    __int16 v11 = sub_100059878();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (!v12) {
        goto LABEL_13;
      }
      id v13 = [v3 fm_logID];
      int v23 = 138412290;
      id v24 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v23, 0xCu);
    }
    else
    {
      if (!v12) {
        goto LABEL_13;
      }
      id v13 = [v3 fm_logID];
      id v14 = [v3 httpResponseStatus];
      uint64_t v15 = [v3 httpResponseError];
      int v23 = 138412802;
      id v24 = v13;
      __int16 v25 = 2048;
      id v26 = v14;
      __int16 v27 = 2112;
      uint64_t v28 = v15;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v23, 0x20u);
    }
    goto LABEL_12;
  }
  __int16 v11 = [v3 httpResponseBody];
  uint64_t v17 = sub_100059878();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v18 = [v3 httpResponseBody];
    id v19 = [v18 objectForKeyedSubscript:@"statusCode"];
    int v23 = 138412546;
    id v24 = v19;
    __int16 v25 = 2112;
    id v26 = v3;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Got server response code %@ for request %@", (uint8_t *)&v23, 0x16u);
  }
  __int16 v20 = [v3 httpResponseBody];
  id v21 = [v20 objectForKeyedSubscript:@"statusCode"];
  unsigned int v22 = [v21 isEqualToString:@"200"];

  if (v22)
  {
    id v13 = [WeakRetained registry];
    [v13 updateSupportedAccessoryTypes:v11];
LABEL_12:
  }
LABEL_13:

  uint64_t v16 = *(void *)(a1 + 32);
  if (v16) {
    (*(void (**)(void))(v16 + 16))();
  }
}

void sub_100037580(id a1)
{
  id v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023D528(v1);
  }

  uint64_t v2 = objc_alloc_init(ServerDeviceInfo);
  id v3 = (void *)qword_10031E818;
  qword_10031E818 = (uint64_t)v2;
}

void sub_10003A7D0(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138412290;
    uint64_t v9 = objc_opt_class();
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@ Retrying request now...", (uint8_t *)&v8, 0xCu);
  }

  id v3 = +[NSDate date];
  [*(id *)(a1 + 32) setLastRetryTime:v3];

  int v4 = *(void **)(a1 + 32);
  id v5 = [v4 nextRetryType];
  [v4 _incrementRetryCountForType:v5];

  uint64_t v6 = [*(id *)(a1 + 32) retryAction];
  unsigned int v7 = (void *)v6;
  if (v6) {
    (*(void (**)(uint64_t))(v6 + 16))(v6);
  }
}

void sub_10003BAE0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void sub_10003BD54(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10003BD7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained synchronizer];
  [v1 signal];
}

void sub_10003C534(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v7 = v6;
  if (v6)
  {
    int v8 = *(void **)(a1 + 32);
    CFStringRef v12 = @"status";
    uint64_t v9 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v6 code]);
    id v13 = v9;
    unsigned int v10 = +[NSDictionary dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    [v8 didHandleCommandWithAckData:v10];
  }
  else
  {
    if (v5) {
      __int16 v11 = v5;
    }
    else {
      __int16 v11 = &off_1002F3218;
    }
    [*(id *)(a1 + 32) didHandleCommandWithAckData:v11];
  }
}

void sub_10003C644(id a1, BOOL a2)
{
  if (a2)
  {
    id v2 = +[FMDStartupRegisterManager sharedInstance];
    [v2 eventDidOccur:10];
  }
}

void sub_10003CB30(id a1, BOOL a2)
{
  if (a2)
  {
    id v2 = +[FMDStartupRegisterManager sharedInstance];
    [v2 eventDidOccur:10];
  }
}

void sub_10003CF64(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    int v4 = *(void **)(a1 + 32);
    id v5 = [*(id *)(a1 + 40) dictionaryForError:v6];
    [v4 addObject:v5];
  }
}

void sub_10003DBBC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10003DBD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _logEvent:*(void *)(a1 + 32)];
}

void sub_10003DF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003DF94(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003DFA4(uint64_t a1)
{
}

void sub_10003DFAC(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v15 = a2;
  unsigned int v7 = [v15 groupValue];
  [v7 doubleValue];
  double v9 = v8;

  unsigned int v10 = [*(id *)(a1 + 32) precision];
  [v10 doubleValue];
  double v12 = v11;

  double v13 = *(double *)(a1 + 48) - v9;
  if (v13 >= 0.0) {
    double v14 = *(double *)(a1 + 48) - v9;
  }
  else {
    double v14 = -v13;
  }
  if (v14 <= v12) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  *a4 = v14 <= v12;
}

void sub_10003E250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10003E268(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) logs];
  id v2 = [v6 copy];
  uint64_t v3 = [v2 allValues];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10003E56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10003E588(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (*(void *)(a1 + 32))
  {
    [WeakRetained setLogs:];
  }
  else
  {
    uint64_t v4 = +[NSMutableDictionary dictionary];
    [v3 setLogs:v4];
  }
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 logs];
    id v7 = [v6 count];
    double v8 = [v3 cachedLogFileURL];
    int v9 = 134218242;
    id v10 = v7;
    __int16 v11 = 2112;
    double v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Found existing logs %ld %@", (uint8_t *)&v9, 0x16u);
  }
}

void sub_10003E7C0(id a1)
{
  qword_10031E828 = objc_alloc_init(FMDNVRAMUtil);

  _objc_release_x1();
}

void sub_1000400E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    double v8 = [[*(id *)(a1 + 32) fm_logID];
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    id v24 = v8;
    __int16 v25 = 2112;
    uint64_t v26 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Future completed for command %@", buf, 0x16u);
  }
  if (v6)
  {
    id v10 = *(void **)(a1 + 32);
    CFStringRef v21 = @"status";
    __int16 v11 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v6 code]);
    unsigned int v22 = v11;
    double v12 = +[NSDictionary dictionaryWithObjects:&v22 forKeys:&v21 count:1];
    [v10 didHandleCommandWithAckData:v12];

    [*(id *)(a1 + 48) removeFutureForCommandId:*(void *)(a1 + 40)];
  }
  else
  {
    double v13 = *(void **)(a1 + 32);
    if (v5)
    {
      [*(id *)(a1 + 32) didHandleCommandWithAckData:v5];
    }
    else
    {
      double v14 = +[NSNumber numberWithInteger:qword_10031CB80, @"status"];
      __int16 v20 = v14;
      id v15 = +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
      [v13 didHandleCommandWithAckData:v15];
    }
    uint64_t v16 = sub_100004238();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void **)(a1 + 56);
      *(_DWORD *)buf = 138412290;
      id v24 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "FMDCommandHandlerMessage marking command complete %@", buf, 0xCu);
    }

    __int16 v18 = [*(id *)(a1 + 64) commandContext];
    [v18 setActionCompleted:*(void *)(a1 + 56)];
  }
}

id sub_10004033C(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 32)];
}

id sub_1000403F4(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 32)];
}

id sub_1000404AC(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 32)];
}

id sub_100040564(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 32)];
}

NSDictionary *__cdecl sub_100040AB0(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_100040B00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = +[ServerDeviceInfo sharedInstance];
  uint64_t v4 = [*(id *)(a1 + 40) account];
  if (v2) {
    [v3 deviceInfoForAccount:v4 accessory:*(void *)(a1 + 32)];
  }
  else {
  int v5 = [v3 deviceInfoForAccount:v4];
  }

  return v5;
}

void sub_100040B9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      id v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      uint64_t v9 = [v3 fm_logID];
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      id v10 = "%@: successful with status %ld";
      __int16 v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    id v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        uint64_t v9 = [v3 fm_logID];
        int v16 = 138412290;
        uint64_t v17 = v9;
        id v10 = "%@: Cancelled";
        __int16 v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      uint64_t v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      double v14 = [v3 httpResponseError];
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      CFStringRef v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_10004181C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 willRetry]) {
    goto LABEL_55;
  }
  uint64_t v4 = [v3 httpResponseError];
  if (v4
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {

    goto LABEL_6;
  }
  if (([v3 cancelled] & 1) == 0)
  {
    int v16 = sub_100004238();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = [v3 fm_logID];
      *(_DWORD *)buf = 138412546;
      v56 = v17;
      __int16 v57 = 2048;
      id v58 = [v3 httpResponseStatus];
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);
    }
    uint64_t v9 = [v3 httpResponseBody];
    id v18 = [v9 count];
    id v19 = sub_100004238();
    id v10 = v19;
    if (!v18)
    {
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR)) {
        sub_10023DD8C();
      }
      goto LABEL_51;
    }
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
      sub_10023DFA0((uint64_t)v9, v10);
    }

    id v10 = [v9 objectForKeyedSubscript:@"message1"];
    __int16 v20 = +[NSNull null];
    id v21 = 0;
    if (([v10 isEqual:v20] & 1) == 0 && v10) {
      id v21 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v10 options:1];
    }

    unsigned int v22 = [v9 objectForKeyedSubscript:@"message2"];
    int v23 = +[NSNull null];
    if (([v22 isEqual:v23] & 1) != 0 || !v22)
    {

      char v26 = 0;
      id v24 = 0;
      char v25 = v21 != 0;
    }
    else
    {
      id v24 = [objc_alloc((Class)NSData) initWithBase64EncodedString:v22 options:1];

      char v25 = v21 != 0;
      char v26 = v24 != 0;
      if (v21 && v24)
      {
        __int16 v27 = sub_100004238();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG)) {
          sub_10023DF6C();
        }

        uint64_t v28 = sub_100004238();
        if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG)) {
          sub_10023DEEC(a1);
        }

        id v48 = [*(id *)(a1 + 32) pscSessionRef];
        id v29 = v21;
        id v30 = [v29 bytes];
        LODWORD(v29) = [v29 length];
        id v24 = v24;
        uint64_t v31 = sub_1000FC3E0((uint64_t)v48, (uint64_t)v30, (int)v29, (uint64_t)[v24 bytes], (int)[v24 length]);
        if (v31)
        {
          uint64_t v32 = v31;
          id v33 = sub_100004238();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_FAULT)) {
            sub_10023DE74(v32, v33);
          }

          id v34 = [*(id *)(a1 + 32) pscError];
          if (v34)
          {
            [*(id *)(a1 + 32) setPscError:v34];
          }
          else
          {
            CFStringRef v53 = @"kFMDUnderlyingErrorCodeKey";
            id v50 = +[NSNumber numberWithInt:v32];
            v54 = v50;
            __int16 v46 = +[NSDictionary dictionaryWithObjects:&v54 forKeys:&v53 count:1];
            id v47 = +[NSError errorWithDomain:@"FMDAbsintheV3SigningSessionErrorDomain" code:2 userInfo:v46];
            [*(id *)(a1 + 32) setPscError:v47];
          }
          [*(id *)(a1 + 32) _destroySession];
        }
LABEL_50:

        goto LABEL_51;
      }
    }
    long long v38 = sub_100004238();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR)) {
      sub_10023DDCC(v25, v26, v38);
    }

    int8x16_t v39 = [*(id *)(a1 + 32) pscError];
    if (v39)
    {
      [*(id *)(a1 + 32) setPscError:v39];
    }
    else
    {
      CFStringRef v51 = @"kFMDUnderlyingErrorCodeKey";
      id v40 = +[NSNumber numberWithInteger:(v21 == 0) | (2 * (v24 == 0))];
      v52 = v40;
      +[NSDictionary dictionaryWithObjects:&v52 forKeys:&v51 count:1];
      id v49 = v24;
      id v41 = v21;
      v43 = id v42 = v22;
      __int16 v44 = +[NSError errorWithDomain:@"FMDAbsintheV3SigningSessionErrorDomain" code:7 userInfo:v43];
      [*(id *)(a1 + 32) setPscError:v44];

      unsigned int v22 = v42;
      id v21 = v41;
      id v24 = v49;
    }
    goto LABEL_50;
  }
LABEL_6:
  unsigned int v5 = [v3 cancelled];
  unsigned int v6 = sub_100004238();
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v8 = [v3 fm_logID];
      *(_DWORD *)buf = 138412290;
      v56 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    uint64_t v9 = [*(id *)(a1 + 32) pscError];
    if (!v9)
    {
      id v10 = +[NSError errorWithDomain:@"FMDAbsintheV3SigningSessionErrorDomain" code:6 userInfo:0];
      [*(id *)(a1 + 32) setPscError:v10];
LABEL_51:

      goto LABEL_52;
    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10023DCB0(v3, v7);
    }

    __int16 v11 = [v3 httpResponseError];

    uint64_t v12 = [*(id *)(a1 + 32) pscError];
    uint64_t v9 = (void *)v12;
    if (v11)
    {
      if (!v12)
      {
        CFStringRef v61 = @"kFMDUnderlyingErrorCodeKey";
        id v10 = [v3 httpResponseError];
        id v13 = +[NSNumber numberWithInteger:[v10 code]];
        uint64_t v62 = v13;
        double v14 = +[NSDictionary dictionaryWithObjects:&v62 forKeys:&v61 count:1];
        uint64_t v15 = +[NSError errorWithDomain:@"FMDAbsintheV3SigningSessionErrorDomain" code:4 userInfo:v14];
        [*(id *)(a1 + 32) setPscError:v15];

        goto LABEL_51;
      }
    }
    else if (!v12)
    {
      CFStringRef v59 = @"kFMDUnderlyingErrorCodeKey";
      id v35 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [v3 httpResponseStatus]);
      uint64_t v60 = v35;
      id v36 = +[NSDictionary dictionaryWithObjects:&v60 forKeys:&v59 count:1];
      id v37 = +[NSError errorWithDomain:@"FMDAbsintheV3SigningSessionErrorDomain" code:5 userInfo:v36];
      [*(id *)(a1 + 32) setPscError:v37];

      goto LABEL_52;
    }
  }
  [*(id *)(a1 + 32) setPscError:v9];
LABEL_52:

  unint64_t v45 = sub_100004238();
  if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG)) {
    sub_10023DC7C();
  }

  [*(id *)(a1 + 40) signal];
LABEL_55:
}

void sub_100042454(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_100042470(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_100042540(id a1)
{
  uint64_t v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023E0C4();
  }

  id v2 = [[FMDAppleAccountManager alloc] initSingleton];
  id v3 = (void *)qword_10031E838;
  qword_10031E838 = (uint64_t)v2;
}

void sub_100042EC8(uint64_t a1, unint64_t a2, void *a3)
{
  unsigned int v5 = a3;
  if (a2 > 2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (uint64_t)*(&off_1002DAF10 + a2);
  }
  id v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v8 = [*(id *)(a1 + 32) aa_personID];
    CFStringRef v9 = @" Error: ";
    int v12 = 138413058;
    id v13 = v8;
    CFStringRef v10 = &stru_1002E7428;
    __int16 v14 = 2112;
    if (!v5) {
      CFStringRef v9 = &stru_1002E7428;
    }
    uint64_t v15 = v6;
    if (v5) {
      CFStringRef v10 = v5;
    }
    __int16 v16 = 2112;
    CFStringRef v17 = v9;
    __int16 v18 = 2112;
    CFStringRef v19 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "forceUserAuth (renewCredentials) of account %@ completed with status %@.%@%@", (uint8_t *)&v12, 0x2Au);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  if (v11) {
    (*(void (**)(uint64_t, BOOL))(v11 + 16))(v11, a2 != 0);
  }
}

void sub_100043408(uint64_t a1, unint64_t a2, void *a3)
{
  unsigned int v5 = a3;
  if (a2 > 2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = (uint64_t)*(&off_1002DAF10 + a2);
  }
  id v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    CFStringRef v9 = @" Error: ";
    int v11 = 138413058;
    if (!v5) {
      CFStringRef v9 = &stru_1002E7428;
    }
    uint64_t v12 = v8;
    if (v5) {
      CFStringRef v10 = v5;
    }
    else {
      CFStringRef v10 = &stru_1002E7428;
    }
    __int16 v13 = 2112;
    uint64_t v14 = v6;
    __int16 v15 = 2112;
    CFStringRef v16 = v9;
    __int16 v17 = 2112;
    CFStringRef v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Renew account credentials for account %@ - status %@.%@%@", (uint8_t *)&v11, 0x2Au);
  }
}

void sub_10004360C(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [*(id *)(a1 + 32) aa_personID];
      int v8 = 138412546;
      CFStringRef v9 = v7;
      __int16 v10 = 2112;
      id v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Account %@ failed to save kAccountDataclassDeviceLocator: %@", (uint8_t *)&v8, 0x16u);
    }
  }
}

void sub_1000442B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      id v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      CFStringRef v9 = [v3 fm_logID];
      int v16 = 138412546;
      __int16 v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      __int16 v10 = "%@: successful with status %ld";
      id v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    id v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        CFStringRef v9 = [v3 fm_logID];
        int v16 = 138412290;
        __int16 v17 = v9;
        __int16 v10 = "%@: Cancelled";
        id v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      CFStringRef v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      uint64_t v14 = [v3 httpResponseError];
      int v16 = 138412802;
      __int16 v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

uint64_t sub_100044504(const __CFString *a1, const void *a2)
{
  if (a1 && a2)
  {
    io_registry_entry_t v4 = sub_10004470C();
    if (v4)
    {
      io_object_t v5 = v4;
      uint64_t v6 = IORegistryEntrySetCFProperty(v4, a1, a2);
      id v7 = sub_100004238();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        v11[0] = 67109120;
        v11[1] = v6;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "IORegistryEntrySetCFProperty returned:%d", (uint8_t *)v11, 8u);
      }
      IOObjectRelease(v5);
    }
    else
    {
      CFStringRef v9 = sub_100004238();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_10023E2C8();
      }
      return 0;
    }
  }
  else
  {
    BOOL v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10023E294();
    }
    return 4;
  }
  return v6;
}

uint64_t sub_10004462C(const __CFString *a1, CFDataRef *a2)
{
  if (a1 && a2)
  {
    io_registry_entry_t v4 = sub_10004470C();
    if (v4)
    {
      io_object_t v5 = v4;
      CFDataRef CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty(v4, a1, kCFAllocatorDefault, 0);
      if (CFProperty)
      {
        CFDataRef v7 = CFProperty;
        CFTypeID v8 = CFGetTypeID(CFProperty);
        if (v8 == CFDataGetTypeID()) {
          *a2 = CFDataCreateCopy(kCFAllocatorDefault, v7);
        }
        CFRelease(v7);
        uint64_t v9 = 0;
      }
      else
      {
        uint64_t v9 = 4294967294;
      }
      IOObjectRelease(v5);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __int16 v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_10023E2FC();
    }
    return 4;
  }
  return v9;
}

uint64_t sub_10004470C()
{
  mach_port_t mainPort = 0;
  if (IOMasterPort(bootstrap_port, &mainPort)) {
    return 0;
  }
  else {
    return IORegistryEntryFromPath(mainPort, "IODeviceTree:/options");
  }
}

void sub_100044E28(id a1)
{
  qword_10031E848 = objc_alloc_init(FMDEventLogger);

  _objc_release_x1();
}

void sub_10004504C(id a1, FMDEventLoggerFacility *a2, unint64_t a3, BOOL *a4)
{
}

void sub_100045110(uint64_t a1, void *a2)
{
  id v3 = a2;
  io_registry_entry_t v4 = [*(id *)(a1 + 32) facilitiesDictionary];
  io_object_t v5 = [v4 objectForKey:v3];

  uint64_t v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Logging event to facility %@", (uint8_t *)&v7, 0xCu);
  }

  [v5 logEvent:*(void *)(a1 + 40)];
}

void sub_1000459B4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  id v11 = [FMDNanoSupportProtoNeedSignature alloc];
  uint32_t v12 = [v10 data];

  id v13 = [(FMDNanoSupportProtoNeedSignature *)v11 initWithData:v12];
  uint64_t v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = [(FMDNanoSupportProtoNeedSignature *)v13 udid];
    int v16 = [(FMDNanoSupportProtoNeedSignature *)v13 serialNumber];
    __int16 v17 = [(FMDNanoSupportProtoNeedSignature *)v13 productType];
    *(_DWORD *)buf = 138413058;
    id v24 = v8;
    __int16 v25 = 2112;
    char v26 = v15;
    __int16 v27 = 2112;
    uint64_t v28 = v16;
    __int16 v29 = 2112;
    id v30 = v17;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign some data %@,%@,%@. Sending back an error as it is unsupported.", buf, 0x2Au);
  }
  __int16 v18 = objc_alloc_init(FMDNanoSupportProtoSignedData);
  [(FMDNanoSupportProtoSignedData *)v18 setErrorOccurred:1];
  id v19 = objc_alloc((Class)IDSProtobuf);
  __int16 v20 = [(FMDNanoSupportProtoSignedData *)v18 data];
  id v21 = [v19 initWithProtobufData:v20 type:2 isResponse:1];

  unsigned int v22 = [*(id *)(a1 + 32) idsManager];
  [v22 sendMessageWithProtobuf:v21 inResponseToRequest:v8 withPriority:0 timeout:1 bypassingDuet:v9 deviceID:0 requestAcceptedHandler:0.0 responseHandler:0];
}

void sub_100045BC4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  id v11 = [FMDNanoSupportProtoNeedSignatureV3 alloc];
  uint32_t v12 = [v10 data];

  id v13 = [(FMDNanoSupportProtoNeedSignatureV3 *)v11 initWithData:v12];
  uint64_t v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = [(FMDNanoSupportProtoNeedSignatureV3 *)v13 requestJsonData];
    *(_DWORD *)buf = 138412546;
    id v22 = v8;
    __int16 v23 = 2048;
    id v24 = [v15 length];
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu. Sending back an error as it is unsupported.", buf, 0x16u);
  }
  int v16 = objc_alloc_init(FMDNanoSupportProtoSignedDataV3);
  [(FMDNanoSupportProtoSignedDataV3 *)v16 setErrorOccurred:1];
  id v17 = objc_alloc((Class)IDSProtobuf);
  __int16 v18 = [(FMDNanoSupportProtoSignedDataV3 *)v16 data];
  id v19 = [v17 initWithProtobufData:v18 type:4 isResponse:1];

  __int16 v20 = [*(id *)(a1 + 32) idsManager];
  [v20 sendMessageWithProtobuf:v19 inResponseToRequest:v8 withPriority:0 timeout:1 bypassingDuet:v9 deviceID:0 requestAcceptedHandler:0.0 responseHandler:0];
}

void sub_100045DA0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  id v11 = [FMDNanoSupportProtoNeedSignatureV4 alloc];
  uint32_t v12 = [v10 data];

  id v13 = [(FMDNanoSupportProtoNeedSignatureV4 *)v11 initWithData:v12];
  uint64_t v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = [(FMDNanoSupportProtoNeedSignatureV4 *)v13 requestJsonData];
    *(_DWORD *)buf = 138412546;
    id v22 = v8;
    __int16 v23 = 2048;
    id v24 = [v15 length];
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu. Sending back an error as it is unsupported.", buf, 0x16u);
  }
  int v16 = objc_alloc_init(FMDNanoSupportProtoSignedDataV4);
  [(FMDNanoSupportProtoSignedDataV4 *)v16 setErrorOccurred:1];
  id v17 = objc_alloc((Class)IDSProtobuf);
  __int16 v18 = [(FMDNanoSupportProtoSignedDataV4 *)v16 data];
  id v19 = [v17 initWithProtobufData:v18 type:8 isResponse:1];

  __int16 v20 = [*(id *)(a1 + 32) idsManager];
  [v20 sendMessageWithProtobuf:v19 inResponseToRequest:v8 withPriority:0 timeout:1 bypassingDuet:v9 deviceID:0 requestAcceptedHandler:0.0 responseHandler:0];
}

void sub_100045F7C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8 = a4;
  id v9 = a5;
  id v10 = a3;
  id v11 = [FMDNanoSupportProtoNeedSignatureV5 alloc];
  uint32_t v12 = [v10 data];

  id v13 = [(FMDNanoSupportProtoNeedSignatureV5 *)v11 initWithData:v12];
  uint64_t v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v15 = [(FMDNanoSupportProtoNeedSignatureV5 *)v13 requestJsonData];
    *(_DWORD *)buf = 138412546;
    id v45 = v8;
    __int16 v46 = 2048;
    id v47 = [v15 length];
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Received request %@ to sign data of length %lu", buf, 0x16u);
  }
  int v16 = [(FMDNanoSupportProtoNeedSignatureV5 *)v13 requestJsonData];
  id v43 = 0;
  id v17 = +[NSJSONSerialization JSONObjectWithData:v16 options:0 error:&v43];
  id v18 = v43;

  id v19 = [(FMDNanoSupportProtoNeedSignatureV5 *)v13 activationLockRequestUUIDString];
  if (v19) {
    id v41 = [objc_alloc((Class)NSUUID) initWithUUIDString:v19];
  }
  else {
    id v41 = 0;
  }
  uint64_t v20 = a1;
  id v42 = v17;
  if (!v18)
  {
    id v22 = [v17 objectForKeyedSubscript:@"dsid"];
    __int16 v27 = +[NSNull null];
    unsigned int v28 = [(FMDNanoSupportProtoSignedDataV5 *)v22 isEqual:v27];

    if (v28)
    {
      __int16 v29 = sub_100004238();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
        sub_10023E424(v29);
      }
    }
    id v30 = sub_100004238();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Fetching FMIP account...", buf, 2u);
    }

    uint64_t v31 = +[FMDServiceProvider activeServiceProvider];
    id v25 = [v31 account];

    id v40 = v9;
    if (v25)
    {
      uint64_t v32 = [v25 dsid];
      unsigned __int8 v33 = [(FMDNanoSupportProtoSignedDataV5 *)v22 isEqualToString:v32];

      id v34 = sub_100004238();
      id v35 = v34;
      if (v33)
      {
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Proceeding with signing the requested data...", buf, 2u);
        }

        char v26 = [*(id *)(v20 + 32) _v5SignedResponseForRequestBody:v42 activationLockRequestUUID:v41];
        goto LABEL_26;
      }
      if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
        sub_10023E374(v25, (uint64_t)v22, v35);
      }
    }
    else
    {
      id v35 = sub_100004238();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR)) {
        sub_10023E330(v35);
      }
    }

    char v26 = objc_alloc_init(FMDNanoSupportProtoSignedDataV5);
    [(FMDNanoSupportProtoSignedDataV5 *)v26 setErrorOccurred:1];
LABEL_26:
    id v36 = objc_alloc((Class)IDSProtobuf);
    id v37 = [(FMDNanoSupportProtoSignedDataV5 *)v26 data];
    id v38 = [v36 initWithProtobufData:v37 type:10 isResponse:1];

    int8x16_t v39 = [*(id *)(v20 + 32) idsManager];
    id v9 = v40;
    [v39 sendMessageWithProtobuf:v38 inResponseToRequest:v8 withPriority:0 timeout:1 bypassingDuet:v40 deviceID:0 requestAcceptedHandler:0.0 responseHandler:0];

    goto LABEL_27;
  }
  id v21 = sub_100004238();
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
    sub_10023E468((uint64_t)v18, v21);
  }

  id v22 = objc_alloc_init(FMDNanoSupportProtoSignedDataV5);
  [(FMDNanoSupportProtoSignedDataV5 *)v22 setErrorOccurred:1];
  id v23 = objc_alloc((Class)IDSProtobuf);
  id v24 = [(FMDNanoSupportProtoSignedDataV5 *)v22 data];
  id v25 = [v23 initWithProtobufData:v24 type:10 isResponse:1];

  char v26 = [*(id *)(v20 + 32) idsManager];
  [(FMDNanoSupportProtoSignedDataV5 *)v26 sendMessageWithProtobuf:v25 inResponseToRequest:v8 withPriority:0 timeout:1 bypassingDuet:v9 deviceID:0 requestAcceptedHandler:0.0 responseHandler:0];
LABEL_27:
}

void sub_10004646C(id a1, FMNanoIDSManager *a2, IDSProtobuf *a3, NSString *a4, NSString *a5)
{
  uint64_t v6 = a4;
  int v7 = a5;
  id v8 = sub_100004238();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Received request %@ to exit lost mode for watch.", buf, 0xCu);
  }

  id v9 = +[FMDFMIPManager sharedInstance];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  _DWORD v11[2] = sub_1000465B0;
  v11[3] = &unk_1002D9768;
  uint32_t v12 = v6;
  id v10 = v6;
  [v9 initiateLostModeExitAuthForIDSDeviceID:v7 withCompletion:v11];
}

void sub_1000465B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    io_registry_entry_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023E4E0(a1, (uint64_t)v3, v4);
    }
  }
}

void sub_100046F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100046FBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100046FCC(uint64_t a1)
{
}

void sub_100046FD4(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  uint64_t v6 = v5;
  if (v5)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = v5;
    id v9 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }
  else
  {
    uint64_t v10 = [v15 signature];
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    uint32_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    uint64_t v13 = [v15 attestation];
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
    id v9 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
  }

  [*(id *)(a1 + 32) signal];
}

NSDictionary *__cdecl sub_1000475E8(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  id v2 = +[NSDictionary dictionaryWithContentsOfFile:@"/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.plist"];
  if (v2) {
    [v1 addEntriesFromDictionary:v2];
  }
  id v3 = +[NSDictionary dictionaryWithContentsOfFile:@"/var/mobile/Library/Preferences/com.apple.icloud.findmydeviced.FMIPAccounts.notbackedup.plist"];
  if (v3) {
    [v1 addEntriesFromDictionary:v3];
  }

  return (NSDictionary *)v1;
}

void sub_1000491A4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10004A0FC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v17 = _NSConcreteStackBlock;
  uint64_t v18 = 3221225472;
  id v19 = sub_10004A248;
  uint64_t v20 = &unk_1002DB128;
  id v10 = *(id *)(a1 + 48);
  id v21 = v8;
  id v22 = v7;
  id v23 = v9;
  id v24 = v10;
  id v11 = v7;
  id v12 = v9;
  id v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v17);
  uint64_t v14 = [*(id *)(a1 + 32) requestModifierLock:v17, v18, v19, v20];
  [v14 lock];

  id v15 = [*(id *)(a1 + 32) requests];
  [v15 removeObjectForKey:*(void *)(a1 + 40)];

  int v16 = [*(id *)(a1 + 32) requestModifierLock];
  [v16 unlock];
}

void sub_10004A248(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  id v3 = [*(id *)(a1 + 32) statusCode];
  id v5 = [*(id *)(a1 + 32) allHeaderFields];
  id v4 = [*(id *)(a1 + 40) copy];
  (*(void (**)(uint64_t, id, id, id, void, void))(v2 + 16))(v2, v3, v5, v4, 0, *(void *)(a1 + 48));
}

void sub_10004AE04(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_alloc_init((Class)CMMotionActivityManager);
  [WeakRetained setMotionActivityManager:v2];

  id v3 = objc_alloc_init((Class)NSOperationQueue);
  [WeakRetained setActivityUpdateQueue:v3];

  id v4 = [WeakRetained activityUpdateQueue];
  [v4 setMaxConcurrentOperationCount:1];

  id v5 = objc_alloc_init(FMDDeviceMotion);
  uint64_t v6 = +[NSDate date];
  [(FMDDeviceMotion *)v5 setActivityStartDate:v6];

  [(FMDDeviceMotion *)v5 setActivityState:0];
  [WeakRetained setLastKnownDeviceMotion:v5];
  id v7 = [WeakRetained motionActivityManager];
  id v8 = [WeakRetained activityUpdateQueue];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10004AF6C;
  v9[3] = &unk_1002DB178;
  void v9[4] = WeakRetained;
  [v7 startActivityUpdatesToQueue:v8 withHandler:v9];
}

void sub_10004AF6C(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _deviceMotionFrom:a2];
  [*(id *)(a1 + 32) setLastKnownDeviceMotion:v3];
}

void sub_10004B074(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained motionActivityManager];
  [v1 stopActivityUpdates];

  [WeakRetained setMotionActivityManager:0];
  [WeakRetained setActivityUpdateQueue:0];
  [WeakRetained setLastKnownDeviceMotion:0];
}

NSDictionary *__cdecl sub_10004B2D8(id a1)
{
  return 0;
}

void sub_10004B8F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004B914(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained checkShutdownSoonRegistration];
}

void sub_10004B9A8(id a1)
{
  qword_10031E858 = objc_alloc_init(FMDAccountStoreFMIP);

  _objc_release_x1();
}

void sub_10004C57C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
    }
  }
  else
  {
    id v5 = +[FMDMagSafeDataStore sharedInstance];
    [v5 clearDataStore];

    uint64_t v6 = *(void *)(a1 + 40);
    v7.receiver = *(id *)(a1 + 32);
    v7.super_class = (Class)FMDFMIPServiceProvider;
    [super accountRemoveRequestedWithCompletion:v6];
  }
}

void sub_10004C780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004C79C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained checkShutdownSoonRegistration];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"FMDSystemShutdownSoonNotification" object:0];

  id v4 = +[FMSystemInfo sharedInstance];
  if (![v4 isInternalBuild]) {
    goto LABEL_4;
  }
  unsigned int v5 = +[FMDPreferencesMgr notifyOnShutdownSoon];

  if (v5)
  {
    id v4 = objc_alloc_init((Class)NSDateFormatter);
    [v4 setDateStyle:1];
    [v4 setTimeStyle:2];
    uint64_t v6 = objc_alloc_init(FMDBatteryInfo);
    [(FMDBatteryInfo *)v6 batteryLevel];
    double v8 = v7 * 100.0;

    id v9 = objc_alloc_init((Class)FMAlert);
    id v10 = +[NSDate date];
    id v11 = [v4 stringFromDate:v10];
    id v12 = +[NSString stringWithFormat:@"Shutdown soon notification\n%@\nBattery level : %.2f%%", v11, *(void *)&v8];
    [v9 setMsgText:v12];

    [v9 setMsgTitle:@"Find My iPhone"];
    [v9 setShowMsgInLockScreen:1];
    id v13 = +[FMAlertManager sharedInstance];
    [v13 activateAlert:v9];

LABEL_4:
  }
  uint64_t v14 = +[NSString stringWithFormat:@"LaunchEvent.%@", *(void *)(a1 + 32)];
  id v15 = [[FMDEventLoggerEventScalar alloc] initWithEventName:v14];
  int v16 = +[FMDEventLogger sharedLogger];
  id v17 = +[FMDEventLoggerFacilityDataPeek facilityName];
  id v19 = v17;
  uint64_t v18 = +[NSArray arrayWithObjects:&v19 count:1];
  [v16 logEvent:v15 toFacilitiesNamed:v18];
}

void sub_10004CAB4(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) account];
  id v2 = [v1 authToken];
  id v3 = [v2 length];

  if (!v3)
  {
    id v4 = +[FMDAppleAccountManager sharedInstance];
    [v4 fixFMIPAuthTokenShouldForce:0];
  }
}

void sub_10004CC1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10004CC34(uint64_t a1)
{
  v3.receiver = *(id *)(a1 + 32);
  v3.super_class = (Class)FMDFMIPServiceProvider;
  id result = [super essentialServerInfoMissingError];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_10004CF6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    id v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v6 = [*(id *)(a1 + 32) account];
      id v11 = sub_100004238();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = [v3 fm_logID];
        int v17 = 138412546;
        uint64_t v18 = v12;
        __int16 v19 = 2048;
        id v20 = [v3 httpResponseStatus];
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", (uint8_t *)&v17, 0x16u);
      }
      id v13 = +[NSDate date];
      [v6 setLastIdentityTime:v13];

      uint64_t v14 = [*(id *)(a1 + 32) accountStore];
      id v15 = [*(id *)(a1 + 32) account];
      [v14 saveAccount:v15];

      int v16 = +[FMDStartupRegisterManager sharedInstance];
      [v16 eventDidOccur:12];

      +[FMPreferencesUtil setInteger:*(void *)(a1 + 40) forKey:@"identityVersion" inDomain:kFMDNotBackedUpPrefDomain];
      +[FMPreferencesUtil synchronizeDomain:kFMDNotBackedUpPrefDomain];
      double v8 = +[FMDLocalActivationLockInfoManager sharedInstance];
      [v8 updateActivationLockStatus:1];
      goto LABEL_11;
    }
    unsigned int v5 = [v3 cancelled];
    uint64_t v6 = sub_100004238();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v7)
      {
        double v8 = [v3 fm_logID];
        int v17 = 138412290;
        uint64_t v18 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v17, 0xCu);
LABEL_11:
      }
    }
    else if (v7)
    {
      double v8 = [v3 fm_logID];
      id v9 = [v3 httpResponseStatus];
      id v10 = [v3 httpResponseError];
      int v17 = 138412802;
      uint64_t v18 = v8;
      __int16 v19 = 2048;
      id v20 = v9;
      __int16 v21 = 2112;
      id v22 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v17, 0x20u);

      goto LABEL_11;
    }
  }
}

NSDictionary *__cdecl sub_10004D5F0(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_10004D640(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10004D648(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  id v3 = [*(id *)(a1 + 32) account];
  id v4 = [v3 authId];
  [v2 fm_safeSetObject:v4 forKey:@"X-Apple-PrsId"];

  return v2;
}

void sub_10004D6D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 willRetry]) {
    goto LABEL_16;
  }
  id v4 = [v3 httpResponseError];
  if (v4
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {

    goto LABEL_6;
  }
  if ([v3 cancelled])
  {
LABEL_6:
    unsigned int v5 = [v3 cancelled];
    uint64_t v6 = sub_100059C08();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v7)
      {
        double v8 = [v3 fm_logID];
        *(_DWORD *)buf = 138412290;
        id v23 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:
      }
    }
    else if (v7)
    {
      double v8 = [v3 fm_logID];
      id v9 = [v3 httpResponseStatus];
      id v10 = [v3 httpResponseError];
      *(_DWORD *)buf = 138412802;
      id v23 = v8;
      __int16 v24 = 2048;
      id v25 = v9;
      __int16 v26 = 2112;
      __int16 v27 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    id v11 = [v3 httpResponseError];

    if (v11)
    {
      id v12 = [v3 httpResponseError];
      id v13 = +[NSString stringWithFormat:@"Error contacting the server: %@", v12];
    }
    else
    {
      id v13 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Server returned error code %ld", [v3 httpResponseStatus]);
    }
    uint64_t v14 = *(void *)(a1 + 32);
    uint64_t v15 = kFMDErrorDomain;
    NSErrorUserInfoKey v20 = NSLocalizedFailureReasonErrorKey;
    __int16 v21 = v13;
    int v16 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
    int v17 = +[NSError errorWithDomain:v15 code:12 userInfo:v16];
    (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v17);

    goto LABEL_16;
  }
  uint64_t v18 = sub_100059C08();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v19 = [v3 fm_logID];
    *(_DWORD *)buf = 138412546;
    id v23 = v19;
    __int16 v24 = 2048;
    id v25 = [v3 httpResponseStatus];
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_16:
}

void sub_10004E1C0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = sub_100059AD8();
  double v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10023ED48();
    }

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Got ephemeral token for repair device.", v10, 2u);
    }

    id v9 = *(id *)(a1 + 32);
    [v9 setEphemeralToken:v5];
    [*(id *)(a1 + 40) _enableRepairWithContext:v9 callingClient:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
  }
}

NSDictionary *__cdecl sub_10004E7A0(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_10004E7F0(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_10004E7F8(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  id v3 = [*(id *)(a1 + 32) account];
  id v4 = [v3 authId];
  [v2 fm_safeSetObject:v4 forKey:@"X-Apple-PrsId"];

  return v2;
}

void sub_10004E940(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    id v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v18 = sub_100059AD8();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v19 = [v3 fm_logID];
        *(_DWORD *)buf = 138412546;
        __int16 v26 = v19;
        __int16 v27 = 2048;
        id v28 = [v3 httpResponseStatus];
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);
      }
      id v20 = objc_alloc((Class)FMDRepairDeviceResult);
      uint64_t v22 = *(void *)(a1 + 32);
      __int16 v21 = +[NSArray arrayWithObjects:&v22 count:1];
      id v13 = [v20 initWithEligibleDevices:&__NSArray0__struct devicesInRepairMode:v21];

      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      goto LABEL_16;
    }
    unsigned int v5 = [v3 cancelled];
    id v6 = sub_100059AD8();
    BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v7)
      {
        double v8 = [v3 fm_logID];
        *(_DWORD *)buf = 138412290;
        __int16 v26 = v8;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
LABEL_11:
      }
    }
    else if (v7)
    {
      double v8 = [v3 fm_logID];
      id v9 = [v3 httpResponseStatus];
      id v10 = [v3 httpResponseError];
      *(_DWORD *)buf = 138412802;
      __int16 v26 = v8;
      __int16 v27 = 2048;
      id v28 = v9;
      __int16 v29 = 2112;
      id v30 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);

      goto LABEL_11;
    }

    id v11 = [v3 httpResponseError];

    if (v11)
    {
      id v12 = [v3 httpResponseError];
      id v13 = +[NSString stringWithFormat:@"Error contacting the server: %@", v12];
    }
    else
    {
      +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Server returned error code %ld", [v3 httpResponseStatus]);
      id v13 = (id)objc_claimAutoreleasedReturnValue();
    }
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = kFMDErrorDomain;
    NSErrorUserInfoKey v23 = NSLocalizedFailureReasonErrorKey;
    id v24 = v13;
    int v16 = +[NSDictionary dictionaryWithObjects:&v24 forKeys:&v23 count:1];
    int v17 = +[NSError errorWithDomain:v15 code:3 userInfo:v16];
    (*(void (**)(uint64_t, void, void *))(v14 + 16))(v14, 0, v17);

LABEL_16:
  }
}

void sub_10004F030(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  BOOL v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412290;
    id v11 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Failed to instantiate authContext: %@", (uint8_t *)&v10, 0xCu);
  }

  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = [v5 objectForKeyedSubscript:AKAuthenticationPasswordKey];
  (*(void (**)(uint64_t, void *, id))(v8 + 16))(v8, v9, v6);
}

void sub_10004F5F0(void *a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    id v4 = +[FMDPreferencesMgr errorForUnregister];
    id v5 = [v3 httpResponseError];
    if (v5
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399
      || v4)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      id v6 = sub_100004238();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v7 = [v3 fm_logID];
        uint64_t v8 = (void *)a1[4];
        *(_DWORD *)buf = 138412802;
        uint64_t v70 = (uint64_t)v7;
        __int16 v71 = 2112;
        v72 = v8;
        __int16 v73 = 2048;
        id v74 = [v3 httpResponseStatus];
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@ for paired device %@: successful with status %ld", buf, 0x20u);
      }
      uint64_t v9 = a1[6];
      if (v9) {
        (*(void (**)(uint64_t, void))(v9 + 16))(v9, 0);
      }
LABEL_49:

      goto LABEL_50;
    }
    unsigned int v10 = [v3 cancelled];
    id v11 = sub_100004238();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (!v12) {
        goto LABEL_18;
      }
      id v13 = [v3 fm_logID];
      *(_DWORD *)buf = 138412290;
      uint64_t v70 = (uint64_t)v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v12) {
        goto LABEL_18;
      }
      id v13 = [v3 fm_logID];
      uint64_t v14 = (void *)a1[4];
      id v15 = [v3 httpResponseStatus];
      int v16 = [v3 httpResponseError];
      *(_DWORD *)buf = 138413058;
      uint64_t v70 = (uint64_t)v13;
      __int16 v71 = 2112;
      v72 = v14;
      __int16 v73 = 2048;
      id v74 = v15;
      __int16 v75 = 2112;
      __int16 v76 = v16;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@ for paired device %@: Error (%ld) %@", buf, 0x2Au);
    }
LABEL_18:

    int v17 = [v3 httpResponseError];

    if (v17)
    {
      uint64_t v18 = [v3 httpResponseError];
      uint64_t v19 = +[NSString stringWithFormat:@"Error contacting the server: %@", v18];
    }
    else
    {
      if (v4)
      {
        id v20 = v4;
      }
      else
      {
        +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Server returned error code %ld", [v3 httpResponseStatus]);
        id v20 = (id)objc_claimAutoreleasedReturnValue();
      }
      uint64_t v19 = (uint64_t)v20;
    }
    __int16 v21 = sub_100004238();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v70 = v19;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
    }
    __int16 v57 = (void *)v19;

    id v58 = v4;
    if (v4)
    {
      unsigned int v22 = [v4 containsString:@"network"];
      NSErrorUserInfoKey v23 = &qword_10026A3F0;
      if (!v22) {
        NSErrorUserInfoKey v23 = &qword_10026A3E0;
      }
      id v24 = (id)*v23;
      id v25 = (void *)a1[5];
    }
    else
    {
      __int16 v26 = [v3 alertFromServerResponse];

      if (v26) {
        goto LABEL_32;
      }
      v56 = (void *)a1[5];
      id v24 = [v3 responseErrorType];
      id v25 = v56;
    }
    [v25 _showPairedDeviceDisableFMIPErrorForResponseError:v24];
LABEL_32:
    id v59 = v3;
    +[NSDate timeIntervalSinceReferenceDate];
    uint64_t v60 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    __int16 v27 = +[NRPairedDeviceRegistry sharedInstance];
    id v28 = [v27 getPairedDevices];

    long long v63 = 0u;
    long long v64 = 0u;
    long long v61 = 0u;
    long long v62 = 0u;
    id v29 = v28;
    id v30 = [v29 countByEnumeratingWithState:&v61 objects:v68 count:16];
    if (v30)
    {
      id v31 = v30;
      uint64_t v32 = *(void *)v62;
      uint64_t v33 = NRDevicePropertyIsPaired;
      uint64_t v34 = NRDevicePropertyUDID;
      while (2)
      {
        for (i = 0; i != v31; i = (char *)i + 1)
        {
          if (*(void *)v62 != v32) {
            objc_enumerationMutation(v29);
          }
          id v36 = *(void **)(*((void *)&v61 + 1) + 8 * i);
          id v37 = [v36 valueForProperty:v33];
          unsigned int v38 = [v37 BOOLValue];

          if (v38)
          {
            int8x16_t v39 = (void *)a1[4];
            if (v39)
            {
              id v40 = [v36 valueForProperty:v34];
              unsigned int v41 = [v39 isEqualToString:v40];

              if (v41)
              {
                id v42 = [v36 valueForProperty:NRDevicePropertyPairingID];
                id v43 = [v36 valueForProperty:NRDevicePropertyLocalPairingDataStorePath];
                id v44 = objc_alloc((Class)NPSDomainAccessor);
                id v45 = [v44 initWithDomain:kFMDWatchNotBackedUpPrefDomain pairingID:v42 pairingDataStore:v43];
                __int16 v46 = sub_100004238();
                if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 138412546;
                  uint64_t v70 = (uint64_t)v60;
                  __int16 v71 = 2112;
                  v72 = v42;
                  _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_DEFAULT, "Syncing registerForceTime %@ to device with pairing ID %@", buf, 0x16u);
                }

                [v45 setObject:v60 forKey:@"LastRegisterForceTime"];
                id v47 = [v45 synchronize];
                id v48 = objc_opt_new();
                uint64_t v49 = kFMDWatchNotBackedUpPrefDomain;
                CFStringRef v67 = @"LastRegisterForceTime";
                id v50 = +[NSArray arrayWithObjects:&v67 count:1];
                CFStringRef v51 = +[NSSet setWithArray:v50];
                [v48 synchronizeNanoDomain:v49 keys:v51];

                goto LABEL_46;
              }
            }
          }
        }
        id v31 = [v29 countByEnumeratingWithState:&v61 objects:v68 count:16];
        if (v31) {
          continue;
        }
        break;
      }
    }
LABEL_46:

    uint64_t v52 = a1[6];
    if (v52)
    {
      uint64_t v53 = kFMDErrorDomain;
      NSErrorUserInfoKey v65 = NSLocalizedFailureReasonErrorKey;
      v66 = v57;
      v54 = +[NSDictionary dictionaryWithObjects:&v66 forKeys:&v65 count:1];
      uint64_t v55 = +[NSError errorWithDomain:v53 code:12 userInfo:v54];
      (*(void (**)(uint64_t, void *))(v52 + 16))(v52, v55);
    }
    id v4 = v58;
    id v3 = v59;
    goto LABEL_49;
  }
LABEL_50:
}

void sub_1000502E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 willRetry]) {
    goto LABEL_44;
  }
  id v4 = +[FMDPreferencesMgr errorForUnregister];
  id v5 = [v3 httpResponseError];
  if (v5
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399
    || v4)
  {

LABEL_13:
    unsigned int v16 = [v3 cancelled];
    int v17 = sub_100004238();
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
    if (v16)
    {
      if (!v18) {
        goto LABEL_19;
      }
      uint64_t v19 = [v3 fm_logID];
      *(_DWORD *)buf = 138412290;
      v89 = v19;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v18) {
        goto LABEL_19;
      }
      uint64_t v19 = [v3 fm_logID];
      id v20 = [v3 httpResponseStatus];
      __int16 v21 = [v3 httpResponseError];
      *(_DWORD *)buf = 138412802;
      v89 = v19;
      __int16 v90 = 2048;
      id v91 = v20;
      __int16 v92 = 2112;
      v93 = v21;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);
    }
LABEL_19:

    [*(id *)(a1 + 32) setUnregisterState:3];
    unsigned int v22 = +[NSDate date];
    [*(id *)(a1 + 32) setLastUnregisterFailedTime:v22];

    NSErrorUserInfoKey v23 = [*(id *)(a1 + 40) accountStore];
    [v23 saveAccount:*(void *)(a1 + 32)];

    id v24 = sub_100004238();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_10023EE18(v3, v24);
    }

    id v68 = v3;
    v66 = v4;
    if (v4)
    {
      unsigned int v25 = [v4 isEqualToString:@"network"];
      __int16 v26 = &qword_10026A3F0;
      if (!v25) {
        __int16 v26 = &qword_10026A3E0;
      }
      uint64_t v27 = *v26;
      [*(id *)(a1 + 40) _showUnregisterDeviceErrorForResponseError:*v26 inContext:[*(id *)(a1 + 32) fmipDisableContext]];
      id v28 = *(void **)(a1 + 40);
      id v29 = [*(id *)(a1 + 32) fmipDisableContext];
      id v30 = v28;
      id v31 = (id)v27;
    }
    else
    {
      uint64_t v32 = [v3 alertFromServerResponse];

      if (v32)
      {
        uint64_t v65 = 0;
        goto LABEL_28;
      }
      [*(id *)(a1 + 40) _showUnregisterDeviceErrorForResponseError:[v3 responseErrorType] inContext:[*(id *)(a1 + 32) fmipDisableContext]];
      long long v62 = *(void **)(a1 + 40);
      id v63 = [v3 responseErrorType];
      id v29 = [*(id *)(a1 + 32) fmipDisableContext];
      id v30 = v62;
      id v31 = v63;
    }
    uint64_t v65 = [v30 _unregisterDeviceErrorForResponseError:v31 inContext:v29];
LABEL_28:
    uint64_t v33 = objc_alloc_init(FMDFMIPAccount);
    [(FMDFMIPAccount *)v33 copyInfoFromAccount:*(void *)(a1 + 32)];
    uint64_t v34 = [*(id *)(a1 + 32) lastIdentityTime];
    [(FMDFMIPAccount *)v33 setLastIdentityTime:v34];

    uint64_t v67 = a1;
    id v35 = [*(id *)(a1 + 32) lastUnregisterFailedTime];
    long long v64 = v33;
    [(FMDAccount *)v33 setLastUnregisterFailedTime:v35];

    +[NSDate timeIntervalSinceReferenceDate];
    __int16 v73 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    id v36 = +[NRPairedDeviceRegistry sharedInstance];
    id v37 = [v36 getPairedDevices];

    long long v84 = 0u;
    long long v85 = 0u;
    long long v82 = 0u;
    long long v83 = 0u;
    id v38 = v37;
    id v39 = [v38 countByEnumeratingWithState:&v82 objects:v87 count:16];
    if (v39)
    {
      id v40 = v39;
      uint64_t v41 = *(void *)v83;
      uint64_t v42 = NRDevicePropertyIsPaired;
      uint64_t v70 = NRDevicePropertyPairingID;
      uint64_t v69 = NRDevicePropertyLocalPairingDataStorePath;
      id v43 = &_s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF_ptr;
      uint64_t v71 = *(void *)v83;
      id v72 = v38;
      do
      {
        for (i = 0; i != v40; i = (char *)i + 1)
        {
          if (*(void *)v83 != v41) {
            objc_enumerationMutation(v38);
          }
          id v45 = *(void **)(*((void *)&v82 + 1) + 8 * i);
          __int16 v46 = [v45 valueForProperty:v42];
          unsigned int v47 = [v46 BOOLValue];

          if (v47)
          {
            id v48 = [objc_alloc((Class)v43[429]) initWithUUIDString:@"02168E84-5DD8-4B19-9204-A79F04B33A32"];
            unsigned int v49 = [v45 supportsCapability:v48];

            if (v49)
            {
              id v50 = [v45 valueForProperty:v70];
              CFStringRef v51 = [v45 valueForProperty:v69];
              id v52 = objc_alloc((Class)NPSDomainAccessor);
              id v53 = [v52 initWithDomain:kFMDWatchNotBackedUpPrefDomain pairingID:v50 pairingDataStore:v51];
              v54 = sub_100004238();
              if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138412546;
                v89 = v73;
                __int16 v90 = 2112;
                id v91 = v50;
                _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "Syncing registerForceTime %@ to device with pairing ID %@", buf, 0x16u);
              }

              [v53 setObject:v73 forKey:@"LastRegisterForceTime"];
              id v55 = [v53 synchronize];
              v56 = objc_opt_new();
              uint64_t v57 = kFMDWatchNotBackedUpPrefDomain;
              CFStringRef v86 = @"LastRegisterForceTime";
              id v58 = +[NSArray arrayWithObjects:&v86 count:1];
              id v59 = +[NSSet setWithArray:v58];
              [v56 synchronizeNanoDomain:v57 keys:v59];

              uint64_t v41 = v71;
              id v38 = v72;
              id v43 = &_s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF_ptr;
            }
          }
        }
        id v40 = [v38 countByEnumeratingWithState:&v82 objects:v87 count:16];
      }
      while (v40);
    }

    v80[0] = _NSConcreteStackBlock;
    v80[1] = 3221225472;
    v80[2] = sub_100050BF4;
    v80[3] = &unk_1002D93F0;
    a1 = v67;
    v80[4] = *(void *)(v67 + 40);
    v81 = v64;
    uint64_t v60 = v64;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v80);

    id v3 = v68;
    id v15 = (void *)v65;
    id v4 = v66;
    goto LABEL_41;
  }
  if ([v3 cancelled]) {
    goto LABEL_13;
  }
  [*(id *)(a1 + 32) setUnregisterState:2];
  id v6 = +[FMXPCTransactionManager sharedInstance];
  [v6 beginTransaction:@"FMDFMIPServiceProvider-unregisterDeviceWithCompletion"];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100050C00;
  block[3] = &unk_1002D9378;
  void block[4] = *(void *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  BOOL v7 = [v3 httpResponseBody];

  if (v7)
  {
    uint64_t v8 = [v3 httpResponseBody];
    uint64_t v9 = [v8 objectForKeyedSubscript:@"oneTimeUnregisterTokens"];

    unsigned int v10 = [v9 fm_nullToNil];

    v74[0] = _NSConcreteStackBlock;
    v74[1] = 3221225472;
    v74[2] = sub_100050C80;
    v74[3] = &unk_1002DB338;
    __int16 v75 = @"token";
    __int16 v76 = @"udid";
    uint64_t v11 = *(void *)(a1 + 40);
    v77 = @"expiryTime";
    uint64_t v78 = v11;
    [v10 enumerateObjectsUsingBlock:v74];
  }
  BOOL v12 = sub_100004238();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    id v13 = [v3 fm_logID];
    id v14 = [v3 httpResponseStatus];
    *(_DWORD *)buf = 138412546;
    v89 = v13;
    __int16 v90 = 2048;
    id v91 = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);
  }
  id v15 = 0;
LABEL_41:
  uint64_t v61 = *(void *)(a1 + 48);
  if (v61) {
    (*(void (**)(uint64_t, void *))(v61 + 16))(v61, v15);
  }

LABEL_44:
}

id sub_100050BF4(uint64_t a1)
{
  return [*(id *)(a1 + 32) reinitializeProviderWithAccount:*(void *)(a1 + 40)];
}

void sub_100050C00(uint64_t a1)
{
  [*(id *)(a1 + 32) removeAccount];
  id v2 = [*(id *)(a1 + 32) accountStore];
  [v2 saveAccount:0];

  id v3 = +[FMXPCTransactionManager sharedInstance];
  [v3 endTransaction:@"FMDFMIPServiceProvider-unregisterDeviceWithCompletion"];
}

void sub_100050C80(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  id v11 = [v4 objectForKeyedSubscript:v3];
  id v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 40)];
  id v6 = [v4 objectForKeyedSubscript:*(void *)(a1 + 48)];

  BOOL v7 = [v6 fm_nullToNil];

  if (v7)
  {
    uint64_t v8 = +[NSDate fm_dateFromEpoch:](NSDate, "fm_dateFromEpoch:", [v7 integerValue]);
    if (!v5) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (!v5) {
      goto LABEL_7;
    }
  }
  if (v11)
  {
    id v9 = [objc_alloc((Class)FMDAccessoryIdentifier) initWithString:v5];
    unsigned int v10 = [*(id *)(a1 + 56) unregisterTokenStore];
    [v10 saveUnregisterToken:v11 identifier:v9 expiryDate:v8];
  }
LABEL_7:
}

void sub_100051238(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    id v4 = +[FMDPreferencesMgr errorForMarkAsMissing];
    id v5 = [v3 httpResponseError];
    if (v5
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399
      || v4)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      id v6 = sub_100004238();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v7 = [v3 fm_logID];
        *(_DWORD *)buf = 138412546;
        uint64_t v33 = v7;
        __int16 v34 = 2048;
        id v35 = [v3 httpResponseStatus];
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", buf, 0x16u);
      }
      uint64_t v8 = *(void *)(a1 + 40);
      if (v8) {
        (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
      }
LABEL_35:

      goto LABEL_36;
    }
    unsigned int v9 = [v3 cancelled];
    unsigned int v10 = sub_100004238();
    BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (!v11) {
        goto LABEL_18;
      }
      BOOL v12 = [v3 fm_logID];
      *(_DWORD *)buf = 138412290;
      uint64_t v33 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
    }
    else
    {
      if (!v11) {
        goto LABEL_18;
      }
      BOOL v12 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      id v14 = [v3 httpResponseError];
      *(_DWORD *)buf = 138412802;
      uint64_t v33 = v12;
      __int16 v34 = 2048;
      id v35 = v13;
      __int16 v36 = 2112;
      id v37 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);
    }
LABEL_18:

    id v15 = [v3 httpResponseError];

    if (v15)
    {
      unsigned int v16 = [v3 httpResponseError];
      int v17 = +[NSString stringWithFormat:@"Error contacting the server: %@", v16];
    }
    else
    {
      if (v4)
      {
        id v18 = v4;
      }
      else
      {
        +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Server returned error code %ld", [v3 httpResponseStatus]);
        id v18 = (id)objc_claimAutoreleasedReturnValue();
      }
      int v17 = v18;
    }
    uint64_t v19 = sub_100004238();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v33 = v17;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%@", buf, 0xCu);
    }

    if (v4)
    {
      unsigned int v20 = [v4 containsString:@"network"];
      __int16 v21 = &qword_10026A3F0;
      if (!v20) {
        __int16 v21 = &qword_10026A3E0;
      }
      id v22 = (id)*v21;
      NSErrorUserInfoKey v23 = *(void **)(a1 + 32);
    }
    else
    {
      id v24 = [v3 alertFromServerResponse];

      if (v24) {
        goto LABEL_32;
      }
      id v29 = *(void **)(a1 + 32);
      id v22 = [v3 responseErrorType];
      NSErrorUserInfoKey v23 = v29;
    }
    [v23 _showMarkAsMissingErrorForResponseError:v22];
LABEL_32:
    uint64_t v25 = *(void *)(a1 + 40);
    if (v25)
    {
      uint64_t v26 = kFMDErrorDomain;
      NSErrorUserInfoKey v30 = NSLocalizedFailureReasonErrorKey;
      id v31 = v17;
      uint64_t v27 = +[NSDictionary dictionaryWithObjects:&v31 forKeys:&v30 count:1];
      id v28 = +[NSError errorWithDomain:v26 code:12 userInfo:v27];
      (*(void (**)(uint64_t, void *))(v25 + 16))(v25, v28);
    }
    goto LABEL_35;
  }
LABEL_36:
}

void sub_100051CE0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100051CF4(uint64_t a1)
{
  id WeakRetained = (int *)objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained pendingSecureMessage];
  if (v2)
  {
  }
  else
  {
    id v3 = [WeakRetained pendingLocateAlert];

    if (!v3) {
      goto LABEL_6;
    }
  }
  if ([WeakRetained lockStateNotifyToken] == -1)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_100051DD4;
    handler[3] = &unk_1002DB388;
    handler[4] = WeakRetained;
    notify_register_dispatch(kMobileKeyBagLockStatusNotifyToken, WeakRetained + 47, (dispatch_queue_t)&_dispatch_main_q, handler);
  }
LABEL_6:
}

id sub_100051DD4(uint64_t a1)
{
  id result = (id)MKBGetDeviceLockState();
  if (result == 3 || !result)
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 _showPendingHomescreenAlertNow];
  }
  return result;
}

void sub_100051EE0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100051EF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained pendingSecureMessage];

  if (v1)
  {
    id v2 = +[FMAlertManager sharedInstance];
    id v3 = [WeakRetained pendingSecureMessage];
    [v2 activateAlert:v3];

    [WeakRetained setPendingSecureMessage:0];
  }
  id v4 = [WeakRetained pendingLocateAlert];

  if (v4)
  {
    id v5 = +[FMAlertManager sharedInstance];
    id v6 = [WeakRetained pendingLocateAlert];
    [v5 activateAlert:v6];

    [WeakRetained setPendingLocateAlert:0];
  }
  if ([WeakRetained lockStateNotifyToken] != -1)
  {
    notify_cancel((int)[WeakRetained lockStateNotifyToken]);
    [WeakRetained setLockStateNotifyToken:0xFFFFFFFFLL];
  }
}

void sub_10005212C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    id v2 = sub_100004238();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Buddy is done", v13, 2u);
    }

    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 removeObserver:*(void *)(a1 + 32) name:@"purplebuddy.setupdone" object:0];

    id v4 = [*(id *)(a1 + 32) buddyWaitTimer];

    if (v4)
    {
      id v5 = [*(id *)(a1 + 32) buddyWaitTimer];
      [v5 invalidate];

      [*(id *)(a1 + 32) setBuddyWaitTimer:0];
    }
    [*(id *)(a1 + 32) setWaitingForBuddy:0];
    [*(id *)(a1 + 32) syncFMIPStateToWatch];
    if (*(unsigned char *)(a1 + 41))
    {
      id v6 = +[FMDAppleAccountManager sharedInstance];
      [v6 syncFMIPAccountInfo];

      if ([*(id *)(a1 + 32) waitingToMakeProviderActive])
      {
        BOOL v7 = +[FMXPCTransactionManager sharedInstance];
        [v7 endTransaction:@"FMIPWaitingForBuddy"];

        [*(id *)(a1 + 32) makeProviderActive];
      }
    }
  }
  else
  {
    if (([*(id *)(a1 + 32) waitingForBuddy] & 1) == 0)
    {
      [*(id *)(a1 + 32) setWaitingForBuddy:1];
      uint64_t v8 = +[FMXPCTransactionManager sharedInstance];
      [v8 beginTransaction:@"FMIPWaitingForBuddy"];

      unsigned int v9 = +[NSNotificationCenter defaultCenter];
      [v9 addObserver:*(void *)(a1 + 32) selector:"buddyDidComplete:" name:@"purplebuddy.setupdone" object:0];
    }
    unsigned int v10 = [*(id *)(a1 + 32) buddyWaitTimer];
    [v10 invalidate];

    BOOL v11 = +[NSTimer scheduledTimerWithTimeInterval:*(void *)(a1 + 32) target:"_buddyCompletionCheckTimerFired:" selector:0 userInfo:0 repeats:10.0];
    [*(id *)(a1 + 32) setBuddyWaitTimer:v11];

    BOOL v12 = sub_100004238();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "FMIP is not active yet since buddy is yet to complete.", buf, 2u);
    }
  }
}

void sub_100052D04(uint64_t a1)
{
  id v2 = +[FMDLocalActivationLockInfoManager sharedInstance];
  id v3 = [*(id *)(a1 + 32) isActivationLocked];
  [v2 updateActivationLockStatus:v3];
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5[0] = 67109120;
    v5[1] = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "synchronizeLocationActivationState %d", (uint8_t *)v5, 8u);
  }
}

void sub_100052F00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = +[FMXPCTransactionManager sharedInstance];
  [v3 endTransaction:*(void *)(a1 + 32)];
}

void sub_1000530F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10005310C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _serialQueue_sendDeviceIdentityIfEligibleWithIdentityInfo:*(void *)(a1 + 32)];
}

void sub_100053438(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100053454(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Preferences application state did change: %@", (uint8_t *)&v6, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained checkAndSendPendingDeviceIdentityWithIdentityInfo:*(void *)(a1 + 32)];
}

void sub_100053694(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000536B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _serialQueue_checkAndSendPendingDeviceIdentityWithIdentityInfo:*(void *)(a1 + 32)];
}

id sub_100053B4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) syncFMIPStateToWatch];
}

NSDictionary *__cdecl sub_100053CE4(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  uint64_t v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_100053D34(uint64_t a1)
{
  uint64_t v2 = +[ServerDeviceInfo sharedInstance];
  id v3 = [*(id *)(a1 + 32) account];
  id v4 = [v2 deviceInfoForAccount:v3];

  return v4;
}

void sub_1000554E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100055528(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100055538(uint64_t a1)
{
}

void sub_100055540(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  int v6 = v5;
  if (v5)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
    id v8 = v5;
    unsigned int v9 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v8;
  }
  else
  {
    uint64_t v10 = [v15 signature];
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
    BOOL v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    uint64_t v13 = [v15 attestation];
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
    unsigned int v9 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
  }

  [*(id *)(a1 + 32) signal];
}

void sub_1000558EC(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_100057628(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_100057934(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100059878();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "setupAgent completed with error %@", (uint8_t *)&v5, 0xCu);
  }

  [*(id *)(a1 + 32) setSetupAgent:0];
}

void sub_100057BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100057C0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained unregisterAccessoriesIfNeeded];
  uint64_t v2 = [[FMDEventLoggerEventScalar alloc] initWithEventName:@"FMDNanoMigratorJanitor"];
  id v3 = +[FMDEventLogger sharedLogger];
  uint64_t v4 = +[FMDEventLoggerFacilityDataPeek facilityName];
  id v6 = v4;
  int v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [v3 logEvent:v2 toFacilitiesNamed:v5];
}

void sub_100057F7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 accessory];
  int v5 = [v4 udid];

  id v6 = [objc_alloc((Class)FMDAccessoryIdentifier) initWithString:v5];
  uint64_t v7 = [FMDRequestWatchUnregister alloc];
  id v8 = [v3 unregisterToken];
  unsigned int v9 = [(FMDRequestWatchUnregister *)v7 initWithDeviceUDID:v5 unregisterToken:v8];

  objc_initWeak(&location, *(id *)(a1 + 32));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000581A4;
  v14[3] = &unk_1002DB420;
  objc_copyWeak(v17, &location);
  v17[1] = *(id *)(a1 + 40);
  id v10 = v6;
  uint64_t v11 = *(void *)(a1 + 32);
  id v15 = v10;
  uint64_t v16 = v11;
  [(FMDRequest *)v9 setCompletionHandler:v14];
  BOOL v12 = sub_100059DD0();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v20 = v10;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch unregister request enqueued %@", buf, 0xCu);
  }

  uint64_t v13 = [*(id *)(a1 + 32) serverInteractionController];
  [v13 enqueueRequest:v9];

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
}

void sub_100058178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000581A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 willRetry]) {
    goto LABEL_27;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  double v5 = *(double *)(a1 + 56);
  id v6 = sub_100059DD0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = 134217984;
    double v31 = COERCE_DOUBLE([v3 httpResponseStatus]);
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch Unregister request response code %li", (uint8_t *)&v30, 0xCu);
  }

  uint64_t v7 = [v3 httpResponseError];
  if (v7
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {
  }
  else if (([v3 cancelled] & 1) == 0)
  {
    uint64_t v25 = [WeakRetained unregisterTokenStore];
    [v25 removeUnregisterTokenForIdentifier:*(void *)(a1 + 32)];

    uint64_t v26 = sub_100004238();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      [v3 fm_logID];
      double v27 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
      double v28 = COERCE_DOUBLE([v3 httpResponseStatus]);
      int v30 = 138412546;
      double v31 = v27;
      __int16 v32 = 2048;
      double v33 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld.", (uint8_t *)&v30, 0x16u);
    }
    uint64_t v16 = sub_100059DD0();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      double v29 = *(double *)(a1 + 32);
      int v30 = 138412290;
      double v31 = v29;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Watch Migration: Watch unregister success %@", (uint8_t *)&v30, 0xCu);
    }
    goto LABEL_24;
  }
  unsigned int v8 = [v3 cancelled];
  unsigned int v9 = sub_100004238();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v8)
  {
    if (!v10) {
      goto LABEL_14;
    }
    [v3 fm_logID];
    double v11 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
    int v30 = 138412290;
    double v31 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v30, 0xCu);
  }
  else
  {
    if (!v10) {
      goto LABEL_14;
    }
    [v3 fm_logID];
    double v11 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
    double v12 = COERCE_DOUBLE([v3 httpResponseStatus]);
    uint64_t v13 = [v3 httpResponseError];
    int v30 = 138412802;
    double v31 = v11;
    __int16 v32 = 2048;
    double v33 = v12;
    __int16 v34 = 2112;
    id v35 = v13;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v30, 0x20u);
  }
LABEL_14:

  uint64_t v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
    sub_10023F4F0(v3, v14);
  }

  id v15 = [v3 httpResponseHeaders];
  uint64_t v16 = [v15 objectForKeyedSubscript:@"X-Apple-Retry-After"];

  if (!v16) {
    goto LABEL_24;
  }
  [v16 doubleValue];
  double v5 = v17;
  id v18 = sub_100004238();
  BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
  if (v5 <= 0.0)
  {
    if (v19)
    {
      [WeakRetained fm_logID];
      double v20 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
      int v30 = 138412290;
      double v31 = v20;
      __int16 v21 = "%@ Server requested that no more retries be done.";
      id v22 = v18;
      uint32_t v23 = 12;
      goto LABEL_22;
    }
  }
  else if (v19)
  {
    [WeakRetained fm_logID];
    double v20 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue());
    int v30 = 138412546;
    double v31 = v20;
    __int16 v32 = 2048;
    double v33 = v5;
    __int16 v21 = "%@ Server requested a retry after %f seconds";
    id v22 = v18;
    uint32_t v23 = 22;
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, v21, (uint8_t *)&v30, v23);
  }
LABEL_24:

  id v24 = sub_100059DD0();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = 134217984;
    double v31 = v5;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Watch Migration: Retry After %f", (uint8_t *)&v30, 0xCu);
  }

  [*(id *)(a1 + 40) scheduleJanitor:v5];
LABEL_27:
}

void sub_100058BFC(uint64_t a1, void *a2)
{
  id v9 = a2;
  id v3 = objc_alloc((Class)FMDAccessoryIdentifier);
  uint64_t v4 = [v9 udid];
  id v5 = [v3 initWithString:v4];

  id v6 = [*(id *)(a1 + 32) unregisterTokenStore];
  uint64_t v7 = [v6 unregisterTokenForIdentifier:v5];

  if (v7)
  {
    unsigned int v8 = [[FMDFMIPUnregisterDeviceInfoAccessoryAdaptor alloc] initWithAccessory:v9 unregisterToken:v7];
    [*(id *)(a1 + 40) fm_safeAddObject:v8];
  }
}

void sub_100059150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100059178(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100059878();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 httpResponseStatus];
    uint64_t v7 = [v3 httpResponseBody];
    unsigned int v8 = [v3 httpResponseHeaders];
    int v21 = 138413058;
    id v22 = v3;
    __int16 v23 = 2048;
    id v24 = v6;
    __int16 v25 = 2112;
    uint64_t v26 = v7;
    __int16 v27 = 2112;
    double v28 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v21, 0x2Au);
  }
  id v9 = [v3 httpResponseError];
  if (v9
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {

    goto LABEL_7;
  }
  if ([v3 cancelled])
  {
LABEL_7:
    unsigned int v10 = [v3 cancelled];
    double v11 = sub_100059878();
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (v12)
      {
        uint64_t v13 = [v3 fm_logID];
        int v21 = 138412290;
        id v22 = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v21, 0xCu);
LABEL_12:
      }
    }
    else if (v12)
    {
      uint64_t v13 = [v3 fm_logID];
      id v14 = [v3 httpResponseStatus];
      id v15 = [v3 httpResponseError];
      int v21 = 138412802;
      id v22 = v13;
      __int16 v23 = 2048;
      id v24 = v14;
      __int16 v25 = 2112;
      uint64_t v26 = v15;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v21, 0x20u);

      goto LABEL_12;
    }

    uint64_t v16 = [WeakRetained onCompletionHandler];

    if (!v16) {
      goto LABEL_16;
    }
    double v17 = [WeakRetained onCompletionHandler];
    id v18 = [v3 httpResponseError];
    ((void (**)(void, void *))v17)[2](v17, v18);

    goto LABEL_15;
  }
  double v20 = [WeakRetained onCompletionHandler];

  if (v20)
  {
    double v17 = [WeakRetained onCompletionHandler];
    v17[2](v17, 0);
LABEL_15:
  }
LABEL_16:
  uint64_t v19 = *(void *)(a1 + 32);
  if (v19) {
    (*(void (**)(void))(v19 + 16))();
  }
}

void sub_1000595D4(id a1)
{
  qword_10031E870 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "_");

  _objc_release_x1();
}

id sub_100059618()
{
  if (qword_10031E878 != -1) {
    dispatch_once(&qword_10031E878, &stru_1002DB4B0);
  }
  v0 = (void *)qword_10031E880;

  return v0;
}

void sub_10005966C(id a1)
{
  qword_10031E880 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "locations");

  _objc_release_x1();
}

id sub_1000596B0()
{
  if (qword_10031E888 != -1) {
    dispatch_once(&qword_10031E888, &stru_1002DB4D0);
  }
  v0 = (void *)qword_10031E890;

  return v0;
}

void sub_100059704(id a1)
{
  qword_10031E890 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "accessory");

  _objc_release_x1();
}

id sub_100059748()
{
  if (qword_10031E898 != -1) {
    dispatch_once(&qword_10031E898, &stru_1002DB4F0);
  }
  v0 = (void *)qword_10031E8A0;

  return v0;
}

void sub_10005979C(id a1)
{
  qword_10031E8A0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "traffic");

  _objc_release_x1();
}

id sub_1000597E0()
{
  if (qword_10031E8A8 != -1) {
    dispatch_once(&qword_10031E8A8, &stru_1002DB510);
  }
  v0 = (void *)qword_10031E8B0;

  return v0;
}

void sub_100059834(id a1)
{
  qword_10031E8B0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "encoder");

  _objc_release_x1();
}

id sub_100059878()
{
  if (qword_10031E8B8 != -1) {
    dispatch_once(&qword_10031E8B8, &stru_1002DB530);
  }
  v0 = (void *)qword_10031E8C0;

  return v0;
}

void sub_1000598CC(id a1)
{
  qword_10031E8C0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "extensions");

  _objc_release_x1();
}

id sub_100059910()
{
  if (qword_10031E8C8 != -1) {
    dispatch_once(&qword_10031E8C8, &stru_1002DB550);
  }
  v0 = (void *)qword_10031E8D0;

  return v0;
}

void sub_100059964(id a1)
{
  qword_10031E8D0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "extensions_playSound");

  _objc_release_x1();
}

id sub_1000599A8()
{
  if (qword_10031E8D8 != -1) {
    dispatch_once(&qword_10031E8D8, &stru_1002DB570);
  }
  v0 = (void *)qword_10031E8E0;

  return v0;
}

void sub_1000599FC(id a1)
{
  qword_10031E8E0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "secureLocations");

  _objc_release_x1();
}

id sub_100059A40()
{
  if (qword_10031E8E8 != -1) {
    dispatch_once(&qword_10031E8E8, &stru_1002DB590);
  }
  v0 = (void *)qword_10031E8F0;

  return v0;
}

void sub_100059A94(id a1)
{
  qword_10031E8F0 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "healUCRT");

  _objc_release_x1();
}

id sub_100059AD8()
{
  if (qword_10031E8F8 != -1) {
    dispatch_once(&qword_10031E8F8, &stru_1002DB5B0);
  }
  v0 = (void *)qword_10031E900;

  return v0;
}

void sub_100059B2C(id a1)
{
  qword_10031E900 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "repairDevice");

  _objc_release_x1();
}

id sub_100059B70()
{
  if (qword_10031E908 != -1) {
    dispatch_once(&qword_10031E908, &stru_1002DB5D0);
  }
  v0 = (void *)qword_10031E910;

  return v0;
}

void sub_100059BC4(id a1)
{
  qword_10031E910 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "ALFailureAnalytics");

  _objc_release_x1();
}

id sub_100059C08()
{
  if (qword_10031E918 != -1) {
    dispatch_once(&qword_10031E918, &stru_1002DB5F0);
  }
  v0 = (void *)qword_10031E920;

  return v0;
}

void sub_100059C5C(id a1)
{
  qword_10031E920 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "disableLocationDisplay");

  _objc_release_x1();
}

id sub_100059CA0()
{
  if (qword_10031E928 != -1) {
    dispatch_once(&qword_10031E928, &stru_1002DB610);
  }
  v0 = (void *)qword_10031E930;

  return v0;
}

void sub_100059CF4(id a1)
{
  qword_10031E930 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "accountRatchet");

  _objc_release_x1();
}

id sub_100059D38()
{
  if (qword_10031E938 != -1) {
    dispatch_once(&qword_10031E938, &stru_1002DB630);
  }
  v0 = (void *)qword_10031E940;

  return v0;
}

void sub_100059D8C(id a1)
{
  qword_10031E940 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "ownerAuthentication");

  _objc_release_x1();
}

id sub_100059DD0()
{
  if (qword_10031E948 != -1) {
    dispatch_once(&qword_10031E948, &stru_1002DB650);
  }
  v0 = (void *)qword_10031E950;

  return v0;
}

void sub_100059E24(id a1)
{
  if (+[FMPreferencesUtil BOOLForKey:@"ShowAutomationLogs" inDomain:@"com.apple.icloud.findmydeviced.notbackedup"])
  {
    qword_10031E950 = (uint64_t)os_log_create("com.apple.icloud.findmydeviced", "automation");
    _objc_release_x1();
  }
}

void sub_10005A44C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) provider];
  [v2 sendDeviceIdentityWithIdentityInfo:*(void *)(a1 + 40)];

  id v3 = +[FMXPCTransactionManager sharedInstance];
  [v3 endTransaction:@"kFMDCommandHandlerIdentityV5TransactionName"];
}

void sub_10005A65C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      id v9 = [v3 fm_logID];
      int v16 = 138412546;
      double v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      unsigned int v10 = "%@: successful with status %ld";
      double v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        id v9 = [v3 fm_logID];
        int v16 = 138412290;
        double v17 = v9;
        unsigned int v10 = "%@: Cancelled";
        double v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      id v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      id v14 = [v3 httpResponseError];
      int v16 = 138412802;
      double v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      int v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_10005ABBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005ABE8(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained _didCompleteQueueCheckRequest:v4 completion:*(void *)(a1 + 32)];
}

void sub_10005BBD0(id a1)
{
  qword_10031E960 = objc_alloc_init(FMDOperationManager);

  _objc_release_x1();
}

void sub_10005BDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005BDC8(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    sub_1000596B0();
    id v3 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(&v3->super, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_15;
    }
    uint64_t v11 = *(void *)(a1 + 40);
    uint32_t v12 = *(FMDOperationQueue **)(a1 + 48);
    *(_DWORD *)buf = 138412546;
    uint64_t v17 = v11;
    __int16 v18 = 2112;
    id v19 = v12;
    id v13 = "%@ found nil action for identifier %@";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, &v3->super, OS_LOG_TYPE_DEFAULT, v13, buf, 0x16u);
    goto LABEL_15;
  }
  if (!*(void *)(a1 + 48))
  {
    sub_1000596B0();
    id v3 = (FMDOperationQueue *)objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(&v3->super, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_15;
    }
    uint64_t v15 = *(FMDOperationQueue **)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v17 = v14;
    __int16 v18 = 2112;
    id v19 = v15;
    id v13 = "%@ found nil identifier for action %@";
    goto LABEL_14;
  }
  uint64_t v2 = [*(id *)(a1 + 40) actionQueueMap];
  id v3 = [v2 objectForKey:*(void *)(a1 + 48)];

  id v4 = sub_1000596B0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    uint64_t v17 = v5;
    __int16 v18 = 2112;
    id v19 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ found queue - %@", buf, 0x16u);
  }

  if (!v3)
  {
    id v3 = [[FMDOperationQueue alloc] initWithIdentifier:*(void *)(a1 + 48)];
    unsigned int v6 = [*(id *)(a1 + 40) actionQueueMap];
    [v6 setObject:v3 forKey:*(void *)(a1 + 48)];

    uint64_t v7 = +[NSString stringWithFormat:@"%@-%p", objc_opt_class(), v3];
    BOOL v8 = sub_1000596B0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      *(_DWORD *)buf = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      id v19 = v7;
      __int16 v20 = 2112;
      uint64_t v21 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ creating queue(%@) with identifier - %@", buf, 0x20u);
    }
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [(FMDOperationQueue *)v3 addRequest:*(void *)(a1 + 32)];
LABEL_15:
}

void sub_10005C164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005C17C(uint64_t a1)
{
  if (!*(void *)(a1 + 32))
  {
    id v3 = sub_1000596B0();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_14;
    }
    uint64_t v7 = *(void *)(a1 + 40);
    BOOL v8 = *(NSObject **)(a1 + 48);
    int v12 = 138412546;
    uint64_t v13 = v7;
    __int16 v14 = 2112;
    uint64_t v15 = v8;
    uint64_t v9 = "%@ found nil action to be removed for identifier %@";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v12, 0x16u);
    goto LABEL_14;
  }
  if (!*(void *)(a1 + 48))
  {
    id v3 = sub_1000596B0();
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_14;
    }
    uint64_t v11 = *(NSObject **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    int v12 = 138412546;
    uint64_t v13 = v10;
    __int16 v14 = 2112;
    uint64_t v15 = v11;
    uint64_t v9 = "%@ found nil identifier to remove action %@";
    goto LABEL_11;
  }
  uint64_t v2 = [*(id *)(a1 + 40) actionQueueMap];
  id v3 = [v2 objectForKey:*(void *)(a1 + 48)];

  id v4 = sub_1000596B0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    int v12 = 138412546;
    uint64_t v13 = v5;
    __int16 v14 = 2112;
    uint64_t v15 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ found queue for removal - %@", (uint8_t *)&v12, 0x16u);
  }

  if (v3) {
    unsigned __int8 v6 = [v3 cancelRequest:*(void *)(a1 + 32)];
  }
  else {
    unsigned __int8 v6 = 0;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v6;
LABEL_14:
}

void sub_10005C5B4(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = sub_100059878();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_10023F690();
  }
}

void sub_10005C8E4()
{
  v0 = sub_100059878();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR)) {
    sub_10023F7EC();
  }
}

void sub_10005C930()
{
  v0 = sub_100059878();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_ERROR)) {
    sub_10023F864();
  }
}

void sub_10005CAA8(id a1)
{
  uint64_t v1 = (void *)qword_10031E970;
  qword_10031E970 = (uint64_t)&off_1002F3268;
}

uint64_t sub_10005F358(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005F368(uint64_t a1)
{
}

void sub_10005F370(uint64_t a1)
{
}

void sub_10005FAF0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 3221225472;
  id v19 = sub_10005FC3C;
  __int16 v20 = &unk_1002DB128;
  id v10 = *(id *)(a1 + 48);
  id v21 = v8;
  id v22 = v7;
  id v23 = v9;
  id v24 = v10;
  id v11 = v7;
  id v12 = v9;
  id v13 = v8;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v17);
  __int16 v14 = [[*(id *)(a1 + 32) requestModifierLock:v17, v18, v19, v20];
  [v14 lock];

  uint64_t v15 = [*(id *)(a1 + 32) requests];
  [v15 removeObjectForKey:*(void *)(a1 + 40)];

  int v16 = [*(id *)(a1 + 32) requestModifierLock];
  [v16 unlock];
}

void sub_10005FC3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  id v3 = [*(id *)(a1 + 32) statusCode];
  id v5 = [*(id *)(a1 + 32) allHeaderFields];
  id v4 = [*(id *)(a1 + 40) copy];
  (*(void (**)(uint64_t, id, id, id, void, void))(v2 + 16))(v2, v3, v5, v4, 0, *(void *)(a1 + 48));
}

void sub_100060B1C(uint64_t a1)
{
  uint64_t v11 = 0;
  id v12 = &v11;
  uint64_t v13 = 0x3032000000;
  __int16 v14 = sub_100060CD4;
  uint64_t v15 = sub_100060CE4;
  id v16 = 0;
  uint64_t v2 = [*(id *)(a1 + 32) pairedDevices];
  id v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472;
  id v7 = sub_100060CEC;
  id v8 = &unk_1002DB770;
  id v9 = *(id *)(a1 + 40);
  id v10 = &v11;
  [v2 enumerateObjectsUsingBlock:&v5];

  if (v12[5])
  {
    id v3 = sub_100004238();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      uint64_t v18 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDBluetoothManager forcing a connection to device %@", buf, 0xCu);
    }

    [*(id *)(a1 + 32) connectDevice:v12[5] v5, v6, v7, v8];
  }

  _Block_object_dispose(&v11, 8);
}

void sub_100060CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100060CD4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100060CE4(uint64_t a1)
{
}

void sub_100060CEC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  id v7 = [v9 address];
  unsigned int v8 = [v7 isEqualToString:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_100060F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100060F74(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 32) available];
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    uint64_t v2 = [*(id *)(a1 + 32) pairedDevices];
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;
  }
  id v5 = [*(id *)(a1 + 40) accessoriesQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100061074;
  block[3] = &unk_1002DB850;
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 64);
  void block[4] = v6;
  long long v8 = *(_OWORD *)(a1 + 48);
  id v7 = (id)v8;
  long long v10 = v8;
  dispatch_async(v5, block);
}

void sub_100061074(void *a1)
{
  uint64_t v2 = +[NSMutableArray array];
  uint64_t v3 = v2;
  if (*(unsigned char *)(*(void *)(a1[6] + 8) + 24))
  {
    uint64_t v4 = *(void **)(*(void *)(a1[7] + 8) + 40);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    _DWORD v13[2] = sub_10006123C;
    v13[3] = &unk_1002DB800;
    v13[4] = a1[4];
    id v14 = v2;
    [v4 enumerateObjectsUsingBlock:v13];

    id v5 = 0;
  }
  else
  {
    uint64_t v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_10023F9F0();
    }

    id v5 = +[NSError errorWithDomain:@"com.apple.icloud.findmydeviced.fmdbluetoothmanager.getaccessories" code:1 userInfo:0];
  }
  id v7 = (void *)a1[5];
  if (v7)
  {
    long long v8 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100061698;
    block[3] = &unk_1002DB828;
    id v12 = v7;
    id v10 = v3;
    id v11 = v5;
    dispatch_async(v8, block);
  }
}

void sub_10006123C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 conformsToProtocol:&OBJC_PROTOCOL___FMDBluetoothFrameworkDevice])
  {
    if ([v3 isTemporaryPaired])
    {
      uint64_t v4 = sub_100004238();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v25 = v3;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "BluetoothManager.pairedDevices Ignoring shared device %@", buf, 0xCu);
      }
    }
    else
    {
      uint64_t v4 = [*(id *)(a1 + 32) bluetoothManagerDeviceForBluetoothDevice:v3];
      id v5 = [[FMDBluetoothAccessory alloc] initWithBluetoothManagerDevice:v4];
      uint64_t v6 = [*(id *)(a1 + 32) supportedAccessoryRegistry];
      id v7 = [v6 assetsForAccessory:v5];
      long long v8 = [v7 fm_filter:&stru_1002DB7B0];
      id v9 = [v8 firstObject];

      [(FMDBluetoothAccessory *)v5 updateAudioAsset:v9];
      id v10 = [(FMDBluetoothAccessory *)v5 address];
      id v11 = +[NSData dataWithMACAddressString:v10];

      if (v11)
      {
        id v12 = objc_opt_new();
        uint64_t v13 = [v12 ownerSession];

        id v14 = [objc_alloc((Class)FMSynchronizer) initWithDescription:@"SP-BA-UUID" andTimeout:5.0];
        uint64_t v15 = sub_100004238();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          id v16 = [(FMDBluetoothAccessory *)v5 address];
          *(_DWORD *)buf = 138412290;
          id v25 = v16;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Retrieving baUUID for MAC: %@", buf, 0xCu);
        }
        uint64_t v18 = _NSConcreteStackBlock;
        uint64_t v19 = 3221225472;
        __int16 v20 = sub_100061570;
        id v21 = &unk_1002DB7D8;
        id v22 = v5;
        id v23 = v14;
        id v17 = v14;
        [v13 beaconingIdentifierForMACAddress:v11 completion:&v18];
        [v17 wait:v18, v19, v20, v21];
      }
      [*(id *)(a1 + 40) addObject:v5];
    }
  }
  else
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_10023FA24((uint64_t)v3, v4);
    }
  }
}

BOOL sub_10006154C(id a1, FMDAsset *a2)
{
  return [(FMDAsset *)a2 assetType] == (id)1;
}

void sub_100061570(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [v3 UUIDString];
    uint64_t v6 = [*(id *)(a1 + 32) name];
    id v7 = [*(id *)(a1 + 32) address];
    int v8 = 138412802;
    id v9 = v5;
    __int16 v10 = 2112;
    id v11 = v6;
    __int16 v12 = 2112;
    uint64_t v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Received baUUID: %@ for %@, %@", (uint8_t *)&v8, 0x20u);
  }
  if (v3) {
    [*(id *)(a1 + 32) updateWithBeaconingIdentifier:v3];
  }
  [*(id *)(a1 + 40) signal];
}

uint64_t sub_100061698(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

id sub_1000619B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) bluetoothManagerDidUpdateDevice:*(void *)(a1 + 40)];
}

id sub_100061C48(uint64_t a1)
{
  return [*(id *)(a1 + 32) bluetoothManagerDidConnectDevice:*(void *)(a1 + 40)];
}

id sub_100061ED8(uint64_t a1)
{
  return [*(id *)(a1 + 32) bluetoothManagerDidDisconnectDevice:*(void *)(a1 + 40)];
}

void sub_10006213C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v5 - 88));
  _Unwind_Resume(a1);
}

void sub_100062188(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = [WeakRetained bluetoothDiscoveryQueue];
  if (v5)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100062248;
    v6[3] = &unk_1002D93F0;
    id v7 = v3;
    id v8 = WeakRetained;
    dispatch_async(v5, v6);
  }
}

id sub_100062248(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothManager didDiscoverDevice %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 40) didDiscoverDevice:*(void *)(a1 + 32)];
}

void sub_1000622F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  int v5 = [WeakRetained bluetoothDiscoveryQueue];
  if (v5)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000623B8;
    v6[3] = &unk_1002D93F0;
    id v7 = v3;
    id v8 = WeakRetained;
    dispatch_async(v5, v6);
  }
}

id sub_1000623B8(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothManager didLoseDevice %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 40) didLoseDevice:*(void *)(a1 + 32)];
}

void sub_100062468(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained bluetoothDiscoveryQueue];
  uint64_t v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100062504;
    block[3] = &unk_1002D9378;
    void block[4] = WeakRetained;
    dispatch_async(v2, block);
  }
}

id sub_100062504(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothManager discovery ended - setting all channels inactive.", v4, 2u);
  }

  return [*(id *)(a1 + 32) setAllAudioChannelsActive:0];
}

void sub_10006257C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained bluetoothDiscoveryQueue];
  uint64_t v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100062618;
    block[3] = &unk_1002D9378;
    void block[4] = WeakRetained;
    dispatch_async(v2, block);
  }
}

id sub_100062618(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BluetoothManager discovery started - setting all channels active.", v4, 2u);
  }

  return [*(id *)(a1 + 32) setAllAudioChannelsActive:1];
}

void sub_100062740(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v7 = a3;
  int v5 = [v7 bluetoothDevice];
  id v6 = [v4 profileForBluetoothManagerDevice:v5];

  [*(id *)(a1 + 32) setInternalDeviceAudioChannels:v7 profile:v6 active:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100062964(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[FMDAudioChannelStatus alloc] initWithName:v3 active:*(unsigned __int8 *)(a1 + 40)];

  [*(id *)(a1 + 32) addAudioChannelStatus:v4];
}

void sub_100062B4C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v6 = [[FMDBLEBeacon alloc] initWithConfiguration:v4];
  [(FMDBLEBeacon *)v6 setActive:*(unsigned __int8 *)(a1 + 40)];
  [*(id *)(a1 + 32) addBLEBeacon:v6];
  int v5 = [[FMDAudioChannelStatus alloc] initWithConfiguration:v4];

  [(FMDBLEBeacon *)v5 setActive:*(unsigned __int8 *)(a1 + 40)];
  [*(id *)(a1 + 32) addAudioChannelStatus:v5];
}

void sub_100062D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100062D68(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) bluetoothAddress];
  id v3 = [v2 fm_MACAddressString];

  if (v3 && [*(id *)(a1 + 40) available])
  {
    id v4 = [*(id *)(a1 + 40) pairedDevices];
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v5 = [v4 countByEnumeratingWithState:&v17 objects:v23 count:16];
    if (!v5) {
      goto LABEL_19;
    }
    id v7 = v5;
    uint64_t v8 = *(void *)v18;
    *(void *)&long long v6 = 138412290;
    long long v16 = v6;
    while (1)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v18 != v8) {
          objc_enumerationMutation(v4);
        }
        __int16 v10 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (objc_msgSend(v10, "conformsToProtocol:", &OBJC_PROTOCOL___FMDBluetoothFrameworkDevice, v16))
        {
          if ([v10 isTemporaryPaired])
          {
            id v11 = sub_100004238();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = v16;
              id v22 = v10;
              _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "BluetoothManager.pairedDevices ignoring temporary device - %@", buf, 0xCu);
            }
          }
          else
          {
            __int16 v12 = [v10 address];
            unsigned int v13 = [v12 isEqualToString:v3];

            if (!v13) {
              continue;
            }
            uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8);
            id v15 = v10;
            id v11 = *(NSObject **)(v14 + 40);
            *(void *)(v14 + 40) = v15;
          }
        }
        else
        {
          id v11 = sub_100004238();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v16;
            id v22 = v10;
            _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "BluetoothManager.pairedDevices unexpected object type %@", buf, 0xCu);
          }
        }
      }
      id v7 = [v4 countByEnumeratingWithState:&v17 objects:v23 count:16];
      if (!v7)
      {
LABEL_19:

        break;
      }
    }
  }
}

void sub_100063158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100063170(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = [*(id *)(a1 + 32) _bluetoothManagerDeviceForBluetoothDevice:*(void *)(a1 + 40)];

  return _objc_release_x1();
}

void sub_100063E70(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v7 channelName];
    id v5 = [v3 containsObject:v4];

    long long v6 = +[NSNumber numberWithBool:v5];
    [v7 setPlayingSound:v6];
  }
  else
  {
    [v7 setPlayingSound:0];
  }
}

void sub_100064360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000643A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000643B8(uint64_t a1)
{
}

void sub_1000643C0(uint64_t a1, char a2, id obj)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
  id v6 = obj;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id sub_1000668D4(uint64_t a1, void *a2)
{
  return [a2 updatedLocations:*(void *)(a1 + 32) reason:*(void *)(a1 + 40)];
}

void sub_100066AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak(v22);
  objc_destroyWeak((id *)(v24 - 72));
  _Unwind_Resume(a1);
}

void sub_100066B24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v7 = (id *)(a1 + 32);
  id v8 = a5;
  id v9 = a3;
  id WeakRetained = objc_loadWeakRetained(v7);
  [WeakRetained logPublishedLocation:v9 reason:a4 publisher:v8];
}

void sub_100066BA4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = sub_100004238();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FMCompareLocatorPublisher publishing to primary publisher.", v12, 2u);
  }

  uint64_t v10 = *(void *)(a1 + 32);
  if (v10) {
    (*(void (**)(uint64_t, id, id, uint64_t))(v10 + 16))(v10, v7, v8, a4);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100066C94(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100066D38;
  v6[3] = &unk_1002DBA48;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  [v5 startPublishingWithBlock:v6];
}

uint64_t sub_100066D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), a2, a3, a4, *(void *)(a1 + 32));
}

id sub_100066E30(uint64_t a1, void *a2)
{
  return [a2 setStartThreshold:*(void *)(a1 + 32)];
}

id sub_100066F20(uint64_t a1, void *a2)
{
  return [a2 setEndThreshold:*(void *)(a1 + 32)];
}

id sub_100067010(uint64_t a1, void *a2)
{
  return [a2 setDecayFactor:*(void *)(a1 + 32)];
}

id sub_100067100(uint64_t a1, void *a2)
{
  return [a2 setMinimumDistance:*(void *)(a1 + 32)];
}

id sub_1000671F0(uint64_t a1, void *a2)
{
  return [a2 setPublishTimeInterval:*(void *)(a1 + 32)];
}

id sub_1000672E0(uint64_t a1, void *a2)
{
  return [a2 setCachedLocationValidityTimeInterval:*(void *)(a1 + 32)];
}

uint64_t sub_100067654(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000676E0(id a1, FMLocatorPublishing *a2)
{
}

void sub_100067B70(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_10023FC9C(a1, v2);
  }

  id v3 = [*(id *)(a1 + 40) delegates];
  [v3 addPointer:*(void *)(a1 + 32)];
}

void sub_100067C60(uint64_t a1)
{
  uint64_t v2 = +[NSFileManager defaultManager];
  id v3 = [(id)objc_opt_class() defaultStorageLocation];
  id v7 = 0;
  [v2 removeItemAtURL:v3 error:&v7];
  id v4 = v7;

  if (v4 && (objc_msgSend(v4, "fm_isFileNotFoundError") & 1) == 0)
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10023FD18(v4, v5);
    }
  }
  id v6 = objc_opt_new();
  [*(id *)(a1 + 32) setAccessoriesByIdentifier:v6];
}

void sub_100067E40(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100067E54(id *a1)
{
  uint64_t v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v4 = [WeakRetained accessoriesByIdentifier];
  id v5 = [a1[4] accessoryIdentifier];
  id v6 = [v4 objectForKeyedSubscript:v5];

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v7 = a1[5];
  id v8 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = *(void *)v18;
    while (2)
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v18 != v10) {
          objc_enumerationMutation(v7);
        }
        uint64_t v12 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if ([v12 assetType] == (id)1
          && [v6 conformsToProtocol:&OBJC_PROTOCOL___FMDAudioAccessory])
        {
          unsigned __int8 v13 = [v6 updateAudioAsset:v12];

          if (v13)
          {
            v14[0] = _NSConcreteStackBlock;
            v14[1] = 3221225472;
            v14[2] = sub_100068060;
            v14[3] = &unk_1002D9238;
            objc_copyWeak(&v16, v2);
            id v15 = a1[4];
            dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

            objc_destroyWeak(&v16);
          }
          goto LABEL_13;
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v17 objects:v21 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }

LABEL_13:
}

void sub_100068060(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating assets.", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained accessoryDidUpdate:*(void *)(a1 + 32)];
}

void sub_100068220(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100068234(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [WeakRetained accessoriesByIdentifier];
  id v4 = [*(id *)(a1 + 32) accessoryIdentifier];
  id v5 = [v3 objectForKeyedSubscript:v4];

  unsigned __int8 v6 = [v5 conformsToProtocol:&OBJC_PROTOCOL___FMDAudioAccessory];
  id v7 = v5;
  if ((v6 & 1) == 0)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      unsigned __int8 v8 = 0;
      goto LABEL_6;
    }
    id v7 = *(void **)(a1 + 32);
  }
  unsigned __int8 v8 = [v7 updatePlaybackChannels:*(void *)(a1 + 40)];
LABEL_6:
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100068384;
  v10[3] = &unk_1002DBB48;
  unsigned __int8 v13 = v8;
  void v10[4] = WeakRetained;
  id v11 = v5;
  id v12 = *(id *)(a1 + 48);
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

uint64_t sub_100068384(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    uint64_t v2 = sub_100004238();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating playbackChannels.", v4, 2u);
    }

    [*(id *)(a1 + 32) accessoryDidUpdate:*(void *)(a1 + 40)];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1000684F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10006851C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained dataSources];
  [v2 addObjectsFromArray:*(void *)(a1 + 32)];
}

void sub_100068664(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100068688(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained dataSources];
  [v2 addObject:*(void *)(a1 + 32)];
}

void sub_1000687A0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000687B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained computeAccessoryRegistry];
}

void sub_100068D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100068D58(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100068D68(uint64_t a1)
{
}

void sub_100068D70(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) delegates];
  uint64_t v2 = [v6 allObjects];
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100068EC4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100068ED8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained accessoriesByIdentifier];
  id v3 = [v2 allValues];
  id v4 = [v3 copy];

  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v4);
  }
}

void sub_100069438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v27 - 176), 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100069494(uint64_t a1, void *a2)
{
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100069560;
  v9[3] = &unk_1002DBBC0;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = *(void **)(a1 + 48);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = v6;
  long long v8 = *(_OWORD *)(a1 + 56);
  id v7 = (id)v8;
  long long v13 = v8;
  uint64_t v14 = *(void *)(a1 + 72);
  [a2 getAccessoriesWithCompletion:v9];
}

void sub_100069560(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v9 = *(void *)(v7 + 40);
    long long v8 = (id *)(v7 + 40);
    if (!v9) {
      objc_storeStrong(v8, a3);
    }
  }
  else
  {
    [*(id *)(a1 + 32) addObjectsFromArray:v5];
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    long long v13 = sub_10006966C;
    uint64_t v14 = &unk_1002DBB98;
    id v10 = *(void **)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 40);
    id v16 = v10;
    [v5 enumerateObjectsUsingBlock:&v11];
    if (!--*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)) {
      [*(id *)(a1 + 56) signal:v11, v12, v13, v14, v15];
    }
  }
}

void sub_10006966C(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "supportsAccessory:"))
  {
    id v3 = *(void **)(a1 + 40);
    id v4 = [v5 accessoryIdentifier];
    [v3 addObject:v4];
  }
}

void sub_1000696E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained accessoryQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100069778;
  block[3] = &unk_1002D9378;
  void block[4] = WeakRetained;
  dispatch_async(v2, block);
}

id sub_100069778(uint64_t a1)
{
  return [*(id *)(a1 + 32) computeAccessoryRegistry];
}

void sub_100069780(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (([*(id *)(a1 + 32) containsObject:a2] & 1) == 0
    && [v5 category] != (id)3)
  {
    [*(id *)(a1 + 40) _removeAccessory:v5];
  }
}

id sub_1000697F4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateAccessory:a2 previouslyPaired:0];
}

void sub_100069910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100069928(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) accessoriesByIdentifier];
  uint64_t v2 = [v5 allValues];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100069B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100069B98(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = [*(id *)(a1 + 32) accessoriesByIdentifier];

  return _objc_release_x1();
}

void sub_100069F24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained accessoryDidPair:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) postConnectionStatusChangeNotification];
}

void sub_10006A13C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained accessoryDidUnpair:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) postConnectionStatusChangeNotification];
}

void sub_10006A478(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  if (*(unsigned char *)(a1 + 56))
  {
    [WeakRetained accessoryDidUpdate:*(void *)(a1 + 32)];
    id v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory updated %@", (uint8_t *)&v10, 0xCu);
    }
  }
  if (*(unsigned char *)(a1 + 57))
  {
    id v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory disconnected %@", (uint8_t *)&v10, 0xCu);
    }

    [v3 accessoryDidDisconnect:*(void *)(a1 + 32)];
  }
  else if (*(unsigned char *)(a1 + 58))
  {
    long long v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138412290;
      uint64_t v11 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry : accessory connected %@", (uint8_t *)&v10, 0xCu);
    }

    [v3 accessoryDidConnect:*(void *)(a1 + 32)];
  }
  [*(id *)(a1 + 40) postConnectionStatusChangeNotification];
}

id sub_10006A71C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _forceUpdateAccessory:*(void *)(a1 + 40)];
}

void sub_10006A970(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10006A984(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateAccessory:*(void *)(a1 + 32) previouslyPaired:0];
}

void sub_10006AAB8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10006AACC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _removeAccessory:*(void *)(a1 + 32)];
}

void sub_10006ABEC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accessoriesByIdentifier];
  uint64_t v3 = [v2 allValues];
  id v4 = [v3 copy];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10006ACA4;
  v5[3] = &unk_1002DBC38;
  void v5[4] = *(void *)(a1 + 32);
  [v4 enumerateObjectsUsingBlock:v5];
}

void sub_10006ACA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 address];
  uint64_t v5 = +[NSData dataWithMACAddressString:v4];

  if (v5)
  {
    id v6 = objc_opt_new();
    uint64_t v7 = [v6 ownerSession];

    id v8 = [objc_alloc((Class)FMSynchronizer) initWithDescription:@"SP-BA-UUID" andTimeout:5.0];
    uint64_t v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = [v3 address];
      *(_DWORD *)buf = 138412290;
      long long v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Retrieving baUUID for MAC: %@", buf, 0xCu);
    }
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10006AE80;
    v14[3] = &unk_1002DBC88;
    id v11 = v3;
    uint64_t v12 = *(void *)(a1 + 32);
    id v15 = v11;
    uint64_t v16 = v12;
    id v17 = v8;
    id v13 = v8;
    [v7 beaconingIdentifierForMACAddress:v5 completion:v14];
    [v13 wait];
  }
}

void sub_10006AE80(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = [v3 UUIDString];
    id v6 = [a1[4] name];
    uint64_t v7 = [a1[4] address];
    int v10 = 138412802;
    id v11 = v5;
    __int16 v12 = 2112;
    id v13 = v6;
    __int16 v14 = 2112;
    id v15 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Received baUUID: %@ for %@, %@", (uint8_t *)&v10, 0x20u);
  }
  if (v3)
  {
    id v8 = [a1[4] baUUID];
    unsigned __int8 v9 = [v3 isEqual:v8];

    if ((v9 & 1) == 0)
    {
      [a1[4] updateWithBeaconingIdentifier:v3];
      [a1[5] updateAccessory:a1[4]];
    }
  }
  [a1[6] signal];
}

void sub_10006B09C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10006B0B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained dataArchiver];
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  unsigned __int8 v9 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v4, v5, v6, v7, v8, objc_opt_class(), 0);
  id v18 = 0;
  int v10 = [v3 readDictionaryAndClasses:v9 error:&v18];
  id v11 = v18;
  __int16 v12 = &__NSDictionary0__struct;
  if (v10) {
    __int16 v12 = v10;
  }
  id v13 = v12;

  if (v11 && (objc_msgSend(v11, "fm_isFileNotFoundError") & 1) == 0)
  {
    __int16 v14 = sub_100004238();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_10023FEEC();
    }

    id v15 = +[FMDEventLoggerGeneral sharedInstance];
    [v15 sendError:v11 forEventName:@"FMDAccessoryRegistryFailedReadEventName"];
  }
  uint64_t v16 = [v13 allValues];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  id v17[2] = sub_10006B2B8;
  v17[3] = &unk_1002DBC38;
  v17[4] = *(void *)(a1 + 32);
  [v16 enumerateObjectsUsingBlock:v17];
}

id sub_10006B2B8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateAccessory:a2 previouslyPaired:1];
}

id *sub_10006B688(id *result)
{
  if (*((unsigned char *)result + 48))
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_100004238();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      v3[0] = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "FMDAccessoryRegistry is updating channel availability.", (uint8_t *)v3, 2u);
    }

    return (id *)[v1[4] accessoryDidUpdate:v1[5]];
  }
  return result;
}

void sub_10006C0C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      unsigned __int8 v9 = [v3 fm_logID];
      int v16 = 138412546;
      id v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      int v10 = "%@: successful with status %ld";
      id v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        unsigned __int8 v9 = [v3 fm_logID];
        int v16 = 138412290;
        id v17 = v9;
        int v10 = "%@: Cancelled";
        id v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      unsigned __int8 v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      __int16 v14 = [v3 httpResponseError];
      int v16 = 138412802;
      id v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_10006C368(id a1)
{
  qword_10031E980 = objc_alloc_init(FMDProtectedContextManager);

  _objc_release_x1();
}

void sub_10006C6C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006C6FC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10006C70C(uint64_t a1)
{
}

void sub_10006C714(uint64_t *a1)
{
  uint64_t v2 = +[FMPreferencesUtil stringForKey:a1[4] inDomain:kFMDNotBackedUpPrefDomain];
  if (v2)
  {
    id v3 = [objc_alloc((Class)NSUUID) initWithUUIDString:v2];
    uint64_t v4 = *(void *)(a1[5] + 8);
    uint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    unsigned int v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1002400E8(a1 + 4, (uint64_t)(a1 + 5), v6);
    }

    uint64_t v7 = [[FMDProtectedContext alloc] initWithContextKey:a1[4] contextUUID:*(void *)(*(void *)(a1[5] + 8) + 40)];
    uint64_t v8 = *(void *)(a1[7] + 8);
    id obj = *(id *)(v8 + 40);
    uint64_t v9 = [(FMDProtectedContext *)v7 context:&obj];
    objc_storeStrong((id *)(v8 + 40), obj);
    uint64_t v10 = *(void *)(a1[6] + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
}

void sub_10006C978(uint64_t a1)
{
  [*(id *)(a1 + 32) setProtectionClass:*(void *)(a1 + 56)];
  [*(id *)(a1 + 32) saveContext:*(void *)(a1 + 40)];
  id v3 = [*(id *)(a1 + 32) contextUUID];
  uint64_t v2 = [v3 UUIDString];
  +[FMPreferencesUtil setString:v2 forKey:*(void *)(a1 + 48) inDomain:kFMDNotBackedUpPrefDomain];
}

void sub_10006CB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006CB84(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 32);
  id v3 = +[FMDProtectedContext directoryURLForContextKey:*(void *)(a1 + 32)];
  uint64_t v4 = +[FMPreferencesUtil stringForKey:*v2 inDomain:kFMDNotBackedUpPrefDomain];
  if (v4)
  {
    id v5 = [objc_alloc((Class)NSUUID) initWithUUIDString:v4];
    if ([v5 isEqual:*(void *)(a1 + 40)])
    {
      unsigned int v6 = sub_100004238();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
        sub_100240180((uint64_t *)(a1 + 32), v6);
      }

      +[FMPreferencesUtil removeKey:*(void *)(a1 + 32) inDomain:kFMDNotBackedUpPrefDomain];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 48) cleanOutCurrentContextDirectoryURL:v3 preservingContextUUID:0 obliterateDirectory:*(unsigned __int8 *)(a1 + 64)];
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
      uint64_t v7 = sub_100004238();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 40);
        int v9 = 138412290;
        uint64_t v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Trying to delete an outdated protected context %@", (uint8_t *)&v9, 0xCu);
      }
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [*(id *)(a1 + 48) cleanOutCurrentContextDirectoryURL:v3 preservingContextUUID:0 obliterateDirectory:*(unsigned __int8 *)(a1 + 64)];
  }
}

void sub_10006CE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006CE48(uint64_t a1)
{
  id v2 = +[FMDProtectedContext directoryURLForContextKey:*(void *)(a1 + 32)];
  +[FMPreferencesUtil removeKey:*(void *)(a1 + 32) inDomain:kFMDNotBackedUpPrefDomain];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 40) cleanOutCurrentContextDirectoryURL:v2 preservingContextUUID:0 obliterateDirectory:1];
}

void sub_10006D05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006D078(uint64_t a1)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "FMDProtectedContextManager start cleanupblock", buf, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained _startCleaningEmptyFolders])
  {
    +[FMPreferencesUtil setBool:1 forKey:@"kFMDProtectedContextCleanedUpEmptyFolders" inDomain:kFMDNotBackedUpPrefDomain];
    +[FMPreferencesUtil synchronizeDomain:kFMDNotBackedUpPrefDomain];
    uint64_t v4 = +[FMXPCNotificationsUtil sharedInstance];
    unsigned int v5 = [v4 isHandlerRegisteredForDarwinNotification:*(void *)(a1 + 32)];

    if (v5)
    {
      unsigned int v6 = +[FMXPCNotificationsUtil sharedInstance];
      [v6 deregisterHandlerForDarwinNotification:*(void *)(a1 + 32)];
    }
    uint64_t v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v11 = 0;
      uint64_t v8 = "FMDProtectedContextManager finished cleaning up empty folders";
      int v9 = (uint8_t *)&v11;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v8, v9, 2u);
    }
  }
  else
  {
    uint64_t v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v10 = 0;
      uint64_t v8 = "FMDProtectedContextManager failed to clean up empty folders";
      int v9 = (uint8_t *)&v10;
      goto LABEL_10;
    }
  }
}

void sub_10006D334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  __int16 v18 = v17;
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_10006D368(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  if (*(unsigned char *)(v2 + 24))
  {
    uint64_t v4 = (id *)(a1 + 40);
    id v5 = a2;
    id WeakRetained = objc_loadWeakRetained(v4);
    unsigned int v6 = [v5 lastPathComponent];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [WeakRetained cleanupAllContextsForKey:v6];
  }
  else
  {
    *(unsigned char *)(v2 + 24) = 0;
  }
}

void sub_10006D520(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [[*(id *)(a1 + 32) _enumeratorForDirectoryURL:];
  uint64_t v4 = [v3 allObjects];
  id v5 = [v4 count];

  if (!v5) {
    [*(id *)(a1 + 40) addObject:v6];
  }
}

void sub_10006D894(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasPrefix:*(void *)(a1 + 32)]) {
    [*(id *)(a1 + 40) addObject:v3];
  }
}

uint64_t sub_10006DA04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5 == 1)
  {
    __int16 v11 = v3;
    id v6 = [*(id *)(a1 + 40) _enumeratorForDirectoryURL:v3];
    uint64_t v7 = [v6 allObjects];
    id v8 = [v7 count];

    if (v8)
    {
      int v9 = [v11 lastPathComponent];
      [*(id *)(a1 + 32) addObject:v9];
    }
  }
  else
  {
    if (v5) {
      goto LABEL_7;
    }
    __int16 v11 = v3;
    id v6 = [v3 lastPathComponent];
    [*(id *)(a1 + 32) addObject:v6];
  }

  id v4 = v11;
LABEL_7:

  return _objc_release_x1(v3, v4);
}

BOOL sub_10006DBB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    uint64_t v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      id v11 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Could not enumerate folder %@ %@", (uint8_t *)&v8, 0x16u);
    }
  }
  return v4 == 0;
}

void sub_10006DD74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006DD8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  id v8 = 0;
  [v4 removeItemAtURL:v3 error:&v8];
  id v5 = v8;
  uint64_t v6 = v5;
  if (!v5)
  {
    uint64_t v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG)) {
      sub_1002401FC((uint64_t)v3, v7);
    }
    goto LABEL_7;
  }
  if ((objc_msgSend(v5, "fm_isFileNotFoundError") & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    uint64_t v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      __int16 v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Unable to delete protected context file %@", buf, 0xCu);
    }
LABEL_7:
  }
}

BOOL sub_10006E0D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v8 = 138412546;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      id v11 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Could not enumerate folder %@ %@", (uint8_t *)&v8, 0x16u);
    }
  }
  return v4 == 0;
}

void sub_10006E404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006E430(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = *(void *)(a1 + 32);
  id v6 = WeakRetained;
  if (v3)
  {
    (*(void (**)(void))(v3 + 16))();
    id WeakRetained = v6;
  }
  id v4 = [WeakRetained completion];

  if (v4)
  {
    id v5 = [v6 completion];
    v5[2]();
  }
}

void sub_10006F204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006F22C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100059878();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 httpResponseStatus];
    uint64_t v7 = [v3 httpResponseBody];
    int v8 = [v3 httpResponseHeaders];
    int v17 = 138413058;
    id v18 = v3;
    __int16 v19 = 2048;
    id v20 = v6;
    __int16 v21 = 2112;
    id v22 = v7;
    __int16 v23 = 2112;
    uint64_t v24 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v17, 0x2Au);
  }
  uint64_t v9 = [v3 httpResponseError];
  if (v9
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {
  }
  else if (([v3 cancelled] & 1) == 0)
  {
    id v11 = [v3 httpResponseBody];
    uint64_t v13 = [WeakRetained registry];
    [v13 updateConfigurations:v11];
    goto LABEL_12;
  }
  unsigned int v10 = [v3 cancelled];
  id v11 = sub_100059878();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (!v12) {
      goto LABEL_13;
    }
    uint64_t v13 = [v3 fm_logID];
    int v17 = 138412290;
    id v18 = v13;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v17, 0xCu);
  }
  else
  {
    if (!v12) {
      goto LABEL_13;
    }
    uint64_t v13 = [v3 fm_logID];
    id v14 = [v3 httpResponseStatus];
    uint64_t v15 = [v3 httpResponseError];
    int v17 = 138412802;
    id v18 = v13;
    __int16 v19 = 2048;
    id v20 = v14;
    __int16 v21 = 2112;
    id v22 = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v17, 0x20u);
  }
LABEL_12:

LABEL_13:
  uint64_t v16 = *(void *)(a1 + 32);
  if (v16) {
    (*(void (**)(void))(v16 + 16))();
  }
}

void sub_10006FE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10006FE38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10006FE48(uint64_t a1)
{
}

void sub_10006FE50(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  if ([v7 primary])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_1000714DC(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [v12 identifier];
  id v4 = [*(id *)(a1 + 32) beacons];
  id v5 = [v4 objectForKeyedSubscript:v3];

  id v6 = [v12 updateDate];
  [v6 timeIntervalSinceReferenceDate];
  double v8 = v7;
  uint64_t v9 = [v5 updateDate];
  [v9 timeIntervalSinceReferenceDate];
  double v11 = v10;

  if (v8 > v11) {
    [*(id *)(a1 + 40) setObject:v12 forKeyedSubscript:v3];
  }
}

void sub_100071744(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 channelName];
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:v4];
}

void sub_100071AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100071AC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100071AD4(uint64_t a1)
{
}

void sub_100071ADC(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  if ([v9 primary])
  {
    uint64_t v6 = [v9 updateDate];
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    double v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    *a4 = 1;
  }
}

void sub_100071C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100071C64(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v12 = a2;
  if ([v12 audioState] != (id)1)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
  if ([v12 availability] == (id)1)
  {
    uint64_t v6 = [v12 muted];
    unsigned __int8 v7 = [v6 BOOLValue];

    if ((v7 & 1) == 0)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
  if ([v12 availability] == (id)2)
  {
    unsigned __int8 v8 = 1;
  }
  else if ([v12 availability] == (id)1)
  {
    id v9 = [v12 muted];
    unsigned __int8 v8 = [v9 BOOLValue];
  }
  else
  {
    unsigned __int8 v8 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  if (*(unsigned char *)(v10 + 24)) {
    unsigned __int8 v11 = v8;
  }
  else {
    unsigned __int8 v11 = 0;
  }
  *(unsigned char *)(v10 + 24) = v11;
}

void sub_100071E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100071E5C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  uint64_t v6 = [v11 playingSound];
  if (v6)
  {
    unsigned __int8 v7 = (void *)v6;
    unsigned __int8 v8 = [v11 playingSound];
    unsigned int v9 = [v8 BOOLValue];

    if (v9)
    {
      uint64_t v10 = [v11 playingSound];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v10 BOOLValue];
    }
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

void sub_10007212C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100072150(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  id v8 = a2;
  id v9 = [v6 audioSafetyStatusForAirPods:v8 knownStatus:v7];
  id v10 = [*(id *)(a1 + 32) audioSafetyStatusForStereoPair:v8];

  if (v9 <= v10) {
    id v11 = v10;
  }
  else {
    id v11 = v9;
  }
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v11;
  *a4 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) > 2uLL;
}

void sub_10007266C(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v7 channelName];
    id v5 = [v3 containsObject:v4];

    uint64_t v6 = +[NSNumber numberWithBool:v5];
    [v7 setPlayingSound:v6];
  }
  else
  {
    [v7 setPlayingSound:0];
  }
}

id sub_1000754E8()
{
  return +[NSTimeZone resetSystemTimeZone];
}

void sub_1000757D8(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("SystemConfig-deviceName", 0);
  uint64_t v2 = qword_10031E998;
  qword_10031E998 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

uint64_t sub_100075818(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100075828(uint64_t a1)
{
}

void sub_100075830(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[112])
  {
    id v3 = (void *)qword_10031E990;
    id v4 = (void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  else
  {
    uint64_t v5 = [v2 _stringGestaltQueryForKey:@"UserAssignedDeviceName"];
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    id v3 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    id v4 = (void **)&qword_10031E990;
  }
  id v8 = v3;
  id v9 = *v4;
  *id v4 = v8;

  *(unsigned char *)(*(void *)(a1 + 32) + 112) = 1;
}

uint64_t sub_100075AA4(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"DeviceClass"];
  uint64_t v2 = qword_10031E9A8;
  qword_10031E9A8 = v1;

  return _objc_release_x1(v1, v2);
}

void sub_100075B78()
{
  v0 = (void *)MGCopyAnswerWithError();
  if (v0 && (unsigned int v1 = [v0 intValue] - 1, v1 <= 0xA)) {
    uint64_t v2 = qword_10026A4A0[v1];
  }
  else {
    uint64_t v2 = 0;
  }
  qword_10031E9B8 = v2;
}

uint64_t sub_100075CA0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"UniqueDeviceID"];
  uint64_t v2 = qword_10031E9C8;
  qword_10031E9C8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100075D78(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"ProductType"];
  uint64_t v2 = qword_10031E9D8;
  qword_10031E9D8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100075E50(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"ProductName"];
  uint64_t v2 = qword_10031E9E8;
  qword_10031E9E8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100075F28(uint64_t a1)
{
  uint64_t v2 = +[FMDPreferencesMgr overriddenOSVersion];
  if (!v2)
  {
    uint64_t v2 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"ProductVersion"];
  }
  uint64_t v3 = qword_10031E9F8;
  qword_10031E9F8 = v2;

  return _objc_release_x1(v2, v3);
}

uint64_t sub_100076020(uint64_t a1)
{
  uint64_t v2 = +[FMDPreferencesMgr overriddenBuildVersion];
  if (!v2)
  {
    uint64_t v2 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"BuildVersion"];
  }
  uint64_t v3 = qword_10031EA08;
  qword_10031EA08 = v2;

  return _objc_release_x1(v2, v3);
}

uint64_t sub_100076118(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"ModelNumber"];
  uint64_t v2 = qword_10031EA18;
  qword_10031EA18 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_1000761F0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"RegionCode"];
  uint64_t v2 = qword_10031EA28;
  qword_10031EA28 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076430(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"DeviceColor"];
  uint64_t v2 = qword_10031EA38;
  qword_10031EA38 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076508(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"DeviceEnclosureColor"];
  uint64_t v2 = qword_10031EA48;
  qword_10031EA48 = v1;

  return _objc_release_x1(v1, v2);
}

void sub_1000765E0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"9N7qIucqhr0Cy2/Tk27/hw"];
  uint64_t v1 = [v3 stringValue];
  uint64_t v2 = (void *)qword_10031EA58;
  qword_10031EA58 = v1;
}

void sub_1000766D4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"NJsxTSI2WuD+13rxShXX9w"];
  uint64_t v1 = [v3 stringValue];
  uint64_t v2 = (void *)qword_10031EA68;
  qword_10031EA68 = v1;
}

void sub_1000767C8(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"CJcvxERO5v/3IWjDFKZKRw"];
  uint64_t v1 = [v3 stringValue];
  uint64_t v2 = (void *)qword_10031EA78;
  qword_10031EA78 = v1;
}

id sub_1000768B8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _BOOLGestaltQueryForKey:@"0dnM19zBqLw5ZPhIo4GEkg"];
  byte_10031EA88 = (char)result;
  return result;
}

id sub_100076974(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _BOOLGestaltQueryForKey:@"zxMIgVSILN6S5ee6MZhf+Q"];
  byte_10031EA98 = (char)result;
  return result;
}

uint64_t sub_100076A58(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"SerialNumber"];
  uint64_t v2 = qword_10031EAA8;
  qword_10031EAA8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076B30(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"ChipID"];
  uint64_t v2 = qword_10031EAB8;
  qword_10031EAB8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076C08(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"UniqueChipID"];
  uint64_t v2 = qword_10031EAC8;
  qword_10031EAC8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076CE0(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"WifiAddress"];
  uint64_t v2 = qword_10031EAD8;
  qword_10031EAD8 = v1;

  return _objc_release_x1(v1, v2);
}

uint64_t sub_100076DB8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) _stringGestaltQueryForKey:@"BluetoothAddress"];
  uint64_t v2 = qword_10031EAE8;
  qword_10031EAE8 = v1;

  return _objc_release_x1(v1, v2);
}

void sub_100076F7C(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("SystemConfig-currentPasscodeConstraint", 0);
  uint64_t v2 = qword_10031EB00;
  qword_10031EB00 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_100076FBC(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 113))
  {
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = dword_10031EAF8;
  }
  else
  {
    uint64_t v2 = +[MCProfileConnection sharedConnection];
    id v3 = [v2 effectiveValueForSetting:MCFeaturePasscodeKeyboardComplexity];
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 intValue];

    dword_10031EAF8 = *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 113) = 1;
}

void sub_100077254(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("SystemConfig-isPasscodeSet", 0);
  uint64_t v2 = qword_10031EB18;
  qword_10031EB18 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_100077294(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 114))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = byte_10031EB10;
  }
  else
  {
    uint64_t v2 = +[MCProfileConnection sharedConnection];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 isPasscodeSet];

    byte_10031EB10 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 114) = 1;
}

void sub_10007755C(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("SystemConfig-currentPasscodeConstraintStr", 0);
  uint64_t v2 = qword_10031EB30;
  qword_10031EB30 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10007759C(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) currentPasscodeConstraint];
  int v3 = v2;
  if (v2 == dword_10031D390)
  {
    id v4 = (void *)qword_10031EB28;
    uint64_t v5 = (void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  else
  {
    if (v2 == 2)
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
      id v7 = *(void **)(v6 + 40);
      CFStringRef v8 = @"fullKeyboard";
    }
    else if (v2 == 1)
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
      id v7 = *(void **)(v6 + 40);
      CFStringRef v8 = @"numericLong";
    }
    else
    {
      uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
      id v7 = *(void **)(v6 + 40);
      if (v2) {
        CFStringRef v8 = @"unknown";
      }
      else {
        CFStringRef v8 = @"simple";
      }
    }
    *(void *)(v6 + 40) = v8;

    id v4 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    uint64_t v5 = (void **)&qword_10031EB28;
  }
  id v9 = v4;
  id v10 = *v5;
  void *v5 = v9;

  dword_10031D390 = v3;
}

void sub_100077970(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _numberGestaltQueryForKey:@"nhGhVMyvrWYe9U2ltAUImg"];
  uint64_t v1 = [v3 stringValue];
  unsigned int v2 = (void *)qword_10031EB40;
  qword_10031EB40 = v1;
}

void sub_1000789F8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100078A24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100078A34(uint64_t a1)
{
}

void sub_100078A3C(void *a1, void *a2, void *a3)
{
  id v12 = a2;
  id v5 = a3;
  if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_isKindOfClass())
  {
    id v7 = (void *)a1[4];
    uint64_t v6 = (void *)a1[5];
    CFStringRef v8 = [*(id *)(*(void *)(a1[6] + 8) + 40) arrayByAddingObject:v12];
    id v9 = [v6 flattenedArrayFromObject:v5 parentIndices:v8];
    [v7 addObjectsFromArray:v9];
  }
  else
  {
    id v10 = (void *)a1[4];
    CFStringRef v8 = [*(id *)(*(void *)(a1[6] + 8) + 40) arrayByAddingObject:v12];
    id v9 = [v8 componentsJoinedByString:@"_"];
    id v11 = +[NSString stringWithFormat:@"%@_%@", v9, v5];
    [v10 addObject:v11];
  }
}

void sub_100078B74(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  id v6 = a2;
  id v7 = +[NSNumber numberWithUnsignedInteger:a3];
  id v10 = [v5 arrayByAddingObject:v7];

  CFStringRef v8 = *(void **)(a1 + 32);
  id v9 = [*(id *)(a1 + 40) flattenedArrayFromObject:v6 parentIndices:v10];

  [v8 addObjectsFromArray:v9];
}

void sub_10007994C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = [v4 embeddedAction];
    int v9 = 138412546;
    id v10 = v4;
    __int16 v11 = 2112;
    id v12 = v5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%@ Finished waiting. Will enqueue action %@", (uint8_t *)&v9, 0x16u);
  }
  id v6 = +[ActionManager sharedManager];
  id v7 = [*(id *)(a1 + 32) embeddedAction];
  id v8 = [v6 enqueueAction:v7];
}

void sub_10007A580(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100240854((uint64_t)v6, v7);
    }

    id v8 = [v6 description];
    goto LABEL_20;
  }
  int v9 = [v5 objectForKeyedSubscript:@"state"];
  unsigned __int8 v10 = [v9 isEqualToString:@"ready"];

  if (v10)
  {
    __int16 v11 = [v5 objectForKeyedSubscript:@"contextDump"];
    id v12 = [v11 objectForKeyedSubscript:@"self"];

    if (!v12)
    {
      id v20 = sub_100004238();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
        sub_1002405B0(v20);
      }
      goto LABEL_10;
    }
    uint64_t v13 = [v5 objectForKeyedSubscript:@"contextDump"];
    id v14 = [v13 objectForKeyedSubscript:@"self"];
    uint64_t v15 = [v14 objectForKeyedSubscript:@"dynamicInfo"];
    uint64_t v16 = [v15 objectForKeyedSubscript:@"included"];
    int v17 = [v5 objectForKeyedSubscript:@"contextDump"];
    id v18 = [v17 objectForKeyedSubscript:@"self"];
    __int16 v19 = [v18 objectForKeyedSubscript:@"peerID"];
    unsigned __int8 v28 = [v16 containsObject:v19];

    id v20 = sub_100004238();
    BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);
    if (v28)
    {
      if (v21) {
        sub_1002405F4(v20);
      }
LABEL_10:

      id v8 = 0;
      goto LABEL_20;
    }
    if (v21) {
      sub_100240638(v5, v20);
    }

    uint64_t v24 = [v5 objectForKeyedSubscript:@"contextDump"];
    id v25 = [v24 objectForKeyedSubscript:@"self"];
    uint64_t v26 = [v25 objectForKeyedSubscript:@"dynamicInfo"];
    uint64_t v27 = [v26 objectForKeyedSubscript:@"included"];
    id v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"self not in peer list. Peers: %ld", [v27 count]);
  }
  else
  {
    id v22 = sub_100004238();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
      sub_1002407B4(v5, v22);
    }

    __int16 v23 = [v5 objectForKeyedSubscript:@"state"];
    id v8 = +[NSString stringWithFormat:@"KeyState: %@", v23];
  }
LABEL_20:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10007C5F4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10007C69C;
  block[3] = &unk_1002DC028;
  id v2 = *(id *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  id v6 = v2;
  uint64_t v8 = v3;
  id v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10007C69C(void *a1)
{
  id v2 = +[FMDServiceProvider activeServiceProvider];
  id v5 = [v2 account];

  if ([v5 unregisterState])
  {
    uint64_t v3 = a1[5];
    if (v3) {
      (*(void (**)(uint64_t, void))(v3 + 16))(v3, 0);
    }
  }
  else
  {
    [v5 setUnregisterState:1];
    [v5 setOneTimeRemoveAuthToken:a1[4]];
    [v5 setFmipDisableContext:a1[6]];
    id v4 = +[FMDServiceProvider activeServiceProvider];
    [v4 removeAccount:v5 completion:a1[5]];
  }
}

void sub_10007C770(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id v2 = +[NSString stringWithFormat:@"FMIP account cannot be removed in ratchet."];
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = [*(id *)(a1 + 32) _errorForCode:9 message:v2];
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
  }
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Sending FMIP state change notification", v7, 2u);
  }

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, kFMIPStateDidChangeNotification, 0, 0, 1u);
}

uint64_t sub_10007C85C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10007C86C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10007C87C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10007C88C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10007C89C(uint64_t a1)
{
  id v2 = sub_100059CA0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Ratchet Permitted for this context: %lu. Allowing disable FMIP. Permission Granted, peforming unregister", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10007C954(uint64_t a1)
{
  id v2 = sub_100059CA0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "We are in a ratchet state %lu. Denying disable FMIP.", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10007CCD8(void *a1)
{
  id v3 = +[FMDServiceProvider activeServiceProvider];
  id v2 = [v3 account];
  [v2 setOneTimeRemoveAuthToken:a1[4]];
  [v3 disableFMIPForPairedDeviceWithUDID:a1[5] account:v2 andCompletion:a1[6]];
}

void sub_10007D01C(uint64_t a1)
{
  id v17 = (id)objc_opt_new();
  id v2 = [*(id *)(a1 + 32) username];
  [v17 setUsername:v2];

  id v3 = [*(id *)(a1 + 32) dsid];
  [v17 setDsid:v3];

  id v4 = [*(id *)(a1 + 32) oneTimeRemoveAuthToken];
  [v17 setOneTimeRemoveAuthToken:v4];

  int v5 = +[FMDServiceProvider activeServiceProvider];
  uint64_t v6 = [v5 account];
  id v7 = [*(id *)(a1 + 32) serverURL];
  uint64_t v8 = [v7 host];
  id v9 = [v8 length];

  if (v9)
  {
    unsigned __int8 v10 = [*(id *)(a1 + 32) serverURL];
    __int16 v11 = [v10 host];
    [v17 setServerHost:v11];
  }
  else
  {
    unsigned __int8 v10 = [v6 serverHost];
    [v17 setServerHost:v10];
  }

  id v12 = [*(id *)(a1 + 32) serverURL];
  uint64_t v13 = [v12 scheme];
  id v14 = [v13 length];

  if (v14)
  {
    uint64_t v15 = [*(id *)(a1 + 32) serverURL];
    uint64_t v16 = [v15 scheme];
    [v17 setServerProtocolScheme:v16];
  }
  else
  {
    uint64_t v15 = [v6 serverProtocolScheme];
    [v17 setServerProtocolScheme:v15];
  }

  [v5 disableFMIPForPairedDeviceWithUDID:*(void *)(a1 + 40) account:v17 andCompletion:*(void *)(a1 + 48)];
}

void sub_10007D61C(uint64_t a1)
{
  id v2 = +[FMDServiceProvider activeServiceProvider];
  id v3 = [v2 account];
  id v4 = [v3 accountAddTime];
  [v4 timeIntervalSinceReferenceDate];
  int v5 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");

  uint64_t v6 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyPairingID];
  id v7 = [*(id *)(a1 + 32) valueForProperty:NRDevicePropertyLocalPairingDataStorePath];
  id v8 = objc_alloc((Class)NPSDomainAccessor);
  id v9 = [v8 initWithDomain:kFMDWatchNotBackedUpPrefDomain pairingID:v6 pairingDataStore:v7];
  id v10 = [v9 synchronize];
  __int16 v11 = [v9 objectForKey:@"LastALCompletionInfo"];
  id v12 = [v11 objectForKeyedSubscript:@"LastIdentityTime"];

  if (v12)
  {
    id v12 = [v11 objectForKeyedSubscript:@"LastAccountAddTime"];
    id v13 = [v5 fm_isEqualToNumber:v12 withPrecision:0.1];
  }
  else
  {
    id v13 = 0;
  }
  id v14 = sub_100004238();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v16[0] = 67109634;
    v16[1] = v13;
    __int16 v17 = 2112;
    id v18 = v5;
    __int16 v19 = 2112;
    id v20 = v12;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "alCompleted : %d, currentAccountAddTime: %@, alAccountAddTime: %@", (uint8_t *)v16, 0x1Cu);
  }

  uint64_t v15 = *(void *)(a1 + 40);
  if (v15) {
    (*(void (**)(uint64_t, id, void))(v15 + 16))(v15, v13, 0);
  }
}

void sub_10007DAB0(void *a1)
{
  id v2 = +[FMDServiceProvider activeServiceProvider];
  [v2 markPairedDeviceWithUdid:a1[4] asMissingUsingToken:a1[5] withCompletion:a1[6]];
}

void sub_10007E2BC(uint64_t a1)
{
  id v2 = +[FMDServiceProvider activeServiceProvider];
  id v7 = [v2 account];

  if (v7)
  {
    id v3 = +[FMDServiceProvider activeServiceProvider];
    [v3 registerDeviceWithCause:@"enableActivationLock" force:0];
    [v3 syncFMIPStateToWatch];
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, kActivationLockAllowedMayHaveChangedNotification, 0, 0, 1u);

    int v5 = 0;
  }
  else
  {
    int v5 = +[NSError errorWithDomain:kFMDErrorDomain code:5 userInfo:0];
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);
  }
}

void sub_10007E9E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007EA14(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v7 = WeakRetained;
  if (a2)
  {
    int v5 = [WeakRetained _errorForCode:3 message:@"User auth failed"];
  }
  else
  {
    int v5 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v5);
  }
}

void sub_10007F4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a61, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&STACK[0x200], 8);
  _Block_object_dispose((const void *)(v67 - 160), 8);
  _Block_object_dispose((const void *)(v67 - 224), 8);
  _Block_object_dispose((const void *)(v67 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007F57C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10007F58C(uint64_t a1)
{
}

void sub_10007F594(uint64_t a1)
{
  id v2 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  long long v3 = *(_OWORD *)(a1 + 80);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = v4;
  block[2] = sub_10007F648;
  block[3] = &unk_1002DC0A0;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  id v7 = *(void **)(a1 + 56);
  id v9 = v5;
  uint64_t v10 = v6;
  id v11 = v7;
  dispatch_async(v2, block);
}

void sub_10007F648(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
    BOOL v2 = *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) != 0;
  }
  else {
    BOOL v2 = 0;
  }
  long long v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v15) = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Populating Headers %i", buf, 8u);
  }

  if (v2)
  {
    long long v4 = +[NSMutableDictionary dictionary];
    [v4 fm_safelyMapKey:@"X-Apple-Sign1-Error" toObject:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40)];
    [v4 fm_safelyMapKey:@"X-Apple-Sign5-Error" toObject:*(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40)];
    [v4 fm_safelyMapKey:@"X-Mme-Sign1" toObject:*(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40)];
    [v4 fm_safelyMapKey:@"X-Mme-Sign2" toObject:*(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40)];
    [v4 fm_safelyMapKey:@"X-Mme-Sign5" toObject:*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40)];
    [v4 fm_safelyMapKey:@"X-Mme-Sign6" toObject:*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 40)];
    id v5 = [*(id *)(a1 + 32) UUIDString];
    [v4 fm_safelyMapKey:@"X-Apple-AL-ID" toObject:v5];

    uint64_t v6 = [*(id *)(a1 + 40) _deviceIdentifiersForSignature];
    id v13 = 0;
    id v7 = +[NSJSONSerialization dataWithJSONObject:v6 options:0 error:&v13];
    id v8 = v13;
    id v9 = [v7 base64EncodedString];

    if (v8)
    {
      uint64_t v10 = sub_100004238();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100240B8C();
      }
    }
    [v4 fm_safelyMapKey:@"X-Apple-AL-Content" toObject:v9];
    id v11 = sub_100004238();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      long long v15 = v4;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Completed all signing %@", buf, 0xCu);
    }

    uint64_t v12 = *(void *)(a1 + 48);
    if (v12) {
      (*(void (**)(uint64_t, void *, void))(v12 + 16))(v12, v4, 0);
    }
  }
}

void sub_10007F920(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412546;
    id v19 = v5;
    __int16 v20 = 2112;
    id v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "signatureHeadersWithData : Absinth signing returned %@ %@", buf, 0x16u);
  }

  if (v5)
  {
    id v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100240BF4();
    }

    id v9 = [v5 code];
    uint64_t v10 = [v5 userInfo];
    id v11 = [v10 objectForKeyedSubscript:@"kFMDUnderlyingErrorCodeKey"];
    uint64_t v12 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%ld,%ld", v9, [v11 integerValue]);
    uint64_t v13 = *(void *)(a1[5] + 8);
    long long v14 = *(NSObject **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
  else
  {
    if ([v6 count] != (id)2) {
      goto LABEL_8;
    }
    long long v15 = [v6 objectAtIndexedSubscript:0];
    uint64_t v10 = [v15 base64EncodedString];

    uint64_t v16 = [v6 objectAtIndexedSubscript:1];
    id v11 = [v16 base64EncodedString];

    objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), v10);
    __int16 v17 = sub_100004238();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Signature header: %@", buf, 0xCu);
    }

    objc_storeStrong((id *)(*(void *)(a1[7] + 8) + 40), v11);
    long long v14 = sub_100004238();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v19 = v11;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "SkAuth header: %@", buf, 0xCu);
    }
  }

LABEL_8:
  *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = 1;
  (*(void (**)(void))(a1[4] + 16))();
}

void sub_10007FBE0(void *a1, void *a2, void *a3)
{
  id v16 = a2;
  id v5 = a3;
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 domain];
    uint64_t v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%@|%ld", v7, [v6 code]);
    uint64_t v9 = a1[5];
  }
  else
  {
    uint64_t v10 = [v16 signature];
    uint64_t v11 = [v10 base64EncodedString];
    uint64_t v12 = *(void *)(a1[6] + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    id v7 = [v16 attestation];
    uint64_t v8 = [v7 base64EncodedString];
    uint64_t v9 = a1[7];
  }
  uint64_t v14 = *(void *)(v9 + 8);
  long long v15 = *(void **)(v14 + 40);
  *(void *)(v14 + 40) = v8;

  *(unsigned char *)(*(void *)(a1[8] + 8) + 24) = 1;
  (*(void (**)(void))(a1[4] + 16))();
}

void sub_10007FF90(uint64_t a1, uint64_t a2)
{
  id v3 = +[FMDGenericAudioAccessory copyAccessory:a2];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_100080534(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v4 = sub_100059878();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Remove completed with error %@.", (uint8_t *)&v5, 0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100080AEC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100080F44(uint64_t a1)
{
  BOOL v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) serialNumber];
    *(_DWORD *)buf = 138412290;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "### setting keys updated on mulder for %@", buf, 0xCu);
  }
  dispatch_time_t v4 = dispatch_time(0, 10000000000);
  int v5 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008109C;
  block[3] = &unk_1002D9378;
  id v7 = *(id *)(a1 + 32);
  dispatch_after(v4, v5, block);
}

void sub_10008109C(uint64_t a1)
{
  BOOL v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) serialNumber];
    int v6 = 138412290;
    id v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "### calling updateCompletedFor %@", (uint8_t *)&v6, 0xCu);
  }
  dispatch_time_t v4 = +[FMDExtExtensionHelper getAccessoryProxyForId:@"com.apple.icloud.FindMyDevice.FindMyExtensionContainer.FMDMagSafeExtension" withDelegate:0];
  int v5 = [*(id *)(a1 + 32) serialNumber];
  [v4 updateCompletedFor:v5 withCompletion:&stru_1002DC160];
}

void sub_1000811A8(id a1, NSError *a2)
{
  BOOL v2 = a2;
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    int v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "### update to extension completed %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000822C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_100059C08();
  int v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100240D54(v3);
    }

    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = +[NSError errorWithDomain:kFMDErrorDomain code:12 userInfo:0];
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "requireDisableLocationWithCompletion finished.", v8, 2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100082B14(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  if (state == 2)
  {
    uint64_t v6 = objc_alloc_init((Class)FMAlert);
    [v6 setCategory:3];
    id v7 = [*(id *)(a1 + 32) locateStats];
    [v6 setMsgText:v7];

    [v6 setMsgTitle:@"Daily Locate Report"];
    [v6 setShowMsgInLockScreen:1];
    [v6 setDismissMsgOnUnlock:0];
    [v6 setDismissMsgOnLock:0];
    [v6 setDefaultButtonTitle:@"OK"];
    uint64_t v8 = +[FMAlertManager sharedInstance];
    [v8 activateAlert:v6];

    char v9 = xpc_activity_set_state(v3, 5);
    uint64_t v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
      sub_100240DD8(v9, v10);
    }
  }
  else
  {
    uint64_t v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_100240E54((uint64_t)v5, state, v6);
    }
  }
}

void sub_100082E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100082E78(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 groupValue];
  [v3 doubleValue];
  double v5 = v4;

  if (v5 >= *(double *)(a1 + 40) && v5 < *(double *)(a1 + 48))
  {
    uint64_t v6 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v7 = *(void *)(a1 + 56) + 24;
    uint64_t v8 = [v13 statValue];
    char v9 = +[NSString stringWithFormat:@"%li hours ago: %@", v7, v8];
    uint64_t v10 = [v6 stringByAppendingString:v9];
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;
  }
}

void sub_1000836DC(id a1, NSString *a2)
{
  BOOL v2 = a2;
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    double v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Sent auth token to paired device : %@", (uint8_t *)&v4, 0xCu);
  }
}

id sub_100084D78(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_100085768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100085784(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _serialQueue_addTrackedLocationNow:*(void *)(a1 + 32)];
  [WeakRetained _serialQueue_purgeOldTrackedLocationsNow];
  id v3 = [WeakRetained trackedLocations];
  [WeakRetained _serialQueue_updateTrackedLocationsCache:v3];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100085870;
  v5[3] = &unk_1002D93F0;
  id v6 = WeakRetained;
  id v7 = *(id *)(a1 + 40);
  id v4 = WeakRetained;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

void sub_100085870(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) locationTracker];
  [v2 didAddNewTrackedLocation:*(void *)(a1 + 40)];
}

void sub_100085AA0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_100085AB4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained trackedLocations];
  [v1 removeAllObjects];

  [WeakRetained _serialQueue_deleteTrackedLocationsCache];
  [WeakRetained _serialQueue_scheduleLocationPurgeTimer];
}

uint64_t sub_100085D8C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100085EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100085EBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100085ECC(uint64_t a1)
{
}

void sub_100085ED4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) trackedLocations];
  id v7 = [v2 copy];

  id v3 = [v7 lastObject];
  uint64_t v4 = [v3 objectForKeyedSubscript:@"kFMDTrackedLocationsStoreTrackFMDLocation"];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_100086498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
}

id sub_1000864B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1000864BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _serialQueue_purgeOldTrackedLocationsNow];
  uint64_t v1 = [WeakRetained trackedLocations];
  [WeakRetained _serialQueue_updateTrackedLocationsCache:v1];
}

void sub_100086524(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) locationPurgeTimer];
  uint64_t v1 = +[NSRunLoop currentRunLoop];
  [v2 scheduleInRunLoop:v1];
}

void sub_100087228(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008723C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _removeUntrackedAssets:*(void *)(a1 + 32)];
}

void sub_100087314(uint64_t a1)
{
  [*(id *)(a1 + 32) _removeUntrackedAssets:&__NSArray0__struct];
  uint64_t v1 = +[NSFileManager defaultManager];
  id v2 = [(id)objc_opt_class() defaultStorageLocation];
  id v5 = 0;
  [v1 removeItemAtURL:v2 error:&v5];
  id v3 = v5;

  if (v3 && (objc_msgSend(v3, "fm_isFileNotFoundError") & 1) == 0)
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100241524(v3);
    }
  }
}

void sub_100087914(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100087928(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained[2] mutableCopy];
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = [v4 url];
  [v3 fm_safeSetObject:v4 forKey:v5];

  id v6 = WeakRetained[2];
  WeakRetained[2] = v3;
  id v7 = v3;

  uint64_t v8 = [WeakRetained dataArchiver];
  char v9 = [v8 saveDictionary:v7];

  if (v9)
  {
    uint64_t v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_10023EA80();
    }
  }
}

void sub_100087B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100087B20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100087B30(uint64_t a1)
{
}

void sub_100087B38(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(*(void *)(a1 + 32) + 16));
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    id v2 = [*(id *)(a1 + 32) dataArchiver];
    id v3 = +[NSSet setWithObject:objc_opt_class()];
    id v11 = 0;
    uint64_t v4 = [v2 readDictionaryAndClasses:v3 error:&v11];
    id v5 = v11;
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v4;

    if ((objc_msgSend(v5, "fm_isFileNotFoundError") & 1) == 0
      && (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) || v5 != 0))
    {
      char v9 = sub_100004238();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1002415B0();
      }

      uint64_t v10 = +[FMDEventLoggerGeneral sharedInstance];
      [v10 sendError:v5 forEventName:@"FMDAssetRegistryFailedReadEventName"];
    }
  }
}

void sub_100087E7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) serverInteractionController];
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 138412290;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Starting download of asset %@", (uint8_t *)&v9, 0xCu);
  }

  uint64_t v6 = [[FileDownloadAction alloc] initWithAsset:v3 serverInteractionController:v4 assetRegistry:*(void *)(a1 + 32)];
  id v7 = +[ActionManager sharedManager];
  id v8 = [v7 enqueueAction:v6];
}

void sub_100087FF0(id a1, OS_xpc_object *a2)
{
  id v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received XPC event com.apple.nsurlsessiond-events", v3, 2u);
  }
}

void sub_100089768(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  uint64_t v6 = sub_100059878();
  id v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100241618(a1, (uint64_t)v5, v7);
    }
  }
  else
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v44 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "accessoryList = %@", buf, 0xCu);
    }

    id v28 = objc_alloc_init((Class)NSMutableDictionary);
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    id v27 = v4;
    id v8 = v4;
    id v9 = [v8 countByEnumeratingWithState:&v39 objects:v47 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v40;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(void *)v40 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = [[FMDExtAccessory alloc] initWithExtAccessoryInfo:*(void *)(*((void *)&v39 + 1) + 8 * i)];
          uint64_t v14 = +[FMDExtConfigurationRegistry sharedInstance];
          long long v15 = [(FMDExtAccessory *)v13 accessoryType];
          unsigned __int8 v16 = [v14 supportsAccessoryType:v15];

          if (v16)
          {
            __int16 v17 = [(FMDExtAccessory *)v13 accessoryIdentifier];
            [(FMDExtAccessory *)v13 setExtensionId:*(void *)(a1 + 32)];
            [v28 setObject:v13 forKeyedSubscript:v17];
          }
          else
          {
            __int16 v17 = sub_100059878();
            if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
            {
              id v18 = [(FMDExtAccessory *)v13 name];
              id v19 = [(FMDExtAccessory *)v13 accessoryType];
              *(_DWORD *)buf = 138412546;
              id v44 = v18;
              __int16 v45 = 2112;
              __int16 v46 = v19;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "accessory %@ with accessory type %@ not supported", buf, 0x16u);
            }
          }
        }
        id v10 = [v8 countByEnumeratingWithState:&v39 objects:v47 count:16];
      }
      while (v10);
    }

    __int16 v20 = (int8x16_t *)a1;
    id v21 = [*(id *)(a1 + 40) serialQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100089BA4;
    block[3] = &unk_1002DC280;
    id v22 = v28;
    id v36 = v22;
    int8x16_t v37 = vextq_s8(v20[2], v20[2], 8uLL);
    id v38 = *(id *)(a1 + 48);
    dispatch_async(v21, block);

    __int16 v23 = [*(id *)(a1 + 48) allAccessories];
    id v24 = [v23 copy];

    id v25 = [*(id *)(a1 + 40) serialQueue];
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_10008A0D4;
    v30[3] = &unk_1002DC2A8;
    int8x16_t v31 = vextq_s8(v20[2], v20[2], 8uLL);
    id v32 = v24;
    id v33 = v22;
    id v34 = *(id *)(a1 + 48);
    id v7 = v22;
    id v26 = v24;
    dispatch_async(v25, v30);

    id v5 = 0;
    id v4 = v27;
  }
}

void sub_100089BA4(uint64_t a1)
{
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v46 objects:v53 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v47;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(void *)v47 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v46 + 1) + 8 * i);
        id v8 = [*(id *)(a1 + 40) accessoriesByExtension];
        id v9 = [v8 objectForKeyedSubscript:*(void *)(a1 + 48)];
        id v10 = [v9 objectForKeyedSubscript:v7];

        uint64_t v11 = [*(id *)(a1 + 32) objectForKeyedSubscript:v7];
        if (v10 && ([v10 accessoryInfoChanged:v11] & 1) == 0)
        {
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_10008A0BC;
          block[3] = &unk_1002D93F0;
          id v44 = *(id *)(a1 + 56);
          id v45 = v10;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
        }
        else
        {
          uint64_t v12 = sub_100059878();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            id v52 = v11;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "new accessory added = %@", buf, 0xCu);
          }

          id v13 = [*(id *)(a1 + 40) accessoriesByExtension];
          uint64_t v14 = [v13 objectForKeyedSubscript:*(void *)(a1 + 48)];

          if (!v14)
          {
            id v15 = objc_alloc_init((Class)NSMutableDictionary);
            unsigned __int8 v16 = [*(id *)(a1 + 40) accessoriesByExtension];
            [v16 setObject:v15 forKeyedSubscript:*(void *)(a1 + 48)];
          }
          __int16 v17 = [*(id *)(a1 + 40) accessoriesByExtension];
          id v18 = [v17 objectForKeyedSubscript:*(void *)(a1 + 48)];
          [v18 setObject:v11 forKeyedSubscript:v7];

          [*(id *)(a1 + 40) updateAccessory:v11];
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v46 objects:v53 count:16];
    }
    while (v4);
  }

  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v19 = [*(id *)(a1 + 40) accessoriesByExtension];
  __int16 v20 = [v19 objectForKeyedSubscript:*(void *)(a1 + 48)];
  id v21 = [v20 allKeys];

  id v22 = [v21 countByEnumeratingWithState:&v39 objects:v50 count:16];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = *(void *)v40;
    do
    {
      for (j = 0; j != v23; j = (char *)j + 1)
      {
        if (*(void *)v40 != v24) {
          objc_enumerationMutation(v21);
        }
        uint64_t v26 = *(void *)(*((void *)&v39 + 1) + 8 * (void)j);
        id v27 = [*(id *)(a1 + 32) objectForKeyedSubscript:v26];

        if (!v27)
        {
          id v28 = [*(id *)(a1 + 40) accessoriesByExtension];
          double v29 = [v28 objectForKeyedSubscript:*(void *)(a1 + 48)];
          int v30 = [v29 objectForKeyedSubscript:v26];

          int8x16_t v31 = sub_100059878();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            id v32 = [v30 name];
            *(_DWORD *)buf = 138412290;
            id v52 = v32;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "removing accessory = %@", buf, 0xCu);
          }
          v36[0] = _NSConcreteStackBlock;
          v36[1] = 3221225472;
          v36[2] = sub_10008A0C8;
          v36[3] = &unk_1002D93F0;
          id v37 = *(id *)(a1 + 56);
          id v38 = v30;
          id v33 = v30;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v36);
          id v34 = [*(id *)(a1 + 40) accessoriesByExtension];
          id v35 = [v34 objectForKeyedSubscript:*(void *)(a1 + 48)];
          [v35 removeObjectForKey:v26];
        }
      }
      id v23 = [v21 countByEnumeratingWithState:&v39 objects:v50 count:16];
    }
    while (v23);
  }
}

id sub_10008A0BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAccessory:*(void *)(a1 + 40)];
}

id sub_10008A0C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeAccessory:*(void *)(a1 + 40)];
}

void sub_10008A0D4(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) extensionsAlreadySynced];
  unsigned __int8 v4 = [v3 containsObject:*(void *)(a1 + 40)];

  if ((v4 & 1) == 0)
  {
    uint64_t v5 = [*(id *)(a1 + 32) extensionsAlreadySynced];
    [v5 addObject:*(void *)(a1 + 40)];

    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    id v6 = *(id *)(a1 + 48);
    id v7 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (!v7) {
      goto LABEL_19;
    }
    id v8 = v7;
    uint64_t v9 = *(void *)v21;
    while (1)
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(void *)v21 != v9) {
          objc_enumerationMutation(v6);
        }
        uint64_t v11 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        if ([v11 category] == (id)3)
        {
          id v12 = v11;
          id v13 = [v12 extensionId];
          if (v13
            && ([v12 extensionId],
                uint64_t v1 = objc_claimAutoreleasedReturnValue(),
                ([v1 isEqualToString:*(void *)(a1 + 40)] & 1) == 0))
          {

LABEL_15:
          }
          else
          {
            uint64_t v14 = *(void **)(a1 + 56);
            id v15 = [v12 accessoryIdentifier];
            unsigned __int8 v16 = [v14 objectForKeyedSubscript:v15];

            if (v13)
            {
            }
            if (!v16)
            {
              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472;
              block[2] = sub_10008A32C;
              block[3] = &unk_1002D93F0;
              id v18 = *(id *)(a1 + 64);
              id v19 = v12;
              dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

              id v13 = v18;
              goto LABEL_15;
            }
          }

          continue;
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (!v8)
      {
LABEL_19:

        return;
      }
    }
  }
}

id sub_10008A32C(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeAccessory:*(void *)(a1 + 40)];
}

void sub_10008A3F0(uint64_t a1)
{
  id v2 = +[FMDExtConfigurationRegistry sharedInstance];
  id v3 = [*(id *)(a1 + 32) accessoryType];
  unsigned __int8 v4 = [v2 configForAccessoryType:v3];

  if (v4)
  {
    uint64_t v5 = sub_100059878();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [v4 features];
      *(_DWORD *)buf = 138412290;
      id v55 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "got config %@", buf, 0xCu);
    }
    id v7 = dispatch_group_create();
    id v8 = [v4 flavorForFeature:@"style"];
    uint64_t v9 = [*(id *)(a1 + 32) accessoryIdentifier];
    id v10 = [v9 stringValue];

    if (v8)
    {
      uint64_t v11 = +[FMDExtExtensionHelper getAccessoryControllerForFeature:@"style" flavor:v8];
      if (v11)
      {
        dispatch_group_enter(v7);
        id v12 = [v4 infoForFeature:@"style"];
        v51[0] = _NSConcreteStackBlock;
        v51[1] = 3221225472;
        v51[2] = sub_10008A97C;
        v51[3] = &unk_1002DC2F8;
        id v52 = *(id *)(a1 + 32);
        id v53 = v7;
        [v11 getStyleForAccessory:v10 info:v12 withCompletion:v51];
      }
      dispatch_time_t v13 = dispatch_time(0, 60000000000);
      uint64_t v14 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10008AA90;
      block[3] = &unk_1002DC2A8;
      id v46 = *(id *)(a1 + 32);
      id v47 = v8;
      id v48 = v10;
      id v15 = v4;
      uint64_t v16 = *(void *)(a1 + 40);
      id v49 = v15;
      uint64_t v50 = v16;
      dispatch_after(v13, v14, block);
    }
    [v4 timeoutForFeature:@"style"];
    dispatch_time_t v18 = dispatch_time(0, (uint64_t)(v17 * 1000000000.0));
    intptr_t v19 = dispatch_group_wait(v7, v18);
    if (v19)
    {
      uint64_t v20 = v19;
      long long v21 = sub_100059878();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1002416A4(v20, v21);
      }
    }
    long long v39 = v10;
    long long v40 = v7;
    long long v22 = [v4 infoForFeature:@"sound"];
    long long v23 = +[NSMutableDictionary dictionary];
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id v38 = v22;
    uint64_t v24 = [v22 objectForKeyedSubscript:@"channels"];
    id v25 = [v24 countByEnumeratingWithState:&v41 objects:v60 count:16];
    if (v25)
    {
      id v26 = v25;
      uint64_t v27 = *(void *)v42;
      do
      {
        for (i = 0; i != v26; i = (char *)i + 1)
        {
          if (*(void *)v42 != v27) {
            objc_enumerationMutation(v24);
          }
          uint64_t v29 = *(void *)(*((void *)&v41 + 1) + 8 * i);
          int v30 = [[FMDAudioChannelStatus alloc] initWithName:v29 active:1];
          [(FMDAudioChannelStatus *)v30 setAvailability:1];
          [v23 setObject:v30 forKey:v29];
        }
        id v26 = [v24 countByEnumeratingWithState:&v41 objects:v60 count:16];
      }
      while (v26);
    }

    [*(id *)(a1 + 32) setAudioChannelInfo:v23];
    int8x16_t v31 = sub_100059910();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      id v32 = [*(id *)(a1 + 32) playbackChannels];
      id v33 = [*(id *)(a1 + 32) audioChannelInfo];
      id v34 = [*(id *)(a1 + 32) name];
      *(_DWORD *)buf = 138412802;
      id v55 = v32;
      __int16 v56 = 2112;
      uint64_t v57 = v33;
      __int16 v58 = 2112;
      id v59 = v34;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "got playback channel  %@  and audioChannelInfo = %@ error for %@", buf, 0x20u);
    }
    id v35 = [*(id *)(a1 + 40) accessoryRegistry];
    [v35 updateAccessory:*(void *)(a1 + 32)];
  }
  else
  {
    id v36 = +[FMDExtConfigurationRegistry sharedInstance];
    id v37 = [*(id *)(a1 + 32) accessoryType];
    [v36 prepareForAccessoryType:v37];
  }
}

void sub_10008A97C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100059878();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [*(id *)(a1 + 32) name];
    int v9 = 138412802;
    id v10 = v5;
    __int16 v11 = 2112;
    id v12 = v8;
    __int16 v13 = 2112;
    id v14 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "got style %@ for %@ error %@", (uint8_t *)&v9, 0x20u);
  }
  if (v5 && !v6) {
    [*(id *)(a1 + 32) setStyle:v5];
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10008AA90(uint64_t a1)
{
  id v2 = sub_100059878();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) name];
    *(_DWORD *)buf = 138412290;
    __int16 v13 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Getting style again for %@", buf, 0xCu);
  }
  unsigned __int8 v4 = +[FMDExtExtensionHelper getAccessoryControllerForFeature:@"style" flavor:*(void *)(a1 + 40)];
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 56) infoForFeature:@"style"];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10008AC04;
  v9[3] = &unk_1002DC2F8;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 64);
  id v10 = v7;
  uint64_t v11 = v8;
  [v4 getStyleForAccessory:v5 info:v6 withCompletion:v9];
}

void sub_10008AC04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100059878();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v13 = 138412546;
    id v14 = v5;
    __int16 v15 = 2112;
    id v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Got style %@ with error = %@", (uint8_t *)&v13, 0x16u);
  }

  if (v5)
  {
    if (!v6)
    {
      uint64_t v8 = [*(id *)(a1 + 32) style];
      unsigned __int8 v9 = [v5 isEqualToString:v8];

      if ((v9 & 1) == 0)
      {
        id v10 = sub_100059878();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v11 = [*(id *)(a1 + 32) name];
          int v13 = 138412546;
          id v14 = v11;
          __int16 v15 = 2112;
          id v16 = v5;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "updating Accessory %@ with style %@", (uint8_t *)&v13, 0x16u);
        }
        [*(id *)(a1 + 32) setStyle:v5];
        id v12 = [*(id *)(a1 + 40) accessoryRegistry];
        [v12 updateAccessory:*(void *)(a1 + 32)];
      }
    }
  }
}

void sub_10008AEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008AED8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008AEE8(uint64_t a1)
{
}

void sub_10008AEF0(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = [*(id *)(a1 + 32) accessoriesByExtension];
  id v3 = [v2 allValues];

  id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v11;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
        unsigned __int8 v9 = [*(id *)(*((void *)&v10 + 1) + 8 * (void)v7) allValues];
        [v8 addObjectsFromArray:v9];

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v5);
  }
}

void sub_10008B124(uint64_t a1)
{
  [*(id *)(a1 + 32) enumerateObjectsUsingBlock:&stru_1002DC338];
  id v2 = dispatch_get_global_queue(0, 0);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008B504;
  v3[3] = &unk_1002D97B0;
  id v5 = *(id *)(a1 + 40);
  id v4 = *(id *)(a1 + 32);
  dispatch_async(v2, v3);
}

void sub_10008B1EC(id a1, FMDExtAccessory *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = [(FMDExtAccessory *)v4 address];
  uint64_t v6 = +[NSData dataWithMACAddressString:v5];

  if (v6)
  {
    id v7 = objc_opt_new();
    uint64_t v8 = [v7 ownerSession];

    id v9 = [objc_alloc((Class)FMSynchronizer) initWithDescription:@"SP-BA-UUID" andTimeout:5.0];
    long long v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      long long v11 = [(FMDExtAccessory *)v4 address];
      *(_DWORD *)buf = 138412290;
      uint64_t v20 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Retrieving baUUID for MAC: %@", buf, 0xCu);
    }
    long long v13 = _NSConcreteStackBlock;
    uint64_t v14 = 3221225472;
    __int16 v15 = sub_10008B3B4;
    id v16 = &unk_1002DB7D8;
    double v17 = v4;
    id v18 = v9;
    id v12 = v9;
    [v8 beaconingIdentifierForMACAddress:v6 completion:&v13];
    [v12 wait:v13, v14, v15, v16];
  }
}

void sub_10008B3B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [v3 UUIDString];
    uint64_t v6 = [*(id *)(a1 + 32) name];
    id v7 = [*(id *)(a1 + 32) address];
    int v10 = 138412802;
    long long v11 = v5;
    __int16 v12 = 2112;
    long long v13 = v6;
    __int16 v14 = 2112;
    __int16 v15 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDExtAccessoryManager Received baUUID: %@ for %@, %@", (uint8_t *)&v10, 0x20u);
  }
  if (v3)
  {
    uint64_t v8 = [*(id *)(a1 + 32) baUUID];
    unsigned __int8 v9 = [v3 isEqual:v8];

    if ((v9 & 1) == 0) {
      [*(id *)(a1 + 32) updateWithBeaconingIdentifier:v3];
    }
  }
  [*(id *)(a1 + 40) signal];
}

uint64_t sub_10008B504(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_10008BC40(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_10008BC78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setNextScheduledJanitorDate:0];
  [WeakRetained expungeAccessoryLocationStore];
  id v2 = [[FMDEventLoggerEventScalar alloc] initWithEventName:@"FMDAccessoryLocationStoreJanitor"];
  id v3 = +[FMDEventLogger sharedLogger];
  id v4 = +[FMDEventLoggerFacilityDataPeek facilityName];
  uint64_t v6 = v4;
  id v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [v3 logEvent:v2 toFacilitiesNamed:v5];
}

id sub_10008BD7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = +[NSMutableDictionary dictionary];
  uint64_t v12 = 0;
  long long v13 = &v12;
  uint64_t v14 = 0x3032000000;
  __int16 v15 = sub_10008BF24;
  id v16 = sub_10008BF34;
  id v17 = 0;
  id v3 = [WeakRetained serialQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008BF3C;
  block[3] = &unk_1002D9210;
  void block[4] = WeakRetained;
  void block[5] = &v12;
  dispatch_sync(v3, block);

  id v4 = (void *)v13[5];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10008BF88;
  v9[3] = &unk_1002DC388;
  id v5 = v2;
  id v10 = v5;
  [v4 enumerateKeysAndObjectsUsingBlock:v9];
  uint64_t v6 = v10;
  id v7 = v5;

  _Block_object_dispose(&v12, 8);

  return v7;
}

void sub_10008BF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008BF24(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008BF34(uint64_t a1)
{
}

uint64_t sub_10008BF3C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) recordsByAccessoryIdentifier];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  return _objc_release_x1(v2, v4);
}

void sub_10008BF88(uint64_t a1, uint64_t a2, void *a3)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10008C014;
  v4[3] = &unk_1002DC360;
  id v5 = *(id *)(a1 + 32);
  [a3 enumerateObjectsUsingBlock:v4];
}

void sub_10008C014(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 recordName];
  id v7 = v4;
  id v5 = [v3 description];

  uint64_t v8 = v5;
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];

  [*(id *)(a1 + 32) addEntriesFromDictionary:v6];
}

void sub_10008C1E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10008C28C;
  v6[3] = &unk_1002D97B0;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_10008C28C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(result + 16))(result, *(void *)(a1 + 32), 1);
  }
  return result;
}

void sub_10008C3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008C3F4(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  [*(id *)(a1 + 32) expungeRecordsForAccessory:*(void *)(a1 + 40) allRecords:0];
  id v3 = [*v2 recordsByAccessoryIdentifier];
  id v4 = [v2[1] accessoryIdentifier];
  id v5 = [v3 objectForKeyedSubscript:v4];

  uint64_t v6 = [v5 sortedArrayUsingComparator:&stru_1002DC418];

  uint64_t v19 = 0;
  uint64_t v20 = &v19;
  uint64_t v21 = 0x3032000000;
  long long v22 = sub_10008BF24;
  long long v23 = sub_10008BF34;
  id v24 = 0;
  unsigned __int8 v7 = [*v2 canRetrieveLockedRecords];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  id v17[2] = sub_10008C718;
  v17[3] = &unk_1002DC440;
  v17[4] = &v19;
  unsigned __int8 v18 = v7;
  [v6 enumerateObjectsUsingBlock:v17];
  id v8 = +[FMDProtectedContextManager sharedManager];
  unsigned __int8 v9 = [(id)v20[5] recordName];
  id v10 = [v8 contextForKey:v9 contextUUID:0 error:0];

  if (v10)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v11 = v10;
      uint64_t v12 = [[FMDLocation alloc] initWithDictionary:v11];
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = v12;
    }
  }
  __int16 v15 = sub_100004238();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 138412290;
    uint64_t v26 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "AccessoryLocationStore: Historical diskLocation %@", buf, 0xCu);
  }

  _Block_object_dispose(&v19, 8);
}

void sub_10008C67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

int64_t sub_10008C6A8(id a1, FMDAccessoryLocationStoreRecord *a2, FMDAccessoryLocationStoreRecord *a3)
{
  id v4 = a3;
  id v5 = [(FMDAccessoryLocationStoreRecord *)a2 creationDate];
  uint64_t v6 = [(FMDAccessoryLocationStoreRecord *)v4 creationDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

uint64_t sub_10008C718(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v7 = a2;
  id v8 = v7;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40))
  {
    if ((id v10 = v7, [v7 protection] == (id)1) && *(unsigned char *)(a1 + 40)
      || (id v7 = [v10 protection], v8 = v10, !v7))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
      id v8 = v10;
    }
  }
  *a4 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;

  return _objc_release_x1(v7, v8);
}

void sub_10008C860(uint64_t a1)
{
  [*(id *)(a1 + 32) clearAllRecords];
  uint64_t v2 = +[NSFileManager defaultManager];
  id v3 = [(id)objc_opt_class() defaultStorageLocation];
  id v6 = 0;
  [v2 removeItemAtURL:v3 error:&v6];
  id v4 = v6;

  if (v4 && (objc_msgSend(v4, "fm_isFileNotFoundError") & 1) == 0)
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_10024171C(v4, v5);
    }
  }
  [*(id *)(a1 + 32) setRecordsByAccessoryIdentifier:&__NSDictionary0__struct];
  [*(id *)(a1 + 32) removeOrphanedLocationFiles];
  [*(id *)(a1 + 32) scheduleJanitor:0];
}

void sub_10008CA08(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10008CA2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "AccessoryLocationStore expunging all accessory locations %@", buf, 0xCu);
  }

  id v5 = [*(id *)(a1 + 32) serialQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_10008CB74;
  v7[3] = &unk_1002D9238;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  id v8 = v3;
  id v6 = v3;
  dispatch_async(v5, v7);

  objc_destroyWeak(&v9);
}

void sub_10008CB74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10008CC08;
  v4[3] = &unk_1002DBC38;
  void v4[4] = WeakRetained;
  [v3 enumerateObjectsUsingBlock:v4];
  [WeakRetained removeOrphanedLocationFiles];
}

id sub_10008CC08(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) expungeRecordsForAccessory:a2 allRecords:0];
}

void sub_10008CE58(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10008CEE4;
  v3[3] = &unk_1002DC360;
  id v4 = *(id *)(a1 + 32);
  [a2 enumerateObjectsUsingBlock:v3];
}

void sub_10008CEE4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [a2 recordName];
  [v2 addObject:v3];
}

void sub_10008CF3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([*(id *)(a1 + 32) containsObject:v3] & 1) == 0)
  {
    id v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1002417B8();
    }

    id v5 = +[FMDProtectedContextManager sharedManager];
    [v5 cleanupAllContextsForKey:v3];
  }
}

void sub_10008D1BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10008D1F8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained saveLocation:v5 forAccessory:*(void *)(a1 + 32)];
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);
  }
}

void sub_10008D5AC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_10008D5C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [WeakRetained accessoryRegistry];
  uint64_t v4 = [*(id *)(a1 + 32) accessoryIdentifier];
  id v5 = [v3 accessoryForIdentifier:v4];

  if (v5)
  {
    uint64_t v19 = [WeakRetained saveLocationToDisk:*(void *)(a1 + 40) accessory:*(void *)(a1 + 32) protection:0];
    id v6 = [WeakRetained saveLocationToDisk:*(void *)(a1 + 40) accessory:*(void *)(a1 + 32) protection:1];
    id v7 = [WeakRetained recordsByAccessoryIdentifier];
    id v8 = [v7 mutableCopy];

    id v9 = [WeakRetained recordsByAccessoryIdentifier];
    id v10 = [*(id *)(a1 + 32) accessoryIdentifier];
    id v11 = [v9 objectForKeyedSubscript:v10];
    id v12 = [v11 mutableCopy];
    uint64_t v13 = v12;
    if (v12) {
      id v14 = v12;
    }
    else {
      id v14 = (id)objc_opt_new();
    }
    id v17 = v14;

    [v17 addObject:v19];
    [v17 addObject:v6];
    unsigned __int8 v18 = [*(id *)(a1 + 32) accessoryIdentifier];
    [v8 setObject:v17 forKeyedSubscript:v18];

    [WeakRetained setRecordsByAccessoryIdentifier:v8];
    [WeakRetained expungeRecordsForAccessory:*(void *)(a1 + 32) allRecords:0];
  }
  else
  {
    __int16 v15 = sub_100004238();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v21 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Unable to save location to disk: The accessory is no longer paired. %@", buf, 0xCu);
    }
  }
}

void sub_10008E0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 192), 8);
  _Unwind_Resume(a1);
}

int64_t sub_10008E0F4(id a1, FMDAccessoryLocationStoreRecord *a2, FMDAccessoryLocationStoreRecord *a3)
{
  uint64_t v4 = a3;
  id v5 = [(FMDAccessoryLocationStoreRecord *)a2 creationDate];
  id v6 = [(FMDAccessoryLocationStoreRecord *)v4 creationDate];

  id v7 = [v5 compare:v6];
  int64_t v8 = -1;
  if (v7 != (id)1) {
    int64_t v8 = (int64_t)v7;
  }
  if (v7 == (id)-1) {
    return 1;
  }
  else {
    return v8;
  }
}

void sub_10008E178(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (*(unsigned char *)(a1 + 88)) {
    goto LABEL_9;
  }
  id v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v3 protection]);
  id v6 = [v5 stringValue];

  id v7 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) valueForKey:v6];
  int64_t v8 = (char *)[v7 unsignedIntegerValue];

  id v9 = v8 + 1;
  unint64_t v10 = *(void *)(a1 + 56);
  id v11 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  id v12 = +[NSNumber numberWithUnsignedInteger:v9];
  [v11 setObject:v12 forKey:v6];

  uint64_t v13 = sub_100004238();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = 67109120;
    LODWORD(v31) = (unint64_t)v9 <= v10;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "FMDAccessoryLocationStore Applying max locate rule - valid : %i", (uint8_t *)&v30, 8u);
  }

  if ((unint64_t)v9 > v10)
  {

LABEL_9:
    id v16 = 0;
LABEL_10:
    id v17 = sub_100004238();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v18 = *(void *)(a1 + 56);
      int v30 = 134217984;
      uint64_t v31 = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Accessory location is expired or beyond maximum (%lu), deleting it.", (uint8_t *)&v30, 0xCu);
    }

    uint64_t v19 = +[FMDProtectedContextManager sharedManager];
    uint64_t v20 = [v4 recordName];
    uint64_t v21 = [v4 contextUUID];
    [v19 cleanupContextsForKey:v20 contextUUID:v21 obliterate:0];

    goto LABEL_13;
  }
  if (![v4 protection])
  {
    id v14 = [v4 creationDate];
    __int16 v15 = (double *)(a1 + 64);
    goto LABEL_16;
  }
  if ([v4 protection] == (id)1)
  {
    id v14 = [v4 creationDate];
    __int16 v15 = (double *)(a1 + 80);
LABEL_16:
    id v16 = [v14 dateByAddingTimeInterval:*v15];

    [v16 timeIntervalSinceReferenceDate];
    BOOL v23 = *(double *)(a1 + 72) < v22;
    goto LABEL_18;
  }
  id v16 = 0;
  BOOL v23 = 1;
LABEL_18:
  id v24 = sub_100004238();
  if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = 67109120;
    LODWORD(v31) = v23;
    _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "FMDAccessoryLocationStore Applying time expiry - valid : %i", (uint8_t *)&v30, 8u);
  }

  if (!v23) {
    goto LABEL_10;
  }
  [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v4];
  uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v26 = *(void **)(v25 + 40);
  if (v26)
  {
    [v26 timeIntervalSinceReferenceDate];
    double v28 = v27;
    [v16 timeIntervalSinceReferenceDate];
    if (v28 <= v29) {
      goto LABEL_14;
    }
    uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 8);
  }
  id v16 = v16;
  uint64_t v19 = *(void **)(v25 + 40);
  *(void *)(v25 + 40) = v16;
LABEL_13:

LABEL_14:
}

void sub_10008E598(id a1, NSArray *a2, unint64_t a3, BOOL *a4)
{
}

void sub_10008E5A8(id a1, FMDAccessoryLocationStoreRecord *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  id v7 = +[FMDProtectedContextManager sharedManager];
  id v5 = [(FMDAccessoryLocationStoreRecord *)v4 recordName];
  id v6 = [(FMDAccessoryLocationStoreRecord *)v4 contextUUID];

  [v7 cleanupContextsForKey:v5 contextUUID:v6 obliterate:1];
}

void sub_10008E700(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10008E714(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained dataArchiver];
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v3, objc_opt_class(), 0);
  id v11 = 0;
  id v5 = [v2 readDictionaryAndClasses:v4 error:&v11];
  id v6 = v11;
  id v7 = &__NSDictionary0__struct;
  if (v5) {
    id v7 = v5;
  }
  id v8 = v7;

  if (v6 && (objc_msgSend(v6, "fm_isFileNotFoundError") & 1) == 0)
  {
    id v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_100241820();
    }

    unint64_t v10 = +[FMDEventLoggerGeneral sharedInstance];
    [v10 sendError:v6 forEventName:@"FMDAccessoryLocationStoreFailedReadEventName"];
  }
  [WeakRetained setRecordsByAccessoryIdentifier:v8];
}

void sub_10008EBB4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008EBC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained expungeRecordsForAccessory:*(void *)(a1 + 32) allRecords:1];
}

void sub_10008F298(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10008F2AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _logEvent:*(void *)(a1 + 32)];
}

void sub_10008F5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008F5F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10008F600(uint64_t a1)
{
}

void sub_10008F608(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) logs];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10008F880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_10008F89C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (*(void *)(a1 + 32))
  {
    [WeakRetained setLogs:];
  }
  else
  {
    uint64_t v4 = +[NSMutableArray array];
    [v3 setLogs:v4];
  }
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 logs];
    id v7 = [v6 count];
    id v8 = [v3 cachedLogFileURL];
    int v9 = 134218242;
    id v10 = v7;
    __int16 v11 = 2112;
    id v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Found existing logs %ld %@", (uint8_t *)&v9, 0x16u);
  }
}

void sub_10008FAD4(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = qword_10031EB58;
  qword_10031EB58 = v1;

  _objc_release_x1(v1, v2);
}

void sub_10008FC88(id a1)
{
  uint64_t v1 = +[FMSystemInfo sharedInstance];
  unsigned int v2 = [v1 isInternalBuild];

  if (v2)
  {
    id v3 = +[NSFileManager defaultManager];
    byte_10031EB68 = [v3 fileExistsAtPath:@"/tmp/deviceIdentityPrefs/prefs.plist"];
  }
}

void sub_100090284(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  xpc_object_t v5 = xpc_activity_copy_criteria(v3);
  if (state == 2)
  {
    [*(id *)(a1 + 32) performWork];
    BOOL v6 = xpc_activity_set_state(v3, 5);
    id v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 32) name];
      int v12 = 138412546;
      uint64_t v13 = v8;
      __int16 v14 = 1024;
      LODWORD(v15) = v6;
      int v9 = "FMDXPCJanitor XPC activity triggered. Updating to done so that it can be cleaned. success : %@ : %d";
      id v10 = v7;
      uint32_t v11 = 18;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v12, v11);
    }
  }
  else
  {
    id v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [*(id *)(a1 + 32) name];
      int v12 = 138412802;
      uint64_t v13 = v8;
      __int16 v14 = 2048;
      xpc_activity_state_t v15 = state;
      __int16 v16 = 2048;
      xpc_object_t v17 = v5;
      int v9 = "FMDXPCJanitor XPC activity XPC activity %@ changed to state %ld with criteria %p";
      id v10 = v7;
      uint32_t v11 = 32;
      goto LABEL_6;
    }
  }
}

void sub_10009087C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v4 = [WeakRetained configManager];
    xpc_object_t v5 = [v4 activeConfig];

    BOOL v6 = sub_1000599A8();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v114 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - starting with config %@", buf, 0xCu);
    }

    if (!v5)
    {
      id v7 = sub_1000599A8();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - no active policy. Defaulting to proactive", buf, 2u);
      }

      id v8 = [v3 configManager];
      xpc_object_t v5 = [v8 configForPolicy:kFMDSecureLocationModeBackgroundProactive];
    }
    int v9 = [[FMDSecureLocationPublisher alloc] initWithConfiguration:v5];
    [v3 setLocationPublisher:v9];

    id v10 = [v3 locationPublisher];
    v112[0] = _NSConcreteStackBlock;
    v112[1] = 3221225472;
    v112[2] = sub_100091440;
    v112[3] = &unk_1002D9378;
    v112[4] = v3;
    [v10 publishCriteriaMetBlock:v112];

    uint32_t v11 = [v3 locationPublisher];
    v111[0] = _NSConcreteStackBlock;
    v111[1] = 3221225472;
    v111[2] = sub_1000914C4;
    v111[3] = &unk_1002DC5E8;
    v111[4] = v3;
    [v11 startPublisherWithBlock:v111];

    int v12 = [v5 policyName];
    uint64_t v13 = kFMDSecureLocationModeProactive;
    id v14 = [v12 caseInsensitiveCompare:kFMDSecureLocationModeProactive];

    if (v14)
    {
      xpc_activity_state_t v15 = [v5 policyName];
      id v16 = [v15 caseInsensitiveCompare:kFMDSecureLocationModeBackgroundProactive];

      if (v16)
      {
        xpc_object_t v17 = [v5 policyName];
        id v18 = [v17 caseInsensitiveCompare:kFMDSecureLocationModeLive];

        if (v18)
        {
          uint64_t v19 = [v5 policyName];
          id v20 = [v19 caseInsensitiveCompare:kFMDSecureLocationModeProactiveShallow];

          if (!v20)
          {
            v101 = [a1[4] _createLocationManager];
            [v3 setShallowLocationManager:v101];

            id v102 = a1[4];
            v103 = [v3 shallowLocationManager];
            [v103 setDelegate:v102];

            id v104 = a1[4];
            v105 = [v5 desiredAccuracy];
            [v104 _clLocationAccuracyFromConfigValue:v105];
            double v107 = v106;
            v108 = [v3 shallowLocationManager];
            [v108 setDesiredAccuracy:v107];

            id v37 = [v3 shallowLocationManager];
            [v37 startUpdatingLocation];
            goto LABEL_25;
          }
          uint64_t v21 = [v5 policyName];
          id v22 = [v21 caseInsensitiveCompare:kFMDSecureLocationModeOwnerProactive];

          if (v22) {
            goto LABEL_26;
          }
          BOOL v23 = [a1[4] _createLocationManager];
          [v3 setBystanderLocationManager:v23];

          id v24 = a1[4];
          uint64_t v25 = [v3 bystanderLocationManager];
          [v25 setDelegate:v24];

          double v26 = kCLLocationAccuracyBystander;
          double v27 = [v3 bystanderLocationManager];
          [v27 setDesiredAccuracy:v26];

          double v28 = [v3 bystanderLocationManager];
          [v28 startUpdatingLocation];

          double v29 = [a1[4] _createLocationManager];
          [v3 setHeartbeatLocationManager:v29];

          id v30 = a1[4];
          uint64_t v31 = [v3 heartbeatLocationManager];
          [v31 setDelegate:v30];

          id v32 = a1[4];
          id v33 = [v5 desiredAccuracy];
          [v32 _clLocationAccuracyFromConfigValue:v33];
          double v35 = v34;
          id v36 = [v3 heartbeatLocationManager];
          [v36 setDesiredAccuracy:v35];

          id v37 = sub_1000599A8();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            id v38 = "SecureLocationMonitor: Started location managers for ownerproactive";
LABEL_24:
            _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, v38, buf, 2u);
          }
        }
        else
        {
          id v72 = [a1[4] _createLocationManager];
          [v3 setLiveLocationManager:v72];

          id v73 = a1[4];
          id v74 = [v3 liveLocationManager];
          [v74 setDelegate:v73];

          id v75 = a1[4];
          __int16 v76 = [v5 desiredAccuracy];
          [v75 _clLocationAccuracyFromConfigValue:v76];
          double v78 = v77;
          id v79 = [v3 liveLocationManager];
          [v79 setDesiredAccuracy:v78];

          v80 = [v3 liveLocationManager];
          [v80 startUpdatingLocation];

          id v37 = sub_1000599A8();
          if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            id v38 = "SecureLocationMonitor: Started live location manager";
            goto LABEL_24;
          }
        }
      }
      else
      {
        __int16 v58 = [a1[4] _createLocationManager];
        [v3 setVisitsLocationManager:v58];

        id v59 = a1[4];
        uint64_t v60 = [v3 visitsLocationManager];
        [v60 setDelegate:v59];

        uint64_t v61 = [v3 visitsLocationManager];
        [v61 startMonitoringVisits];

        long long v62 = [a1[4] _createLocationManager];
        [v3 setSlcLocationManager:v62];

        id v63 = a1[4];
        long long v64 = [v3 slcLocationManager];
        [v64 setDelegate:v63];

        uint64_t v65 = [v3 slcLocationManager];
        [v65 startMonitoringSignificantLocationChanges];

        v66 = [a1[4] _createLocationManager];
        [v3 setBystanderLocationManager:v66];

        id v67 = a1[4];
        id v68 = [v3 bystanderLocationManager];
        [v68 setDelegate:v67];

        double v69 = kCLLocationAccuracyBystander;
        uint64_t v70 = [v3 bystanderLocationManager];
        [v70 setDesiredAccuracy:v69];

        uint64_t v71 = [v3 bystanderLocationManager];
        [v71 startUpdatingLocation];

        id v37 = sub_1000599A8();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          id v38 = "SecureLocationMonitor: Started background proactive location manager";
          goto LABEL_24;
        }
      }
    }
    else
    {
      long long v40 = [a1[4] _createLocationManager];
      [v3 setVisitsLocationManager:v40];

      id v41 = a1[4];
      long long v42 = [v3 visitsLocationManager];
      [v42 setDelegate:v41];

      long long v43 = [v3 visitsLocationManager];
      [v43 startMonitoringVisits];

      long long v44 = [a1[4] _createLocationManager];
      [v3 setSlcLocationManager:v44];

      id v45 = a1[4];
      id v46 = [v3 slcLocationManager];
      [v46 setDelegate:v45];

      id v47 = [v3 slcLocationManager];
      [v47 startMonitoringSignificantLocationChanges];

      id v48 = [a1[4] _createLocationManager];
      [v3 setBystanderLocationManager:v48];

      id v49 = a1[4];
      uint64_t v50 = [v3 bystanderLocationManager];
      [v50 setDelegate:v49];

      double v51 = kCLLocationAccuracyBystander;
      id v52 = [v3 bystanderLocationManager];
      [v52 setDesiredAccuracy:v51];

      id v53 = [v3 bystanderLocationManager];
      [v53 startUpdatingLocation];

      v54 = [a1[4] _createLocationManager];
      [v3 setHeartbeatLocationManager:v54];

      id v55 = a1[4];
      __int16 v56 = [v3 heartbeatLocationManager];
      [v56 setDelegate:v55];

      uint64_t v57 = [v3 heartbeatLocationManager];
      [v57 setDesiredAccuracy:kCLLocationAccuracyHundredMeters];

      id v37 = sub_1000599A8();
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        id v38 = "SecureLocationMonitor: Started proactive location manager";
        goto LABEL_24;
      }
    }
LABEL_25:

LABEL_26:
    v81 = [a1[4] _createLocationManager];
    [v3 setOndemandLocationManager:v81];

    id v82 = a1[4];
    long long v83 = [v3 ondemandLocationManager];
    [v83 setDelegate:v82];

    id v84 = a1[4];
    long long v85 = [v5 desiredAccuracy];
    [v84 _clLocationAccuracyFromConfigValue:v85];
    double v87 = v86;

    if (v87 >= kCLLocationAccuracyHundredMeters) {
      double v87 = kCLLocationAccuracyHundredMeters;
    }
    v88 = [v3 ondemandLocationManager];
    [v88 setDesiredAccuracy:v87];

    v89 = [a1[4] _createLocationManagerForStewie];
    [v3 setStewieLocationManager:v89];

    [a1[4] _scheduleXPCActivity];
    __int16 v90 = objc_alloc_init(FMDMotionMonitor);
    [v3 setMotionMonitor:v90];

    id v91 = [v3 motionMonitor];
    [v91 startMotionMonitoring];

    [v3 setLocationManagerStarted:1];
    __int16 v92 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100091588;
    block[3] = &unk_1002DA130;
    id v110 = a1[5];
    dispatch_async(v92, block);

    v93 = [v5 policyName];
    id v94 = [v93 caseInsensitiveCompare:kFMDSecureLocationModeOwnerProactive];

    if (v94)
    {
      v95 = [v5 policyName];
      id v96 = [v95 caseInsensitiveCompare:v13];

      if (v96)
      {
        v97 = [v5 policyName];
        id v98 = [v97 caseInsensitiveCompare:kFMDSecureLocationModeBackgroundProactive];

        if (v98)
        {
LABEL_35:
          v100 = sub_1000599A8();
          if (os_log_type_enabled(v100, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v100, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor Started Location Managers", buf, 2u);
          }

          goto LABEL_38;
        }
        uint64_t v99 = 3;
      }
      else
      {
        uint64_t v99 = 1;
      }
    }
    else
    {
      uint64_t v99 = 2;
    }
    +[FMPreferencesUtil setInteger:v99 forKey:@"kFMDSecureLocationsShouldStartMonitor" inDomain:kFMDNotBackedUpPrefDomain];
    goto LABEL_35;
  }
  long long v39 = sub_1000599A8();
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: strongSelf is nil, not starting monitors. Calling completion", buf, 2u);
  }

  (*((void (**)(void))a1[5] + 2))();
LABEL_38:
}

void sub_100091440(uint64_t a1)
{
  unsigned int v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Criteria reached, getting on-demand location.", v4, 2u);
  }

  id v3 = [*(id *)(a1 + 32) ondemandLocationManager];
  [v3 requestLocation];
}

void sub_1000914C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_1000599A8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Got location from policy manager %@", (uint8_t *)&v5, 0xCu);
  }

  [*(id *)(a1 + 32) _publishLocation:v3];
}

uint64_t sub_100091588(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10009183C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100091858(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setForcePushOndemandlocation:1];
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "startLocationMonitorWithContext ondemandLocationManager requestLocation and force publish", v4, 2u);
  }

  [*(id *)(a1 + 32) requestForcedShallowLocation];
  [*(id *)(a1 + 32) publishOnDemandLocation:&stru_1002DC630];
}

void sub_100091B08(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  if (v2)
  {
    id v3 = sub_1000599A8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138412290;
      int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error starting SecureLocationMonitor %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100091D78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    int v4 = [WeakRetained visitsLocationManager];

    if (v4)
    {
      int v5 = [v3 visitsLocationManager];
      [v5 stopMonitoringVisits];

      [v3 setVisitsLocationManager:0];
    }
    id v6 = [v3 slcLocationManager];

    if (v6)
    {
      id v7 = [v3 slcLocationManager];
      [v7 stopMonitoringSignificantLocationChanges];

      [v3 setSlcLocationManager:0];
    }
    id v8 = [v3 bystanderLocationManager];

    if (v8)
    {
      int v9 = [v3 bystanderLocationManager];
      [v9 stopUpdatingLocation];

      [v3 setBystanderLocationManager:0];
    }
    id v10 = [v3 heartbeatLocationManager];

    if (v10)
    {
      uint32_t v11 = [v3 heartbeatLocationManager];
      [v11 stopUpdatingLocation];

      [v3 setHeartbeatLocationManager:0];
    }
    int v12 = [v3 ondemandLocationManager];

    if (v12)
    {
      uint64_t v13 = [v3 ondemandLocationManager];
      [v13 stopUpdatingLocation];

      [v3 setOndemandLocationManager:0];
    }
    id v14 = [v3 liveLocationManager];

    if (v14)
    {
      xpc_activity_state_t v15 = [v3 liveLocationManager];
      [v15 stopUpdatingLocation];

      [v3 setLiveLocationManager:0];
    }
    id v16 = [v3 shallowLocationManager];

    if (v16)
    {
      xpc_object_t v17 = [v3 shallowLocationManager];
      [v17 stopUpdatingLocation];

      [v3 setShallowLocationManager:0];
    }
    id v18 = [v3 motionMonitor];

    if (v18)
    {
      uint64_t v19 = [v3 motionMonitor];
      [v19 stopMotionMonitoring];

      [v3 setMotionMonitor:0];
    }
    [v3 setLocationManagerStarted:0];
    id v20 = dispatch_get_global_queue(0, 0);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000920EC;
    block[3] = &unk_1002DA130;
    id v25 = *(id *)(a1 + 32);
    dispatch_async(v20, block);

    +[FMPreferencesUtil setInteger:0 forKey:@"kFMDSecureLocationsShouldStartMonitor" inDomain:kFMDNotBackedUpPrefDomain];
    uint64_t v21 = sub_1000599A8();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - Stopped Location Managers", v23, 2u);
    }
  }
  else
  {
    id v22 = sub_1000599A8();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)BOOL v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor - strongSelf is nil, calling completion", v23, 2u);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

uint64_t sub_1000920EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10009259C(uint64_t a1)
{
  objc_initWeak(&location, *(id *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 32) locationPublishQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100092684;
  block[3] = &unk_1002DC678;
  id v4 = *(id *)(a1 + 40);
  objc_copyWeak(&v5, &location);
  dispatch_async(v2, block);

  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100092670(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100092684(uint64_t a1)
{
  unsigned int v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Sending location to searchpartyd to publish %@", buf, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = [*(id *)(a1 + 32) convertToSecureLocationObject];
    id v6 = [WeakRetained secureLocationsManager];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1000927D8;
    v8[3] = &unk_1002DA200;
    id v9 = v5;
    id v10 = WeakRetained;
    id v7 = v5;
    [v6 publishLocation:v7 completion:v8];
  }
}

void sub_1000927D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000599A8();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Error publishing location to searchpartyd %@", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    if (v5)
    {
      id v6 = *(void **)(a1 + 32);
      int v7 = 138412290;
      id v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Published location to searchpartyd - %@", (uint8_t *)&v7, 0xCu);
    }

    id v4 = +[NSDate date];
    [*(id *)(a1 + 40) setLastPublishedTime:v4];
  }
}

void sub_100092B00(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) locationPublisher];
  unsigned __int8 v3 = [v2 publishPreviouslyReceivedLocation];

  if ((v3 & 1) == 0)
  {
    id v4 = sub_1000599A8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = [*(id *)(a1 + 32) heartbeatLocationManager];
      int v7 = 138412290;
      id v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: don't have a valid lastReceivedLocation. Requesting from heartbeat location manager %@", (uint8_t *)&v7, 0xCu);
    }
    id v6 = [*(id *)(a1 + 32) heartbeatLocationManager];
    [v6 requestLocation];
  }
}

uint64_t sub_100092E58(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) ondemandLocationManager];

  if (v2)
  {
    uint64_t v3 = [*(id *)(a1 + 32) lastOnDemandPublishTime];
    if (!v3) {
      goto LABEL_6;
    }
    id v4 = (void *)v3;
    BOOL v5 = [*(id *)(a1 + 32) lastOnDemandPublishTime];
    [v5 timeIntervalSinceNow];
    double v7 = -v6;
    id v8 = [*(id *)(a1 + 32) configManager];
    id v9 = [v8 activeConfig];
    [v9 onDemandPublishThreshold];
    double v11 = v10;

    if (v11 > v7)
    {
      uint64_t v12 = sub_1000599A8();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v19 = 0;
        uint64_t v13 = "SecureLocationMonitor: Rejecting ondemand publish request as its within threshold";
        id v14 = (uint8_t *)&v19;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v13, v14, 2u);
      }
    }
    else
    {
LABEL_6:
      xpc_activity_state_t v15 = sub_1000599A8();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Requesting ondemand one time location", buf, 2u);
      }

      id v16 = [*(id *)(a1 + 32) ondemandLocationManager];
      [v16 requestLocation];

      uint64_t v12 = +[NSDate now];
      [*(id *)(a1 + 32) setLastOnDemandPublishTime:v12];
    }
  }
  else
  {
    uint64_t v12 = sub_1000599A8();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v18 = 0;
      uint64_t v13 = "SecureLocationMonitor: Received ondemand request but location manager not setup";
      id v14 = (uint8_t *)&v18;
      goto LABEL_11;
    }
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40));
}

id sub_1000930BC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)BOOL v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Received ondemand location publish request.", v5, 2u);
  }

  return [a2 publishOnDemandLocation:&stru_1002DC738];
}

void sub_100093334(uint64_t a1)
{
  unsigned int v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    CFStringRef v5 = @"stewie:";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ Requesting one time location", (uint8_t *)&v4, 0xCu);
  }

  uint64_t v3 = [*(id *)(a1 + 32) stewieLocationManager];
  [v3 requestLocation];
}

void sub_10009352C(uint64_t a1, void *a2)
{
  int v3 = _os_feature_enabled_impl();
  int v4 = sub_1000599A8();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v6 = 138412290;
      CFStringRef v7 = @"stewie:";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ Received publish request", (uint8_t *)&v6, 0xCu);
    }

    [a2 publishLocationToStewie:&stru_1002DC758];
  }
  else
  {
    if (v5)
    {
      int v6 = 138412290;
      CFStringRef v7 = @"stewie:";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ feature disabled", (uint8_t *)&v6, 0xCu);
    }
  }
}

void sub_1000942FC(uint64_t a1)
{
  unsigned int v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)CFStringRef v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Stopped location monitor since expired", v7, 2u);
  }

  int v3 = [*(id *)(a1 + 32) configManager];
  int v4 = [*(id *)(a1 + 32) configManager];
  BOOL v5 = [v4 activeConfig];
  int v6 = [v5 policyName];
  [v3 policyExpired:v6];
}

void sub_10009450C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(void *)(a1 + 32))
  {
    int v4 = sub_1000599A8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Error stopping SecureLocationMonitor %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_1000949A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_1000599A8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v12) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: - xpc activity triggered", (uint8_t *)&v12, 2u);
  }

  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    id v8 = sub_1000599A8();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: XPC Activity State Run", (uint8_t *)&v12, 2u);
    }

    if (!xpc_activity_should_defer(v3))
    {
      unsigned int v9 = +[FMPreferencesUtil BOOLForKey:@"kFMDSecureLocationsShouldStartMonitor" inDomain:kFMDNotBackedUpPrefDomain];
      if (([*(id *)(a1 + 32) isRunning] & 1) != 0 || !v9)
      {
        double v10 = sub_1000599A8();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v12) = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor already running", (uint8_t *)&v12, 2u);
        }

        [*(id *)(a1 + 32) _publishHeartbeatIfNeeded];
      }
      else
      {
        [*(id *)(a1 + 32) startLocationMonitor:&stru_1002DC6B8];
      }
      BOOL v11 = xpc_activity_set_state(v3, 5);
      id v6 = sub_1000599A8();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = 67109120;
        LODWORD(v13) = v11;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Setting state of XPC activity to done. Result %d", (uint8_t *)&v12, 8u);
      }
      goto LABEL_21;
    }
    if (!xpc_activity_set_state(v3, 3))
    {
      id v6 = sub_1000599A8();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_100241D30(v6);
      }
      goto LABEL_21;
    }
  }
  else if (!state)
  {
    id v6 = sub_1000599A8();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      xpc_object_t v7 = xpc_activity_copy_criteria(v3);
      int v12 = 138412290;
      xpc_object_t v13 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: XPC Activity Checkin with criteria %@", (uint8_t *)&v12, 0xCu);
    }
LABEL_21:
  }
}

void sub_100094C3C(id a1, NSError *a2)
{
  if (a2)
  {
    unsigned int v2 = sub_1000599A8();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "XPC Activity - Error Starting SecureLocationMonitor", v3, 2u);
    }
  }
}

void sub_100094EF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3 || (id v6 = *(void **)(a1 + 32)) == 0)
  {
    int v4 = sub_1000599A8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543618;
      id v11 = v3;
      __int16 v12 = 2114;
      uint64_t v13 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Error stopping %{public}@ OR NO activeConfig %{public}@", buf, 0x16u);
    }
  }
  else
  {
    xpc_object_t v7 = *(void **)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100095030;
    v8[3] = &unk_1002D9768;
    unsigned int v9 = v6;
    [v7 startLocationMonitor:v8];
    int v4 = v9;
  }
}

void sub_100095030(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_1000599A8();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138543618;
    uint64_t v7 = v5;
    __int16 v8 = 2114;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed Restarting Location Monitor with new config  %{public}@. Error %{public}@.", (uint8_t *)&v6, 0x16u);
  }
}

void sub_1000950F8(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138543362;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed Restarting Location Monitor with new config. Error %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100095310(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Completed starting Location Monitor with extended config. Error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000953BC(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: Published one time on extension of proactive. Error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10009556C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100095580(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained publishOneTimeShallowLocation:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_100095B54(id a1, NSError *a2)
{
  unsigned int v2 = a2;
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    uint64_t v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: completed ondemand publish request. Error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100095C00(id a1, NSError *a2)
{
  unsigned int v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 138412290;
    CFStringRef v4 = @"stewie:";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationMonitor: %@ requested publish", (uint8_t *)&v3, 0xCu);
  }
}

void sub_100095CFC(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDServerConfig);
  uint64_t v2 = qword_10031EB78;
  qword_10031EB78 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10009655C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) dataArchiver];
  int v3 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", objc_opt_class(), 0);
  id v11 = 0;
  CFStringRef v4 = [v2 readDictionaryAndClasses:v3 error:&v11];
  id v5 = v11;

  if (v5)
  {
    int v6 = sub_1000599A8();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100241D74();
    }

    uint64_t v7 = [*(id *)(a1 + 32) configForPolicy:kFMDSecureLocationModeBackgroundProactive];
    __int16 v8 = *(void **)(a1 + 32);
  }
  else
  {
    uint64_t v7 = [*(id *)(a1 + 32) _readConfigFromDictionary:v4];
    id v9 = sub_1000599A8();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      CFStringRef v13 = @"SecureLocationConfig";
      __int16 v14 = 2112;
      xpc_activity_state_t v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ Read config from file %@", buf, 0x16u);
    }

    __int16 v8 = *(void **)(a1 + 32);
    if (!v7)
    {
      double v10 = [v8 configForPolicy:kFMDSecureLocationModeBackgroundProactive];
      [*(id *)(a1 + 32) setActiveConfig:v10];

      goto LABEL_9;
    }
  }
  [v8 setActiveConfig:v7];
LABEL_9:
}

void sub_1000967F4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _dictionaryFromConfigData:*(void *)(a1 + 40)];
  if (v2)
  {
    int v3 = [*(id *)(a1 + 32) dataArchiver];
    CFStringRef v4 = [v3 saveDictionary:v2];

    id v5 = sub_1000599A8();
    int v6 = v5;
    if (v4)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_100241E60();
      }
    }
    else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412290;
      CFStringRef v15 = @"SecureLocationConfig";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@ Archived config data successfully", (uint8_t *)&v14, 0xCu);
    }
  }
  else
  {
    CFStringRef v4 = sub_1000599A8();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100241DE8(v4, v7, v8, v9, v10, v11, v12, v13);
    }
  }
}

void sub_100096A7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _parseConfigFile:*(void *)(a1 + 40)];
  if (v2)
  {
    [*(id *)(a1 + 32) setActiveConfig:v2];
    int v3 = [*(id *)(a1 + 32) delegate];

    if (v3)
    {
      CFStringRef v4 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100096C04;
      block[3] = &unk_1002D9378;
      void block[4] = *(void *)(a1 + 32);
      dispatch_async(v4, block);
    }
    [*(id *)(a1 + 32) _archiveConfigFile:*(void *)(a1 + 40)];
    id v5 = sub_1000599A8();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = [*(id *)(a1 + 32) activeConfig];
      *(_DWORD *)buf = 138412546;
      CFStringRef v9 = @"SecureLocationConfig";
      __int16 v10 = 2112;
      uint64_t v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@ Setting active config as %@", buf, 0x16u);
    }
  }
}

void sub_100096C04(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) delegate];
  uint64_t v2 = [*(id *)(a1 + 32) activeConfig];
  [v3 activeConfigChanged:v2];
}

void sub_1000976B4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000976C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [*(id *)(a1 + 32) mode];
  id v3 = [WeakRetained configForPolicy:v2];

  CFStringRef v4 = +[NSDate date];
  [v3 expirationInterval];
  id v5 = [v4 dateByAddingTimeInterval:];

  int v6 = [WeakRetained policyExpirationTimes];
  uint64_t v7 = [*(id *)(a1 + 32) mode];
  [v6 setObject:v5 forKey:v7];

  [WeakRetained _addContext:*(void *)(a1 + 32) withExpiration:v5];
  uint64_t v8 = [*(id *)(a1 + 32) mode];
  [WeakRetained _policyRequested:v8];
}

void sub_100097D64(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100097D78(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = [WeakRetained activeConfig];
  CFStringRef v4 = [v3 policyName];

  if ([a1[4] stopMonitoringActivePolicy])
  {
    id v5 = sub_1000599A8();
    int v6 = v5;
    if (v4)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)id v32 = 138412546;
        *(void *)&v32[4] = @"SecureLocationConfig";
        *(_WORD *)&v32[12] = 2114;
        *(void *)&v32[14] = v4;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@ Removing active policy: %{public}@", v32, 0x16u);
      }

      uint64_t v7 = [WeakRetained activePolicies];
      [v7 removeObjectForKey:v4];

      uint64_t v8 = [WeakRetained policyExpirationTimes];
      [v8 removeObjectForKey:v4];

      [WeakRetained policyExpired:v4];
    }
    else
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
        sub_100241FC0(v6, v17, v18, v19, v20, v21, v22, v23);
      }

      id v24 = [WeakRetained delegate];
      id v25 = v24;
      if (v24) {
        [v24 activeConfigChanged:0];
      }
    }
    goto LABEL_24;
  }
  CFStringRef v9 = [a1[5] _removeContext:a1[4]];
  __int16 v10 = [WeakRetained policyExpirationTimes];
  uint64_t v11 = [a1[4] mode];
  if (v9)
  {
    [v10 setObject:v9 forKey:v11];

    uint64_t v12 = sub_1000599A8();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    uint64_t v13 = [a1[4] mode];
    *(_DWORD *)id v32 = 138412802;
    *(void *)&v32[4] = @"SecureLocationConfig";
    *(_WORD *)&v32[12] = 2114;
    *(void *)&v32[14] = v13;
    *(_WORD *)&v32[22] = 2114;
    id v33 = v9;
    int v14 = "%@ Updated expirationTime for %{public}@ to %{public}@";
    CFStringRef v15 = v12;
    uint32_t v16 = 32;
  }
  else
  {
    [v10 removeObjectForKey:v11];

    uint64_t v12 = sub_1000599A8();
    if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_17;
    }
    uint64_t v13 = [a1[4] mode];
    *(_DWORD *)id v32 = 138412546;
    *(void *)&v32[4] = @"SecureLocationConfig";
    *(_WORD *)&v32[12] = 2114;
    *(void *)&v32[14] = v13;
    int v14 = "%@ No more subs left for %{public}@";
    CFStringRef v15 = v12;
    uint32_t v16 = 22;
  }
  _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v14, v32, v16);

LABEL_17:
  double v26 = [WeakRetained activeConfig];

  if (v26)
  {
    double v27 = [a1[4] mode];
    unsigned int v28 = [v27 isEqualToString:v4];

    if (v28)
    {
      double v29 = +[NSDate date];
      id v30 = v29;
      if (!v9 || [v29 compare:v9] == (id)1)
      {
        uint64_t v31 = [a1[4] mode:*(_OWORD *)v32 *(void *)&v32[16] v33];
        [WeakRetained policyExpired:v31];
      }
    }
  }

LABEL_24:
}

int64_t sub_10009839C(id a1, id a2, id a3)
{
  return (int64_t)[a2 compare:a3];
}

void sub_1000984F0(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100098504(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (*(void *)(a1 + 32))
  {
    CFStringRef v4 = [WeakRetained policyExpirationTimes];
    [v4 removeObjectForKey:*(void *)(a1 + 32)];
  }
  id v5 = [v3 activeConfig];
  int v6 = [v5 policyName];
  LODWORD(v7) = [v6 isEqualToString:*(void *)(a1 + 32)];

  if (v7)
  {
    uint64_t v8 = sub_1000599A8();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v9 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      CFStringRef v37 = @"SecureLocationConfig";
      __int16 v38 = 2114;
      long long v39 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ Active config expired: %{public}@", buf, 0x16u);
    }

    [v3 setActiveConfig:0];
  }
  __int16 v10 = +[NSDate date];
  uint64_t v11 = sub_1000599A8();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = [*(id *)(a1 + 40) policyExpirationTimes];
    *(_DWORD *)buf = 138412546;
    CFStringRef v37 = @"SecureLocationConfig";
    __int16 v38 = 2114;
    long long v39 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@ policyExpirationTimes %{public}@", buf, 0x16u);
  }
  double v29 = v3;

  long long v33 = 0u;
  long long v34 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  id obj = [*(id *)(a1 + 40) policyExpirationTimes];
  id v13 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
  if (v13)
  {
    id v14 = v13;
    CFStringRef v15 = 0;
    uint64_t v16 = *(void *)v32;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(void *)v32 != v16) {
          objc_enumerationMutation(obj);
        }
        uint64_t v18 = *(void *)(*((void *)&v31 + 1) + 8 * i);
        uint64_t v19 = [*(id *)(a1 + 40) policyExpirationTimes];
        uint64_t v20 = [v19 objectForKey:v18];

        if ([v10 compare:v20] == (id)-1)
        {
          uint64_t v21 = [*(id *)(a1 + 40) configForPolicy:v18];
          uint64_t v22 = v21;
          if (!v15 || (id v23 = [v21 priority], (uint64_t)v23 > (uint64_t)objc_msgSend(v15, "priority")))
          {
            uint64_t v7 = sub_1000599A8();
            if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEFAULT))
            {
              id v24 = [v22 policyName];
              *(_DWORD *)buf = 138412546;
              CFStringRef v37 = @"SecureLocationConfig";
              __int16 v38 = 2114;
              long long v39 = v24;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v7, OS_LOG_TYPE_DEFAULT, "%@ Found higher priority policy %{public}@", buf, 0x16u);
            }
            id v25 = v22;

            LOBYTE(v7) = 1;
            CFStringRef v15 = v25;
          }
        }
      }
      id v14 = [obj countByEnumeratingWithState:&v31 objects:v35 count:16];
    }
    while (v14);
  }
  else
  {
    CFStringRef v15 = 0;
  }

  if (v7)
  {
    double v26 = sub_1000599A8();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      CFStringRef v37 = @"SecureLocationConfig";
      __int16 v38 = 2114;
      long long v39 = v15;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%@ Changing active config to: %{public}@", buf, 0x16u);
    }

    [v29 setActiveConfig:v15];
    double v27 = [v29 delegate];
    if (v27)
    {
      unsigned int v28 = [*(id *)(a1 + 40) activeConfig];
      [v27 activeConfigChanged:v28];
    }
  }
}

void sub_100098A98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_100098B54()
{
  id v0 = objc_alloc_init((Class)objc_opt_class());
  uint64_t v1 = qword_10031EB90;
  qword_10031EB90 = (uint64_t)v0;

  return _objc_release_x1(v0, v1);
}

void sub_100098D20(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_100098D34(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = +[FMSystemInfo sharedInstance];
  unsigned int v4 = [v3 isInternalBuild];

  if (v4)
  {
    id v5 = [WeakRetained loggedEvents];
    unsigned __int8 v6 = [v5 containsObject:*(void *)(a1 + 32)];

    if ((v6 & 1) == 0)
    {
      if (*(void *)(a1 + 40))
      {
        uint64_t v7 = [WeakRetained loggedEvents];
        [v7 addObject:*(void *)(a1 + 32)];

        uint64_t v8 = sub_100004238();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v9 = *(void *)(a1 + 32);
          uint64_t v10 = *(void *)(a1 + 40);
          int v17 = 138412546;
          uint64_t v18 = v9;
          __int16 v19 = 2112;
          uint64_t v20 = v10;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ error occured %@", (uint8_t *)&v17, 0x16u);
        }

        uint64_t v11 = [(FMDEventLoggerEventError *)[FMDEventLoggerEventDataPeekError alloc] initWithEventName:*(void *)(a1 + 32)];
        uint64_t v12 = [*(id *)(a1 + 40) userInfo];
        id v13 = [v12 objectForKeyedSubscript:NSUnderlyingErrorKey];

        if (v13)
        {
          id v14 = v11;
          CFStringRef v15 = v13;
        }
        else
        {
          CFStringRef v15 = *(void **)(a1 + 40);
          id v14 = v11;
        }
        [(FMDEventLoggerEventDataPeekError *)v14 setError:v15];
        uint64_t v16 = +[FMDEventLogger sharedLogger];
        [v16 logEvent:v11];
      }
    }
  }
}

void sub_100099DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
}

void sub_100099E04(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) directoryURL];
    unsigned int v4 = [v3 path];
    int v6 = 138412290;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Monitored directory changed: %@", (uint8_t *)&v6, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained directoryChanged];
}

void sub_100099EE8(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) directoryURL];
    unsigned int v4 = [v3 path];
    int v9 = 138412290;
    uint64_t v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Monitored directory went away: %@", (uint8_t *)&v9, 0xCu);
  }
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = [*(id *)(a1 + 32) directoryURL];
    uint64_t v7 = [v6 path];
    int v9 = 138412290;
    uint64_t v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Monitored directory went away: %@", (uint8_t *)&v9, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained cancel];
}

void sub_10009B418(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 184));
  _Block_object_dispose((const void *)(v2 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_10009B454(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100059910();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    id v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDCommandHandlerLocate discovery started with error %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10009B500(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  uint64_t v7 = [*(id *)(a1 + 32) lastPublishedAccuracy];

  if (v7)
  {
    uint64_t v8 = [*(id *)(a1 + 32) lastPublishedAccuracy];
    [v8 doubleValue];
    double v10 = v9;
    uint64_t v11 = [v6 horizontalAccuracy];
    [v11 doubleValue];
    double v13 = v10 - v12;
  }
  else
  {
    double v13 = 0.0;
  }
  id v14 = [v6 horizontalAccuracy];
  [*(id *)(a1 + 32) setLastPublishedAccuracy:v14];

  BOOL v16 = a4 == 3 || a4 == 5;
  int v17 = *(void **)(a1 + 40);
  if (v17)
  {
    [v17 timeIntervalSinceNow];
    double v19 = v18 + 3.0;
    if (v19 > 0.0)
    {
      dispatch_time_t v20 = dispatch_time(0, (uint64_t)(v19 * 1000000000.0));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10009B900;
      block[3] = &unk_1002DC820;
      void block[4] = *(void *)(a1 + 32);
      id v34 = v6;
      BOOL v43 = v16;
      id v35 = *(id *)(a1 + 48);
      uint64_t v41 = a4;
      double v42 = v13;
      id v36 = *(id *)(a1 + 56);
      id v37 = *(id *)(a1 + 64);
      id v38 = *(id *)(a1 + 72);
      id v39 = *(id *)(a1 + 80);
      id v40 = *(id *)(a1 + 88);
      dispatch_after(v20, (dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
  [*(id *)(a1 + 32) _sendCurrentLocation:v6 isFinished:v16 forCmd:*(void *)(a1 + 48) withReason:a4 andAccuracyChange:v13];
  if (a4 == 5 || a4 == 3)
  {
    [*(id *)(a1 + 96) recordLocation:v6 ofType:0];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 120));
    [WeakRetained stopLocator];
  }
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24))
  {
    if (*(void *)(a1 + 104))
    {
      uint64_t v22 = +[FMDLostModeManager sharedInstance];
      unsigned int v23 = [v22 lostModeEnabled];

      if (v23)
      {
        id v24 = sub_100004238();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "Ignoring locate alert as the device is in lost mode...", v32, 2u);
        }
LABEL_31:

        goto LABEL_32;
      }
      id v25 = +[FMDSystemConfig sharedInstance];
      unsigned int v26 = [v25 isPasscodeSet];

      if (v26)
      {
        double v27 = +[FMDSystemConfig sharedInstance];
        if ([v27 isLocked])
        {
        }
        else
        {
          unsigned int v28 = +[FMDSystemConfig sharedInstance];
          unsigned int v29 = [v28 isLocking];

          if (!v29)
          {
            long long v31 = sub_100004238();
            if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)long long v32 = 0;
              _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "Displaying locate alert...", v32, 2u);
            }

            id v24 = +[FMAlertManager sharedInstance];
            [v24 activateAlert:*(void *)(a1 + 104)];
            goto LABEL_31;
          }
        }
        id v30 = sub_100004238();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)long long v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "Device is locked. Enqueing the alert to be shown after unlock", v32, 2u);
        }

        [*(id *)(a1 + 32) _showAlertAfterUnlock:*(void *)(a1 + 104)];
      }
    }
LABEL_32:
    *(unsigned char *)(*(void *)(*(void *)(a1 + 112) + 8) + 24) = 1;
  }
}

void sub_10009B900(uint64_t a1)
{
  [*(id *)(a1 + 32) _sendCurrentLocation:*(void *)(a1 + 40) isFinished:*(unsigned __int8 *)(a1 + 112) forCmd:*(void *)(a1 + 48) withReason:*(void *)(a1 + 96) andAccuracyChange:*(double *)(a1 + 104)];
  if ([*(id *)(a1 + 56) category] == (id)3)
  {
    id v3 = *(void **)(a1 + 64);
    uint64_t v2 = *(void **)(a1 + 72);
    uint64_t v4 = *(void *)(a1 + 80);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10009B9E4;
    v6[3] = &unk_1002D9768;
    id v7 = v2;
    [v3 stopDiscoveryForAccessory:v7 info:v4 withCompletion:v6];
  }
  else
  {
    id v5 = *(void **)(a1 + 88);
    [v5 stopDiscovery];
  }
}

void sub_10009B9E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100059878();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "discovery for %@ ended with error %@", (uint8_t *)&v6, 0x16u);
  }
}

id sub_10009BAAC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = [*(id *)(a1 + 32) standardLocator];

  if (v3)
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
      sub_1002421B8(v2, v4);
    }

    [*v2 setStandardLocator:0];
  }
  uint64_t v5 = *(void **)(a1 + 40);
  if (v5)
  {
    [v5 timeIntervalSinceNow];
    if (v6 < -3.0)
    {
      if ([*(id *)(a1 + 48) category] == (id)3)
      {
        __int16 v8 = *(void **)(a1 + 56);
        uint64_t v7 = *(void **)(a1 + 64);
        uint64_t v9 = *(void *)(a1 + 72);
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        _DWORD v11[2] = sub_10009BBDC;
        v11[3] = &unk_1002D9768;
        id v12 = v7;
        [v8 stopDiscoveryForAccessory:v12 info:v9 withCompletion:v11];
      }
      else
      {
        [*(id *)(a1 + 80) stopDiscovery];
      }
    }
  }
  return [*(id *)(a1 + 88) flushLocations];
}

void sub_10009BBDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = sub_100059878();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 138412546;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "discovery for %@ ended with error %@", (uint8_t *)&v6, 0x16u);
  }
}

id sub_10009BFBC(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDActingRequestDecorator);
  id v3 = [(FMDActingRequestDecorator *)v2 standardDeviceContext];

  uint64_t v4 = [*(id *)(a1 + 32) commandParams];
  uint64_t v5 = [v4 objectForKeyedSubscript:@"id"];
  [v3 fm_safelyMapKey:@"cmdId" toObject:v5];

  return v3;
}

id sub_10009C064(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accessoryIdentifier];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 40) accessoryRegistry];
    uint64_t v4 = [*(id *)(a1 + 32) accessoryIdentifier];
    uint64_t v5 = [v3 accessoryForIdentifier:v4];

    int v6 = +[ServerDeviceInfo sharedInstance];
    uint64_t v7 = [*(id *)(a1 + 40) account];
    __int16 v8 = [v6 locationDeviceInfoForAccount:v7 accessory:v5];
  }
  else
  {
    uint64_t v5 = +[ServerDeviceInfo sharedInstance];
    int v6 = [*(id *)(a1 + 40) account];
    __int16 v8 = [v5 deviceInfoForAccount:v6];
  }

  return v8;
}

void sub_10009C178(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    uint64_t v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      id v9 = [v3 fm_logID];
      int v16 = 138412546;
      int v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      double v10 = "%@: successful with status %ld";
      uint64_t v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        id v9 = [v3 fm_logID];
        int v16 = 138412290;
        int v17 = v9;
        double v10 = "%@: Cancelled";
        uint64_t v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      id v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      id v14 = [v3 httpResponseError];
      int v16 = 138412802;
      int v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      uint64_t v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

id sub_10009C750(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDActingRequestDecorator);
  id v3 = [(FMDActingRequestDecorator *)v2 standardDeviceContext];

  [v3 fm_safelyMapKey:@"cmdId" toObject:*(void *)(a1 + 32)];

  return v3;
}

id sub_10009C7C4(uint64_t a1)
{
  uint64_t v2 = +[ServerDeviceInfo sharedInstance];
  id v3 = [*(id *)(a1 + 32) account];
  uint64_t v4 = [v2 locationDeviceInfoForAccount:v3];

  return v4;
}

void sub_10009C840(id a1, FMDRequest *a2)
{
  uint64_t v2 = a2;
  if (![(FMDRequest *)v2 willRetry])
  {
    id v3 = [(FMDRequest *)v2 httpResponseError];
    if (v3
      || [(FMDRequest *)v2 httpResponseStatus] < 200
      || [(FMDRequest *)v2 httpResponseStatus] > 399)
    {
    }
    else if (![(FMDRequest *)v2 cancelled])
    {
      uint64_t v5 = sub_100004238();
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_13;
      }
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int v13 = 138412546;
      id v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = [(FMDRequest *)v2 httpResponseStatus];
      BOOL v8 = "%@: successful with status %ld";
      id v9 = v5;
      uint32_t v10 = 22;
      goto LABEL_9;
    }
    unsigned int v4 = [(FMDRequest *)v2 cancelled];
    uint64_t v5 = sub_100004238();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = [(FMDRequest *)v2 fm_logID];
        int v13 = 138412290;
        id v14 = v7;
        BOOL v8 = "%@: Cancelled";
        id v9 = v5;
        uint32_t v10 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v13, v10);
LABEL_12:
      }
    }
    else if (v6)
    {
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int64_t v11 = [(FMDRequest *)v2 httpResponseStatus];
      uint32_t v12 = [(FMDRequest *)v2 httpResponseError];
      int v13 = 138412802;
      id v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = v11;
      __int16 v17 = 2112;
      __int16 v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v13, 0x20u);

      goto LABEL_12;
    }
LABEL_13:
  }
}

id sub_10009D0AC(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDActingRequestDecorator);
  id v3 = [(FMDActingRequestDecorator *)v2 standardDeviceContext];

  [v3 fm_safelyMapKey:@"cmdId" toObject:*(void *)(a1 + 32)];

  return v3;
}

id sub_10009D120(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) accessoryRegistry];
  id v3 = [*(id *)(a1 + 40) accessoryIdentifier];
  unsigned int v4 = [v2 accessoryForIdentifier:v3];

  uint64_t v5 = +[ServerDeviceInfo sharedInstance];
  BOOL v6 = [*(id *)(a1 + 32) account];
  uint64_t v7 = [v5 locationDeviceInfoForAccount:v6 accessory:v4];

  return v7;
}

void sub_10009D1E0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (v5)
  {
    BOOL v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412290;
      id v17 = v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CommandHandlerLocate got an accessory location %@", (uint8_t *)&v16, 0xCu);
    }

    uint64_t v7 = [FMDRequestCurrentLocation alloc];
    BOOL v8 = [*(id *)(a1 + 32) account];
    uint64_t v9 = *(void *)(a1 + 64);
    [*(id *)(a1 + 40) doubleValue];
    int64_t v11 = [(FMDRequestCurrentLocation *)v7 initWithAccount:v8 location:v5 finalLocation:a3 reason:v9 accuracyChange:0.0 cacheValidityDuration:v10];

    [(FMDRequest *)v11 setDecorator:*(void *)(a1 + 48)];
    [(FMDRequest *)v11 setCompletionHandler:&stru_1002DC8B0];
    uint32_t v12 = [*(id *)(a1 + 32) accessoryRegistry];
    int v13 = [v12 accessoryForIdentifier:*(void *)(a1 + 56)];

    ct_green_tea_logger_create_static();
    id v14 = getCTGreenTeaOsLogHandle();
    __int16 v15 = v14;
    if (v14 && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      LOWORD(v16) = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "Transmitting Location.", (uint8_t *)&v16, 2u);
    }

    [*(id *)(a1 + 32) enqueueRequest:v11 forAccessory:v13];
  }
}

void sub_10009D3AC(id a1, FMDRequest *a2)
{
  uint64_t v2 = a2;
  if (![(FMDRequest *)v2 willRetry])
  {
    id v3 = [(FMDRequest *)v2 httpResponseError];
    if (v3
      || [(FMDRequest *)v2 httpResponseStatus] < 200
      || [(FMDRequest *)v2 httpResponseStatus] > 399)
    {
    }
    else if (![(FMDRequest *)v2 cancelled])
    {
      id v5 = sub_100004238();
      if (!os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_13;
      }
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int v13 = 138412546;
      id v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = [(FMDRequest *)v2 httpResponseStatus];
      BOOL v8 = "%@: successful with status %ld";
      uint64_t v9 = v5;
      uint32_t v10 = 22;
      goto LABEL_9;
    }
    unsigned int v4 = [(FMDRequest *)v2 cancelled];
    id v5 = sub_100004238();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = [(FMDRequest *)v2 fm_logID];
        int v13 = 138412290;
        id v14 = v7;
        BOOL v8 = "%@: Cancelled";
        uint64_t v9 = v5;
        uint32_t v10 = 12;
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v8, (uint8_t *)&v13, v10);
LABEL_12:
      }
    }
    else if (v6)
    {
      uint64_t v7 = [(FMDRequest *)v2 fm_logID];
      int64_t v11 = [(FMDRequest *)v2 httpResponseStatus];
      uint32_t v12 = [(FMDRequest *)v2 httpResponseError];
      int v13 = 138412802;
      id v14 = v7;
      __int16 v15 = 2048;
      int64_t v16 = v11;
      __int16 v17 = 2112;
      __int16 v18 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v13, 0x20u);

      goto LABEL_12;
    }
LABEL_13:
  }
}

id sub_10009D5CC(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDActingRequestDecorator);
  id v3 = [(FMDActingRequestDecorator *)v2 standardDeviceContext];

  [v3 fm_safelyMapKey:@"cmdId" toObject:*(void *)(a1 + 32)];

  return v3;
}

id sub_10009D640(uint64_t a1)
{
  uint64_t v2 = +[ServerDeviceInfo sharedInstance];
  id v3 = [*(id *)(a1 + 32) account];
  unsigned int v4 = [v2 locationDeviceInfoForAccount:v3];

  return v4;
}

void sub_10009D764(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = v3;
  if (v3 && [v3 count])
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 134217984;
      id v8 = [v4 count];
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Sending %ld tracked locations", (uint8_t *)&v7, 0xCu);
    }

    [*(id *)(a1 + 32) sendTrackedLocations:v4 withCurrentLocation:0];
  }
  else
  {
    BOOL v6 = sub_100004238();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "No tracked locations available. Not sending anything", (uint8_t *)&v7, 2u);
    }
  }
}

void sub_10009E058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009E080(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = sub_100059878();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 httpResponseStatus];
    int v7 = [v3 httpResponseBody];
    id v8 = [v3 httpResponseHeaders];
    int v28 = 138413058;
    id v29 = v3;
    __int16 v30 = 2048;
    id v31 = v6;
    __int16 v32 = 2112;
    long long v33 = v7;
    __int16 v34 = 2112;
    id v35 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v28, 0x2Au);
  }
  uint64_t v9 = [v3 httpResponseError];
  if (v9
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {
  }
  else if (([v3 cancelled] & 1) == 0)
  {
    __int16 v17 = [v3 httpResponseBody];
    id v18 = objc_alloc_init((Class)FMDPairingCheckCommandResponseInfo);
    __int16 v20 = [v17 objectForKeyedSubscript:@"phoneNumber"];
    [v18 setPhoneNumber:v20];

    uint64_t v21 = [v17 objectForKeyedSubscript:@"statusCode"];
    [v18 setStatusCode:v21];

    uint64_t v22 = [v17 objectForKeyedSubscript:@"signature"];
    [v18 setSignature:v22];

    unsigned int v23 = [v17 objectForKeyedSubscript:@"servernonce"];
    [v18 setServerNonce:v23];

    id v24 = [v17 objectForKeyedSubscript:@"lostInfo"];
    [v18 setLostModeInfo:v24];

    id v25 = [v17 objectForKeyedSubscript:@"useEraseKeyType"];
    [v18 setUseEraseKeyType:v25];

    unsigned int v26 = [WeakRetained onCompletionHandler];

    if (v26)
    {
      double v27 = [WeakRetained onCompletionHandler];
      ((void (**)(void, void, id))v27)[2](v27, 0, v18);
    }
    goto LABEL_15;
  }
  unsigned int v10 = [v3 cancelled];
  int64_t v11 = sub_100059878();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (v12)
    {
      int v13 = [v3 fm_logID];
      int v28 = 138412290;
      id v29 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v28, 0xCu);
LABEL_12:
    }
  }
  else if (v12)
  {
    int v13 = [v3 fm_logID];
    id v14 = [v3 httpResponseStatus];
    __int16 v15 = [v3 httpResponseError];
    int v28 = 138412802;
    id v29 = v13;
    __int16 v30 = 2048;
    id v31 = v14;
    __int16 v32 = 2112;
    long long v33 = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v28, 0x20u);

    goto LABEL_12;
  }

  int64_t v16 = [WeakRetained onCompletionHandler];

  if (!v16) {
    goto LABEL_16;
  }
  __int16 v17 = [WeakRetained onCompletionHandler];
  id v18 = [v3 httpResponseError];
  ((void (**)(void, id, void))v17)[2](v17, v18, 0);
LABEL_15:

LABEL_16:
  uint64_t v19 = *(void *)(a1 + 32);
  if (v19) {
    (*(void (**)(void))(v19 + 16))();
  }
}

void sub_10009E808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009E820(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) underlyingDictionary];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count];
}

void sub_10009E9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E9C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10009E9D0(uint64_t a1)
{
}

void sub_10009E9D8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) underlyingDictionary];
  uint64_t v2 = [v5 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10009EB20(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) underlyingDictionary];
  [v2 setObject:*(void *)(a1 + 40) forKey:*(void *)(a1 + 48)];
}

void sub_10009EC2C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) underlyingDictionary];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];
}

void sub_10009ED84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009ED9C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) underlyingDictionary];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10009F040(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10009F064(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v3 = [WeakRetained replacedExsitingAction:*(void *)(a1 + 32)];
  unsigned int v4 = sub_1000596B0();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      id v6 = *(void **)(a1 + 32);
      int v7 = [WeakRetained requests];
      int v12 = 138412546;
      id v13 = v6;
      __int16 v14 = 2112;
      __int16 v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Replacing existing action: %@ already in queue: %@", (uint8_t *)&v12, 0x16u);
    }
  }
  else
  {
    if (v5)
    {
      id v8 = *(void **)(a1 + 32);
      int v12 = 138412290;
      id v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Executing block add request: %@", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v9 = [WeakRetained requests];
    [v9 addObject:*(void *)(a1 + 32)];

    unsigned int v10 = sub_1000596B0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      int64_t v11 = [WeakRetained requests];
      int v12 = 138412546;
      id v13 = WeakRetained;
      __int16 v14 = 2112;
      __int16 v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%@ requests in queue - %@", (uint8_t *)&v12, 0x16u);
    }
    [WeakRetained processRequests];
  }
}

void sub_10009F3A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009F3D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v3 = [WeakRetained isPaused];
  unsigned int v4 = sub_1000596B0();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v9 = 138412290;
      id v10 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ could not cancel request queue paused", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    if (v5)
    {
      id v6 = *(void **)(a1 + 32);
      int v9 = 138412546;
      id v10 = WeakRetained;
      __int16 v11 = 2112;
      int v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ executing block for action to be removed - %@", (uint8_t *)&v9, 0x16u);
    }

    [*(id *)(a1 + 32) willCancelAction];
    int v7 = [WeakRetained requests];
    [v7 removeObject:*(void *)(a1 + 32)];

    unsigned int v4 = sub_1000596B0();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [WeakRetained requests];
      int v9 = 138412546;
      id v10 = WeakRetained;
      __int16 v11 = 2112;
      int v12 = v8;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ requests remaining - %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

void sub_10009F97C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10009F9A0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = sub_1000596B0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v8 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Action with action manager called completion - %@", buf, 0xCu);
  }

  unsigned int v4 = [WeakRetained requestsOperationQueue];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_10009FAF4;
  v5[3] = &unk_1002D93C8;
  objc_copyWeak(&v6, v1);
  [v4 addOperationWithBlock:v5];

  objc_destroyWeak(&v6);
}

void sub_10009FAD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10009FAF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setQueueCount:[WeakRetained queueCount] - 1];
  [WeakRetained processRequests];
}

void sub_10009FDAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009FDD0(void *a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0 && [v8 shouldCancelAction:a1[4]])
  {
    *(void *)(*(void *)(a1[5] + 8) + 24) = a3;
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    if (objc_opt_respondsToSelector()) {
      [v8 willCancelAction];
    }
    *a4 = 1;
  }

  return _objc_release_x3();
}

void sub_1000A01F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1000A0230(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = [WeakRetained didDiscoverDevice];
  BOOL v5 = (void *)v4;
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }
}

void sub_1000A02AC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = [WeakRetained didLoseDevice];
  BOOL v5 = (void *)v4;
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }
}

void sub_1000A0328(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained didEndDiscoveryWithError:v3];
}

void sub_1000A05A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000A05C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained activeTokens];
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 32)];

  uint64_t v4 = [WeakRetained activeTokens];
  [v4 removeObject:*(void *)(a1 + 32)];

  if (v3)
  {
    BOOL v5 = [*(id *)(a1 + 32) tokenDiscoveryEnded];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) tokenDiscoveryEnded];
      v6[2]();
    }
  }
  [WeakRetained updateDisccovery];
}

void sub_1000A07F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000A080C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained activeTokens];
  [v2 fm_safeAddObject:*(void *)(a1 + 32)];

  [WeakRetained updateDisccovery];
}

void sub_1000A09CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_1000A09F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained activeTokens];
  id v2 = [v1 copy];

  [v2 enumerateObjectsUsingBlock:&stru_1002DC968];
  unsigned int v3 = [WeakRetained activeTokens];
  [v3 removeAllObjects];
}

void sub_1000A0A78(id a1, FMDBluetoothDiscoveryToken *a2, unint64_t a3, BOOL *a4)
{
  id v6 = a2;
  uint64_t v4 = [(FMDBluetoothDiscoveryToken *)v6 tokenDiscoveryEnded];

  if (v4)
  {
    BOOL v5 = [(FMDBluetoothDiscoveryToken *)v6 tokenDiscoveryEnded];
    v5[2]();
  }
}

void sub_1000A0C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000A0C64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained scanningTimerFired];
}

void sub_1000A0D84(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000A0D98(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained activeTokens];
  id v3 = [v2 count];

  if (v3)
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v5 = [WeakRetained activeTokens];
      int v6 = 138412290;
      int v7 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDBluetoothDiscovery unterminated tokens %@.", (uint8_t *)&v6, 0xCu);
    }
  }
  [WeakRetained updateDisccovery];
}

int64_t sub_1000A1210(id a1, FMDBluetoothDiscoveryToken *a2, FMDBluetoothDiscoveryToken *a3)
{
  uint64_t v4 = a3;
  BOOL v5 = [(FMDBluetoothDiscoveryToken *)a2 endDate];
  int v6 = [(FMDBluetoothDiscoveryToken *)v4 endDate];

  id v7 = [v5 compare:v6];
  return (int64_t)v7;
}

void sub_1000A1FD0(uint64_t a1)
{
  id v2 = +[NSSet setWithArray:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setNotifyWhenDetachedAccessoryIds:v2];

  [*(id *)(a1 + 32) setNotifWhenDetachedListVersion:*(void *)(a1 + 48)];
  id v3 = objc_alloc_init((Class)NSMutableDictionary);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v4 = *(id *)(a1 + 40);
  id v5 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v19;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v18 + 1) + 8 * (void)v8);
        id v10 = [*(id *)(a1 + 32) notificationIdbyAccessoryIds];
        __int16 v11 = [v10 objectForKeyedSubscript:v9];

        if (v11)
        {
          int v12 = [*(id *)(a1 + 32) notificationIdbyAccessoryIds];
          id v13 = [v12 objectForKeyedSubscript:v9];
          [v3 setObject:v13 forKeyedSubscript:v9];
        }
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v18 objects:v22 count:16];
    }
    while (v6);
  }

  [*(id *)(a1 + 32) setNotificationIdbyAccessoryIds:v3];
  id v14 = [*(id *)(a1 + 32) _writeToDisk];
  __int16 v15 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A2210;
  block[3] = &unk_1002DA130;
  id v17 = *(id *)(a1 + 56);
  dispatch_async(v15, block);
}

uint64_t sub_1000A2210(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_1000A2774(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100004238();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "got new location %@", (uint8_t *)&v5, 0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A2B34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(FMDUserNotificationContent);
  [*(id *)(a1 + 32) timeIntervalSinceNow];
  double v6 = v5;
  double v7 = 0.0;
  if (objc_opt_respondsToSelector())
  {
    id v8 = [*(id *)(a1 + 40) performSelector:"accessoryType"];
    uint64_t v9 = +[FMDExtConfigurationRegistry sharedInstance];
    id v10 = [v9 configForAccessoryType:v8];

    [v10 detachNotificaitonsWaitTime];
    double v7 = v11;
  }
  double v12 = fabs(v6);
  id v13 = sub_100004238();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    double v29 = v7;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: waitTime %f", buf, 0xCu);
  }

  if (v7 - v12 >= 0.0) {
    double v14 = v7 - v12;
  }
  else {
    double v14 = 0.0;
  }
  __int16 v15 = sub_100004238();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    double v29 = v14;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: remainingWaitTime %f", buf, 0xCu);
  }

  dispatch_time_t v16 = dispatch_time(0, (uint64_t)(v14 * 1000000000.0));
  id v17 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A2DE8;
  block[3] = &unk_1002DCA58;
  long long v18 = *(void **)(a1 + 56);
  void block[4] = *(void *)(a1 + 48);
  id v22 = v18;
  id v23 = *(id *)(a1 + 64);
  id v24 = *(id *)(a1 + 40);
  id v25 = v4;
  id v26 = v3;
  id v27 = *(id *)(a1 + 72);
  id v19 = v3;
  long long v20 = v4;
  dispatch_after(v16, v17, block);
}

void sub_1000A2DE8(id *a1)
{
  id v2 = [a1[4] notificationIdbyAccessoryIds];
  id v3 = [v2 objectForKeyedSubscript:a1[5]];

  if (v3 && [a1[6] isEqualToString:v3])
  {
    id v4 = [a1[7] connectionState];
    double v5 = sub_100004238();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
    if (v4 == (id)1)
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: Accessory is connected not posting notificaiton", buf, 2u);
      }

      id v7 = objc_alloc((Class)NSMutableDictionary);
      id v8 = [a1[4] notificationIdbyAccessoryIds];
      id v9 = [v7 initWithDictionary:v8];

      [v9 setObject:0 forKeyedSubscript:a1[5]];
      [a1[4] setNotificationIdbyAccessoryIds:v9];
    }
    else
    {
      if (v6)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: postingNotification", buf, 2u);
      }

      id v10 = [@"MAGSAFE_WALLET_DETACH_NOTIFICATION_TITLE" fmd_localizedStringInTable:@"Localizable-MULDER"];
      double v11 = [a1[7] name];
      double v12 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v10, v11);
      [a1[8] setTitle:v12];

      id v13 = [@"MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE_DEFAULT" fmd_localizedStringInTable:@"Localizable-MULDER"];
      [a1[8] setBody:v13];

      [a1[8] setCategoryIdentifier:@"FMD_NOTIFY_WHEN_DETACHED"];
      double v14 = [a1[7] deviceInfo];
      __int16 v15 = [v14 objectForKeyedSubscript:@"serialNumbers"];
      dispatch_time_t v16 = [v15 objectForKeyedSubscript:@"systemSerialNumber"];
      [a1[8] setSerialNumber:v16];

      [a1[8] setDeviceId:a1[5]];
      [a1[8] setIdentifier:v3];
      id v17 = [a1[8] title];
      [a1[8] setLocationTitle:v17];

      [a1[8] setInterruptionLevel:2];
      long long v18 = +[FMDRestrictedRegions sharedInstance];
      unsigned int v19 = [v18 isRestrictedSKU];

      long long v20 = +[FMDRestrictedRegions sharedInstance];
      long long v21 = [a1[9] location];
      id v22 = [v21 latitude];
      [v22 doubleValue];
      double v24 = v23;
      id v25 = [a1[9] location];
      id v26 = [v25 longitude];
      [v26 doubleValue];
      unsigned int v28 = [v20 isRestrictedLocationWithLatitude:v24 longitude:v27];

      double v29 = sub_100004238();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
      {
        id v39 = a1[9];
        *(_DWORD *)buf = 138412802;
        id v45 = v39;
        __int16 v46 = 1024;
        unsigned int v47 = v19;
        __int16 v48 = 1024;
        unsigned int v49 = v28;
        _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "id location = %@ isRestrictRegion = %d isRestrictedLocation = %d", buf, 0x18u);
      }

      if (a1[9]) {
        int v30 = v19;
      }
      else {
        int v30 = 1;
      }
      if (v30 | v28) {
        id v31 = @"MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE_DEFAULT";
      }
      else {
        id v31 = @"MAGSAFE_WALLET_DETACH_NOTIFICATION_MESSAGE";
      }
      __int16 v32 = [(__CFString *)v31 fmd_localizedStringInTable:@"Localizable-MULDER"];
      [a1[8] setLocationMessage:v32];

      long long v33 = [a1[9] location];
      __int16 v34 = [v33 latitude];
      [v34 doubleValue];
      [a1[8] setLatitude:];

      id v35 = [a1[9] location];
      id v36 = [v35 longitude];
      [v36 doubleValue];
      [a1[8] setLongitude:];

      id v37 = +[FMDFMIPManager sharedInstance];
      id v38 = a1[8];
      v40[0] = _NSConcreteStackBlock;
      v40[1] = 3221225472;
      v40[2] = sub_1000A3318;
      v40[3] = &unk_1002DCA30;
      v40[4] = a1[4];
      id v41 = a1[10];
      id v42 = a1[5];
      id v43 = a1[8];
      [v37 addNotificationRequest:v38 completion:v40];
    }
  }
}

void sub_1000A3318(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v4 = objc_alloc((Class)NSMutableDictionary);
    double v5 = [*(id *)(a1 + 32) notificationIdbyAccessoryIds];
    id v7 = [v4 initWithDictionary:v5];

    BOOL v6 = [*(id *)(a1 + 56) identifier];
    [*(id *)(a1 + 40) setObject:v6 forKeyedSubscript:*(void *)(a1 + 48)];

    [*(id *)(a1 + 32) setNotificationIdbyAccessoryIds:v7];
  }
}

void sub_1000A3560(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100004238();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 138412290;
    double v5 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "FMDDetachNotificationManager: removing notificaiton completed with %@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1000A425C(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDPowerMgr);
  uint64_t v2 = qword_10031EB98;
  qword_10031EB98 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000A470C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long buf)
{
  if (a2 == 1)
  {
    id v15 = objc_begin_catch(a1);
    dispatch_time_t v16 = sub_100004238();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v15;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Exception caught while attempting to take power assertion: %@", (uint8_t *)&buf, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1000A4668);
  }
  _Unwind_Resume(a1);
}

void sub_1000A491C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(a1);
    double v12 = sub_100004238();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Exception caught while attempting to release power assertion: %@", (uint8_t *)&buf, 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1000A48E0);
  }
  _Unwind_Resume(a1);
}

void sub_1000A4B9C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x12u);
}

void sub_1000A5370(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 responseErrorType] == (id)257) {
    goto LABEL_11;
  }
  if ([v3 willRetry]) {
    goto LABEL_12;
  }
  if ([v3 cmdStatusCode] != (id)200)
  {
LABEL_11:
    [*(id *)(a1 + 32) _abortWipe];
    goto LABEL_12;
  }
  id v4 = [v3 httpResponseStatus];
  double v5 = sub_100004238();
  BOOL v6 = v5;
  if (v4 != (id)200)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = [v3 fm_logID];
      *(_DWORD *)buf = 138412546;
      id v11 = v8;
      __int16 v12 = 2048;
      id v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@: Error with status %ld. Aborting wipe...", buf, 0x16u);
    }
    goto LABEL_11;
  }
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG)) {
    sub_100242668(v3, v6);
  }

  +[FMDPreferencesMgr setWipeState:2];
  id v7 = +[FMXPCTransactionManager sharedInstance];
  [v7 beginTransaction:@"WipeStarted"];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000A555C;
  block[3] = &unk_1002D9378;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
LABEL_12:
}

id sub_1000A555C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _wipeNow];
}

id sub_1000A583C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _abortWipe];
}

void sub_1000A5974(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_100004238();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);
  if (v2)
  {
    if (v4)
    {
      int v8 = 138412290;
      id v9 = v2;
      double v5 = "Could not erase device. Error - %@";
      BOOL v6 = v3;
      uint32_t v7 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v5, (uint8_t *)&v8, v7);
    }
  }
  else if (v4)
  {
    LOWORD(v8) = 0;
    double v5 = "Erase completed";
    BOOL v6 = v3;
    uint32_t v7 = 2;
    goto LABEL_6;
  }
}

void sub_1000A6A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A6A90(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v5 = sub_100059878();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [v3 httpResponseStatus];
    uint32_t v7 = [v3 httpResponseBody];
    int v8 = [v3 httpResponseHeaders];
    int v24 = 138413058;
    id v25 = v3;
    __int16 v26 = 2048;
    id v27 = v6;
    __int16 v28 = 2112;
    double v29 = v7;
    __int16 v30 = 2112;
    id v31 = v8;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "request = %@, status = %ld %@ %@", (uint8_t *)&v24, 0x2Au);
  }
  id v9 = [v3 httpResponseError];
  if (v9
    || (uint64_t)[v3 httpResponseStatus] < 200
    || (uint64_t)[v3 httpResponseStatus] > 399)
  {
  }
  else if (([v3 cancelled] & 1) == 0)
  {
    id v17 = [v3 httpResponseBody];
    id v18 = objc_alloc_init((Class)FMDPairingLockRegisterResponseInfo);
    long long v20 = [v17 objectForKeyedSubscript:@"serialNumber"];
    [v18 setSerialNumber:v20];

    long long v21 = [v17 objectForKeyedSubscript:@"pairingCheckToken"];
    [v18 setPairingToken:v21];

    id v22 = [WeakRetained onCompletionHandler];

    if (v22)
    {
      double v23 = [WeakRetained onCompletionHandler];
      ((void (**)(void, void, id))v23)[2](v23, 0, v18);
    }
    goto LABEL_15;
  }
  unsigned int v10 = [v3 cancelled];
  id v11 = sub_100059878();
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (v10)
  {
    if (v12)
    {
      id v13 = [v3 fm_logID];
      int v24 = 138412290;
      id v25 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", (uint8_t *)&v24, 0xCu);
LABEL_12:
    }
  }
  else if (v12)
  {
    id v13 = [v3 fm_logID];
    id v14 = [v3 httpResponseStatus];
    id v15 = [v3 httpResponseError];
    int v24 = 138412802;
    id v25 = v13;
    __int16 v26 = 2048;
    id v27 = v14;
    __int16 v28 = 2112;
    double v29 = v15;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v24, 0x20u);

    goto LABEL_12;
  }

  dispatch_time_t v16 = [WeakRetained onCompletionHandler];

  if (!v16) {
    goto LABEL_16;
  }
  id v17 = [WeakRetained onCompletionHandler];
  id v18 = [v3 httpResponseError];
  ((void (**)(void, id, void))v17)[2](v17, v18, 0);
LABEL_15:

LABEL_16:
  uint64_t v19 = *(void *)(a1 + 32);
  if (v19) {
    (*(void (**)(void))(v19 + 16))();
  }
}

id sub_1000A7C84(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16), *(id *)(a1 + 40));
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  BOOL v4 = *(void **)(a1 + 32);

  return [v4 _accountDidChangeFrom:v2 to:v3];
}

uint64_t sub_1000A7CCC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000A7CDC(uint64_t a1)
{
}

void sub_1000A80C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    BOOL v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100242928(a1);
    }
  }
  else
  {
    [*(id *)(a1 + 32) removeAccountPreferences];
    BOOL v4 = +[FMDLocalActivationLockInfoManager sharedInstance];
    [v4 clearAllState];
  }

  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    (*(void (**)(uint64_t, id))(v5 + 16))(v5, v3);
  }
}

void sub_1000A85C8(id a1, FMDInternalAccessory *a2, unint64_t a3, BOOL *a4)
{
  BOOL v4 = a2;
  +[AccessoryRegisterAction cleanupContextForAccessory:v4];
  id v5 = [(FMDInternalAccessory *)v4 commandContext];

  [v5 cleanupContexts];
}

void sub_1000A8DDC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint32_t v7 = v6;
  if (!v5 || v6)
  {
    id v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = 138543362;
      id v11 = v7;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Failed to get PET info %{public}@", (uint8_t *)&v10, 0xCu);
    }
  }
  else
  {
    int v8 = [v5 objectForKeyedSubscript:AKAuthenticationUsernameKey];
    [*(id *)(a1 + 32) setUsername:v8];

    id v9 = [v5 objectForKeyedSubscript:AKAuthenticationPasswordKey];
    [*(id *)(a1 + 32) setPet:v9];
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1000A9178(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A9CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000A9D0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [*(id *)(a1 + 32) apsToken];

  if (!v3)
  {
    BOOL v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      id v5 = [WeakRetained serviceName];
      int v6 = 138412290;
      uint32_t v7 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ is not functional as an APS token is not available.", (uint8_t *)&v6, 0xCu);
    }
  }
}

void sub_1000A9DF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SP Beacon stats changed", v3, 2u);
  }
}

void sub_1000AA180(uint64_t a1)
{
  uint64_t v2 = [[RegisterAction alloc] initWithReason:0 force:0 provider:*(void *)(a1 + 32)];
  id v3 = +[ActionManager sharedManager];
  id v4 = [v3 enqueueAction:v2];

  id v5 = [*(id *)(a1 + 32) accessoryRegistry];
  int v6 = [v5 allAccessories];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_1000AA274;
  v7[3] = &unk_1002DC140;
  void v7[4] = *(void *)(a1 + 32);
  [v6 enumerateObjectsUsingBlock:v7];
}

id sub_1000AA274(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) queueAccessoryActionsIfNeeded:a2];
}

void sub_1000AAA8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000AAAAC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) serverInteractionControllerByAccessory];
  uint64_t v3 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    int v6 = objc_alloc_init(FMDDirectServerChannel);
    v15[0] = v6;
    uint32_t v7 = objc_alloc_init(FMDCadmiumServerChannel);
    v15[1] = v7;
    int v8 = +[NSArray arrayWithObjects:v15 count:2];

    id v9 = [[FMDServerInteractionController alloc] initWithChannels:v8 delegate:*(void *)(a1 + 32)];
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;

    BOOL v12 = [*(id *)(a1 + 40) stringValue];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setUdid:v12];

    uint64_t v13 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    id v14 = [*(id *)(a1 + 32) serverInteractionControllerByAccessory];
    [v14 setObject:v13 forKeyedSubscript:*(void *)(a1 + 40)];
  }
}

void sub_1000AADB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000AADC8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) serverInteractionControllerByAccount];
  uint64_t v3 = [*(id *)(a1 + 40) authId];
  uint64_t v4 = [v2 objectForKeyedSubscript:v3];
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  int v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint32_t v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  if (!v7)
  {
    int v8 = objc_alloc_init(FMDDirectServerChannel);
    v18[0] = v8;
    id v9 = objc_alloc_init(FMDCadmiumServerChannel);
    v18[1] = v9;
    uint64_t v10 = +[NSArray arrayWithObjects:v18 count:2];

    id v11 = [[FMDServerInteractionController alloc] initWithChannels:v10 delegate:*(void *)(a1 + 32)];
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
    id v15 = [*(id *)(a1 + 32) serverInteractionControllerByAccount];
    dispatch_time_t v16 = [*(id *)(a1 + 40) authId];
    [v15 setObject:v14 forKeyedSubscript:v16];

    uint32_t v7 = *(void **)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  }
  return [v7 setRequestAccount:*(void *)(a1 + 40)];
}

id sub_1000AB798(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "OK button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 40)];
}

id sub_1000AB850(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Cancel button tapped. Performing action %@", (uint8_t *)&v5, 0xCu);
  }

  return +[CommonUtil handleAlertAction:*(void *)(a1 + 40)];
}

void sub_1000AB908(uint64_t a1)
{
  id v2 = +[FMAlertManager sharedInstance];
  [v2 activateAlert:*(void *)(a1 + 32)];
}

id sub_1000ABD14(uint64_t a1)
{
  return [*(id *)(a1 + 32) registerDeviceWithCause:@"searchPartyBeaconsChanged" force:0];
}

void sub_1000AC2D8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v6 = [v3 assetsForAccessory:v4];
  int v5 = [*(id *)(a1 + 40) accessoryRegistry];
  [v5 updateAccessory:v4 assets:v6];
}

NSDictionary *__cdecl sub_1000AD070(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_1000AD0C0(uint64_t a1)
{
  id v2 = +[ServerDeviceInfo sharedInstance];
  uint64_t v3 = [*(id *)(a1 + 32) account];
  id v4 = [v2 deviceInfoForAccount:v3];

  return v4;
}

id sub_1000AD13C(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_1000AE768(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000599A8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error sending location payload to FML %@", (uint8_t *)&v5, 0xCu);
    }
  }
  id v4 = +[FMXPCTransactionManager sharedInstance];
  [v4 endTransaction:@"MDSecureLocationsHandlePushTransaction"];
}

void sub_1000AE83C(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000599A8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error sending location payload to spd %@", (uint8_t *)&v5, 0xCu);
    }
  }
  id v4 = +[FMXPCTransactionManager sharedInstance];
  [v4 endTransaction:@"MDSecureLocationsHandlePushTransaction"];
}

void sub_1000AE910(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000599A8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error sending location command to FML %@", (uint8_t *)&v5, 0xCu);
    }
  }
  id v4 = +[FMXPCTransactionManager sharedInstance];
  [v4 endTransaction:@"MDSecureLocationsHandlePushTransaction"];
}

void sub_1000AE9E4(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000599A8();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error sending location commands to spd %@", (uint8_t *)&v5, 0xCu);
    }
  }
  id v4 = +[FMXPCTransactionManager sharedInstance];
  [v4 endTransaction:@"MDSecureLocationsHandlePushTransaction"];
}

void sub_1000B052C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B0544(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000B0554(uint64_t a1)
{
}

void sub_1000B055C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = [*(id *)(a1 + 32) splunkifyObject:a3 eventName:&stru_1002E7428];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  id v6 = *(void **)(v5 + 40);
  id v12 = v4;
  if (!v6) {
    goto LABEL_4;
  }
  if ([v6 isEqualToString:&stru_1002E7428])
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    id v4 = v12;
LABEL_4:
    id v7 = v4;
    int v8 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v7;
    goto LABEL_6;
  }
  int v8 = [v12 stringByAppendingString:@","];
  uint64_t v9 = [v8 stringByAppendingString:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

LABEL_6:
}

void sub_1000B0864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B087C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = [*(id *)(a1 + 32) splunkifyObject:a2 eventName:&stru_1002E7428];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  id v11 = v3;
  if (!v5) {
    goto LABEL_4;
  }
  if ([v5 isEqualToString:&stru_1002E7428])
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = v11;
LABEL_4:
    id v6 = v3;
    id v7 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v6;
    goto LABEL_6;
  }
  id v7 = [v11 stringByAppendingString:@","];
  uint64_t v8 = [v7 stringByAppendingString:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

LABEL_6:
}

void sub_1000B0D9C(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDRestrictedRegions);
  uint64_t v2 = qword_10031EBB0;
  qword_10031EBB0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000B11DC(id a1)
{
  id v1 = objc_alloc_init((Class)GEOMapRegion);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v2 = [&off_1002F31A0 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v16;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(void *)v16 != v4) {
          objc_enumerationMutation(&off_1002F31A0);
        }
        id v6 = *(void **)(*((void *)&v15 + 1) + 8 * i);
        id v7 = [v6 objectAtIndexedSubscript:1];
        [v7 doubleValue];
        double v9 = v8;

        uint64_t v10 = [v6 objectAtIndexedSubscript:0];
        [v10 doubleValue];
        double v12 = v11;

        id v13 = [objc_alloc((Class)GEOLatLng) initWithLatitude:v9 longitude:v12];
        [v1 addVertex:v13];
      }
      id v3 = [&off_1002F31A0 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v3);
  }
  uint64_t v14 = (void *)qword_10031EBC0;
  qword_10031EBC0 = (uint64_t)v1;
}

void sub_1000B16E4(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000B16F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setPublishingBlock:*(void *)(a1 + 32)];
  [WeakRetained setStartedPublishing:1];
}

void sub_1000B1834(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000B1848(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setCriteriaMetBlock:*(void *)(a1 + 32)];
}

void sub_1000B1978(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000B198C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained startedPublishing])
  {
    id v3 = *(id *)(a1 + 32);
    uint64_t v4 = [v3 locationInfo];
    double v5 = [v4 timestamp];

    id v6 = [WeakRetained lastPublishedLocation];
    if ([v3 publishReason] == (id)2)
    {
      id v7 = [WeakRetained lastPublishedVisit];

      if (!v7)
      {
        id v31 = sub_1000599A8();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Publishing visit immediately since there is no previous visit", buf, 2u);
        }

        [WeakRetained _publishResultLocation:v3];
        [WeakRetained setLastPublishedVisit:v3];
        goto LABEL_51;
      }
      double v8 = [v3 locationInfo];
      double v9 = [v8 timestamp];

      uint64_t v10 = [WeakRetained lastPublishedVisit];
      double v11 = [v10 locationInfo];
      double v12 = [v11 timestamp];

      [*(id *)&v9 timeIntervalSinceDate:v12];
      double v14 = v13;
      long long v15 = [WeakRetained config];
      [v15 minTimeBetweenVisitPublish];
      double v17 = v16;

      if (v14 <= v17)
      {
        id v37 = sub_1000599A8();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          id v38 = [WeakRetained config];
          [v38 minTimeBetweenVisitPublish];
          *(_DWORD *)buf = 134217984;
          double v101 = v39;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Not publishing visit since it is within min publish limit (%f)", buf, 0xCu);
        }
      }
      else
      {
        [WeakRetained _publishResultLocation:v3];
        [WeakRetained setLastPublishedVisit:v3];
      }

LABEL_50:
LABEL_51:

      goto LABEL_52;
    }
    if (!v6)
    {
      double v9 = [WeakRetained _persistedLastPublishedTimestamp];
      if (v9 != 0.0)
      {
        [*(id *)&v5 timeIntervalSinceDate:*(void *)&v9];
        double v33 = v32;
        __int16 v34 = [WeakRetained config];
        [v34 minTimeBetweenPublish];
        double v36 = v35;

        if (v33 <= v36)
        {
          id v73 = sub_1000599A8();
          if (os_log_type_enabled(v73, OS_LOG_TYPE_DEBUG)) {
            sub_100242EA8(*(uint64_t *)&v9, v73);
          }

          [WeakRetained setLastReceivedLocation:v3];
          goto LABEL_50;
        }
      }
      id v27 = sub_1000599A8();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412546;
        double v101 = v9;
        __int16 v102 = 2112;
        double v103 = v5;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: New location is the first recorded location or greater than persisted lastPublish. lastPublished %@, new %@. Publishing", buf, 0x16u);
      }
      goto LABEL_30;
    }
    long long v18 = [v6 locationInfo];
    double v9 = [v18 timestamp];

    [*(id *)&v5 timeIntervalSinceDate:*(void *)&v9];
    double v20 = v19;
    long long v21 = +[NSDate now];
    [v21 timeIntervalSinceDate:*(void *)&v9];
    double v23 = v22;

    int v24 = [WeakRetained config];
    [v24 heartbeatPublish];
    double v26 = v25;

    if (v23 < v26 || v20 <= 0.0)
    {
      if ([v3 publishReason] != (id)5
        || ([WeakRetained config],
            id v40 = objc_claimAutoreleasedReturnValue(),
            [v40 onDemandPublishThreshold],
            double v42 = v41,
            v40,
            v20 < v42)
        || v20 <= 0.0)
      {
        long long v44 = [v3 locationInfo];
        id v45 = [v44 latitude];
        [v45 doubleValue];
        double v47 = v46;

        __int16 v48 = [v3 locationInfo];
        unsigned int v49 = [v48 longitude];
        [v49 doubleValue];
        double v51 = v50;

        id v52 = [objc_alloc((Class)CLLocation) initWithLatitude:v47 longitude:v51];
        id v53 = [v6 locationInfo];
        v54 = [v53 latitude];
        [v54 doubleValue];
        double v56 = v55;

        uint64_t v57 = [v6 locationInfo];
        __int16 v58 = [v57 longitude];
        [v58 doubleValue];
        double v60 = v59;

        id v61 = [objc_alloc((Class)CLLocation) initWithLatitude:v56 longitude:v60];
        [v52 distanceFromLocation:v61];
        double v63 = v62;
        long long v64 = [WeakRetained config];
        [v64 minDistanceBetweenPublish];
        if (v63 >= v65)
        {
          BOOL v72 = 1;
        }
        else
        {
          [WeakRetained config];
          v97 = v6;
          double v66 = v5;
          double v67 = v9;
          id v68 = v61;
          v70 = id v69 = v52;
          [v70 minDistanceBetweenPublish];
          BOOL v72 = v71 == 0.0;

          id v52 = v69;
          id v61 = v68;
          double v9 = v67;
          double v5 = v66;
          id v6 = v97;
        }

        id v74 = sub_1000599A8();
        if (os_log_type_enabled(v74, OS_LOG_TYPE_DEBUG))
        {
          CFStringRef v89 = @"no";
          if (v72) {
            CFStringRef v89 = @"yes";
          }
          [WeakRetained config:v89];
          __int16 v90 = v98 = v52;
          [v90 minDistanceBetweenPublish];
          *(_DWORD *)buf = 138412802;
          double v101 = v95;
          __int16 v102 = 2048;
          double v103 = v63;
          __int16 v104 = 2048;
          double v105 = v91;
          _os_log_debug_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: meetsDistanceLimits %@ distance %f configLimit %f", buf, 0x20u);

          id v52 = v98;
        }

        id v75 = [WeakRetained config];
        [v75 minTimeBetweenPublish];
        double v77 = v76;

        double v78 = sub_1000599A8();
        if (os_log_type_enabled(v78, OS_LOG_TYPE_DEBUG))
        {
          CFStringRef v92 = @"no";
          if (v20 >= v77) {
            CFStringRef v92 = @"yes";
          }
          [WeakRetained config:v92];
          v93 = id v99 = v52;
          [v93 minTimeBetweenPublish];
          *(_DWORD *)buf = 138412802;
          double v101 = v96;
          __int16 v102 = 2048;
          double v103 = v20;
          __int16 v104 = 2048;
          double v105 = v94;
          _os_log_debug_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: meetsTimeLimits %@ time %f limit %f", buf, 0x20u);

          id v52 = v99;
        }

        if (v20 < v77) {
          BOOL v72 = 0;
        }
        id v79 = sub_1000599A8();
        v80 = v79;
        if (v72)
        {
          if (os_log_type_enabled(v79, OS_LOG_TYPE_DEFAULT))
          {
            v81 = [WeakRetained config];
            [v81 minTimeBetweenPublish];
            double v83 = v82;
            [WeakRetained config];
            v85 = id v84 = v52;
            [v85 minDistanceBetweenPublish];
            *(_DWORD *)buf = 134218752;
            double v101 = v20;
            __int16 v102 = 2048;
            double v103 = v83;
            __int16 v104 = 2048;
            double v105 = v63;
            __int16 v106 = 2048;
            uint64_t v107 = v86;
            _os_log_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: new location meets publishing criteria. Time %f Limit %f, Distance %f Limit %f", buf, 0x2Au);

            id v52 = v84;
          }

          [WeakRetained _publishResultLocation:v3];
          double v87 = [WeakRetained criteriaMetBlock];

          if (v87)
          {
            v88 = [WeakRetained criteriaMetBlock];
            v88[2]();
          }
        }
        else
        {
          if (os_log_type_enabled(v79, OS_LOG_TYPE_DEBUG)) {
            sub_100242F20(v80);
          }

          [WeakRetained setLastReceivedLocation:*(void *)(a1 + 32)];
        }

        goto LABEL_50;
      }
      id v27 = sub_1000599A8();
      if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_30;
      }
      __int16 v28 = [WeakRetained config];
      [v28 onDemandPublishThreshold];
      *(_DWORD *)buf = 134218240;
      double v101 = v20;
      __int16 v102 = 2048;
      double v103 = v43;
      __int16 v30 = "SecureLocationPublisher: Publishing ondemand location since time elapsed (%f) greater than ondemand threshold (%f)";
    }
    else
    {
      id v27 = sub_1000599A8();
      if (!os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
LABEL_30:

        [WeakRetained _publishResultLocation:v3];
        goto LABEL_50;
      }
      __int16 v28 = [WeakRetained config];
      [v28 heartbeatPublish];
      *(_DWORD *)buf = 134218240;
      double v101 = v23;
      __int16 v102 = 2048;
      double v103 = v29;
      __int16 v30 = "SecureLocationPublisher: Publishing location since time elapsed (%f) greater than hearbeat limit (%f)";
    }
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, v30, buf, 0x16u);

    goto LABEL_30;
  }
  id v3 = sub_1000599A8();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_100242F64(v3);
  }
LABEL_52:
}

void sub_1000B236C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000B2384(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) lastReceivedLocation];
  if (!v2) {
    goto LABEL_3;
  }
  id v3 = (void *)v2;
  uint64_t v4 = [*(id *)(a1 + 32) lastReceivedLocation];
  double v5 = [v4 locationInfo];
  id v6 = [v5 timestamp];
  [v6 timeIntervalSinceNow];
  double v8 = -v7;
  double v9 = [*(id *)(a1 + 32) config];
  [v9 stalenessThreshold];
  double v11 = v10;

  if (v11 >= v8)
  {
    long long v18 = *(void **)(a1 + 32);
    double v19 = [v18 lastReceivedLocation];
    [v18 _publishResultLocation:v19];

    double v12 = sub_1000599A8();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v20) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: publishing lastReceivedLocation", (uint8_t *)&v20, 2u);
    }
    char v17 = 1;
  }
  else
  {
LABEL_3:
    double v12 = sub_1000599A8();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      double v13 = [*(id *)(a1 + 32) lastReceivedLocation];
      double v14 = [*(id *)(a1 + 32) lastReceivedLocation];
      long long v15 = [v14 locationInfo];
      double v16 = [v15 timestamp];
      int v20 = 138412546;
      long long v21 = v13;
      __int16 v22 = 2112;
      double v23 = v16;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Can't publish lastReceivedLocation %@, ts: %@", (uint8_t *)&v20, 0x16u);
    }
    char v17 = 0;
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v17;
}

uint64_t sub_1000B27EC(uint64_t a1)
{
  uint64_t v2 = sub_1000599A8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "SecureLocationPublisher: Executing the publish block.", v4, 2u);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1000B2E74(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    double v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1002431C8((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
    }

    id v14 = [v6 description];
    long long v15 = @"statusFetchError";
    goto LABEL_23;
  }
  if ((unint64_t)[v5 count] <= 1)
  {
    double v16 = sub_100004238();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100243014(v16);
    }

    id v14 = 0;
    long long v15 = @"ckksStatusAbsent";
    goto LABEL_23;
  }
  char v17 = [v5 objectAtIndexedSubscript:1];
  long long v18 = [v17 objectForKeyedSubscript:@"keystate"];
  if ([v18 isEqualToString:@"ready"])
  {

LABEL_12:
    __int16 v22 = [v5 objectAtIndexedSubscript:1];
    uint64_t v23 = [v22 objectForKeyedSubscript:@"accounttracker"];
    int v24 = +[NSString stringWithFormat:@"%@", v23];

    LOBYTE(v23) = [v24 containsString:@"deviceToDeviceEncryptionAvailability=(account|device)"];
    double v25 = sub_100004238();
    double v26 = v25;
    if (v23)
    {
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        id v27 = [v5 objectAtIndexedSubscript:1];
        __int16 v28 = [v27 objectForKeyedSubscript:@"keystate"];
        *(_DWORD *)buf = 138412290;
        double v43 = v28;
        _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "CKKSStatus: good. KeyState: %@", buf, 0xCu);
      }
      double v29 = [v5 objectAtIndexedSubscript:1];
      __int16 v30 = [v29 objectForKeyedSubscript:@"keystate"];
      long long v15 = +[NSString stringWithFormat:@"good-%@", v30];

      id v14 = 0;
    }
    else
    {
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100243058((uint64_t)v24, v26, v31, v32, v33, v34, v35, v36);
      }

      id v14 = v24;
      long long v15 = @"d2dEncUnavailable";
    }

    goto LABEL_23;
  }
  double v19 = [v5 objectAtIndexedSubscript:1];
  int v20 = [v19 objectForKeyedSubscript:@"keystate"];
  unsigned __int8 v21 = [v20 isEqualToString:@"readypendingunlock"];

  if (v21) {
    goto LABEL_12;
  }
  id v37 = sub_100004238();
  if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
    sub_1002430C4(v5, v37);
  }

  id v38 = [v5 objectAtIndexedSubscript:1];
  double v39 = [v38 objectForKeyedSubscript:@"keystate"];
  id v40 = [v5 objectAtIndexedSubscript:1];
  double v41 = [v40 objectForKeyedSubscript:@"keyStateError"];
  id v14 = +[NSString stringWithFormat:@"KeyState: %@. Error: %@", v39, v41];

  long long v15 = @"badStatus";
LABEL_23:
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000B33B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B33D8(uint64_t a1, void *a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a2)
  {
    uint64_t v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100243234((uint64_t)a2, v4);
    }

    uint64_t v5 = kFMDErrorDomain;
    NSErrorUserInfoKey v8 = NSUnderlyingErrorKey;
    id v6 = +[NSError errorWithDomain:@"NSXPCError" code:a2 userInfo:0];
    uint64_t v9 = v6;
    double v7 = +[NSDictionary dictionaryWithObjects:&v9 forKeys:&v8 count:1];
    a2 = +[NSError errorWithDomain:v5 code:13 userInfo:v7];
  }
  [WeakRetained setConnection:0];
  [WeakRetained _didEndDiscoveryWithError:a2];
}

void sub_1000B56C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000B56F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = WeakRetained;
  unsigned int v10 = 1;
  if (a4 != 3 && a4 != 5)
  {
    uint64_t v4 = [WeakRetained locator];
    unsigned int v10 = [v4 locatorRunning] ^ 1;
  }
  if (a4 != 3 && a4 != 5) {

  }
  if (v10)
  {
    uint64_t v11 = sub_100004238();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_10024354C(v9);
    }

    uint64_t v12 = [v9 trackedLocationsStore];
    [v12 recordLocation:v7 ofType:2];

    uint64_t v13 = [v9 locator];
    [v13 stopLocator];
  }
}

void sub_1000B57F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1002435E8(WeakRetained);
  }

  [WeakRetained setLocator:0];
  [WeakRetained _updateFallbackRetryTimer];
}

void sub_1000B5E30(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v3 = [WeakRetained locateParams];
  id v4 = [WeakRetained newLocationManager];
  uint64_t v5 = [[FMDLocator alloc] initWithLocationManager:v4];
  id v6 = [v3 objectForKeyedSubscript:@"desiredAccuracy"];
  [v6 doubleValue];
  -[FMDLocator setDesiredAccuracy:](v5, "setDesiredAccuracy:");

  id v7 = [v3 objectForKeyedSubscript:@"timeout"];
  [v7 doubleValue];
  -[FMDLocator setDuration:](v5, "setDuration:");

  NSErrorUserInfoKey v8 = objc_alloc_init(FMDTrackedLocationPublisher);
  uint64_t v9 = [v3 objectForKeyedSubscript:@"startThreshold"];
  [(FMDTrackedLocationPublisher *)v8 setStartThreshold:v9];

  unsigned int v10 = [v3 objectForKeyedSubscript:@"endThreshold"];
  [(FMDTrackedLocationPublisher *)v8 setEndThreshold:v10];

  uint64_t v11 = [v3 objectForKeyedSubscript:@"decayFactor"];
  [(FMDTrackedLocationPublisher *)v8 setDecayFactor:v11];

  uint64_t v12 = [v3 objectForKeyedSubscript:@"validityDuration"];
  [(FMDTrackedLocationPublisher *)v8 setCachedLocationValidityTimeInterval:v12];

  [a1[4] minDistanceBetweenLocations];
  if (v13 > 0.0)
  {
    [a1[4] minDistanceBetweenLocations];
    +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  }
  else
  {
    [(FMDTrackedLocationPublisher *)v8 minimumDistance];
  id v14 = };
  [(FMDTrackedLocationPublisher *)v8 setMinimumDistance:v14];

  [a1[4] minTimeBetweenLocations];
  if (v15 > 0.0)
  {
    [a1[4] minTimeBetweenLocations];
    +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  }
  else
  {
    [(FMDTrackedLocationPublisher *)v8 publishTimeInterval];
  double v16 = };
  [(FMDTrackedLocationPublisher *)v8 setPublishTimeInterval:v16];

  [(FMDTrackedLocationPublisher *)v8 startPublishingWithBlock:a1[5]];
  char v17 = objc_alloc_init(FMDConservativeLocatorPublisher);
  long long v18 = [v3 objectForKeyedSubscript:@"startThreshold"];
  [(FMDConservativeLocatorPublisher *)v17 setStartThreshold:v18];

  double v19 = [v3 objectForKeyedSubscript:@"endThreshold"];
  [(FMDConservativeLocatorPublisher *)v17 setEndThreshold:v19];

  int v20 = [v3 objectForKeyedSubscript:@"decayFactor"];
  [(FMDConservativeLocatorPublisher *)v17 setDecayFactor:v20];

  unsigned __int8 v21 = [v3 objectForKeyedSubscript:@"validityDuration"];
  [(FMDConservativeLocatorPublisher *)v17 setCachedLocationValidityTimeInterval:v21];

  [a1[4] minDistanceBetweenLocations];
  if (v22 > 0.0)
  {
    [a1[4] minDistanceBetweenLocations];
    +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  }
  else
  {
    [(FMDConservativeLocatorPublisher *)v17 minimumDistance];
  uint64_t v23 = };
  [(FMDConservativeLocatorPublisher *)v17 setMinimumDistance:v23];

  [a1[4] minTimeBetweenLocations];
  if (v24 > 0.0)
  {
    [a1[4] minTimeBetweenLocations];
    +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  }
  else
  {
    [(FMDConservativeLocatorPublisher *)v17 publishTimeInterval];
  double v25 = };
  [(FMDConservativeLocatorPublisher *)v17 setPublishTimeInterval:v25];

  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_1000B62DC;
  v33[3] = &unk_1002DCDC0;
  double v26 = v8;
  uint64_t v34 = v26;
  id v35 = a1[5];
  [(FMDConservativeLocatorPublisher *)v17 startPublishingWithBlock:v33];
  [(FMDLocator *)v5 setLocatorPublisher:v17];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1000B6418;
  v29[3] = &unk_1002DA158;
  __int16 v30 = v17;
  uint64_t v31 = v26;
  id v32 = a1[6];
  id v27 = v26;
  __int16 v28 = v17;
  [(FMDLocator *)v5 setStoppedLocatorBlock:v29];
  [WeakRetained setLocator:v5];
  [(FMDLocator *)v5 startLocator];
}

void sub_1000B62DC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v9 = v8;
  if (v7 || !v8)
  {
    if (v7)
    {
      uint64_t v12 = sub_100004238();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v14 = 138412290;
        id v15 = v7;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "FMDLocationTracker error getting location from conservativePublisher %@", (uint8_t *)&v14, 0xCu);
      }

      uint64_t v13 = *(void *)(a1 + 40);
      if (v13) {
        (*(void (**)(uint64_t, id, void *, uint64_t))(v13 + 16))(v13, v7, v9, a4);
      }
    }
  }
  else
  {
    unsigned int v10 = *(void **)(a1 + 32);
    id v16 = v8;
    uint64_t v11 = +[NSArray arrayWithObjects:&v16 count:1];
    [v10 updatedLocations:v11 reason:a4];
  }
}

uint64_t sub_1000B6418(uint64_t a1)
{
  [*(id *)(a1 + 32) flushLocations];
  [*(id *)(a1 + 40) flushLocations];
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_1000B6578(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1000B6C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000B6CC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1000B6CD0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v9 = WeakRetained;
  unsigned int v10 = 1;
  if (a4 != 3 && a4 != 5)
  {
    id v4 = [WeakRetained locator];
    unsigned int v10 = [v4 locatorRunning] ^ 1;
  }
  if (a4 != 3 && a4 != 5) {

  }
  if (v10)
  {
    uint64_t v11 = sub_100004238();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG)) {
      sub_100243758(v9);
    }

    uint64_t v12 = [v9 trackedLocationsStore];
    [v12 recordLocation:v7 ofType:3];

    uint64_t v13 = [v9 locator];
    [v13 stopLocator];
  }
}

void sub_1000B6DC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1002437F4(WeakRetained);
  }

  [WeakRetained setLocator:0];
  [WeakRetained _updateFallbackRetryTimer];
}

void sub_1000B6E34(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = +[NSRunLoop currentRunLoop];
  [v1 scheduleInRunLoop:v2];
}

void sub_1000B7B18(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDMagSafeDataStore);
  uint64_t v2 = qword_10031EBD0;
  qword_10031EBD0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

id sub_1000B7DB4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _writeAccessoriesToDisk:&__NSDictionary0__struct];
  return [*(id *)(a1 + 32) writeLostModeInfo:&__NSArray0__struct version:&stru_1002E7428];
}

void sub_1000B7EE4(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableDictionary);
  id v3 = [*(id *)(a1 + 32) readAllAccessoriesFromDisk];
  id v4 = [v2 initWithDictionary:v3];

  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = [v5 accessoryIdentifier];
  [v4 setObject:v5 forKeyedSubscript:v6];

  id v7 = [*(id *)(a1 + 32) _writeAccessoriesToDisk:v4];
  id v8 = dispatch_get_global_queue(0, 0);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  _DWORD v11[2] = sub_1000B8018;
  v11[3] = &unk_1002D97B0;
  id v9 = *(id *)(a1 + 48);
  id v12 = v7;
  id v13 = v9;
  id v10 = v7;
  dispatch_async(v8, v11);
}

uint64_t sub_1000B8018(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000B8104(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableDictionary);
  id v3 = [*(id *)(a1 + 32) readAllAccessoriesFromDisk];
  id v4 = [v2 initWithDictionary:v3];

  [v4 removeObjectForKey:*(void *)(a1 + 40)];
  uint64_t v5 = [*(id *)(a1 + 32) _writeAccessoriesToDisk:v4];
  id v6 = dispatch_get_global_queue(0, 0);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000B821C;
  v9[3] = &unk_1002D97B0;
  id v7 = *(id *)(a1 + 48);
  id v10 = v5;
  id v11 = v7;
  id v8 = v5;
  dispatch_async(v6, v9);
}

uint64_t sub_1000B821C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000B8308(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableDictionary);
  uint64_t v26 = a1;
  id v3 = [*(id *)(a1 + 32) readAllAccessoriesFromDisk];
  id v4 = [v2 initWithDictionary:v3];

  long long v35 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v32 = 0u;
  uint64_t v5 = [v4 allValues];
  id v6 = [v5 countByEnumeratingWithState:&v32 objects:v40 count:16];
  if (v6)
  {
    id v7 = v6;
    double v25 = v4;
    id v8 = 0;
    uint64_t v9 = *(void *)v33;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v33 != v9) {
          objc_enumerationMutation(v5);
        }
        id v11 = *(void **)(*((void *)&v32 + 1) + 8 * i);
        id v12 = [v11 serialNumbers];
        id v13 = [v12 objectForKeyedSubscript:@"systemSerialNumber"];
        unsigned int v14 = [v13 isEqualToString:*(void *)(v26 + 40)];

        if (v14)
        {
          uint64_t v15 = [v11 accessoryIdentifier];

          id v8 = (void *)v15;
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v32 objects:v40 count:16];
    }
    while (v7);

    id v4 = v25;
    if (v8)
    {
      id v16 = sub_100059878();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v17 = *(void *)(v26 + 40);
        *(_DWORD *)buf = 138412546;
        uint64_t v37 = v17;
        __int16 v38 = 2112;
        double v39 = v8;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "FMDMagSafeDataSource: removing accessory with serialNumber %@ accessoryId = %@", buf, 0x16u);
      }

      [v25 removeObjectForKey:v8];
      long long v18 = [*(id *)(v26 + 32) _writeAccessoriesToDisk:v25];
      double v19 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000B86B4;
      block[3] = &unk_1002D97B0;
      id v20 = *(id *)(v26 + 48);
      id v30 = v18;
      id v31 = v20;
      id v21 = v18;
      dispatch_async(v19, block);

      goto LABEL_18;
    }
  }
  else
  {
  }
  double v22 = sub_100059878();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v23 = *(void *)(v26 + 40);
    *(_DWORD *)buf = 138412290;
    uint64_t v37 = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "FMDMagSafeDataSource: No magsafe accessory with serialNumber %@ found", buf, 0xCu);
  }

  double v24 = dispatch_get_global_queue(0, 0);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_1000B86C8;
  v27[3] = &unk_1002DA130;
  id v28 = *(id *)(v26 + 48);
  dispatch_async(v24, v27);

  id v8 = v28;
LABEL_18:
}

uint64_t sub_1000B86B4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1000B86C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000B8EB0(uint64_t a1)
{
  id v2 = objc_alloc((Class)NSMutableDictionary);
  id v3 = [*(id *)(a1 + 32) readAllAccessoriesFromDisk];
  id v4 = [v2 initWithDictionary:v3];

  uint64_t v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 40)];
  id v6 = v5;
  if (v5)
  {
    [v5 setLastLostModeKeyRollTime:*(void *)(a1 + 48)];
    uint64_t v7 = [*(id *)(a1 + 32) _writeAccessoriesToDisk:v4];
  }
  else
  {
    id v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100243990(v8, v9, v10, v11, v12, v13, v14, v15);
    }

    uint64_t v7 = +[NSError fm_genericError];
  }
  id v16 = (void *)v7;
  uint64_t v17 = dispatch_get_global_queue(0, 0);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_1000B9028;
  v20[3] = &unk_1002D97B0;
  id v18 = *(id *)(a1 + 56);
  id v21 = v16;
  id v22 = v18;
  id v19 = v16;
  dispatch_async(v17, v20);
}

uint64_t sub_1000B9028(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(void *)(a1 + 32));
  }
  return result;
}

void sub_1000B9170(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) provider];
  id v3 = [*(id *)(a1 + 32) commandParams];
  id v4 = [v3 objectForKey:@"udid"];
  uint64_t v5 = [v4 fm_nullToNil];

  if ([v5 length]
    && (id v6 = [objc_alloc((Class)FMDAccessoryIdentifier) initWithString:v5],
        [v2 accessoryRegistry],
        uint64_t v7 = objc_claimAutoreleasedReturnValue(),
        [v7 accessoryForIdentifier:v6],
        id v8 = objc_claimAutoreleasedReturnValue(),
        v7,
        v6,
        v8))
  {
    uint64_t v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v16 = 138412290;
      uint64_t v17 = v5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Message command for accessory %@", (uint8_t *)&v16, 0xCu);
    }

    uint64_t v10 = [AccessoryRegisterAction alloc];
    uint64_t v11 = [v2 account];
    uint64_t v12 = [v2 serverInteractionControllerForAccessory:v8];
    uint64_t v13 = [(AccessoryRegisterAction *)v10 initWithAccount:v11 accessory:v8 cause:@"startupAccessoryRegister" force:1 serverInteractionController:v12];

    uint64_t v14 = +[ActionManager sharedManager];
    id v15 = [v14 enqueueAction:v13];
  }
  else
  {
    [v2 registerDeviceWithCause:@"RegisterCommand" force:1];
  }
}

NSDictionary *__cdecl sub_1000B9674(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  id v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_1000B96C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = +[ServerDeviceInfo sharedInstance];
  id v4 = [*(id *)(a1 + 40) account];
  if (v2) {
    [v3 deviceInfoForAccount:v4 accessory:*(void *)(a1 + 32)];
  }
  else {
  uint64_t v5 = [v3 deviceInfoForAccount:v4];
  }

  return v5;
}

void sub_1000B9760(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (([v3 willRetry] & 1) == 0)
  {
    id v4 = [v3 httpResponseError];
    if (v4
      || (uint64_t)[v3 httpResponseStatus] < 200
      || (uint64_t)[v3 httpResponseStatus] > 399)
    {
    }
    else if (([v3 cancelled] & 1) == 0)
    {
      uint64_t v15 = *(void *)(a1 + 32);
      if (v15) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, 1);
      }
      uint64_t v7 = sub_100004238();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_15;
      }
      uint64_t v9 = [v3 fm_logID];
      int v16 = 138412546;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = [v3 httpResponseStatus];
      uint64_t v10 = "%@: successful with status %ld";
      uint64_t v11 = v7;
      uint32_t v12 = 22;
      goto LABEL_11;
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5) {
      (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    }
    unsigned int v6 = [v3 cancelled];
    uint64_t v7 = sub_100004238();
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v8)
      {
        uint64_t v9 = [v3 fm_logID];
        int v16 = 138412290;
        uint64_t v17 = v9;
        uint64_t v10 = "%@: Cancelled";
        uint64_t v11 = v7;
        uint32_t v12 = 12;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, v10, (uint8_t *)&v16, v12);
LABEL_14:
      }
    }
    else if (v8)
    {
      uint64_t v9 = [v3 fm_logID];
      id v13 = [v3 httpResponseStatus];
      uint64_t v14 = [v3 httpResponseError];
      int v16 = 138412802;
      uint64_t v17 = v9;
      __int16 v18 = 2048;
      id v19 = v13;
      __int16 v20 = 2112;
      id v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", (uint8_t *)&v16, 0x20u);

      goto LABEL_14;
    }
LABEL_15:
  }
}

void sub_1000BA334(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDInternalAccessoryConnectionMonitor);
  uint64_t v2 = qword_10031EBE0;
  qword_10031EBE0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000BAA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BAA38(uint64_t a1)
{
  uint64_t v2 = +[NSSet setWithArray:*(void *)(a1 + 32)];
  id v3 = (id *)(a1 + 40);
  id v4 = [*(id *)(a1 + 40) playbackChannels];
  uint64_t v5 = +[NSSet setWithArray:v4];

  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [v2 isEqualToSet:v5] ^ 1;
  [*(id *)(a1 + 40) setPlaybackChannels:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) updateAudioChannelPlayingState:*(void *)(a1 + 32)];
  unsigned int v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
    sub_100243A00(v3, v6);
  }
}

void sub_1000BABDC(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = [v7 channelName];
    id v5 = [v3 containsObject:v4];

    unsigned int v6 = +[NSNumber numberWithBool:v5];
    [v7 setPlayingSound:v6];
  }
  else
  {
    [v7 setPlayingSound:0];
  }
}

void sub_1000BB114(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 channelName];
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:v4];
}

void sub_1000BB260(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [v12 identifier];
  id v4 = [*(id *)(a1 + 32) beacons];
  id v5 = [v4 objectForKeyedSubscript:v3];

  unsigned int v6 = [v12 updateDate];
  [v6 timeIntervalSinceReferenceDate];
  double v8 = v7;
  uint64_t v9 = [v5 updateDate];
  [v9 timeIntervalSinceReferenceDate];
  double v11 = v10;

  if (v8 > v11) {
    [*(id *)(a1 + 40) setObject:v12 forKeyedSubscript:v3];
  }
}

void sub_1000BB40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000BB424(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v11 = a2;
  uint64_t v6 = [v11 playingSound];
  if (v6)
  {
    double v7 = (void *)v6;
    double v8 = [v11 playingSound];
    unsigned int v9 = [v8 BOOLValue];

    if (v9)
    {
      double v10 = [v11 playingSound];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v10 BOOLValue];
    }
  }
  *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

void sub_1000BC944(id a1)
{
  id v2 = +[FMSystemInfo sharedInstance];
  unsigned int v1 = [v2 isInternalBuild];
  if (v1) {
    LOBYTE(v1) = +[FMPreferencesUtil BOOLForKey:@"FMDAutomationBluetoothManagerAutomationActiveKey" inDomain:kFMDNotBackedUpPrefDomain];
  }
  byte_10031EBF0 = v1;
}

id sub_1000BCAF8(uint64_t a1)
{
  return +[BluetoothManager setSharedInstanceQueue:*(void *)(a1 + 32)];
}

void sub_1000BCB0C(id a1)
{
  unsigned int v1 = +[FMDAutomationHelperFactory sharedFactory];
  id v2 = (objc_class *)[v1 automationHelperClassWithName:@"FMDAutomationBluetoothManager"];

  id v3 = objc_alloc_init(v2);
  uint64_t v4 = qword_10031EC08;
  qword_10031EC08 = (uint64_t)v3;

  _objc_release_x1(v3, v4);
}

void sub_1000BD964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_1000BD9A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _publishResultLocation:*(void *)(a1 + 32) reason:*(void *)(a1 + 48)];
}

void sub_1000BE288(id a1)
{
  unsigned int v1 = sub_100004238();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEBUG)) {
    sub_10023BA68(v1);
  }

  id v2 = objc_alloc_init(FMDSPStatusUtil);
  id v3 = (void *)qword_10031EC18;
  qword_10031EC18 = (uint64_t)v2;
}

void sub_1000BE704(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000BE718(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained timer];
  [v1 cancel];

  [WeakRetained setTimer:0];
}

void sub_1000BE880(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000BE894(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _serialQueue_refreshBeaconStats];
}

void sub_1000BEE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000BEEEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _serialQueue_refreshBeaconStats];
}

uint64_t sub_1000BEF2C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000BF234(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 208));
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BF274(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000BF284(uint64_t a1)
{
}

void sub_1000BF28C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  id v3 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  if (!v3
    || [v3 compare:*(void *)(a1 + 32)] != (id)1
    || (uint64_t v4 = *(void **)(*(void *)(*(void *)(a1 + 64) + 8) + 40)) == 0
    || [v4 compare:*(void *)(a1 + 32)] != (id)1)
  {
    double v10 = sub_100004238();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Waiting for both Oct & Mte beacon stats to be fetched.", buf, 2u);
    }
    goto LABEL_15;
  }
  id v5 = sub_100004238();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Both Oct & Mte beacon stats have been fetched.", buf, 2u);
  }

  id v6 = [*(id *)(a1 + 40) copy];
  [WeakRetained setRawStats:v6];

  double v7 = [WeakRetained rawStats];
  +[FMPreferencesUtil setDictionary:v7 forKey:off_10031DAE8 inDomain:kFMDNotBackedUpPrefDomain];

  unsigned __int8 v8 = [*(id *)(a1 + 48) isEqualToDictionary:*(void *)(a1 + 40)];
  if (*(unsigned char *)(a1 + 80) || (v8 & 1) == 0)
  {
    unsigned int v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Basic or detailed beacon stats have changed. Sending the updated stats to the server", buf, 2u);
    }

    double v10 = [WeakRetained statsChangeHandler];
    if (v10)
    {
      id v11 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000BF4D8;
      block[3] = &unk_1002DA130;
      double v10 = v10;
      id v13 = v10;
      dispatch_async(v11, block);
    }
LABEL_15:
  }
}

uint64_t sub_1000BF4D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000BF4E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  double v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Oct beacon stats fetched", v12, 2u);
  }

  [*(id *)(a1 + 32) fm_safelyMapKey:@"octStatus" toObject:v6];
  [*(id *)(a1 + 32) fm_safelyMapKey:@"octStatusError" toObject:v5];

  uint64_t v8 = +[NSDate date];
  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  double v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id v11 = [*(id *)(a1 + 40) serialQueue];
  dispatch_async(v11, *(dispatch_block_t *)(a1 + 48));
}

void sub_1000BF5E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  double v7 = sub_100004238();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Mte beacon stats fetched", v12, 2u);
  }

  [*(id *)(a1 + 32) fm_safelyMapKey:@"mteStatus" toObject:v6];
  [*(id *)(a1 + 32) fm_safelyMapKey:@"mteStatusError" toObject:v5];

  uint64_t v8 = +[NSDate date];
  uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
  double v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 40) = v8;

  id v11 = [*(id *)(a1 + 40) serialQueue];
  dispatch_async(v11, *(dispatch_block_t *)(a1 + 48));
}

void sub_1000BF800(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000BF814(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setWaitingForDetailedStats:0];
  id v3 = [WeakRetained rawStats];
  id v4 = [v3 copy];

  id v5 = [v4 mutableCopy];
  id v6 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"octStatus"];
  [v5 fm_safelyMapKey:@"octStatus" toObject:v6];

  double v7 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"octStatusError"];
  [v5 fm_safelyMapKey:@"octStatusError" toObject:v7];

  uint64_t v8 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"mteStatus"];
  [v5 fm_safelyMapKey:@"mteStatus" toObject:v8];

  uint64_t v9 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"mteStatusError"];
  [v5 fm_safelyMapKey:@"mteStatusError" toObject:v9];

  double v10 = sub_100004238();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Both Oct & Mte beacon stats have been fetched.", buf, 2u);
  }

  id v11 = [v5 copy];
  [WeakRetained setRawStats:v11];

  id v12 = [WeakRetained rawStats];
  +[FMPreferencesUtil setDictionary:v12 forKey:off_10031DAE8 inDomain:kFMDNotBackedUpPrefDomain];

  if (([v4 isEqualToDictionary:v5] & 1) == 0)
  {
    id v13 = sub_100004238();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Detailed beacon stats have changed. Sending the updated stats to the server", buf, 2u);
    }

    uint64_t v14 = [WeakRetained statsChangeHandler];
    if (v14)
    {
      uint64_t v15 = dispatch_get_global_queue(0, 0);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1000BFAE4;
      block[3] = &unk_1002DA130;
      id v17 = v14;
      dispatch_async(v15, block);
    }
  }
}

uint64_t sub_1000BFAE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000BFB84(id a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.icloud.findmydeviced.fetch_spstats", 0, 0, 1u);
}

void sub_1000BFD98(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.icloud.findmydeviced.registerDigestSerialQueue", 0);
  uint64_t v2 = qword_10031EC40;
  qword_10031EC40 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_1000C0070(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000C0084(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = 138412546;
    uint64_t v4 = objc_opt_class();
    __int16 v5 = 2048;
    id v6 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) will cancel", (uint8_t *)&v3, 0x16u);
  }

  [WeakRetained setCancelled:1];
}

void sub_1000C0AE0(uint64_t a1, void *a2)
{
  id v4 = [a2 mutableCopy];
  int v3 = +[FMDBluetoothAccessory volatileKeysToExcludeFromRegisterDigest];
  [v4 removeObjectsForKeys:v3];

  [*(id *)(a1 + 32) addObject:v4];
}

void sub_1000C0B58(id a1)
{
  uint64_t v1 = +[NSRegularExpression regularExpressionWithPattern:@"authToken.*," options:1 error:0];
  uint64_t v2 = qword_10031EC48;
  qword_10031EC48 = v1;

  _objc_release_x1(v1, v2);
}

void sub_1000C129C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  _Block_object_dispose((const void *)(v25 - 176), 8);
  _Block_object_dispose((const void *)(v25 - 240), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C1314(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000C1324(uint64_t a1)
{
}

void sub_1000C132C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) provider];
  int v3 = [v2 account];
  id v4 = +[RegisterAction _registerDigestPrefKeyForAccount:v3];

  uint64_t v5 = [*(id *)(a1 + 32) _registrationInformationDigest:byte_10031EC58];
  uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
  double v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  if (qword_10031EC28
    && [(id)qword_10031EC28 isEqualToData:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)])
  {
    uint64_t v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = objc_opt_class();
      double v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      int v30 = 138412802;
      uint64_t v31 = v9;
      __int16 v32 = 2048;
      long long v33 = v10;
      __int16 v34 = 2112;
      uint64_t v35 = v11;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Not sending register with cause %@ because there is already another register with the same registration information in-progress", (uint8_t *)&v30, 0x20u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
  {
    id v12 = (void *)qword_10031EC30;
    if (!qword_10031EC30)
    {
      uint64_t v13 = +[FMPreferencesUtil dataForKey:v4 inDomain:kFMDNotBackedUpPrefDomain];
      uint64_t v14 = (void *)qword_10031EC30;
      qword_10031EC30 = v13;

      id v12 = (void *)qword_10031EC30;
    }
    id v15 = v12;
    int v16 = v15;
    if (qword_10031EC28
      || !v15
      || ![v15 isEqualToData:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)])
    {
      goto LABEL_26;
    }
    if ((byte_10031EC58 & 1) == 0)
    {
      id v17 = +[FMDDaemon sharedInstance];
      if ([v17 isFirstRunAfterBoot])
      {
        unsigned __int8 v18 = [*(id *)(a1 + 32) _shouldThrottleDeviceRestartRegister];

        if ((v18 & 1) == 0)
        {
          id v19 = sub_100004238();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v20 = *(void *)(a1 + 40);
            int v30 = 138543362;
            uint64_t v31 = v20;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged but forcing register %{public}@", (uint8_t *)&v30, 0xCu);
          }
LABEL_22:

LABEL_26:
          goto LABEL_27;
        }
      }
      else
      {
      }
      if ((byte_10031EC58 & 1) == 0)
      {
        id v21 = +[FMDStartupRegisterManager sharedInstance];
        unsigned int v22 = [v21 shouldForceRegisterOnStartup];

        if (v22)
        {
          id v19 = sub_100004238();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v23 = *(void *)(a1 + 40);
            double v24 = +[FMDStartupRegisterManager sharedInstance];
            int v30 = 138543618;
            uint64_t v31 = v23;
            __int16 v32 = 2114;
            long long v33 = v24;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged but forcing register %{public}@ due to %{public}@", (uint8_t *)&v30, 0x16u);
          }
          goto LABEL_22;
        }
      }
    }
    uint64_t v25 = sub_100004238();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v26 = *(void *)(a1 + 40);
      int v30 = 138543362;
      uint64_t v31 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Reg-info unchanged. Ignoring register %{public}@", (uint8_t *)&v30, 0xCu);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
    goto LABEL_26;
  }
LABEL_27:
  if ([*(id *)(a1 + 32) cancelled])
  {
    id v27 = sub_100004238();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v28 = objc_opt_class();
      double v29 = *(void **)(a1 + 32);
      int v30 = 138412546;
      uint64_t v31 = v28;
      __int16 v32 = 2048;
      long long v33 = v29;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) cancelled by action manager", (uint8_t *)&v30, 0x16u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
  }
}

id sub_1000C1734(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(FMDActingRequestDecorator);
  int v3 = [*(id *)(a1 + 32) account];
  id v4 = [(FMDActingRequestDecorator *)v2 registerDeviceContextForAccount:v3];

  [v4 fm_safelyMapKey:@"cause" toObject:*(void *)(a1 + 40)];

  return v4;
}

id sub_1000C17C0(uint64_t a1)
{
  uint64_t v2 = +[ServerDeviceInfo sharedInstance];
  int v3 = [*(id *)(a1 + 32) account];
  id v4 = [v2 deviceInfoForAccount:v3];

  return v4;
}

void sub_1000C183C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[RegisterAction sharedregisterDigestSerialQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000C1910;
  v6[3] = &unk_1002DC678;
  id v7 = v3;
  id v5 = v3;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  dispatch_async(v4, v6);

  objc_destroyWeak(&v8);
}

void sub_1000C1910(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  uint64_t v3 = [v2 digestData];
  id v4 = (void *)qword_10031EC28;
  qword_10031EC28 = v3;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = objc_opt_class();
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 138413058;
    uint64_t v11 = v7;
    __int16 v12 = 2048;
    id v13 = WeakRetained;
    __int16 v14 = 2112;
    uint64_t v15 = v8;
    __int16 v16 = 2048;
    uint64_t v17 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressRegisterDigest to newRegisterDigest", (uint8_t *)&v10, 0x2Au);
  }
}

void sub_1000C1A34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = objc_loadWeakRetained((id *)(a1 + 64));
  id v6 = v3;
  if (([v6 willRetry] & 1) == 0)
  {
    uint64_t v7 = +[RegisterAction sharedregisterDigestSerialQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C2058;
    block[3] = &unk_1002D9C78;
    id v50 = v6;
    id v51 = WeakRetained;
    id v8 = v50;
    id v52 = v8;
    dispatch_async(v7, block);

    uint64_t v9 = [v8 httpResponseError];
    if (v9
      || (uint64_t)[v8 httpResponseStatus] < 200
      || (uint64_t)[v8 httpResponseStatus] > 399)
    {

LABEL_6:
      unsigned int v10 = [v8 cancelled];
      uint64_t v11 = sub_100004238();
      BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
      if (v10)
      {
        if (v12)
        {
          id v13 = [v8 fm_logID];
          *(_DWORD *)buf = 138412290;
          v54 = v13;
          _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Cancelled", buf, 0xCu);
        }
      }
      else if (v12)
      {
        __int16 v14 = [v8 fm_logID];
        id v15 = [v8 httpResponseStatus];
        __int16 v16 = [v8 httpResponseError];
        *(_DWORD *)buf = 138412802;
        v54 = v14;
        __int16 v55 = 2048;
        id v56 = v15;
        __int16 v57 = 2112;
        __int16 v58 = v16;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%@: Error (%ld) %@", buf, 0x20u);
      }
      [v5 registerDidFail];
LABEL_12:

      goto LABEL_13;
    }
    if ([v8 cancelled]) {
      goto LABEL_6;
    }
    uint64_t v17 = sub_100004238();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      unsigned __int8 v18 = [v8 fm_logID];
      id v19 = [v8 httpResponseStatus];
      *(_DWORD *)buf = 138412546;
      v54 = v18;
      __int16 v55 = 2048;
      id v56 = v19;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%@: successful with status %ld", buf, 0x16u);
    }
    uint64_t v20 = +[RegisterAction sharedregisterDigestSerialQueue];
    v46[0] = _NSConcreteStackBlock;
    v46[1] = 3221225472;
    v46[2] = sub_1000C216C;
    v46[3] = &unk_1002D93F0;
    id v21 = v8;
    id v47 = v21;
    id v48 = WeakRetained;
    dispatch_async(v20, v46);

    [v5 registerDidSucceed];
    byte_10031EC58 = 1;
    if ([v21 httpResponseStatus] == (id)200)
    {
      unsigned int v22 = +[FMDStartupRegisterManager sharedInstance];
      [v22 eventDidOccur:2];

      double v41 = _NSConcreteStackBlock;
      uint64_t v42 = 3221225472;
      double v43 = sub_1000C22AC;
      long long v44 = &unk_1002D9378;
      id v45 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, &v41);
      uint64_t v23 = v45;
    }
    else
    {
      if ([v21 httpResponseStatus] != (id)204)
      {
LABEL_22:
        double v24 = [v21 httpResponseHeaders:v41, v42, v43, v44];
        uint64_t v25 = [v24 objectForKey:@"X-Apple-Register-Interval"];

        if (v25)
        {
          uint64_t v26 = +[NSDate date];
          id v27 = (char *)[v26 fm_epoch];
          uint64_t v28 = &v27[(void)[v25 longLongValue]];

          double v29 = +[NSDate fm_dateFromEpoch:v28];
          int v30 = +[ActionManager sharedManager];
          [v30 setNextRegisterDate:v29];
        }
        uint64_t v31 = [v21 httpResponseHeaders];
        __int16 v32 = [v31 objectForKey:@"X-Apple-DeviceRestart-Register-Interval"];

        if (v32)
        {
          long long v33 = [*(id *)(a1 + 32) provider];
          __int16 v34 = [v33 account];
          uint64_t v35 = +[RegisterAction _deviceRestartRegisterIntervalConfigPrefKeyForAccount:v34];

          +[FMPreferencesUtil setString:v32 forKey:v35 inDomain:kFMDNotBackedUpPrefDomain];
        }
        if ([*(id *)(a1 + 40) isEqualToString:@"DeviceRestart"])
        {
          uint64_t v36 = [*(id *)(a1 + 32) provider];
          uint64_t v37 = [v36 account];
          __int16 v38 = +[RegisterAction _lastDeviceRestartRegisterTimePrefKeyForAccount:v37];

          double v39 = +[NSDate date];
          +[FMPreferencesUtil setDate:v39 forKey:v38 inDomain:kFMDNotBackedUpPrefDomain];
        }
        uint64_t v40 = *(void *)(a1 + 48);
        if (v40) {
          (*(void (**)(void))(v40 + 16))();
        }

        goto LABEL_12;
      }
      uint64_t v23 = +[FMDStartupRegisterManager sharedInstance];
      [v23 eventDidOccur:3];
    }

    goto LABEL_22;
  }
LABEL_13:
}

void sub_1000C2058(uint64_t a1)
{
  uint64_t v2 = qword_10031EC28;
  id v3 = [*(id *)(a1 + 32) digestData];

  if ((void *)v2 == v3)
  {
    id v4 = (void *)qword_10031EC28;
    qword_10031EC28 = 0;

    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = objc_opt_class();
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = objc_opt_class();
      uint64_t v9 = *(void *)(a1 + 48);
      int v10 = 138413058;
      uint64_t v11 = v6;
      __int16 v12 = 2048;
      uint64_t v13 = v7;
      __int16 v14 = 2112;
      uint64_t v15 = v8;
      __int16 v16 = 2048;
      uint64_t v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%@(0x%lX)-%@(0x%lX) Set inProgressRegisterDigest to nil", (uint8_t *)&v10, 0x2Au);
    }
  }
}

void sub_1000C216C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) digestData];
  id v3 = (void *)qword_10031EC30;
  qword_10031EC30 = v2;

  id v4 = [*(id *)(a1 + 32) digestData];
  id v5 = [*(id *)(a1 + 32) digestKey];
  +[FMPreferencesUtil setData:v4 forKey:v5 inDomain:kFMDNotBackedUpPrefDomain];

  +[FMPreferencesUtil synchronizeDomain:kFMDNotBackedUpPrefDomain];
  uint64_t v6 = sub_100004238();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = objc_opt_class();
    uint64_t v8 = *(void *)(a1 + 40);
    int v9 = 138412546;
    uint64_t v10 = v7;
    __int16 v11 = 2048;
    uint64_t v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%@(0x%lX) Save newRegisterDigest to pref", (uint8_t *)&v9, 0x16u);
  }
}

void sub_1000C22AC(uint64_t a1)
{
  uint64_t v2 = [FMDActingRequestDecorator alloc];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1000C2440;
  v10[3] = &unk_1002D9458;
  id v11 = *(id *)(a1 + 32);
  id v3 = [(FMDActingRequestDecorator *)v2 initWithDeviceContextGenerator:&stru_1002DD038 deviceInfoGenerator:v10 serverContextGenerator:0 requestHeaderGenerator:0];
  id v4 = [QCAction alloc];
  id v5 = [*(id *)(a1 + 32) account];
  uint64_t v6 = [*(id *)(a1 + 32) serverInteractionController];
  uint64_t v7 = [(QCAction *)v4 initWithAccount:v5 shutdownActivityPending:0 serverInteractionController:v6];

  [(QCAction *)v7 setRequestDecorator:v3];
  uint64_t v8 = +[ActionManager sharedManager];
  id v9 = [v8 enqueueAction:v7];
}

NSDictionary *__cdecl sub_1000C23F0(id a1)
{
  uint64_t v1 = objc_alloc_init(FMDActingRequestDecorator);
  uint64_t v2 = [(FMDActingRequestDecorator *)v1 standardDeviceContext];

  return (NSDictionary *)v2;
}

id sub_1000C2440(uint64_t a1)
{
  uint64_t v2 = +[ServerDeviceInfo sharedInstance];
  id v3 = [*(id *)(a1 + 32) account];
  id v4 = [v2 deviceInfoForAccount:v3];

  return v4;
}

void sub_1000C29BC(uint64_t a1)
{
  uint64_t v2 = sub_100004238();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) authId];
    int v7 = 138412290;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Delete Register Digest for account %@", (uint8_t *)&v7, 0xCu);
  }
  id v4 = +[RegisterAction _registerDigestPrefKeyForAccount:*(void *)(a1 + 32)];
  +[FMPreferencesUtil removeKey:v4 inDomain:kFMDNotBackedUpPrefDomain];
  id v5 = +[RegisterAction _lastForcedRegisterTimePrefKeyForAccount:*(void *)(a1 + 32)];
  +[FMPreferencesUtil removeKey:v5 inDomain:kFMDNotBackedUpPrefDomain];
  uint64_t v6 = (void *)qword_10031EC30;
  qword_10031EC30 = 0;
}

void sub_1000C5F98(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000C5FAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained tasksWithCompletion:&stru_1002DD0A0];
}

void sub_1000C5FF4(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = [(NSArray *)v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) resume];
        uint64_t v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [(NSArray *)v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

void sub_1000C6200(uint64_t a1)
{
  uint64_t v2 = +[NSMutableURLRequest requestWithURL:*(void *)(a1 + 32)];
  [v2 setHTTPMethod:@"GET"];
  [v2 setAllHTTPHeaderFields:*(void *)(a1 + 40)];
  if (*(void *)(a1 + 48)) {
    [v2 setHTTPBody:];
  }
  id v3 = [*(id *)(a1 + 56) session];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_1000C6304;
  v5[3] = &unk_1002DD0C8;
  id v6 = *(id *)(a1 + 64);
  id v4 = [v3 downloadTaskWithRequest:v2 completionHandler:v5];

  [v4 resume];
}

void sub_1000C6304(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v12 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = a4;
  id v9 = a2;
  id v10 = [v12 statusCode];
  id v11 = [v12 allHeaderFields];
  (*(void (**)(uint64_t, id, void *, void, id, id))(v7 + 16))(v7, v10, v11, 0, v9, v8);
}

void sub_1000C64BC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000C64D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained tasksWithCompletion:&stru_1002DD110];
}

void sub_1000C6518(id a1, NSArray *a2)
{
  uint64_t v2 = a2;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = [(NSArray *)v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v7 + 1) + 8 * (void)v6) cancel];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [(NSArray *)v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

uint64_t sub_1000C66BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000C70B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C712C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000C713C(uint64_t a1)
{
}

void sub_1000C7144(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  if (v7)
  {
    long long v8 = sub_100004238();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_10024421C();
    }
  }
  else
  {
    long long v8 = [objc_alloc((Class)NSString) initWithData:v6 encoding:4];
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), v8);
    long long v9 = sub_100059DD0();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 138412290;
      uint64_t v12 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Watch Migration: decrypted token %@", (uint8_t *)&v11, 0xCu);
    }
  }
  [*(id *)(a1 + 40) signal];
}

void sub_1000C755C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (v8)
  {
    long long v9 = sub_100004238();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v35 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore failed to encrypt token %@", buf, 0xCu);
    }
  }
  else
  {
    long long v9 = [a2 base64EncodedStringWithOptions:0];
    uint64_t v10 = +[NSMutableDictionary dictionary];
    [v10 fm_safeSetObject:v9 forKey:@"encryptedToken"];
    int v11 = *(void **)(a1 + 32);
    if (v11)
    {
      id v12 = v11;
    }
    else
    {
      id v12 = +[NSDate dateWithTimeIntervalSinceNow:691200.0];
    }
    uint64_t v13 = v12;
    __int16 v14 = +[FMSystemInfo sharedInstance];
    unsigned int v15 = [v14 isInternalBuild];

    if (v15)
    {
      uint64_t v16 = (uint64_t)+[FMPreferencesUtil integerForKey:@"UnregisterTokenExpiry" inDomain:kFMDNotBackedUpPrefDomain];
      if (v16 >= 1)
      {
        uint64_t v17 = +[NSDate dateWithTimeIntervalSinceNow:(double)v16];

        uint64_t v13 = (void *)v17;
      }
    }
    long long v33 = v13;
    [v10 fm_safeSetObject:v13 forKey:@"expiryDate"];
    unsigned __int8 v18 = +[FMDProtectedContextManager sharedManager];
    id v19 = [v18 saveContext:v10 forContextKey:*(void *)(a1 + 40) dataProtectionClass:1];

    uint64_t v20 = [[FMDCipherKeychainItemAdaptor alloc] initWithCipher:v7];
    id v21 = [*(id *)(a1 + 48) bundleIdentifier];
    unsigned int v22 = +[FMKeychainManager sharedInstance];
    uint64_t v23 = [(FMDCipherKeychainItemAdaptor *)v20 rawData];
    unsigned __int8 v24 = [v22 setData:v23 forAccount:*(void *)(a1 + 56) service:v21 synchronizable:0 dataProtectionClass:1 migratable:0];

    if (v24)
    {
      uint64_t v25 = sub_100059DD0();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v26 = *(void **)(a1 + 64);
        *(_DWORD *)buf = 138412290;
        id v35 = v26;
        _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "Watch Migration: Saved token and cipher for %@", buf, 0xCu);
      }
    }
    else
    {
      uint64_t v25 = sub_100004238();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
        sub_100244284(a1, v25, v27, v28, v29, v30, v31, v32);
      }
    }
  }
}

void sub_1000C7AD0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = objc_opt_class();
  id v6 = [v4 accessoryIdentifier];
  id v7 = [v5 tokenKeyForIdentifier:v6];
  [v3 addObject:v7];

  id v8 = *(void **)(a1 + 48);
  long long v9 = objc_opt_class();
  id v11 = [v4 accessoryIdentifier];

  uint64_t v10 = [v9 keychainLookupKeyForIdentifier:v11];
  [v8 addObject:v10];
}

void sub_1000C7BB0(id *a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasPrefix:@"AccessoryUnregisterToken"])
  {
    id v4 = +[FMDProtectedContextManager sharedManager];
    id v17 = 0;
    uint64_t v5 = [v4 contextForKey:v3 contextUUID:0 error:&v17];
    id v6 = v17;

    if (v6 || !v5) {
      goto LABEL_18;
    }
    unsigned __int8 v7 = [a1[4] containsObject:v3];
    if ((v7 & 1) == 0)
    {
      id v8 = sub_100004238();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore token Key no longer valid.", buf, 2u);
      }
    }
    id v9 = a1[5];
    id v16 = 0;
    unsigned __int8 v10 = [v9 isTokenDictionaryValid:v5 error:&v16];
    id v11 = v16;
    if (v10)
    {
      if (v7)
      {
LABEL_17:

LABEL_18:
        goto LABEL_19;
      }
    }
    else
    {
      id v12 = sub_100004238();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v19 = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore token expired %@", buf, 0xCu);
      }
    }
    [a1[5] removeUnregisterTokenForKey:v3];
    id v13 = [a1[4] indexOfObject:v3];
    if (v13 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v14 = v13;
      if (v13 < [a1[6] count])
      {
        unsigned int v15 = [a1[6] objectAtIndex:v14];
        [a1[5] removeKeychainItemForKey:v15];
      }
    }
    goto LABEL_17;
  }
LABEL_19:
}

void sub_1000C7DC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasPrefix:@"AccessoryUnregisterToken"]
    && ([*(id *)(a1 + 32) containsObject:v3] & 1) == 0)
  {
    id v4 = sub_100004238();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "FMDUnregisterTokenStore removing orphaned keychain item %@.", (uint8_t *)&v5, 0xCu);
    }

    [*(id *)(a1 + 40) removeKeychainItemForKey:v3];
  }
}

void sub_1000C7F98(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasPrefix:@"AccessoryUnregisterToken"]) {
    [*(id *)(a1 + 32) removeUnregisterTokenForKey:v3];
  }
}

void sub_1000C7FF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 hasPrefix:@"AccessoryUnregisterToken"]) {
    [*(id *)(a1 + 32) removeKeychainItemForKey:v3];
  }
}

void sub_1000C8F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000C8F44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = *(void **)(a1 + 32);
  if (v3)
  {
    id v4 = [v3 objectForKeyedSubscript:@"FMDSupportedAccessoryRegistryLocalVersionKey"];
    id v5 = [v4 integerValue];

    id v6 = [WeakRetained supportedAccessories];
    unsigned __int8 v7 = [v6 objectForKey:@"FMDSupportedAccessoryRegistryLocalVersionKey"];
    id v8 = [v7 integerValue];

    id v9 = [WeakRetained supportedAccessories];
    unsigned __int8 v10 = [v9 objectForKey:@"FMDSupportedAccessoryRegistryVersionKey"];
    id v11 = [v10 integerValue];

    if ((uint64_t)v11 <= 0 && (uint64_t)v5 > (uint64_t)v8)
    {
      [WeakRetained setSupportedAccessories:*(void *)(a1 + 32)];
      id v12 = [WeakRetained dataArchiver];
      id v13 = [WeakRetained supportedAccessories];
      id v14 = [v12 saveDictionary:v13];

      if (v14)
      {
        unsigned int v15 = sub_100004238();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
          sub_10023EA80();
        }
      }
      if (objc_opt_respondsToSelector())
      {
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472;
        _DWORD v16[2] = sub_1000C913C;
        v16[3] = &unk_1002D93F0;
        id v17 = *(id *)(a1 + 40);
        id v18 = WeakRetained;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v16);
      }
    }
  }
}

id sub_1000C913C(uint64_t a1)
{
  return [*(id *)(a1 + 32) supportedAccessoryRegistryDidUpdateSupportedAccessories:*(void *)(a1 + 40)];
}

void sub_1000C95BC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000C95D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"supportedAccessories"];
  id v4 = +[NSMutableDictionary dictionary];
  id v5 = +[NSMutableArray array];
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  id obj = v3;
  id v6 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
  uint64_t v30 = v4;
  uint64_t v31 = WeakRetained;
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v37;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v37 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void *)(*((void *)&v36 + 1) + 8 * i);
        id v11 = [FMDSupportedAccessory alloc];
        id v12 = [WeakRetained assetRegistry];
        id v13 = [(FMDSupportedAccessory *)v11 initWithDictionary:v10 assetRegistry:v12];

        id v14 = [(FMDSupportedAccessory *)v13 accessoryIdentifier];
        [v4 fm_safeSetObject:v13 forKey:v14];

        unsigned int v15 = sub_100004238();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          id v16 = [(FMDSupportedAccessory *)v13 deviceVendor];
          id v17 = [v16 integerValue];
          id v18 = [(FMDSupportedAccessory *)v13 deviceProductId];
          id v19 = [v18 integerValue];
          *(_DWORD *)buf = 134218240;
          id v41 = v17;
          __int16 v42 = 2048;
          id v43 = v19;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "New supported accessory added %li, %li", buf, 0x16u);

          id v4 = v30;
          id WeakRetained = v31;
        }
        uint64_t v20 = [(FMDSupportedAccessory *)v13 assets];
        [v5 addObjectsFromArray:v20];
      }
      id v7 = [obj countByEnumeratingWithState:&v36 objects:v44 count:16];
    }
    while (v7);
  }

  id v21 = [WeakRetained assetRegistry];
  [v21 removeUntrackedAssets:v5];

  unsigned int v22 = [WeakRetained assetRegistry];
  [v22 downloadAssets:v5];

  uint64_t v23 = [*(id *)(a1 + 32) objectForKeyedSubscript:@"accConfigVersion"];
  [v4 fm_safelySetObject:v23 forKey:@"FMDSupportedAccessoryRegistryVersionKey"];
  [WeakRetained setSupportedAccessories:v4];
  unsigned __int8 v24 = [WeakRetained dataArchiver];
  uint64_t v25 = [WeakRetained supportedAccessories];
  uint64_t v26 = [v24 saveDictionary:v25];

  if (v26)
  {
    uint64_t v27 = sub_100004238();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
      sub_10023EA80();
    }
  }
  uint64_t v28 = *(void *)(a1 + 40);
  if (v28) {
    (*(void (**)(void))(v28 + 16))();
  }
  uint64_t v29 = [v31 delegate];
  if (objc_opt_respondsToSelector())
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000C99DC;
    block[3] = &unk_1002D93F0;
    id v34 = v29;
    id v35 = v31;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

id sub_1000C99DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) supportedAccessoryRegistryDidUpdateSupportedAccessories:*(void *)(a1 + 40)];
}

void sub_1000C9AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C9B04(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000C9B14(uint64_t a1)
{
}

void sub_1000C9B1C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) supportedAccessories];
  uint64_t v2 = [v5 objectForKey:@"FMDSupportedAccessoryRegistryVersionKey"];
  id v3 = (void *)v2;
  if (v2) {
    id v4 = (_UNKNOWN **)v2;
  }
  else {
    id v4 = &off_1002F2170;
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v4);
}

void sub_1000C9C58(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_1000C9C6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained supportedAccessories];
  id v3 = [v2 mutableCopy];

  [v3 removeObjectForKey:@"FMDSupportedAccessoryRegistryVersionKey"];
  [WeakRetained setSupportedAccessories:v3];
  id v4 = [WeakRetained dataArchiver];
  id v5 = [WeakRetained supportedAccessories];
  id v6 = [v4 saveDictionary:v5];

  if (v6)
  {
    id v7 = sub_100004238();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_10023EA80();
    }
  }
}

void sub_1000CA4C4(uint64_t a1)
{
  uint64_t v2 = +[NSFileManager defaultManager];
  id v3 = [(id)objc_opt_class() defaultStorageLocation];
  id v7 = 0;
  [v2 removeItemAtURL:v3 error:&v7];
  id v4 = v7;

  if (v4 && (objc_msgSend(v4, "fm_isFileNotFoundError") & 1) == 0)
  {
    id v5 = sub_100004238();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_100244428(v4, v5);
    }
  }
  [*(id *)(a1 + 32) setSupportedAccessories:&__NSDictionary0__struct];
  id v6 = [*(id *)(a1 + 32) assetRegistry];
  [v6 clearAssetRegistry];
}

void sub_1000CA7B0(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = +[NSFileManager defaultManager];
  id v4 = [v7 fileURL];
  id v5 = [v4 path];
  unsigned __int8 v6 = [v3 fileExistsAtPath:v5];

  if ((v6 & 1) == 0) {
    [*(id *)(a1 + 32) addObject:v7];
  }
}

void sub_1000CAC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000CAC58(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v5 = [*(id *)(a1 + 40) supportedAccessories];
    uint64_t v2 = [v5 objectForKeyedSubscript:*(void *)(a1 + 32)];
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;
  }
}

void sub_1000CAE3C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1000CAE50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ([WeakRetained defaultAccessoriesEnabled])
  {
    [WeakRetained defaultSupportedAccessoriesIfEnabled:[*(id *)(a1 + 32) defaultAccessoriesEnabled]];
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    [WeakRetained setSupportedAccessories:v3];
  }
  else
  {
    id v4 = [WeakRetained dataArchiver];
    uint64_t v5 = objc_opt_class();
    unsigned __int8 v6 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, objc_opt_class(), 0);
    id v10 = 0;
    id v7 = [v4 readDictionaryAndClasses:v6 error:&v10];
    id v3 = v10;

    if ((objc_msgSend(v3, "fm_isFileNotFoundError") & 1) == 0 && (!v7 || v3))
    {

      uint64_t v8 = sub_100004238();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100244574();
      }

      id v9 = +[FMDEventLoggerGeneral sharedInstance];
      [v9 sendError:v3 forEventName:@"FMDSupportedAccessoryRegistryFailedReadEventName"];

      id v7 = &__NSDictionary0__struct;
    }
    [WeakRetained setSupportedAccessories:v7];
  }
}

void sub_1000CB1F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = +[FMXPCTransactionManager sharedInstance];
  [v3 endTransaction:*(void *)(a1 + 32)];
}

void sub_1000CB374(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = +[FMXPCTransactionManager sharedInstance];
  [v3 endTransaction:*(void *)(a1 + 32)];
}

uint64_t FMDNanoSupportProtoSignedDataV4ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0;
              break;
            case 2u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 48;
              goto LABEL_34;
            case 3u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 56;
              goto LABEL_34;
            case 4u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 32;
              goto LABEL_34;
            case 5u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 16;
              goto LABEL_34;
            case 6u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 8;
              goto LABEL_34;
            case 7u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 24;
              goto LABEL_34;
            case 8u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 40;
LABEL_34:
              uint64_t v20 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_35;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_35:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_38;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              uint64_t v14 = 0;
              goto LABEL_40;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v14 = 0;
          }
LABEL_40:
          *(unsigned char *)(a1 + 64) = v14 != 0;
          goto LABEL_35;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV4ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 16;
LABEL_21:
        uint64_t v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 8;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataV5ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0;
              break;
            case 2u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 72;
              goto LABEL_37;
            case 3u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 80;
              goto LABEL_37;
            case 4u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 56;
              goto LABEL_37;
            case 5u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 40;
              goto LABEL_37;
            case 6u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 24;
              goto LABEL_37;
            case 7u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 8;
              goto LABEL_37;
            case 8u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 32;
              goto LABEL_37;
            case 9u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 48;
              goto LABEL_37;
            case 0xAu:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 64;
              goto LABEL_37;
            case 0xBu:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 16;
LABEL_37:
              uint64_t v20 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_38;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_38:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_41;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              uint64_t v14 = 0;
              goto LABEL_43;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_41:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v14 = 0;
          }
LABEL_43:
          *(unsigned char *)(a1 + 88) = v14 != 0;
          goto LABEL_38;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV5ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 16;
LABEL_21:
        uint64_t v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 8;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedLostModeExitReadFrom(uint64_t a1, uint64_t a2)
{
  while (1)
  {
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
      return v3 == 0;
    }
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      int v3 = 1;
      return v3 == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        LOBYTE(v6) = 0;
        int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v3 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LOBYTE(v6) = 0;
    }
LABEL_13:
    if (v3) {
      BOOL v10 = 1;
    }
    else {
      BOOL v10 = (v6 & 7) == 4;
    }
    if (v10) {
      return v3 == 0;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      return 0;
    }
  }
}

uint64_t FMDNanoSupportProtoLostModeExitAuthReadFrom(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 2)
    {
      uint64_t v17 = PBReaderReadString();
      uint64_t v18 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = v17;
    }
    else if ((v6 >> 3) == 1)
    {
      char v12 = 0;
      unsigned int v13 = 0;
      uint64_t v14 = 0;
      while (1)
      {
        unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
        v14 |= (unint64_t)(v16 & 0x7F) << v12;
        if ((v16 & 0x80) == 0) {
          goto LABEL_30;
        }
        v12 += 7;
        BOOL v9 = v13++ >= 9;
        if (v9)
        {
          uint64_t v14 = 0;
          goto LABEL_32;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_30:
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v14 = 0;
      }
LABEL_32:
      *(unsigned char *)(a1 + 16) = v14 != 0;
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      switch((v6 >> 3))
      {
        case 1u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 8;
          goto LABEL_24;
        case 2u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 32;
          goto LABEL_24;
        case 3u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 24;
          goto LABEL_24;
        case 4u:
          uint64_t v12 = PBReaderReadString();
          uint64_t v13 = 16;
LABEL_24:
          uint64_t v14 = *(void **)(a1 + v13);
          *(void *)(a1 + v13) = v12;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            return 0;
          }
LABEL_25:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          break;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

BOOL FMDNanoSupportProtoNeedSignatureV3ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }
      *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 2) {
        break;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t v12 = PBReaderReadData();
        uint64_t v13 = 16;
LABEL_21:
        uint64_t v14 = *(void **)(a1 + v13);
        *(void *)(a1 + v13) = v12;

        goto LABEL_23;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        return 0;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }
    uint64_t v12 = PBReaderReadString();
    uint64_t v13 = 8;
    goto LABEL_21;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0;
              break;
            case 2u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 40;
              goto LABEL_34;
            case 3u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 56;
              goto LABEL_34;
            case 4u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 32;
              goto LABEL_34;
            case 5u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 24;
              goto LABEL_34;
            case 6u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 48;
              goto LABEL_34;
            case 7u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 8;
              goto LABEL_34;
            case 8u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 16;
LABEL_34:
              uint64_t v20 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_35;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_35:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_38;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              uint64_t v14 = 0;
              goto LABEL_40;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v14 = 0;
          }
LABEL_40:
          *(unsigned char *)(a1 + 64) = v14 != 0;
          goto LABEL_35;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t FMDNanoSupportProtoSignedDataV3ReadFrom(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (2)
    {
      if (!*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error))
      {
        char v4 = 0;
        unsigned int v5 = 0;
        unint64_t v6 = 0;
        while (1)
        {
          unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
          v6 |= (unint64_t)(v8 & 0x7F) << v4;
          if ((v8 & 0x80) == 0) {
            goto LABEL_11;
          }
          v4 += 7;
          BOOL v9 = v5++ >= 9;
          if (v9)
          {
            unint64_t v6 = 0;
            int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
            goto LABEL_13;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          unint64_t v6 = 0;
        }
LABEL_13:
        if (v10) {
          BOOL v11 = 1;
        }
        else {
          BOOL v11 = (v6 & 7) == 4;
        }
        if (!v11)
        {
          switch((v6 >> 3))
          {
            case 1u:
              char v12 = 0;
              unsigned int v13 = 0;
              uint64_t v14 = 0;
              break;
            case 2u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 24;
              goto LABEL_31;
            case 3u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 32;
              goto LABEL_31;
            case 4u:
              uint64_t v18 = PBReaderReadData();
              uint64_t v19 = 8;
              goto LABEL_31;
            case 5u:
              uint64_t v18 = PBReaderReadString();
              uint64_t v19 = 16;
LABEL_31:
              uint64_t v20 = *(void **)(a1 + v19);
              *(void *)(a1 + v19) = v18;

              goto LABEL_36;
            default:
              uint64_t result = PBReaderSkipValueWithTag();
              if (!result) {
                return result;
              }
LABEL_36:
              if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
            v14 |= (unint64_t)(v16 & 0x7F) << v12;
            if ((v16 & 0x80) == 0) {
              goto LABEL_33;
            }
            v12 += 7;
            BOOL v9 = v13++ >= 9;
            if (v9)
            {
              uint64_t v14 = 0;
              goto LABEL_35;
            }
          }
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_33:
          if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v14 = 0;
          }
LABEL_35:
          *(unsigned char *)(a1 + 40) = v14 != 0;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

uint64_t sub_1000D17B0(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for ClientOrigin();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000D189C, 0, 0);
}

uint64_t sub_1000D189C()
{
  (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for ClientOrigin.other(_:), v0[4]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[8] = Session.init(_:)();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1000D1994;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return Session.processLocationPayload(_:)(v3, v2);
}

uint64_t sub_1000D1994()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D1AE8, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000D1AE8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000D1CDC(void *a1, const void *a2, void *a3)
{
  v3[2] = a3;
  uint64_t v7 = type metadata accessor for ClientOrigin();
  v3[3] = v7;
  void v3[4] = *(void *)(v7 - 8);
  v3[5] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v3[6] = swift_task_alloc();
  v3[7] = _Block_copy(a2);
  id v8 = a1;
  id v9 = a3;
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  __int16 v3[8] = v10;
  v3[9] = v12;
  return _swift_task_switch(sub_1000D1E0C, 0, 0);
}

uint64_t sub_1000D1E0C()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for ClientOrigin.other(_:), v0[3]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[10] = Session.init(_:)();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_1000D1F04;
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  return Session.processLocationPayload(_:)(v3, v2);
}

uint64_t sub_1000D1F04()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D20A0, 0, 0);
  }
  else
  {
    unint64_t v3 = *(void *)(v2 + 72);
    uint64_t v5 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    unint64_t v6 = *(void **)(v2 + 16);
    swift_release();

    sub_1000D3468(v4, v3);
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    _Block_release(*(const void **)(v2 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v2 + 8);
    return v7();
  }
}

uint64_t sub_1000D20A0()
{
  unint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v4 = *(void **)(v0 + 16);
  swift_release();

  sub_1000D3468(v2, v1);
  uint64_t v5 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v5);

  _Block_release(*(const void **)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000D2174(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for ClientOrigin();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1000D2260, 0, 0);
}

uint64_t sub_1000D2260()
{
  (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for ClientOrigin.other(_:), v0[4]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[8] = Session.init(_:)();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  void *v1 = v0;
  v1[1] = sub_1000D2358;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return Session.processLocationCommandPayload(_:)(v3, v2);
}

uint64_t sub_1000D2358()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D3608, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1000D2628(void *a1, const void *a2, void *a3)
{
  v3[2] = a3;
  uint64_t v7 = type metadata accessor for ClientOrigin();
  v3[3] = v7;
  void v3[4] = *(void *)(v7 - 8);
  v3[5] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v3[6] = swift_task_alloc();
  v3[7] = _Block_copy(a2);
  id v8 = a1;
  id v9 = a3;
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  __int16 v3[8] = v10;
  v3[9] = v12;
  return _swift_task_switch(sub_1000D2758, 0, 0);
}

uint64_t sub_1000D2758()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for ClientOrigin.other(_:), v0[3]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  v0[10] = Session.init(_:)();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_1000D2850;
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  return Session.processLocationCommandPayload(_:)(v3, v2);
}

uint64_t sub_1000D2850()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000D3610, 0, 0);
  }
  else
  {
    unint64_t v3 = *(void *)(v2 + 72);
    uint64_t v5 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    unint64_t v6 = *(void **)(v2 + 16);
    swift_release();

    sub_1000D3468(v4, v3);
    (*(void (**)(uint64_t, void))(v5 + 16))(v5, 0);
    _Block_release(*(const void **)(v2 + 56));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v2 + 8);
    return v7();
  }
}

uint64_t type metadata accessor for FindMyLocateWrapper()
{
  return self;
}

id sub_1000D2A50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FindMyLocateWrapper();
  return [super dealloc];
}

uint64_t sub_1000D2A84(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000D2ACC()
{
  objc_super v2 = (void *)v0[2];
  unint64_t v3 = (const void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1000D360C;
  unint64_t v6 = (uint64_t (*)(void *, const void *, void *))((char *)&dword_10031DBF0 + dword_10031DBF0);
  return v6(v2, v3, v4);
}

uint64_t sub_1000D2B80(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000D360C;
  return v6();
}

uint64_t sub_1000D2C50()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1000D360C;
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_10031DC00 + dword_10031DC00);
  return v6(v2, v3, v4);
}

uint64_t sub_1000D2D10(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_1000D360C;
  return v7();
}

uint64_t sub_1000D2DE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000D360C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_10031DC10 + dword_10031DC10);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1000D2EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000D3050(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000D3050(uint64_t a1)
{
  uint64_t v2 = sub_1000D2A84(&qword_10031DBE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D30B0(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000D318C;
  return v6(a1);
}

uint64_t sub_1000D318C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000D3284()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D32BC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1000D3374;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10031DC20 + dword_10031DC20);
  return v6(a1, v4);
}

uint64_t sub_1000D3374()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000D3468(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1000D34C4()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000D350C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (const void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1000D3374;
  uint64_t v6 = (uint64_t (*)(void *, const void *, void *))((char *)&dword_10031DC30 + dword_10031DC30);
  return v6(v2, v3, v4);
}

uint64_t sub_1000D35C8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000D3614(mach_port_t a1, uint64_t a2, int a3, void *a4, _DWORD *a5)
{
  int v15 = 1;
  uint64_t v16 = a2;
  int v17 = 16777472;
  int v18 = a3;
  NDR_record_t v19 = NDR_record;
  int v20 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(void *)&v14.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&v14);
    mach_port_t reply_port = v14.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    uint64_t v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        int v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      uint64_t v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port) {
          uint64_t v12 = 4294966996;
        }
        else {
          uint64_t v12 = HIDWORD(v16);
        }
      }
    }
    else
    {
      uint64_t v12 = 4294966996;
    }
  }
  else
  {
    uint64_t v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

uint64_t sub_1000D3800(uint64_t a1, uint64_t a2)
{
  if (unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8))) {
    __asm { BRAA            X8, X17 }
  }
  return 4294922295;
}

void sub_1000D3D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _DWORD *a15, uint64_t a16, int a17, int a18)
{
  *(void *)(v21 - 208) = v18;
  unsigned int v22 = *(void **)(v21 - 136);
  (*(void (**)(void))(v19 + 8 * (v20 ^ (v20 - 1871))))(*v22);
  *unsigned int v22 = a14;
  *a15 = a18;
  JUMPOUT(0x1000D3D58);
}

uint64_t sub_1000D3DC8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((a1 * (v3 + (v1 ^ 0x335) + v4 + v1 - 687 - 981)) ^ v1)))();
}

uint64_t sub_1000D3DF8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((((v0 - 410) | 0x119) ^ 0xFFFFFE3A) + v0 - 132) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1000D3E38()
{
  unsigned int v3 = ((v0 - 82150104) & 0x4E585D9) - 437759 + *(_DWORD *)(v1 + 12) - 1044;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 1123084877;
  BOOL v5 = v3 < 0xFFF95201;
  BOOL v6 = v3 > v4;
  if (v4 < 0xFFF95201 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((63 * !v6) ^ v0)))();
}

uint64_t sub_1000D3EC0@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v31 = *(void *)(v30 - 144);
  int v32 = v27 + 3;
  *(void *)(v30 - 144) = v31;
  uint64_t v33 = *(void *)(v31 - 0x3B66C28959A1DD8DLL);
  unsigned int v34 = ((2 * a9) & 0x7FAEFDDE) + (a9 ^ 0xBFD77EEF);
  *(unsigned char *)(v33 + v34 + (v32 ^ 0x40288008)) = -123;
  v34 += 1076396040;
  *(unsigned char *)(v33 + v34 + 266) = -2;
  *(unsigned char *)(v33 + v34 + 267) = 99;
  *(unsigned char *)(v33 + v34 + 268) = -80;
  *a1 += 4;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((v32 + 554792680) | 0x5E208106) ^ (v29 + 950) ^ v32)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000D41A0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 1569420586) & 0x5D8B77FA) + ((v1 + 247399078) & 0xF140FEEF) - 1659)
                                     * (v0 == 0)) ^ (v1 + 1549))))();
}

uint64_t sub_1000D4200()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1642909503;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1529410671;
  BOOL v5 = v3 < 0x9E1330BD;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < (((v0 - 1000) | 0x234) ^ 0x9E132B7A) + 15 * (v0 ^ 0x395)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1050 * v6) ^ v0)))();
}

uint64_t sub_1000D4290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  HIDWORD(a25) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v26 - 1367) | 0x40) ^ (v26 - 1313)) * (v27 != 0)) | v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000D42D0()
{
  unsigned int v3 = v0 - 1793147892;
  BOOL v4 = (v0 - 1793147892) < 0xD808F856;
  unsigned int v5 = (((2 * v1) ^ 0xA5F7FD48) & (2 * (2 * v0 + 2049673060))) + ((2 * v0 + 2049673060) ^ 0x52FBFCFE);
  if (v4 != v5 - 2062746792 < 0xD808F856) {
    BOOL v6 = v5 - 2062746792 < 0xD808F856;
  }
  else {
    BOOL v6 = v5 - 2062746792 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((367 * v6) ^ v1)))();
}

uint64_t sub_1000D4378@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = *(void *)(v29 - 144);
  int v31 = (v26 - 11) | 0x84;
  *(void *)(v29 - 144) = v30;
  uint64_t v32 = *(void *)(v30 - 0x3B66C28959A1DD8DLL);
  unsigned int v33 = (a9 ^ 0x6BDF3CEF) - 1809792925 + ((2 * a9) & 0xD7BE79DE);
  *(unsigned char *)(v32 + v33 + 686) = 0;
  *(unsigned char *)(v32 + v33 + v31) = 0;
  *(unsigned char *)(v32 + v33 + 688) = 0;
  *(unsigned char *)(v32 + v33 + 689) = 1;
  *a1 += 4;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((v31 - 197) ^ (v28 + 143) ^ v31 ^ (v28 + 673) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000D453C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((3 * (v0 ^ 0xB7) - 52) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1000D4578()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 1189778007;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 67130881;
  BOOL v5 = v3 < (v0 ^ 0x61Eu) + 1189777478;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x46EA924F) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((49 * !v6) ^ v0)))();
}

uint64_t sub_1000D45F8@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v30 = *(void *)(v29 - 144);
  uint64_t v31 = (v25 - 240);
  unint64_t v32 = v26 - ((v31 ^ 0xF99431D3CA63CD40) & (2 * v26)) + 0x7CCA18E9E531E62CLL;
  *(void *)(v29 - 144) = v30;
  unsigned int v33 = (unsigned char *)(*(void *)(v30 - 0x3B66C28959A1DD8DLL)
                + ((2 * a9) & 0x1F6BAFABALL)
                + (a9 ^ 0x67AF3FFFFB5D7D5DLL)
                - 0x67AF3FFFFB5D7D5DLL);
  unsigned char *v33 = HIBYTE(v32) ^ 0x7C;
  v33[1] = BYTE6(v32) ^ 0xCA;
  v33[2] = BYTE5(v32) ^ 0x18;
  v33[3] = BYTE4(v32) ^ 0xE9;
  void v33[4] = ((v26 - ((v31 ^ 0xCA63CD40) & (2 * v26)) - 449714644) >> 24) ^ 0xE5;
  void v33[5] = ((v26 - ((v31 ^ 0xCA63CD40) & (2 * v26)) - 449714644) >> 16) ^ 0x31;
  v33[6] = ((unsigned __int16)(v26 - ((v31 ^ 0xCD40) & (2 * v26)) - 6612) >> 8) ^ 0xE6;
  v33[7] = (v26 - ((v31 ^ 0x40) & (2 * v26)) + 44) ^ 0x2C;
  *a1 += 8;
  return (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)(v31 ^ (v28 - 233) ^ (v28 + 1628) ^ ((v31 - 279) | 0x61C) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000D4950()
{
  *(void *)(v4 - 120) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (((v1 == 0) ^ (v3 + v0)) & 1)) ^ v0)))();
}

uint64_t sub_1000D4994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v32 = v28 ^ 0x5A8;
  uint64_t v33 = (*(uint64_t (**)(void))(v29 + 8 * ((v28 ^ 0x5A8) + 1387)))();
  (*(void (**)(uint64_t, char *, void, void))(v29 + 8 * (v32 ^ 0xB5F)))(v33, (char *)*(&off_1002E1E10 + (v32 ^ 0x3B3)) - 3, **(void **)(v31 - 136), *(unsigned int *)(*(void *)(v31 - 136) + 12));
  uint64_t v34 = (*(uint64_t (**)(void, void))(v29 + 8 * (v32 ^ 0xB49)))(*(void *)(v31 - 160), 0);
  *(void *)(v31 - 184) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v34 == 0) * ((v32 + 2134898241) & 0xFFF1FF0F ^ (v30 + 2))) ^ v32)))(v34, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000D4A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v29 - 192) = a1;
  uint64_t v30 = (*(uint64_t (**)(void, void, void))(v28 + 8 * (v27 + 1358)))(*(void *)(v29 - 160), *(void *)(v29 - 192), 0);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v30 == 0) ^ (v27 - 47)) & 1) * (((v27 + 2147219409) ^ 0x7FFBFA0C) - 268)) ^ (v27 - 247)));
  *(void *)(v29 - 184) = *(void *)(v29 - 192);
  return v31(v30, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000D4AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, char *))(v37 + 8 * (v36 ^ 0x8B8)))(a1, (char *)*(&off_1002E1E10 + v36 - 364) - 12);
  (*(void (**)(uint64_t))(v37 + 8 * (v36 + 1830)))(a1);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 ^ 0x8A7)))(a1, a36);
  uint64_t v39 = (void *)(*(uint64_t (**)(void))(v37 + 8 * (v36 + 1927)))();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v39 == *(&off_1002E1E10 + (v36 ^ 0x181))) * ((v36 + 497444452) & 0xE2599FFF ^ ((v36 ^ 0xA4) + 188))) ^ v36)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000D4BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (((a31 == (void)*(&off_1002E1E10 + v32 - 284) - 8)
                                * (5 * (v32 ^ 0x160) + ((v32 + 2133981144) ^ 0x7F31FEA1))) ^ v32)))();
}

uint64_t sub_1000D4C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v38 ^ 0x8A7)))(a28, a36);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v38 ^ 0x899)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((v39 == v36) * ((((v38 - 1633085932) & 0x6156EF60) + 239) ^ 0x560)) ^ v38)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000D4C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * ((((v33 ^ 0x7F31FE07) - 2133979208 + ((v33 - 8035729) & 0x7A97FF) - 2600) * (a31 == v31)) ^ v33)))();
}

uint64_t sub_1000D4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v38 + 1981)))(a28, a36);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v38 + 1955)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((228 * (((v38 + 52) ^ (v39 == v36)) & 1)) ^ v38)))(v39, v40, v41, v42, v43, v44, v45, v46, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000D4D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 8 * (v33 + 295)))(a31, v32, v34 - 120);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((((v33 + 24) ^ (v35 == 0)) & 1) * ((v33 - 339) ^ 0x684)) ^ v33));
  *(void *)(v34 - 200) = 0x50417EF54FC55D4FLL;
  return v36(v35, v37, v38, v39, v40, v41, v42, v43);
}

uint64_t sub_1000D4DE8()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 623)))(24, 4101018099);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (((v3 == 0) * (((v0 + 254851689) | 0x70013802) ^ 0x7F31FE07 ^ ((v0 - 658) | 0x330))) ^ v0));
  *(void *)(v2 - 200) = 0x50417EF54FC55D4FLL;
  return v4(v3, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000D4E84(uint64_t a1)
{
  *(void *)(v3 - 176) = a1 + 0x50417EF54FC55D4FLL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 917342576;
  *(_DWORD *)(a1 + 12) = 437737774;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xE31)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 1) ^ (v5 == 0)) & 1) * (((v1 - 1786) | 0x482) - 1212)) ^ v1)))();
}

uint64_t sub_1000D4F18()
{
  *(_DWORD *)(v3 + 8) = v1 + 4096;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + 37) ^ (*(void *)(v4 - 120) > (unint64_t)(v1 - 917338480))) & 1)
                                * ((v0 - 1038699979) & 0x3DE94D9F ^ 0x491)) ^ v0)))();
}

uint64_t sub_1000D4F90@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(void *)(v28 - 200) = 0x50417EF54FC55D4FLL;
  *(void *)(v28 - 184) = *(void *)(v28 - 192);
  uint64_t v29 = *(void *)(v28 - 176);
  *(void *)(v28 - 176) = v29;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)(((a16 <= *(void *)(v29 - 0x50417EF54FC55D4FLL)) * ((a8 & 0xBE1EC43B ^ 0x289) + 326 + 3 * (a8 & 0xBE1EC43B ^ 0x14C) - 1996)) ^ a8 & 0xBE1EC43B ^ 0x289)))(*(void *)(v29 - 0x50417EF54FC55D4FLL), a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, v29, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000D55BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22 = *(void *)(v21 - 176);
  *(_DWORD *)(v22 - 0x50417EF54FC55D47) = (*(_DWORD *)(v21 - 120) ^ 0x3EFDEB73)
                                          - 139485699
                                          + ((2 * *(_DWORD *)(v21 - 120)) & 0x7DFBD6E6);
  *(_DWORD *)(v22 - 0x50417EF54FC55D43) = 437737774;
  *(void *)(v21 - 152) = v20;
  uint64_t v23 = *(void *)(v21 - 184);
  *(void *)(v21 - 200) = v22;
  *(void *)(v21 - 192) = v23;
  return sub_1000D563C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1000D563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(_DWORD *)(v38 - 168) = v36;
  (*(void (**)(void))(v37 + 8 * (v36 ^ 0x7F31F002)))(*(void *)(v38 - 192));
  (*(void (**)(uint64_t))(v37 + 8 * (v36 ^ 0x7F31F002)))(a28);
  return (*(uint64_t (**)(void))(v37 + 8 * ((165 * (a36 != 0)) ^ (v36 - 2133980878))))();
}

uint64_t sub_1000D56B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v36 = (*(uint64_t (**)(void))(v33 + 8 * v34))();
  uint64_t v37 = *(uint64_t (**)(uint64_t))(v33 + 8 * ((v32 - 504) ^ ((2 * (a31 == 0)) | (8 * (a31 == 0)))));
  *(void *)(v35 - 184) = v31;
  return v37(v36);
}

uint64_t sub_1000D570C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  (*(void (**)(uint64_t))(v34 + 8 * (*(_DWORD *)(v38 - 168) ^ v31)))(a31);
  uint64_t v39 = *(void *)(v38 - 136);
  *(void *)(v38 - 184) = v32;
  if (v35 == -45004)
  {
    *(void *)(v38 - 176) = v33;
    *(void *)(v38 - 128) = 0;
    *(_DWORD *)(v38 - 112) = 0;
    uint64_t v40 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v34 + 8 * (v37 ^ (v37 - 2278))))(*(unsigned int *)*(&off_1002E1E10 + (v37 ^ (v37 + 8))), *(void *)v39, *(unsigned int *)(v39 + 12), v38 - 128, v38 - 112);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1119 * ((v40 ^ 0x4FDFFACD) - 92409924 + ((2 * v40) & 0x9FBFF59A) == 1516104332)) ^ (v36 + v37 - 1898))))(v40, v41, v42, v43, v44, v45, v46, v47, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27);
  }
  else if (v35)
  {
    return sub_1000D6CD8();
  }
  else
  {
    return sub_1000D66BC();
  }
}

uint64_t sub_1000D5D9C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v0 - v1 + 2076) ^ 0xFFFFF1B0) + v0 - v1 + 2076) * (v3 == 0)) ^ v0)))();
}

uint64_t sub_1000D5DD0()
{
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ (v3 - 1871))))(v2);
  return sub_1000D664C();
}

uint64_t sub_1000D5DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,int a30,int a31)
{
  uint64_t v37 = (*(uint64_t (**)(void))(v32 + 8 * (v35 + v34)))(*(void *)(v31 - 0x50417EF54FC55D4FLL));
  *(void *)(v31 - 0x50417EF54FC55D4FLL) = a23;
  *a29 = a31;
  *(void *)(v36 - 152) = v33;
  return (*(uint64_t (**)(uint64_t))(v32
                                            + 8
                                            * ((117 * ((((v35 + v34 - 2228) ^ 0x42E) & 1) == 0)) ^ (v35 + v34 - 267))))(v37);
}

void sub_1000D5E88()
{
  *(void *)(v1 - 168) = v0;
  JUMPOUT(0x1000D5EBCLL);
}

uint64_t sub_1000D5F1C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((233 * (((v0 == 0) ^ (v1 + 58) & 0x7F) & 1)) ^ v1)))();
}

uint64_t sub_1000D5F64()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((143 * ((v0 ^ (v1 < ((v0 + 2143287426) & 0xFF71FD5F ^ (v3 + 8)))) & 1)) ^ v0)))();
}

uint64_t sub_1000D5FB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((472
                                * (v1 >= (((v0 ^ 0x5D2) + 649353352) & 0xD94BA6C6 ^ 0xFFFFFFFF80CE015FLL)
                                       + (((v0 ^ 0x5D2) + 2134766672) & 0xFFF3FDBF))) ^ v0 ^ 0x5D2)))();
}

uint64_t sub_1000D601C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (v0 >= ((v1 + 86010557) | 0x7A118804u) - v3 + 32)) ^ v1)))();
}

uint64_t sub_1000D6064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = a2 + (v2 - 1);
  long long v8 = *(_OWORD *)(v7 - 31);
  uint64_t v9 = a1 + (v2 - 1);
  *(_OWORD *)(v9 - 15) = *(_OWORD *)(v7 - 15);
  *(_OWORD *)(v9 - 31) = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 & 0xFFFFFFE0) == 32) * ((251 * (v3 ^ (v6 - 7))) ^ 0x2B8)) ^ (v5 + v3 - 1728))))();
}

void sub_1000D60C8()
{
}

uint64_t sub_1000D60D4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 375861489) & 0x16672FFB) - 760) * (v0 != 0)) | v1)))();
}

uint64_t sub_1000D610C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = v2 > 7 && (unint64_t)(a1 - a2) > 0x1F;
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v3 + 503442954) | 0x61300802) + ((v3 + 316) ^ (v5 - 877))) * v7) ^ v3)))();
}

uint64_t sub_1000D615C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 > 0x1F) * (((v1 - 805) | 0x424) ^ 0x540)) ^ v1)))();
}

uint64_t sub_1000D6190@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((957
                                * (((((v3 + 1291863241) | 0x3231B007) - 82874673) & 0x85BE9E7F) - 1590 != (v2 & 0xFFFFFFE0))) ^ (v5 + ((v3 + 1291863241) | 0x3231B007) - 1811))))();
}

uint64_t sub_1000D620C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 == v1) ^ (v4 + v2)) & 1) * (v2 - 1576)) ^ v2)))();
}

uint64_t sub_1000D6238()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 576) | 0x120) ^ (v3 + 1584) ^ (v1 + 2142630713) & 0xFF7BFF77)
                                     * ((v0 & 0x18) == 0)) ^ (v1 - 543))))();
}

uint64_t sub_1000D6288@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v3 & 0xFFFFFFF8) == -8) * ((7 * (v4 ^ 0x55B)) ^ 0x8F)) ^ v4)))();
}

uint64_t sub_1000D62DC(uint64_t a1, uint64_t a2)
{
  void *v3 = *v4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * (((a2 == 0) * v5) ^ v2)))(a1, a2 + 8);
}

uint64_t sub_1000D6304()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 + 335607052) | 0x6B310100) ^ (v2 - 4719404) & 0x7F79F937 ^ 0x482) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000D6358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1482 * (v2 + 1 == v3)) ^ (v6 + v4 - 1598))))();
}

uint64_t sub_1000D638C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == v1) ^ (v4 + v2 + 1)) & 1) * ((v2 - 515) ^ 0x4E3)) ^ v2)))();
}

uint64_t sub_1000D63C4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((407 * ((v0 & 0x18) == (((v1 + 588330028) | 0x5C20C001u) ^ 0x7F31F907))) ^ v1)))();
}

uint64_t sub_1000D6418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + ((((2 * (v4 ^ 0xF)) ^ 0x42E) - 879) ^ v2) + v3) = *(void *)(a2
                                                                                                 - 7
                                                                                                 + ((((2 * (v4 ^ 0xF)) ^ 0x42E) - 879) ^ v2)
                                                                                                 + v3);
  return (*(uint64_t (**)(void))(v5 + 8 * ((15 * ((v3 & 0xFFFFFFF8) - 8 != v2)) ^ v4 ^ 0xF)))();
}

void sub_1000D6470()
{
}

uint64_t sub_1000D6478()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (v1 == v0))))();
}

uint64_t sub_1000D6498()
{
  return v0();
}

uint64_t sub_1000D64A0()
{
  uint64_t v1 = *(void *)(v0 - 168);
  *(_DWORD *)(v1 - 0x50417EF54FC55D47) = (*(_DWORD *)(v0 - 112) ^ 0x76FDD9F0)
                                         - 1079005312
                                         + ((2 * *(_DWORD *)(v0 - 112)) & 0xEDFBB3E0);
  *(_DWORD *)(v1 - 0x50417EF54FC55D43) = 437737774;
  return sub_1000D664C();
}

uint64_t sub_1000D6510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 + v3 - 643) ^ (2 * (v6 != 0)))))();
}

uint64_t sub_1000D653C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 0x50417EF54FC55D4FLL) ^ (v0 ^ (v3 + 28))) & 1)
                                * ((v0 - 956) ^ 0x2F)) ^ v0)))();
}

uint64_t sub_1000D6588@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((a1 + 1244690586) | 0x35018005) - 2133981210)
                                * (*(void *)(v2 - 0x50417EF54FC55D4FLL) == 0)) ^ a1)))();
}

uint64_t sub_1000D65E4()
{
  *uint64_t v2 = 0;
  *(_DWORD *)(v4 - 0x50417EF54FC55D47) = 917342576;
  *(_DWORD *)(v4 - 0x50417EF54FC55D43) = 437737774;
  uint64_t v5 = (*(uint64_t (**)(void *))(v3 + 8 * (v0 + v1)))(v2);
  return sub_1000D664C(v5);
}

uint64_t sub_1000D664C()
{
  uint64_t v6 = (*(uint64_t (**)(void, void, void))(v2 + 8 * (v0 ^ (v4 - 2286))))(*(unsigned int *)*(&off_1002E1E10 + (v0 ^ (v4 + 18))), *(void *)(v5 - 128), *(unsigned int *)(v5 - 112));
  BOOL v7 = *(uint64_t (**)(uint64_t))(v2 + 8 * ((417 * (v3 == 0)) ^ (v0 - 2133980316)));
  *(void *)(v5 - 200) = v1;
  return v7(v6);
}

uint64_t sub_1000D66BC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v4 - 200) == 0x50417EF54FC55D4FLL) * ((v0 - v3 + 2195) ^ 0x97C)) ^ (v2 + v0 - 1993))))();
}

uint64_t sub_1000D670C()
{
  uint64_t v4 = *(void *)(v3 - 200);
  int v5 = *(_DWORD *)(v4 - 0x50417EF54FC55D47);
  LODWORD(v4) = *(_DWORD *)(v4 - 0x50417EF54FC55D43) + 68792889;
  BOOL v6 = v4 < 0x1E310B63;
  BOOL v7 = v4 > v5 - 410811917;
  if (v6 != v5 - 410811917 < ((v2 + v0 - 2195) ^ 0x6100F264u)) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((67 * (((v0 ^ (v2 - 1)) ^ v7) & 1)) ^ v0)))();
}

uint64_t sub_1000D67C4@<X0>(int a1@<W8>)
{
  BOOL v6 = (void *)(*(void *)(v5 - 200) - 0x50417EF54FC55D4FLL);
  int v7 = (*(unsigned __int8 *)(*v6 + (a1 - 437737774)) << 24) | (*(unsigned __int8 *)(*v6
                                                                                                + (a1 - 437737773)) << 16) | (*(unsigned __int8 *)(*v6 + (a1 - 437737772)) << 8);
  int v8 = *(unsigned __int8 *)(*v6 + (a1 - 437737771));
  _DWORD *v1 = a1 + 4;
  if (!(v7 | v8)) {
    return (*(uint64_t (**)(void))(v2 + 8 * ((53 * (*(void *)(v5 - 200) == 0x50417EF54FC55D4FLL)) ^ (v3 + v4 + 20))))();
  }
  if ((v7 | v8) == 0xFFFF4FFB) {
    return (*(uint64_t (**)(void))(v2
  }
                                + 8
                                * (((*((void *)*(&off_1002E1E10 + (v4 ^ (v4 + 10))) + 1) == 0)
                                  * ((v3 + v4 - 374) ^ 0x725)) ^ (v3 + v4 - 771))))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((111 * ((v4 - 7) ^ 0x7F31F907)) ^ 0x360)
                                * (*(void *)(v5 - 200) == 0x50417EF54FC55D4FLL)) ^ (v3 + 2133980234))))();
}

uint64_t sub_1000D6C3C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*v1 == 0) ^ (a1 ^ (v4 + 7))) & 1)
                                * (v3 + ((a1 + 907035900) | 0x4921B102) - 2232)) ^ a1)))();
}

void sub_1000D6C8C()
{
  (*(void (**)(void))(v4 + 8 * (v2 + v5)))();
  void *v1 = 0;
  _DWORD *v3 = 917342576;
  _DWORD *v0 = 437737774;
  (*(void (**)(void *))(v4 + 8 * (v2 + v5)))(v1);
  JUMPOUT(0x1000D6CD4);
}

uint64_t sub_1000D6CD8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + v1 - 1833) ^ (v0 == 0))))();
}

uint64_t sub_1000D6CF8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v1 - v4 + 1445046535) | 0x29105000) ^ 0xFFFFFED2) + v1 - v4 + 1631 - v3 + 608)
                                     * (*v0 == 0)) ^ (v1 - v4 + 1631))))();
}

void sub_1000D6D4C()
{
  *(void *)uint64_t v0 = 0;
  *(_DWORD *)(v0 + 8) = 1122647118;
  *(_DWORD *)(v0 + 12) = 0;
  JUMPOUT(0x1000D6D80);
}

void sub_1000D6D94()
{
  uint64_t v0 = (uint64_t *)*(&off_1002E1E10
                  + ((9 * ((dword_10031DC58 - dword_10031DC50) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 - dword_10031DC50) ^ 0x7D))] ^ 0x92])
                  - 198);
  unsigned __int8 v1 = 9 * (*v0 ^ dword_10031DC58 ^ 0x7D);
  uint64_t v2 = (uint64_t)*(&off_1002E1E10 + (byte_10026AE94[(byte_10026AA74[v1 - 4] ^ 0xC8) - 4] ^ v1) - 130);
  uint64_t v3 = *v0 - (void)&v8 + *(void *)(v2 - 4);
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  uint64_t *v0 = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v2) = 9 * ((v5 + *(_DWORD *)v0) ^ 0x7D);
  BOOL v6 = (char *)*(&off_1002E1E10
               + ((9 * (dword_10031DC50 ^ 0x7D ^ dword_10031DC58)) ^ byte_10026A760[byte_10026B1D0[(9 * (dword_10031DC50 ^ 0x7D ^ dword_10031DC58))] ^ 0xF2])
               - 58)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((29
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * (byte_10026A768[(byte_10026B1DC[v2 - 12] ^ 0xF2) - 8] ^ v2)
                                                                        + 17776])(24, 4101018099) != 0)) ^ 0x586)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000D6F74(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 378813108;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((46 * (v3 != 0)) ^ 0x3C8u)))();
}

uint64_t sub_1000D6FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(v13 - 244) = v12;
  *(void *)(v13 - 192) = v11;
  *(_DWORD *)(v13 - 224) = v8;
  *(_DWORD *)(v13 - 220) = v10;
  *(void *)(v13 - 208) = v9;
  *(_DWORD *)(v5 + 8) = v6 + 4096;
  mach_msg_header_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                       + 8
                                                                                       * ((43 * (((v5 == 0) ^ 0xE7) & 1)) ^ 0x4D2));
  *(void *)(v13 - 200) = 0x3972785B6BCAF92ALL;
  return v14(a1, a2, a3, a4, a5, 3793274687);
}

uint64_t sub_1000D7074()
{
  int v3 = v0 & 0xEBD;
  unsigned int v4 = ((v3 - 428) ^ 0x81BC0EF4) + *(_DWORD *)(v1 + 12);
  unsigned int v5 = *(_DWORD *)(v1 + 8) + 1797771605;
  BOOL v6 = v4 < (((v3 - 1164) | 0x2E0) ^ 0x81BC0EF0);
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0x81BC0C09) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((111 * v8) ^ v3)))(v1 + 8);
}

uint64_t sub_1000D7100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((((v16 == 0) ^ (a6 + v15 + 7)) & 1) * (v15 ^ 0x319)) ^ v15));
  *(void *)(v18 - 200) = 0x3972785B6BCAF92ALL;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a1);
}

uint64_t sub_1000D7160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v23 = (a20 << ((v20 ^ (a6 + 100)) + 101)) - 757626216;
  unsigned int v24 = ((2 * v23) & 0x2FAFF5F8) + (v23 ^ 0x97D7FAFC);
  if ((a20 + 26154070) < 0x18234F06 != v24 - 2142546934 < 0x18234F06) {
    BOOL v25 = v24 - 2142546934 < 0x18234F06;
  }
  else {
    BOOL v25 = v24 - 2142546934 > a20 + 26154070;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * (((2 * !v25) | (16 * !v25)) ^ (v22 + v20 - 2003))))();
}

uint64_t sub_1000D7214()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((v2 - 24) ^ 0xE218C73F) * (v0 == 0)) ^ 0x66B)))();
}

uint64_t sub_1000D7254@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * (int)(a1 ^ 0xE218CF80)))(v1);
  return v3;
}

void sub_1000DA8A8(unint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000DA914(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * v3) ^ 0x599u)))();
}

uint64_t sub_1000DA960(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 35853729;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((103 * (v3 != 0)) ^ 0x137)))();
}

uint64_t sub_1000DA9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  *(void *)(v35 - 152) = v34 + 0x1F534F2566915141;
  *(_DWORD *)(v34 + 8) = v31 + 4096;
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)(((((v34 == 0) ^ (v29 + 102)) & 1) * (((v29 - 316339610) ^ 0xED250A23) - 321)) ^ (v29 + 1540)));
  *(void *)(v35 - 168) = (char *)*(&off_1002E1E10 + v29 - 298) - 8;
  *(void *)(v35 - 200) = 0x2B2216E748EAFB5FLL;
  *(void *)(v35 - 144) = v34;
  return v36(a1, a2, a3, a4, a5, a6, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           v30,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v32);
}

uint64_t sub_1000DAA80()
{
  int v3 = v0 & 0x17FB;
  unsigned int v4 = *(_DWORD *)(v2 + 12) + 255685404;
  unsigned int v5 = *(_DWORD *)(v2 + 8) + 219831671;
  BOOL v6 = v4 < 0xF3D7318;
  BOOL v7 = v4 > v5;
  if (v6 != v5 < 0xF3D7318) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v8 * (((v3 - 647) | 0x629) ^ 0x70C)) ^ v3)))();
}

void sub_1000DAB04(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  *(void *)(v8 - 200) = 0x2B2216E748EAFB5FLL;
  uint64_t v9 = *v7;
  unsigned int v10 = ((a3 << (v4 ^ 0x3A)) & 0x4FFE7BFE) + (a3 ^ 0x27FF3DFF) - 671038975;
  *(unsigned char *)(*v7 + v10) = 0;
  *(unsigned char *)(v9 + v10 + 1) = 0;
  *(unsigned char *)(v9 + v10 + 2) = 0;
  *(unsigned char *)(v9 + v10 + 3) = 1;
  *v3 += 4;
  *(void *)(v8 - 160) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000DAE44()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v0 - 137) ^ 0x9A3 ^ (v0 + 1825921279) & 0x932A9FFF) * (v2 == 0)) ^ (v0 - 119))))();
}

uint64_t sub_1000DAE94()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) - 1129964345;
  unsigned int v4 = *(_DWORD *)(v2 + 8) - 1165818078;
  BOOL v5 = v3 < 0xBCA61CC3;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 + 522693193) & 0xE0D84DFF ^ 0xBCA61CBC)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((89 * v6) ^ v0)))();
}

uint64_t sub_1000DAF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((((v28 == 0) ^ (v25 - 119)) & 1) * ((v25 - 1975) ^ 0x9E)) ^ (v25 - 1975)));
  *(void *)(v29 - 160) = v27;
  return v30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000DAF80()
{
  int v3 = ((v1 ^ 0x329) - 334) | 0x130;
  unsigned int v4 = (v3 ^ 0x1425AD21) + v0;
  unsigned int v5 = ((v3 - 1536722772) & (2 * (2 * v0 - 71707458))) + ((2 * v0 - 71707458) ^ 0xD233BDF3);
  if (v4 < 0x1648C3B6 != v5 + 1142228419 < 0x1648C3B6) {
    BOOL v6 = v5 + 1142228419 < 0x1648C3B6;
  }
  else {
    BOOL v6 = v5 + 1142228419 > v4;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((110 * !v6) ^ v3)))();
}

uint64_t sub_1000DB038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = *(void *)(v29 - 152);
  int v31 = (v27 - 2030371456) & 0x790503BE;
  *(void *)(v29 - 152) = v30;
  uint64_t v32 = *(void *)(v30 - 0x1F534F2566915141);
  int v33 = ((2 * a9) & 0x57DFFDDE) + (a9 ^ 0x2BEFFEEF);
  *(unsigned char *)(v32 + v33 + (v31 ^ 0xD41000AF)) = 56;
  v33 -= 737148753;
  *(unsigned char *)(v32 + (v33 + 99)) = 91;
  *(unsigned char *)(v32 + (v33 + 100)) = 44;
  *(unsigned char *)(v32 + (v33 + 101)) = -24;
  *v26 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((a7 + a8 + (v31 ^ 0x5E9) - 1111 - 1238) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000DB220()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x440) + 931) ^ (39 * (v0 ^ 0x440))) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1000DB260()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 2103532965;
  unsigned int v4 = *(_DWORD *)(v2 + 8) + 2067679232;
  BOOL v5 = v3 < (v0 ^ 0x7D615E20u);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 - 373) | 0x42u) + 2103532371) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((1844 * v6) ^ v0)))();
}

uint64_t sub_1000DB2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  HIDWORD(a23) = v24;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((((v25 ^ 0x28) - 582) * (v27 != 0)) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1000DB324()
{
  int v3 = 3 * (v1 ^ 0x2AC);
  unsigned int v4 = v0 - 1615262585 + v3;
  unsigned int v5 = (((2 * v0 - 71707458) << ((v3 + 75) ^ 0xA8)) & 0xA776EB70) + ((2 * v0 - 71707458) ^ 0xD3BB75B9);
  if (v4 < 0xA1DC2482 != v5 - 836718903 < 0xA1DC2482) {
    BOOL v6 = v5 - 836718903 < 0xA1DC2482;
  }
  else {
    BOOL v6 = v5 - 836718903 > v4;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * !v6) ^ v3)))();
}

uint64_t sub_1000DB3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v29 = *(void *)(v28 - 152);
  int v30 = (v26 - 589) | 0x38A;
  *(void *)(v28 - 152) = v29;
  uint64_t v31 = *(void *)(v29 - 0x1F534F2566915141);
  unsigned int v32 = ((2 * a9) & 0x478E7FDE) + (a9 ^ 0x23C73FEF);
  unsigned int v33 = v32 + (v30 ^ 0xDC38C399);
  v32 -= 600260591;
  *(unsigned char *)(v31 + v32) = 0;
  *(unsigned char *)(v31 + v33) = 0;
  *(unsigned char *)(v31 + v32 + 2) = 0;
  *(unsigned char *)(v31 + v32 + 3) = 1;
  *v25 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (int)((((9 * (v30 ^ 0x33C)) ^ (a7 + 557)) + v30 - a7 + 1332) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000DB5D4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((((2 * v0) ^ 0xD60) - 312) | 0x618) ^ 0x684) * (v2 == 0)) ^ v0)))();
}

uint64_t sub_1000DB614()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 1658655541;
  unsigned int v4 = *(_DWORD *)(v2 + 8) + ((v0 + 190) ^ 0x60B9FAD0);
  BOOL v5 = v3 < ((v0 - 1534) | 0x10Au) + 1658655107;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x62DD132D) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((3611 * v6) ^ v0)))();
}

uint64_t sub_1000DB698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  LODWORD(a23) = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (((((2 * v24) ^ 0xF06) + ((v24 - 1704) | 0x509) - 1852) * (v26 == 0)) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000DB6E0()
{
  unsigned int v3 = v0 - 1610165446;
  BOOL v4 = (v0 - 1610165446) < 0xA229E8D3;
  unsigned int v5 = ((2 * (2 * v0 - 71707458)) & 0xB677EFD4) + ((2 * v0 - 71707458) ^ ((v1 ^ 0x29A) - 616828732));
  if (v4 != v5 - 957484824 < 0xA229E8D3) {
    BOOL v6 = v5 - 957484824 < 0xA229E8D3;
  }
  else {
    BOOL v6 = v5 - 957484824 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((527 * v6) ^ v1)))();
}

uint64_t sub_1000DB784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v35 = *(void *)(v34 - 152);
  uint64_t v36 = (v32 + 20);
  *(void *)(v34 - 152) = v35;
  uint64_t v37 = *(void *)(v35 - 0x1F534F2566915141);
  uint64_t v38 = ((2 * a9) & 0x1CAB9FBB6) + (a9 ^ 0x7BAFA3BFE55CFDDBLL);
  *(unsigned char *)(v37 + v38 + (v36 ^ 0x84505C401AA3039BLL)) = -1;
  uint64_t v39 = v37 - 0x7BAFA3BFE55CFDDALL + v38;
  *(_WORD *)uint64_t v39 = -1;
  *(_DWORD *)(v39 + 2) = -1;
  *(unsigned char *)(v39 + 6) = (a31 - ((2 * a31) & 0x58) + 44) ^ 0x2C;
  *v31 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * (int)((v36 - a7 + 1793) ^ (a8 + 46) ^ v36 ^ 0x571 ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1000DB9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(void *)(v10 - 128) = 0;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((a7 + ((v7 - 4851920) & 0xB47F2FBF) - 2216) * (v9 == 0)) ^ v7)))();
}

uint64_t sub_1000DBA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = v27 - 796;
  uint64_t v32 = (*(uint64_t (**)(void))(v28 + 8 * ((v27 - 796) ^ 0x892)))();
  (*(void (**)(uint64_t, uint64_t, void, void))(v28 + 8 * (v31 + 1846)))(v32, *(void *)(v29 + 8 * (v31 - 430)) - 3, **(void **)(v30 - 144), *(unsigned int *)(*(void *)(v30 - 144) + 12));
  uint64_t v33 = (*(uint64_t (**)(void, void))(v28 + 8 * (v31 + 1868)))(*(void *)(v30 - 168), 0);
  *(void *)(v30 - 192) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((v33 == 0) * (v31 + (v31 ^ 0x7F) + 33)) ^ v31)))(v33, v34, v35, v36, v37, v38, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000DBAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v30 = (*(uint64_t (**)(void, uint64_t, void))(v27 + 8 * (v26 + 1848)))(*(void *)(v28 - 168), a1, 0);
  int v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((v30 == 0) ^ v26));
  *(void *)(v28 - 192) = a1;
  return v31(v30, v32, v33, v34, v35, v36, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000DBB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v39 = v35 ^ 0x248;
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v39 + 1455)))(a1, *(void *)(v37 + 8 * (v39 - 869)) - 12);
  (*(void (**)(uint64_t))(v36 + 8 * (v39 + 1325)))(a1);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v39 ^ 0xAA8)))(a1, a35);
  uint64_t v40 = (*(uint64_t (**)(void))(v36 + 8 * (v39 ^ 0xA96)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)(((v40 != *(void *)(v37 + 8 * (v39 - 890))) * ((v39 - 1176667641) ^ 0xB9DD7D70 ^ (v39 - 1176667641) & 0x462282FC ^ 0x66)) ^ v39)))(v40, v41, v42, v43, v44, v45, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000DBBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unsigned int v33 = (a8 + v30 - 1321618659) & 0x9A9128FD;
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 8 * (v30 + 2075)))(a29, v31, v32 - 128);
  int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                                + 8
                                                                                                * (int)(((v34 == 0) * (v33 ^ 0x946)) ^ v30));
  *(void *)(v32 - 200) = 0x2B2216E748EAFB5FLL;
  return v35(v34, v36, v37, v38, v39, v40, 1271586048);
}

uint64_t sub_1000DBC8C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 54)))(24, 4101018099);
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8
                                                                                               * (((v3 != 0)
                                                                                                 * (((v0 - 2078269644) | 0x301503B6)
                                                                                                  + 1271583817)) ^ v0));
  *(void *)(v2 - 200) = 0x2B2216E748EAFB5FLL;
  return v4(v3, v5, v6, v7, v8, v9, 1271586048);
}

uint64_t sub_1000DBD20(uint64_t a1)
{
  *(void *)(v3 - 176) = a1 + 0x2B2216E748EAFB5FLL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 445517218;
  *(_DWORD *)(a1 + 12) = 661609844;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 54)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 != 0) * ((v1 - 1723) ^ 0x27F)) ^ (v1 - 2070))))();
}

uint64_t sub_1000DBDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)(v9 + 8) = v8 + 4096;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (((*(void *)(v10 - 128) > (unint64_t)(v8 - 445513122)) * ((5 * ((v6 | 0x21) ^ 0x22D)) ^ 0xB4C)) ^ (v6 | 0x21))))(a1, a2, a3, a4, a5, a6, 1271586048, 3023383487);
}

uint64_t sub_1000DBE0C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (((((v4 == 0) ^ ((v3 ^ 7) + 59) ^ 0x69) & 1)
                                                       * ((((v3 ^ 0x707) - 1211718341) & 0x48395B7F) - 2080)) ^ v3 ^ 0x707)))(a1, a2);
}

uint64_t sub_1000DBE6C@<X0>(int a1@<W8>)
{
  int v5 = v2 - 108;
  unsigned int v6 = v1 + v3 + a1;
  int v7 = ((2 * ((a1 << (v5 ^ 0x60)) - 891034436)) & 0x3D1E9BCC) + (((a1 << (v5 ^ 0x60)) - 891034436) ^ 0x1E8F4DE7);
  if (v6 > 0xA80F72B4 != (v7 + 962674532) < 0x57F08D4B) {
    BOOL v8 = (v7 + 962674532) < 0x57F08D4B;
  }
  else {
    BOOL v8 = v7 + 962674532 > (v5 ^ 0x57F08E2A) + v6;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((172 * !v8) ^ v5)))(1025416140, 4227776443, 962674532);
}

uint64_t sub_1000DBF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * (int)(((a29 == (void)*(&off_1002E1E10 + v30 - 117) - 8)
                                     * ((a8 + ((v30 + 376) | 0x191) - 1689) ^ (v30 - 1258295497) & 0xFF353BFF)) ^ v30)))();
}

uint64_t sub_1000DBFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 + 1435));
  *(void *)(v38 - 176) = v35;
  v39(a26, a35);
  uint64_t v40 = (*(uint64_t (**)(void))(v37 + 8 * (v36 ^ 0xA83)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v40 == *(void *)(v38 - 176)) * (v36 - 553 + ((v36 + 1399813486) & 0xAC9087FB) + 966)) ^ v36)))(v40, v41, v42, v43, v44, v45, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000DC030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v30 + 8 * (((a7 + ((v31 + 521) ^ (a8 - 753)) - 989) * (a29 == v29)) ^ v31)))();
}

uint64_t sub_1000DC078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v35 + 1467)))(a26, a35);
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * (v35 ^ 0xA63)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (((((v35 - 20) ^ (v38 == *(void *)(v37 - 176))) & 1) * ((v35 + 1550007276) ^ 0x5C633FBD)) ^ v35)))(v38, v39, v40, v41, v42, v43, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000DC0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)(((((a29 == v29) ^ (v31 + 52)) & 1)
                                     * (((v31 & 0xA39CC0FF) - 42599518) & 0xB6BF2FBF ^ (a8 - 85))) ^ v31 & 0xA39CC0FF)))();
}

uint64_t sub_1000DC168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t, uint64_t))(v36 + 8 * (v35 + 1435)))(a26, a35);
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * (v35 + 1409)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)(((v38 == *(void *)(v37 - 176)) * (((v35 + 1187161198) & 0xB93D58FB) + (v35 ^ 0x7D))) ^ v35)))(v38, v39, v40, v41, v42, v43, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000DC1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (int)((((((v29 ^ 0x319) + 248) | 0x211) ^ (a8 + 659) ^ ((v29 ^ 0x319) - 33706121) & 0xB6377BBF)
                                     * (a29 == v30)) ^ v29 ^ 0x319)))();
}

uint64_t sub_1000DC250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v38 = v35;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8 * (v36 ^ 0xABD)))(a26, a35);
  uint64_t v39 = (*(uint64_t (**)(void))(v37 + 8 * (v36 ^ 0xA83)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)(((v39 == v38) * ((v36 ^ 0x36A) + 1271586048 + ((v36 - 1119912850) & 0xF6F5ABBF) - 1392)) ^ v36)))(v39, v40, v41, v42, v43, v44, 1271586048, 3023383487, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1000DC2F8()
{
  uint64_t v4 = *(uint64_t (**)(void))(v1 + 8 * (int)((((v0 ^ 0xB43529A5) + 1271584009) * (v2 == 0)) ^ v0 ^ 0x25A));
  *(void *)(v3 - 200) = 0x2B2216E748EAFB5FLL;
  return v4();
}

uint64_t sub_1000DC358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  (*(void (**)(uint64_t))(v36 + 8 * (v37 ^ (a8 - 2239))))(v38);
  *(void *)(v39 - 200) = 0x2B2216E748EAFB5FLL;
  (*(void (**)(uint64_t))(v36 + 8 * (int)(v37 ^ 0xB43522BA)))(v35);
  (*(void (**)(uint64_t))(v36 + 8 * (v37 & 0x4240C905)))(a26);
  return (*(uint64_t (**)(void))(v36 + 8 * ((4033 * (a35 != 0)) ^ (v37 + 1271585819))))();
}

uint64_t sub_1000DC730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v34 = (*(uint64_t (**)(void))(v32 + 8 * v30))();
  uint64_t v35 = *(uint64_t (**)(uint64_t))(v32 + 8 * ((v29 - 1233) ^ (1982 * (a29 != 0))));
  *(void *)(v33 - 192) = v31;
  return v35(v34);
}

uint64_t sub_1000DC788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v34 & 0x88905)))(a29);
  *(void *)(v35 - 192) = v30;
  if (v32 == -45004)
  {
    *(void *)(v35 - 176) = v29;
    *(void *)(v35 - 120) = 0;
    *(_DWORD *)(v35 - 132) = 0;
    uint64_t v42 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v31 + 18736))(**(unsigned int **)(v33 + 64), **(void **)(v35 - 144), *(unsigned int *)(*(void *)(v35 - 144) + 12), v35 - 120, v35 - 132);
    int v43 = (v42 ^ 0x5B5FEEA9) - 285344800 + ((2 * v42) & 0xB6BFDD52) != 1516104332;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((v43 | (v43 << 6)) ^ 0x419)))(v42, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26);
  }
  else if (v32)
  {
    return sub_1000DDAD0(v36, v37, v38, v39, v40, v41, 1271586048, 191);
  }
  else
  {
    return (*(uint64_t (**)(uint64_t))(v31
                                              + 8 * ((63 * (*(void *)(v35 - 200) == 0x2B2216E748EAFB5FLL)) ^ 0x29D)))(v36);
  }
}

uint64_t sub_1000DCEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = ((((v3 + 483) ^ 0x749) - 810) ^ 0x76B21497) + *(_DWORD *)(a3 - 0x2B2216E748EAFB53);
  unsigned int v6 = *(_DWORD *)(a3 - 0x2B2216E748EAFB57) - 2087492361;
  BOOL v7 = v5 < 0x9E217299;
  BOOL v8 = v5 > v6;
  if (v6 < 0x9E217299 != v7) {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((87 * !v8) ^ (v3 + 483))))();
}

uint64_t sub_1000DCF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 - 0x2B2216E748EAFB5FLL);
  int v8 = (*(unsigned __int8 *)(v7 + ((((v5 + 1353215190) & 0xAF578FFF) - 661607984) ^ (v5 + 790672959) & 0xD0DF4DDA) + v4) << 24) | (*(unsigned __int8 *)(v7 + (v4 - 661609843)) << 16) | (*(unsigned __int8 *)(v7 + (v4 - 661609842)) << 8) | *(unsigned __int8 *)(v7 + (v4 - 661609841));
  _DWORD *v3 = v4 + 4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3178 * (v8 == 0)) ^ v5)))();
}

uint64_t sub_1000DD04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((86 * (v3 ^ 0x90C)) ^ 0x4A5) * (a3 != 0x2B2216E748EAFB5FLL)) | v3)))();
}

uint64_t sub_1000DD09C(int a1)
{
  unsigned int v4 = ((((a1 + 1570025802) & 0xA26B4BBF) + 810) ^ 0x686C2B9) + v2;
  int v5 = ((v1 - 106596729) < 0x2114D3F3) ^ (v4 < 0x2114D3F3);
  BOOL v6 = v1 - 106596729 > v4;
  if (v5) {
    BOOL v6 = (v1 - 106596729) < 0x2114D3F3;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((92 * v6) ^ a1)))();
}

uint64_t sub_1000DD11C@<X0>(uint64_t a1@<X2>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int *a15)
{
  int v21 = (*(unsigned __int8 *)(v17 + (v18 + v16 + 3)) << (v19 + 48)) | (*(unsigned __int8 *)(v17 + (v18 + v16 + 4)) << 16) | (*(unsigned __int8 *)(v17 + (v18 + v16 + 5)) << 8) | *(unsigned __int8 *)(v17 + (v18 + v16 + 6));
  *int v15 = v16 + 8;
  *a15 = v21;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (int)(((a2 + v19 - 591 + ((v19 - 188926185) & 0xBF77EFBF) - 2786) * (a1 != a3)) ^ (v19 - 810))))();
}

uint64_t sub_1000DD1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v11 = *(void *)(*(void *)(v10 - 200) - 0x2B2216E748EAFB5FLL) == 0;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v11 ^ (a8 + v8 + 103)) & 1 | (32
                                                                                * ((v11 ^ (a8 + v8 + 103)) & 1))) ^ v8)))();
}

uint64_t sub_1000DD1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  (*(void (**)(void))(v11 + 8 * (v10 ^ (a8 - 2239))))();
  void *v9 = 0;
  *(_DWORD *)(v8 - 0x2B2216E748EAFB57) = 445517218;
  *(_DWORD *)(v8 - 0x2B2216E748EAFB53) = 661609844;
  uint64_t v12 = (*(uint64_t (**)(void *))(v11 + 8 * (v10 + 1271586048)))(v9);
  return sub_1000DDAD0(v12, v13, v14, v15, v16, v17, 1271586048, 191);
}

uint64_t sub_1000DD27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,int a28,int a29)
{
  unsigned int v33 = (a8 - 1337304249) & 0x9B807CF9;
  uint64_t v34 = (*(uint64_t (**)(void))(v30 + 8 * (a8 ^ (a8 - 2239))))(*(void *)(v29 - 0x2B2216E748EAFB5FLL));
  *(void *)(v29 - 0x2B2216E748EAFB5FLL) = a22;
  *a27 = a29;
  *(void *)(v32 - 160) = v31;
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * (int)(((v33 ^ 0x5C0) - 342) | v33)))(v34);
}

void sub_1000DD314()
{
  *(void *)(v1 - 184) = v0;
  JUMPOUT(0x1000DD340);
}

uint64_t sub_1000DD3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v9 - 159553200) ^ 0xF67D6DC8 ^ (a8 - 449) ^ (v9 - 159553200) & 0xBDB7BBBF)
                                     * (v8 != 0)) ^ v9)))();
}

uint64_t sub_1000DD3F8@<X0>(uint64_t a1@<X0>, int a2@<W7>, uint64_t a3@<X8>)
{
  BOOL v7 = v3 < 8 || a1 - a3 < ((v4 - 2023158380) & 0x7896F5B7 ^ 0x5A3uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((v7 * ((v4 - 1133041272) & 0xF7BDFFFF ^ (a2 + 38))) ^ v4)))();
}

uint64_t sub_1000DD45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + a8 + (v9 ^ 0x2E2) - 1889 - 2202) * (v8 > 0x1F)) ^ v9)))();
}

uint64_t sub_1000DD494@<X0>(_OWORD *a1@<X0>, int a2@<W6>, int a3@<W7>, _OWORD *a4@<X8>)
{
  long long v7 = a4[1];
  *a1 = *a4;
  a1[1] = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((37 * (((v5 - a3 + 910) ^ 0x3AELL) == (v4 & 0xFFFFFFE0))) ^ (a2 + v5 - 618))))();
}

uint64_t sub_1000DD4EC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 == 0) ^ (5 * (v1 ^ 0xEE))) & 1) * (v1 - 1908)) ^ v1)))();
}

uint64_t sub_1000DD520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v11 = v8 < ((((v9 - 2147212921) | 0x34310817) - a8 + 1057) ^ 0x429u);
  return (*(uint64_t (**)(void))(v10 + 8 * ((v11 | (4 * v11)) ^ v9)))();
}

uint64_t sub_1000DD568()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (v1 >= ((v0 + 178) ^ 0x4F3uLL))) | v0)))();
}

uint64_t sub_1000DD5A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 >= a7 + ((v8 - 1128928468) & 0xF77F3BBF) - 2207) * (v8 ^ 0x4D5)) ^ v8)))();
}

uint64_t sub_1000DD5F0@<X0>(uint64_t a1@<X0>, int a2@<W6>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v7 = (v4 - 1);
  long long v8 = *(_OWORD *)(a4 + v7 - 15);
  long long v9 = *(_OWORD *)(a4 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((633 * (2 * (v5 ^ (a3 - 299)) - 566 == (v4 & 0xFFFFFFE0))) ^ (a2 + v5 - 1147))))();
}

uint64_t sub_1000DD658()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x60D) - 1381) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000DD680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (int)((((v9 - 151669188) & 0xBD3F6FFF ^ (a8 - 950)) * ((v8 & 0x18) == 0)) ^ v9)))();
}

uint64_t sub_1000DD6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3867 * (((27 * (v4 ^ 0x776u)) ^ 0x265) + v2 == (v3 & 0xFFFFFFF8))) ^ v4)))();
}

uint64_t sub_1000DD710()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 386) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000DD738@<X0>(uint64_t a1@<X0>, int a2@<W6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + v3) = *(unsigned char *)(a3 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((29 * (v3 + 1 != v4)) | (a2 + v5 - 1695))))();
}

uint64_t sub_1000DD76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((((v10 - a7 + 1641) ^ (a8 + 941) ^ 0x4D9) * (v8 == v9)) ^ v10)))();
}

uint64_t sub_1000DD7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * ((711 * ((v8 & 0x18) == ((a8 + v9 + 1295515245) & 0xFE92D59E) - 1182)) ^ v9)))();
}

uint64_t sub_1000DD7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (v2 ^ 0xFFFFFDDB ^ ((v4 - 638) | 4)) + v3) = *(void *)(a2
                                                                                            - 7
                                                                                            + (v2 ^ 0xFFFFFDDB ^ ((v4 - 638) | 4))
                                                                                            + v3);
  return (*(uint64_t (**)(void))(v5 + 8 * ((726 * ((v3 & 0xFFFFFFF8) - 8 == v2)) ^ v4)))();
}

void sub_1000DD840()
{
}

uint64_t sub_1000DD848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 ^ (a8 - 548) ^ (v10 - a7 + 2022)) * (v9 == v8)) ^ v10)))();
}

uint64_t sub_1000DD87C()
{
  return v0();
}

uint64_t sub_1000DD884()
{
  uint64_t v2 = *(void *)(v1 - 184);
  *(_DWORD *)(v2 - 0x2B2216E748EAFB57) = (*(_DWORD *)(v1 - 132) ^ 0x7AAF7FB3)
                                         - 1612804625
                                         + ((2 * *(_DWORD *)(v1 - 132)) & 0xF55EFF66);
  *(_DWORD *)(v2 - 0x2B2216E748EAFB53) = 661609844;
  uint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void, void, void))(v0 + 18672))(mach_task_self_, *(void *)(v1 - 120), *(unsigned int *)(v1 - 132));
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 7448);
  *(void *)(v1 - 200) = v3;
  return v5(v4);
}

uint64_t sub_1000DD8F4@<X0>(uint64_t a1@<X0>, int a2@<W6>, uint64_t a3@<X8>)
{
  unsigned int v6 = v3 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a3 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((225 * (v6 == 0)) ^ (a2 + v4 - 423))))();
}

uint64_t sub_1000DD928()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 != 0x2B2216E748EAFB5FLL) | v0)))();
}

uint64_t sub_1000DD964@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((a1 | 0xC9) - 1124648714) & 0xF73DEFFF) - 21) ^ (a1 | 0xC9) ^ 0xB4352976)
                                     * (*(void *)(v1 - 0x2B2216E748EAFB5FLL) == 0)) ^ (a1 | 0xC9))))();
}

void sub_1000DD9D0(int a1@<W8>)
{
  *uint64_t v2 = 0;
  *(_DWORD *)(v3 - 0x2B2216E748EAFB57) = 445517218;
  *(_DWORD *)(v3 - 0x2B2216E748EAFB53) = 661609844;
  (*(void (**)(void *))(v4 + 8 * (a1 ^ (v1 - 2239))))(v2);
  JUMPOUT(0x1000DDA50);
}

uint64_t sub_1000DDAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((a7 + v8 - 1976) | (32 * (((v10 == 0) ^ (3 * (v8 ^ (a8 - 65)))) & 1)))))();
}

uint64_t sub_1000DDB04@<X0>(int a1@<W6>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((*v3 != 0) * (a1 + ((a2 + 607126217) | 0x900523B3) - 2187)) | a2)))();
}

void sub_1000DDB44()
{
  (*(void (**)(void))(v1 + 8 * (v0 & 0x200CCFF)))();
  *(void *)uint64_t v2 = 0;
  *(_DWORD *)(v2 + 8) = 35853729;
  *(_DWORD *)(v2 + 12) = 0;
  JUMPOUT(0x1000DDB78);
}

void sub_1000DDBC8()
{
  uint64_t v0 = (uint64_t)*(&off_1002E1E10
                + ((9 * ((dword_10031DC58 + dword_10031DC78) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 + dword_10031DC78) ^ 0x7D))] ^ 0x1A])
                - 159);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AE94[(byte_10026AA74[(9 * ((dword_10031DC58 + v1) ^ 0x7D))
                                                                 - 4] ^ 0xC8)
                                                 - 4] ^ (9 * ((dword_10031DC58 + v1) ^ 0x7D)))
                - 130);
  unint64_t v3 = 1787074057 * ((*(void *)(v2 - 4) - v1 - (void)&v6) ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v3;
  *(void *)(v2 - 4) = v3;
  LOBYTE(v2) = 9 * ((v3 + *(_DWORD *)(v0 - 4)) ^ 0x7D);
  uint64_t v4 = (char *)*(&off_1002E1E10
               + ((9 * ((dword_10031DC58 + dword_10031DC78) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 + dword_10031DC78) ^ 0x7D))] ^ 0x92])
               - 183)
     - 4;
  uint64_t v5 = *(void *)&v4[8
                    * ((8
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v4[8
                                                                        * (byte_10026AD90[byte_10026A978[v2 - 8] ^ 0xF5] ^ v2)
                                                                        + 16592])(24, 4101018099) != 0)) | 0x740)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000DDD7C(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 1640180093;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * (v3 == 0)) | (8 * (v3 == 0))) ^ 0x6C2u)))();
}

uint64_t sub_1000DDDD0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((15 * (((v0 == 0) ^ 0xED) & 1)) ^ 0x486u)))();
}

uint64_t sub_1000DDE08@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * ((a1 & 0x36DFEF7) - 57533478)))(v1);
  return v2;
}

int *sub_1000E1624(int *result)
{
  int v1 = 1607344658;
  unsigned int v2 = result[2] ^ (2052531167
                  * (((result | 0x5A1B0962) - result + (result & 0xA5E4F69D)) ^ 0x9F91BE4E));
  if (v2 - 1830816770 > 0x39
    || ((1 << ((*((unsigned char *)result + 8) ^ (-33
                                                           * (((result | 0x62)
                                                             - (_BYTE)result
                                                             + (result & 0x9D)) ^ 0x4E)))
               - 2)) & 0x3C8E3C03CE503CFLL) == 0)
  {
    unsigned int v4 = v2 - 1830818786;
    BOOL v5 = v4 > 0xD;
    int v6 = (1 << v4) & 0x203F;
    if (v5 || v6 == 0) {
      int v1 = 1607344657;
    }
  }
  *uint64_t result = v1;
  return result;
}

void sub_1000E16D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a4) {
    BOOL v7 = a5 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000E1788(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, void *a6, _DWORD *a7)
{
  *a4 = 0;
  *a5 = 0;
  *a6 = 0;
  *a7 = 0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((50 * (qword_10031EEA0 == 0)) ^ 0x45Au)))();
}

uint64_t sub_1000E17E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * (*(void *)(v3 + 24) == 0)) | (8 * (*(void *)(v3 + 24) == 0))) ^ (v0 + v1 - 986))))();
}

uint64_t sub_1000E1814()
{
  (*(void (**)(void))(v2 + 8 * (v1 + v0)))();
  *(void *)(v3 + 24) = 0;
  *(_DWORD *)(v3 + 36) = 0;
  *(void *)uint64_t v3 = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4 * (*(void *)(v3 + 48) != 0)) | (16 * (*(void *)(v3 + 48) != 0)) | (v0 + v1 - 733))))();
}

uint64_t sub_1000E185C()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ (v1 - 2221))))();
  *(void *)(v3 + 48) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((63 * (*(void *)(v3 + 64) == 0)) ^ (v0 + v1 - 1451))))();
}

uint64_t sub_1000E18A0()
{
  *(_DWORD *)(v3 + 76) = 0;
  *(void *)(v3 + 40) = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v0 + v1 + 76)))(24, 4101018099);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * (((v4 == 0) * ((v1 ^ (v1 + 12)) - 980)) | (v0 + v1 - 1126))))(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000E19B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 120617518;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * (v9 + 1303)))(4096, 1358311088);
  *(void *)a1 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)(((v12 == 0) * ((2 * v9) ^ 0x186 ^ (v9 + 492302575) & 0xE2A80FBE ^ 0x2C5)) ^ v9)))(v12, v13, v14, v15, v16, v17, v18, v19, a9);
}

uint64_t sub_1000E1A44()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + v0 - 1261) ^ (v0 - v4 + 1053)) * (v3 == 0)) | v0)))();
}

uint64_t sub_1000E1A78@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v2 + 8 * ((a1 - 1186) ^ (v1 - 2221))))(v3);
  return v4;
}

void sub_1000E57CC()
{
  uint64_t v0 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AD90[byte_10026A978[(9
                                                                                                * ((dword_10031DC58
                                                                                                  + dword_10031DC70) ^ 0x7D))
                                                                              - 8] ^ 0x6E] ^ (9
                                                                                            * ((dword_10031DC58
                                                                                              + dword_10031DC70) ^ 0x7D)))
                + 15);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AC90[byte_10026A870[(9 * (v1 ^ dword_10031DC58 ^ 0x7D))] ^ 0x19] ^ (9 * (v1 ^ dword_10031DC58 ^ 0x7D)))
                - 39);
  uint64_t v3 = *(void *)(v2 - 4) - v1 - (void)&v8;
  unint64_t v4 = (1787074057 * v3) ^ 0xEDEBC87B5EDF1A7DLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  uint64_t v6 = (char *)*(&off_1002E1E10
               + ((9 * ((dword_10031DC58 + dword_10031DC70) ^ 0x7D)) ^ byte_10026AF90[byte_10026AB70[(9 * ((dword_10031DC58 + dword_10031DC70) ^ 0x7D))] ^ 0x81])
               - 132)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((1009
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * ((9
                                                                                           * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D)) ^ byte_10026AC90[byte_10026A870[(9 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D))] ^ 0xB5])
                                                                        + 17320])(24, 4101018099) != 0)) ^ 0x5F2)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000E5994(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 933984072;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((40 * (v3 == 0)) ^ 0x480u)))();
}

uint64_t sub_1000E5A0C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 - v2 - 509) ^ v1 ^ (v3 + 1040) ^ 0xA3) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_1000E5A48@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * (a1 - 937701277)))(v1);
  return v2;
}

void sub_1000E8A6C(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000E8AA8@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

void sub_1000E8AC0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000E8B2C(void *a1, _DWORD *a2)
{
  *a1 = 0;
  *a2 = 0;
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((4085 * v3) ^ 0x7E7u)))();
}

uint64_t sub_1000E8B7C(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 1411182149;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2 * (((v3 == 0) ^ 0xF7) & 1)) ^ 0x40Du)))();
}

uint64_t sub_1000E8BE8(uint64_t a1, uint64_t a2)
{
  *(void *)(v7 - 152) = v5;
  *(void *)(v7 - 232) = v6 + 0x3797084C688F39EALL;
  *(_DWORD *)(v6 + 8) = v3 + 4096;
  char v8 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(v4
                                                                           + 8
                                                                           * ((((179 * (v2 & 0x46B7 ^ 0x6A5)) ^ 0x173)
                                                                             * (v6 == 0)) ^ v2 & 0x46B7u));
  int v9 = (char *)*(&off_1002E1E10 + (v2 & 0x46B7 ^ 0x6AAu)) - 8;
  *(void *)(v7 - 224) = v9;
  *(void *)(v7 - 216) = v6;
  *(void *)(v7 - 208) = v9;
  return v8(a1, a2, 0, 0x3935222BFCD46514, 0);
}

uint64_t sub_1000E8C94()
{
  unsigned int v3 = *(_DWORD *)(v2 + 12) + 1775094903;
  unsigned int v4 = (v0 ^ 0x1C8) + 363912576 + *(_DWORD *)(v2 + 8);
  BOOL v5 = v3 < 0x69CDCC73;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x69CDCC73) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((v7 * ((((v0 ^ 0x1C8) - 792126199) & 0x136E65C) + 765)) ^ v0 ^ 0x1C8u)))(v2 + 8);
}

uint64_t sub_1000E8D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (2 * (v4 ^ 0x4A7)) ^ 0x16D;
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(v5 + 8 * ((v8 * (v6 == 0)) | v4));
  *(void *)(v7 - 208) = v8;
  return v9(a1, a2, 0, a4, 0);
}

uint64_t sub_1000E8D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29)
{
  unsigned int v31 = ((2 * (2 * a29 + 1472602998)) & 0xE9FFDCF8) + ((2 * a29 + 1472602998) ^ 0x74FFEE7D);
  if ((a29 + 296586160) < 0x65CA79F1 != v31 - 255161484 < (((v29 ^ 0x9A) - 460) ^ 0x65CA7B33u)) {
    BOOL v32 = v31 - 255161484 < (((v29 ^ 0x9A) - 460) ^ 0x65CA7B33u);
  }
  else {
    BOOL v32 = v31 - 255161484 > a29 + 296586160;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((348 * v32) ^ v29 ^ 0x9Au)))();
}

uint64_t sub_1000E8E1C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((((v0 | 0x262) - 771456489) | 0x20284704) - 2) ^ (((v0 | 0x262) + 51350) | 0xF22C0085))
                                     * (v2 == 0)) ^ (v0 | 0x262))))();
}

uint64_t sub_1000E8E74@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v1 + 8 * (int)(a1 ^ 0xF22CC72A)))(v3);
  return v2;
}

void sub_1000EC498(uint64_t a1, int a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000EC4E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((233 * (((*(void *)(v0 + 16) == 0) ^ 0x91) & 1)) ^ 0x27D)))();
}

uint64_t sub_1000EC52C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 + 234) ^ 0x1EE ^ (14 * (v0 ^ 0x99))) * (*(void *)(v1 + 32 * v3 + 24) == 0)) ^ v0)))();
}

uint64_t sub_1000EC570@<X0>(int a1@<W8>)
{
  unsigned int v4 = (a1 + 2125858659) & 0x8149F97E;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 | 0x825)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((((((v4 + 196) | 0x3D) ^ 0xFFFFFFE4) + v4 + 481) * (v2 + 1 == v3)) ^ v4)))(v5);
}

uint64_t sub_1000EC5D8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((727 * (v0 == 0)) ^ 0x18A)))();
}

uint64_t sub_1000EC610@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((233 * (((*(void *)(v1 + 32 * v3 + 16) == 0) ^ (a1 + 20)) & 1)) ^ a1)))();
}

uint64_t sub_1000EC64C@<X0>(int a1@<W8>)
{
  int v4 = 73 * (a1 ^ 0x27F);
  (*(void (**)(void))(v2 + 8 * (a1 + 1602)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v4 + 234) ^ 0x1EE ^ (14 * (v4 ^ 0x99))) * (*(void *)(v1 + 32 * v3 + 24) == 0)) ^ v4)))();
}

uint64_t sub_1000EC6B0()
{
  return (*(uint64_t (**)(void))(v1 + 8
                                   * (int)((((((v0 + 196) | 0x3D) ^ 0xFFFFFFE4) + v0 + 481) * (v2 + 1 == v3)) ^ v0)))();
}

uint64_t sub_1000EC6EC()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 1378)))(v1);
  return 0;
}

uint64_t sub_1000EC718()
{
  uint64_t v0 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AD90[byte_10026A878[(9
                                                                                  * (dword_10031DC60 ^ 0x7D ^ dword_10031DC58))
                                                                + 248] ^ 0xF5] ^ (9
                                                                                * (dword_10031DC60 ^ 0x7D ^ dword_10031DC58)))
                - 238);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AF94[(byte_10026AB70[(9 * ((dword_10031DC58 - v1) ^ 0x7D))] ^ 0x60)
                                                 - 4] ^ (9 * ((dword_10031DC58 - v1) ^ 0x7D)))
                - 113);
  unint64_t v3 = v1 ^ (unint64_t)&v13 ^ *(void *)(v2 - 4);
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v4) = *(_DWORD *)(v0 - 4);
  uint64_t v6 = (char *)*(&off_1002E1E10
               + ((9 * (dword_10031DC60 ^ 0x7D ^ dword_10031DC58)) ^ byte_10026A660[byte_10026B0D0[(9 * (dword_10031DC60 ^ 0x7D ^ dword_10031DC58))] ^ 0x92])
               - 183)
     - 4;
  (*(void (**)(void))&v6[8
                                    * ((9 * ((v5 - v4) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((v5 - v4) ^ 0x7D))] ^ 0x84])
                                    + 18800])(*(unsigned int *)*(&off_1002E1E10
                                                               + (byte_10026A660[byte_10026B0D0[(9 * ((v5 + v4) ^ 0x7D))] ^ 0x8A] ^ (9 * ((v5 + v4) ^ 0x7D)))
                                                               - 29));
  char v7 = *(_DWORD *)(v0 - 4);
  char v8 = *(_DWORD *)(v2 - 4);
  (*(void (**)(void))&v6[8
                                    * (byte_10026AE94[(byte_10026AA74[(9 * ((v8 + v7) ^ 0x7D))
                                                                                     - 4] ^ 0x5E)
                                                                     - 4] ^ (9 * ((v8 + v7) ^ 0x7D)))
                                    + 18208])(*(unsigned int *)*(&off_1002E1E10
                                                               + (byte_10026AC98[(byte_10026A878[(9 * (v7 ^ 0x7D ^ v8)) - 8] ^ 0xD)
                                                                                                - 8] ^ (9 * (v7 ^ 0x7D ^ v8)))
                                                               - 101));
  unsigned __int8 v9 = 9 * (*(_DWORD *)(v0 - 4) ^ 0x7D ^ *(_DWORD *)(v2 - 4));
  uint64_t v10 = *(unsigned int *)*(&off_1002E1E10 + (v9 ^ byte_10026AD90[byte_10026A878[v9 + 248] ^ 0x78])
                                          - 173);
  uint64_t v11 = *(uint64_t (**)(uint64_t))&v6[8
                                             * (byte_10026A768[(byte_10026B1DC[v9 - 12] ^ 0xC0) - 8] ^ v9)
                                             + 18344];

  return v11(v10);
}

void sub_1000EC9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a4) {
    BOOL v6 = a5 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v8 = !v6 && a6 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000ECA58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5)
{
  *a4 = 0;
  *a5 = 0;
  BOOL v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 18520))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((115 * v6) ^ 0x333u)))();
}

uint64_t sub_1000ECAB8(uint64_t a1)
{
  *(void *)(v5 - 216) = v3;
  *(void *)(v5 - 168) = v2;
  *(_DWORD *)(v5 - 184) = v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 650052673;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 18520))(4096, 1358311088);
  *(void *)a1 = v7;
  return (*(uint64_t (**)(void))(v4 + 8 * ((255 * (v7 != 0)) ^ 0x66A)))();
}

uint64_t sub_1000ECB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v26 - 224) = v25;
  *(void *)(v26 - 176) = 0;
  *(_DWORD *)(v26 - 180) = 0;
  *(void *)(v26 - 136) = v21 + 0x5B68E37D168561B2;
  *(_DWORD *)(v21 + 8) = v24 + 4096;
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * (((((v22 - 648) | 0x142) - 83) * (v21 == 0)) ^ (v22 + 1271)));
  uint64_t v28 = (uint64_t)*(&off_1002E1E10 + ((v22 + 1271) ^ 0x769u));
  *(void *)(v26 - 200) = (char *)*(&off_1002E1E10 + ((v22 + 1271) ^ 0x772u)) - 8;
  *(void *)(v26 - 192) = v28;
  *(void *)(v26 - 152) = 0x7D34AE117A9B271ALL;
  return v27(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1000ECBD8()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 2057538897;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + ((v0 + 793321141) & 0xD0B6E37E) + (((v0 + 1855) | 0x42) ^ 0x53E48D55);
  BOOL v5 = v3 < 0x7AA38D4D;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x7AA38D4D) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1595 * v7) ^ v0)))(v1 + 8);
}

uint64_t sub_1000ECC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(void *)(v21 - 176) = 0;
  *(_DWORD *)(v21 - 180) = 0;
  int v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)((((v18 + 1606807577) ^ 0x56000807 ^ (v18 + 1606807577) & 0xA9FFF7FF) * (v19 == 0)) ^ v18));
  *(void *)(v21 - 152) = 0x7D34AE117A9B271ALL;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a1);
}

uint64_t sub_1000ECCE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  unsigned int v29 = ((2 * (2 * a27 - 1300105346)) & 0x7FFE9AD4) + ((2 * a27 - 1300105346) ^ 0xBFFF4D6B);
  if ((a27 + 1884709690) < 0x97156777 != v29 - 686417396 < ((v27 - 163965510) | 0x48u) - 1760206695) {
    BOOL v30 = v29 - 686417396 < ((v27 - 163965510) | 0x48u) - 1760206695;
  }
  else {
    BOOL v30 = v29 - 686417396 > a27 + 1884709690;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((219 * v30) ^ (v27 - 163965034))))();
}

uint64_t sub_1000ECDB0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((69 * ((((v1 + 138464844) ^ v1 ^ (v2 + 376) ^ (v0 == 0)) & 1) == 0)) | v1)))();
}

uint64_t sub_1000ECDF4@<X0>(int a1@<W8>)
{
  (*(void (**)(uint64_t))(v3 + 8 * (a1 ^ (v2 + 1927))))(v1);
  return v4;
}

uint64_t sub_1000F098C(uint64_t a1)
{
  if (unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)))
  {
    uint64_t v1 = (uint64_t)*(&off_1002DD420
                  + ((16
                    * ((*(void *(__cdecl **)(size_t, malloc_type_id_t))((char *)&off_1002DD420
                                                                      + &loc_100004854
                                                                      + 4))(0x18uLL, 0xF47091F3uLL) != 0)) | 0x568EF585u)- 1452207770);
    __asm { BRAA            X8, X17 }
  }
  return 4294922295;
}

void sub_1000F0E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  (*(void (**)(void))(v22 + 8 * (v24 + v23)))(*v21);
  void *v21 = a13;
  *a14 = a21;
  JUMPOUT(0x1000F0EC8);
}

uint64_t sub_1000F0F34@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((a1 & 1)
                                     * ((v1 - 1007715077) & 0x3C108357 ^ (v3 + 1078) ^ ((v1 + 136380676) | 0xA1500032))) ^ v1)))();
}

uint64_t sub_1000F0F88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 0) ^ (5 * (v0 ^ 0xA))) & 1)
                                * (((v0 + 158939080) & 0x7686C7E4) - 23)) ^ v0)))();
}

uint64_t sub_1000F0FDC()
{
  unsigned int v3 = ((v0 - 1146) ^ 0x5867432D) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 337859105;
  BOOL v5 = v3 < v0 + 1483160741;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x58674236) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((615 * v6) ^ v0)))();
}

uint64_t sub_1000F1058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((50 * (v24 != 0)) ^ v23));
  HIDWORD(a22) = v22;
  *(void *)(v27 - 144) = v26;
  return v28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

uint64_t sub_1000F10AC()
{
  unsigned int v3 = v1 - 1239118730;
  BOOL v4 = (v1 - 1239118730) < 0xFA687C87;
  unsigned int v5 = ((2 * (2 * v1 + 2004361174)) & 0x9DAFFA3C)
     + ((2 * v1 + 2004361174) ^ (((v0 - 2141645342) & 0xD635ED3F) - 824707069));
  if (v4 != v5 + 730890088 < 0xFA687C87) {
    BOOL v6 = v5 + 730890088 < 0xFA687C87;
  }
  else {
    BOOL v6 = v5 + 730890088 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * !v6) ^ (v0 + 1452212725))))();
}

uint64_t sub_1000F1174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v28 = *(void *)(v27 - 136);
  int v29 = 98 * (v24 ^ 0x115);
  *(void *)(v27 - 136) = v28;
  uint64_t v30 = *(void *)(v28 - 0x29BAE573B9AE997FLL);
  int v31 = ((2 * a9) & 0x7FBEFFDE) + (a9 ^ 0x3FDF7FEF) - 1071612081;
  *(unsigned char *)(v30 + (v31 + 194)) = 99;
  *(unsigned char *)(v30 + (v31 + 195)) = 43;
  *(unsigned char *)(v30 + (v31 + v29)) = -115;
  *(unsigned char *)(v30 + (v31 + 197)) = 110;
  *v23 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((v29 + 1851) ^ (v26 + 799) ^ (v29 - 1452211914) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1000F1338()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((6 * (v0 ^ 0x735) + ((v0 - 1982) | 0x306) + 2036) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1000F1380()
{
  unsigned int v3 = ((v0 + 214) ^ 0xC898193A) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 2074858353;
  BOOL v5 = v3 < 0xC8981CA4;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xC8981CA4) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * (10 * (v0 ^ 0x4E9) - 487)) ^ v0)))();
}

uint64_t sub_1000F1400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  HIDWORD(a24) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((v26 - 421) ^ 0x199) * (v27 != 0)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v28);
}

uint64_t sub_1000F1440()
{
  unsigned int v3 = v1 - 641974977;
  BOOL v4 = (v1 - 641974977) < 0x1E002D50;
  unsigned int v5 = ((2 * (((v0 + 731) | 0x104) + 2004361174 + 2 * v1 - 1420)) & 0xD88FF0A8)
     + ((((v0 + 731) | 0x104) + 2004361174 + 2 * v1 - 1420) ^ 0xEC47F855);
  if (v4 != v5 + 834155771 < 0x1E002D50) {
    BOOL v6 = v5 + 834155771 < 0x1E002D50;
  }
  else {
    BOOL v6 = v5 + 834155771 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1113 * v6) ^ v0)))();
}

uint64_t sub_1000F14EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v32 = *(void *)(v31 - 136);
  int v33 = v28 - 587;
  *(void *)(v31 - 136) = v32;
  uint64_t v34 = *(void *)(v32 - 0x29BAE573B9AE997FLL);
  unsigned int v35 = ((a9 << (v33 ^ 0x46)) & 0xDFFFF9FE) + (a9 ^ 0x6FFFFCFF) - 1879047423;
  *(unsigned char *)(v34 + v35) = 0;
  *(unsigned char *)(v34 + v35 + 1) = 0;
  *(unsigned char *)(v34 + v35 + 2) = 0;
  *(unsigned char *)(v34 + v35 + 3) = 1;
  *v27 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((v30 + ((v33 - 830) | 0x3A2) - 330) ^ v33 ^ (v30 + 195) ^ v33)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000F16A8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 ^ 0x161) - 360) ^ 0x173) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1000F16E0()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1382934046;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + (v0 ^ 0x694E2B0F);
  BOOL v5 = v3 < 0xAD9219DA;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0xAD9219DA) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * ((v0 + 1354) ^ 0x83D)) ^ v0)))();
}

uint64_t sub_1000F1754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  LODWORD(a25) = v27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v28 - 995 + 177 * (v28 ^ 0x816) - 1425) * (v29 == 0)) | v28)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000F179C()
{
  unsigned int v3 = v0 + 477223401;
  BOOL v4 = (v0 + 477223401) < 0x60B5C9F6;
  unsigned int v5 = ((2 * (2 * v0 + 2004361174)) & 0xEDF7E8F8) + ((v1 + 958998766) & 0xC6D6D7FF ^ (2 * v0 + 2004361174) ^ 0x76FBF162);
  if (v4 != v5 - 373697159 < 0x60B5C9F6) {
    BOOL v6 = v5 - 373697159 < 0x60B5C9F6;
  }
  else {
    BOOL v6 = v5 - 373697159 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3291 * v6) ^ v1)))();
}

uint64_t sub_1000F1850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = *(void *)(v32 - 136);
  uint64_t v34 = *(void *)(v32 - 216);
  unint64_t v35 = v34 - ((2 * v34) & 0xF99431D3CA63CC58) + (v28 ^ 0x7CCA18E9E531E4E6);
  *(void *)(v32 - 136) = v33;
  uint64_t v36 = (unsigned char *)(((2 * a9) & 0x1D3F8DBB6)
                + (a9 ^ 0xA3BF793FE9FC6DDBLL)
                + *(void *)(v33 - 0x29BAE573B9AE997FLL)
                + 0x5C4086C016039225);
  unsigned char *v36 = HIBYTE(v35) ^ 0x7C;
  v36[1] = BYTE6(v35) ^ 0xCA;
  v36[2] = BYTE5(v35) ^ 0x18;
  v36[3] = BYTE4(v35) ^ 0xE9;
  void v36[4] = ((v34 - ((2 * v34) & 0xCA63CC58) + (v28 ^ 0xE531E4E6)) >> 24) ^ 0xE5;
  v36[5] = BYTE2(v35) ^ 0x31;
  void v36[6] = BYTE1(v35) ^ 0xE6;
  v36[7] = v35 ^ 0x2C;
  *v29 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (int)(((v28 ^ 0x3A8 ^ (v31 - 354)) - v31 + 189) ^ v28 ^ 0x3A8)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000F1A90()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((((v0 + 229) ^ 0xE0) + 349) ^ 0xFFFFFD8E) + 251 * ((v0 + 229) ^ 0xE0))
                                     * (v1 == 0)) ^ (v0 + 229))))();
}

uint64_t sub_1000F1AD4()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1452124039;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + ((v0 - 452) ^ 0x652E6B7F);
  BOOL v5 = v3 < 0xA9725871;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 73 * (v0 ^ 0x4ECu) - 1452124850) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3568 * v6) ^ v0)))();
}

uint64_t sub_1000F1B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a25) = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((4 * (((v30 == 0) ^ (v29 + 48)) & 1)) & 0xF7 | (8 * (((v30 == 0) ^ (v29 - 720)) & 1))) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000F1BA4()
{
  unsigned int v3 = v1 + 1498273165;
  BOOL v4 = (v1 + 1498273165) < 0x9D91C59A;
  unsigned int v5 = ((2 * ((v0 ^ 0x77781F84) + 2 * v1)) & 0x9DA7E77C) + (((v0 ^ 0x77781F84) + 2 * v1) ^ 0xCED3F3BF);
  if (v4 != v5 - 826420773 < 0x9D91C59A) {
    BOOL v6 = v5 - 826420773 < 0x9D91C59A;
  }
  else {
    BOOL v6 = v5 - 826420773 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1763 * v6) ^ v0)))();
}

uint64_t sub_1000F1C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  uint64_t v34 = *(void *)(v33 - 136);
  int v35 = 118 * (v30 ^ 0x320);
  unint64_t v36 = *(void *)(v33 - 208)
      + 0x7CCA18E9E531E62CLL
      - ((*(void *)(v33 - 208) << (v35 ^ 0x63u)) & 0xF99431D3CA63CC58);
  *(void *)(v33 - 136) = v34;
  uint64_t v37 = (unsigned char *)(((2 * a9) & 0x1CFBF7B3ELL)
                + (a9 ^ 0x7BEFE7FBE7DFBD9FLL)
                + *(void *)(v34 - 0x29BAE573B9AE997FLL)
                - 0x7BEFE7FBE7DFBD9FLL);
  *uint64_t v37 = HIBYTE(v36) ^ 0x7C;
  v37[1] = BYTE6(v36) ^ 0xCA;
  v37[2] = BYTE5(v36) ^ 0x18;
  v37[3] = BYTE4(v36) ^ 0xE9;
  v37[4] = BYTE3(v36) ^ 0xE5;
  v37[5] = BYTE2(v36) ^ 0x31;
  v37[6] = BYTE1(v36) ^ 0xE6;
  v37[7] = v36 ^ 0x2C;
  *v29 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)((((v35 - 1459617898) ^ 0xA9000418 ^ (v32 + 285)) + ((v35 - 1459617898) | 0x710102)) ^ v35)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000F1EC0()
{
  *(void *)(v5 - 192) = v2;
  *(void *)(v5 - 128) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ (v4 + 800)) - v4 + 2) * (v1 == 0)) | v0)))();
}

uint64_t sub_1000F1F08@<X0>(int a1@<W8>)
{
  int v4 = a1 + 2034;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 + 2337)))();
  BOOL v6 = *(void (**)(void))(v1 + 8 * (v4 + 247));
  *(void *)(v3 - 200) = v5;
  v6();
  uint64_t v7 = (*(uint64_t (**)(void, void))(v1 + 8 * (v4 ^ 0xF0D)))(*(void *)(v3 - 160), 0);
  *(void *)(v3 - 176) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 == 0) * ((v4 ^ (v2 + 1038)) - v2 + 4091)) ^ v4)))();
}

uint64_t sub_1000F1FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = v29 + 433;
  uint64_t v34 = (*(uint64_t (**)(void, uint64_t, void))(v30 + 8 * (v33 + 1875)))(*(void *)(v31 - 160), a1, 0);
  int v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v34 == 0) * (((7 * (v33 ^ 0x1D4)) ^ 0x568EFCAE) + ((v33 - 1993343167) | 0x20410108))) ^ v33));
  *(void *)(v31 - 176) = a1;
  return v35(v34, v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000F2038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t, char *))(v26 + 8 * (v25 ^ 0xBF0)))(a1, (char *)*(&off_1002E1E10 + (v25 ^ 0x2DC)) - 12);
  (*(void (**)(uint64_t))(v26 + 8 * (v25 ^ 0xA72)))(a1);
  (*(void (**)(uint64_t, void))(v26 + 8 * (v25 + 1641)))(a1, *(void *)(v27 - 200));
  int v29 = (void *)(*(uint64_t (**)(void))(v26 + 8 * (v25 + 1615)))();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((((v25 ^ 0x36B ^ (v29 == *(&off_1002E1E10 + v25 - 697))) & 1) == 0) * (((v25 - 651) | 0x586) - 1001)) ^ v25)))(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000F20F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 8 * (v35 + 856)))(a33, v34, v36 - 128);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                                + 8
                                                                                                * (int)(((v37 == 0) * (v35 + ((v35 + 550736449) & 0xDF2C6BDB) - 2357)) ^ v35));
  *(void *)(v36 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v36 - 152) = 0x79483BA612D83A8ELL;
  return v38(v37, v39, v40, v41, v42, v43, v44);
}

uint64_t sub_1000F2180()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xAD0)))(24, 4101018099);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                               + 8
                                                                                               * (((2
                                                                                                  * (((v3 == 0) ^ (v0 - 59 + v0 - 75 + 1)) & 1)) & 0xDF | (32 * (((v3 == 0) ^ (v0 - 59 + v0 - 75 + 1)) & 1))) ^ v0));
  *(void *)(v2 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v2 - 152) = 0x79483BA612D83A8ELL;
  return v4(v3, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1000F220C(uint64_t a1)
{
  *(void *)(v3 - 152) = a1 + 0x79483BA612D83A8ELL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1171913814;
  *(void *)(a1 + 12) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 107)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v5 == 0) * ((13 * (v1 ^ 0x833) - 1036) ^ (v1 - 1341))) | v1)))();
}

uint64_t sub_1000F2294()
{
  int v4 = *(uint64_t (**)(void))(v0 + 8 * (int)((((v1 - 1451809149) & 0xFFF9D3FF ^ 0xA9710120) * (v2 != 0)) ^ v1));
  *(void *)(v3 - 184) = 0x79483BA612D83A8ELL;
  return v4();
}

uint64_t sub_1000F22F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = a1 - 4088;
  (*(void (**)(uint64_t))(v21 + 8 * (a1 + 1452209869)))(v22);
  *(void *)(v23 - 184) = 0x79483BA612D83A8ELL;
  *(void *)(v23 - 152) = 0x79483BA612D83A8ELL;
  (*(void (**)(uint64_t))(v21 + 8 * (v24 + 1452214027)))(v20);
  (*(void (**)(uint64_t))(v21 + 8 * (int)(v24 ^ 0xA97108FF)))(a20);
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((4 * (*(void *)(v23 - 200) == 0)) | (8 * (*(void *)(v23 - 200) == 0))) ^ (v24 + 1452212699))))();
}

uint64_t sub_1000F2BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((v34 + 3496) ^ (79 * (a33 == 0))));
  *(void *)(v36 - 176) = v33;
  return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1000F2C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v38 = (*(uint64_t (**)(void))(v36 + 8 * v35))();
  uint64_t v39 = *(uint64_t (**)(uint64_t))(v36 + 8 * ((v34 + 3496) ^ (79 * (a33 == 0))));
  *(void *)(v37 - 176) = v33;
  return v39(v38);
}

uint64_t sub_1000F2C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v38 + 1452214027)))(a33);
  *(void *)(v40 - 176) = v34;
  if (v37 == -45004)
  {
    *(void *)(v40 - 152) = v35;
    *(void *)(v40 - 120) = 0;
    *(_DWORD *)(v40 - 112) = 0;
    uint64_t v42 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v36 + 8 * (v39 + 1452214060)))(*(unsigned int *)*(&off_1002E1E10 + (v39 ^ (v39 - 8))), *(void *)v33, *(unsigned int *)(v33 + 12), v40 - 120, v40 - 112);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((824 * ((v42 ^ 0x5E5DEEB9) - 335545392 + ((2 * v42) & 0xBCBBDD72) == 1516104332)) ^ (v39 + 1452212148))))(v42, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
  else if (v37)
  {
    return sub_1000F3E80();
  }
  else
  {
    return (*(uint64_t (**)(uint64_t))(v36
                                              + 8 * ((25 * (*(void *)(v40 - 184) != 0x79483BA612D83A8ELL)) ^ 0x347)))(v41);
  }
}

uint64_t sub_1000F3398()
{
  uint64_t v3 = *(void *)(v2 - 184);
  unsigned int v4 = *(_DWORD *)(v3 - 0x79483BA612D83A82) - 886711989;
  unsigned int v5 = *(_DWORD *)(v3 - 0x79483BA612D83A86) - 2058625807;
  int v6 = (v4 < 0xCB25D947) ^ (v5 < ((v0 - 1989083064) | 0x20000050u) + 565499725);
  BOOL v7 = v4 > v5;
  if (v6) {
    BOOL v7 = v4 < 0xCB25D947;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v7 * ((v0 ^ 0x99F) - 2290)) ^ v0)))();
}

uint64_t sub_1000F3458@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v4 - 184);
  *uint64_t v2 = v1 + 4;
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ ((v5 == 0x79483BA612D83A8ELL) | (2 * (v5 == 0x79483BA612D83A8ELL))))))();
}

uint64_t sub_1000F3524@<X0>(int a1@<W8>)
{
  uint64_t v5 = 8 * (a1 - 62);
  (*(void (**)(void))(v4 + v5))();
  void *v1 = 0;
  _DWORD *v3 = 1171913814;
  *uint64_t v2 = 0;
  (*(void (**)(void *))(v4 + v5))(v1);
  return sub_1000F3E80();
}

uint64_t sub_1000F357C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31,int a32,int a33)
{
  uint64_t v39 = (*(uint64_t (**)(void))(v35 + 8 * (v37 ^ (v37 + 1867))))(*(void *)(v33 - 0x79483BA612D83A8ELL));
  *(void *)(v33 - 0x79483BA612D83A8ELL) = a23;
  *a31 = a33;
  *(void *)(v38 - 144) = v36;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 + v37 + 4103)))(v39);
}

void sub_1000F361C()
{
  *(void *)(v1 - 168) = v0;
  JUMPOUT(0x1000F364CLL);
}

uint64_t sub_1000F3660@<X0>(unint64_t a1@<X0>, unint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 > a1) * ((v2 - 335) ^ 0x2BC)) ^ v2)))();
}

uint64_t sub_1000F36C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + ((v1 - 177) | 2) - 341) ^ ((v1 - 2127495305) | 0x2840010A)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1000F3710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v7 = (unint64_t)(a1 - a2) < 0x20 || v2 < v4 + ((40 * (v3 ^ 0xD0) - 1418502162) & 0xFDFD9DFA) + 2185;
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * v7) | (32 * v7)) ^ v3)))();
}

uint64_t sub_1000F376C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((51
                                * (v0 < v2 + ((v1 - 919523605) ^ 0x60403301) + ((v1 - 919523605) & 0x36CECDFDu) + 1960)) ^ v1)))();
}

uint64_t sub_1000F37C0@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * (((v3 + 2690) | 0x52) - 579)) ^ (v3 + 2914))))();
}

void sub_1000F3808()
{
}

uint64_t sub_1000F3818()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + ((v1 - 1605304555) | 0x92000DA) - 67) ^ (63 * (v1 ^ 0x229))) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_1000F3868()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((58 * (v1 >= ((v0 - 1451527264) & 0xFFF585FB) + v2 + 115 * (v0 ^ 0x84D))) ^ v0)))();
}

uint64_t sub_1000F38BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - v3 + 54) ^ (v4 + 32) ^ 0x3D9) * (v0 < 0x20)) ^ v1)))();
}

uint64_t sub_1000F38F4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 < 0x20) ^ (v1 - v2 - 96)) & 1) * (((v1 - 722) | 1) + 1718)) ^ v1)))();
}

uint64_t sub_1000F3930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v8 = (v3 - 3169 - v7 + 1975) ^ v6;
  uint64_t v9 = a2 + (v8 & (v2 - 1));
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + (v8 & (v2 - 1));
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2 * ((v2 & 0xFFFFFFE0) == 32)) | (32 * ((v2 & 0xFFFFFFE0) == 32)) | (v4 + v3 - 3169 + 3841))))();
}

void sub_1000F3990()
{
}

uint64_t sub_1000F399C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a2 ^ (v5 - 1) ^ (v2 == v3)) & 1) == 0) * (a2 - 547)) ^ a2)))();
}

uint64_t sub_1000F39D0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 - 346) ^ (v4 - 247) ^ (v4 - 3)) * ((v2 & 0x18) == 0)) | (a2 + 221))))();
}

uint64_t sub_1000F3A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((53 * (((v4 + 1196036742) & 0xB8B5EFBD ^ 0x335) + v2 != ((v6 + v4 - 45 + 1764) & v3))) ^ (v4 - 45))))();
}

uint64_t sub_1000F3A68()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v4 + v2 + ((v2 + 155188541) | 0xA0310180) - 38) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000F3AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((61 * (v2 + 1 == v3)) ^ (v5 + v4 + 4038))))();
}

uint64_t sub_1000F3ADC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((127 * (v0 != v1)) ^ v2)))();
}

uint64_t sub_1000F3AFC()
{
  int v4 = 2 * ((v1 - 335606200) & 0x3D71EBFA ^ (v3 - 246));
  return (*(uint64_t (**)(void))(v2 + 8 * ((973 * ((v0 & 0x18) == (v4 - 237) - 271)) ^ v4)))();
}

uint64_t sub_1000F3B64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = (v6 + 33 * (v4 ^ 0x11Eu) + 1414) & (~v2 + v3);
  *(void *)(a1 - 7 + v7) = *(void *)(a2 - 7 + v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1711 * (v2 - (v3 & 0xFFFFFFF8) == -8)) ^ v4)))();
}

void sub_1000F3BC4()
{
}

uint64_t sub_1000F3BD0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a3 - 2006909079) | 0x21100060) ^ 0xFFFE0319) + ((a3 - 34363954) & 0xAB7D59FA))
                                     * (v4 == v3)) ^ a3)))();
}

uint64_t sub_1000F3C2C()
{
  return v0();
}

uint64_t sub_1000F3C34()
{
  uint64_t v3 = *(void *)(v2 - 168);
  *(_DWORD *)(v3 - 0x79483BA612D83A86) = (*(_DWORD *)(v2 - 112) ^ 0xF7FDFE57)
                                         + 1306263039
                                         + ((2 * *(_DWORD *)(v2 - 112)) & 0xEFFBFCAE);
  *(_DWORD *)(v3 - 0x79483BA612D83A82) = 0;
  uint64_t v4 = (*(uint64_t (**)(void, void, void))(v0 + 18672))(*(unsigned int *)*(&off_1002E1E10 + (int)((v1 - 22) ^ 0xA97101FA)), *(void *)(v2 - 120), *(unsigned int *)(v2 - 112));
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 13320);
  *(void *)(v2 - 184) = v3;
  return v5(v4);
}

uint64_t sub_1000F3C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * ((3401 * (v6 == 0)) ^ (v4 + v3 + 3606))))();
}

uint64_t sub_1000F3CD0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((872 * (v0 ^ 0x32) - 1452213462) ^ 0xA971030E) - 708)
                                     * (v1 == 0x79483BA612D83A8ELL)) ^ (872 * (v0 ^ 0x32)))))();
}

uint64_t sub_1000F3D2C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v1 - 0x79483BA612D83A8ELL) == 0) ^ (a1 - 1)) & 1)
                                * (v3 + a1 + 1452210976)) ^ a1)))();
}

void sub_1000F3D84(int a1@<W8>)
{
  unsigned int v5 = (a1 + 24116700) | 0xA801012A;
  (*(void (**)(void))(v3 + 8 * (int)(v5 ^ (v4 + 1867))))();
  void *v1 = 0;
  *(_DWORD *)(v2 - 0x79483BA612D83A86) = 1171913814;
  *(_DWORD *)(v2 - 0x79483BA612D83A82) = 0;
  (*(void (**)(void *))(v3 + 8 * (int)(v5 + 1452213957)))(v1);
  JUMPOUT(0x1000F3E04);
}

uint64_t sub_1000F3E80()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 + v1 - 2119) * (v0 == 0)) ^ (v1 + 1452213181))))();
}

uint64_t sub_1000F3EB4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == 0) * ((v4 + a1 - 215 - 2040) ^ (a1 - v3))) ^ (a1 - 215))))();
}

void sub_1000F3EEC(int a1@<W8>)
{
  (*(void (**)(void))(v2 + 8 * (a1 - 2024 + v3)))();
  *(void *)uint64_t v1 = 0;
  *(_DWORD *)(v1 + 8) = 1145303061;
  *(_DWORD *)(v1 + 12) = 0;
  JUMPOUT(0x1000F3F14);
}

void sub_1000F3F28()
{
  uint64_t v0 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AC98[(byte_10026A878[(9
                                                                                   * ((dword_10031DC58 - dword_10031DC68) ^ 0x7D))
                                                                 - 8] ^ 0x19)
                                                 - 8] ^ (9 * ((dword_10031DC58 - dword_10031DC68) ^ 0x7D)))
                - 29);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AD90[byte_10026A978[(9 * ((dword_10031DC58 - v1) ^ 0x7D))
                                                                - 8] ^ 0x78] ^ (9 * ((dword_10031DC58 - v1) ^ 0x7D)))
                - 187);
  unint64_t v3 = (unint64_t)&v8[v1 + *(void *)(v2 - 4)];
  uint64_t v4 = 1787074057 * v3 - 0x6585E11862ED39BLL;
  unint64_t v5 = 1787074057 * (v3 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v0 - 4) = v4;
  *(void *)(v2 - 4) = v5;
  LOBYTE(v2) = 9 * ((v5 - *(_DWORD *)(v0 - 4)) ^ 0x7D);
  unsigned int v6 = (char *)*(&off_1002E1E10
               + ((9 * ((dword_10031DC58 - dword_10031DC68) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 - dword_10031DC68) ^ 0x7D))] ^ 0x8A])
               - 1)
     - 4;
  uint64_t v7 = *(void *)&v6[8
                    * ((84
                      * ((*(uint64_t (**)(uint64_t, uint64_t))&v6[8
                                                                        * (byte_10026A664[(byte_10026B0DC[v2 - 12] ^ 0xB1) - 4] ^ v2)
                                                                        + 16728])(24, 4101018099) == 0)) ^ 0x412)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F40EC(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 912148809;
  *(_DWORD *)(a1 + 16) = 0;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 18520))(4096, 1358311088);
  *(void *)a1 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((213 * (v3 != 0)) ^ 0x67Du)))();
}

uint64_t sub_1000F4140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 152) = v21 + 0x2A5C32E9989AD503;
  *(_DWORD *)(v21 + 8) = v22 + 4096;
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((57 * (v21 == 0)) ^ 0x4C8));
  *(void *)(v25 - 168) = *(void *)(v23 + 104) - 8;
  *(void *)(v25 - 200) = 0x1A44E0EB4FC706ALL;
  return v26(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1000F41E0()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + ((v0 + 1147767190) & 0x154D) - 312355264 - 1288;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 1224504073;
  BOOL v5 = v3 < 0xED61D640;
  BOOL v6 = v3 > v4;
  if (v4 < 0xED61D640 != v5) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2 * (((v0 - 125) ^ v7) & 1)) & 0xFB | (4 * (((v0 - 1149) ^ v7) & 1)) | v0)))();
}

uint64_t sub_1000F426C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v20 - 200) = 0x1A44E0EB4FC706ALL;
  int v21 = ((v14 | 0x10) + 71) | 0x24;
  uint64_t v22 = *v16;
  unsigned int v23 = ((v21 - 806356520) & (2 * a9)) + (a9 ^ 0xE7F7FDFF) + 403177985;
  *(unsigned char *)(*v16 + v23) = 0;
  *(unsigned char *)(v22 + v23 + 1) = 0;
  *(unsigned char *)(v22 + v23 + 2) = 0;
  *(unsigned char *)(v22 + v23 + 3) = 1;
  *v15 += 4;
  *(void *)(v20 - 160) = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * (int)(((((v21 + 1328) | 0x80) ^ (v17 - 620)) + ((v21 + 675306972) | 0x82019444)) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14);
}

uint64_t sub_1000F45AC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 == 0) ^ (v0 + 43)) & 1) * ((v0 - 33160169) & 0x1F9F5FB ^ 0x1E7)) ^ v0)))();
}

uint64_t sub_1000F4600()
{
  unsigned int v3 = (v0 ^ 0x7FEF5C30) + *(_DWORD *)(v1 + 12);
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1234244748;
  BOOL v5 = v3 < 0x7FEF5DD5;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v0 + 1028) ^ 0x7FEF5838)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((1889 * v6) ^ v0)))();
}

uint64_t sub_1000F4680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)(((((v28 - 1544683122) & 0x411FC95) + (v28 ^ 0xFFFFFA32)) * (v29 == 0)) ^ v28));
  HIDWORD(a23) = v27;
  *(void *)(v32 - 160) = v30;
  return v33(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000F46D0()
{
  unsigned int v3 = v0 + 262598220;
  BOOL v4 = (v0 + 262598220) < 0x46053791;
  int v5 = ((2 * ((v0 << (v1 ^ 0xEC)) - 1824297618)) & 0x7DBD96D0) + (((v0 << (v1 ^ 0xEC)) - 1824297618) ^ 0x3EDECB69);
  if (v4 != (v5 + 119958568) < 0x46053791) {
    BOOL v6 = (v5 + 119958568) < 0x46053791;
  }
  else {
    BOOL v6 = v5 + 119958568 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((3447 * v6) ^ v1 ^ 0x17u)))();
}

uint64_t sub_1000F4784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = *(void *)(v32 - 152);
  int v34 = (v29 - 643) | 0x401;
  *(void *)(v32 - 152) = v33;
  uint64_t v35 = *(void *)(v33 - 0x2A5C32E9989AD503);
  unsigned int v36 = ((a9 << (v34 - 16)) & 0x47FF7FFE) + (a9 ^ 0xA3FFBFFF) + 1543520257;
  *(unsigned char *)(v35 + v36 + 1) = -19;
  *(unsigned char *)(v35 + v36 + 2) = -89;
  *(unsigned char *)(v35 + v36) = -80;
  *(unsigned char *)(v35 + v36 + 3) = -81;
  *v28 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (((v34 ^ 0x55BE1C0F) + v34 - v30 + 1198) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000F4944()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0x637) + 3 * (v1 ^ 0x508) - 1375) * (v0 == 0)) ^ v1 ^ 0x7F)))();
}

uint64_t sub_1000F4988()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) - 1729931730 + ((v0 + 1039902712) & 0xC20456FD) + ((v0 - 875780956) & 0x34335DFB) - 2088;
  unsigned int v4 = *(_DWORD *)(v1 + 8) + 1652886757;
  BOOL v5 = v3 < 0x98E3562E;
  BOOL v6 = v3 > v4;
  if (v4 < 0x98E3562E != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((240 * v6) ^ v0)))();
}

uint64_t sub_1000F4A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  LODWORD(a24) = v25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v26 + 868 + ((v26 + 1787091309) & 0x957B2677) - 1958) * (v27 == 0)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           v28);
}

uint64_t sub_1000F4A78()
{
  unsigned int v3 = v1 + 63784098;
  BOOL v4 = (v1 + 63784098) < 0x3A2B8DE7;
  unsigned int v5 = ((2 * (((v0 + 58) ^ 0x934368B1) + 2 * v1)) & 0x6FFFDEDC) + ((((v0 + 58) ^ 0x934368B1) + 2 * v1) ^ 0xB7FFEF6F);
  if (v4 != v5 - 2111070600 < 0x3A2B8DE7) {
    BOOL v6 = v5 - 2111070600 < 0x3A2B8DE7;
  }
  else {
    BOOL v6 = v5 - 2111070600 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v6) | (8 * v6)) ^ v0)))();
}

uint64_t sub_1000F4B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v32 = *(void *)(v31 - 152);
  *(void *)(v31 - 152) = v32;
  uint64_t v33 = *(void *)(v32 - 0x2A5C32E9989AD503);
  unsigned int v34 = ((v28 ^ 0xDFCEFE15) & (2 * a9)) + (a9 ^ 0xEFE77DFF) + 270041601;
  *(unsigned char *)(v33 + v34) = 0;
  *(unsigned char *)(v33 + v34 + 1) = 0;
  *(unsigned char *)(v33 + v34 + 2) = 0;
  *(unsigned char *)(v33 + v34 + 3) = 1;
  *v27 += 4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (int)((v29 + (((v28 ^ 0x7CD) + 561505745) & 0xDE881EDA) - 1443) ^ ((v28 ^ 0x7CD) - 338166480) & 0xBE69F4EF ^ v28 ^ 0x7CD)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000F4CFC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)((((v0 - 1152) ^ 0x746 ^ (v0 + 2074093803) & 0x845FD567) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1000F4D48()
{
  unsigned int v3 = *(_DWORD *)(v1 + 12) + 60653252;
  unsigned int v4 = *(_DWORD *)(v1 + 8) - 851495565;
  BOOL v5 = v3 < 0x39D7EBC;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x39D7EBC) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 * ((v0 + 774) ^ 0x560)) ^ v0)))();
}

uint64_t sub_1000F4DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  HIDWORD(a24) = v24;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((((v25 == 0) ^ v27 ^ 0x7D) & 1) * ((v27 ^ 0x22B) - 1848)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           v26);
}

uint64_t sub_1000F4E00()
{
  unsigned int v3 = v1 + 724353512;
  BOOL v4 = (v1 + 724353512) < 0x618B0B29;
  unsigned int v5 = (((v0 - 1066) ^ 0x6FFFB89D) & (2 * (2 * v1 - 1824297618))) + ((2 * v1 - 1824297618) ^ 0xB7FFDDEB);
  if (v4 != v5 - 1450496706 < 0x618B0B29) {
    BOOL v6 = v5 - 1450496706 < 0x618B0B29;
  }
  else {
    BOOL v6 = v5 - 1450496706 > v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((188 * v6) ^ v0)))();
}

uint64_t sub_1000F4EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v36 = *(void *)(v35 - 152);
  uint64_t v37 = (v31 + 1721066143) & 0x996A9D2D;
  unint64_t v38 = a30 - ((2 * a30) & 0xF99431D3CA63CC58) + 0x7CCA18E9E531E62CLL;
  *(void *)(v35 - 152) = v36;
  uint64_t v39 = (unsigned char *)(*(void *)(v36 - 0x2A5C32E9989AD503)
                + (a9 ^ 0x7BAEB7BBF9DF2D9FLL)
                - 0x7BAEB7BBF9DF2D9FLL
                + ((v37 ^ 0x1F3BE5E1ALL) & (2 * a9)));
  *uint64_t v39 = HIBYTE(v38) ^ 0x7C;
  v39[1] = BYTE6(v38) ^ 0xCA;
  v39[2] = BYTE5(v38) ^ 0x18;
  v39[3] = BYTE4(v38) ^ 0xE9;
  v39[4] = ((a30 - ((2 * a30) & 0xCA63CC58) - 449714644) >> 24) ^ 0xE5;
  v39[5] = BYTE2(v38) ^ 0x31;
  v39[6] = BYTE1(v38) ^ 0xE6;
  v39[7] = v38 ^ 0x2C;
  *v30 += 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((v32 + v33 + v37 - 1317 - 1681) ^ (v37 - 1189) ^ v37)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1000F5114()
{
  *(void *)(v4 - 128) = 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + v0 - 128) ^ (v2 + 782) ^ ((v0 - 64) | 0x30C)) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_1000F5170()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1493)))();
  uint64_t v4 = *(void (**)(void))(v1 + 8 * (v0 ^ 0xBA5));
  *(void *)(v2 - 208) = v3;
  v4();
  uint64_t v5 = (*(uint64_t (**)(void, void))(v1 + 8 * (v0 + 1459)))(*(void *)(v2 - 168), 0);
  *(void *)(v2 - 192) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v5 == 0) * (((v0 - 2143211338) | 0x2A00C044) + 1438518261)) ^ v0)))();
}

uint64_t sub_1000F5228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v32 = v28 - 625;
  uint64_t v33 = (*(uint64_t (**)(void, uint64_t, void))(v29 + 8 * (v32 ^ 0x9DF)))(*(void *)(v30 - 168), a1, 0);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v33 != 0) * (v32 ^ 0xAA41F49D ^ (v32 - 1438518427))) ^ v32));
  *(void *)(v30 - 192) = a1;
  return v34(v33, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000F52A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  (*(void (**)(uint64_t, uint64_t))(v22 + 8 * (v20 ^ 0x8A1)))(a1, *(void *)(v21 + 8 * (v20 - 371)) - 12);
  (*(void (**)(uint64_t))(v22 + 8 * (v20 ^ 0x923)))(a1);
  (*(void (**)(uint64_t, void))(v22 + 8 * (v20 ^ 0x8BE)))(a1, *(void *)(v23 - 208));
  uint64_t v25 = (*(uint64_t (**)(void))(v22 + 8 * (v20 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (((v25 == *(void *)(v21 + 8 * (v20 ^ 0x198))) * (v20 + 1126 + 5 * (v20 ^ 0x18C) - 694)) ^ v20)))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000F535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v29
                              + 8
                              * (int)(((a28 == (void)*(&off_1002E1E10 + (v28 ^ 0x85)) - 8)
                                     * (v28 ^ 0xAA41F1EA ^ ((v28 + 541156268) | 0x8A009004))) ^ v28)))();
}

uint64_t sub_1000F53DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 + 1920)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v31 == v28) * (((v27 - 254) ^ 0xFFFFFF26) + (v27 ^ 0x46A))) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000F543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30 + 8 * (((a28 != v29) * ((v28 + 254) ^ 0x190)) | v28)))();
}

uint64_t sub_1000F5490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 ^ 0x8BE)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == v28) * (((v27 ^ 0x46A) - 710) ^ 0x1E8)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000F54F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30
                              + 8
                              * (int)((((((v28 + 1126639268) & 0xBCD8D7BB) - 1438518604) ^ 0xAA41F073) * (a28 == v29)) ^ v28)))();
}

uint64_t sub_1000F5558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((v31 == v28) * (((v27 + 333592173) & 0xEC1DCDF8 ^ 0xFFFFFA8C) + v27 - 252)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000F55CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return (*(uint64_t (**)(void))(v30 + 8 * ((((v28 + 252) ^ 0x75A) * (a28 == v29)) ^ v28)))();
}

uint64_t sub_1000F5628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, void))(v29 + 8 * (v27 + 1946)))(a27, *(void *)(v30 - 208));
  uint64_t v31 = (*(uint64_t (**)(void))(v29 + 8 * (v27 ^ 0x880)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == v28) * (v27 + 1438521567 + v27 - 1438518604 - 3095)) ^ v27)))(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_1000F56A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 8 * (v28 ^ 0xCEE)))(a28, v29, v31 - 128);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * (((v32 == 0) * ((v28 + 68) ^ (v28 + 66))) | v28));
  *(void *)(v31 - 200) = 0x1A44E0EB4FC706ALL;
  return v33(v32, v34, v35, v36, v37, v38, v39, v40);
}

uint64_t sub_1000F572C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xF31)))(24, 4101018099);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (((v3 == 0) * ((v0 + 156) ^ v0 ^ 0x96)) ^ v0));
  *(void *)(v2 - 200) = 0x1A44E0EB4FC706ALL;
  return v4(v3, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000F57B4(uint64_t a1)
{
  *(void *)(v3 - 184) = a1 + 0x1A44E0EB4FC706ALL;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1814571000;
  *(void *)(a1 + 12) = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xFA7)))(4096, 1358311088);
  *(void *)a1 = v5;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 - 107) ^ (v5 == 0)) & 1) * ((v1 ^ 0x664) - 178)) ^ v1)))();
}

uint64_t sub_1000F583C()
{
  *(_DWORD *)(v2 + 8) = v1 + 4096;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(void *)(v4 - 128) > (unint64_t)(v0
                                                                                          - 652
                                                                                          + v1
                                                                                          - 1814566904
                                                                                          - 693))
                                * ((v0 ^ 0x504) + 515)) ^ v0)))();
}

uint64_t sub_1000F5890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * ((((v3 + 360) ^ 0x413) * (v4 != 0)) ^ v3)))(a1, a2, a3);
}

uint64_t sub_1000F58C8@<X0>(int a1@<W8>)
{
  unsigned int v5 = v1 + v2 + a1;
  unsigned int v6 = (((2 * a1 + 665825296) << (v3 ^ 0x1C)) & 0xFD5FDFF8) + ((2 * a1 + 665825296) ^ 0x7EAFEFFC);
  if (v5 > 0x4762EDD != v6 + 2094653734 < 0xFB89D122) {
    BOOL v7 = v6 + 2094653734 < 0xFB89D122;
  }
  else {
    BOOL v7 = v6 + 2094653734 > v5 - 74854110;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((367 * v7) ^ v3 ^ 0x2B4)))(4250918904, 3984078844, 2094653734);
}

uint64_t sub_1000F5988()
{
  uint64_t v4 = *(uint64_t (**)(void))(v2 + 8 * (int)((((v0 - 95685618) & 0xAFF5FF6F ^ 0xAA41F451) * (v1 == 0)) | v0));
  *(void *)(v3 - 200) = 0x1A44E0EB4FC706ALL;
  return v4();
}

uint64_t sub_1000F59EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v24 = a1 - 200;
  (*(void (**)(uint64_t))(v22 + 8 * (a1 + 1438520241)))(v21);
  *(void *)(v23 - 200) = 0x1A44E0EB4FC706ALL;
  (*(void (**)(uint64_t))(v22 + 8 * (v24 + 1438520511)))(v20);
  (*(void (**)(uint64_t))(v22 + 8 * (int)(v24 ^ 0xAA41FD43)))(a20);
  return (*(uint64_t (**)(void))(v22 + 8 * ((74 * (*(void *)(v23 - 208) != 0)) | (v24 + 1438519375))))();
}

uint64_t sub_1000F5D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v33 = (*(uint64_t (**)(void))(v31 + 8 * v29))();
  uint64_t v34 = *(uint64_t (**)(uint64_t))(v31 + 8 * ((v28 - 510) ^ ((a28 == 0) | (4 * (a28 == 0)))));
  *(void *)(v32 - 192) = v30;
  return v34(v33);
}

uint64_t sub_1000F5DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  (*(void (**)(uint64_t))(v34 + 8 * (int)(v29 ^ 0xAA41FD43)))(a28);
  *(void *)(v35 - 192) = v30;
  if (v31 == -45004)
  {
    *(void *)(v35 - 184) = v33;
    *(void *)(v35 - 144) = 0;
    *(_DWORD *)(v35 - 132) = 0;
    uint64_t v43 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v34 + 18736))(**(unsigned int **)(v32 + 64), *(void *)v28, *(unsigned int *)(v28 + 12), v35 - 144, v35 - 132);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1320 * ((v43 ^ 0x7FFFFEAB) - 899814434 + ((2 * v43) & 0xFFFFFD56) == 1516104332)) ^ 0x153)))(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v31)
  {
    return sub_1000F7084();
  }
  else
  {
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((462 * (*(void *)(v35 - 200) != 0x1A44E0EB4FC706ALL)) ^ 0xED)))(*(void *)(v35 - 200), v36, v37, v38, v39, v40, v41, v42, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
}

uint64_t sub_1000F6508(uint64_t a1)
{
  int v3 = (v1 - 469144713) & 0x71B4A762;
  unsigned int v4 = *(_DWORD *)(a1 - 0x1A44E0EB4FC705ELL) + 2002279202;
  unsigned int v5 = ((v3 - 1420259747) & 0x54A76E93 ^ 0xB303737) + *(_DWORD *)(a1 - 0x1A44E0EB4FC7062);
  int v6 = (v4 < 0x77585B1E) ^ (v5 < 0x77585B1E);
  BOOL v7 = v4 > v5;
  if (v6) {
    BOOL v7 = v4 < 0x77585B1E;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * (v3 - 1702)) ^ v3)))();
}

uint64_t sub_1000F65C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *uint64_t v2 = v3 + 4;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((a1 == a2) ^ (((v4 + 81) & 0x9F) - 82)) & 1)
                                     * ((v5 + ((v4 + 575506257) & 0xDDB2759F) - 1041) ^ (v5 - 22))) ^ (v4 + 575506257) & 0xDDB2759F)))();
}

uint64_t sub_1000F6694()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(void *)(*(void *)(v3 - 200) - 0x1A44E0EB4FC706ALL) == 0) ^ ((v0 & 0xC9) - 68)) & 1)
                                     * (v0 & 0x8E77A3C9 ^ (v1 + 905) ^ (v1 + 36))) ^ v0 & 0x8E77A3C9)))();
}

uint64_t sub_1000F66FC@<X0>(int a1@<W8>)
{
  unsigned int v5 = (a1 + 171965627) | 0xA001F402;
  (*(void (**)(void))(v4 + 8 * (int)(v5 ^ (v3 + 2227))))();
  void *v1 = 0;
  *(_DWORD *)(v2 - 0x1A44E0EB4FC7062) = 1814571000;
  *(_DWORD *)(v2 - 0x1A44E0EB4FC705ELL) = 0;
  (*(void (**)(void *))(v4 + 8 * (int)(v5 ^ (v3 + 2227))))(v1);
  return sub_1000F7084();
}

uint64_t sub_1000F677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,int a31,int a32)
{
  uint64_t v37 = (*(uint64_t (**)(void))(v35 + 8 * (v34 ^ (v34 + 2227))))(*(void *)(v33 - 0x1A44E0EB4FC706ALL));
  *(void *)(v33 - 0x1A44E0EB4FC706ALL) = a22;
  *a30 = a32;
  *(void *)(v36 - 160) = v32;
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * ((((((167 * (v34 ^ (v34 + 8)) - 1270) ^ 1) & 1) == 0)
                                              * (((167 * (v34 ^ (v34 + 8)) - 1304) | 0x41) ^ 9)) ^ (167
                                                                                                  * (v34 ^ (v34 + 8))))))(v37);
}

void sub_1000F681C()
{
  *(void *)(v1 - 176) = v0;
  JUMPOUT(0x1000F6850);
}

uint64_t sub_1000F68B8()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v1 - 1476338727) | 0x2411404) ^ (v3 + 168)) * (v0 == v2)) ^ v1)))();
}

uint64_t sub_1000F68FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v6 = v3 - 524;
  unsigned int v7 = 5 * ((v3 - 344459283) & 0xBEC9F7EF ^ (v4 - 57));
  BOOL v9 = v2 > 7 && (unint64_t)(a1 - a2) > 0x1F;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((v7 - 323) * v9) ^ v6)))();
}

uint64_t sub_1000F6950()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((213 * (v0 >= (v1 ^ 0x2EC ^ (v2 + 951) ^ ((v1 + 37868175) | 0xA8002040)))) ^ v1)))();
}

uint64_t sub_1000F69A0@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1533 * ((v2 & 0xFFFFFFE0) - (unint64_t)(v4 + v3 - 157) == -2050)) ^ (v4 + v3 - 1401))))();
}

uint64_t sub_1000F69F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v7 = *(_OWORD *)(a3 + a2 + 16);
  uint64_t v8 = (_OWORD *)(a1 + a2);
  *uint64_t v8 = *(_OWORD *)(a3 + a2);
  v8[1] = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 == a2) * v5) ^ v4)))();
}

uint64_t sub_1000F6A20()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + ((v2 - 2109649952) | 0x2800A044) - 2214) * (v0 != v1)) | v2)))();
}

uint64_t sub_1000F6A5C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((194 * (((v1 - 1707 - v2 + 1864 + ((v1 - 1952) | 0x319) + 1438517303) & v0) == 0)) ^ (v1 - 1707))))();
}

uint64_t sub_1000F6AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v2) = *(void *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v4 ^ 3 ^ (v5 + 941)) & v3) - 8 != v2) * ((((v4 ^ 3) - 828) | 0x201) - 602)) | v4 ^ 3)))();
}

uint64_t sub_1000F6AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + v5) = *(void *)(a2 + v5);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 != v5) * v4) | v2)))();
}

uint64_t sub_1000F6B1C()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 ^ (v3 + 469) ^ (v3 - 819)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1000F6B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + v2) = *(unsigned char *)(a2 + v2);
  return (*(uint64_t (**)(void))(v6 + 8 * ((44 * (v2 + 1 == v3)) ^ (v5 + v4 - 1074))))();
}

uint64_t sub_1000F6B7C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v3 + ((v1 + 117195770) & 0xF903BBFF) - 982) ^ (v3 + 26)) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_1000F6BC8()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + v3 + ((v0 - 925) | 0x500) - 1337 - 225) * (v1 > 7)) ^ v0)))();
}

uint64_t sub_1000F6C04()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 ^ (v2 - 711) ^ (v2 - 13)) * (v0 > 0x1F)) ^ v1)))();
}

uint64_t sub_1000F6C34()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((247
                                * (v0 < ((v1 - 278529498) & 0xBADBF4E6 ^ (v2 + 950) ^ (v1 - 1783889306) & 0x6A53FBFA))) ^ (v1 + 300))))();
}

uint64_t sub_1000F6C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v8 = (v4 + (v3 ^ (v6 + 210)) + 1518) & (v2 - 1);
  long long v9 = *(_OWORD *)(a2 + v8 - 15);
  long long v10 = *(_OWORD *)(a2 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((4 * ((v2 & 0xFFFFFFE0) == 32)) | (8 * ((v2 & 0xFFFFFFE0) == 32)) | (v5 + v3 - 1468))))();
}

void sub_1000F6CF8()
{
}

uint64_t sub_1000F6D04()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ (v0 == v1)) & 1) == 0) * (((v2 - 285) | 0x80) - 147)) ^ v2)))();
}

uint64_t sub_1000F6D38()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39
                                * ((v0 & 0x18) == ((v1 - v2 + 2046) ^ 0xFFFFFFFF55BE0820)
                                                + (v1 + 729))) ^ v1)))();
}

uint64_t sub_1000F6D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 - 7 + (~v2 + v3)) = *(void *)(a2 - 7 + (~v2 + v3));
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 - (v3 & 0xFFFFFFF8) == -8) * ((v4 + 415) ^ 0x189)) ^ v4)))();
}

uint64_t sub_1000F6DD4(uint64_t a1, int a2, unsigned int a3, uint64_t a4)
{
  *(void *)(v6 + a3) = *(void *)(v5 + a3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a4 == 0) * a2) ^ v4)))();
}

uint64_t sub_1000F6E04()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 + v0 + 902 - 2685) * (v2 == v1)) ^ v0)))();
}

uint64_t sub_1000F6E34()
{
  return v0();
}

uint64_t sub_1000F6E3C()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(_DWORD *)(v1 - 0x1A44E0EB4FC7062) = (*(_DWORD *)(v0 - 132) ^ 0xEE787FFD)
                                        + 2108663803
                                        + ((2 * *(_DWORD *)(v0 - 132)) & 0xDCF0FFFA);
  *(_DWORD *)(v1 - 0x1A44E0EB4FC705ELL) = 0;
  return sub_1000F7024();
}

uint64_t sub_1000F6EA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v6 = v2 - 1;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * (v6 != 0)) | (8 * (v6 != 0))) ^ (v4 + v3 - 763))))();
}

uint64_t sub_1000F6ED8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 == 0x1A44E0EB4FC706ALL) ^ ((v0 | 0xAC) - 35)) & 1)
                                     * (((v0 | 0x1AC) - 1438518696) ^ 0xAA41F45E)) ^ (v0 | 0x1AC))))();
}

uint64_t sub_1000F6F3C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((*(void *)(v1 - 0x1A44E0EB4FC706ALL) == 0) ^ (a1 + 58)) & 1)
                                     * ((a1 - 1100091773) & 0xEBD3FFF7 ^ (v2 + 859))) ^ a1)))();
}

uint64_t sub_1000F6FA4@<X0>(int a1@<W8>)
{
  int v5 = (a1 - 1572753863) | 0x8004042;
  (*(void (**)(void))(v4 + 8 * (v5 ^ (v3 + 2227))))();
  *int v2 = 0;
  *(_DWORD *)(v1 - 0x1A44E0EB4FC7062) = 1814571000;
  *(_DWORD *)(v1 - 0x1A44E0EB4FC705ELL) = 0;
  uint64_t v6 = (*(uint64_t (**)(void *))(v4 + 8 * (v5 ^ (v3 + 2227))))(v2);
  return sub_1000F7024(v6);
}

uint64_t sub_1000F7024()
{
  uint64_t v7 = (*(uint64_t (**)(void, void, void))(v5 + 8 * (v0 ^ (v4 + 2322))))(*(unsigned int *)*(&off_1002E1E10 + v1 + v0 - 2209), *(void *)(v6 - 144), *(unsigned int *)(v6 - 132));
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v5 + 8 * ((1989 * (v2 == 0)) ^ (v1 + v0 - 1689)));
  *(void *)(v6 - 200) = v3;
  return v8(v7);
}

uint64_t sub_1000F7084()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((((v1 + 1500410679) & 0xFC4F9DEF) - 1379) * (v0 == 0)) ^ (v2 + v1 - 2108))))();
}

uint64_t sub_1000F70C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 - 1149634183) ^ (*v1 == 0)) & 1) == 0)
                                     * ((a1 - 1149634183) & 0xEEC7F55F ^ (v2 + 19))) ^ a1)))();
}

void sub_1000F7110()
{
  (*(void (**)(void))(v3 + 8 * (v1 ^ (v2 + 2227))))();
  *(void *)uint64_t v0 = 0;
  *(_DWORD *)(v0 + 8) = 912148809;
  *(_DWORD *)(v0 + 12) = 0;
  JUMPOUT(0x1000F714CLL);
}

uint64_t sub_1000F715C()
{
  return v0;
}

void sub_1000F719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2) {
    BOOL v5 = a3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F7250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29,void *a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  *a30 = 0;
  *a29 = 0;
  *a31 = 0;
  *a24 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, const char *, void *, void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, void *, _DWORD *, void *, void *, void *, uint64_t, uint64_t))(v34 + 8 * ((59 * (a1 == 0)) ^ 0x2D1)))(a1, a2, a3, a4, 992817389, 3302152146, a7, a8, a9, a10, "com.apple.adid", &unk_10031EEE8, &unk_10031EEEC, &unk_10031EE94, a15, a16, a17, a18, a19,
           a20,
           a21,
           &unk_10031EEF0,
           a23,
           a24,
           a25,
           a1,
           a27,
           &unk_10031EEEC,
           a29,
           a30,
           a31,
           &unk_10031EE98,
           a33,
           a34);
}

uint64_t sub_1000F7334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((38 * (v5 == (((v6 + 452984265) | 0x202D3005) ^ a5))) ^ v6)))();
}

uint64_t sub_1000F7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v7 = v5 + 76;
  int v8 = v7 ^ (a5 + 665);
  BOOL v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * (v7 ^ 0xA60)))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v9 * (v8 - 992815150 + 134 * (v7 ^ 0x36E) - 2677)) ^ v7)))();
}

uint64_t sub_1000F73E4(uint64_t a1)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1337481487;
  *(void *)(a1 + 12) = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 1645)))(4096, 1358311088);
  *(void *)a1 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 == 0) * ((v1 ^ 0x39B) - 200)) ^ v1)))();
}

uint64_t sub_1000F7444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_DWORD *)(v4 + 8) = v7 + 4096;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (((((14
                                                                                              * ((v5 + 1727) ^ 0x7D5)) ^ 0x3F6)
                                                                                            - 783)
                                                                                           * (v4 == 0)) | (v5 + 1727))))(a1, a2, a3, a4, 992817389, 3302152146);
}

uint64_t sub_1000F74BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v49 = *(_DWORD *)(v47 + 12) - 130544155;
  unsigned int v50 = *(_DWORD *)(v47 + 8) - 1468025646;
  BOOL v51 = v49 < 0xF8380DE1;
  BOOL v52 = v49 > v50;
  if (v51 != v50 < 0xF8380DE1) {
    unsigned __int8 v53 = v51;
  }
  else {
    unsigned __int8 v53 = v52;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (((((5 * (v46 ^ 0x3D)) ^ v53) & 1) * (55 * (v46 ^ 0x31C) - 162)) ^ v46)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

void sub_1000F754C(int a1@<W8>)
{
  int v5 = (v2 - 81) | 0x86;
  uint64_t v6 = *(void *)(v3 - 0x53F82AF96D6B682ELL);
  unsigned int v7 = ((2 * a1) & 0x6FBFFBDE) + (a1 ^ 0x37DFFDEF);
  *(unsigned char *)(v6 + v7 + (v5 ^ 0xC82002FF)) = 0;
  v7 -= 937426414;
  *(unsigned char *)(v6 + v7) = 0;
  *(unsigned char *)(v6 + v7 + 1) = 0;
  *(unsigned char *)(v6 + v7 + 2) = 1;
  *v1 += 4;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000F8D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((45 * (a39 != 0x53F82AF96D6B682ELL)) ^ v49)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1000F8D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  unsigned int v53 = (v50 + 1211070133) & 0xB7D087FE;
  unsigned int v54 = *(_DWORD *)(v51 - 0x53F82AF96D6B6822) - 1322609147;
  unsigned int v55 = *(_DWORD *)(v51 - 0x53F82AF96D6B6826) + 1634876658;
  BOOL v56 = v54 < (((v53 ^ 0x7F8) - 1322611214) ^ (v53 + 91));
  BOOL v57 = v54 > v55;
  if (v56 != v55 < 0xB12A9601) {
    BOOL v58 = v56;
  }
  else {
    BOOL v58 = v57;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((41 * v58) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1000F8E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  LODWORD(a43) = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * (int)((((v52 - 850) ^ (a5 - 181) ^ (a5 + 17)) * (v53 == 0x53F82AF96D6B682ELL)) ^ v52)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51);
}

uint64_t sub_1000F8E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v9 = ((2 * (a6 + v7 + 1620003779 + 2 * v6 - 1696)) & 0xFFF8B73C)
     + ((a6 + v7 + 1620003779 + 2 * v6 - 1696) ^ 0x7FFC5B9F)
     + 784619079;
  BOOL v10 = v9 < 0xAEC0B1E6;
  BOOL v11 = v9 > v6 + 1594382555;
  if ((v6 + 1594382555) < 0xAEC0B1E6 != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * ((28 * !v12) ^ (a6 + v7 - 981))))(784619079);
}

uint64_t sub_1000F8F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  LODWORD(a43) = v52;
  uint64_t v62 = (*(uint64_t (**)(void, uint64_t))(v54 + 8 * (v55 + 619)))(v53 + ((v55 + 1719611453) & 0x9980C9F7) + ((v55 - 1632) | 0x22) - 2147245270, 1120292948);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8 * ((v62 == 0) ^ v55)))(v62, v56, v57, v58, 992817389, 3302152146, v59, v60, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

void sub_1000F8FD4()
{
}

uint64_t sub_1000F9018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,_DWORD *a59,uint64_t a60)
{
  uint64_t v61 = (*(uint64_t (**)(void))(v60 + 8 * (a5 + a6)))(*(void *)(a57 - 0x53F82AF96D6B682ELL));
  *(void *)(a57 - 0x53F82AF96D6B682ELL) = a60;
  *a59 = a43;
  return sub_1000F9084(v61);
}

uint64_t sub_1000F9084@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v5 = *(void *)(v2 - 0x53F82AF96D6B682ELL);
  unsigned int v6 = ((v1 << (((v3 - 55) & 0xD7) + 44)) & 0x7FAFFDFE) + (v1 ^ 0x3FD7FEFF) - 1071120127;
  *(unsigned char *)(v5 + v6 + 1) = -32;
  *(unsigned char *)(v5 + v6 + 2) = -76;
  *(unsigned char *)(v5 + v6) = -49;
  *(unsigned char *)(v5 + v6 + 3) = 106;
  *a1 += 4;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((v3 + 1679218889) & 0x9BE923D7 ^ 0x786) & 1) == 0)
                                     * (13 * ((v3 + 1679218889) & 0x9BE923D7 ^ 0xB2) - 1280)) ^ (v3 + 1679218889) & 0x9BE923D7)))();
}

uint64_t sub_1000F915C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (((v54 & ~((17 * (v53 ^ 0x75C)) ^ (a39 == 0x53F82AF96D6B682ELL))) * ((v53 ^ 0x11E) - 1550)) ^ v53)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1000F91B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  unsigned int v57 = *(_DWORD *)(v55 - 0x53F82AF96D6B6822) + 58686617;
  unsigned int v58 = ((v54 + 1014413480) & 0xC389497F) - 1278797038 + *(_DWORD *)(v55 - 0x53F82AF96D6B6826);
  BOOL v59 = v57 < ((v54 + 866148595) & 0xCC5F9AFF) + 58686038;
  BOOL v60 = v57 > v58;
  if (v59 != v58 < 0x37F7C95) {
    BOOL v61 = v59;
  }
  else {
    BOOL v61 = v60;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * ((50 * v61) | v54)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1000F9280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  HIDWORD(a48) = v55;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (int)(((((v57 == 0x53F82AF96D6B682ELL) ^ (v56 - 1)) & 1) * (a6 + (v56 ^ (a5 + 1964)) - 2002)) ^ v56)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_1000F92E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v9 = ((2 * (2 * v6 + 1620004322)) & 0xFF73B31C) + ((2 * v6 + 1620004322) ^ 0xFFB9D98F) + 350686845;
  BOOL v10 = v9 < 0x14A0E80C;
  BOOL v11 = v9 > v6 - 991391999;
  if ((v6 - 991391999) < 0x14A0E80C != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((2982 * v12) ^ (a6 + v7 - 1299))))();
}

uint64_t sub_1000F9398@<X0>(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v2 - 0x53F82AF96D6B682ELL);
  unsigned int v6 = ((2 * a1) & 0xD7BE7BFE) + (a1 ^ 0x6BDF3DFF) - 1809792749;
  *(unsigned char *)(v5 + v6 + v3 - 337) = 0;
  *(unsigned char *)(v5 + v6 + 239) = 0;
  *(unsigned char *)(v5 + v6 + 240) = 0;
  *(unsigned char *)(v5 + v6 + 241) = 1;
  *v1 += 4;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((233 * ((v3 - 337) ^ 0xEC)) ^ 0x5D) + ((v3 - 517) | 0x501)) ^ (v3 - 337))))();
}

uint64_t sub_1000F958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (((a39 == 0x53F82AF96D6B682ELL) * (v57 ^ 0x59D ^ v57 ^ 0x13C ^ 0x491)) ^ v57)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1000F95E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unsigned int v61 = (((v58 - 604) | 0x608) ^ 0x16946541) + *(_DWORD *)(v59 - 0x53F82AF96D6B6822);
  unsigned int v62 = *(_DWORD *)(v59 - 0x53F82AF96D6B6826) - 958658141;
  BOOL v63 = v61 < v58 + 378822243;
  BOOL v64 = v61 > v62;
  if (v63 != v62 < 0x169462B2) {
    BOOL v65 = v63;
  }
  else {
    BOOL v65 = v64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((753 * v65) ^ v58)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1000F968C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  LODWORD(a44) = v59;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((4085 * (((v61 == 0x53F82AF96D6B682ELL) ^ (v60 + 4)) & 1)) ^ v60)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_1000F96E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unsigned int v9 = ((2 * (2 * v6 + 1620004322)) & 0x9F79FE9C)
     + ((2 * v6 + 1620004322) ^ 0x4FBCFF4F)
     + (((v7 & 0xFF3DBDED) - a5 + 1930) ^ 0x737EEADB);
  BOOL v10 = v9 < 0xC33BECA0;
  BOOL v11 = v9 > v6 + 1938002841;
  if ((v6 + 1938002841) < 0xC33BECA0 != v10) {
    BOOL v12 = v10;
  }
  else {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((2057 * v12) ^ (a6 + (v7 & 0xFF3DBDED) - 2075))))();
}

uint64_t sub_1000F9794@<X0>(_DWORD *a1@<X8>)
{
  int v6 = v3 ^ 0x764;
  unint64_t v7 = v5 - ((2 * v5) & 0xF99431D3CA63CC58) + 0x7CCA18E9E531E62CLL;
  uint64_t v8 = (unsigned char *)((((unint64_t)v1 << (v6 + 19)) & 0x1EFFD5FF2)
               + (v1 ^ 0x23FE2B3FF7FEAFF9)
               + *(void *)(v2 - 0x53F82AF96D6B682ELL)
               - 0x23FE2B3FF7FEAFF9);
  *uint64_t v8 = HIBYTE(v7) ^ 0x7C;
  v8[1] = BYTE6(v7) ^ 0xCA;
  v8[2] = BYTE5(v7) ^ 0x18;
  v8[3] = BYTE4(v7) ^ 0xE9;
  void v8[4] = ((v5 - ((2 * v5) & 0xCA63CC58) - 449714644) >> 24) ^ 0xE5;
  v8[5] = ((v5 - ((2 * v5) & 0xCA63CC58) - 449714644) >> 16) ^ 0x31;
  v8[6] = ((unsigned __int16)(v5 - ((2 * v5) & 0xCC58) - 6612) >> 8) ^ 0xE6;
  v8[7] = (v5 - ((2 * v5) & 0x58) + 44) ^ 0x2C;
  *a1 += 8;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v6 + 1299785425) & 0xB286DD7B ^ 0x9E ^ v6)))();
}

uint64_t sub_1000F9A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(v40 + 8 * (int)(((a39 == 0x53F82AF96D6B682ELL) * ((v39 + 2072) ^ 0x3B2D39EB ^ (a5 + 1780) ^ (5 * ((v39 + 2072) ^ 0x861)))) ^ (v39 + 2072))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0,
           a39);
}

uint64_t sub_1000F9AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v64 = (v63 - 635) ^ (a5 + 888);
  (*(void (**)(void))(v62 + 8 * (v63 + 542)))();
  (*(void (**)(void))(v62 + 8 * (v63 ^ 0xFEA)))();
  uint64_t v71 = (*(uint64_t (**)(uint64_t, void))(v62 + 8 * (v63 ^ 0xFFC)))(a11, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (((v71 != 0) * (v64 - 992815150 + ((v63 - 635) | 0x30) - 3430)) ^ v63)))(v71, v65, v66, v67, 992817389, 3302152146, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1000F9B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned __int8 v65 = v63 ^ (a5 + 104);
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v64 + 8 * (v63 ^ 0xDBC)))(a11, a1, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((((v65 ^ (v72 == 0)) & 1) * ((17 * (v63 ^ 0x4A5)) ^ 0x188)) ^ v63)))(v72, v66, v67, v68, 992817389, 3302152146, v69, v70, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

#error "1000F9CB0: call analysis failed (funcsize=42)"

uint64_t sub_1000F9CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = v8 - 1727;
  int v11 = 181 * ((v8 - 68324306) & 0x3F3FB3FF ^ (v5 - 3));
  BOOL v12 = v7 == *(void *)(v9 + 8 * (v10 - 493)) - 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * (((4
                                                                                            * ((v12 ^ v11) & 1)) & 0xF7 | (8 * ((v12 ^ v11) & 1))) ^ v10)))(a1, a2, a3, a4, a5, 3302152146);
}

uint64_t sub_1000F9D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = a6 + ((v30 + 1073689354) & 0xFB2DF8EF);
  uint64_t v32 = v27;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8 * (v30 + 1081)))(a27, v28);
  BOOL v33 = (*(uint64_t (**)(void))(v29 + 8 * (v30 + 1055)))() == v32;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v33 * (v31 - 1691)) ^ v30)))();
}

uint64_t sub_1000F9D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a6 + ((v9 + 36444165) | 0x39011029) + 329) * (v8 == v7)) ^ (v9 - 1715))))();
}

uint64_t sub_1000F9DD4@<X0>(int a1@<W5>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v24 = a2 + 743;
  int v25 = ((a2 + 743) ^ 0x4F1) - a1 + 2237;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8 * ((a2 + 743) ^ 0xDDF)))(a21, v21);
  BOOL v26 = (*(uint64_t (**)(void))(v23 + 8 * (v24 + 1055)))() == v22;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v26 * (v25 ^ 0x3B2D3E45 ^ (262 * (v24 ^ 0x4F1)))) ^ v24)))();
}

uint64_t sub_1000F9E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((a6 + ((v9 + 957152885) | 0x220306C) - 2117) ^ (v9 - 423651853) & 0x19406CF3)
                                * (v8 == v7)) ^ v9)))();
}

uint64_t sub_1000F9EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(uint64_t, uint64_t))(v29 + 8 * (v30 + 1081)))(a27, v27);
  BOOL v31 = (*(uint64_t (**)(void))(v29 + 8 * (v30 ^ 0xDE1u)))() == v28;
  return (*(uint64_t (**)(void))(v29 + 8 * ((v31 * ((v30 - 743) ^ 0x3EC)) ^ v30)))();
}

uint64_t sub_1000F9F2C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v3 + 992816865) ^ 0x3B2D33DB ^ (7 * (v3 ^ 0x2B9))) * (v2 == v1)) ^ v3)))();
}

uint64_t sub_1000F9F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v32 = v31 ^ (v27 + 817);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8 * (v31 + 1081)))(a27, v28);
  BOOL v33 = (*(uint64_t (**)(void))(v30 + 8 * (v31 + 1055)))() == v29;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v33 * (v32 ^ 0x3B2D3C34)) ^ v31)))();
}

uint64_t sub_1000F9FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1000FA938(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1000F9FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  unint64_t v38 = STACK[0x208];
  (*(void (**)(void))(v37 + 8 * (a5 ^ (a5 + 1893))))(*(void *)(STACK[0x208]
                                                                                            - 0xE22A8927A3C9258));
  *(void *)(v38 - 0xE22A8927A3C9258) = STACK[0x218];
  *(_DWORD *)STACK[0x210] = a37;
  JUMPOUT(0x1000FB740);
}

uint64_t sub_1000FA0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(a47 - 0xE22A8927A3C9250) = (a38 ^ 0x7FDE7DAB) - 268964865 + ((2 * a38) & 0xFFBCFB56);
  *(_DWORD *)(a47 - 0xE22A8927A3C924CLL) = 1241410955;
  return sub_1000FA938(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a65);
}

void sub_1000FA120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  unint64_t v42 = STACK[0x220];
  (*(void (**)(void))(v41 + 8 * (a5 ^ (a5 + 1893))))(*(void *)(STACK[0x220]
                                                                                            - 0xE22A8927A3C9258));
  *(void *)(v42 - 0xE22A8927A3C9258) = STACK[0x230];
  *(_DWORD *)STACK[0x228] = a41;
  LODWORD(STACK[0x238]) = 0;
  JUMPOUT(0x1000F7E5CLL);
}

uint64_t sub_1000FA17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  *(_DWORD *)(a45 - 0xE22A8927A3C9250) = (a47 ^ 0x6FFEF9FE) - 2658388 + ((a6 + a5 - 537007299) & (2 * a47));
  *(_DWORD *)(a45 - 0xE22A8927A3C924CLL) = 1241410955;
  return sub_1000FB0F4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000FA1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v39 + 8 * (v38 - 992815063)))(v40, v41, &a38);
  STACK[0x200] = v42;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8 * (((v42 != 0) * (v38 - 992813338)) ^ (v38 - 992815352))))(v42, v43, v44, v45, v46, 3302152146, v47, v48, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1000FA208@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 - 2050267004) ^ 0x85CB68A7 ^ (v1 - 2050267004) & 0x7A349774 ^ 7) * (a1 == 0)) ^ v1)))();
}

void sub_1000FA250(uint64_t a1@<X8>, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t))(v27 + 8 * (v25 + 1347)))(a1);
  void *v26 = 0;
  *a3 = 0;
  *(_DWORD *)(a25 + 40 * a18 + 36) = 0;
  JUMPOUT(0x1000FA2A0);
}

uint64_t sub_1000FA2D0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v2 == 0xE22A8927A3C9258) ^ (v0 + 88)) & 1)
                                     * ((v0 + 1563049628) & 0xA2D5BFFF ^ 0x50F)) ^ v0)))();
}

uint64_t sub_1000FA330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((a6 + ((a5 + ((v6 + 1668856151) & 0x9C8746BD) + 12583246) & 0xFF3FF7FD) - 2123)
                                     * (*(void *)(v8 - 0xE22A8927A3C9258) == 0)) ^ (v6 + 1668856151) & 0x9C8746BD)))();
}

uint64_t sub_1000FA39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  *uint64_t v39 = 0;
  *(_DWORD *)(v42 - 0xE22A8927A3C9250) = 1876322730;
  *(_DWORD *)(v42 - 0xE22A8927A3C924CLL) = 1241410955;
  uint64_t v43 = (*(uint64_t (**)(void *))(v41 + 8 * (v40 + a6)))(v39);
  return (*(uint64_t (**)(uint64_t))(v41
                                            + 8
                                            * (((((v40 - 50) & 0x7F ^ (a39 == 0x53F82AF96D6B682ELL) ^ 0xEC) & 1)
                                              * (((v40 - 1036569394) & 0x29B9F7F) - 1193)) ^ (v40 - 1036569394) & 0x29B9F7F)))(v43);
}

uint64_t sub_1000FA480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((*(void *)(v6 - 0x53F82AF96D6B682ELL) == 0) * ((v7 - 70 - a6 + 970) ^ (a5 - 7))) ^ (v7 - 70))))();
}

void sub_1000FA4C8()
{
  void *v1 = 0;
  *(_DWORD *)(v0 - 0x53F82AF96D6B6826) = 1337481487;
  *(_DWORD *)(v0 - 0x53F82AF96D6B6822) = 0;
  JUMPOUT(0x1000FA524);
}

uint64_t sub_1000FA578()
{
  int v4 = 171 * (v0 & 0xC35A7B7 ^ 0x303);
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * ((v0 & 0xC35A7B7u) + 1465)))();
  void *v3 = 0;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v4 - 2050267004) ^ 0x85CB68A7 ^ (v4 - 2050267004) & 0x7A349774 ^ 7)
                                                   * (*v1 == 0)) ^ v4)))(v5);
}

void sub_1000FA5F4()
{
}

uint64_t sub_1000FA674()
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 + 2029) ^ 0xEE6)))(24, 4101018099) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 * (((v2 + v0) ^ 0x3B2D3B26) + ((v0 + 2029) ^ 0x3F8))) ^ (v0 + 2029))))();
}

uint64_t sub_1000FA6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = 1876322730;
  *(void *)(a1 + 12) = 1241410955;
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8 * (v15 ^ 0xD1E)))(4096, 1358311088);
  *(void *)a1 = v17;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (((v17 == 0) * (v15 - 696 + ((2 * v15) ^ 0xF3C) - 2110)) ^ v15)))(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1000FA77C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((((v3 + v2 + 5393845) & 0xFFADB0ED) - 992817348) * (v0 != 0)) ^ v2)))();
}

uint64_t sub_1000FA7C0@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 - 349 + a1)))(v2);
  return sub_1000FA938(v4);
}

uint64_t sub_1000FA938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v31 = a6 + v27;
  (*(void (**)(uint64_t))(v29 + 8 * (a6 + v27 + 70)))(v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v27 ^ 0x3B2D39E8)))(a27);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((27 * (v28 != 0)) | (v31 - 123))))(v32);
}

uint64_t sub_1000FA994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(uint64_t))(v74 + 8 * v75))(v72);
  return (*(uint64_t (**)(void))(v74 + 8 * ((15 * (a72 != 0)) ^ (v73 - 1261))))();
}

uint64_t sub_1000FA9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v9 = (*(uint64_t (**)(void))(v7 + 8 * (a6 + v6 + 70)))();
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * (((v8 == v6 - 992862393) * ((v6 - 992816798) ^ 0xF55)) ^ (v6 - 992815916))))(v9);
}

uint64_t sub_1000FAA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  unsigned int v50 = ((v48 + 992965294) & 0xFFFDBBEF) - a5 + 593;
  a34 = 0;
  a47 = 0;
  a45 = 0xE22A8927A3C9258;
  uint64_t v51 = (*(uint64_t (**)(void, void, void, uint64_t *, int *))(v47 + 8 * (v48 + 1751)))(**(unsigned int **)(v49 + 8 * (v48 - 583)), *(void *)(a39 - 0x53F82AF96D6B682ELL), *(unsigned int *)(a39 - 0x53F82AF96D6B6822), &a34, &a47);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((30 * ((v51 ^ 0x7F5DEF89) - 889193728 + ((2 * v51) & 0xFEBBDF12) != (v50 ^ 0x5A5DE8DD))) ^ v48)))(v51, v52, v53, v54, v55, v56, v57, v58, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1000FAB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  BOOL v16 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v12 + 8 * (v11 ^ 0xB63)))(**(unsigned int **)(v15 + 8 * (v11 ^ 0x244)), a11, v13) == 0;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v16 * (v14 + ((v11 + 941956527) | 0x30810ED) - 398)) ^ v11)))();
}

uint64_t sub_1000FABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v53 = (*(uint64_t (**)(void, void, void, char *, int *))(v48 + 8 * (v47 ^ 0xB77)))(*v50, *v49, *v51, &a34, &a47);
  unsigned int v54 = (v53 ^ 0xEEDDEBCD) + 1535114940 + ((((v47 + 34340311) | 0x392130C5) ^ 0xE696E777) & (2 * v53));
  if (v54 == 1516104332) {
LABEL_6:
  }
    JUMPOUT(0x1000FB138);
  if (v54 != 1247668873)
  {
    int v57 = 2052531167 * (((v52 - 108) & 0xAC0229D1 | ~((v52 - 108) | 0xAC0229D1)) ^ 0x96776102);
    *(_DWORD *)(v52 - 104) = -1239432284 - v57;
    *(_DWORD *)(v52 - 100) = (v54 - ((2 * v54 + 725887726) & 0x25BEB83A) + 1216442772) ^ v57;
    (*(void (**)(uint64_t))(v48 + 18568))(v52 - 108);
    goto LABEL_6;
  }
  uint64_t v55 = *(uint64_t (**)(void))(v48
                            + 8
                            * ((110
                              * ((*(uint64_t (**)(uint64_t, uint64_t))(v48 + 18520))(24, 4101018099) != 0)) ^ 0x1B2));
  return v55();
}

uint64_t sub_1000FAFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v73 + 8 * ((15 * (a72 != 0)) ^ (v72 - 1261))))();
}

uint64_t sub_1000FB020()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 - 80777191) & 0x3FFDBEED ^ (v1 + 992816921)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_1000FB068@<X0>(int a1@<W5>, int a2@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 + 1753 + a1)))(v2);
  return sub_1000FB0F4(v4);
}

uint64_t sub_1000FB0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  int v51 = v47 - a6 + 1682;
  uint64_t v52 = (*(uint64_t (**)(void, uint64_t, void))(v48 + 8 * (v47 ^ 0xB33)))(**(unsigned int **)(v50 + 8 * (v47 ^ 0x233)), a34, a47);
  return (*(uint64_t (**)(uint64_t))(v48
                                            + 8
                                            * (((v49 == 0)
                                              * (((v51 - 2130254574) & 0x43CBEAEE ^ 0x203)
                                               + ((v51 - 2130254574) & 0x43CBEAEE ^ 0x5D5)
                                               - 475)) ^ (v51 - 2130254574) & 0x43CBEAEE)))(v52);
}

uint64_t sub_1000FB1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34
                                                                                                  + 8 * (((a33 == 0xE22A8927A3C9258) * ((13 * (v33 ^ 0x27A)) ^ (v33 + 854))) ^ v33)))(a1, a2, a3, a4, a5, a6, 3053556341);
}

uint64_t sub_1000FB200@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0xE22A8927A3C924CLL) + 90537754;
  unsigned int v4 = *(_DWORD *)(v2 - 0xE22A8927A3C9250) - 544374025;
  BOOL v5 = v3 < ((a1 - 268) ^ 0x4F63EA3Eu);
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x4F63ECA1) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((!v6 * (a1 - 1956)) ^ a1)))();
}

uint64_t sub_1000FB29C@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v6 = *(void *)(v5 - 0xE22A8927A3C9258);
  int v7 = (*(unsigned __int8 *)(v6 + (v3 + a1 + 1)) << (((a2 + 52) & 0xBF) + 113)) | (*(unsigned __int8 *)(v6 + (v3 + a1)) << (a2 + 109)) | (*(unsigned __int8 *)(v6 + (v3 + a1 + 2)) << 8) | *(unsigned __int8 *)(v6 + (v3 + a1 + 3));
  *uint64_t v2 = v3 + 4;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1774 * (v7 == 0)) ^ (a2 - 1036))))();
}

uint64_t sub_1000FB330()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 + 230) ^ 0x7E8) + 818) ^ 0x68C) * (v2 == 0xE22A8927A3C9258)) ^ (v0 + 230))))();
}

uint64_t sub_1000FB378()
{
  BOOL v4 = v0 - 1551494817 > (v1 + 2108560696);
  if ((v1 + 2108560696) < 0xED847EE2 != v0 - 1551494817 < ((v2 + 1063) ^ 0x10Bu) - 310085565) {
    BOOL v4 = v0 - 1551494817 < ((v2 + 1063) ^ 0x10Bu) - 310085565;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((242 * v4) ^ v2)))();
}

uint64_t sub_1000FB3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v33 = *(unsigned __int8 *)(v29 + (a7 + v28 + 6));
  _DWORD *v27 = v28 + 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (v30 ^ (53 * (v32 != 0xE22A8927A3C9258)))))(53, v33, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1000FB478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v12 = v10 + v9 + ((v8 + 897) ^ (a7 + 629));
  unsigned int v13 = v12 + 1862066372;
  unsigned int v14 = v7 - 14256479 + (v8 ^ 0x367);
  BOOL v15 = v12 > 0x91031F3B;
  BOOL v16 = v13 > v14;
  if (v14 < 0x6EFCE0C4 == v15) {
    BOOL v15 = v16;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((47 * !v15) ^ v8)))();
}

uint64_t sub_1000FB4F8(int a1)
{
  _DWORD *v1 = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v4 == 0xE22A8927A3C9258) ^ (a1 - 80)) & 1)
                                * ((a1 + 1574) ^ 0x667)) ^ a1)))();
}

uint64_t sub_1000FB544()
{
  BOOL v4 = v1 - 412460064 > (v0 - 1047371843);
  if ((v0 - 1047371843) < 0x3168C967 != v1 - 412460064 < ((v2 + 94) | 0x218u) + 828949192) {
    BOOL v4 = v1 - 412460064 < ((v2 + 94) | 0x218u) + 828949192;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((!v4 * (((v2 - 752) | 0x42) ^ 0x17E)) ^ v2)))();
}

uint64_t sub_1000FB5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v39 = (*(unsigned __int8 *)(v34 + a7 + v35 + (v36 ^ 0x102u) - 121) << (((v36 - 111) | 0x12) - 6)) | (*(unsigned __int8 *)(v34 + (a7 + v35 + 1)) << 16) | (*(unsigned __int8 *)(v34 + (a7 + v35 + 2)) << 8) | *(unsigned __int8 *)(v34 + (a7 + v35 + 3));
  uint64_t v40 = (v35 + 4);
  _DWORD *v33 = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (v36 ^ (229 * (v38 != 0xE22A8927A3C9258)))))(v39, v40, 229, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1000FB65C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = a1 + a2 + a7;
  unsigned int v11 = v10 + 1495197972;
  unsigned int v12 = v7 - 381124815 + 3 * (v8 ^ 0x70D);
  BOOL v13 = v10 > 0xA6E116EB;
  int v14 = v13 ^ (v12 < 0x591EE914);
  BOOL v15 = v11 > v12;
  if (v14) {
    BOOL v15 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v15 * ((v8 ^ 0x70D) + 26)) ^ v8)))();
}

void sub_1000FB6DC(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  _DWORD *v23 = v24;
  LODWORD(STACK[0x23C]) = 0;
  *a23 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8 * (a1 + 352)))(v25, 925082483);
  JUMPOUT(0x1000FB73CLL);
}

uint64_t sub_1000FB7F4()
{
  LODWORD(STACK[0x23C]) = v0;
  return sub_1000FA2D0();
}

uint64_t sub_1000FB804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  uint64_t v35 = (*(uint64_t (**)(void, uint64_t))(v34 + 8 * (v33 + 239)))(v32 - 2144798872 + 1103 * (v33 ^ 0x81Eu), 1120292948);
  STACK[0x230] = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (((v35 == 0) * (v33 - 2013)) ^ v33)))(v35, v36, v37, v38, v39, 3302152146, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1000FB870()
{
  LODWORD(STACK[0x238]) = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v3 ^ 0x959) + 102) ^ 0x216) * (v0 == 0)) ^ v3)))();
}

uint64_t sub_1000FB8A4@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((*v2 == 0) * (((a2 - a1 + 1784) ^ 0xFFFFFFF6) + a2 + 992816934)) ^ a2)))();
}

uint64_t sub_1000FB8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,unsigned int a47)
{
  *(void *)uint64_t v49 = 0;
  *(_DWORD *)(v49 + 8) = v52;
  *(_DWORD *)(v49 + 12) = v51;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v50 + 8 * (v47 ^ (v48 + 1893))))(v49);
  return sub_1000FB0F4(v53, v54, v55, v56, v57, -992815150, v58, v59, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1000FB988(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v30 = v28 + 133;
  uint64_t v31 = (*(uint64_t (**)(void, uint64_t))(v29 + 8 * (v28 + 432)))(((v28 - 1172) ^ 0x90089486) + a2, 1120292948);
  STACK[0x218] = v31;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((v31 == 0) * ((v30 ^ 0x7A9) - 56)) | v30)))(v31, v32, v33, v34, 992817389, 3302152146, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1000FBA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + (v8 ^ (a5 + 317)) + (v8 ^ 0x226) - 2449) * (v6 == 0)) ^ v8)))();
}

uint64_t sub_1000FBA38@<X0>(char a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((*v2 == 0) ^ (a2 - a1 - 34)) & 1)
                                * ((a2 - 8425460) & 0x3BADBFFF ^ 0x3B2D30E3)) | a2)))();
}

uint64_t sub_1000FBA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  (*(void (**)(void))(v28 + 8 * (v27 + a6)))();
  *(void *)a23 = 0;
  *(_DWORD *)(a23 + 8) = a20;
  *(_DWORD *)(a23 + 12) = 1241410955;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v27 ^ 0x3B2D3852)))(a23);
  return sub_1000FA938(v29, v30, v31, v32, v33, -992815150, v34, v35, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1000FBB0C(id a1, void *a2)
{
  uint64_t v2 = (uint64_t)*(&off_1002E1E10
                + ((9 * ((dword_10031DC58 + dword_10031DC80) ^ 0x7D)) ^ byte_10026A760[byte_10026B1D0[(9 * ((dword_10031DC58 + dword_10031DC80) ^ 0x7D))] ^ 0xC0])
                - 30);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1002E1E10
                + (byte_10026AC98[(byte_10026A878[(9 * ((dword_10031DC58 + v3) ^ 0x7D))
                                                                 - 8] ^ 0x19)
                                                 - 8] ^ (9 * ((dword_10031DC58 + v3) ^ 0x7D)))
                - 39);
  unint64_t v5 = (unint64_t)&v12[*(void *)(v4 - 4) ^ v3];
  uint64_t v6 = 1787074057 * v5 + 0x12143784A120E583;
  unint64_t v7 = 1787074057 * (v5 ^ 0xEDEBC87B5EDF1A7DLL);
  *(void *)(v2 - 4) = v6;
  *(void *)(v4 - 4) = v7;
  LOBYTE(v7) = 9 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x7D);
  int v8 = (char *)*(&off_1002E1E10
               + ((9 * ((dword_10031DC58 + dword_10031DC80) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 + dword_10031DC80) ^ 0x7D))] ^ 0xB1])
               - 189)
     - 4;
  uint64_t v9 = (*(uint64_t (**)(void *))&v8[8
                                            * (byte_10026AF94[(byte_10026AB70[v7] ^ 0x81)
                                                                             - 4] ^ v7)
                                            + 16984])(a2);
  unsigned __int8 v10 = 9 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)(v2 - 4)) ^ 0x7D);
  unsigned int v11 = *(void (**)(uint64_t))&v8[8
                                          * (byte_10026A664[(byte_10026B0DC[v10 - 12] ^ 0x1A) - 4] ^ v10)
                                          + 16440];

  v11(v9);
}

void sub_1000FBD04()
{
  uint64_t v0 = (uint64_t)*(&off_1002E1E10
                + ((9 * ((dword_10031DC58 - qword_10031DC88) ^ 0x7D)) ^ byte_10026A660[byte_10026B0D0[(9 * ((dword_10031DC58 - qword_10031DC88) ^ 0x7D))] ^ 0x92])
                - 204);
  unint64_t v1 = (unint64_t)&v4 ^ qword_10031DC88 ^ *(void *)(v0 - 4);
  unint64_t v2 = (1787074057 * v1) ^ 0xEDEBC87B5EDF1A7DLL;
  unint64_t v3 = 1787074057 * (v1 ^ 0xEDEBC87B5EDF1A7DLL);
  qword_10031DC88 = v2;
  *(void *)(v0 - 4) = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1000FBE20()
{
  (*(void (**)(void))(v1 + 17912))();
  *(void *)(v0 + 8) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (*(void *)(v0 + 24) == 0)) ^ 0x827)))();
}

uint64_t sub_1000FBE7C()
{
  *(_DWORD *)(v0 + 36) = 0;
  *(void *)uint64_t v0 = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((980 * ((v2 ^ 0xD7 ^ (*(void *)(v0 + 48) == 0)) & 1)) ^ v2)))();
}

uint64_t sub_1000FBEB8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(void *)(v1 + 64) == 0) * ((a1 + 3) ^ (a1 - 1169327030) ^ 0xBA4D845A)) ^ a1)))();
}

uint64_t sub_1000FBEF8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((127 * (*(void *)(v0 + 24) == 0)) ^ 0x827)))();
}

uint64_t sub_1000FBF44@<X0>(int a1@<W8>)
{
  unsigned int v3 = a1 + 1057;
  (*(void (**)(void))(v2 + 8 * (a1 ^ 0x902u)))();
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(void *)uint64_t v1 = 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((980 * ((v3 ^ 0xD7 ^ (*(void *)(v1 + 48) == 0)) & 1)) ^ v3)))();
}

uint64_t sub_1000FBF9C()
{
  (*(void (**)(void))(v1 + 8 * (v2 + 737)))();
  *(void *)(v0 + 48) = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(v0 + 64) == 0) * ((v2 - 466) ^ (v2 - 1169327499) ^ 0xBA4D845A)) ^ (v2 - 469))))();
}

uint64_t sub_1000FBFF4()
{
  (*(void (**)(void))(v2 + 8 * (v0 + 1203)))();
  *(void *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  *(void *)(v1 + 40) = 0;
  return 0;
}

uint64_t sub_1000FC028(__SecKey *a1, const UInt8 *a2, CFIndex length, UInt8 **a4, unsigned int *a5)
{
  CFErrorRef error = 0;
  CFDataRef v8 = CFDataCreate(0, a2, length);
  CFDataRef v9 = SecKeyCreateSignature(a1, kSecKeyAlgorithmECDSASignatureMessageX962SHA256, v8, &error);
  if (!v9)
  {
    uint64_t v14 = 4294925247;
    if (!v8) {
      return v14;
    }
    goto LABEL_8;
  }
  CFDataRef v10 = v9;
  unsigned int v11 = CFDataGetLength(v9);
  unsigned int v12 = (UInt8 *)malloc_type_malloc(v11, 0xF748375AuLL);
  if (v12)
  {
    BOOL v13 = v12;
    v17.length = CFDataGetLength(v10);
    v17.id location = 0;
    CFDataGetBytes(v10, v17, v13);
    uint64_t v14 = 0;
    *a4 = v13;
    *a5 = v11;
  }
  else
  {
    uint64_t v14 = 4294925268;
  }
  CFRelease(v10);
  if (v8) {
LABEL_8:
  }
    CFRelease(v8);
  return v14;
}

uint64_t sub_1000FC11C()
{
  uint64_t v7 = 0;
  CFDataRef v8 = &v7;
  uint64_t v9 = 0x3052000000;
  CFDataRef v10 = sub_1000FC31C;
  unsigned int v11 = sub_1000FC32C;
  uint64_t v12 = 0;
  int v0 = dispatch_semaphore_create(0);
  if (v0)
  {
    if (getenv("RunningTestSUInfoRefetch"))
    {
      v15[0] = @"IgnoreExistingCollection";
      v16[0] = +[NSNumber numberWithUnsignedChar:1];
      v16[1] = &__kCFBooleanTrue;
      v15[1] = @"scheduleCollectionForCurrentBuild";
      void v15[2] = @"NetworkTimeoutInterval";
      _DWORD v16[2] = &off_1002F2188;
      uint64_t v1 = (const __CFString **)v15;
      uint64_t v2 = (void **)v16;
      uint64_t v3 = 3;
    }
    else
    {
      CFStringRef v13 = @"scheduleCollectionForCurrentBuild";
      uint64_t v14 = &__kCFBooleanTrue;
      uint64_t v1 = &v13;
      uint64_t v2 = &v14;
      uint64_t v3 = 1;
    }
    +[NSDictionary dictionaryWithObjects:v2 forKeys:v1 count:v3];
    MAEPerformCollectionWithCompletion();
    dispatch_time_t v5 = dispatch_time(0, 70000000000);
    uint64_t v4 = 4294924355;
    if (!dispatch_semaphore_wait(v0, v5))
    {
      if (v8[5]) {
        uint64_t v4 = 4294924355;
      }
      else {
        uint64_t v4 = 0;
      }
    }
  }
  else
  {
    uint64_t v4 = 4294925268;
  }
  dispatch_release(v0);
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_1000FC304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000FC31C(uint64_t a1, uint64_t a2)
{
}

void sub_1000FC32C(uint64_t a1)
{
}

intptr_t sub_1000FC338(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000FC34C(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 32), *(const void **)(a2 + 32), 3);
  uint64_t v4 = *(const void **)(a2 + 40);

  _Block_object_assign((void *)(a1 + 40), v4, 8);
}

void sub_1000FC39C(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 8);
  uint64_t v2 = *(const void **)(a1 + 32);

  _Block_object_dispose(v2, 3);
}

uint64_t sub_1000FC3E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  unint64_t v5 = (qword_10031E668 - qword_10031E680) ^ (unint64_t)&v9;
  qword_10031E680 = 431200057 * v5 - 0x76B82A39AB17D7D3;
  qword_10031E668 = 431200057 * (v5 ^ 0xA5F8A63A3EE64495);
  unint64_t v6 = 444472921
     * ((((unint64_t)v10 | 0xEA735D22C64C6F32)
       - ((unint64_t)v10 | 0x158CA2DD39B390CDLL)
       + 0x158CA2DD39B390CDLL) ^ 0x6A6885817B3808DCLL);
  int v13 = v6 ^ 0x68D9B3A5;
  uint64_t v11 = a4;
  uint64_t v12 = (char *)sub_100239A60 + v6;
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  LOBYTE(v5) = 57 * ((qword_10031E668 + 57 * v5 + 45) ^ 0x95);
  char v7 = byte_100296A50[byte_100296950[v5] ^ 0xBB];
  v10[0] = v6 ^ a5;
  v10[1] = v6 ^ a3;
  ((void (*)(_DWORD *))*(&off_1002E1F70 + (v5 ^ v7) + 2071))(v10);
  return v14;
}

uint64_t sub_1000FC54C(uint64_t a1)
{
  uint64_t v1 = qword_10031E670 - (void)&v5 + qword_10031E668;
  qword_10031E670 = (431200057 * v1) ^ 0xA5F8A63A3EE64495;
  qword_10031E668 = 431200057 * (v1 ^ 0xA5F8A63A3EE64495);
  unint64_t v2 = 941074649
     * (((unint64_t)&v6 - 2 * ((unint64_t)&v6 & 0xBB02B8911101A284) - 0x44FD476EEEFE5D7CLL) ^ 0xBA845F7311C96DE0);
  char v7 = (char *)sub_1001AD0B4 + v2;
  uint64_t v8 = a1;
  char v3 = byte_100296650[byte_100296550[(57 * ((qword_10031E668 + qword_10031E670) ^ 0x95))] ^ 0x1E];
  int v9 = -804802556 - v2;
  ((void (*)(unsigned int *))*(&off_1002E1F70
                                        + ((57
                                                                         * ((qword_10031E668 + qword_10031E670) ^ 0x95)) ^ v3)
                                        + 2105))(&v6);
  return v6;
}

void sub_1000FC690()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 64) + 1448877107 * (v0 ^ 0x713B1D2A);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + v1 + 1321))(21504, 3184530223);
  *(void *)(v2 - 0x31B578D4EA47062FLL) = v3 + 0x73FCE2C07DC88EB7;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1000FC798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v16 = *(unsigned int *)(a14 + 80);
  BOOL v20 = v16 - v14 == (a7 ^ 0x184EFAC9)
     || (*(_DWORD *)(a14 + 32) ^ v14) == 842674963
     || *(_DWORD *)(a14 + 4) - v14 == 1149012013
     || *(_DWORD *)a14 + v14 == 41571260;
  *(_DWORD *)(*(void *)(a14 + 56) - 0x23371728A3D18504) = 867373565;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((16 * (((a7 - 94) ^ v20) & 1)) & 0xDF | (32 * (((a7 - 94) ^ v20) & 1))) ^ a7)))(a1, v16, a2, a3, a4, 4294924397, a5, a6, a8, a9, a10, a11, a12);
}

uint64_t sub_1000FC854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  int v17 = v15 & 0x6E03E3EB;
  uint64_t v18 = a15[9];
  uint64_t v19 = a15[5];
  int v20 = 23 * (v15 & 0x6E03E3EB ^ 0x1A4);
  BOOL v24 = v18 != 0x4E52AB80F767C04BLL
     && a15[6] != 0x3E93D6427590D1A8
     && v19 != 0x57414C243E4E466
     && a15[3] != 0x228E0CD37FCCF1ACLL;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * ((v24 * (v20 ^ 0x66)) ^ v17)))(v18, a2, v19, a4, a5, 4294924396, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1000FC904()
{
  int v1 = v0 + 416;
  *((_DWORD *)&STACK[0x8E0] + 0xD2AC % ((v1 + 233) ^ 0x7A0u)) = -539127609;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v1 | 8)))(4291543022);
}

uint64_t sub_1000FD094(uint64_t a1, int a2, int a3)
{
  LODWORD(STACK[0x1580]) = -539127609;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((4 * ((a2 ^ 0xDFDD90C6) < 0x1A0)) | (8 * ((a2 ^ 0xDFDD90C6) < 0x1A0))) ^ (a3 + 484))))(201772725);
}

uint64_t sub_1000FD188(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v15 = v10 + v14;
  int v16 = v12 + v9;
  int v17 = v11 + v8;
  unsigned int v18 = (((v17 - 1860105850) * (v17 - 1860105850)) ^ 0x67FFA1F6)
      + a8
      + v13
      + ((2 * (v17 - 1860105850) * (v17 - 1860105850)) & 0xCFFF43EC);
  unsigned int v19 = ((((v18 + 1883974460) % 0xFFFF) ^ 0xDFF6C9B7) + 537474633 + ((2 * ((v18 + 1883974460) % 0xFFFF)) & 0x1936E))
      % 0x190;
  unsigned int v20 = (v19 - 1015567631 - ((2 * v19) & 0x1E2)) ^ 0xC377AAF1;
  uint64_t v21 = 4
      * ((((194 * ((a8 + v13 - 666186447) % ((a3 + 44) ^ 0x2B8u))) & 0x166FE)
        + ((97 * ((a8 + v13 - 666186447) % ((a3 + 44) ^ 0x2B8u))) ^ 0xAEEFB37F)
        + 1360076589)
       % 0x55C);
  int v22 = *(_DWORD *)((char *)&STACK[0x8E0] + v21);
  uint64_t v23 = 4 * ((((194 * v20) & 0x6CFD2) + ((97 * v20) ^ 0x7CAB67E9) - 2091554109) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v21) = *(_DWORD *)((char *)&STACK[0x8E0] + v23);
  LODWORD(v21) = (v17
                + (((v16 - 368316048) * (v16 - 368316048)) ^ 0x5DBFCC3F)
                + ((2 * (v16 - 368316048) * (v16 - 368316048)) & 0xBB7F987E)
                + 862010696)
               % 0xFFFF;
  LODWORD(v21) = ((v21 ^ 0xDFFFFBDD) + 536871971 + ((2 * v21) & 0x1F7BA)) % 0x190;
  LODWORD(v21) = (v21 - 299422891 - ((2 * v21) & 0x2AA)) ^ 0xEE272B55;
  unsigned int v24 = ((v17 - 1860105850) % 0x190u - 1669107760 - ((2 * ((v17 - 1860105850) % 0x190u)) & 0x3A0)) ^ 0x9C836FD0;
  *(_DWORD *)((char *)&STACK[0x8E0] + v23) = v22;
  uint64_t v25 = 4 * ((((194 * v24) & 0x33EF76) + ((97 * v24) ^ 0xCFF9F7BB) + 805755633) % 0x55C);
  LODWORD(v23) = *(_DWORD *)((char *)&STACK[0x8E0] + v25);
  uint64_t v26 = 4 * ((((194 * v21) & 0xFE7DE) + ((97 * v21) ^ 0xBA27F3EF) + 1171840701) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v25) = *(_DWORD *)((char *)&STACK[0x8E0] + v26);
  unsigned int v27 = (v16 - 368316048) % 0x190u;
  unsigned int v28 = (((v15 - 32423687) * (v15 - 32423687)) ^ 0xFFFDEFFF)
      + v16
      + ((2 * (v15 - 32423687) * (v15 - 32423687)) & 0xFFFBDFFE);
  *(_DWORD *)((char *)&STACK[0x8E0] + v26) = v23;
  LODWORD(v26) = ((((v28 - 368180878) % 0xFFFF) ^ 0xFCF7F3FF) + 50859009 + ((2 * ((v28 - 368180878) % 0xFFFF)) & 0x1E7FE))
               % 0x190;
  uint64_t v29 = 4 * ((97 * ((v27 ^ 0xDFC755FF) + 2 * v27) + 897137933) % 0x55C);
  int v30 = *(_DWORD *)((char *)&STACK[0x8E0] + v29);
  uint64_t v31 = 4 * ((((194 * v26) & 0x1F7F6) + ((97 * v26) ^ 0x57D3FBFBu) - 1473456463) % 0x55C);
  *(_DWORD *)((char *)&STACK[0x8E0] + v29) = *(_DWORD *)((char *)&STACK[0x8E0] + v31);
  *(_DWORD *)((char *)&STACK[0x8E0] + v31) = v30;
  LODWORD(v25) = ((v15 - 32423687) % 0x190u - 907169436 - ((2 * ((v15 - 32423687) % 0x190u)) & 0x2C8)) ^ 0xC9EDB164;
  unsigned int v32 = (v10
       + v14
       + (((v18 + 1883974460) * (v18 + 1883974460)) ^ 0xEFD3F57F)
       + ((2 * (v18 + 1883974460) * (v18 + 1883974460)) & 0xDFA7EAFE)
       + 238898043)
      % 0xFFFF;
  unsigned int v33 = ((v32 ^ 0xE7F9A9BD) + 403068483 + ((2 * v32) & 0x1537A)) % 0x190;
  uint64_t v34 = 4 * ((((194 * v33) & 0x1FFBC) + ((97 * v33) ^ 0xFFEBFFDE) + 1364686) % 0x55C);
  LODWORD(v31) = *((_DWORD *)&STACK[0x8E0]
                 + (((194 * v25) & 0x1BEFF8) + ((97 * v25) ^ 0x79EDF7FCu) - 2045584720) % 0x55C);
  *((_DWORD *)&STACK[0x8E0] + (((194 * v25) & 0xFBBF2) + ((97 * v25) ^ 0xFF77DDF9) + 8975539) % 0x55C) = *(_DWORD *)((char *)&STACK[0x8E0] + v34);
  *(_DWORD *)((char *)&STACK[0x8E0] + v34) = v31;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + a3 - 46))();
}

void sub_1000FD728()
{
}

uint64_t sub_1000FD75C@<X0>(int a1@<W1>, int a2@<W8>)
{
  unsigned int v4 = *((_DWORD *)&STACK[0x8E0]
       + (((194 * (a2 ^ 0xDFDD90C7)) & 0xFB0EFDD4) + (v3 ^ 0x827950EA) + ((97 * (a2 ^ 0xDFDD90C7)) ^ 0x7D877EEA))
       % 0x55C) ^ 0xDFDD90C7;
  *((_DWORD *)&STACK[0x8E0] + (((194 * v4) & 0x77B3FFFE) + ((97 * v4) ^ 0x3BD9FFFF) - 1004049859) % 0x55C) = a2;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((106
                                * ((((a2 ^ 0xDFDD90C7) - 539127609 - ((2 * (a2 ^ 0xDFDD90C7) + 2) & 0xBFBB218E) + 1) ^ a1) > 0x18F)) ^ v3)))();
}

uint64_t sub_1000FD854(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, int a6, uint64_t a7, int a8)
{
  uint64_t v11 = 4
      * (v8
       + 392
       + v9 * a3
       + 1174305734
       - ((((v8 + 392 + v9 * a3 + 1174305734) * (unint64_t)a5) >> 32) >> 10) * a6);
  int v12 = dword_10028C030[(((2722 * (*(_DWORD *)(a7 + v11) ^ (a8 + 2))) & 0xB3C3F36E)
                       + ((1361 * (*(_DWORD *)(a7 + v11) ^ (a8 + 2))) ^ 0xD9E1F9B7)
                       + 639851674)
                      % 0x12E0] ^ 0x3BD5EEAA;
  int v13 = -1057164639 * v12 + 108114272 - ((33154370 * v12) & 0xCE362C0);
  int v14 = (8 * ((v13 ^ 0x671B160) * (v13 ^ 0x671B160) - ((2 * (v13 ^ 0x671B160) * (v13 ^ 0x671B160)) & 0x1231F276))
       + 1221052888) ^ 0x48C7C9D8;
  unsigned int v15 = v13 ^ 0x9AEE8CD7 ^ (v14 - ((2 * v14) & 0xE0145D40) - 267768154);
  int v16 = *(uint64_t (**)(void))(v10 + 8 * ((1928 * (v9 == 2113239739)) ^ v8));
  *(_DWORD *)(a7 + v11) = v15;
  return v16();
}

uint64_t sub_1000FD9A4@<X0>(unsigned int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  unsigned int v8 = (((v5 - 2002554811) ^ 0xE) - 2044738605 - ((((v5 - 2002554811) ^ 0xE) << (((a3 + 53) & 0xE3) + 30)) & 0xC3F87A6)) ^ 0x861FC3D3;
  unsigned int v9 = ((v8 * v4) & 0xE66FBEB6) + ((v8 * v3) ^ 0x7337DF5B) - 1932691722;
  int v10 = *(_DWORD *)(v6 + 4 * (v9 - (((v9 * (unint64_t)a1) >> 32) >> 10) * a2)) ^ 0x3BD5EEAA;
  int v11 = -1057164639 * v10 - 1946026974 - ((33154370 * v10) & 0x1803F844);
  unsigned int v12 = (8 * ((v11 ^ 0x8C01FC22) * (v11 ^ 0x8C01FC22) - ((2 * (v11 ^ 0x8C01FC22) * (v11 ^ 0x8C01FC22)) & 0x165C95BE))
       - 646818056) ^ 0xD97256F8;
  int v13 = *(uint64_t (**)(void))(v7 + 8 * ((783 * (v5 == 2002555226)) ^ a3));
  *((_DWORD *)&STACK[0x8E0] + (97 * v5 - 974195615) % 0x55Cu) = v11 ^ 0x3482C ^ (v12
                                                                               - ((2 * v12) & 0xC12F4E30)
                                                                               - 526932193);
  return v13();
}

uint64_t sub_1000FDB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = ((((v66 + 268320724) * (v66 + 458225857)) ^ 0xFFEF7FFB)
       - 1814883794
       + ((2 * (v66 + 268320724) * (v66 + 458225857)) & 0xFFDEFFF6))
      * (v66 + 458225857);
  *(_DWORD *)(*a66 + 4 * (v66 + 2085868788) - 0x73FCE2C201D7FF83) = ((2 * v69) & 0xE6FFFEAE)
                                                                                    + (v69 ^ 0xF37FFF57)
                                                                                    - ((2
                                                                                      * (((2 * v69) & 0xE6FFFEAE)
                                                                                       + (v69 ^ 0xF37FFF57))
                                                                                      - 505155680) & 0xBFBB218E)
                                                                                    + 1355778199;
  BOOL v70 = ((v67 - 1736) ^ 0x11ALL) + v66 == 3836746815;
  return (*(uint64_t (**)(void))(v68 + 8 * ((v70 | (4 * v70)) ^ v67)))();
}

uint64_t sub_1000FDC1C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,uint64_t a59,int a60)
{
  int v61 = (a1 - 265) | 0x821;
  uint64_t v62 = (*(uint64_t (**)(void, uint64_t))(v60 + 8 * (a1 + 1802)))((a9 + a6 + a5 - ((((a9 + a6 + a5) << (((a1 - 9) | 0x21) ^ 0x32)) - 504066612) & 0xA5D31920) - 1008479370) ^ 0x52E98C90, 0x100004077774924);
  BOOL v63 = (a5 - 1434326616) < 0xEEFE71D5;
  *(unsigned char *)(v62 + (a58 + a9 - a60 - 1250504941)) = *(unsigned char *)(a56
                                                                           - 0x57414C243E4E466
                                                                           + ((v61 - 1335) ^ 0xFFFFFFFFA6629527)
                                                                           + 1503488037);
  if ((a5 - 1434326616) >= 0xEEFE71D5) {
    BOOL v63 = (a5 - 1434326616) > 0xEEFE71D6;
  }
  return (*(uint64_t (**)(void))(v60 + 8 * (((2 * v63) | (8 * v63)) ^ v61)))();
}

void sub_1000FDD64()
{
}

uint64_t sub_1000FDD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v65 = (HIDWORD(a12) - 1195766940) < 0xD109093E;
  uint64_t v66 = (v64 + 1052);
  *(unsigned char *)(a1 + (a15 - 842674963)) = *(unsigned char *)(a64 - 0x4E52AB80F767C04BLL);
  if ((HIDWORD(a12) - 1195766940) >= 0xD109093E) {
    BOOL v65 = (HIDWORD(a12) - 1195766940) > 0xD109093F;
  }
  int v67 = *(uint64_t (**)(uint64_t, void, BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8 * (int)((90 * !v65) ^ v66));
  return v67(a1, v67, (HIDWORD(a12) - 1195766940) < 0xD109093E, a4, v66, a6, a7, a8, a9, a10, a11, a12);
}

void sub_1000FDE40()
{
}

uint64_t sub_1000FDE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v67 = (a15 - 905702699) < 0xFC3E45E8;
  unint64_t v68 = (((unint64_t)(((16 * v66) ^ 0x2E50u) + 547852043 > 0x20A7909B) << 32) | 0x20A7909B) - 547852443;
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a66 - 0x3E93D6427590D1A8 + v68)
                       - ((2 * *(unsigned char *)(a66 - 0x3E93D6427590D1A8 + v68)) & 0x99)
                       + 76;
  if ((a15 - 905702699) >= 0xFC3E45E8) {
    BOOL v67 = (a15 - 905702699) > 0xFC3E45E9;
  }
  int v69 = *(uint64_t (**)(uint64_t, void, BOOL, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8 * ((56 * v67) ^ (v66 + 1051)));
  return v69(a1, v69, (a15 - 905702699) > 0xFC3E45E9, a4, v68, a6, a7, a8, a9, a10, a11);
}

void sub_1000FDF1C()
{
}

uint64_t sub_1000FDF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2
                                                              + 8
                                                              * (int)((((145 * ((a3 + 248501742) & 0xF1302BE7 ^ 0x360)) ^ 0x329)
                                                                     * ((v4 ^ (v3 - 16)) > 0x1F)) ^ (a3 + 1059))))(a1, 76, 76);
}

uint64_t sub_1000FE120@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57,int a58,int a59)
{
  HIDWORD(v854) = v59;
  int v64 = a2 + 743;
  unsigned int v65 = *(unsigned __int8 *)(a1 + (v63 - 367584251));
  unsigned int v66 = ((((v63 - 367584251) ^ 1) - 312041437 - ((2 * ((v63 - 367584251) ^ 1)) & 0xDACD4046)) ^ 0xED66A023)
      + 146801712
      + ((v64 ^ 0x64E) & (2 * v63) ^ 0xF73FFBD2);
  unsigned int v67 = ((2 * v66) & 0x96FF3DEE) + (v66 ^ 0xCB7F9EF7);
  int v866 = *(unsigned __int8 *)(a1 + v67 + 880828682);
  int v867 = *(unsigned __int8 *)(a1 + v67 + 880828683);
  LODWORD(v857) = *(unsigned __int8 *)(a1 + v67 + 880828684);
  unsigned int v68 = *(unsigned __int8 *)(a1 + v67 + 880828685);
  int v864 = *(unsigned __int8 *)(a1 + v67 + 880828686);
  unsigned __int8 v865 = *(unsigned char *)(a1 + v67 + 880828687);
  int v69 = *(unsigned __int8 *)(a1 + v67 + 880828688);
  unsigned int v70 = *(unsigned __int8 *)(a1 + v67 + 880828689);
  unsigned int v71 = *(unsigned __int8 *)(a1 + v67 + 880828690);
  HIDWORD(v837) = v61 + (v62 ^ v61) - 2 * (((v62 ^ v61) + 2147483616) & (v61 + 4) ^ v62 & 4) - 32;
  HIDWORD(v856) = *(unsigned __int8 *)(a1 + v67 + 880828691);
  int v72 = *(unsigned __int8 *)(a1 + v67 + 880828692);
  unsigned int v73 = *(unsigned __int8 *)(a1 + v67 + 880828693);
  LODWORD(v856) = *(unsigned __int8 *)(a1 + v67 + 880828694);
  int v870 = *(unsigned __int8 *)(a1 + v67 + 880828695);
  unsigned int v74 = *(unsigned __int8 *)(a1 + v67 + 880828696);
  unsigned int v75 = *(unsigned __int8 *)(a1 + v67 + 880828697);
  unsigned int v76 = *(unsigned __int8 *)(a1 + v67 + 880828698);
  int v77 = *(unsigned __int8 *)(a1 + v67 + 880828699);
  unsigned int v78 = *(unsigned __int8 *)(a1 + v67 + 880828700);
  int v79 = *(unsigned __int8 *)(a1 + v67 + 880828701);
  int v863 = *(unsigned __int8 *)(a1 + v67 + 880828702);
  int v869 = *(unsigned __int8 *)(a1 + v67 + 880828703);
  int v80 = *(unsigned __int8 *)(a1 + v67 + 880828705);
  int v81 = *(unsigned __int8 *)(a1 + v67 + 880828706);
  unsigned int v82 = *(unsigned __int8 *)(a1 + v67 + 880828707);
  unsigned int v83 = *(unsigned __int8 *)(a1 + v67 + 880828708);
  unsigned int v84 = *(unsigned __int8 *)(a1 + v67 + 880828709);
  unsigned int v85 = *(unsigned __int8 *)(a1 + v67 + 880828710);
  HIDWORD(v855) = *(unsigned __int8 *)(a1 + v67 + 880828681);
  unsigned int v86 = *(unsigned __int8 *)(a1 + v67 + 880828711);
  LODWORD(v855) = v67 + 1248412963;
  LODWORD(v829) = *(unsigned __int8 *)(a1 + v67 + 880828704);
  HIDWORD(v851) = (v64 + 806484451) | 0x402C4681;
  int v87 = (v829 ^ v60) - ((HIDWORD(v851) - 1883129331) & (2 * (v829 ^ v60)));
  int v88 = (v83 ^ v60) - ((2 * (v83 ^ v60)) & 0x192);
  HIDWORD(v830) = v80;
  int v89 = ((((v80 ^ v60) - ((2 * (v80 ^ v60)) & 0x5C)) << 8) + 753479168) ^ 0x2CE92E00;
  int v90 = ((((v87 << 16) + 1667170304) ^ 0x635F0000)
       + 1555005748
       - ((2 * (((v87 << 16) + 1667170304) ^ 0x635F0000)) & 0x395E0000)) ^ 0x5CAF8134 | (v89
                                                                                       + 1411895700
                                                                                       - ((2 * v89) & 0x284FA200)) ^ 0x5427D194;
  unsigned int v91 = v90 - 866828276 - ((2 * v90) & 0x18AA8018);
  HIDWORD(a16) = v81;
  unsigned int v92 = v91 ^ 0xCC55400C | ((v81 ^ v60) - 1389239436 - ((2 * (v81 ^ v60)) & 0xE8)) ^ 0xAD31E374;
  unsigned int v848 = v92 - ((2 * v92) & 0x50BA9B8E) - 1470280249;
  unint64_t v835 = __PAIR64__(v86, v84);
  int v93 = (v84 ^ v60) + 10272742 - ((2 * v84) & 0x164);
  int v94 = (v82 ^ v60) - 1100985328 - ((2 * v82) & 0x20);
  unsigned int v95 = (((v848 << 8) ^ 0x5D4DC700) + 1169129742 - ((2 * ((v848 << 8) ^ 0x5D4DC700)) & 0x8B5F0200)) ^ 0x45AF810E | v94 ^ 0xBE604C10;
  int v96 = v95 + 546831969 - ((2 * v95) & 0x412FFCC2);
  unint64_t v831 = __PAIR64__(v76, v74);
  int v97 = (v74 ^ v60) - ((2 * (v74 ^ v60)) & 0x15A);
  LODWORD(v837) = v69;
  unint64_t v834 = __PAIR64__(v83, v70);
  int v98 = (v70 ^ v60) - ((2 * (v70 ^ v60)) & 0x2C);
  int v99 = ((((v69 ^ v60) - ((2 * (v69 ^ v60)) & 0x8E)) << 16) + 289865728) ^ 0x11470000;
  unsigned int v100 = (v99 - 81970115 - ((2 * v99) & 0x763A0000)) ^ 0xFB1D3C3D | ((((v98 << 8) - 670034432) ^ 0xD8101600)
                                                                   - 90447704
                                                                   - ((2 * (((v98 << 8) - 670034432) ^ 0xD8101600)) & 0x7537C000)) ^ 0xFA9BE0A8;
  HIDWORD(a42) = v100 + 1968400181 - ((2 * v100) & 0x6AA6CE6A);
  LODWORD(v830) = v72;
  int v101 = (v72 ^ v60) - ((2 * (v72 ^ v60)) & 0x1B2);
  int v102 = (v75 ^ v60) - ((2 * (v75 ^ v60)) & 0x38);
  unsigned int v103 = ((((v97 << 16) + 229441536) ^ 0xDAD0000)
        - 1642230756
        - ((2 * (((v97 << 16) + 229441536) ^ 0xDAD0000)) & 0x3C3A0000)) ^ 0x9E1D8C1C | ((((v102 << 8) - 731964416) ^ 0xD45F1C00)
                                                                                      + 709694357
                                                                                      - ((2
                                                                                        * (((v102 << 8) - 731964416) ^ 0xD45F1C00)) & 0x549A2600)) ^ 0x2A4D1395;
  unsigned int v860 = v103 - 439894714 - ((2 * v103) & 0x4B8F7A8C);
  unsigned int v104 = v860 ^ 0xE5C7BD46 | ((v76 ^ v60) + 1632768102 - ((2 * (v76 ^ v60)) & 0xCC)) ^ 0x61521066;
  unsigned int v105 = ((((v93 << 8) + 117760) ^ 0x9CC1B200) - 495093611 - ((2 * (((v93 << 8) + 117760) ^ 0x9CC1B200)) & 0x44FAF000)) ^ 0xE27D7895 | ((((v88 << 16) + 1539899392) ^ 0x5BC90000) + 1054918123 - ((2 * (((v88 << 16) + 1539899392) ^ 0x5BC90000)) & 0x7DC00000)) ^ 0x3EE0C5EB;
  unsigned int v871 = v105 + 1877118556 - ((2 * v105) & 0xDFC51CB8);
  unsigned int v106 = v871 ^ 0x6FE28E5C | ((v85 ^ v60) - 1365616199 - ((2 * (v85 ^ v60)) & 0x172)) ^ 0xAE9A59B9;
  unsigned int v861 = v106 - ((2 * v106) & 0xBFA7BB8C) - 539763258;
  unsigned int v107 = (((v104 + (~(2 * v104) | 0xEA89B7)) << 8) - 1967446784) ^ 0x8ABB2400;
  unint64_t v832 = __PAIR64__(v75, v73);
  int v108 = (v73 ^ v60) - ((2 * (v73 ^ v60)) & 0xA2);
  LODWORD(v854) = v77;
  int v109 = (v77 ^ v60) + 964097985 - ((2 * (v77 ^ v60)) & 0x182);
  unsigned int v110 = (v107 + 1130444111 - ((2 * v107) & 0x86C26A00)) ^ 0x4361354F | v109 ^ 0x3976F7C1;
  LODWORD(a41) = v110 - 350355854 - ((2 * v110) & 0xD63BFCE4);
  unint64_t v833 = __PAIR64__(v71, v68);
  int v111 = (v68 ^ v60) - ((2 * (v68 ^ v60)) & 0x1CC);
  unint64_t v828 = __PAIR64__(v82, v78);
  unsigned int v112 = (v78 ^ v60) - ((2 * (v78 ^ v60)) & 0xFFFFFFF3);
  unsigned int v113 = (((v96 << 15) ^ 0xFF308000) - 1891050501 - ((2 * ((v96 << 15) ^ 0xFF308000)) & 0x1E910000)) ^ 0x8F48DBFB | (v91 >> 9) ^ 0x662AA0;
  HIDWORD(v829) = v79;
  int v114 = (v79 ^ v60) - ((2 * (v79 ^ v60)) & 0x16E);
  unsigned int v115 = HIDWORD(a42) ^ 0x75536735 | ((v71 ^ v60) - 1216775990 - ((2 * (v71 ^ v60)) & 0x194)) ^ 0xB77978CA;
  unsigned int v116 = (((v115 - ((2 * v115) & 0x699F72)) << 8) - 1261455104) ^ 0xB4CFB900;
  unsigned int v117 = (BYTE4(v856) ^ v60) - 1653435161 + (~(2 * (HIDWORD(v856) ^ v60)) | 0xFFFFFE31) + 1;
  unsigned int v118 = (v116 + 1585708097 - ((2 * v116) & 0xBD07F800)) ^ 0x5E83FC41 | v117 ^ 0x9D7294E7;
  unsigned int v119 = v118 + 504319232 - ((2 * v118) & 0x3C1E9AFE) + 127;
  unint64_t v836 = __PAIR64__(v85, v65);
  int v120 = (v65 ^ v60) - ((2 * v65) & 4);
  unsigned int v121 = (((v861 << 8) ^ 0xD3DDC600) + 1454523172 - ((2 * ((v861 << 8) ^ 0xD3DDC600)) & 0xAD648600)) ^ 0x56B24324 | ((v86 ^ 0x4C) - 799191184 - ((2 * (v86 ^ 0x4C)) & 0xE0)) ^ 0xD05D4F70;
  unsigned int v122 = v121 + 1859689437 - ((2 * v121) & 0xDDB137BA);
  unsigned int v123 = ((((v101 << 16) - 1931935744) ^ 0x8CD90000)
        + 192172610
        - ((2 * (((v101 << 16) - 1931935744) ^ 0x8CD90000)) & 0x16E80000)) ^ 0xB745242 | ((((v108 << 8) + 1881493760) ^ 0x70255100)
                                                                                        + 535673511
                                                                                        - ((2
                                                                                          * (((v108 << 8) + 1881493760) ^ 0x70255100)) & 0x3FDB7400)) ^ 0x1FEDBAA7;
  unsigned int v124 = v123 - 1570640858 - ((2 * v123) & 0x44C3D84C);
  LODWORD(v859) = v96;
  HIDWORD(v125) = v94 ^ 0x10;
  LODWORD(v125) = v96 ^ 0x2097FE00;
  int v858 = v125 >> 7;
  int v126 = v124 ^ 0xA261EC26 | ((v856 ^ 0x4C) - 508721957 - ((2 * (v856 ^ 0x4C)) & 0x1B6)) ^ 0xE1AD84DB;
  int v127 = (((v126 + 5559384 - ((2 * v126) & 0xA9B5B6)) << 8) + 426752) ^ 0x54DADB00;
  int v128 = (-65536 * (v857 ^ 0x4C) + 83820544) ^ 0x4FF0000;
  unsigned int v129 = ((((v111 << 8) - 591534592) ^ 0xDCBDE600)
        + 403975482
        - ((2 * (((v111 << 8) - 591534592) ^ 0xDCBDE600)) & 0x30285A00)) ^ 0x18142D3A | (v128
                                                                                       - 164811462
                                                                                       - ((2 * v128) & 0x6C5A0000)) ^ 0xF62D2D3A;
  int v130 = v129 - 1506306371 - ((2 * v129) & 0x4C6F2D7A);
  int v131 = (v870 ^ 0x4C) - 958722577 - ((2 * (v870 ^ 0x4C)) & 0x1DE);
  unsigned int v132 = ((v127 - 1863994560 - ((2 * v127) & 0x21CB6600)) ^ 0x90E5B340 | v131 ^ 0xC6DB0DEF)
       - 475864448
       - ((2 * ((v127 - 1863994560 - ((2 * v127) & 0x21CB6600)) ^ 0x90E5B340 | v131 ^ 0xC6DB0DEF)) & 0xC745C544);
  unsigned int v852 = (((v96 << 14) ^ 0xFF984000) - 1800430558 - ((2 * ((v96 << 14) ^ 0xFF984000)) & 0x295F0000)) ^ 0x94AF9C22 | (v91 >> 10) ^ 0x331550;
  HIDWORD(v125) = v117 ^ 0xFFFFFFE7;
  LODWORD(v125) = v119 ^ 0x1E0F4D00;
  unsigned int v133 = (((v120 << 16) - 385744896) ^ 0xE9020000)
       + 196175249
       - ((2 * (((v120 << 16) - 385744896) ^ 0xE9020000)) & 0x17620000);
  int v134 = ((((BYTE4(v855) ^ 0x4C) - ((2 * (HIDWORD(v855) ^ 0x4C)) & 0x16A)) << 8) + 563590400) ^ 0x2197B500;
  int v135 = (v134 + 871461931 - ((2 * v134) & 0x67E2E800)) ^ 0x33F1742B | v133 ^ 0xBB16591;
  unsigned int v136 = (((v96 << 13) ^ 0xFFCC2000) - 1277271007 - ((2 * ((v96 << 13) ^ 0xFFCC2000)) & 0x67BCC000)) ^ 0xB3DE6421 | (v91 >> 11) ^ 0x198AA8;
  unsigned int v137 = v130 ^ 0xA63796BD | ((v864 ^ 0x4C) + 1556948323 - ((2 * (v864 ^ 0x4C)) & 0xC6)) ^ 0x5CCD2563;
  unsigned int v138 = (((v137 + 9976910 - ((2 * v137) & 0x307890)) << 8) - 1536) ^ 0x983C4800;
  int v139 = ((((v863 ^ 0x4C) - ((2 * (v863 ^ 0x4C)) & 0x9C)) << 8) + 1477463552) ^ 0x58104E00;
  unsigned int v140 = ((v869 ^ 0x4C) + 308336830 - ((2 * (v869 ^ 0x4C)) & 0x17C)) ^ 0x1260D8BE | (v139 - 472269687 - ((2 * v139) & 0x47B37800)) ^ 0xE3D9BC89;
  unsigned int v141 = ((((v114 << 16) - 1028194304) ^ 0xC2B70000)
        - 1717395297
        - ((2 * (((v114 << 16) - 1028194304) ^ 0xC2B70000)) & 0x33440000)) ^ 0x99A2A09F | ((((v112 << 24) + 2030043136) ^ 0x79000000)
                                                                                         - 523099187
                                                                                         - ((((v112 << 24) + 2030043136) ^ 0x79000000) >> 29 << 30)) ^ 0xE0D223CD;
  int v142 = v141 + 244930506 - ((2 * v141) & 0x1D32AF94);
  unsigned int v143 = (((v119 << 14) ^ 0xD35FC000) + 285486128 - ((2 * ((v119 << 14) ^ 0xD35FC000)) & 0x22080000)) ^ 0x11042C30 | (HIDWORD(a42) >> 10) ^ 0x1D54D9;
  unsigned int v144 = v142 ^ 0xE9957CA | (v140 - 626251637 - ((2 * v140) & 0x35585116)) ^ 0xDAAC288B;
  unsigned int v145 = v144 + 1762465241 - ((2 * v144) & 0xD21A2BB2);
  unsigned int v146 = (((v122 << 13) ^ 0x137BA000) + 1551318139 - ((2 * ((v122 << 13) ^ 0x137BA000)) & 0xB8EE4000)) ^ 0x5C773C7B | (v871 >> 11) ^ 0xDFC51;
  LODWORD(v842) = v119;
  int v147 = ((v119 >> 3) ^ 0x83C0E9A7)
       + ((v848 >> 2) ^ 0x4DF9A9CE)
       + ((v119 >> 2) & 0x3FFDFFEE ^ 0xF87E2CB1)
       + ((v125 >> 7) ^ 0x9D7ACF5E)
       + ((2 * (v125 >> 7)) & 0x3AF59EBC)
       + ((2 * (v848 >> 2)) & 0x4FDDF57E ^ 0x440CA462)
       + (v143 ^ 0xD5FD36BF)
       + ((2 * v143) & 0xABFA6D7E)
       + (v136 ^ 0x1AD50405)
       + (v113 ^ 0xA2C5D4E0)
       - ((2 * v136) & 0xCA55F7F4);
  unsigned int v148 = v147
       - ((2 * v113) & 0xBA74563E)
       + 2
       - ((2 * (v147 - ((2 * v113) & 0xBA74563E) + 2) - 839234452) & 0xA5A6FA4A)
       - 1177509029;
  HIDWORD(v125) = v131 ^ 0xFFFFFFEF;
  LODWORD(v125) = (v132 + 34) ^ 0xE3A2E280;
  int v149 = v125 >> 7;
  unsigned int v150 = (((v122 << 15) ^ 0x4DEE8000) + 2107101167 - ((2 * ((v122 << 15) ^ 0x4DEE8000)) & 0xFB2F0000)) ^ 0x7D97CFEF | (v871 >> 9) ^ 0x37F147;
  unsigned int v151 = (v138 - 30776529 - ((2 * v138) & 0xFC54C600)) ^ 0xFE2A632F | v865 ^ 0x4C;
  int v152 = v151 - 1554110436 - ((2 * v151) & 0x46BC5038);
  unsigned int v153 = (((a41 << 14) ^ 0x7F9C8000) - 2004400843 - ((2 * ((a41 << 14) ^ 0x7F9C8000)) & 0x110E8000)) ^ 0x88874535 | (v860 >> 10) ^ 0x3971EF;
  int v154 = ((v122 << 14) ^ 0x26F74000) - 1374211634 - ((2 * ((v122 << 14) ^ 0x26F74000)) & 0x5C2E0000);
  HIDWORD(v125) = v109 ^ 0xFFFFFFC1;
  LODWORD(v125) = a41 ^ 0xEB1DFE00;
  unsigned int v155 = ((((v132 + 34) << 14) ^ 0xB8A88000) + 486559010 - ((2 * (((v132 + 34) << 14) ^ 0xB8A88000)) & 0x3A008000)) ^ 0x1D004D22 | (v124 >> 10) ^ 0x28987B;
  int v849 = v152;
  unsigned int v156 = (v152 ^ 0x718D5539 ^ v148)
       + (v152 ^ 0xA35E281C)
       - 2075197952
       - ((2 * ((v152 ^ 0x718D5539 ^ v148) + (v152 ^ 0xA35E281C))) & 0x89DFCCE)
       + 103;
  int v157 = ((v125 >> 7) ^ 0x7BEC6FEB)
       + ((2 * (v125 >> 7)) & 0xF7D8DFD6)
       + (v153 ^ 0x85240901)
       - ((2 * v153) & 0xF5B7EDFC)
       + 1;
  HIDWORD(v125) = v156 ^ 0x6FE67;
  LODWORD(v125) = v156 ^ 0x84480000;
  int v158 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x371C8EB8);
  unsigned int v159 = (v146 ^ 0x7FFFDB6F) + (v150 ^ 0xFFE8FEFB) + ((2 * v150) & 0xFFD1FDF6) + ((2 * v146) & 0xFFFFB6DE);
  HIDWORD(v125) = v156 ^ 0xFE67;
  LODWORD(v125) = v156 ^ 0x844E0000;
  unsigned int v160 = v157 - ((2 * v157 - 35713498) & 0xAF161FD4) + 1450874621;
  int v161 = v158 + 462309212;
  int v162 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x76957D8) - 2085311508;
  unsigned int v163 = (((v132 + 34) >> 3) ^ 0x83BBA3A8)
       + (((v132 + 34) >> 2) & 0x3F9FFFF8 ^ 0x3888B8A8)
       + (v149 ^ 0xDE6FFFAB)
       + ((2 * v149) & 0xBCDFFF56)
       + (v155 ^ 0xDFEAFF77)
       + ((2 * v155) & 0xBFD5FEEE)
       - 1579876126
       + ((v159 - ((2 * v159 + 3033900) & 0x477F472C) + 601278764) ^ (v861 >> 2) ^ 0x944B54E7);
  int v164 = (2 * v163) & 0x2A6A2C4;
  unsigned int v165 = v163 + 22237538;
  HIDWORD(v125) = v156 ^ 0x2FE67;
  LODWORD(v125) = v156 ^ 0x844C0000;
  int v166 = v125 >> 18;
  unsigned int v167 = v165 - v164;
  HIDWORD(v125) = v145 ^ 0x115D9;
  LODWORD(v125) = v142 ^ 0xE980000;
  int v168 = v125 >> 18;
  unsigned int v169 = (v161 ^ (v156 >> 10) ^ v162 ^ 0x981BFF0F) + (v160 ^ (a41 >> 3) ^ 0x4AE8B024);
  unsigned int v170 = (v135 + 1951841638 - ((2 * v135) & 0x68AD7ACC)) ^ 0x7456BD66 | ((v866 ^ 0x4C)
                                                                       - 954109991
                                                                       - ((2 * (v866 ^ 0x4C)) & 0x1B2)) ^ 0xC7216FD9;
  LODWORD(v841) = v132 + 34;
  unsigned int v171 = ((4 * (v132 + 34)) & 0x7FBACCFC ^ 0xE8A8888)
       + ((2 * (v132 + 34)) ^ 0xF898A33B)
       + (v169 ^ 0xF5FF77FE)
       + ((2 * v169) & 0xEBFEEFFC);
  unsigned int v172 = v171 - 308562599 + (~(2 * v171 + 340148998) | 0xB90ED855);
  unsigned int v173 = (((v170 - ((2 * v170) & 0x6FD58C)) << 8) - 1209350656) ^ 0xB7EAC600;
  int v862 = v173 + 969469199 - ((2 * v173) & 0x7391DA00);
  HIDWORD(v125) = ((v869 ^ 0x4C) + 308336830 - ((2 * (v869 ^ 0x4C)) & 0x17C)) ^ 0x3E;
  LODWORD(v125) = v145 ^ 0x690D1580;
  int v174 = v125 >> 7;
  unsigned int v175 = v156;
  HIDWORD(v125) = v156 ^ 0xFFFFFFE7;
  LODWORD(v125) = v156 ^ 0x844EFE00;
  int v176 = v125 >> 7;
  unsigned int v177 = v121 + 1859689437 - ((2 * v121) & 0xDDB137BA);
  HIDWORD(v125) = ((v86 ^ 0x4C) - 799191184 - ((2 * (v86 ^ 0x4C)) & 0xE0)) ^ 0x70;
  LODWORD(v125) = v177 ^ 0x6ED89B80;
  int v178 = v125 >> 7;
  HIDWORD(v125) = v167 ^ 0x15162;
  LODWORD(v125) = v167 ^ 0x1520000;
  int v179 = v125 >> 17;
  HIDWORD(v125) = v172 ^ 0x93D5;
  LODWORD(v125) = v172 ^ 0x23780000;
  int v180 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xBEFB4428);
  HIDWORD(v125) = v167 ^ 0x35162;
  LODWORD(v125) = v167 ^ 0x1500000;
  int v181 = (v179 ^ 0xFFE7FDFD)
       + ((v125 >> 19) ^ 0xF23BF6AB)
       + ((2 * (v125 >> 19)) & 0xE477ED56)
       + ((2 * v179) & 0xFFCFFBFA);
  unsigned int v182 = ((v145 >> 3) ^ 0xA2C94F06)
       + (v168 ^ 0xFFE6B3DF)
       + ((2 * v168) & 0xFFCD67BE)
       + ((v145 >> 2) & 0x1FD1DB7A ^ 0x1A414172)
       + 1345347172
       + ((v181 - ((2 * v181 + 465049264) & 0x2EA28952) - 1523757055) ^ (v167 >> 10) ^ 0x9751107D);
  unsigned int v183 = (v174 ^ 0xDDF7DFFD) + ((2 * v174) & 0xBBEFBFFA) + (v182 ^ 0x8420A440) - ((2 * v182) & 0xF7BEB77E) + 1;
  unsigned int v184 = v154 ^ 0xAE1731CE | (v871 >> 10) ^ 0x1BF8A3;
  HIDWORD(v841) = a41 ^ 0xEB1DFE72;
  int v185 = (a41 ^ 0xE0EA2A61 ^ (v183 - ((2 * v183 + 466548612) & 0x17EFA826) - 1444982827)) + (a41 ^ 0xEB1DFE72);
  unsigned int v186 = ((v172 >> 10) ^ 0xEB7F21DB)
       + ((2 * (v172 >> 10)) & 0x6FFFFE ^ 0x1BC48)
       + 344457217
       + ((v180 - 545414636) ^ (v172 >> 19) ^ (((v172 << 13) ^ 0x127AA000)
                                             - ((2 * ((v172 << 13) ^ 0x127AA000)) & 0x9EDEC000)
                                             + 1332702063) ^ 0x9012CD14);
  *(void *)((char *)&v842 + 4) = __PAIR64__(v167, v145);
  unsigned int v187 = ((v859 >> 3) ^ 0x1104DFF4)
       + (v858 ^ 0xFAFFEFF7)
       + ((2 * v858) & 0xF5FFDFEE)
       + ((v859 >> 2) & 0x15D3BF8E ^ 0xFFFE4077)
       + ((2 * v145) ^ 0x15ED351D)
       + ((4 * v145) & 0x8FEE3D5C ^ 0x84241544)
       + (v852 ^ 0x1E8005CC)
       - ((2 * v852) & 0xC2FFF466)
       + (v186 ^ 0x81130054)
       - ((2 * v186) & 0xFDD9FF56)
       + 4;
  unsigned int v188 = v185 + 612324480 + (~(2 * v185) | 0xB70156D1) + 24;
  unsigned int v189 = ((v177 >> 3) ^ 0x8139398)
       + (v178 ^ 0xF3F3FEF9)
       + ((2 * v178) & 0xE7E7FDF2)
       + ((v177 >> 2) & 0x346EFE38 ^ 0xEFD9D9CF)
       + (v184 ^ 0x1C4D0084)
       + 3;
  unsigned int v190 = v189
       - ((2 * v184) & 0xC765FEF6)
       - 2 * ((v189 - ((2 * v184) & 0xC765FEF6) + 1777762206) & 0x4251D011 ^ v189 & 1);
  HIDWORD(v125) = v188 ^ 0x75497;
  LODWORD(v125) = v188 ^ 0x24780000;
  int v191 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0xC6ECDF52);
  HIDWORD(v125) = v188 ^ 0x15497;
  LODWORD(v125) = v188 ^ 0x247E0000;
  unsigned int v192 = v187 - ((2 * v187 + 280991230) & 0x5681D74A) + 866170532;
  int v193 = ((v188 >> 10) ^ 0x9C811DD5)
       + ((2 * (v188 >> 10)) & 0x6FFBFE ^ 0xFFFDC455)
       + 1668808193
       + ((v191 - 478777431) ^ ((v125 >> 17) - ((2 * (v125 >> 17)) & 0xCA6C1024) - 449443822) ^ 0x64067BB);
  unsigned int v194 = (v193 - ((2 * v193) & 0xBE17B274) - 552871622) ^ (v190 + 742936494);
  HIDWORD(v125) = v192 ^ 0xEBA5;
  LODWORD(v125) = v192 ^ 0xAB400000;
  int v195 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x16FB976A) + 192793525;
  unsigned int v196 = (v176 ^ 0xBD6FFBD7)
       + ((v175 >> 3) ^ 0x7E142131)
       + (v166 ^ 0x7D7E7F36)
       + ((v175 >> 2) & 0x1D3BFDFA ^ 0x113BD98)
       + ((2 * v176) & 0x7ADFF7AE)
       + ((2 * v166) & 0xFAFCFE6C);
  unsigned int v197 = v196 - ((2 * v196 - 1394144276) & 0xFDB12516) + 1431050369;
  HIDWORD(v125) = v192 ^ 0xEBA5;
  LODWORD(v125) = v192 ^ 0xAB400000;
  int v198 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xCB515076) - 441931717;
  HIDWORD(v125) = v167 ^ 0x62;
  LODWORD(v125) = v167 ^ 0x1535100;
  int v199 = v125 >> 7;
  HIDWORD(v125) = v172 ^ 0x93D5;
  LODWORD(v125) = v172 ^ 0x23780000;
  int v200 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0xCC7547DC);
  HIDWORD(v125) = v167 ^ 0x35162;
  LODWORD(v125) = v167 ^ 0x1500000;
  int v201 = v125 >> 18;
  HIDWORD(v842) = v177;
  unsigned int v202 = ((2 * v177) ^ 0xAA4C2462)
       + ((4 * v177) & 0xEFFA27B0 ^ 0xAB622730)
       - 2013074392
       + (v197 ^ (v192 >> 10) ^ v195 ^ v198 ^ 0x1027213F);
  unsigned int v203 = v202 - 664121271 + (~(2 * v202) | 0x4F2B5F6D) + 1;
  HIDWORD(v125) = v192 ^ 0x25;
  LODWORD(v125) = v192 ^ 0xAB40EB80;
  int v204 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x6AA63EDC);
  unsigned int v853 = v862 ^ 0x39C8ED0F | ((v867 ^ 0x4C) - 111170882 - ((2 * (v867 ^ 0x4C)) & 0x17C)) ^ 0xF95FAABE;
  HIDWORD(v125) = v203 ^ 0x5049;
  LODWORD(v125) = v203 ^ 0xD86A0000;
  int v205 = v125 >> 17;
  unsigned int v206 = v172;
  HIDWORD(v125) = v172 ^ 0x55555555;
  LODWORD(v125) = v172 ^ 0x23789380;
  int v207 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x8C5081F0);
  HIDWORD(v125) = v194 ^ 0x92A;
  LODWORD(v125) = v194 ^ 0x9D5A0000;
  int v208 = v125 >> 17;
  unsigned int v209 = (v201 ^ 0xF7FEFDFF) + ((v167 >> 3) ^ 0x6FD515D3) + (v199 ^ 0xCBFF6BD6) + ((v167 >> 2) & 0x1FFEFFFE ^ 0x54D458);
  unsigned int v210 = ((2 * v201) & 0xEFFDFBFE) + ((2 * v199) & 0x97FED7AC);
  HIDWORD(v125) = v194 ^ 0x2092A;
  LODWORD(v125) = v194 ^ 0x9D580000;
  int v211 = (v208 ^ 0xFBBF7FF6)
       + ((v194 >> 10) ^ 0x26A766AE)
       + ((v125 >> 19) ^ 0x3EF72D97)
       + ((v194 >> 9) & 0x7F9FA6 ^ 0xFFB172FB)
       + ((2 * v208) & 0xF77EFFEC)
       + ((2 * (v125 >> 19)) & 0x7DEE5B2E);
  LODWORD(v843) = v175;
  unsigned int v212 = ((2 * v175) ^ 0xC98998CD)
       + ((4 * v175) & 0x7DD737F8 ^ 0xEEECCE67)
       + 1055628286
       + ((v209 + v210 - ((2 * (v209 + v210) - 1744556968) & 0xD7E38BB4) + 938728454) ^ 0x12B5BC19 ^ (v211 - ((2 * v211 + 1032995984) & 0xF288F386) + 403545099));
  unsigned int v213 = v212 + 849101014 - ((2 * v212) & 0x653881AC);
  HIDWORD(v125) = v188 ^ 0x17;
  LODWORD(v125) = v188 ^ 0x247F5480;
  int v214 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x262AB358);
  unsigned int v215 = v188;
  HIDWORD(v125) = v188 ^ 0x35497;
  LODWORD(v125) = v188 ^ 0x247C0000;
  int v216 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0x4F43D5E6);
  LODWORD(v844) = v206;
  unsigned int v217 = ((v206 >> 3) ^ 0xB9D0ED86)
       + ((v206 >> 2) & 0x3B7FFFF8 ^ 0x85E24F0)
       + 1111490564
       + ((v200 + 1715119086) ^ (v207 + 1177043192) ^ 0x2012E316);
  HIDWORD(v125) = v194 ^ 0x2092A;
  LODWORD(v125) = v194 ^ 0x9D580000;
  int v218 = v125 >> 18;
  HIDWORD(v125) = v203 ^ 0x25049;
  LODWORD(v125) = v203 ^ 0xD8680000;
  int v219 = (v167 ^ 0x1535162)
       + ((v125 >> 19) ^ 0xBBA8DA77)
       + (v205 ^ 0x5FFF7C17)
       + ((2 * (v125 >> 19)) & 0x7751B4EE)
       + ((2 * v205) & 0xBFFEF82E)
       - 464017038;
  unsigned int v220 = (v217 ^ 0x7CF3FE7A)
       + ((2 * v217) & 0xF9E7FCF4)
       + ((v203 >> 10) ^ 0x1D4947F9)
       + ((v203 >> 9) & 0x7EBADA ^ 0x6C3008)
       + (v219 ^ 0x1C080040)
       - ((2 * v219) & 0xC7EFFF7E)
       + 1;
  unsigned int v221 = v213;
  HIDWORD(v125) = v213 ^ 0x440D6;
  LODWORD(v125) = v213 ^ 0x32980000;
  int v222 = v125 >> 19;
  HIDWORD(v125) = v213 ^ 0x40D6;
  LODWORD(v125) = v213 ^ 0x329C0000;
  int v223 = (v222 ^ 0x9FF9B1BC)
       + ((v125 >> 17) ^ 0x7FDF5DED)
       + ((2 * (v125 >> 17)) & 0xFFBEBBDA)
       + ((2 * v222) & 0x3FF36378);
  unsigned int v224 = (v214 + 320166316) ^ (v215 >> 3) ^ (v216 + 664922867) ^ (v213 >> 10) ^ (v223
                                                                               + 1642195380
                                                                               - ((2 * v223 + 5103790) & 0x375F2BA));
  HIDWORD(v125) = v194 ^ 0xAAAAAAAA;
  LODWORD(v125) = v194 ^ 0x9D5A0900;
  int v225 = v125 >> 7;
  unsigned int v226 = (v220 - ((2 * v220 + 319375280) & 0x3011C10E) - 510819233) ^ v167;
  HIDWORD(v125) = v226 ^ 0x1B1E5;
  LODWORD(v125) = v226 ^ 0x995A0000;
  int v227 = v125 >> 17;
  HIDWORD(v125) = v213 ^ 0x56;
  LODWORD(v125) = v213 ^ 0x329C4080;
  int v228 = (v125 >> 7) + 98811571 + (~(2 * (v125 >> 7)) | 0xF438829B);
  HIDWORD(v125) = v203 ^ 0x49;
  LODWORD(v125) = v203 ^ 0xD86A5000;
  int v229 = v125 >> 7;
  LODWORD(a35) = v192;
  HIDWORD(v125) = v226 ^ 0x3B1E5;
  LODWORD(v125) = v226 ^ 0x99580000;
  int v230 = ((v192 >> 3) ^ 0x31FD1E74)
       + ((v192 >> 2) & 0x36D5F9FE ^ 0xDD2FC717)
       + ((v204 + 894639982) ^ ((__PAIR64__(v192 ^ 0xEBA5, v192 ^ 0xAB400000) >> 18)
                              - ((2 * (__PAIR64__(v192 ^ 0xEBA5, v192 ^ 0xAB400000) >> 18)) & 0x44C60B7A)
                              - 1570568771) ^ 0x97301AD3)
       + ((v226 >> 10) ^ 0x98A6C36A)
       + ((v125 >> 19) ^ 0xFDFFE01D)
       + (v227 ^ 0x80990416)
       + ((2 * (v125 >> 19)) & 0xFBFFC03A)
       - ((2 * v227) & 0xFECDF7D2)
       + ((v226 >> 9) & 0x7ED4F2 ^ 0xFFB37B2F)
       - 1001290935;
  HIDWORD(v843) = v215;
  unsigned int v231 = (v215 ^ 0x247F5497) + (v230 ^ 0xF7FE66FA) + ((2 * v230) & 0xEFFCCDF4) + 134322438;
  int v232 = (__PAIR64__(v213 ^ 0x40D6, v213 ^ 0x329C0000) >> 18)
       - ((2 * (__PAIR64__(v213 ^ 0x40D6, v213 ^ 0x329C0000) >> 18)) & 0x3FDA57B2);
  HIDWORD(v125) = v226 ^ 0x3B1E5;
  LODWORD(v125) = v226 ^ 0x99580000;
  int v233 = v125 >> 18;
  HIDWORD(v125) = v226 ^ 0x65;
  LODWORD(v125) = v226 ^ 0x995BB180;
  int v234 = v125 >> 7;
  HIDWORD(v125) = v203 ^ 0x25049;
  LODWORD(v125) = v203 ^ 0xD8680000;
  int v235 = v125 >> 18;
  unsigned int v236 = (v231 - ((2 * v231) & 0x1BE4BFD4) + 233988074) ^ v215;
  HIDWORD(v125) = v236 ^ 0x50B7D;
  LODWORD(v125) = v236 ^ 0x29880000;
  int v237 = v125 >> 19;
  HIDWORD(v125) = v224 ^ 0x50780;
  LODWORD(v125) = v224 ^ 0xB1880000;
  int v238 = v125 >> 19;
  HIDWORD(v125) = v224 ^ 0x10780;
  LODWORD(v125) = v224 ^ 0xB18C0000;
  int v239 = (v238 ^ 0x668B5F7E)
       + ((v125 >> 17) ^ 0x39F3FCDF)
       + ((2 * (v125 >> 17)) & 0x73E7F9BE)
       + ((2 * v238) & 0xCD16BEFC);
  unsigned int v240 = (v218 ^ 0xB37FFBEE)
       + ((v194 >> 3) ^ 0x6C14AFDF)
       + (v225 ^ 0x79DEFFF7)
       + ((v194 >> 2) & 0x3F7FDDF4 ^ 0x27568040)
       + ((2 * v218) & 0x66FFF7DC)
       + ((2 * v225) & 0xF3BDFFEE)
       + ((v239 - ((2 * v239 - 1090435258) & 0xC9C069D0) - 1000286069) ^ (v224 >> 10) ^ 0x9B33A856);
  LODWORD(a37) = v203;
  unsigned int v241 = ((v203 >> 3) ^ 0xE9C997B6)
       + (v229 ^ 0xAD6DFFFF)
       + (v235 ^ 0xC42A004)
       + ((v203 >> 2) & 0x2589BB7E ^ 0x24089012)
       + ((2 * v229) & 0x5ADBFFFE)
       - ((2 * v235) & 0xE77ABFF6)
       + ((v236 >> 10) ^ 0x3FD5BC35);
  int v242 = v236 ^ 0x10B7D;
  int v243 = v236 ^ 0x298C0000;
  HIDWORD(v125) = v236 ^ 0x10B7D;
  LODWORD(v125) = v236 ^ 0x298C0000;
  unsigned int v244 = v236;
  int v245 = v241
       + ((v125 >> 17) ^ 0x7DFEEFFF)
       + (v237 ^ 0x7BFEB6F3)
       + ((v236 >> 9) & 0x3FBEEE ^ 0x148684)
       + ((2 * (v125 >> 17)) & 0xFBFDDFFE)
       + ((2 * v237) & 0xF7FD6DE6)
       + 1;
  LODWORD(a34) = v194 ^ 0x9D5A092A;
  unsigned int v246 = (v194 ^ 0x554E2D37 ^ (v245 - ((2 * v245 + 861534120) & 0x9028483A) - 507437071)) + (v194 ^ 0x9D5A092A);
  unsigned int v247 = v240 - ((2 * v240 + 633481796) & 0x388D15E4) - 282615788;
  HIDWORD(v125) = v247 ^ 0x68AF2;
  LODWORD(v125) = v247 ^ 0x9C400000;
  int v248 = v125 >> 19;
  int v249 = __PAIR64__(v242, v243) >> 18;
  HIDWORD(v125) = v247 ^ 0x8AF2;
  LODWORD(v125) = v247 ^ 0x9C460000;
  int v250 = ((v125 >> 17) ^ 0xF7AFCE7B)
       + (v248 ^ 0x7FBDBFBF)
       + ((2 * v248) & 0xFF7B7F7E)
       + ((2 * (v125 >> 17)) & 0xEF5F9CF6);
  unsigned int v251 = v246 - 55481856 - ((2 * v246) & 0xF962D4E2) + 113;
  HIDWORD(v125) = v251 ^ 0x16A71;
  LODWORD(v125) = v251 ^ 0xFCB00000;
  int v252 = v125 >> 17;
  HIDWORD(v125) = v251 ^ 0x16A71;
  LODWORD(v125) = v251 ^ 0xFCB00000;
  int v253 = v125 >> 19;
  unsigned int v254 = (v253 ^ 0x66400084) + (v252 ^ 0xEDEFE7BF);
  unsigned int v255 = (v233 ^ 0x414A040) + (v234 ^ 0xBBE7FF2F) + ((2 * v234) & 0x77CFFE5E) - ((2 * v233) & 0xF7D6BF7E) + 1;
  unsigned int v256 = (2 * v252) & 0xDBDFCF7E;
  HIDWORD(v125) = v224 ^ 0x10780;
  LODWORD(v125) = v224 ^ 0xB18C0000;
  int v257 = v125 >> 18;
  HIDWORD(v125) = v224;
  LODWORD(v125) = v224 ^ 0xB18D0780;
  int v258 = v125 >> 7;
  HIDWORD(v846) = v224;
  HIDWORD(a36) = v221;
  unsigned int v259 = ((v221 >> 3) ^ 0xFBA57BC0)
       + ((v221 >> 2) & 0x3BEDE7B4 ^ 0x8A50034)
       + 34147366
       + ((v250 + 991823354 - ((2 * v250 + 287630220) & 0x65172868)) ^ (v247 >> 10) ^ 0xB2AC8596);
  HIDWORD(v125) = v244 ^ 0xFFFFFFFD;
  LODWORD(v125) = v244 ^ 0x298D0B00;
  int v260 = v125 >> 7;
  unsigned int v261 = ((v232 + 535636953) ^ v228 ^ 0x1A0E956B) + (v259 ^ 0x1200E09) - ((2 * v259) & 0xFDBFE3EC) - 18877961;
  unsigned int v262 = v247;
  HIDWORD(v125) = v247 ^ 0x28AF2;
  LODWORD(v125) = v247 ^ 0x9C440000;
  int v263 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0xEB81C1C8);
  unsigned int v264 = (v257 ^ 0x81401180) + (v258 ^ 0xFCB526F9) + ((2 * v258) & 0xF96A4DF2) - ((2 * v257) & 0xFD7FDCFE) + 1;
  int v265 = v254 + v256 - ((2 * v253) & 0x337FFEF6);
  HIDWORD(v125) = a54 ^ 0xFFFFFFE1;
  LODWORD(v125) = a54 ^ 0xE28A1380;
  int v266 = v125 >> 6;
  unsigned int v267 = v261 + 624364032 - ((2 * v261) & 0x4A6E14A4) + 82;
  HIDWORD(v125) = v267 ^ 0x70A52;
  LODWORD(v125) = v267 ^ 0x25300000;
  int v268 = v125 >> 19;
  HIDWORD(v125) = v262 ^ 0x72;
  LODWORD(v125) = v262 ^ 0x9C468A80;
  int v269 = (v125 >> 7) - ((2 * (v125 >> 7)) & 0x2735C8D6);
  unsigned int v270 = ((v255 - ((2 * v255 + 442656) & 0x4B8C0574) - 439786678) ^ (v226 >> 3) ^ 0xB6ED7486) + (v221 ^ 0x329C40D6);
  unsigned int v271 = (v270 ^ 0x7CA73B32)
       + ((2 * v270) & 0xF94E7664)
       - 2091334450
       + ((v265 + 1 - ((2 * (v265 + 1) + 1470115704) & 0x856F2530) + 1854384724) ^ (v251 >> 10) ^ 0xC288BEC2);
  HIDWORD(v125) = v267 ^ 0x10A52;
  LODWORD(v125) = v267 ^ 0x25360000;
  int v272 = ((v264 - ((2 * v264 + 68521740) & 0x8C61AD94) + 1211866704) ^ (v224 >> 3) ^ 0xD001763A)
       + ((v267 >> 10) ^ 0x28994DE6)
       + (v268 ^ 0xC8222864)
       + ((v125 >> 17) ^ 0x88219040)
       + ((v267 >> 9) & 0x5FFFB6 ^ 0xFFED647B)
       - ((2 * (v125 >> 17)) & 0xEFBCDF7E)
       - ((2 * v268) & 0x6FBBAF36)
       - 2027141319;
  unint64_t v845 = __PAIR64__(v244, v226);
  unsigned int v273 = (v226 ^ 0x5F34B0D8 ^ (v272 - ((2 * v272) & 0x8CDE027A) - 965803715)) + (v226 ^ 0x995BB1E5);
  unsigned int v274 = v273 + 2094467584 - ((2 * v273) & 0xF9AE14CC);
  unsigned int v275 = (v221 ^ 0x329C40D6) + (v271 ^ 0xFF73EFB7) + ((2 * v271) & 0xFEE7DF6E) + 9179209;
  unsigned int v276 = v275 - 82846990 - ((2 * v275) & 0xF61FB5E4);
  LODWORD(a41) = v251;
  HIDWORD(v125) = v251 ^ 0xFFFFFFF1;
  LODWORD(v125) = v251 ^ 0xFCB16A00;
  int v277 = v125 >> 7;
  HIDWORD(v125) = v276 ^ 0x1DAF2;
  LODWORD(v125) = v276 ^ 0xFB0E0000;
  int v278 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xE5FA6DE0);
  HIDWORD(v125) = a54 ^ 0x3A1;
  LODWORD(v125) = a54 ^ 0xE28A1000;
  int v279 = v125 >> 11;
  unsigned int v280 = v274 + 102;
  HIDWORD(v125) = (v274 + 102) ^ 0x70A66;
  LODWORD(v125) = (v274 + 102) ^ 0x7CD00000;
  int v281 = v125 >> 19;
  int v282 = __PAIR64__(v251 ^ 0x16A71, v251 ^ 0xFCB00000) >> 18;
  unsigned int v283 = (v282 ^ 0x80008401) + (v277 ^ 0xE3FDFFB9);
  unsigned int v284 = (2 * v282) & 0xFFFEF7FC;
  HIDWORD(v125) = v276 ^ 0x7DAF2;
  LODWORD(v125) = v276 ^ 0xFB080000;
  int v285 = ((v244 >> 3) ^ 0xFBEA7E99)
       + (v249 ^ HIDWORD(a12))
       + ((2 * v249) & 0xFBFBE57E)
       + ((v244 >> 2) & 0x3DB7BFEC ^ 0x82302CC)
       + 52833611
       + (((v125 >> 19) - ((2 * (v125 >> 19)) & 0x386484D4) - 1674427798) ^ (v276 >> 10) ^ (v278 + 1929197296) ^ 0xEEF1B76C);
  unsigned int v286 = (v260 ^ 0x7BFEFF7D) + ((2 * v260) & 0xF7FDFEFA) + (v285 ^ 0x8C120920) - ((2 * v285) & 0xE7DBEDBE) + 1;
  unsigned int v287 = v286 - ((2 * v286 - 270668092) & 0xB884749A);
  HIDWORD(v125) = a54 ^ 0x8A13A1;
  LODWORD(v125) = a54 ^ 0xE2000000;
  int v288 = v125 >> 25;
  HIDWORD(v125) = v267 ^ 0x30A52;
  LODWORD(v125) = v267 ^ 0x25340000;
  int v289 = (v125 >> 18) - ((2 * (v125 >> 18)) & 0x2DE0AA54);
  unsigned int v290 = (v288 ^ 0x908960E2)
       + (v266 ^ 0xDF3FF7F5)
       + (v279 ^ 0x4A62000A)
       + ((2 * v266) & 0xBE7FEFEA)
       - ((2 * v288) & 0xDEED3E3A)
       - ((2 * v279) & 0x6B3BFFEA);
  HIDWORD(v125) = v280 ^ 0x10A66;
  LODWORD(v125) = v280 ^ 0x7CD60000;
  int v291 = v125 >> 17;
  unsigned int v292 = v267;
  HIDWORD(v125) = v267 ^ 0x52;
  LODWORD(v125) = v267 ^ 0x25370A00;
  int v293 = v125 >> 7;
  int v294 = v290 + 2 - ((2 * (v290 + 2) + 195644986) & 0x50897278);
  HIDWORD(v125) = v276 ^ 0x72;
  LODWORD(v125) = v276 ^ 0xFB0FDA80;
  int v839 = v125 >> 7;
  HIDWORD(v125) = v280 ^ 0x30A66;
  LODWORD(v125) = v280 ^ 0x7CD40000;
  HIDWORD(a42) = v125 >> 18;
  unsigned int v295 = ((v262 >> 3) ^ 0xEC713C2D)
       + ((v262 >> 2) & 0x3FF3DAE6 ^ 0x271182A4)
       + 397965
       + ((v263 + 1975574756) ^ (v269 + 328918123) ^ 0x665A048F);
  unsigned int v296 = (v295 ^ 0xBEEBFDF2)
       + ((2 * v295) & 0x7DD7FBE4)
       + ((v280 >> 10) ^ 0x7A004A5F)
       + (v291 ^ 0x7C9FFBF6)
       + (v281 ^ 0xE2200414)
       + ((2 * (v280 >> 10)) & 0x3EFF3A ^ 0x3E6B00)
       + ((2 * v291) & 0xF93FF7EC)
       - ((2 * v281) & 0x3BBFF7D6)
       + 1;
  HIDWORD(v125) = a54 ^ 1;
  LODWORD(v125) = a54 ^ 0xE28A13A0;
  int v297 = v125 >> 2;
  int v298 = (v244 ^ 0x352E45CF ^ (v296 - ((2 * v296 + 275317964) & 0x39469D64) - 2066231016)) + (v244 ^ 0x298D0B7D);
  unsigned int v299 = v298 + 1690186719 - ((2 * v298) & 0xC97C67BE);
  unsigned int v300 = v283 + ((2 * v277) & 0xC7FBFF72) - v284 + 1;
  HIDWORD(v125) = a54 ^ 0xA13A1;
  LODWORD(v125) = a54 ^ 0xE2800000;
  int v301 = v125 >> 22;
  HIDWORD(v125) = (v287 - 734973521) ^ 0x3A4D;
  LODWORD(v125) = (v287 - 734973521) ^ 0xDC420000;
  int v302 = v125 >> 17;
  HIDWORD(v125) = v299 ^ 0x633DF;
  LODWORD(v125) = v299 ^ 0x64B80000;
  int v303 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x4CDAD6DA);
  HIDWORD(v125) = a54 ^ 0x13A1;
  LODWORD(v125) = a54 ^ 0xE28A0000;
  unsigned int v304 = v292;
  unsigned int v305 = ((v292 >> 3) ^ 0xF2015C91)
       + ((v292 >> 2) & 0x2D4F7BB6 ^ 0x94D4294)
       + 156779045
       + ((v289 - 1762634454) ^ (v293 - ((2 * v293) & 0x94B4D4) + 4872810) ^ 0x96BA0F40);
  unsigned int v872 = v287 - 734973521;
  LODWORD(v838) = (v287 - 734973521) ^ 0xDC400000;
  HIDWORD(v838) = (v287 - 734973521) ^ 0x23A4D;
  int v306 = ((v300 - ((2 * v300 + 939718794) & 0xD57DFF18) + 113277905) ^ (v251 >> 3) ^ 0x7528D2C2)
       + ((v872 >> 10) ^ 0x7E896FFE)
       + (v302 ^ 0x9BE59F27)
       + ((v838 >> 19) ^ 0x80280A3)
       + ((v872 >> 9) & 0x7CFEE0 ^ 0x6C2000)
       + ((2 * v302) & 0x37CB3E4E)
       - ((2 * (v838 >> 19)) & 0xEFFAFEB8)
       - 581345082;
  unsigned int v307 = a59 ^ ((a54 ^ 0xE28A13A1)
              + (a55 ^ a54 ^ 0xC8A85BB)
              - ((2 * ((a54 ^ 0xE28A13A1) + (a55 ^ a54 ^ 0xC8A85BB))) & 0x245E1012)
              + 305072137) ^ 0x3DE53298 ^ (v294 + 1847156825);
  int v308 = (((a54 ^ 0xE28A13A1) + (a55 ^ 0xEE00961A)) ^ 0x87110000)
       + (v301 ^ 0x63FEFBFB)
       + (v297 ^ 0x2E6FE67F)
       + ((v125 >> 13) ^ 0xA422220B)
       + ((2 * v301) & 0xC7FDF7F6)
       + ((2 * v297) & 0x5CDFCCFE)
       - ((2 * ((a54 ^ 0xE28A13A1) + (a55 ^ 0xEE00961A))) & 0xF1DDFFFE)
       - ((2 * (v125 >> 13)) & 0xB7BBBBE8);
  unsigned int v309 = (a56 ^ a54 ^ 0x5D54EBFC)
       - 1005738695
       + (((a55 ^ 0xEE00961A) + (a56 ^ 0xBFDEF85D)) ^ 0x3BDDEAC7)
       + ((2 * ((a55 ^ 0xEE00961A) + (a56 ^ 0xBFDEF85D))) & 0x77BBD58E)
       + 1339392;
  unsigned int v310 = v308
       + (v309 ^ 0x444DE7DF)
       + ((2 * v309) & 0x889BCFBE)
       + ((v307 + 694531638) ^ 0xEDDDD7CB)
       + ((2 * (v307 + 694531638)) & 0xDBBBAF96)
       + (v853 ^ 0xDD7FFF36)
       + ((2 * v853) & 0xBAFFFE6C)
       + 2;
  unsigned int v311 = v299;
  HIDWORD(v125) = v299 ^ 0x33DF;
  LODWORD(v125) = v299 ^ 0x64BE0000;
  int v312 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0xDC70F4D4);
  HIDWORD(a38) = v240 - ((2 * v240 + 633481796) & 0x388D15E4) - 282615788;
  HIDWORD(v125) = v276 ^ 0x3DAF2;
  LODWORD(v125) = v276 ^ 0xFB0C0000;
  int v313 = v125 >> 18;
  unsigned int v314 = (v262 ^ 0x63B9750D) + (v262 ^ 0xF242F5A4 ^ (v306 - ((2 * v306) & 0xDC08FEAC) + 1845788502)) + 1;
  unsigned int v315 = v314 - 108478174 + (~(2 * v314) | 0xCEE7DBD);
  unsigned int v316 = v310 - ((2 * v310 + 1701083442) & 0xBAB25BD2) - 1878300030;
  unsigned int v317 = (v316 << 21) ^ 0xBD200000;
  unsigned int v318 = (((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xF8000000 ^ 0x421AA692)
        + ((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xE0000000 ^ 0xA0A55820)
        - (((v317 - ((2 * v317) & 0x11400000) - 2000996997) & 0xF8000000 ^ 0x421AA692) & 0xE0088492)) ^ 0xAEF49A25;
  unsigned int v319 = (-450172777 - (v318 | 0xE52AE897) + (v318 | 0x1AD51768)) ^ 0x9E96F76D;
  int v320 = (v316 >> 11) ^ 0xBAB25;
  unsigned int v321 = ((v311 >> 10) ^ 0x1091B78C)
       + ((v311 >> 9) & 0x6ECFFE ^ 0xFFDDB0E7)
       - 277387263
       + ((v303 + 644705133) ^ (v312 - 298288534) ^ 0xC8551107);
  HIDWORD(v859) = v280;
  HIDWORD(v125) = v280 ^ 0x66666666;
  LODWORD(v125) = v280 ^ 0x7CD70A00;
  int v322 = v125 >> 7;
  int v323 = v316 ^ 0x5D592DE9;
  unsigned int v324 = (v316 ^ 0x5D592DE9)
       + (a54 ^ 0xE28A13A1)
       - 532775603
       - ((2 * ((v316 ^ 0x5D592DE9) + (a54 ^ 0xE28A13A1))) & 0xC07CFA9A);
  HIDWORD(v125) = (v316 >> 11) ^ 0x3AB25;
  LODWORD(v125) = ((v319 | v320) - ((2 * (v319 | v320)) & 0xD170D740) + 1756916640) ^ 0x68B80000;
  int v325 = (v125 >> 19) + 896696320 - ((2 * (v125 >> 19)) & 0x6AE5001C);
  unsigned int v326 = (v321 - ((2 * v321) & 0x2DCD5C7C) + 384216638) ^ (v305 - ((2 * v305) & 0xED435B36) - 157176421);
  HIDWORD(v125) = v315 ^ 0xC121;
  LODWORD(v125) = v315 ^ 0xF9880000;
  int v327 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0x5319FAAC);
  HIDWORD(v125) = (v325 + 14) ^ 0xE;
  LODWORD(v125) = (v325 + 14) ^ 0x35728000;
  int v328 = (v125 >> 8) + 1788188704 + (~(2 * (v125 >> 8)) | 0x2AD4CFBF);
  HIDWORD(v125) = v316 ^ 0x1592DE9;
  LODWORD(v125) = v316 ^ 0x5C000000;
  int v329 = v125 >> 25;
  HIDWORD(v125) = v316 ^ 0x192DE9;
  LODWORD(v125) = v316 ^ 0x5D400000;
  int v330 = v125 >> 22;
  HIDWORD(v125) = v315 ^ 0xC121;
  LODWORD(v125) = v315 ^ 0xF9880000;
  unsigned int v331 = (v317 + 1831963319 - ((2 * v317) & 0xDA400000)) ^ 0x6D318AB7 | v320;
  unsigned int v332 = v331 - ((2 * v331) & 0xC106B3A0);
  HIDWORD(v850) = a55 ^ 0xEE00961A;
  unint64_t v847 = __PAIR64__(v326, v315);
  int v333 = ((v315 >> 10) ^ 0xFD6909CE)
       + ((v315 >> 9) & 0x2ED7FC ^ 0x2CC460)
       + 44602370
       + (((v125 >> 17) - ((2 * (v125 >> 17)) & 0x693AE01E) - 1264750577) ^ (v327 - 1450377898) ^ 0x1D118D59);
  HIDWORD(v125) = v326 ^ 0x103A5;
  LODWORD(v125) = v326 ^ 0xE0460000;
  int v334 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x365A9034);
  unsigned int v335 = (v328 + 1) ^ 0x6A959820 | (((v316 << 26) ^ 0xA4000000)
                                  + 363942263
                                  - ((2 * ((v316 << 26) ^ 0xA4000000)) & 0x28000000)) ^ 0x15B15177;
  HIDWORD(v125) = v326 ^ 0x703A5;
  LODWORD(v125) = v326 ^ 0xE0400000;
  int v336 = (v125 >> 19) + 1971654253 + (~(2 * (v125 >> 19)) | 0x14F5E327);
  HIDWORD(v125) = v316 ^ 1;
  LODWORD(v125) = v316 ^ 0x5D592DE8;
  int v337 = v125 >> 2;
  HIDWORD(v125) = v316 ^ 0xDE9;
  LODWORD(v125) = v316 ^ 0x5D592000;
  int v338 = v125 >> 13;
  HIDWORD(v844) = v304;
  unsigned int v339 = (v304 ^ 0xDAC8F5AD) + (v333 ^ 0x1FBDFDA) + ((2 * v333) & 0x3F7BFB4) - 33284057;
  unsigned int v340 = ((v276 >> 3) ^ 0xCF30BB1F)
       + (v839 ^ 0xBBD7FFDF)
       + (v313 ^ 0xA0843012)
       + ((v276 >> 2) & 0x1F5D7F7C ^ 0xE1BE89C3)
       + ((2 * v839) & 0x77AFFFBE)
       - ((2 * v313) & 0xBEF79FDA)
       + (v339 ^ 0x2F6DDFCE)
       + ((2 * v339) & 0x5EDBBF9C)
       + 3;
  unsigned int v341 = ((v332 - 528262704) ^ 0x419E5FBD ^ (v335 - ((2 * v335) & 0x423A0CDA) - 1591933331))
       + (a55 ^ v324 ^ 0xFD6D5FD9 ^ ((a55 ^ 0x11FF69E5)
                                   + (v316 ^ 0x5D592DE9)
                                   + 1
                                   - ((2 * ((a55 ^ 0x11FF69E5) + (v316 ^ 0x5D592DE9) + 1)) & 0xE6A7691C)
                                   - 212618098));
  unsigned int v342 = (a56 ^ 0xBFDEF85D) + (v329 ^ 0x7FA7D53F) + ((2 * v329) & 0xFF4FAA7E) - 2141705535;
  unsigned int v343 = (v342 ^ 0x277FFF77) + ((2 * v342) & 0x4EFFFEEE) + (v341 ^ 0x2524044) - ((2 * v341) & 0xFB5B7F76) + 1;
  int v344 = ((v326 >> 10) ^ 0x33CEA93F)
       + ((v326 >> 9) & 0x6D71FE ^ 0x602180)
       - 871807231
       + ((v334 + 455952410) ^ v336 ^ 0x6EA84676);
  HIDWORD(v125) = v311 ^ 0xFFFFFFDF;
  LODWORD(v125) = v311 ^ 0x64BE3380;
  LODWORD(v851) = v125 >> 7;
  unsigned int v345 = ((v280 >> 3) ^ 0x8E8EF13F)
       + (v322 ^ 0x72BDF663)
       + (HIDWORD(a42) ^ 0xF35FCDBF)
       + ((2 * (v280 >> 3)) & 0x3DD7DF18 ^ 0xE2EA3DE7)
       + ((2 * v322) & 0xE57BECC6)
       + ((2 * HIDWORD(a42)) & 0xE6BF9B7E)
       + (v344 ^ 0x10EC8000)
       - ((2 * v344) & 0xDE26FFFE)
       + 3;
  unsigned int v346 = (a54 ^ 0xBFD33E48 ^ v316)
       + (((v316 ^ 0x5D592DE9) + (a55 ^ 0xEE00961A)) ^ 0xE0320102)
       - ((2 * ((v316 ^ 0x5D592DE9) + (a55 ^ 0xEE00961A))) & 0x3F9BFDFA)
       + 533593854;
  unsigned int v347 = (((a55 ^ 0xEE00961A) + (a54 ^ 0x1D75EC5E) + 1) ^ 0xEFF7EB7E)
       + ((2 * ((a55 ^ 0xEE00961A) + (a54 ^ 0x1D75EC5E) + 1)) & 0xDFEFD6FC)
       + (v330 ^ 0x81484802)
       + (v338 ^ 0xD7B3DBF5)
       + (v337 ^ 0xFDDDFFF6)
       + ((2 * v338) & 0xAF67B7EA)
       + ((2 * v337) & 0xFBBBFFEC)
       - ((2 * v330) & 0xFD6F6FFA)
       + (v346 ^ 0x7F6F37DF)
       + ((2 * v346) & 0xFEDE6FBE)
       + 968800438
       + (v849 ^ 0x378CCCBB ^ (v343 - ((2 * v343 + 734026372) & 0x29A5C94E) - 357363223));
  int v348 = v347 - 1096878080 - ((2 * v347) & 0x7D3DF616);
  HIDWORD(v840) = v311;
  HIDWORD(v125) = v311 ^ 0x233DF;
  LODWORD(v125) = v311 ^ 0x64BC0000;
  LODWORD(v850) = v125 >> 18;
  LODWORD(v846) = v276;
  int v349 = (v846 ^ 0x4F0250D) + (v846 ^ 0xFC040A2E ^ (v345 - ((2 * v345 + 264459986) & 0xE17A1B8) + 250444869)) + 1;
  HIDWORD(v125) = v872 ^ 0x4D;
  LODWORD(v125) = v872 ^ 0xDC423A00;
  LODWORD(v840) = (v125 >> 7) - ((2 * (v125 >> 7)) & 0xE3CD0492);
  int v350 = v348 + 779;
  unsigned int v351 = (v348 + 779) ^ 0xBE9EFB0B;
  unsigned int v352 = ((2 * (v351 + (v316 ^ 0x5D592DE9))) & 0xF6FEF59E) + ((v351 + (v316 ^ 0x5D592DE9)) ^ 0xFB7F7ACF);
  HIDWORD(v838) = (v838 >> 18) - ((2 * (v838 >> 18)) & 0x7BD0F1CE);
  HIDWORD(v125) = (v348 + 779) ^ 0xB;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EFB00;
  int v353 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xC6391E44);
  HIDWORD(v125) = (v348 + 779) ^ 0x30B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EF800;
  int v354 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xDBDBC664);
  HIDWORD(v125) = (v348 + 779) ^ 0x1B0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EE000;
  int v355 = v125 >> 13;
  HIDWORD(v125) = (v348 + 779) ^ 0x9EFB0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE000000;
  int v356 = ((v125 >> 25) ^ 0x39EFFFE1)
       + ((2 * (v125 >> 25)) & 0x73DFFFC2)
       - 972029921
       + ((v354 + 1844306738) ^ (v353 - 484667614) ^ 0x8EF16C10);
  unsigned int v357 = (a54 ^ 0x5C14E8AA ^ (v348 + 779)) + 75531569 + v352;
  HIDWORD(v125) = (v348 + 779) ^ 0x1EFB0B;
  LODWORD(v125) = (v348 + 779) ^ 0xBE800000;
  int v358 = v125 >> 22;
  int v359 = (v340 - ((2 * v340 + 130637820) & 0x3CE17048) + 1112893474) ^ v304;
  HIDWORD(v125) = v359 ^ 0x7B276;
  LODWORD(v125) = v359 ^ 0xBB400000;
  int v360 = v125 >> 19;
  HIDWORD(v125) = -808 - v348;
  LODWORD(v125) = (v348 + 779) ^ 0xBE9EFB08;
  int v361 = v125 >> 2;
  int v362 = v360 - ((2 * v360) & 0x897F7756);
  unsigned int v363 = (a54 ^ 0xE28A13A1) + (v357 ^ 0x77BDEBFD) + ((2 * v357) & 0xEF7BD7FA) - 2008935421;
  unsigned int v364 = (v363 ^ 0xFE3679BF)
       + ((2 * v363) & 0xFC6CF37E)
       + 29984321
       + (a55 ^ 0x255F8CBE ^ (v356 - ((2 * v356) & 0x96BE3548) - 882959708));
  unsigned int v365 = v359;
  HIDWORD(a42) = v359;
  HIDWORD(v125) = v359 ^ 0x1B276;
  LODWORD(v125) = v359 ^ 0xBB460000;
  int v366 = (v125 >> 17) - ((2 * (v125 >> 17)) & 0x62EBFB94);
  unsigned int v367 = (v358 ^ 0xA1020801)
       + (v361 ^ 0xCFCBF7D5)
       + (v355 ^ 0xEBFDFFBA)
       + ((2 * v361) & 0x9F97EFAA)
       + ((2 * v355) & 0xD7FBFF74)
       - ((2 * v358) & 0xBDFBEFFC);
  unsigned int v368 = (v324 ^ 0xE03E7D4D)
       + ((v351 + 1 + (v316 ^ 0xA2A6D216) - ((2 * (v351 + 1 + (v316 ^ 0xA2A6D216))) & 0x7DEC15DE) + 1056312047) ^ (v351 + (a54 ^ 0xE28A13A1) + 240762166 + (~(2 * (v351 + (a54 ^ 0xE28A13A1))) | 0xE34C8595)) ^ 0xCF504825)
       + 1;
  int v369 = v367
       + (v368 ^ 0xBFD67BF9)
       + ((2 * v368) & 0x7FACF7F2)
       - 480410505
       + (v842 ^ 0x176A5998 ^ (((2 * v364) & 0xD5B95E44)
                             + (v364 ^ 0x6ADCAF22)
                             - ((2 * (((2 * v364) & 0xD5B95E44) + (v364 ^ 0x6ADCAF22)) + 182732104) & 0x12CA29CE)
                             - 1630062709));
  int v370 = v369 - 1083024199 - ((2 * v369) & 0x7EE4B972);
  unsigned int v868 = v349 - ((2 * v349) & 0xC8B94FCC) - 463689754;
  HIDWORD(v125) = v868 ^ 0x4A7E6;
  LODWORD(v125) = v868 ^ 0xE4580000;
  int v371 = v125 >> 19;
  HIDWORD(v125) = v868 ^ 0xA7E6;
  LODWORD(v125) = v868 ^ 0xE45C0000;
  int v372 = v125 >> 17;
  unsigned int v373 = (v350 ^ 0x416104F4)
       + (v370 ^ 0xBF725CB9)
       + 1502413600
       - ((2 * ((v350 ^ 0x416104F4) + (v370 ^ 0xBF725CB9) + 1)) & 0xB31A063E);
  HIDWORD(v125) = v370 ^ 0x325CB9;
  LODWORD(v125) = v370 ^ 0xBF400000;
  int v374 = v125 >> 22;
  HIDWORD(v125) = v370 ^ 0x1CB9;
  LODWORD(v125) = v370 ^ 0xBF724000;
  int v375 = (v125 >> 13) - 1202542808 + (~(2 * (v125 >> 13)) | 0x8F5AB1B1);
  HIDWORD(v125) = v370 ^ 0x4B9;
  LODWORD(v125) = v370 ^ 0xBF725800;
  int v376 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0x2FA58F64);
  HIDWORD(v125) = v370 ^ 1;
  LODWORD(v125) = v370 ^ 0xBF725CB8;
  int v377 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xAC18E9A8);
  HIDWORD(v125) = v370 ^ 0x1725CB9;
  LODWORD(v125) = v370 ^ 0xBE000000;
  int v378 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0xA8416524);
  unsigned int v379 = (v374 ^ 0x224A6000) - ((2 * v374) & 0xBB6B3FFE) - 575299584 + ((v377 + 1443656916) ^ v375 ^ 0xEE5ED3F3);
  HIDWORD(v125) = v370 ^ 0xFFFFFFF9;
  LODWORD(v125) = v370 ^ 0xBF725C80;
  unsigned int v380 = (v373 ^ ((v370 ^ 0xBF725CB9)
                + (v316 ^ 0x5D592DE9)
                - ((2 * ((v370 ^ 0xBF725CB9) + (v316 ^ 0x5D592DE9))) & 0xC88B2712)
                + 1682281353) ^ 0x3DC89096)
       - v352;
  int v381 = (a54 ^ 0xE28A13A1)
       + ((v376 + 399689650) ^ ((v125 >> 6) - ((2 * (v125 >> 6)) & 0xA318DE4C) - 779325658) ^ (v378 - 736054638) ^ 0xED81E5F9);
  unsigned int v382 = v351 - 2080372686 + ((2 * v370) ^ 0x51B4EF9) + ((4 * v370) & 0xF7FFEF14 ^ 0xF5C96204) + 67;
  unsigned int v383 = ((2 * v316) ^ 0xC40DA539)
       + ((4 * v316) & 0xFD7FFDD4 ^ 0x7564B584)
       + (v382 ^ 0x2C069000)
       - ((2 * v382) & 0xA7F2DFFE)
       + ((v381 + 1) ^ 0xADDEE3F5)
       + ((2 * (v381 + 1)) & 0x5BBDC7EA)
       + 1;
  int v384 = (v841 ^ 0xB027D600 ^ (v383 - ((2 * v383 - 1166259114) & 0xA70A6944) + 818109133))
       + ((v379 - ((2 * v379) & 0x9A6B33E4) + 1295358450) ^ 0x4DB7F496 ^ (v380
                                                                        - ((2 * v380 + 16709022) & 0x104DAC8)
                                                                        - 66983885));
  unsigned int v385 = v384 - 523289688 - ((2 * v384) & 0xC19E7750);
  HIDWORD(v125) = v385 ^ 0x28;
  LODWORD(v125) = v385 ^ 0xE0CF3B80;
  int v386 = v125 >> 6;
  HIDWORD(v125) = v385 ^ 0x1BA8;
  LODWORD(v125) = v385 ^ 0xE0CF2000;
  int v387 = v125 >> 13;
  HIDWORD(v125) = v385 ^ 0xF3BA8;
  LODWORD(v125) = v385 ^ 0xE0C00000;
  int v388 = v125 >> 22;
  unsigned int v389 = (v371 ^ 0x29091221) + (v372 ^ 0x37D29EDD) + ((2 * v372) & 0x6FA53DBA) - ((2 * v371) & 0xADEDDBBC) + 1;
  HIDWORD(v857) = v389 - 1236774039 + (~(2 * v389 + 1044946434) | 0xD1B7F731);
  int v390 = (v370 ^ 0x408DA346) + 1;
  unsigned int v391 = (((v385 ^ 0xE0CF3BA8) + v390) ^ 0x5FF4CD5C) - 1609878876 + ((2 * ((v385 ^ 0xE0CF3BA8) + v390)) & 0xBFE99AB8);
  unsigned int v392 = (v350 ^ 0x416104F4)
       + (((v385 ^ 0xE0CF3BA8) + (v370 ^ 0xBF725CB9)) ^ 0xEDEFE5DD)
       + ((2 * ((v385 ^ 0xE0CF3BA8) + (v370 ^ 0xBF725CB9))) & 0xDBDFCBBA)
       + 303045156;
  unsigned int v393 = ((2 * (v351 + 1 + (v385 ^ 0x1F30C457))) & 0xBFD9BF7E)
       + ((v351 + 1 + (v385 ^ 0x1F30C457)) ^ 0xDFECDFBF)
       + (v392 ^ 0xFB76FD5F)
       + ((2 * v392) & 0xF6EDFABE);
  HIDWORD(v125) = v385 ^ 0xCF3BA8;
  LODWORD(v125) = v385 ^ 0xE0000000;
  int v394 = v125 >> 25;
  HIDWORD(v125) = v385 ^ 0x3A8;
  LODWORD(v125) = v385 ^ 0xE0CF3800;
  int v395 = (v394 ^ 0x517DADFF)
       + ((2 * v394) & 0xA2FB5BFE)
       - 1367191038
       + ((v386 - ((2 * v386) & 0xFB748A06) + 2109359363) ^ ((v125 >> 11) - ((2 * (v125 >> 11)) & 0xBAA08E6A) - 581941451) ^ 0x5F15FDC9);
  unsigned int v396 = v323 + (v395 ^ 0x6FFFEB47) + ((2 * v395) & 0xDFFFD68E) - 1879042887;
  int v397 = ((v393 + 433928664 + (~(2 * v393 + 1228424644) | 0x157DD215)) ^ 0x50580AC7 ^ (v396
                                                                                     - ((2 * v396) & 0x4A323864)
                                                                                     - 1525081038))
       + 672521749;
  HIDWORD(v125) = v384;
  LODWORD(v125) = v385 ^ 0xE0CF3BA8;
  unsigned int v398 = (v373 ^ 0x598D031F)
       + ((v391 + (v350 ^ 0x5E51C0A3 ^ v385)) ^ 0xFBA75DFE)
       + ((2 * (v391 + (v350 ^ 0x5E51C0A3 ^ v385))) & 0xF74EBBFC)
       + 72917506;
  unsigned int v399 = HIDWORD(v841) + (v397 ^ 0x4FFBFDBC) + ((2 * v397) & 0x9FF7FB78) - 1341914556;
  int v400 = ((v125 >> 2) ^ 0x5BE7FFDE)
       + (v388 ^ 0x9FFFBDEF)
       + (v387 ^ 0x890A0405)
       + ((2 * (v125 >> 2)) & 0xB7CFFFBC)
       + ((2 * v388) & 0x3FFF7BDE)
       - ((2 * v387) & 0xEDEBF7F4)
       + (v398 ^ 0xD8043C1)
       - ((2 * v398) & 0xE4FF787C)
       + (v399 ^ 0xEB53CDFF);
  unsigned int v401 = v400
       + 2
       + ((2 * v399) & 0xD6A79BFE)
       - 2 * ((v400 + 2 + ((2 * v399) & 0xD6A79BFE) + 37366892) & 0x70D4B23F ^ (v400 + 2) & 1)
       + 1930354346;
  unsigned int v402 = (v401 ^ 0xF0D4B23E)
       + (v385 ^ 0xE0CF3BA8)
       - 599513418
       - ((2 * ((v401 ^ 0xF0D4B23E) + (v385 ^ 0xE0CF3BA8))) & 0xB8884D6C);
  unsigned int v403 = ((2 * HIDWORD(v859)) ^ 0x4E60FB37)
       + ((4 * HIDWORD(v859)) & 0x6F9DDFF4 ^ 0x631C0990)
       + 1211174917
       + ((v366 - 1317667382) ^ (v365 >> 10) ^ (v362 + 1153416107) ^ 0xF5E4978D);
  HIDWORD(v125) = v401 ^ 2;
  LODWORD(v125) = v401 ^ 0xF0D4B23C;
  int v404 = v125 >> 2;
  HIDWORD(v125) = v401 ^ 0x123E;
  LODWORD(v125) = v401 ^ 0xF0D4A000;
  int v405 = v125 >> 13;
  HIDWORD(v125) = v401 ^ 0x3E;
  LODWORD(v125) = v401 ^ 0xF0D4B200;
  int v406 = v125 >> 6;
  HIDWORD(v125) = v401 ^ 0x14B23E;
  LODWORD(v125) = v401 ^ 0xF0FFFFFF;
  int v407 = v125 >> 22;
  HIDWORD(v125) = v401 ^ 0x23E;
  LODWORD(v125) = v401 ^ 0xF0D4B000;
  int v408 = v125 >> 11;
  unsigned int v409 = (v370 ^ 0xB0591178 ^ v401) + (v402 ^ 0xDC4426B6) + 1;
  HIDWORD(v125) = v401 ^ 0xD4B23E;
  LODWORD(v125) = v401 ^ 0xF0000000;
  unsigned int v410 = (((v401 ^ 0xF0D4B23E) + v390 - ((2 * ((v401 ^ 0xF0D4B23E) + v390)) & 0x39402922) + 480253073) ^ v402 ^ 0xC0E43227)
       + v391;
  int v411 = v351
       + (v408 ^ 0xCDA820)
       + ((v125 >> 25) ^ 0x3BBFF7FE)
       + (v406 ^ 0xDFD9FF5F)
       + ((2 * (v125 >> 25)) & 0x777FEFFC)
       + ((2 * v406) & 0xBFB3FEBE)
       - ((2 * v408) & 0xFE64AFBE)
       - 476553085;
  unsigned int v412 = (v411 ^ 0x7FDFEA7E)
       - 2145384815
       + ((2 * v411) & 0xFFBFD4FC)
       + (v370 ^ 0x4E2DCF3B ^ (v409 - ((2 * v409) & 0xE2BF2704) - 245394558))
       + 3825;
  int v413 = (DWORD1(v842) ^ 0x690D15D9) + (v412 ^ 0x3D7D9DF7) + ((2 * v412) & 0x7AFB3BEE) + 933432074;
  unsigned int v414 = (v407 ^ 0x100C89D4)
       + (v405 ^ 0xC6800201)
       + (v404 ^ 0x39D7EDFF)
       + ((2 * v404) & 0x73AFDBFE)
       - ((2 * v407) & 0xDFE6EC56)
       - ((2 * v405) & 0x72FFFBFC)
       + (v410 ^ 0x5FC68D6F)
       + ((2 * v410) & 0xBF8D1ADE)
       + (v413 ^ 0x7DB79DFA)
       + ((2 * v413) & 0xFB6F3BF4)
       + 2;
  unsigned int v415 = v414 - ((2 * v414 + 607827330) & 0x28A191AA);
  unsigned int v416 = v415 + 644752278;
  HIDWORD(v125) = (v415 + 644752278) ^ 0x55555555;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C8C0;
  int v417 = v125 >> 6;
  int v418 = (v415 + 644752278) ^ 0x1450C8D5;
  unsigned int v419 = ((2 * (v418 + (v385 ^ 0xE0CF3BA8))) & 0xFFF773F6) + ((v418 + (v385 ^ 0xE0CF3BA8)) ^ 0x7FFBB9FB);
  HIDWORD(v125) = (v415 + 644752278) ^ 0x8D5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C000;
  int v420 = v125 >> 13;
  HIDWORD(v125) = (v415 + 644752278) ^ 0xD5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C800;
  int v421 = v125 >> 11;
  int v422 = (v401 ^ 0xF2B4DC1) + 1;
  HIDWORD(v125) = (v415 + 644752278) ^ 0x50C8D5;
  LODWORD(v125) = (v415 + 644752278) ^ 0x14000000;
  int v423 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8B07D29C);
  HIDWORD(v125) = (v415 + 644752286) ^ 1;
  LODWORD(v125) = (v415 + 644752278) ^ 0x1450C8D4;
  int v424 = v125 >> 2;
  unsigned int v425 = (v418 + v422 - 65963919 - ((2 * (v418 + v422)) & 0xF822F0E2)) ^ 0xFC117871 ^ (v419 - 2147203579);
  unsigned int v426 = (v421 ^ 0x4BB3EFDB) + (v417 ^ 0x797C57FD) + ((2 * v417) & 0xF2F8AFFA) + ((2 * v421) & 0x9767DFB6);
  HIDWORD(v125) = v416 ^ 0x10C8D5;
  LODWORD(v125) = v416 ^ 0x14400000;
  int v427 = ((v125 >> 22) ^ 0x75FBDFF3)
       + (v424 ^ 0xBE7DDBFD)
       + (v420 ^ 0x36808D10)
       + ((2 * (v125 >> 22)) & 0xEBF7BFE6)
       + ((2 * v424) & 0x7CFBB7FA)
       - ((2 * v420) & 0x92FEE5DE)
       + 1;
  unsigned int v428 = ((v423 + 1166272846) ^ 0xB5BF356 ^ (v426 - 2 * ((v426 + 986691624) & 0x4ED81A1A ^ v426 & 2) - 1985490368))
       + (v370 ^ 0xBF725CB9);
  unsigned int v429 = ((v425 - 1815589301 - ((2 * v425) & 0x27909C96)) ^ 0x93C84E4B) + (v385 ^ 0x101B8996 ^ v401);
  unsigned int v430 = (v385 ^ 0xE0CF3BA8)
       + ((v418 + (v401 ^ 0xF0D4B23E)) ^ 0xEE87A07D)
       + ((2 * (v418 + (v401 ^ 0xF0D4B23E))) & 0xDD0F40FA)
       + v419
       - 1854102136;
  int v431 = (v859 ^ 0x2097FE61) + (v430 ^ 0xAF7DFAF7) + ((2 * v430) & 0x5EFBF5EE) + 1350698249;
  unsigned int v432 = (v431 ^ 0x2A04042)
       - ((2 * v431) & 0xFABF7F7A)
       + (v428 ^ 0xE7EF1F7F)
       + ((2 * v428) & 0xCFDE3EFE)
       + ((v427 - ((2 * v427 + 705392126) & 0x25BB7EB4) - 1478265255) ^ 0xDA59E6D0 ^ (v429
                                                                                    - ((2 * v429) & 0x9108B314)
                                                                                    - 930850422))
       - 1335681992;
  int v433 = v432 + 402274304 - ((2 * v432) & 0x2FF47E9A);
  int v434 = v433 + 1869;
  int v435 = (v433 + 1869) ^ 0x17FA3F4D;
  int v436 = ((v435 + v422) ^ 0x3AFDFFCE)
       + ((v435 + v418) ^ 0x2E7EF3FF)
       + ((2 * (v435 + v418)) & 0x5CFDE7FE)
       + ((2 * (v435 + v422)) & 0x75FBFF9C);
  unsigned int v437 = v436 - ((2 * v436 + 755374182) & 0x87DD9DE4);
  HIDWORD(v125) = (v433 + 1889) ^ 1;
  LODWORD(v125) = (v433 + 1869) ^ 0x17FA3F4C;
  int v438 = v125 >> 2;
  unsigned int v439 = (v416 ^ 0xEBAF372A) + 1;
  int v440 = v435 + v439 + 412483063 - ((2 * (v435 + v439)) & 0x312BFBEE);
  HIDWORD(v125) = v434 ^ 0xD;
  LODWORD(v125) = v434 ^ 0x17FA3F40;
  int v441 = v125 >> 6;
  HIDWORD(v125) = v434 ^ 0x74D;
  LODWORD(v125) = v434 ^ 0x17FA3800;
  int v442 = v125 >> 11;
  HIDWORD(v125) = v434 ^ 0x1F4D;
  LODWORD(v125) = v434 ^ 0x17FA2000;
  int v443 = v125 >> 13;
  HIDWORD(v125) = v434 ^ 0x1FA3F4D;
  LODWORD(v125) = v434 ^ 0x16000000;
  int v444 = v125 >> 25;
  HIDWORD(v125) = v434 ^ 0x3A3F4D;
  LODWORD(v125) = v434 ^ 0x17C00000;
  unsigned int v445 = (v442 ^ 0x11342606)
       + (v444 ^ 0xCD2AFEFF)
       + (v441 ^ 0x7B7EF77B)
       + ((2 * v444) & 0x9A55FDFE)
       + ((2 * v441) & 0xF6FDEEF6)
       - ((2 * v442) & 0xDD97B3F2)
       - 1507728512
       + (v401 ^ 0x3AAAF46C ^ ((v440 ^ 0x1895FDF7)
                             + (v401 ^ 0xE72E8D73 ^ v434)
                             - ((2 * ((v440 ^ 0x1895FDF7) + (v401 ^ 0xE72E8D73 ^ v434))) & 0x94FC8CA4)
                             - 897694126));
  unsigned int v446 = (v385 ^ 0xE0CF3BA8) + (v445 ^ 0xB6892239) - ((2 * v445) & 0x92EDBB8C) + 1232526791;
  unsigned int v447 = (v443 ^ 0x77B7E9FF) + ((2 * v443) & 0xEF6FD3FE) - 2008541695 + (v401 ^ v416 ^ 0x276AB419 ^ (v437 + 1517411109));
  int v448 = (v438 ^ 0xFED42DF5)
       + ((v125 >> 22) ^ 0xEF87ACE9)
       + ((2 * v438) & 0xFDA85BEA)
       + ((2 * (v125 >> 22)) & 0xDF0F59D2)
       + (v447 ^ 0xB000000)
       - ((2 * v447) & 0xE9FFFFFE);
  unsigned int v449 = (HIDWORD(v842) ^ 0x6ED89BDD) + (v446 ^ 0x7FFBCAEB) + ((2 * v446) & 0xFFF795D6) - 190921806;
  unsigned int v450 = v448 + (v449 ^ 0xB5FEF23C) + ((2 * v449) & 0x6BFDE478);
  int v451 = (2 * v450 + 558523852) & 0x34DCD9B0;
  v450 -= 351035458;
  unsigned int v452 = v450 - v451;
  HIDWORD(v125) = (v450 - v451) ^ 0x18;
  LODWORD(v125) = (v450 - v451) ^ 0x9A6E6CC0;
  int v453 = v125 >> 6;
  HIDWORD(v125) = v452 ^ 0x4D8;
  LODWORD(v125) = v452 ^ 0x9A6E6800;
  int v454 = v125 >> 11;
  HIDWORD(v125) = v452 ^ 0xCD8;
  LODWORD(v125) = v452 ^ 0x9A6E6000;
  int v455 = v125 >> 13;
  HIDWORD(v125) = v450;
  LODWORD(v125) = v452 ^ 0x9A6E6CD8;
  int v456 = (v455 ^ 0xFDBFFBEF) + ((v125 >> 2) ^ 0x737FFD77) + ((2 * (v125 >> 2)) & 0xE6FFFAEE) + ((2 * v455) & 0xFB7FF7DE);
  unsigned int v457 = (v454 ^ 0x80070504) + (v453 ^ 0xFEEFFFAF) + ((2 * v453) & 0xFDDFFF5E) - ((2 * v454) & 0xFFF1F5F6) + 1;
  HIDWORD(v125) = v452 ^ 0x2E6CD8;
  LODWORD(v125) = v452 ^ 0x9A400000;
  int v458 = (v125 >> 22) - ((2 * (v125 >> 22)) & 0x5F42EEEA);
  HIDWORD(v125) = v452 ^ 0x6E6CD8;
  LODWORD(v125) = v452 ^ 0x9A000000;
  unsigned int v459 = (v434 ^ v416 ^ v452 ^ 0xF2DAD852 ^ ((v452 ^ 0x9A6E6CD8)
                                           + v439
                                           - ((2 * ((v452 ^ 0x9A6E6CD8) + v439)) & 0xD63C8624)
                                           + 1797145362))
       - 898248179;
  int v460 = (v459 ^ 0x35EDFFDB)
       + ((2 * v459) & 0x6BDBFFB6)
       - 904789979
       + (v401 ^ ((v125 >> 25) - ((2 * (v125 >> 25)) & 0xFAC73AB4) - 43803302) ^ 0x46739111 ^ (v457
                                                                                             - ((2 * v457 + 34731672) & 0x97897CEA)
                                                                                             - 858932799));
  unsigned int v461 = (v843 ^ 0x4C8AF93D ^ (v460 - ((2 * v460) & 0x91880EB4) - 926677158))
       + (v434 ^ v416 ^ v440 ^ (v458 + 799111029) ^ 0xA847A8A ^ (v456 - ((2 * v456 + 494931252) & 0x7C340F20) - 858124758));
  int v462 = v461 - 2125588480 - ((2 * v461) & 0x29C3F08);
  int v463 = v462 + 1924;
  unsigned int v464 = (v462 + 1924) ^ 0x814E1F84;
  HIDWORD(v125) = (v462 + 1924) ^ 0x14E1F84;
  LODWORD(v125) = v462 - 2147481724;
  int v465 = v125 >> 25;
  HIDWORD(v125) = (v462 + 1924) ^ 4;
  LODWORD(v125) = (v462 + 1924) ^ 0x814E1F80;
  int v466 = v125 >> 6;
  unsigned int v467 = v464 + (v452 ^ 0x9A6E6CD8) + 1189952680 - ((2 * (v464 + (v452 ^ 0x9A6E6CD8))) & 0x8DDA7950);
  HIDWORD(v125) = v463 ^ 0x1F84;
  LODWORD(v125) = v463 ^ 0x814E0000;
  int v468 = v125 >> 13;
  HIDWORD(v125) = v463 ^ 0x784;
  LODWORD(v125) = v463 ^ 0x814E1800;
  int v469 = ((v125 >> 11) ^ 0xA443)
       + (v466 ^ 0xDF7EBFF5)
       + ((2 * v466) & 0xBEFD7FEA)
       - ((2 * (v125 >> 11)) & 0xFFFEB778)
       + 1;
  unsigned int v470 = v435
       + (((v434 ^ 0x96B420C9 ^ v463) + (v452 ^ 0x9A6E6CD8)) ^ 0xEFFBDFEB)
       + ((2 * ((v434 ^ 0x96B420C9 ^ v463) + (v452 ^ 0x9A6E6CD8))) & 0xDFF7BFD6)
       + 268705813;
  HIDWORD(v125) = v463 ^ 0xE1F84;
  LODWORD(v125) = v463 ^ 0x81400000;
  unsigned int v471 = ((v465 - ((2 * v465) & 0x505D8C0C) - 1473329658) ^ 0x7A114903 ^ (v469
                                                                        - ((2 * v469 + 1090598798) & 0xA47F1E0A)
                                                                        - 222287156))
       + v418;
  unsigned int v472 = v464 + (v470 ^ 0x88064242) - ((2 * v470) & 0xEFF37B7A) + 2012855742;
  int v473 = (v468 ^ 0x883049C)
       + ((__PAIR64__(v461, v464) >> 2) ^ 0xFEE3FFFD)
       + ((v125 >> 22) ^ 0xCA8C1033)
       + ((2 * (__PAIR64__(v461, v464) >> 2)) & 0xFDC7FFFA)
       - ((2 * (v125 >> 22)) & 0x6AE7DF98)
       - ((2 * v468) & 0xEEF9F6C6)
       + (((v452 ^ 0x9A6E6CD8) + v435 - ((2 * ((v452 ^ 0x9A6E6CD8) + v435)) & 0x71010F08) - 1199536252) ^ v467 ^ 0xAD3DB291 ^ ((v434 ^ 0xE805C0B2) + v464 + 1 - ((2 * ((v434 ^ 0xE805C0B2) + v464 + 1)) & 0xA6A0137A) + 1397754301))
       + 772598580;
  unsigned int v474 = (DWORD2(v842) ^ 0xFEACAE9D)
       + (v472 ^ 0xFFFBF5EF)
       + ((2 * v472) & 0xFFF7EBDE)
       + (v471 ^ 0xEFF6F6DF)
       + ((2 * v471) & 0xDFEDEDBE)
       + 1920737616;
  unsigned int v475 = ((2 * v473) & 0xB277F798) + (v473 ^ 0xD93BFBCC) + (v474 ^ 0xDFFF77BA) + ((2 * v474) & 0xBFFEEF74);
  unsigned int v476 = v475 - ((2 * v475 - 1920395020) & 0xCBC63072) + 749184179;
  unsigned int v477 = (((v476 ^ 0xE5E31839) + v464) ^ 0x7EFFFFFE)
       + (v452 ^ 0x80728B1E ^ v476)
       + ((2 * ((v476 ^ 0xE5E31839) + v464)) & 0xFDFFFFFC);
  HIDWORD(v125) = v476 ^ 0x1839;
  LODWORD(v125) = v476 ^ 0xE5E30000;
  int v478 = v125 >> 13;
  HIDWORD(v125) = v476 ^ 1;
  LODWORD(v125) = v476 ^ 0xE5E31838;
  int v479 = v125 >> 2;
  unsigned int v480 = (v476 ^ v463 ^ 0x7F1C2768 ^ ((v476 ^ 0xE5E31839)
                                    + (v452 ^ 0x9A6E6CD8)
                                    - ((2 * ((v476 ^ 0xE5E31839) + (v452 ^ 0x9A6E6CD8))) & 0x376241AA)
                                    + 464593109))
       + (v467 ^ 0x46ED3CA8);
  HIDWORD(v125) = v476 ^ 0x39;
  LODWORD(v125) = v476 ^ 0xE5E31800;
  int v481 = v125 >> 6;
  HIDWORD(v125) = v476 ^ 0x39;
  LODWORD(v125) = v476 ^ 0xE5E31800;
  int v482 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0x75166D24) - 1165281646;
  HIDWORD(v125) = v482 ^ 0x33692;
  LODWORD(v125) = v482 ^ 0xBA880000;
  int v483 = (v125 >> 19) - ((2 * (v125 >> 19)) & 0xC3EEFC76);
  HIDWORD(v125) = v476 ^ 0x1E31839;
  LODWORD(v125) = v476 ^ 0xE4000000;
  int v484 = v125 >> 25;
  v483 += 1643609659;
  HIDWORD(v125) = v483 ^ 0x1E3B;
  LODWORD(v125) = v483 ^ 0x61F76000;
  int v485 = v125 >> 13;
  unsigned int v486 = (v478 ^ 0x80010870) + (v479 ^ 0x7B6E73FD) + ((2 * v479) & 0xF6DCE7FA) - ((2 * v478) & 0xFFFDEF1E);
  HIDWORD(v125) = v476 ^ 0x231839;
  LODWORD(v125) = v476 ^ 0xE5C00000;
  unsigned int v487 = v435
       + (v484 ^ 0x84000832)
       + (v481 ^ 0x36441B08)
       - ((2 * v481) & 0x9377C9EE)
       - ((2 * v484) & 0xF7FFEF9A)
       + (v485 ^ 0x76FAEFDF)
       + ((2 * v485) & 0xEDF5DFBE);
  unsigned int v488 = (v452 ^ 0x84BD2D70 ^ (v477 - ((2 * v477 + 33554438) & 0x3DA68350) - 1613545045))
       + ((v487 - 826217241) ^ 0xDBEEC9DE)
       + ((2 * (v487 - 826217241)) & 0xB7DD93BC)
       + 605107746;
  int v489 = (v844 ^ 0xDC876C2A) + (v488 ^ 0xBBF07FDE) + ((2 * v488) & 0x77E0FFBC) - 911972820;
  int v490 = (((v125 >> 22) - 1863225346 + (~(2 * (v125 >> 22)) | 0xDE1D2005)) ^ (v480 - ((2 * v480) & 0xC8292E2) + 104941937) ^ (v486 + 1 - ((2 * (v486 + 1) + 153159460) & 0x255DD688) + 390033110) ^ 0x841ECDC8)
       + (v489 ^ 0xFFCFBA77)
       + ((2 * v489) & 0xFF9F74EE)
       + 3163529;
  unsigned int v491 = v490 - 939368528 - ((2 * v490) & 0x9004BF60);
  HIDWORD(v125) = v491 ^ 0x1FB0;
  LODWORD(v125) = v491 ^ 0xC8024000;
  int v492 = v125 >> 13;
  HIDWORD(v125) = v490;
  LODWORD(v125) = v491 ^ 0xC8025FB0;
  int v493 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x74EBEA4C);
  int v494 = v492 - ((2 * v492) & 0x77FAB6E0);
  unsigned int v495 = (v491 ^ 0xC8025FB0)
       + (v476 ^ 0xE5E31839)
       - 2065618537
       - ((2 * ((v491 ^ 0xC8025FB0) + (v476 ^ 0xE5E31839))) & 0x9C2532E);
  HIDWORD(v125) = v491 ^ 0x7B0;
  LODWORD(v125) = v491 ^ 0xC8025800;
  int v496 = v125 >> 11;
  v493 += 980808998;
  HIDWORD(v125) = v493 ^ 0x7526;
  LODWORD(v125) = v493 ^ 0x3A758000;
  int v497 = (v125 >> 15) - ((2 * (v125 >> 15)) & 0x44B6BFAE) - 1571069993;
  HIDWORD(v125) = v497 ^ 0x15FD7;
  LODWORD(v125) = v497 ^ 0xA25A0000;
  int v498 = v125 >> 17;
  HIDWORD(v125) = v491 ^ 0x30;
  LODWORD(v125) = v491 ^ 0xC8025F80;
  int v499 = v125 >> 6;
  HIDWORD(v125) = v491 ^ 0x25FB0;
  LODWORD(v125) = v491 ^ 0xC8000000;
  int v500 = v125 >> 22;
  HIDWORD(v125) = v491 ^ 0x25FB0;
  LODWORD(v125) = v491 ^ 0xC8000000;
  unsigned int v501 = (v500 ^ 0x5BFF7EFD)
       + ((2 * v500) & 0xB7FEFDFA)
       - 1543470845
       + ((v494 - 1141023888) ^ 0xBB25C495 ^ (v498 - ((2 * v498) & 0x1B13FCA) + 14196709));
  unsigned int v502 = v501 - ((2 * v501) & 0xFD22E57A);
  unsigned int v503 = v495 ^ 0x84E12997;
  unsigned int v504 = (((v491 ^ 0xC8025FB0) + v464) ^ 0xFFCD9FF)
       + ((2 * ((v491 ^ 0xC8025FB0) + v464)) & 0x1FF9B3FE)
       - 268229119
       + (v495 ^ 0x84E12997);
  unsigned int v505 = (((v463 ^ 0x7EB1E07B)
         + (v491 ^ 0xC8025FB0)
         + 1
         - ((2 * ((v463 ^ 0x7EB1E07B) + (v491 ^ 0xC8025FB0) + 1)) & 0x43E3DB48)
         + 569503140) ^ v495 ^ 0xA510C433)
       + (v476 ^ v463 ^ 0x64AD07BD);
  int v506 = (v452 ^ 0x9A6E6CD8)
       + (v496 ^ 0xF3FDFF4F)
       + ((v125 >> 25) ^ 0xB3FFEF7B)
       + ((2 * v496) & 0xE7FBFE9E)
       + ((2 * (v125 >> 25)) & 0x67FFDEF6);
  unsigned int v507 = v464 + (v504 ^ 0xFEBAD1FD) + ((2 * v504) & 0xFD75A3FA) + 21310979;
  unsigned int v508 = (v499 ^ 0x240C1634)
       - ((2 * v499) & 0xB7E7D396)
       + ((v506 + 1476530486) ^ 0xDEB7FAFA)
       + ((2 * (v506 + 1476530486)) & 0xBD6FF5F4)
       + (v507 ^ 0x1880502C)
       - ((2 * v507) & 0xCEFF5FA6)
       + 2;
  unsigned int v509 = ((v505 - ((2 * v505) & 0x11DD891E) - 1997618033) ^ 0xF67FB632 ^ (v502 + 2123461309))
       + (HIDWORD(v843) ^ 0x94037F7C ^ (v508 - ((2 * v508 + 252503368) & 0x60F857D6) - 1207787889));
  int v510 = v509 - 1087184960 - ((2 * v509) & 0x7E65BF80);
  unsigned int v511 = (v510 ^ 0xBF32DFC0)
       + (v491 ^ 0x37FDA04F)
       - 1775220252
       - ((2 * ((v510 ^ 0xBF32DFC0) + (v491 ^ 0x37FDA04F) + 1)) & 0x2C6093C6);
  unsigned int v512 = (v476 ^ 0x5AD1C7F9 ^ v510)
       - 2145891039
       + (((v510 ^ 0xBF32DFC0) + (v491 ^ 0xC8025FB0)) ^ 0x7FE7AEE2)
       + ((2 * ((v510 ^ 0xBF32DFC0) + (v491 ^ 0xC8025FB0))) & 0xFFCF5DC4)
       + 1021;
  HIDWORD(v125) = v509;
  LODWORD(v125) = v510 ^ 0xBF32DFC0;
  int v513 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xA954501C) - 727046130;
  HIDWORD(v125) = v513 ^ 0x2A280E;
  LODWORD(v125) = v513 ^ 0xD4800000;
  int v514 = (v125 >> 23) - ((2 * (v125 >> 23)) & 0xBD3778BE) + 1587264607;
  HIDWORD(v125) = v514 ^ 0x1E9BBC5F;
  LODWORD(v125) = v514 ^ 0x40000000;
  int v515 = v125 >> 30;
  HIDWORD(v125) = v510 ^ 0x7C0;
  LODWORD(v125) = v510 ^ 0xBF32D800;
  int v516 = v125 >> 11;
  int v517 = v515 - 1291599872 - ((2 * v515) & 0x6607816A) + 181;
  HIDWORD(v125) = v517 ^ 0xB5;
  LODWORD(v125) = v517 ^ 0xB303C000;
  int v518 = v125 >> 11;
  HIDWORD(v125) = v510 ^ 0x1FC0;
  LODWORD(v125) = v510 ^ 0xBF32C000;
  int v519 = v125 >> 13;
  HIDWORD(v125) = v510 ^ 0x132DFC0;
  LODWORD(v125) = v510 ^ 0xBE000000;
  int v520 = v125 >> 25;
  unsigned int v521 = (v511 ^ ((v510 ^ 0xBF32DFC0)
                + (v476 ^ 0xE5E31839)
                - ((2 * ((v510 ^ 0xBF32DFC0) + (v476 ^ 0xE5E31839))) & 0xB167C6AE)
                + 1488184151) ^ 0xCE83AAB4)
       + v503;
  HIDWORD(v125) = v509;
  LODWORD(v125) = v510 ^ 0xBF32DFC0;
  int v522 = (v516 ^ 0xFBFA64EF)
       + (v520 ^ 0xEF2F7AFF)
       + ((v125 >> 6) ^ 0xFDFEDCD5)
       + ((2 * v520) & 0xDE5EF5FE)
       + ((2 * v516) & 0xF7F4C9DE)
       + ((2 * (v125 >> 6)) & 0xFBFDB9AA);
  HIDWORD(v125) = v510 ^ 0x32DFC0;
  LODWORD(v125) = v510 ^ 0xBF000000;
  unsigned int v523 = (v476 ^ 0x9D10B5FD ^ (v512 - ((2 * v512) & 0xF1E75B88) + 2029235652)) - 2114705756;
  unsigned int v524 = (v523 ^ 0x47F7FFBF)
       + ((2 * v523) & 0x8FEFFF7E)
       + (v463 ^ 0x3B15D732 ^ (v522 - ((2 * v522 + 766412410) & 0x74B7916C) - 785183757))
       - 1207435199;
  int v525 = ((v125 >> 22) ^ 0x7BFFD1EF)
       + (v519 ^ 0xD7F73F7B)
       + ((2 * (v125 >> 22)) & 0xF7FFA3DE)
       + ((2 * v519) & 0xAFEE7EF6)
       + (v521 ^ 0x86004412)
       - ((2 * v521) & 0xF3FF77DA)
       + (v518 ^ 0xF6CF7B51)
       + ((2 * v518) & 0xED9EF6A2)
       + (a35 ^ 0x12308942 ^ (v524 - ((2 * v524) & 0x72E0C5CE) - 1183816985))
       + 792276787;
  unsigned int v526 = v525 - 294856704 - ((2 * v525) & 0xDCD9B1A6);
  unsigned int v527 = v526 + 211;
  HIDWORD(v125) = (v526 + 211) ^ 0xD3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD800;
  int v528 = v125 >> 11;
  HIDWORD(v125) = (v526 + 211) ^ 0x13;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD8C0;
  int v529 = v125 >> 6;
  HIDWORD(v125) = (v526 + 211) ^ 0x2CD8D3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE400000;
  int v530 = ((v840 - 236551607) ^ (v872 >> 3) ^ (HIDWORD(v838) - 1108838169) ^ 0xA8794218)
       + (v403 ^ 0x7F74FFFA)
       + ((2 * v403) & 0xFEE9FFF4);
  unsigned int v531 = (v526 + 211) ^ 0xEE6CD8D3;
  int v532 = (v125 >> 22) - ((2 * (v125 >> 22)) & 0xCEBC65C2);
  HIDWORD(v125) = (v526 + 211) ^ 0x6CD8D3;
  LODWORD(v125) = (v526 + 211) ^ 0xEE000000;
  int v533 = ((v125 >> 25) ^ 0x3BFEFBFC)
       + (v529 ^ 0x4BE6D7B7)
       + (v528 ^ 0x80184D21)
       + ((2 * (v125 >> 25)) & 0x77FDF7F8)
       + ((2 * v529) & 0x97CDAF6E)
       - ((2 * v528) & 0xFFCF65BC)
       + 1;
  HIDWORD(v125) = -224 - v526;
  LODWORD(v125) = (v526 + 211) ^ 0xEE6CD8D0;
  int v534 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x99B4A170);
  unsigned int v535 = v531 + (v491 ^ 0xC8025FB0) - ((2 * (v531 + (v491 ^ 0xC8025FB0))) & 0x143CFDF8) - 1977712900;
  unsigned int v536 = ((2 * (v531 + (v510 ^ 0xBF32DFC0))) & 0xFE8FF5EC)
       + ((v531 + (v510 ^ 0xBF32DFC0)) ^ 0xFF47FAF6)
       + (v535 ^ 0x75E18103);
  unsigned int v537 = (v476 ^ 0x326E2B8 ^ (v533 - ((2 * v533 - 268190122) & 0xCD8BF502) - 557327956))
       + (v491 ^ 0x80CBA76D ^ (v536 + 1233255913 + (~(2 * v536 + 24119830) | 0x6E6C0E45)));
  HIDWORD(v125) = v527 ^ 0x18D3;
  LODWORD(v125) = v527 ^ 0xEE6CC000;
  int v538 = a34 + (v537 ^ 0xF9BBFDFF) + ((2 * v537) & 0xF377FBFE);
  unsigned int v539 = (v527 ^ v510 ^ 0xDB4079EF ^ v535) + (v511 ^ 0x963049E3);
  int v540 = (((v125 >> 13) - ((2 * (v125 >> 13)) & 0xE19683A8) - 255114796) ^ (v534 + 1289375928) ^ (v532 + 1734226657) ^ 0x4F0FF0A ^ (v539 - ((2 * v539) & 0xBF7FB90E) - 541074297))
       + ((v538 + 1174430426) ^ 0xAF7FFCEB)
       + ((2 * (v538 + 1174430426)) & 0x5EFFF9D6)
       + 1350566677;
  int v541 = v540 + 775057280 - ((2 * v540) & 0x5C64DF00);
  int v542 = (v527 ^ 0x1193272C)
       + (v541 ^ 0x2E326F80)
       + 105170083
       - ((2 * ((v527 ^ 0x1193272C) + (v541 ^ 0x2E326F80) + 1)) & 0xC898944);
  HIDWORD(v125) = v541 ^ 0x326F80;
  LODWORD(v125) = v541 ^ 0x2E000000;
  int v543 = v125 >> 22;
  HIDWORD(v125) = v541 ^ 0x326F80;
  LODWORD(v125) = v541 ^ 0x2E000000;
  int v544 = v125 >> 25;
  HIDWORD(v125) = v540;
  LODWORD(v125) = v541 ^ 0x2E326F80;
  int v545 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xD5054D8C);
  HIDWORD(v125) = v541 ^ 0xF80;
  LODWORD(v125) = v541 ^ 0x2E326000;
  int v546 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x635E02C0);
  HIDWORD(v125) = v540;
  LODWORD(v125) = v541 ^ 0x2E326F80;
  unsigned int v547 = (v510 ^ 0x9100B040 ^ v541)
       + (((v541 ^ 0x2E326F80) + v531) ^ 0xBB3F1FC6)
       + ((2 * ((v541 ^ 0x2E326F80) + v531)) & 0x767E3F8C)
       + 1153491002;
  int v548 = (v543 ^ 0xA08830A4)
       - ((2 * v543) & 0xBEEF9EB6)
       + 1601687388
       + (((v125 >> 2) - ((2 * (v125 >> 2)) & 0x2EA9B230) - 1756047080) ^ (v546 - 1313930912) ^ 0x26FBD878);
  int v549 = (v547 - ((2 * v547) & 0xF5B1224) - 2018670318) ^ v527 ^ v510 ^ (v548 - ((2 * v548) & 0x279B0A10) - 1815247608);
  HIDWORD(v125) = v541 ^ 0x780;
  LODWORD(v125) = v541 ^ 0x2E326800;
  int v550 = (v544 ^ 0x80010110)
       - ((2 * v544) & 0xFFFDFDDE)
       + 2147417840
       + (((v125 >> 11) - ((2 * (v125 >> 11)) & 0x3F7ED2BC) - 1614845602) ^ (v545 + 1786947270) ^ 0xF53DCF98);
  HIDWORD(v125) = v549 ^ 0x13E0B09;
  LODWORD(v125) = v549 ^ 0x44444444;
  int v551 = (v125 >> 26) - 464857088 - ((2 * (v125 >> 26)) & 0xC895B72E) + 919;
  HIDWORD(v125) = v551 ^ 0x397;
  LODWORD(v125) = v551 ^ 0xE44AD800;
  unsigned int v552 = (v510 ^ 0x40CD203F)
       + (v542 ^ ((v541 ^ 0x2E326F80)
                + (v510 ^ 0xBF32DFC0)
                - ((2 * ((v541 ^ 0x2E326F80) + (v510 ^ 0xBF32DFC0))) & 0x2AB750A)
                - 2125088123) ^ 0x87117E27)
       + 1;
  unsigned int v553 = (v552 ^ 0xE7DDEF16)
       + ((2 * v552) & 0xCFBBDE2C)
       + 404885738
       + (v491 ^ 0xA22EF07 ^ (v550 - ((2 * v550) & 0x8441616E) - 1038045001));
  int v554 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xA3235B6A) - 778981963;
  HIDWORD(v125) = v554 ^ 0x191ADB5;
  LODWORD(v125) = v554 ^ 0xD0000000;
  int v555 = (a37 ^ 0xD86A5049) + (v553 ^ 0xFFEF9BE5) + ((2 * v553) & 0xFFDF37CA) + 1839310089;
  int v556 = ((2 * v555) & 0xBFFDCABE)
       + (v555 ^ 0xDFFEE55F)
       + ((v125 >> 27) ^ 0xCBEEFBDF)
       + ((2 * (v125 >> 27)) & 0x97DDF7BE);
  int v557 = v556 - ((2 * v556 + 673463684) & 0x54023F9E);
  int v558 = v557 + 2115190417;
  HIDWORD(v125) = -2115190442 - v557;
  LODWORD(v125) = (v557 + 2115190417) ^ 0x2A011FCC;
  int v559 = v125 >> 2;
  int v560 = (v557 + 2115190417) ^ 0x2A011FCF;
  unsigned int v561 = (v541 ^ 0xD1CD907F) + 1;
  unsigned int v562 = v560 + v561 + 1285167391 - ((2 * (v560 + v561)) & 0x9934323E);
  HIDWORD(v125) = v558 ^ 0xF;
  LODWORD(v125) = v558 ^ 0x2A011FC0;
  int v563 = v125 >> 6;
  HIDWORD(v125) = v558 ^ 0xFFFFFFCF;
  LODWORD(v125) = v558 ^ 0x2A011800;
  int v564 = v125 >> 11;
  HIDWORD(v125) = v558 ^ 0xFFFFFFCF;
  LODWORD(v125) = v558 ^ 0x2A010000;
  unsigned int v565 = (v541 ^ 0x433704F ^ v558) + ((v560 + v531) ^ 0x77FF6F4E) + ((2 * (v560 + v531)) & 0xEFFEDE9C) - 2013228878;
  int v566 = (v559 ^ 0xF57EFFAF)
       + ((v125 >> 13) ^ 0x3FBD1F7B)
       + ((2 * (v125 >> 13)) & 0x7F7A3EF6)
       + ((2 * v559) & 0xEAFDFF5E);
  HIDWORD(v125) = v558 ^ 0x11FCF;
  LODWORD(v125) = v558 ^ 0x2A000000;
  int v567 = v125 >> 25;
  HIDWORD(v125) = v558 ^ 0x11FCF;
  LODWORD(v125) = v558 ^ 0x2A000000;
  unsigned int v568 = (v510 ^ 0xBF32DFC0)
       + (v563 ^ 0xCC403B00)
       + (v564 ^ 0x7FDF6FFD)
       + (v567 ^ 0x796EFB69)
       + ((2 * v564) & 0xFFBEDFFA)
       + ((2 * v567) & 0xF2DDF6D2)
       - ((2 * v563) & 0x677F89FE)
       + 980507034;
  unsigned int v569 = (v527 ^ 0xD572D554 ^ (v565 + 991823354 - ((2 * v565) & 0x763C1B0E) + 1933))
       + (v568 ^ 0x75EFEC77)
       + ((2 * v568) & 0xEBDFD8EE)
       - 1978657911;
  int v570 = (v527 ^ 0x3B9238E3 ^ v558) + (v562 ^ 0x4C9A191F) + 1;
  unsigned int v571 = (v542 ^ 0x644C4A2) + (v570 ^ 0x6DBFEC75) + ((2 * v570) & 0xDB7FD8EA) - 1841294453;
  int v572 = (((v125 >> 22) - ((2 * (v125 >> 22)) & 0xF57CD02C) + 2059298838) ^ 0x7D0EF46 ^ (v566
                                                                                       - ((2 * v566 - 1786265172) & 0xFADD0EA0)
                                                                                       + 1211263014))
       + (v571 ^ 0xBFFB3FE5)
       + ((2 * v571) & 0x7FF67FCA)
       + 1074053147;
  unsigned int v573 = (HIDWORD(a36) ^ 0xCD63BF29) + (v569 ^ 0xB0FA5F96) + ((2 * v569) & 0x61F4BF2C) - 1584497390;
  unsigned int v574 = ((2 * v572) & 0x5DF7F23E) + (v572 ^ 0xAEFBF91F) + (v573 ^ 0xF9EDF7DF) + ((2 * v573) & 0xF3DBEFBE);
  int v575 = (2 * v574 + 774643204) & 0x660ABAF0;
  v574 -= 1977914246;
  unsigned int v576 = v574 - v575;
  HIDWORD(v125) = (v574 - v575) ^ 0x578;
  LODWORD(v125) = (v574 - v575) ^ 0x33055800;
  int v577 = v125 >> 11;
  HIDWORD(v125) = v576 ^ 0x38;
  LODWORD(v125) = v576 ^ 0x33055D40;
  int v578 = v125 >> 6;
  HIDWORD(v125) = v576 ^ 0x1D78;
  LODWORD(v125) = v576 ^ 0x33054000;
  int v579 = v125 >> 13;
  HIDWORD(v125) = v576 ^ 0x1055D78;
  LODWORD(v125) = v576 ^ 0x33333333;
  int v580 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8919719E);
  int v581 = v576 ^ 0x33055D78;
  HIDWORD(v125) = v574;
  LODWORD(v125) = v576 ^ 0x33055D78;
  int v582 = (v579 ^ 0xFB2EA89D) + ((v125 >> 2) ^ 0x6C5CAEFE) + ((2 * (v125 >> 2)) & 0xD8B95DFC) + ((2 * v579) & 0xF65D513A);
  unsigned int v583 = (v576 ^ 0x33055D78) + v561;
  unsigned int v584 = (v558 ^ 0xD5FEE030) + 1;
  unsigned int v585 = (v583 ^ 0x597FDAEA)
       + (((v576 ^ 0x33055D78) + v584) ^ 0x6EDBFF7E)
       + ((2 * ((v576 ^ 0x33055D78) + v584)) & 0xDDB7FEFC)
       + ((2 * v583) & 0xB2FFB5D4);
  unsigned int v586 = (v577 ^ 0x81488471) + (v578 ^ 0xBA7F5FFF) + ((2 * v578) & 0x74FEBFFE) - ((2 * v577) & 0xFD6EF71C) + 1;
  HIDWORD(v125) = v576 ^ 0x55D78;
  LODWORD(v125) = v576 ^ 0x33333333;
  int v587 = v585 - ((2 * v585 + 1867008816) & 0x492D63C4) - 600123526;
  int v588 = (v562 ^ 0x17F35702 ^ v587)
       + (((v125 >> 22) - ((2 * (v125 >> 22)) & 0x22EFC650) - 1854414040) ^ 0xF3C44931 ^ (v582
                                                                                        - ((2 * v582 + 820596938) & 0xC5675432)
                                                                                        - 81243522));
  unsigned int v589 = v527 ^ v541 ^ (v580 - 997410609) ^ v587 ^ 0xC1B01097 ^ (v586
                                                               - ((2 * v586 - 2005911778) & 0xC3E95DD2)
                                                               + 640469624);
  int v590 = ((v588 + 1) ^ 0xDE7DF7FF)
       + ((2 * (v588 + 1)) & 0xBCFBEFFE)
       + 562169857
       + (v845 ^ 0x3921CC69 ^ (v589 - 2 * ((v589 + 848821368) & 0x207A7D8F ^ v589 & 3) + 319977988));
  int v591 = v590 - 2095159208 - ((2 * v590) & 0x63CD0B0);
  unsigned int v592 = v591 ^ 0x831E6858;
  HIDWORD(v125) = v591 ^ 0x18;
  LODWORD(v125) = v591 ^ 0x831E6840;
  int v593 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0x52EE9ABA);
  HIDWORD(v125) = v591 ^ 0x11E6858;
  LODWORD(v125) = v591 ^ 0x83FFFFFF;
  int v594 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0xF7B58102);
  HIDWORD(v125) = v591 ^ 0x58;
  LODWORD(v125) = v591 ^ 0x831E6800;
  int v595 = v576 ^ v558;
  int v596 = (((v595 ^ 0x190442B7) + v584) ^ 0xFF435DF3)
       + ((2 * ((v595 ^ 0x190442B7) + v584)) & 0xFE86BBE6)
       + 12362253
       + (v541 ^ (v593 - 1451799203) ^ ((v125 >> 11) - ((2 * (v125 >> 11)) & 0x5A1243E2) - 1391910415) ^ (v594 + 2077933697) ^ 0x5196C3AD);
  HIDWORD(v125) = v591 ^ 0x858;
  LODWORD(v125) = v591 ^ 0x831E6000;
  int v597 = v125 >> 13;
  HIDWORD(v125) = v591 ^ 0x1E6858;
  LODWORD(v125) = v591 ^ 0x83000000;
  int v598 = v125 >> 22;
  int v599 = v591 ^ v576;
  HIDWORD(v125) = v590;
  LODWORD(v125) = v591 ^ 0x831E6858;
  int v600 = (v598 ^ 0xE77DFFFE)
       + (v597 ^ 0xDF07EFFF)
       + ((v125 >> 2) ^ 0xD7FE6AFF)
       + ((2 * v598) & 0xCEFBFFFC)
       + ((2 * v597) & 0xBE0FDFFE)
       + ((2 * (v125 >> 2)) & 0xAFFCD5FE);
  unsigned int v601 = (v595 ^ 0xE6FBBD48)
       + (v591 ^ v576 ^ 0x235BF05E ^ ((v591 ^ 0x831E6858)
                                    + v560
                                    - ((2 * ((v591 ^ 0x831E6858) + v560)) & 0x26818AFC)
                                    - 1824471682))
       + 1;
  unsigned int v602 = v600
       + (v601 ^ 0xFFAEBDE5)
       + ((2 * v601) & 0xFF5D7BCA)
       + 1640818463
       + (HIDWORD(v846) ^ 0x4551BD16 ^ (((2 * v596) & 0xEDFFFFFC)
                                      + (v596 ^ 0x76FFFFFE)
                                      + 546667671
                                      + ~(2
                                        * ((((2 * v596) & 0xEDFFFFFC) + (v596 ^ 0x76FFFFFE) + 733528576) & 0x74DCBA9F ^ (((2 * v596) & 0xEDFFFFFC) + (v596 ^ 0x76FFFFFE)) & 9))));
  int v603 = v602 + 823891553 - ((2 * v602) & 0x62372CC2);
  HIDWORD(v125) = v603 ^ 0x1B9661;
  LODWORD(v125) = v603 ^ 0x31000000;
  int v604 = ((HIDWORD(v840) >> 3) ^ 0x22B83DA4)
       + ((HIDWORD(v840) >> 2) & 0x1C5FF7BE ^ 0x180F84B6)
       - 774896607
       + (HIDWORD(v857) ^ (v868 >> 10) ^ 0x171D134E);
  int v605 = (v125 >> 22) - 1090439267 - ((2 * (v125 >> 22)) & 0x7E026F3A);
  HIDWORD(v125) = v603 ^ 0xFFFFFFE1;
  LODWORD(v125) = v603 ^ 0x311B9640;
  int v606 = v125 >> 6;
  HIDWORD(v125) = v603 ^ 0x661;
  LODWORD(v125) = v603 ^ 0x311B9000;
  int v607 = ((v125 >> 11) ^ 0x4196233)
       + (v606 ^ 0xBFF771E7)
       + ((2 * v606) & 0x7FEEE3CE)
       - ((2 * (v125 >> 11)) & 0xF7CD3B98)
       + 1;
  int v608 = v603 ^ 0x311B9661;
  unsigned int v609 = (v576 ^ 0x21ECB19 ^ v603)
       + (((v603 ^ 0x311B9661) + (v591 ^ 0x831E6858)) ^ 0x6FEEFCC2)
       + ((2 * ((v603 ^ 0x311B9661) + (v591 ^ 0x831E6858))) & 0xDFDDF984)
       - 1877933250;
  HIDWORD(v125) = v603 ^ 0x11B9661;
  LODWORD(v125) = v603 ^ 0x30000000;
  int v610 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x8D3A30C4);
  HIDWORD(v125) = v603 ^ 1;
  LODWORD(v125) = v603 ^ 0x311B9660;
  int v611 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0xFF9874E4);
  HIDWORD(v125) = v603 ^ 0x1661;
  LODWORD(v125) = v603 ^ 0x311B8000;
  unsigned int v612 = ((v610 - 962783134) ^ 0xBC4B1044 ^ (v607 - ((2 * v607 + 2011060170) & 0xF5AC104C) - 1228590069)) + v560;
  int v613 = (v599 ^ 0xD2036200 ^ (v609 - ((2 * v609) & 0xC430AE40) + 1645762336))
       + ((v611 + 2144090738) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x20F04B3E) + 276309407) ^ v605 ^ 0xD0B52870);
  int v614 = (v591 ^ 0x20338B71 ^ (v612 - ((2 * v612) & 0x465BC652) - 1557273815)) + 846739860;
  unsigned int v615 = (HIDWORD(v845) ^ 0xD672F482) + (v614 ^ 0x76BBCE6D) + ((2 * v614) & 0xED779CDA) - 1992019564;
  unsigned int v616 = ((2 * v613) & 0xFEEE7FA6) + (v613 ^ 0xFF773FD3) + (v615 ^ 0xFFFFFFFE) + 4 * (v615 >> 1);
  unsigned int v617 = v616 - ((2 * v616 + 17924190) & 0x7CF2A0A);
  unsigned int v618 = v617 + 74470708;
  int v619 = (v617 + 74470708) ^ 0x3E79505;
  HIDWORD(v125) = (v617 + 74470708) ^ 5;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79500;
  int v620 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xCB46CD62);
  HIDWORD(v125) = (v617 + 74470708) ^ 0x1E79505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x2000000;
  int v621 = v125 >> 25;
  HIDWORD(v125) = (v617 + 74470708) ^ 0x505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79000;
  int v622 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xBA4CAA56);
  HIDWORD(v125) = (v617 + 74470708) ^ 0x1505;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E78000;
  int v623 = v125 >> 13;
  HIDWORD(v125) = (v617 + 74470724) ^ 1;
  LODWORD(v125) = (v617 + 74470708) ^ 0x3E79504;
  unsigned int v624 = (v621 ^ 0x75FFFB27)
       - 1979711478
       + ((2 * v621) & 0xEBFFF64E)
       + ((v622 - 584690389) ^ (v620 + 1705207473) ^ 0x477ACC65)
       + 1232;
  int v625 = (v623 ^ 0x84C03920)
       + ((v125 >> 2) ^ 0xEBDFEF6F)
       + ((2 * (v125 >> 2)) & 0xD7BFDEDE)
       - ((2 * v623) & 0xF67F8DBE)
       + 1;
  HIDWORD(v125) = v618 ^ 0x279505;
  LODWORD(v125) = v618 ^ 0x3C00000;
  unsigned int v626 = (v603 ^ 0xCEE4699E) + v619 + 1 - ((2 * ((v603 ^ 0xCEE4699E) + v619 + 1)) & 0x9023B26C) - 938354378;
  unsigned int v627 = v581 + (v624 ^ 0x6B774F7F) + ((2 * v624) & 0xD6EE9EFE) - 1802981247;
  int v628 = (((v125 >> 22) - ((2 * (v125 >> 22)) & 0x602C6A1E) + 806761743) ^ 0x6CECDB27 ^ (v625
                                                                                       - ((2 * v625 + 515878624) & 0xB9F5DC50)
                                                                                       - 329595496))
       + (v591 ^ ((v591 ^ 0x7CE197A7)
                + (v603 ^ 0x311B9661)
                + 1
                - ((2 * ((v591 ^ 0x7CE197A7) + (v603 ^ 0x311B9661) + 1)) & 0x8C4E677C)
                + 1176974270) ^ v618 ^ 0xECF17D5 ^ v626);
  unsigned int v629 = ((2 * v591) ^ 0x74CA8E2B) + ((4 * v591) & 0xE5ECBD34 ^ 0x468A120) - 1928748699 + v619;
  unsigned int v630 = (v629 ^ 0x7DD37F7B) + ((2 * v629) & 0xFBA6FEF6) - 2111012730 + (v626 ^ 0x37EE26C9);
  unsigned int v631 = (HIDWORD(a38) ^ 0x9C468AF2)
       + 1642195380
       + (v630 ^ 0x9E76DFFF)
       + ((2 * v630) & 0x3CEDBFFE)
       + (v627 ^ 0x3BECBD63)
       + ((2 * v627) & 0x77D97AC6)
       + 4036;
  unsigned int v632 = ((2 * v628) & 0xD7FE3FBE) + (v628 ^ 0xEBFF1FDF) + (v631 ^ 0xDED96F4F) + ((2 * v631) & 0xBDB2DE9E);
  int v633 = v632 - ((2 * v632 + 1783554468) & 0x4D73D94A) + 1541496183;
  HIDWORD(v125) = v633 ^ 0xCA5;
  LODWORD(v125) = v633 ^ 0x26B9E000;
  int v634 = v125 >> 13;
  int v635 = v633 ^ 0x26B9ECA5;
  HIDWORD(v125) = v633 ^ 0x39ECA5;
  LODWORD(v125) = v633 ^ 0x26800000;
  int v636 = v125 >> 22;
  int v637 = v603 ^ 0x32FC0364 ^ v618;
  int v638 = v637 + (v603 ^ 0x311B9661) - ((2 * (v637 + (v603 ^ 0x311B9661))) & 0x12601E62);
  unsigned int v639 = v637
       + (((v633 ^ 0x26B9ECA5) + (v603 ^ 0x311B9661)) ^ 0x5FFAFFCE)
       + ((2 * ((v633 ^ 0x26B9ECA5) + (v603 ^ 0x311B9661))) & 0xBFF5FF9C)
       - 1610285006;
  HIDWORD(v125) = v633 ^ 0x4A5;
  LODWORD(v125) = v633 ^ 0x26B9E800;
  int v640 = v125 >> 11;
  HIDWORD(v125) = v633 ^ 0x25;
  LODWORD(v125) = v633 ^ 0x26B9EC80;
  int v641 = v125 >> 6;
  HIDWORD(v125) = v633 ^ 0xB9ECA5;
  LODWORD(v125) = v633 ^ 0x26000000;
  int v642 = v125 >> 25;
  HIDWORD(v125) = v633 ^ 1;
  LODWORD(v125) = v633 ^ 0x26B9ECA4;
  unsigned int v643 = v592
       + (v642 ^ 0x8008A102)
       + (v640 ^ 0x20401385)
       + (v641 ^ 0x85091C6C)
       - ((2 * v640) & 0xBF7FD8F4)
       - ((2 * v642) & 0xFFEEBDFA)
       - ((2 * v641) & 0xF5EDC726)
       - 626118899;
  unsigned int v644 = (v638 - 1993339087) ^ 0xC7F39840 ^ (v643 - ((2 * v643) & 0x9D872EE2) + 1321441137);
  unsigned int v645 = (v618 ^ 0x255E79A0 ^ v633) + (v639 ^ 0x984811) - ((2 * v639) & 0xFECF6FDC) - 9979921;
  int v646 = (v636 ^ 0x666ADB44)
       + (v634 ^ 0x6FEFBFBE)
       + ((v125 >> 2) ^ 0xD7BB66DF)
       + ((2 * v636) & 0xCCD5B688)
       + ((2 * v634) & 0xDFDF7F7C)
       + ((2 * (v125 >> 2)) & 0xAF76CDBE)
       + (v645 ^ 0x77E75E7D)
       + ((2 * v645) & 0xEFCEBCFA)
       - 637362270
       + (a41 ^ 0xBE6FE340 ^ (v644 - ((2 * v644 + 1590488644) & 0x85BD1262) + 1917124691));
  unsigned int v647 = v646 + 1609988268 - ((2 * v646) & 0xBFECF158);
  unsigned int v648 = (v618 ^ 0xFC186AFA)
       + (v647 ^ 0x5FF678AC)
       + 1369400956
       - ((2 * ((v618 ^ 0xFC186AFA) + (v647 ^ 0x5FF678AC) + 1)) & 0xA33ECCF6);
  unsigned int v649 = (v633 ^ 0xD946135A) + 1;
  unsigned int v650 = (v647 ^ 0x5FF678AC) + v649 - 662939320 - ((2 * ((v647 ^ 0x5FF678AC) + v649)) & 0xB0F8B290);
  HIDWORD(v125) = v647 ^ 0x18AC;
  LODWORD(v125) = v647 ^ 0x5FF66000;
  int v651 = v125 >> 13;
  HIDWORD(v125) = v647 ^ 0x2C;
  LODWORD(v125) = v647 ^ 0x5FF67880;
  int v652 = v125 >> 6;
  HIDWORD(v125) = v647 ^ 0xAC;
  LODWORD(v125) = v647 ^ 0x5FF67800;
  int v653 = v125 >> 11;
  HIDWORD(v125) = v647 ^ 0x1F678AC;
  LODWORD(v125) = v647 ^ 0x5E000000;
  unsigned int v654 = (((v633 ^ 0x26B9ECA5) + v619) ^ 0xA2860234)
       - ((2 * ((v633 ^ 0x26B9ECA5) + v619)) & 0xBAF3FB96)
       + (((v648 ^ 0x519F667B) + (v650 ^ 0xD87C5948)) ^ 0xFDD37E57)
       + ((2 * ((v648 ^ 0x519F667B) + (v650 ^ 0xD87C5948))) & 0xFBA6FCAE)
       + 1;
  int v655 = v608
       + ((v125 >> 25) ^ 0x8026A082)
       + (v652 ^ 0x22201495)
       + (v653 ^ 0xBDEFF6D7)
       - ((2 * v652) & 0xBBBFD6D4)
       - ((2 * (v125 >> 25)) & 0xFFB2BEFA);
  HIDWORD(v125) = v646;
  LODWORD(v125) = v647 ^ 0x5FF678AC;
  int v656 = v125 >> 2;
  unsigned int v657 = ((v648 ^ v650 ^ 0x89E33F33) + v619 - ((2 * ((v648 ^ v650 ^ 0x89E33F33) + v619)) & 0xE08EAC46) - 263760349) ^ 0xF3287A67 ^ (v655 + ((2 * v653) & 0x7BDFEDAE) - 1614195694 - ((2 * (v655 + ((2 * v653) & 0x7BDFEDAE) - 1614195694)) & 0x6DE5888) + 57617476);
  HIDWORD(v125) = v647 ^ a12;
  LODWORD(v125) = v647 ^ 0x5FC00000;
  int v658 = ((v125 >> 22) ^ 0x35FF3A1F)
       + (v656 ^ 0x3BFFECF1)
       + (v651 ^ 0x60B0810)
       + ((2 * (v125 >> 22)) & 0x6BFE743E)
       + ((2 * v656) & 0x77FFD9E2)
       - ((2 * v651) & 0xF3E9EFDE)
       + 1;
  unsigned int v659 = (HIDWORD(v844) ^ 0xDB330C92 ^ (v657 - ((2 * v657 + 1845629730) & 0xFC080D80) - 1257959343))
       + ((v658 - ((2 * v658 + 267100606) & 0x200ACDA8) - 1745143885) ^ 0xE4002607 ^ (v654
                                                                                    - ((2 * v654 - 1085473048) & 0xE80A81A6)
                                                                                    + 1403764807));
  unsigned int v660 = v659 - 137299106;
  unsigned int v661 = v659 - 137299106 - ((2 * v659) & 0xEFA1F694) - 20;
  unsigned int v662 = v661 ^ 0xF7D0FB4A;
  unsigned int v663 = (v661 ^ 0xF7D0FB4A)
       + (v647 ^ 0x5FF678AC)
       + 1774599599
       - ((2 * ((v661 ^ 0xF7D0FB4A) + (v647 ^ 0x5FF678AC))) & 0xD38C7B5E);
  HIDWORD(v125) = v661 ^ 0x34A;
  LODWORD(v125) = v661 ^ 0xF7D0F800;
  int v664 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xA791DEAC);
  unsigned int v665 = ((2 * ((v661 ^ 0xF7D0FB4A) + v649)) & 0xDDFEF3CE) + (((v661 ^ 0xF7D0FB4A) + v649) ^ 0xEEFF79E7);
  unsigned int v666 = (v647 ^ 0xA82683E6 ^ v661)
       - 285247001
       - v665
       - ((2 * ((v647 ^ 0xA82683E6 ^ v661) - 285247001 - v665)) & 0x6520BE32);
  HIDWORD(v125) = v661 ^ 0xA;
  LODWORD(v125) = v661 ^ 0xF7D0FB40;
  int v667 = ((v125 >> 6) - ((2 * (v125 >> 6)) & 0xF59A0948) + 2060256420) ^ (v664 - 741806250);
  HIDWORD(v125) = v661 ^ 0x1D0FB4A;
  LODWORD(v125) = v661 ^ 0xF7FFFFFF;
  int v668 = ((v125 >> 25) ^ 0x4025160C) - ((2 * (v125 >> 25)) & 0x7FB5D3E6) - 1076172300 + (v667 ^ 0xA905EBF2);
  HIDWORD(v125) = v661 ^ 0x10FB4A;
  LODWORD(v125) = v661 ^ 0xF7FFFFFF;
  int v669 = v125 >> 22;
  unsigned int v670 = v619 + (v668 ^ 0xE5F7DFE9) + ((2 * v668) & 0xCBEFBFD2) + 436740119;
  HIDWORD(v125) = v660 ^ 2;
  LODWORD(v125) = v661 ^ 0xF7D0FB48;
  int v671 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x44571DCC);
  HIDWORD(v125) = v661 ^ 0x1B4A;
  LODWORD(v125) = v661 ^ 0xF7D0E000;
  unsigned int v672 = (v633 ^ 0x794F9409 ^ v647)
       + ((v665 + 285247001 + (v663 ^ 0x69C63DAF)) ^ 0xF6FB6F7F)
       + ((2 * (v665 + 285247001 + (v663 ^ 0x69C63DAF))) & 0xEDF6DEFE)
       + 151294081;
  unsigned int v673 = v633 ^ (v666 - 1299161319) ^ 0xA0236A37 ^ (v670 - ((2 * v670) & 0x6815B316) + 873126283);
  int v674 = (v669 ^ 0x8A060090)
       - ((2 * v669) & 0xEBF3FEDE)
       + (((v125 >> 13) - ((2 * (v125 >> 13)) & 0x1742AF16) + 195123083) ^ (v671 - 1574203674) ^ 0xA98AD96D)
       + (v672 ^ 0xA4622168)
       - ((2 * v672) & 0xB73BBD2E)
       - 778576376;
  int v675 = (v846 ^ 0xFB0FDAF2)
       - 2145384815
       + ((v673 - 1298429573) ^ 0x7FDFF96F)
       + ((2 * (v673 - 1298429573)) & 0xFFBFF2DE);
  unsigned int v676 = ((2 * v674) & 0xFB3C6F7E) + (v674 ^ 0xFD9E37BF) + (v675 ^ 0xDFF2A793) + ((2 * v675) & 0xBFE54F26);
  unsigned int v677 = v676 - ((2 * v676 + 1155416412) & 0xDB5B78A2);
  unsigned int v678 = v677 - 1;
  unsigned int v679 = v677 + 270327039;
  unsigned int v680 = (v677 + 270327039) ^ 0xEDADBC51;
  HIDWORD(v125) = (v677 + 270327039) ^ 0x451;
  LODWORD(v125) = (v677 + 270327039) ^ 0xEDADB800;
  int v681 = v125 >> 11;
  HIDWORD(v125) = v678 ^ 1;
  LODWORD(v125) = v679 ^ 0xEDADBC50;
  int v682 = v125 >> 2;
  HIDWORD(v125) = v679 ^ 0x1ADBC51;
  LODWORD(v125) = v679 ^ 0xEC000000;
  int v683 = v125 >> 25;
  int v684 = v682 - ((2 * v682) & 0x413CA026);
  HIDWORD(v125) = v679 ^ 0x2DBC51;
  LODWORD(v125) = v679 ^ 0xED800000;
  int v685 = v125 >> 22;
  unsigned int v686 = (v661 ^ 0xF7D0FB4A)
       + ((v680 + (v647 ^ 0x5FF678AC)) ^ 0xA7EEFDF5)
       + ((2 * (v680 + (v647 ^ 0x5FF678AC))) & 0x4FDDFBEA)
       + 1477509643;
  unsigned int v687 = v680 + (v686 ^ 0x34504D) - ((2 * v686) & 0xFF975F64) - 3428429;
  unsigned int v688 = v687 - ((2 * v687) & 0x6D3FCB94);
  int v689 = v679 ^ v661;
  HIDWORD(v125) = v679 ^ 0x11111111;
  LODWORD(v125) = v679 ^ 0xEDADBC40;
  int v690 = v125 >> 6;
  HIDWORD(v125) = v679 ^ 0x1C51;
  LODWORD(v125) = v679 ^ 0xEDADA000;
  int v691 = (v685 ^ 0x81022F29)
       - ((2 * v685) & 0xFDFBA1AC)
       + 2130563287
       + ((v684 + 547246099) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x283B8594) + 337494730) ^ 0x348392D9);
  int v692 = (v647 ^ 0x4DA43B02 ^ v679) + (v679 ^ v661 ^ 0x1A7D471B) + 1;
  unsigned int v693 = (v647 ^ 0x5FF678AC) + (v692 ^ 0x7BD7D94F) + ((2 * v692) & 0xF7AFB29E);
  unsigned int v694 = v635
       + (v683 ^ 0x1C44880)
       + (v690 ^ 0xD2688057)
       + (v681 ^ 0x6B7F3F75)
       - ((2 * v690) & 0x5B2EFF50)
       - ((2 * v683) & 0xFC776EFE)
       + ((2 * v681) & 0xD6FE7EEA)
       + ((v693 - 2077743439) ^ 0x80008280)
       - ((2 * (v693 - 2077743439)) & 0xFFFEFAFE)
       + 1079211316;
  unsigned int v695 = (((v691 ^ 0x7DDBBCFE) + ((2 * v691) & 0xFBB779FC) - 2111552766 + (v663 ^ 0x5F59D865 ^ (v688 + 916448714))) ^ 0xBF7B238F)
       + ((2 * ((v691 ^ 0x7DDBBCFE) + ((2 * v691) & 0xFBB779FC) - 2111552766 + (v663 ^ 0x5F59D865 ^ (v688 + 916448714)))) & 0x7EF6471E)
       + 1082449009
       + (HIDWORD(v859) ^ 0xEEB82CE4 ^ (((2 * v694) & 0xFFF77E9A)
                                      + (v694 ^ 0x7FFBBF4D)
                                      - ((2 * (((2 * v694) & 0xFFF77E9A) + (v694 ^ 0x7FFBBF4D)) + 316852592) & 0x24DE4D04)
                                      - 1679783110));
  int v696 = v695 + 601961792 - ((2 * v695) & 0x47C26AC6);
  int v697 = v696 + 35;
  HIDWORD(v125) = (v696 + 35) ^ 0x563;
  LODWORD(v125) = (v696 + 35) ^ 0x23E13000;
  int v698 = v125 >> 11;
  int v699 = (v696 + 35) ^ 0x23E13563;
  HIDWORD(v125) = (v696 + 35) ^ 0xFFFFFFE3;
  LODWORD(v125) = (v696 + 35) ^ 0x23E13540;
  int v700 = v125 >> 6;
  unsigned int v701 = v679 ^ 0xCE4C8932 ^ (v696 + 35);
  int v702 = (v661 ^ 0x2BCE31D6 ^ (v696 + 35)) + v701 + 1;
  HIDWORD(v125) = (v696 + 35) ^ 0x1E13563;
  LODWORD(v125) = (v696 + 35) ^ 0x22222222;
  int v703 = v125 >> 25;
  unsigned int v704 = (v661 ^ 0xF7D0FB4A) + ((v696 + 35) ^ 0xDC1ECA9C) + 1;
  unsigned int v705 = ((2 * (v699 + (v679 ^ 0x125243AE) + 1)) & 0xCDFFACBE)
       + ((v699 + (v679 ^ 0x125243AE) + 1) ^ 0xE6FFD65F)
       + (v704 ^ 0xEFF6BEEE)
       + ((2 * v704) & 0xDFED7DDC);
  int v706 = (v705 - ((2 * v705 + 303224166) & 0x27ACD142) + 1021301588) ^ v661;
  HIDWORD(v125) = (v696 + 35) ^ 0x1563;
  LODWORD(v125) = (v696 + 35) ^ 0x23E12000;
  int v707 = v125 >> 13;
  unsigned int v708 = (v703 ^ 0x50480254)
       + (v698 ^ 0x5040442)
       + (v700 ^ 0xF2FEFF97)
       + ((2 * v700) & 0xE5FDFF2E)
       - ((2 * v703) & 0x5F6FFB56)
       - ((2 * v698) & 0xF5F7F77A)
       + 2;
  HIDWORD(v125) = (v696 + 35) ^ 0x213563;
  LODWORD(v125) = (v696 + 35) ^ 0x23C00000;
  int v709 = v125 >> 22;
  HIDWORD(v125) = v706 ^ 0x693EB;
  LODWORD(v125) = v706 ^ 0xE4000000;
  int v710 = (v125 >> 24) + 1220871168 - ((2 * (v125 >> 24)) & 0x918A08A2) + 81;
  unsigned int v711 = (((v696 + 35) ^ 0x23E13560u) >> 2) - (v696 << 30);
  HIDWORD(v125) = v710 ^ 0x51;
  LODWORD(v125) = v710 ^ 0x48C50400;
  unsigned int v712 = (v709 ^ 0x540190A)
       + (v707 ^ 0x2C40500)
       + (v711 ^ 0x7DD7ACC5)
       + ((2 * v711) & 0xFBAF598A)
       - ((2 * v709) & 0xF57FCDEA)
       - ((2 * v707) & 0xFA77F5FE)
       + 2;
  int v713 = (v647 ^ (v708 - ((2 * v708 + 1869214626) & 0x79BFAB14) - 191574181) ^ 0xBC6B2549 ^ ((v125 >> 8)
                                                                                           - ((2 * (v125 >> 8)) & 0xBE8510DE)
                                                                                           - 549287825))
       + 1088089828;
  unsigned int v714 = (v872 ^ 0x23BDC5B2) + (v713 ^ 0x5F7FF9D7) + ((2 * v713) & 0xBEFFF3AE) - 1602222550;
  unsigned int v715 = (v689 ^ (v702 - ((2 * v702) & 0xAB72C21C) + 1438212366) ^ 0xDD0B4ED5 ^ (v712
                                                                               - ((2 * v712 + 877161054) & 0x259ED180)
                                                                               + 217292271))
       + (v714 ^ 0xA7DFFAFB)
       + ((2 * v714) & 0x4FBFF5F6)
       + 1478493445;
  unsigned int v716 = v715 - 1764755456 + (~(2 * v715) | 0xD2600401) + 1536;
  unsigned int v717 = v716 ^ 0x96CFFDFF;
  unsigned int v718 = (v716 ^ 0x96CFFDFF) + v699;
  HIDWORD(v125) = v715;
  LODWORD(v125) = v716 ^ 0x96CFFDC0;
  int v719 = (v125 >> 6) - ((2 * (v125 >> 6)) & 0xF83B9D54);
  HIDWORD(v125) = v715;
  LODWORD(v125) = v716 ^ 0x96CFFDFC;
  int v720 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x795D076E);
  HIDWORD(v125) = v716 ^ 0xCFFDFF;
  LODWORD(v125) = v716 ^ 0x96000000;
  int v721 = v125 >> 25;
  HIDWORD(v125) = v716 ^ 0xFFDFF;
  LODWORD(v125) = v716 ^ 0x96C00000;
  int v722 = v125 >> 22;
  HIDWORD(v125) = v716 ^ 0xFFFFFDFF;
  LODWORD(v125) = v716 ^ 0x96CFF800;
  int v723 = (v125 >> 11) - ((2 * (v125 >> 11)) & 0xB35F90BC);
  HIDWORD(v125) = v716 ^ 0xFFFFFDFF;
  LODWORD(v125) = v716 ^ 0x96CFE000;
  int v724 = v716 ^ v679;
  unsigned int v725 = (v721 ^ 0xFEFDFBF7)
       + ((2 * v721) & 0xFDFBF7EE)
       + 16909322
       + ((v723 - 642791330) ^ (v719 - 65155414) ^ 0xDA4DF90B);
  unsigned int v726 = (v724 ^ 0x51E0F733 ^ (v718 - ((2 * v718) & 0x55056D3A) + 713209501)) + v680;
  unsigned int v727 = v662 + (v725 ^ 0xFE34ECEE) + ((2 * v725) & 0xFC69D9DC);
  unsigned int v728 = v724 ^ 0x3C85A835 ^ (v718 - ((2 * v718) & 0x8FCFD336) + 1206380955);
  unsigned int v729 = (HIDWORD(v840) ^ 0x64BE33DF)
       + (v726 ^ 0x48D7D57F)
       + ((2 * v726) & 0x91AFAAFE)
       + ((v727 + 30085906) ^ 0xEEFCEAF4)
       + ((2 * (v727 + 30085906)) & 0xDDF9D5E8)
       - 1635070808;
  int v730 = ((v728 + v701) ^ 0x8A014018)
       + ((v720 - 1129413705) ^ ((v125 >> 13) - ((2 * (v125 >> 13)) & 0x963F2F34) - 887122022) ^ (v722
                                                                                                - 1542601519
                                                                                                + (~(2 * v722) | 0xB7E4765F)) ^ 0xD3BCD0FD)
       - ((2 * (v728 + v701)) & 0xEBFD7FCE)
       + 1979629544;
  unsigned int v731 = ((2 * v730) & 0x89FEFB6A) + (v730 ^ 0xC4FF7DB5) + (v729 ^ 0xD55FFBF5) + ((2 * v729) & 0xAABFF7EA);
  int v732 = (2 * v731 + 1262554284) & 0x7770F880;
  v731 += 559481494;
  unsigned int v733 = v731 - v732;
  unsigned int v734 = (v731 - v732) ^ 0xBBB87C40;
  HIDWORD(v125) = v733 ^ 0x440;
  LODWORD(v125) = v733 ^ 0xBBB87800;
  int v735 = v125 >> 11;
  HIDWORD(v125) = v733 ^ 0x1B87C40;
  LODWORD(v125) = v733 ^ 0xBA000000;
  int v736 = (v125 >> 25) - ((2 * (v125 >> 25)) & 0x981A0D8A) - 871561531;
  int v737 = (v735 ^ 0xFEBBCE9F)
       + ((__PAIR64__(v731, v734) >> 6) ^ 0x7F32CDC7)
       + ((2 * (__PAIR64__(v731, v734) >> 6)) & 0xFE659B8E)
       + ((2 * v735) & 0xFD779D3E);
  HIDWORD(v125) = v733 ^ 0x1C40;
  LODWORD(v125) = v733 ^ 0xBBB86000;
  int v738 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x7603E636) + 989983515;
  unsigned int v739 = (v716 ^ 0x2D7781BF ^ v733) + (v697 ^ 0x98594923 ^ v733);
  int v740 = v739 ^ 0x48880000;
  int v741 = (2 * v739) & 0x6EEFFFFE;
  HIDWORD(v125) = v733 ^ 0x387C40;
  LODWORD(v125) = v733 ^ 0xBBBBBBBB;
  int v742 = (v733 ^ 0x444783BF) + 1;
  int v743 = v736 ^ 0x6D5664A8 ^ (v737 - ((2 * v737 + 69388084) & 0x42B6C4DA) + 594331143);
  unsigned int v744 = v742 + (v716 ^ 0x96CFFDFF);
  unsigned int v745 = (v716 ^ 0x96CFFDFF) + ((v743 + v680) ^ 0x7B7FFFDF) + ((2 * (v743 + v680)) & 0xF6FFFFBE) - 2071986143;
  unsigned int v746 = (v697 ^ 0xB52EC89C ^ v716) + v740 - v741 - 1216872448;
  int v747 = (v746 ^ 0x7F5FC7D7)
       + ((2 * v746) & 0xFEBF8FAE)
       + (((__PAIR64__(v731, v734) >> 2) - ((2 * (__PAIR64__(v731, v734) >> 2)) & 0x2343F1E) - 2128994417) ^ v738 ^ ((v125 >> 22) - ((2 * (v125 >> 22)) & 0x93D5C19A) - 907353907) ^ 0x73F10C59)
       - 2136983511;
  int v748 = (v747 ^ 0x3F17C7DE)
       + ((2 * v747) & 0x7E2F8FBC)
       - 1058523102
       + (v847 ^ 0xF2D75E15 ^ (((2 * v745) & 0xFF277354)
                             + (v745 ^ 0x7F93B9AA)
                             - ((2 * (((2 * v745) & 0xFF277354) + (v745 ^ 0x7F93B9AA)) + 448264518) & 0x16BF3E68)
                             + 1488690135));
  unsigned int v749 = (2 * v748) & 0xEB4D860C;
  v748 -= 173620474;
  int v750 = v748 - v749;
  unsigned int v751 = (v748 - v749) ^ 0xF5A6C306;
  HIDWORD(v125) = v750 ^ 0x26C306;
  LODWORD(v125) = v750 ^ 0xF5800000;
  int v752 = v125 >> 22;
  unsigned int v753 = (v716 ^ 0x9C96C106 ^ v750) + ((v751 + v734) ^ 0xFCF777B1) + ((2 * (v751 + v734)) & 0xF9EEEF62) + 50890832;
  HIDWORD(v125) = v750 ^ 0x306;
  LODWORD(v125) = v750 ^ 0xF5A6C000;
  int v754 = v125 >> 11;
  unsigned int v755 = ((2 * v744) & 0xF51FDEFA) + (v744 ^ 0x7A8FEF7D) + (v753 ^ 0xD3FF2FFD) + ((2 * v753) & 0xA7FE5FFA);
  HIDWORD(v125) = v750 ^ 0x1A6C306;
  LODWORD(v125) = v750 ^ 0xF4000000;
  int v756 = v125 >> 25;
  HIDWORD(v125) = v750 ^ 0x306;
  LODWORD(v125) = v750 ^ 0xF5A6C000;
  int v757 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0xD1A4F228);
  HIDWORD(v125) = v750 ^ 6;
  LODWORD(v125) = v750 ^ 0xF5A6C300;
  int v758 = v125 >> 6;
  HIDWORD(v125) = v748 ^ 2;
  LODWORD(v125) = v750 ^ 0xF5A6C304;
  int v759 = (v752 ^ 0xC09843E1)
       - ((2 * v752) & 0x7ECF783C)
       + 1063762975
       + ((v757 + 1758624020) ^ ((v125 >> 2) - ((2 * (v125 >> 2)) & 0x3798C9DE) - 1681103633) ^ 0xF31E1DFB);
  unsigned int v760 = v699
       + (v756 ^ 0xBA800700)
       + (v754 ^ 0x6FF3F6FC)
       + (v758 ^ 0xB3FFB4BF)
       + ((2 * v754) & 0xDFE7EDF8)
       + ((2 * v758) & 0x67FF697E)
       - ((2 * v756) & 0x8AFFF1FE)
       + 562842949;
  unsigned int v761 = v734 + (v760 ^ 0xFDFB7F7F) + ((2 * v760) & 0xFBF6FEFE) + 33849473;
  unsigned int v762 = (HIDWORD(v847) ^ 0xA881F65A ^ (((2 * v761) & 0xFEAEFB7A)
                                      + (v761 ^ 0xFF577DBD)
                                      - ((2 * (((2 * v761) & 0xFEAEFB7A) + (v761 ^ 0xFF577DBD)) - 1025324024) & 0x918DEBFE)
                                      + 708336643))
       + ((v759 - ((2 * v759) & 0x9992972) - 2066967367) ^ (v755 - ((2 * v755 + 1658962188) & 0x52C2E986) + 1523733833) ^ 0x2DADE07A);
  unsigned int v763 = v762 - 751504239 - ((2 * v762) & 0xA669E922);
  unsigned int v764 = v763 ^ 0xD334F491;
  unsigned int v765 = (v763 ^ 0xD334F491) + v751 - ((2 * ((v763 ^ 0xD334F491) + v751)) & 0xFF619DD2) + 2142293737;
  HIDWORD(v125) = v763 ^ 0x1491;
  LODWORD(v125) = v763 ^ 0xD334E000;
  int v766 = (v125 >> 13) - ((2 * (v125 >> 13)) & 0x5570299E) - 1430776625;
  unsigned int v767 = ((v742 + (v763 ^ 0xD334F491) - ((2 * (v742 + (v763 ^ 0xD334F491))) & 0x3ECE2826) - 1620634605) ^ v765 ^ 0xE0D7DAFA)
       + v734;
  HIDWORD(v125) = v763 ^ 0x134F491;
  LODWORD(v125) = v763 ^ 0xD2000000;
  int v768 = v125 >> 25;
  HIDWORD(v125) = v763 ^ 1;
  LODWORD(v125) = v763 ^ 0xD334F490;
  int v769 = (v125 >> 2) - ((2 * (v125 >> 2)) & 0x43343778);
  HIDWORD(v125) = v763 ^ 0x11111111;
  LODWORD(v125) = v763 ^ 0xD334F480;
  int v770 = v125 >> 6;
  HIDWORD(v125) = v763 ^ 0x34F491;
  LODWORD(v125) = v763 ^ 0xD3000000;
  int v771 = v125 >> 22;
  HIDWORD(v125) = v763 ^ 0x491;
  LODWORD(v125) = v763 ^ 0xD334F000;
  int v772 = (v750 ^ 0x26923797 ^ v763) + (v733 ^ 0x688C88D1 ^ v763);
  unsigned int v773 = (v733 ^ 0x4E1EBF46 ^ v750) + (v772 ^ 0x4F8FCF3E) + ((2 * v772) & 0x9F1F9E7C) - 1334824766;
  int v774 = v717
       + (v768 ^ 0x28820114)
       + (v770 ^ 0x28848221)
       + ((v125 >> 11) ^ 0xFEBFA59F)
       - ((2 * v770) & 0xAEF6FBBC)
       - ((2 * v768) & 0xAEFBFDD6)
       + ((2 * (v125 >> 11)) & 0xFD7F4B3E)
       - 1338386644;
  unsigned int v775 = (v771 ^ 0x10247005) - ((2 * v771) & 0xDFB71FF4) - 270823429 + (v766 ^ (v769 - 1583735876) ^ 0xB220F73);
  unsigned int v776 = (HIDWORD(a42) ^ 0xBB47B276)
       + (v767 ^ 0x7676CBFC)
       + (v774 ^ 0x83FD1B7E)
       + ((2 * v767) & 0xECED97F8)
       + ((2 * v774) & 0x7FA36FC)
       - 1149020731;
  unsigned int v777 = ((v773 - ((2 * v773) & 0x77A5DEE8) + 1003679604) ^ 0xD34ADC12 ^ (v775 - ((2 * v775) & 0xD13066CC) - 392678554))
       + (v776 ^ 0x7FDBFAFE)
       + ((2 * v776) & 0xFFB7F5FC)
       - 2145123070;
  unsigned int v778 = v777 + 1666670725 - ((2 * v777) & 0xC6AEC10A);
  unsigned int v779 = ((2 * (v778 ^ v763)) & 0xBF5DE7F6 ^ 0x20452020) + (v778 ^ v763 ^ 0x6FCD67EF);
  int v780 = (((v778 ^ 0x63576085) + v751) ^ 0x41850250) - ((2 * ((v778 ^ 0x63576085) + v751)) & 0x7CF5FB5E) + v779 + 1;
  HIDWORD(v125) = v778 ^ 0x85;
  LODWORD(v125) = v778 ^ 0x63576000;
  int v781 = v125 >> 13;
  HIDWORD(v125) = v778 ^ 5;
  LODWORD(v125) = v778 ^ 0x63576080;
  int v782 = v125 >> 6;
  HIDWORD(v125) = v778 ^ 0x85;
  LODWORD(v125) = v778 ^ 0x63576000;
  int v783 = v125 >> 11;
  HIDWORD(v125) = v778 ^ 0x1576085;
  LODWORD(v125) = v778 ^ 0x62000000;
  int v784 = v125 >> 25;
  unsigned int v785 = (v750 ^ 0x96F1A383 ^ v778)
       + (((v763 ^ 0x2CCB0B6E) + (v778 ^ 0x63576085) + 1) ^ 0x777F5EF0)
       + ((2 * ((v763 ^ 0x2CCB0B6E) + (v778 ^ 0x63576085) + 1)) & 0xEEFEBDE0)
       - 2004836080;
  HIDWORD(v125) = v778 ^ 1;
  LODWORD(v125) = v778 ^ 0x63576084;
  int v786 = v125 >> 2;
  HIDWORD(v125) = v778 ^ 0x176085;
  LODWORD(v125) = v778 ^ 0x63400000;
  unsigned int v787 = v734
       + (v783 ^ 0x56092202)
       + (v784 ^ 0x7FE7FFB7)
       + (v782 ^ 0x60F08410)
       + ((2 * v784) & 0xFFCFFF6E)
       - ((2 * v783) & 0x53EDBBFA);
  unsigned int v788 = v781 ^ 0x80DE6215;
  unsigned int v789 = (2 * v781) & 0xFE433BD4;
  unsigned int v790 = v751 + (v785 ^ 0x8FF35743) + ((2 * v785) & 0x1FE6AE86) + 1879877821;
  int v791 = v787 - ((2 * v782) & 0x3E1EF7DE) - 920757705;
  int v792 = (v868 ^ 0x1BA35819) + (v791 ^ 0x3D97F5E6) + (v790 ^ 0xA7FDD3E);
  int v793 = v788
       + (v786 ^ 0x6CFBFFEB)
       + ((v125 >> 22) ^ 0x7002490A)
       + ((2 * v786) & 0xD9F7FFD6)
       - ((2 * (v125 >> 22)) & 0x1FFB6DEA)
       - v789
       - 1574742794
       + (v765 ^ 0x56EC2DE1 ^ (v780 - ((2 * v780 + 1033376616) & 0x52B9C610) + 136899772));
  unsigned int v794 = ((2 * v793) & 0xEFEFF77E)
       + (v793 ^ 0xF7F7FBBF)
       + ((v792 + ((2 * v791) & 0x7B2FEBCC) + ((2 * v790) & 0x14FFBA7C) + 745919162) ^ 0x5FCFBAF7)
       + ((2 * (v792 + ((2 * v791) & 0x7B2FEBCC) + ((2 * v790) & 0x14FFBA7C) + 745919162)) & 0xBF9F75EE);
  unsigned int v795 = v794 - 1968658890;
  unsigned int v796 = v794 - 1968658890 - ((2 * v794 + 1349554836) & 0xC4E0B9D8);
  HIDWORD(v125) = v796 ^ 0x2C;
  LODWORD(v125) = v796 ^ 0xE2705CC0;
  int v797 = v125 >> 6;
  HIDWORD(v125) = v796 ^ 0x4EC;
  LODWORD(v125) = v796 ^ 0xE2705800;
  int v798 = v125 >> 11;
  unsigned int v799 = v796 ^ 0xE2705CEC;
  HIDWORD(v125) = v796 ^ 0x705CEC;
  LODWORD(v125) = v796 ^ 0xE2000000;
  int v800 = v125 >> 25;
  HIDWORD(v125) = v796 ^ 0x305CEC;
  LODWORD(v125) = v796 ^ 0xE2400000;
  int v801 = v125 >> 22;
  int v802 = v796 ^ v763;
  unsigned int v803 = v751
       + (v800 ^ 0x4001A018)
       + (v798 ^ 0xF87FCF7B)
       + (v797 ^ 0xA9DFBED6)
       + ((2 * v798) & 0xF0FF9EF6)
       + ((2 * v797) & 0x53BF7DAC);
  HIDWORD(v125) = v796 ^ 0x1CEC;
  LODWORD(v125) = v796 ^ 0xE2704000;
  int v804 = v125 >> 13;
  HIDWORD(v125) = v795;
  LODWORD(v125) = v796 ^ 0xE2705CEC;
  unsigned int v805 = (v802 ^ 0x3144A87D)
       + (((v796 ^ 0xE2705CEC) + (v778 ^ 0x63576085)) ^ 0x27F9DBEB)
       + ((2 * ((v796 ^ 0xE2705CEC) + (v778 ^ 0x63576085))) & 0x4FF3B7D6)
       - 670686187;
  int v806 = ((v125 >> 2) ^ 0x3F7DFFFF)
       + (v804 ^ 0x5DBF7FDF)
       + (v801 ^ 0x9945080C)
       + ((2 * (v125 >> 2)) & 0x7EFBFFFE)
       + ((2 * v804) & 0xBB7EFFBE)
       - ((2 * v801) & 0xCD75EFE6)
       + 1;
  unsigned int v807 = (v802 ^ 0xBDA03435 ^ ((v778 ^ 0x9CA89F7A)
                             + (v796 ^ 0xE2705CEC)
                             + 1
                             - ((2 * ((v778 ^ 0x9CA89F7A) + (v796 ^ 0xE2705CEC) + 1)) & 0x19C93890)
                             - 1931174840))
       - v779;
  unsigned int v808 = v764 + (v805 ^ 0x9B086804) - ((2 * v805) & 0xC9EF2FF6) + 1693947900;
  unsigned int v809 = ((v530 - 2138374137) ^ 0xFEEEBD6E)
       + ((2 * (v530 - 2138374137)) & 0xFDDD7ADC)
       + ((v803 - ((2 * v800) & 0x7FFCBFCE) + 496947607) ^ 0xF4BFFD99)
       + (v808 ^ 0x1F9F9AEF)
       + ((2 * v808) & 0x3F3F35DE)
       + ((2 * (v803 - ((2 * v800) & 0x7FFCBFCE) + 496947607)) & 0xE97FFB32)
       - 459211438
       + ((v807 - ((2 * v807 + 1063118838) & 0x2E94A0A4) - 151436211) ^ (v806
                                                                       - ((2 * v806 - 1829048278) & 0xB41F5BE6)
                                                                       + 596452872) ^ 0x4D45FDA1);
  int v810 = v809 - 2002756791 - ((2 * v809) & 0x1140B692);
  HIDWORD(v125) = v810 ^ 0xA05B49;
  LODWORD(v125) = v810 ^ 0x88888888;
  int v811 = v125 >> 25;
  uint64_t v812 = (v778 ^ 0x63576085)
       + (a59 ^ 0x78E83AD)
       + 126780333
       - ((2 * ((v778 ^ 0x63576085) + (a59 ^ 0x78E83AD))) & 0xF1D075A);
  unsigned int v813 = ((v796 ^ 0xE2705CEC) & (a56 ^ 0xBFDEF85D))
       + 542361596
       + (~(2 * ((v796 ^ 0xE2705CEC) & (a56 ^ 0xBFDEF85D))) | 0xBF587009);
  HIDWORD(v125) = v810 ^ 0x1B49;
  LODWORD(v125) = v810 ^ 0x88A04000;
  int v814 = v125 >> 13;
  HIDWORD(v125) = v810 ^ 1;
  LODWORD(v125) = v810 ^ 0x88A05B48;
  int v815 = v125 >> 2;
  unsigned int v816 = (v796 ^ 0x6AD007A5 ^ v810) + (v778 ^ 0xEBF73BCC ^ v810);
  HIDWORD(v125) = v810 ^ 0x349;
  LODWORD(v125) = v810 ^ 0x88A05800;
  int v817 = v125 >> 11;
  uint64_t v818 = v816 ^ 0xF6FEF6AC;
  int v819 = (a56 ^ 0x5DAEA4B1 ^ v796) + ((2 * v813) ^ 0x4F526808) + ((4 * v813) & 0x1FEBCFFC ^ 0x14B0FEC) - 267773950;
  int v820 = (v778 ^ 0x81273C69 ^ v796) + v818 + ((2 * v816) & 0xEDFDED58) + 151062868;
  HIDWORD(v125) = v810 ^ 9;
  LODWORD(v125) = v810 ^ 0x88A05B40;
  int v821 = v125 >> 6;
  HIDWORD(v125) = v810 ^ 0x205B49;
  LODWORD(v125) = v810 ^ 0x88888888;
  int v822 = ((v125 >> 22) ^ 0x1FDB73B7)
       + (v814 ^ 0xFFB7BEFF)
       + (v815 ^ 0xDBFFFFDF)
       + ((2 * v814) & 0xFF6F7DFE)
       + ((2 * (v125 >> 22)) & 0x3FB6E76E)
       + ((2 * v815) & 0xB7FFFFBE);
  uint64_t v823 = v817 ^ 0xB4A6080u;
  int v824 = v764
       + (v811 ^ 0x1205B25)
       + (v821 ^ 0x3AA7FEED)
       + v823
       + ((2 * v821) & 0x754FFDDA)
       - ((2 * v811) & 0xFDBF49B4)
       - ((2 * v817) & 0xE96B3EFE);
  v810 ^= 0x88A05B49;
  unsigned int v825 = ((2 * v778) ^ 0xBD591BF7) + ((4 * v778) & 0xF7EFB5F8 ^ 0x854D8010) - 2079841021 + v810;
  int v826 = (v850 ^ 0x8A244260)
       + (v851 ^ 0xD64AD0)
       - ((2 * v850) & 0xEBB77B3E)
       - ((2 * v851) & 0xFE536A5E)
       + (v604 ^ 0xD6DCFC6F)
       + ((2 * v604) & 0xADB9F8DE)
       + ((v810 + v799) ^ 0x737F23DD)
       + (v825 ^ 0x8B880008)
       + ((2 * (v810 + v799)) & 0xE6FE47BA)
       - ((2 * v825) & 0xE8EFFFEE)
       + ((v824 - 1192409746) ^ 0x475A86E7)
       + ((2 * (v824 - 1192409746)) & 0x8EB50DCE)
       - 1702779662
       + ((v820 - ((2 * v820) & 0x9542979E) - 895398961) ^ 0x77C10889 ^ (v822
                                                                       - ((2 * v822 + 148478678) & 0x7AC0868C)
                                                                       - 1043525455));
  return ((uint64_t (*)(uint64_t, uint64_t, void, _UNKNOWN **, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)((84 * (((((HIDWORD(v851) | HIDWORD(v854)) - HIDWORD(v851)) | (HIDWORD(v854) - HIDWORD(v851)) & ~(HIDWORD(v854) ^ HIDWORD(v851))) >> (BYTE4(v851) + 110)) & 1)) ^ (HIDWORD(v851) - 1883129765 + HIDWORD(v851) - 1883128491))))(v823, 2059437708, (v826 + 1274209522 - ((2 * v826) & 0x97E5C9E4)) ^ a54, &off_1002E1F70, v818, v819 - 1075906467 - ((2 * v819) & 0x7FBDF0BAu), v812, 2292210505, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           v828,
           v829,
           v830,
           v831,
           v832,
           v833,
           v834,
           v835,
           v836,
           v837,
           v838,
           v840,
           v841,
           v842,
           *((void *)&v842 + 1),
           v843,
           v844,
           a34,
           a35,
           a36,
           a37,
           a38,
           v845,
           v846,
           a41,
           a42,
           v847,
           v850,
           v851,
           v854,
           v855,
           v856,
           v857,
           v859);
}

uint64_t sub_100107FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unsigned int a59)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 8 * (((50 * (v59 ^ 0x40E) + 186) * (v60 == v61 + 1)) ^ v59)))(a21, a59);
}

void sub_100108048()
{
}

uint64_t sub_1001080F8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  unsigned int v19 = (unsigned char *)(v18 - 120);
  v19[3] = a7 ^ 0x93;
  v19[8] = BYTE2(a3) ^ 0x46;
  v19[15] = HIBYTE(a7) ^ 0x39;
  unsigned int v20 = (((2 * (HIBYTE(a6) & 0xF0 ^ 0x10)) | 0xF5B3442) - (HIBYTE(a6) & 0xF0 ^ 0x10) + 2018665951) ^ 0x86A09202;
  unsigned int v21 = (((2 * v20) | 0x8BB5CE12) - v20 - 1171973897) ^ 0x44D7EF8A | ((HIBYTE(a6) & 5)
                                                                    + 306217663
                                                                    + (HIBYTE(a6) & 0xA ^ 0x4803)) ^ 0x1240CACD;
  int v22 = v21 - ((2 * v21) & 0x8E) - 57;
  v19[14] = v22 ^ 0xF9;
  int v390 = (a7 ^ 0xAD) + v17 - ((2 * (a7 ^ 0xAD)) & 0x120);
  int v392 = (v22 ^ 0xC7) - ((2 * (v22 ^ 0xC7)) & 0x130);
  v19[6] = BYTE1(a6) ^ 0xC6;
  int v23 = (BYTE1(a6) ^ 0xF8) - ((2 * (BYTE1(a6) ^ 0xF8)) & 0x2C);
  int v24 = *(unsigned __int8 *)((LODWORD(STACK[0xC58]) ^ 0x7F5FDF8020322F30)
                           + a13
                           + ((2 * (LODWORD(STACK[0xC58]) ^ 0xDFDD90C7)) & 0x1FFDF7FEELL)
                           + 0x5E1213AB80434E5DLL);
  int v388 = (BYTE2(a3) ^ 0x78) - ((a3 >> 15) & 0xC);
  int v379 = (v24 ^ 0x11) - ((2 * (v24 ^ 0x11)) & 0x128);
  v19[9] = BYTE2(v16) ^ 0x3E;
  int v384 = BYTE2(v16) + 4893253 - ((2 * BYTE2(v16)) & 0xFF87);
  int v25 = *(unsigned __int8 *)((LODWORD(STACK[0xAD4]) ^ 0x56FDBFFEF30BEF3ELL)
                           + ((2 * (LODWORD(STACK[0xAD4]) ^ 0xDFDD90C7)) & 0x59ACFFF2)
                           + a13
                           - 0x798BCCD1ACA371A5) ^ 0x11;
  int v26 = v25 - ((2 * v25) & 0x1F4);
  int v27 = *(unsigned __int8 *)((LODWORD(STACK[0xF60]) ^ 0x2FF72FEC28A24F31)
                           + a13
                           + ((2 * (LODWORD(STACK[0xF60]) ^ 0xDFDD90C7)) & 0x1EEFFBFECLL)
                           - 0x52853CC0774CD1A2) ^ 0x11;
  int v380 = v27 - ((2 * v27) & 0xB0);
  unsigned int v382 = STACK[0x988];
  int v28 = *(unsigned __int8 *)((LODWORD(STACK[0x950]) ^ 0x7BFEFDEF33200EB0)
                           + a13
                           + ((2 * (LODWORD(STACK[0x950]) ^ 0xDFDD90C7)) & 0x1D9FB3CEELL)
                           + 0x6172F53C93356FDDLL) ^ 0x11;
  int v29 = v28 - ((2 * v28) & 0x6E);
  int v30 = *(unsigned __int8 *)((LODWORD(STACK[0x1268]) ^ 0xEEE9FBFF14648739)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1268]) ^ 0xDFDD90C7)) & 0x197722FFCLL)
                           - 0x117808D34B8609AALL) ^ 0x11;
  v19[13] = HIBYTE(v16) ^ 0xD0;
  int v31 = (HIBYTE(v16) ^ 0xEE) - ((2 * (HIBYTE(v16) ^ 0xEE)) & 0xE4);
  int v33 = *(unsigned __int8 *)((LODWORD(STACK[0x16F4]) ^ 0x79F77AEB8D766B11)
                           + ((2 * (LODWORD(STACK[0x16F4]) ^ 0xDFDD90C7)) & 0xA557F7AC)
                           + a13
                           + 0x637A78412D87127ELL) ^ 0x11;
  int v34 = v33 - ((2 * v33) & 0x2A);
  int v35 = *(unsigned __int8 *)((LODWORD(STACK[0x18B0]) ^ 0x7FDE2AEB0831A830)
                           + a13
                           + ((2 * (LODWORD(STACK[0x18B0]) ^ 0xDFDD90C7)) & 0x1AFD871EELL)
                           + 0x5D93C840A846D55DLL);
  int v36 = (v35 ^ 0x11) - ((2 * v35) & 0x194);
  *unsigned int v19 = a3 ^ 0x6D;
  int v37 = (a3 ^ 0x53) + (~(2 * (a3 ^ 0x53)) | 0xFE6D);
  v19[12] = HIBYTE(a3) ^ 0x97;
  unsigned int v38 = (HIBYTE(a3) ^ 0xA9) - ((2 * (HIBYTE(a3) ^ 0xA9)) & 0xBBBBBBBB);
  v19[4] = BYTE1(a3) ^ 0xC9;
  v19[5] = (v16 >> (v15 + 54)) ^ 0xA8;
  int v39 = (v16 >> (v15 + 54)) ^ 0x96;
  int v40 = *(unsigned __int8 *)((LODWORD(STACK[0x1A34]) ^ 0xEDFFFF9D20A66B3ALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1A34]) ^ 0xDFDD90C7)) & 0x1FEF7F7FALL)
                           - 0x108E0C717F48EDA9) ^ 0x11;
  int v41 = v40 - ((2 * v40) & 0xF0);
  int v42 = *(unsigned __int8 *)((LODWORD(STACK[0x1570]) ^ 0xB2FFFEF7B1301729)
                           + ((2 * (LODWORD(STACK[0x1570]) ^ 0xDFDD90C7)) & 0xDDDB0FDC)
                           + a13
                           + 0x2A71F43511458666) ^ 0x11;
  unsigned int v43 = v42 - ((2 * v42) & 0xFFFFFF0F);
  unsigned int v44 = ((((v29 << 16) + 2100756480) ^ 0x7D370000)
       - ((2 * (((v29 << 16) + 2100756480) ^ 0x7D370000)) & 0x4F6C0000)
       + 666254366) ^ 0x27B63C1E | (((((v26 << 8) - 1681589760) ^ 0x9BC4FA00)
                                   + 899557185
                                   + (~(2 * (((v26 << 8) - 1681589760) ^ 0x9BC4FA00)) | 0x94C3B1FF)) | 1) ^ 0x359E2741;
  unsigned int v45 = v44 - ((2 * v44) & 0x85A0226);
  unsigned int v46 = ((((BYTE1(a3) ^ 0xF7) - ((2 * (BYTE1(a3) ^ 0xF7)) & 0x8E)) << 16) - 1756954624) ^ 0x97470000;
  int v47 = (((v39 - 2 * (v39 & 0x7F)) << 8) + 378830592) ^ 0x16947F00;
  int v48 = (v47 - ((2 * v47) & 0x66E76200) + 1936962029) ^ 0x7373B1ED | (v46 - ((2 * v46) & 0x4B8E0000) + 633840017) ^ 0x25C7A191;
  int v49 = v48 - ((2 * v48) & 0x2027578C);
  int v50 = *(unsigned __int8 *)((LODWORD(STACK[0x19FC]) ^ 0x3E3BFFDF223B7804)
                           + a13
                           + ((2 * (LODWORD(STACK[0x19FC]) ^ 0xDFDD90C7)) & 0x1FBCDD186)
                           - 0x60CA0CB37DB3DA6FLL);
  int v51 = (v50 ^ 0x11) - ((2 * v50) & 0x4C);
  int v52 = *(unsigned __int8 *)((LODWORD(STACK[0x1878]) ^ 0xDFEFCB7DA020EB24)
                           + ((2 * (LODWORD(STACK[0x1878]) ^ 0xDFDD90C7)) & 0xFFFAF7C6)
                           + a13
                           - 0x27DD850FFCA6D8FLL);
  int v53 = *(unsigned __int8 *)((LODWORD(STACK[0x13EC]) ^ 0x5E73DBDF2D2B7F78)
                           + a13
                           + ((2 * (LODWORD(STACK[0x13EC]) ^ 0xDFDD90C7)) & 0x1E5EDDF7ELL)
                           + 0x7EFE174C8D3C1E95) ^ 0x11;
  unsigned int v54 = v53 - ((2 * v53) & 0xFFFFFFDF);
  int v55 = (HIBYTE(a7) ^ 7) - ((2 * (HIBYTE(a7) ^ 7)) & 0x166) - 1393458765;
  v19[2] = a6 ^ 0x63;
  int v383 = v15;
  int v56 = *(unsigned __int8 *)((LODWORD(STACK[0x1BB8]) ^ 0xCF3FFEDF3566CFBALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1BB8]) ^ 0xDFDD90C7)) & 0x1D576BEFALL)
                           + 0xE31F44C9577AED7) ^ 0x11;
  unsigned int v57 = (v49 - 1877759034) ^ 0x9013ABC6 | (v23 + 566093590) ^ 0x21BDE716;
  unsigned int v58 = ((((v41 << 8) - 1459914752) ^ 0xA8FB7800)
       - ((2 * (((v41 << 8) - 1459914752) ^ 0xA8FB7800)) & 0x1D81C00)
       - 2132013470) ^ 0x80EC0E62 | ((((v36 << 16) - 2117468160) ^ 0x81CA0000)
                                   - 1819970919
                                   + (~(2 * (((v36 << 16) - 2117468160) ^ 0x81CA0000)) | 0xD8F5FFFF)
                                   + 1) ^ 0x93857299;
  unsigned int v59 = (v58 - ((2 * v58) & 0x1518E5C8) - 1970507036) ^ 0x8A8C72E4 | (v56 - ((2 * v56) & 0xCE) + 44222311) ^ 0x2A2C767;
  int v60 = ((((v43 << 16) + 1686568960) ^ 0x64870000)
       - ((2 * (((v43 << 16) + 1686568960) ^ 0x64870000)) & 0x45B40000)
       + 1658477681) ^ 0x62DA5C71 | ((((v34 << 8) + 1617958144) ^ 0x60701500)
                                   - ((2 * (((v34 << 8) + 1617958144) ^ 0x60701500)) & 0x37FFC200)
                                   + 469754303) ^ 0x1BFFE1BF;
  int v61 = *(unsigned __int8 *)((LODWORD(STACK[0xDDC]) ^ 0x3FFEFDE50042EE38)
                           + a13
                           + ((2 * (LODWORD(STACK[0xDDC]) ^ 0xDFDD90C7)) & 0x1BF3EFDFELL)
                           - 0x628D0AB95F6C70ABLL) ^ 0x11;
  int v62 = (v60 - ((2 * v60) & 0x1CD405F0) + 1315570424) ^ 0x4E6A02F8 | (1946131967 - (v52 ^ 0x11)) ^ 0x73FF9DFF;
  v19[1] = v16 ^ 0x24;
  int v63 = (((v57 + 3206194 - ((2 * v57) & 0x61E3AE)) << 8) + 369920) ^ 0x30F1D700;
  unsigned int v64 = (v45 - 1003683565) ^ 0xC42D0113 | (v379 - 1890144620) ^ 0x8F56AE94;
  unsigned int v65 = (((v59 - ((2 * v59) & 0x1536E8)) << 8) - 1969523712) ^ 0x8A9B7400;
  unsigned int v66 = v65 - ((2 * v65) & 0x19C87C00);
  int v67 = (((v64 - ((2 * v64) & 0xCE3B6)) << 8) + 108124928) ^ 0x671DB00;
  int v68 = v67 - ((2 * v67) & 0x911F200);
  v19[11] = BYTE2(a7) ^ 0xB0;
  v19[10] = BYTE2(a6) ^ 0xE0;
  unsigned int v69 = (BYTE2(a6) ^ 0xDE) - ((2 * (BYTE2(a6) ^ 0xDE)) & 0x99999999);
  int v70 = (((v37 << 16) + 667549696) ^ 0x27C90000) - ((2 * (((v37 << 16) + 667549696) ^ 0x27C90000)) & 0x153C0000);
  int v71 = ((((v16 ^ 0x1A) - ((2 * (v16 ^ 0x1A)) & 0x13A)) << 8) + 1038720256) ^ 0x3DE99D00;
  unsigned int v72 = (v71 - ((2 * v71) & 0x4B5D6200) - 1515277853) ^ 0xA5AEB1E3 | (v70 - 1969321824) ^ 0x8A9E88A0;
  v19[7] = BYTE1(a7) ^ 0xBD;
  int v73 = *(unsigned __int8 *)((LODWORD(STACK[0x10E4]) ^ 0x1EFFDFC9BB726B22)
                           + ((2 * (LODWORD(STACK[0x10E4]) ^ 0xDFDD90C7)) & 0xC95FF7CA)
                           + a13
                           - 0x418DEC9CE47CED91) ^ 0x11;
  int v74 = (v72 + 1826084955 + (~(2 * v72) | 0x26504F49) + 1) ^ 0x6CD7D85B | ((a6 ^ 0x5D)
                                                                         - ((2 * (a6 ^ 0x5D)) & 0xD6)
                                                                         + 910598507) ^ 0x3646A16B;
  int v75 = v74 - ((2 * v74) & 0xAEA76A);
  int v76 = *(unsigned __int8 *)((LODWORD(STACK[0x1D3C]) ^ 0x1B37EF7F0403F31ALL)
                           + a13
                           + ((2 * (LODWORD(STACK[0x1D3C]) ^ 0xDFDD90C7)) & 0x1B7BCC7BALL)
                           - 0x3DC5FC535BAB5589) ^ 0x11;
  unsigned int v77 = (v63 - ((2 * v63) & 0xA3559800) - 777335796) ^ 0xD1AACC0C | ((BYTE1(a7) ^ 0x83)
                                                                   - ((2 * (BYTE1(a7) ^ 0x83)) & 0xE2)
                                                                   - 1580449167) ^ 0xA1CC4271;
  unsigned int v78 = v77 - ((2 * v77) & 0xC6C32E98) + 1667340108;
  unsigned int v79 = (((v73 + 3666247 - ((2 * v73) & 0xFFFFFFC3)) << 8) + 760320) ^ 0x37FCE100;
  unsigned int v80 = (v79 - ((2 * v79) & 0x7D4E7C00) - 1096335838) ^ 0xBEA73E22 | ((((v380 << 16) - 1688731648) ^ 0x9B580000)
                                                                    - ((2 * (((v380 << 16) - 1688731648) ^ 0x9B580000)) & 0x6CC60000)
                                                                    + 912520979) ^ 0x3663F713;
  unsigned int v81 = (v66 - 1931198900) ^ 0x8CE43E4C | (v76 - ((2 * v76) & 0xFC) + 1926292350) ^ 0x72D0E37E;
  unsigned int v82 = (v80 - ((2 * v80) & 0x7721ABA) + 62459229) ^ 0x3B90D5D | (v30 - ((2 * v30) & 0x5A) - 1964266195) ^ 0x8AEBAD2D;
  unsigned int v83 = (((((v62 - ((2 * v62) & 0x149D30)) << 8) - 1974560768) ^ 0x8A4E9800)
       - ((2 * ((((v62 - ((2 * v62) & 0x149D30)) << 8) - 1974560768) ^ 0x8A4E9800)) & 0x17D5D600)
       - 1947538471) ^ 0x8BEAEBD9 | (v51 + 770609190) ^ 0x2DEE9026;
  unsigned int v84 = (v68 - 2071397990) ^ 0x8488F99A | (v61 - 1167046387 + (~(2 * v61) | 0xFFFFFFE5) + 1) ^ 0xBA70490D;
  unsigned int v85 = (((((v384 << 8) + 753152) ^ 0x4AB5C300) + 213910809 + (~(2 * (((v384 << 8) + 753152) ^ 0x4AB5C300)) | 0xE67FF5FF)) | 1) ^ 0xCC00519 | ((((v388 << 16) + 1057357824) ^ 0x3F060000) - ((2 * (((v388 << 16) + 1057357824) ^ 0x3F060000)) & 0x38A00000) - 1672456452) ^ 0x9C5056FC;
  unsigned int v86 = (v69 + 1268065740) ^ 0x4B9525CC | (v85 - ((2 * v85) & 0x8425B6F6) + 1108532091) ^ 0x4212DB7B;
  unsigned int v87 = (((v86 - ((2 * v86) & 0x6CBD76)) << 8) - 1235305728) ^ 0xB65EBB00;
  unsigned int v88 = (v87 + 422414516 + (~(2 * v87) | 0xCDA4EFFF) + 1) ^ 0x192D88B4 | ((BYTE2(a7) ^ 0x8E)
                                                                        - ((2 * (BYTE2(a7) ^ 0x8E)) & 0xAC)
                                                                        - 930024618) ^ 0xC890F356;
  int v89 = (((v82 - ((2 * v82) & 0x999DE6)) << 8) + 1288631040) ^ 0x4CCEF300;
  int v90 = (v89 - ((2 * v89) & 0x3F6CC00) + 33252908) ^ 0x1FB662C | (v54 + 193308655) ^ 0xB85A7EF;
  unsigned int v91 = (v84 - ((2 * v84) & 0xFEC28DB0) - 10402088) ^ v55 ^ (v83 - ((2 * v83) & 0x65259E86) + 848482115) ^ v78;
  unsigned int v92 = (v81 - ((2 * v81) & 0xBB14A9E8) + 1569346804) ^ v390 ^ ((((v75 << 8) + 1465103616) ^ 0x5753B500)
                                                              - ((2 * (((v75 << 8) + 1465103616) ^ 0x5753B500)) & 0x3FCC5200)
                                                              + 535177515) ^ (v90 - ((2 * v90) & 0xB7C82E06) + 1541674755) ^ (v88 - ((2 * v88) & 0x9C69D826) - 835392493);
  unsigned int v93 = ((((v38 << 16) - 1411579904) ^ 0xABDD0000)
       - ((2 * (((v38 << 16) - 1411579904) ^ 0xABDD0000)) & 0x30C60000)
       - 664581137) ^ 0xD8634BEF | ((((v31 << 8) - 1140821504) ^ 0xBC007200)
                                  - ((2 * (((v31 << 8) - 1140821504) ^ 0xBC007200)) & 0x51F75400)
                                  - 386160101) ^ 0xE8FBAA1B;
  unsigned int v94 = (v93 - ((2 * v93) & 0x7A5C001A) - 47316979) ^ 0xFD2E000D | (v392 + 22036376) ^ 0x1503F98;
  int v95 = (((v94 - ((2 * v94) & 0x8616F0)) << 8) + 1124825088) ^ 0x430B7800;
  LOBYTE(STACK[0x488]) = v92 ^ 0x13;
  LOBYTE(STACK[0x4C0]) = v92 ^ 0x13;
  unsigned int v96 = v91 ^ (v95 - ((2 * v95) & 0xB8365A00) + 1545285021);
  unsigned int v97 = ((((v96 ^ 0x5E78B2F9) - 1487922518) ^ 0xFC7776BF)
       + 59279681
       + ((2 * ((v96 ^ 0x5E78B2F9) - 1487922518)) & 0xF8EEED7E))
      * (v96 ^ 0x5E78B2F9);
  LOBYTE(STACK[0x651]) = BYTE1(v92) ^ 0x46;
  LOBYTE(STACK[0x689]) = BYTE1(v92) ^ 0x46;
  LOBYTE(STACK[0x66D]) = BYTE1(v96) ^ 0xFE;
  LOBYTE(STACK[0x6A5]) = BYTE1(v96) ^ 0xFE;
  LOBYTE(STACK[0x852]) = BYTE2(v92) ^ 0x19;
  LOBYTE(STACK[0x81A]) = BYTE2(v92) ^ 0x19;
  LOBYTE(STACK[0x2DB]) = HIBYTE(v92) ^ 0xC9;
  LOBYTE(STACK[0x313]) = HIBYTE(v92) ^ 0xC9;
  LOBYTE(STACK[0x86E]) = BYTE2(v96) ^ 0x34;
  LOBYTE(STACK[0x836]) = BYTE2(v96) ^ 0x34;
  unsigned int v98 = (v97 ^ 0x7DEFAD7F) + (v92 ^ 0x85550A5F) + ((2 * v97) & 0xFBDF5AFE) - 2050675341;
  unsigned int v99 = ((2 * v98) & 0xBEFF3BB8) + (v98 ^ 0x5F7F9DDC);
  LOBYTE(v91) = v91 ^ 0x28;
  LOBYTE(STACK[0x4A4]) = v91;
  LOBYTE(STACK[0x4DC]) = v91;
  unsigned int v100 = (v96 ^ 0x5E78B2F9)
       + (((v99 + 114047665) * (v99 - 1602199004)) ^ 0xF96FFFEA)
       + ((2 * (v99 + 114047665) * (v99 - 1602199004)) & 0xF2DFFFD4)
       - 2133905520;
  unsigned int v101 = ((2 * v100) & 0x77BEF7CA) + (v100 ^ 0xBBDF7BE5);
  LOBYTE(v38) = (((v99 - 1602199004) >> 16) - (((v99 - 1602199004) >> 15) & 0x36) + 27) ^ 0x57;
  LOBYTE(STACK[0x2F7]) = HIBYTE(v96) ^ 0x12;
  LOBYTE(STACK[0x32F]) = HIBYTE(v96) ^ 0x12;
  LOBYTE(STACK[0x88A]) = v38;
  LOBYTE(STACK[0x8C2]) = v38;
  LOBYTE(v75) = v99 - ((2 * v99 + 72) & 0x98) + 112;
  LOBYTE(STACK[0x4F8]) = v75;
  LOBYTE(STACK[0x530]) = v75;
  LOBYTE(v31) = (((unsigned __int16)(v99 + 25124) >> 8) - (((v99 - 1602199004) >> 7) & 8) - 124) ^ 0xC8;
  LOBYTE(STACK[0x6C1]) = v31;
  LOBYTE(STACK[0x6F9]) = v31;
  LOBYTE(v31) = v101 + (~(2 * v101 + 54) | 0x67) + 104;
  LOBYTE(STACK[0x514]) = v31;
  LOBYTE(STACK[0x54C]) = v31;
  LOBYTE(v91) = (((v99 - 1602199004) >> 24) - (((v99 - 1602199004) >> 23) & 0xF2) + 121) ^ 0x35;
  LOBYTE(STACK[0x383]) = v91;
  LOBYTE(STACK[0x34B]) = v91;
  unsigned int v102 = (((v101 + 1142981659) * (v101 + 932878799)) ^ 0x676D78BF)
       + v99
       + ((2 * (v101 + 1142981659) * (v101 + 932878799)) & 0xCEDAF17E);
  LOBYTE(v91) = (((unsigned __int16)(v101 - 31717) >> 8) - (((v101 + 1142981659) >> 7) & 0xA) - 123) ^ 0xC9;
  LOBYTE(STACK[0x6DD]) = v91;
  LOBYTE(STACK[0x715]) = v91;
  LOBYTE(v91) = (((v101 + 1142981659) >> 24) - (((v101 + 1142981659) >> 23) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x39F]) = v91;
  LOBYTE(STACK[0x367]) = v91;
  unsigned int v103 = (((v102 + 1937809264) * (v102 - 1750329334)) ^ 0xDFDD9DFF)
       + v101
       + ((2 * (v102 + 1937809264) * (v102 - 1750329334)) & 0xBFBB3BFE);
  LOBYTE(STACK[0x8A6]) = (((v101 + 1142981659) >> 16) - (((v101 + 1142981659) >> 15) & 0xAE) + 87) ^ 0x1B;
  LOBYTE(v96) = v102 - ((2 * v102 + 20) & 0x98) + 86;
  LOBYTE(STACK[0x5A0]) = v96;
  LOBYTE(STACK[0x568]) = v96;
  LOBYTE(v54) = (((unsigned __int16)(v102 + 6154) >> 8) - (((v102 - 1750329334) >> 7) & 0xE6) - 13) ^ 0xBF;
  LOBYTE(STACK[0x731]) = v54;
  LOBYTE(STACK[0x769]) = v54;
  LOBYTE(STACK[0x22A]) = (((v102 - 1750329334) >> 16) - (((v102 - 1750329334) >> 15) & 0xA2) + 81) ^ 0x1D;
  LOBYTE(v101) = (((v103 - 1635984458) >> 16) - (((v103 - 1635984458) >> 15) & 0xBA) + 93) ^ 0x11;
  HIDWORD(v105) = v102
                + (((v103 - 1635984458) * (v103 - 1820617369)) ^ 0xBEB79CD7)
                + ((2 * (v103 - 1635984458) * (v103 - 1820617369)) & 0x7D6F39AE)
                + 821502992;
  LODWORD(v105) = HIDWORD(v105);
  int v104 = v105 >> 30;
  HIDWORD(v105) = v104;
  LODWORD(v105) = (v104 - ((2 * v104) & 0xAA7976C8) - 717440156) ^ 0xD53CBB64;
  int v106 = (v105 >> 2) - ((2 * (v105 >> 2)) & 0xC941BEA2) + 1688264529;
  char v107 = (((unsigned __int16)(v103 - 9290) >> 8) - (((v103 - 1635984458) >> 7) & 0x38) + 28) ^ 0x50;
  LOBYTE(STACK[0x785]) = v107;
  LOBYTE(STACK[0x74D]) = v107;
  LOBYTE(v31) = (((v102 - 1750329334) >> 24) - (((v102 - 1750329334) >> 23) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x3F3]) = v31;
  LOBYTE(STACK[0x3BB]) = v31;
  LOBYTE(v96) = ((v103 - 1635984458) >> 24) - (((v103 - 1635984458) >> 23) & 0x34);
  unsigned int v108 = ((((v106 ^ 0x64A0DF51) + 237491931) ^ 0xCE5FAFCF)
        + 832589873
        + ((2 * ((v106 ^ 0x64A0DF51) + 237491931)) & 0x9CBF5F9E))
       * (v106 ^ 0x64A0DF51);
  LOBYTE(v88) = v103 - ((2 * v103 + 108) & 0x98) + 2;
  LOBYTE(STACK[0x584]) = v88;
  LOBYTE(STACK[0x5BC]) = v88;
  LOBYTE(STACK[0x610]) = v106 ^ 0x1D;
  LOBYTE(STACK[0x5D8]) = v106 ^ 0x1D;
  LOBYTE(STACK[0x246]) = v101;
  LOBYTE(STACK[0x20E]) = v101;
  unsigned int v109 = (v108 ^ 0x7BFBE6DB) + v103 + ((2 * v108) & 0xF7F7CDB6);
  LOBYTE(v96) = (v96 - 102) ^ 0xD6;
  LOBYTE(STACK[0x3D7]) = v96;
  LOBYTE(STACK[0x40F]) = v96;
  LOBYTE(STACK[0x262]) = BYTE2(v106) ^ 0xEC;
  LOBYTE(STACK[0x29A]) = BYTE2(v106) ^ 0xEC;
  unsigned int v110 = (v106 ^ 0x64A0DF51)
       + (((v109 + 826441964) * (v109 + 1129484195)) ^ 0xCDEFD7FF)
       + ((2 * (v109 + 826441964) * (v109 + 1129484195)) & 0x9BDFAFFE)
       + 101860627;
  unsigned int v111 = ((2 * v110) & 0x7FCEFD76) + (v110 ^ 0xBFE77EBB);
  LOBYTE(STACK[0x7D9]) = BYTE1(v106) ^ 0x93;
  LOBYTE(STACK[0x7A1]) = BYTE1(v106) ^ 0x93;
  LOBYTE(v102) = v111 + (~(2 * v111 - 118) | 0x67) - 110;
  LOBYTE(STACK[0x680]) = v102;
  LOBYTE(STACK[0x648]) = v102;
  LOBYTE(v102) = v109 - ((2 * v109 + 70) & 0x98) - 17;
  LOBYTE(STACK[0x5F4]) = v102;
  LOBYTE(STACK[0x62C]) = v102;
  LOBYTE(v102) = (((unsigned __int16)(v109 - 28765) >> 8) - (((v109 + 1129484195) >> 7) & 0x7E) + 63) ^ 0x73;
  LOBYTE(STACK[0x7BD]) = v102;
  LOBYTE(STACK[0x7F5]) = v102;
  LOBYTE(v31) = ((v111 + 1075347781) >> 16) - (((v111 + 1075347781) >> 15) & 0x1A);
  LOBYTE(STACK[0x463]) = HIBYTE(v106) ^ 0x28;
  LOBYTE(STACK[0x42B]) = HIBYTE(v106) ^ 0x28;
  LOBYTE(v75) = (((v109 + 1129484195) >> 24) - (((v109 + 1129484195) >> 23) & 0x54) + 42) ^ 0x66;
  LOBYTE(STACK[0x47F]) = v75;
  LOBYTE(STACK[0x447]) = v75;
  LOBYTE(v75) = ((~((v111 + 1075347781) >> 7) | 0xBF) + ((unsigned __int16)(v111 - 32443) >> 8) + 33) ^ 0x6C;
  LOBYTE(v88) = (((v109 + 1129484195) >> 16) - (((v109 + 1129484195) >> 15) & 0x54) - 86) ^ 0xE6;
  LOBYTE(STACK[0x27E]) = v88;
  LOBYTE(STACK[0x2B6]) = v88;
  unsigned int v112 = (((v111 + 417823491) * (v111 + 1075347781)) ^ 0x556D7FF6)
       + v109
       + ((2 * (v111 + 417823491) * (v111 + 1075347781)) & 0xAADAFFEC);
  LOBYTE(STACK[0x849]) = v75;
  LOBYTE(STACK[0x811]) = v75;
  LOBYTE(v106) = (((v111 + 1075347781) >> 24) - (((v111 + 1075347781) >> 23) & 0x62) - 79) ^ 0xFD;
  LOBYTE(STACK[0x49B]) = v106;
  LOBYTE(STACK[0x4D3]) = v106;
  unsigned int v113 = (((v112 - 1346218887) * (v112 - 1249567487)) ^ 0xBFEFED7E)
       + v111
       + ((2 * (v112 - 1346218887) * (v112 - 1249567487)) & 0x7FDFDAFC);
  LOBYTE(v60) = ((unsigned __int16)(v112 + 7425) >> 8) - (((v112 - 1249567487) >> 7) & 0x78);
  LOBYTE(v31) = (v31 - 115) ^ 0xC1;
  LOBYTE(STACK[0x30A]) = v31;
  LOBYTE(STACK[0x2D2]) = v31;
  LOBYTE(v88) = (((v112 - 1249567487) >> 24) - (((v112 - 1249567487) >> 23) & 0x82) + 65) ^ 0xD;
  LOBYTE(v106) = ((v112 - 1249567487) >> 16) - (((v112 - 1249567487) >> 15) & 0x98) + 76;
  LOBYTE(STACK[0x2EE]) = v106;
  LOBYTE(STACK[0x326]) = v106;
  LOBYTE(v69) = v112 - ((2 * v112 + 2) & 0x98);
  unsigned int v114 = (((v113 - 1443072169) * (v113 + 1156756039)) ^ 0x7F7FF35B)
       + v112
       + ((2 * (v113 - 1443072169) * (v113 + 1156756039)) & 0xFEFFE6B6);
  LOBYTE(v31) = (((unsigned __int16)(v113 + 30551) >> 8) - (((v113 - 1443072169) >> 7) & 0xCC) + 102) ^ 0x2A;
  LOBYTE(STACK[0x881]) = v31;
  LOBYTE(STACK[0x8B9]) = v31;
  LOBYTE(STACK[0x69C]) = v69 + 77;
  LOBYTE(STACK[0x664]) = v69 + 77;
  LOBYTE(STACK[0x4EF]) = v88;
  LOBYTE(STACK[0x4B7]) = v88;
  LOBYTE(v106) = (((v113 - 1443072169) >> 16) - (((v113 - 1443072169) >> 15) & 0xD2) - 23) ^ 0xA5;
  LOBYTE(v31) = (v60 - 68) ^ 0xF0;
  LOBYTE(STACK[0x82D]) = v31;
  LOBYTE(STACK[0x865]) = v31;
  LOBYTE(STACK[0x342]) = v106;
  LOBYTE(STACK[0x37A]) = v106;
  LOBYTE(v60) = v114 - ((2 * v114 - 124) & 0x98) + 14;
  LOBYTE(STACK[0x70C]) = v60;
  LOBYTE(STACK[0x6D4]) = v60;
  LOBYTE(v60) = v113 - ((2 * v113 - 82) & 0x98) - 93;
  LOBYTE(STACK[0x6B8]) = v60;
  LOBYTE(STACK[0x6F0]) = v60;
  LOBYTE(v108) = (((v113 - 1443072169) >> 24) - (((v113 - 1443072169) >> 23) & 0x56) + 43) ^ 0x67;
  LOBYTE(STACK[0x543]) = v108;
  LOBYTE(STACK[0x50B]) = v108;
  LOBYTE(v108) = ((~((v114 + 1397968066) >> 7) | 0xB3) + ((unsigned __int16)(v114 + 19650) >> 8) - 89) ^ 0xEA;
  unsigned int v115 = (((v114 + 1397968066) * (v114 - 311986336)) ^ 0x5DFFF7FF)
       + v113
       + ((2 * (v114 + 1397968066) * (v114 - 311986336)) & 0xBBFFEFFE);
  LOBYTE(STACK[0x8D5]) = v108;
  LOBYTE(STACK[0x89D]) = v108;
  char v116 = (((v114 + 1397968066) >> 24) - (((v114 + 1397968066) >> 23) & 0x5E) + 47) ^ 0x63;
  LOBYTE(v31) = ((v115 - 328438049) >> 16) - (((v115 - 328438049) >> 15) & 0xBC);
  LOBYTE(v88) = ((unsigned __int16)(v115 + 28383) >> 8) - (((v115 - 328438049) >> 7) & 0x38);
  LOBYTE(v106) = (((v114 + 1397968066) >> 16) - (((v114 + 1397968066) >> 15) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x396]) = v106;
  LOBYTE(STACK[0x35E]) = v106;
  LOBYTE(STACK[0x55F]) = v116;
  LOBYTE(STACK[0x527]) = v116;
  unsigned int v117 = (((v115 + 1967068598) * (v115 - 328438049)) ^ 0xBFFDC678)
       + v114
       + ((2 * (v115 + 1967068598) * (v115 - 328438049)) & 0x7FFB8CF0);
  char v118 = (((v115 - 328438049) >> 24) - (((v115 - 328438049) >> 23) & 0xDE) + 111) ^ 0x23;
  LOBYTE(v51) = v115 - ((2 * v115 - 66) & 0x98) + 43;
  LOBYTE(STACK[0x760]) = v51;
  LOBYTE(STACK[0x728]) = v51;
  LOBYTE(v108) = (((unsigned __int16)(v117 + 24969) >> 8) - (((v117 + 1356095881) >> 7) & 0xD8) - 20) ^ 0xA0;
  LOBYTE(STACK[0x23D]) = v108;
  LOBYTE(STACK[0x205]) = v108;
  unsigned int v119 = (((v117 + 1356095881) * (v117 - 1615133553)) ^ 0xFB6FE3DE)
       + v115
       + ((2 * (v117 + 1356095881) * (v117 - 1615133553)) & 0xF6DFC7BC);
  LOBYTE(STACK[0x221]) = (v88 - 100) ^ 0xD0;
  LOBYTE(v30) = (v31 + 94) ^ 0x12;
  LOBYTE(STACK[0x3B2]) = v30;
  LOBYTE(STACK[0x3EA]) = v30;
  LOBYTE(STACK[0x57B]) = v118;
  LOBYTE(STACK[0x5B3]) = v118;
  LOBYTE(v31) = (((v117 + 1356095881) >> 16) - (((v117 + 1356095881) >> 15) & 0x1A) + 13) ^ 0x41;
  LOBYTE(STACK[0x3CE]) = v31;
  LOBYTE(STACK[0x406]) = v31;
  unsigned int v120 = (((v119 - 318050062) * (v119 - 736063251)) ^ 0x62F37FBF)
       + v117
       + ((2 * (v119 - 318050062) * (v119 - 736063251)) & 0xC5E6FF7E);
  LOBYTE(v106) = (((v117 + 1356095881) >> 24) - (((v117 + 1356095881) >> 23) & 0x68) + 52) ^ 0x78;
  LOBYTE(STACK[0x597]) = v106;
  LOBYTE(STACK[0x5CF]) = v106;
  char v121 = (((unsigned __int16)(v119 - 3854) >> 8) - (((v119 - 318050062) >> 7) & 0x96) + 75) ^ 7;
  LOBYTE(STACK[0x259]) = v121;
  LOBYTE(STACK[0x291]) = v121;
  LOBYTE(v117) = v117 - ((2 * v117 + 18) & 0x98) - 43;
  LOBYTE(STACK[0x744]) = v117;
  LOBYTE(STACK[0x77C]) = v117;
  LOBYTE(v117) = (((v119 - 318050062) >> 16) - (((v119 - 318050062) >> 15) & 0x5A) - 83) ^ 0xE1;
  LOBYTE(STACK[0x45A]) = v117;
  LOBYTE(STACK[0x422]) = v117;
  LOBYTE(v117) = (((unsigned __int16)(v120 - 6795) >> 8) - (((v120 + 358671733) >> 7) & 0xF2) - 7) ^ 0xB5;
  LOBYTE(v98) = v119 - ((2 * v119 - 28) & 0x98) + 62;
  LOBYTE(STACK[0x798]) = v98;
  LOBYTE(STACK[0x7D0]) = v98;
  unsigned int v122 = (((v120 - 157480314) * (v120 + 358671733)) ^ 0xBB2DBEFD)
       + v119
       + ((2 * (v120 - 157480314) * (v120 + 358671733)) & 0x765B7DFA);
  LOBYTE(v30) = (((v120 + 358671733) >> 16) - (((v120 + 358671733) >> 15) & 0xEE) - 9) ^ 0xBB;
  LOBYTE(v108) = (((v119 - 318050062) >> 24) - (((v119 - 318050062) >> 23) & 0x20) - 112) ^ 0xDC;
  LOBYTE(STACK[0x5EB]) = v108;
  LOBYTE(STACK[0x623]) = v108;
  LOBYTE(STACK[0x43E]) = v30;
  LOBYTE(STACK[0x476]) = v30;
  unsigned int v123 = 127 - ((v122 - 884372656) >> 24);
  LOBYTE(STACK[0x275]) = v117;
  LOBYTE(STACK[0x2AD]) = v117;
  LOBYTE(v117) = (((~(_BYTE)v123 | 0xF0) + ((2 * (v123 & 7 ^ (~(_BYTE)v123 | 0x7B))) ^ 0xC7) - 28) ^ 0xE3) & (((v123 & 0xF0 ^ 0x7F) - ((2 * (v123 & 0xF0 ^ 0x7F)) & 0xA4) + 82) ^ 0x52);
  LOBYTE(STACK[0x65B]) = v117 - ((2 * v117) & 0x99) + 76;
  LOBYTE(v117) = v120 - ((2 * v120 - 22) & 0x98) - 63;
  LOBYTE(STACK[0x7EC]) = v117;
  LOBYTE(STACK[0x7B4]) = v117;
  char v124 = (((v122 - 884372656) >> 16) - (((v122 - 884372656) >> 15) & 0x7A) + 61) ^ 0x71;
  LOBYTE(STACK[0x492]) = v124;
  LOBYTE(STACK[0x4CA]) = v124;
  char v125 = (((v120 + 358671733) >> 24) - (((v120 + 358671733) >> 23) & 0xC8) + 100) ^ 0x28;
  LOBYTE(STACK[0x607]) = v125;
  LOBYTE(STACK[0x63F]) = v125;
  char v126 = (((unsigned __int16)(v122 - 29872) >> 8) - (((v122 - 884372656) >> 7) & 0x7E) - 65) ^ 0xF3;
  LOBYTE(STACK[0x2C9]) = v126;
  LOBYTE(STACK[0x301]) = v126;
  unsigned int v127 = (((v122 - 884372656) * (v122 + 122335075)) ^ 0x7A7FF6F8)
       + v120
       + ((2 * (v122 - 884372656) * (v122 + 122335075)) & 0xF4FFEDF0);
  LOBYTE(v102) = v122 + ~(2 * ((v122 + 80) & 0x4D ^ v122 & 1)) - 99;
  LOBYTE(STACK[0x808]) = v102;
  LOBYTE(STACK[0x840]) = v102;
  LOBYTE(STACK[0x693]) = v123 ^ 0x33;
  LOBYTE(v123) = v127 - ((2 * v127 + 110) & 0x98) + 3;
  LOBYTE(STACK[0x824]) = v123;
  LOBYTE(STACK[0x85C]) = v123;
  LOBYTE(v123) = (((v127 + 1527810999) >> 24) - (((v127 + 1527810999) >> 23) & 0xB0) + 88) ^ 0x14;
  unsigned int v128 = (((v127 + 1527810999) * (v127 + 627739305)) ^ 0xFFF3FFFD)
       + v122
       + ((2 * (v127 + 1527810999) * (v127 + 627739305)) & 0xFFE7FFFA);
  LOBYTE(v119) = (((v127 + 1527810999) >> 16) - (((v127 + 1527810999) >> 15) & 0x66) + 51) ^ 0x7F;
  LOBYTE(STACK[0x4AE]) = v119;
  LOBYTE(STACK[0x4E6]) = v119;
  LOBYTE(STACK[0x6AF]) = v123;
  LOBYTE(STACK[0x677]) = v123;
  unsigned int v129 = ((v127 + 1527810999) >> 8) - (((v127 + 1527810999) >> 7) & 0x38) - 100;
  LOBYTE(STACK[0x31D]) = v129 ^ 0xD0;
  unsigned int v130 = (((v128 - 1314050039) * (v128 - 14072311)) ^ 0xFDFFE945)
       + v127
       + ((2 * (v128 - 1314050039) * (v128 - 14072311)) & 0xFBFFD28A);
  LOBYTE(v102) = (127 - ((unsigned __int16)(v128 + 12297) >> 8)) ^ 0x33;
  LOBYTE(v49) = ((unsigned __int16)(v130 + 7982) >> 8) - (((v130 + 538058542) >> 7) & 0x76);
  LOBYTE(v129) = (((v129 & 0xA9 ^ 0xDE) - ((2 * (v129 & 0xA9 ^ 0xDE)) & 0x6A) + 53) ^ 0x35) & (((v129 & 0x56 ^ 0xBD)
                                                                                              + ((2 * v129) & 0xA8 ^ 0xC7)
                                                                                              - 35) ^ 0xDC);
  LOBYTE(STACK[0x2E5]) = v129 - ((2 * v129) & 0x99) + 76;
  LOBYTE(STACK[0x339]) = v102;
  LOBYTE(STACK[0x371]) = v102;
  LOBYTE(v119) = v128 - ((2 * v128 + 18) & 0x98) + 85;
  LOBYTE(STACK[0x878]) = v119;
  LOBYTE(STACK[0x8B0]) = v119;
  LOBYTE(v78) = (((v128 - 1314050039) >> 16) - (((v128 - 1314050039) >> 15) & 0x60) + 48) ^ 0x7C;
  LOBYTE(STACK[0x502]) = v78;
  LOBYTE(STACK[0x53A]) = v78;
  unsigned int v131 = (((v130 + 538058542) * (v130 + 833839122)) ^ 0x6EF57FBE)
       + v128
       + ((2 * (v130 + 538058542) * (v130 + 833839122)) & 0xDDEAFF7C);
  LOBYTE(v102) = (((v130 + 538058542) >> 16) - (((v130 + 538058542) >> 15) & 0x34) - 102) ^ 0xD6;
  LOBYTE(v129) = (((v128 - 1314050039) >> 24) - (((v128 - 1314050039) >> 23) & 0x1E) + 15) ^ 0x43;
  LOBYTE(STACK[0x703]) = v129;
  LOBYTE(STACK[0x6CB]) = v129;
  LOBYTE(v66) = (((v130 + 538058542) >> 24) - (((v130 + 538058542) >> 23) & 0xA) + 5) ^ 0x49;
  LOBYTE(STACK[0x71F]) = v66;
  LOBYTE(STACK[0x6E7]) = v66;
  LOBYTE(STACK[0x51E]) = v102;
  LOBYTE(STACK[0x556]) = v102;
  LOBYTE(v102) = v130 - ((2 * v130 + 92) & 0x98);
  unsigned int v132 = (((v131 + 57333895) * (v131 + 1306394792)) ^ 0x7EEE7EFF)
       + v130
       + ((2 * (v131 + 57333895) * (v131 + 1306394792)) & 0xFDDCFDFE);
  LOBYTE(v68) = (v49 + 59) ^ 0x77;
  LOBYTE(STACK[0x38D]) = v68;
  LOBYTE(STACK[0x355]) = v68;
  LOBYTE(v88) = (((v131 + 1306394792) >> 16) - (((v131 + 1306394792) >> 15) & 0xE2) + 113) ^ 0x3D;
  LOBYTE(v102) = v102 + 122;
  LOBYTE(STACK[0x8CC]) = v102;
  LOBYTE(STACK[0x894]) = v102;
  LOBYTE(v119) = (((v131 + 1306394792) >> 24) - (((v131 + 1306394792) >> 23) & 0x8A) + 69) ^ 9;
  LOBYTE(STACK[0x5AA]) = v88;
  LOBYTE(STACK[0x572]) = v88;
  LOBYTE(v102) = (((unsigned __int16)(v131 + 168) >> 8) - (((v131 + 1306394792) >> 7) & 0x92) + 73) ^ 5;
  LOBYTE(STACK[0x3E1]) = v102;
  LOBYTE(STACK[0x3A9]) = v102;
  LOBYTE(STACK[0x218]) = v131 - 2 * ((v131 + 40) & 0x4D ^ v131 & 1) - 12;
  LOBYTE(v66) = ((~((v132 - 62421509) >> 15) | 0x47) + ((v132 - 62421509) >> 16) - 35) ^ 0x90;
  LOBYTE(STACK[0x773]) = v119;
  LOBYTE(STACK[0x73B]) = v119;
  unsigned int v133 = (((v132 - 283744834) * (v132 - 62421509)) ^ 0x7F3DEDFF)
       + v131
       + ((2 * (v132 - 283744834) * (v132 - 62421509)) & 0xFE7BDBFE);
  LOBYTE(STACK[0x234]) = v132 - ((2 * v132 - 10) & 0x98) + 71;
  LOBYTE(v68) = ((~((v132 - 62421509) >> 7) | 5) + ((unsigned __int16)(v132 - 31237) >> 8) - 2) ^ 0xB1;
  LOBYTE(STACK[0x3C5]) = v68;
  LOBYTE(STACK[0x3FD]) = v68;
  LOBYTE(v78) = (((v132 - 62421509) >> 24) - (((v132 - 62421509) >> 23) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x757]) = v78;
  LOBYTE(STACK[0x78F]) = v78;
  unsigned int v134 = (((v133 + 98258695) * (v133 - 574765576)) ^ 0x92FEE8FF)
       + v132
       + ((2 * (v133 + 98258695) * (v133 - 574765576)) & 0x25FDD1FE);
  LOBYTE(v88) = v133 - ((2 * v133 + 14) & 0x98) + 83;
  LOBYTE(STACK[0x250]) = v88;
  LOBYTE(STACK[0x288]) = v88;
  LOBYTE(v68) = (((v133 + 98258695) >> 16) - (((v133 + 98258695) >> 15) & 0xB4) - 38) ^ 0x96;
  LOBYTE(STACK[0x58E]) = v66;
  LOBYTE(STACK[0x5C6]) = v66;
  LOBYTE(STACK[0x5E2]) = v68;
  LOBYTE(STACK[0x61A]) = v68;
  LOBYTE(v68) = (((v133 + 98258695) >> 24) - (((v133 + 98258695) >> 23) & 0x50) + 40) ^ 0x64;
  LOBYTE(STACK[0x7AB]) = v68;
  LOBYTE(STACK[0x7E3]) = v68;
  LOBYTE(v68) = (((unsigned __int16)(v133 + 20231) >> 8) - (((v133 + 98258695) >> 7) & 0x62) - 79) ^ 0xFD;
  LOBYTE(STACK[0x451]) = v68;
  LOBYTE(STACK[0x419]) = v68;
  int v135 = (((v134 - 808089906) * (v134 - 1987365014)) ^ 0x3DD7DDF3)
       + v133
       + ((2 * (v134 - 808089906) * (v134 - 1987365014)) & 0x7BAFBBE6);
  LOBYTE(v133) = ((((unsigned __int16)(v134 + 14186) >> 8) - (((v134 - 1987365014) >> 7) & 0x9E) + 87) ^ 3) - 8;
  LOBYTE(STACK[0x46D]) = v133;
  LOBYTE(STACK[0x435]) = v133;
  LOBYTE(v68) = v134 - ((2 * v134 - 44) & 0x98) - 74;
  LOBYTE(STACK[0x26C]) = v68;
  LOBYTE(STACK[0x2A4]) = v68;
  LOBYTE(v133) = (((v134 - 1987365014) >> 16) - (((v134 - 1987365014) >> 15) & 0x7A) + 61) ^ 0x71;
  LOBYTE(STACK[0x5FE]) = v133;
  LOBYTE(STACK[0x636]) = v133;
  LOBYTE(v133) = (((v135 - 1029532701) >> 16) - (((v135 - 1029532701) >> 15) & 0x36) - 101) ^ 0xD7;
  LOBYTE(v106) = ((v134 - 1987365014) >> 24) - (((v134 - 1987365014) >> 23) & 0x5C);
  unsigned int v136 = (((v135 - 635453898) * (v135 - 1029532701)) ^ 0x71CFF7FE)
       + v134
       + ((2 * (v135 - 635453898) * (v135 - 1029532701)) & 0xE39FEFFC);
  LOBYTE(v106) = (v106 + 46) ^ 0x62;
  LOBYTE(v102) = (((unsigned __int16)(v135 - 27677) >> 8) - (((v135 - 1029532701) >> 7) & 0x54) + 42) ^ 0x66;
  LOBYTE(STACK[0x652]) = v133;
  LOBYTE(STACK[0x68A]) = v133;
  LOBYTE(v133) = v136 + (~(2 * v136 + 50) | 0x67) + 102;
  LOBYTE(STACK[0x2DC]) = v133;
  LOBYTE(STACK[0x314]) = v133;
  LOBYTE(v133) = v135 - ((2 * v135 - 58) & 0x98) + 47;
  LOBYTE(STACK[0x2C0]) = v133;
  LOBYTE(STACK[0x2F8]) = v133;
  LOBYTE(STACK[0x7C7]) = v106;
  LOBYTE(STACK[0x7FF]) = v106;
  LOBYTE(v31) = (((v135 - 1029532701) >> 24) - (((v135 - 1029532701) >> 23) & 0xBC) + 94) ^ 0x12;
  LOBYTE(STACK[0x81B]) = v31;
  LOBYTE(STACK[0x853]) = v31;
  LOBYTE(STACK[0x4C1]) = v102;
  LOBYTE(STACK[0x489]) = v102;
  LOBYTE(v102) = (((unsigned __int16)(v136 - 13799) >> 8) - (((v136 + 2079377945) >> 7) & 0x42) - 95) ^ 0xED;
  LOBYTE(STACK[0x4DD]) = v102;
  LOBYTE(STACK[0x4A5]) = v102;
  unsigned int v137 = (((v136 - 319752191) * (v136 + 2079377945)) ^ 0x4FFDF71E)
       + v135
       + ((2 * (v136 - 319752191) * (v136 + 2079377945)) & 0x9FFBEE3C);
  LOBYTE(v31) = v137 - 2 * ((v137 + 48) & 0x4D ^ v137 & 1) - 4;
  LOBYTE(STACK[0x368]) = v31;
  LOBYTE(STACK[0x330]) = v31;
  LOBYTE(v106) = (((v136 + 2079377945) >> 16) - (((v136 + 2079377945) >> 15) & 0xA) - 123) ^ 0xC9;
  LOBYTE(STACK[0x66E]) = v106;
  LOBYTE(STACK[0x6A6]) = v106;
  LOBYTE(v133) = ((v137 + 1243304368) >> 24) - (((v137 + 1243304368) >> 23) & 0xE6);
  LOBYTE(v102) = (((v137 + 1243304368) >> 16) - (((v137 + 1243304368) >> 15) & 0x44) - 94) ^ 0xEE;
  LOBYTE(v62) = ((unsigned __int16)(v137 + 20912) >> 8) ^ 0x4C;
  LOBYTE(STACK[0x6C2]) = v102;
  LOBYTE(STACK[0x6FA]) = v102;
  LOBYTE(v102) = (((v136 + 2079377945) >> 24) - (((v136 + 2079377945) >> 23) & 0x5C) - 82) ^ 0xE2;
  unsigned int v138 = (((v137 + 1243304368) * (v137 - 1474832348)) ^ 0x7FF7FF5D)
       + v136
       + ((2 * (v137 + 1243304368) * (v137 - 1474832348)) & 0xFFEFFEBA);
  LOBYTE(STACK[0x837]) = v102;
  LOBYTE(STACK[0x86F]) = v102;
  unsigned int v139 = (((v138 - 88587887) * (v138 + 1260368311)) ^ 0x5F5F67DB)
       + v137
       + ((2 * (v138 - 88587887) * (v138 + 1260368311)) & 0xBEBECFB6);
  LOBYTE(STACK[0x531]) = v62;
  LOBYTE(STACK[0x4F9]) = v62;
  LOBYTE(v133) = (v133 + 115) ^ 0x3F;
  LOBYTE(STACK[0x8C3]) = v133;
  LOBYTE(STACK[0x88B]) = v133;
  LOBYTE(v133) = v138 - ((2 * v138 + 34) & 0x98) - 35;
  LOBYTE(STACK[0x34C]) = v133;
  LOBYTE(STACK[0x384]) = v133;
  LOBYTE(v102) = (((v138 - 88587887) >> 24) - (((v138 - 88587887) >> 23) & 0xA) - 123) ^ 0xC9;
  LOBYTE(v117) = (((v138 - 88587887) >> 16) - (((v138 - 88587887) >> 15) & 0x92) + 73) ^ 5;
  LOBYTE(v31) = (((unsigned __int16)(v138 + 16785) >> 8) - (((v138 - 88587887) >> 7) & 4) + 2) ^ 0x4E;
  LOBYTE(STACK[0x54D]) = v31;
  LOBYTE(STACK[0x515]) = v31;
  unsigned int v140 = (((v139 + 2094765004) * (v139 + 2146409025)) ^ 0x7FF78FF3)
       + v138
       + ((2 * (v139 + 2094765004) * (v139 + 2146409025)) & 0xFFEF1FE6);
  LOBYTE(STACK[0x6DE]) = v117;
  LOBYTE(STACK[0x716]) = v117;
  LOBYTE(v117) = v139 - 2 * ((v139 + 76) & 0x4F ^ v139 & 3) + 24;
  LOBYTE(STACK[0x3D8]) = v117;
  LOBYTE(STACK[0x3A0]) = v117;
  LOBYTE(v117) = (((v139 + 2094765004) >> 16) - (((v139 + 2094765004) >> 15) & 0xA) + 5) ^ 0x49;
  LOBYTE(v106) = ((unsigned __int16)(v139 - 27700) >> 8) - (((v139 + 2094765004) >> 7) & 0xEE);
  LOBYTE(STACK[0x8A7]) = v102;
  LOBYTE(STACK[0x22B]) = (((v139 + 2094765004) >> 24) - (((v139 + 2094765004) >> 23) & 0x20) - 112) ^ 0xDC;
  unsigned int v141 = (((v140 + 318081207) * (v140 - 1634338921)) ^ 0x5EFFDE8F)
       + v139
       + ((2 * (v140 + 318081207) * (v140 - 1634338921)) & 0xBDFFBD1E);
  LOBYTE(v31) = (((unsigned __int16)(v140 - 30537) >> 8) - (((v140 + 318081207) >> 7) & 0x52) - 87) ^ 0xE5;
  LOBYTE(STACK[0x5BD]) = v31;
  LOBYTE(STACK[0x585]) = v31;
  LOBYTE(v106) = (v106 + 119) ^ 0x3B;
  LOBYTE(v31) = v140 + (~(2 * v140 + 110) | 0x67) + 4;
  LOBYTE(STACK[0x3F4]) = v31;
  LOBYTE(STACK[0x3BC]) = v31;
  LOBYTE(v31) = ((v140 + 318081207) >> 24) - (((v140 + 318081207) >> 23) & 0x24);
  LOBYTE(STACK[0x569]) = v106;
  LOBYTE(STACK[0x5A1]) = v106;
  LOBYTE(STACK[0x76A]) = v117;
  LOBYTE(STACK[0x732]) = v117;
  LOBYTE(v106) = (((unsigned __int16)(v141 + 22344) >> 8) - (((v141 - 455649464) >> 7) & 0xC) - 122) ^ 0xCA;
  LOBYTE(v117) = v141 - 2 * ((v141 + 72) & 0x4F ^ v141 & 3) - 108;
  LOBYTE(STACK[0x448]) = v117;
  LOBYTE(STACK[0x410]) = v117;
  LOBYTE(STACK[0x611]) = v106;
  LOBYTE(STACK[0x5D9]) = v106;
  int v142 = (((v141 - 455649464) * (v141 - 856888326)) ^ 0x277DFF9B)
       + v140
       + ((2 * (v141 - 455649464) * (v141 - 856888326)) & 0x4EFBFF36);
  LOBYTE(v140) = (((v140 + 318081207) >> 16) - (((v140 + 318081207) >> 15) & 0xD0) + 104) ^ 0x24;
  LOBYTE(STACK[0x786]) = v140;
  LOBYTE(STACK[0x74E]) = v140;
  LOBYTE(v54) = (((v141 - 455649464) >> 24) - (((v141 - 455649464) >> 23) & 0x32) + 25) ^ 0x55;
  LOBYTE(v31) = (v31 - 110) ^ 0xDE;
  unsigned int v143 = (v142 + 1217709193) * (v142 + 482819945)
       - 402671909
       - ((2 * (v142 + 1217709193) * (v142 + 482819945)) & 0xCFFF7364)
       + 727;
  LOBYTE(STACK[0x20F]) = v31;
  LOBYTE(STACK[0x247]) = v31;
  LOBYTE(v128) = ((v141 - 455649464) >> 16) - (((v141 - 455649464) >> 15) & 2);
  unsigned int v144 = ((2 * v143) ^ 0xCFFF7364) - 2 * (((2 * v143) ^ 0xCFFF7364) & 0x245AECBE ^ (2 * v143) & 0xA) + 609938613;
  unsigned int v145 = (v143 ^ 0x34BC07BD) + (v144 & 0xA6877C1E ^ 0x4AF5E3AA) + ((2 * v144) & 0x4D0E183C ^ 0x48041828) - 1861717950;
  LOBYTE(STACK[0x29B]) = v54;
  LOBYTE(STACK[0x263]) = v54;
  LOBYTE(v106) = (((v142 + 1217709193) >> 16) - (((v142 + 1217709193) >> 15) & 0xCE) + 103) ^ 0x2B;
  int v146 = (v145 ^ 0x2BB7FE55) + v141 + ((2 * v145) & 0x576FFCAA);
  LOBYTE(v141) = (((v142 + 1217709193) >> 24) - (((v142 + 1217709193) >> 23) & 0x2E) - 105) ^ 0xDB;
  LOBYTE(v128) = (v128 + 1) ^ 0x4D;
  LOBYTE(STACK[0x7DA]) = v128;
  LOBYTE(STACK[0x7A2]) = v128;
  LOBYTE(v128) = (((unsigned __int16)(v142 - 15223) >> 8) - (((v142 + 1217709193) >> 7) & 0xD6) + 107) ^ 0x27;
  LOBYTE(STACK[0x5F5]) = v128;
  LOBYTE(STACK[0x62D]) = v128;
  LOBYTE(v54) = v142 - ((2 * v142 + 18) & 0x98);
  unsigned int v147 = (((v146 + 1237130545) * (v146 - 1189127949)) ^ 0x709FFFAB)
       + v142
       + ((2 * (v146 + 1237130545) * (v146 - 1189127949)) & 0xE13FFF56);
  LOBYTE(STACK[0x42C]) = v54 - 43;
  LOBYTE(STACK[0x464]) = v54 - 43;
  LOBYTE(STACK[0x7BE]) = v106;
  LOBYTE(STACK[0x7F6]) = v106;
  LOBYTE(v140) = ((~((v146 - 1189127949) >> 7) | 0x45)
                + ((unsigned __int16)(v146 + 22771) >> 8)
                - 34) ^ 0x91;
  LOBYTE(STACK[0x681]) = v140;
  LOBYTE(STACK[0x649]) = v140;
  LOBYTE(v54) = v146 - ((2 * v146 - 26) & 0x98) + 63;
  LOBYTE(STACK[0x480]) = v54;
  LOBYTE(STACK[0x4B8]) = v54;
  LOBYTE(v54) = (((v146 - 1189127949) >> 16) - (((v146 - 1189127949) >> 15) & 0xC8) - 28) ^ 0xA8;
  LOBYTE(STACK[0x27F]) = v141;
  LOBYTE(STACK[0x2B7]) = v141;
  LOBYTE(v143) = (((unsigned __int16)(v147 + 7819) >> 8) - (((v147 - 1199104373) >> 7) & 0x88) - 60) ^ 0x88;
  LOBYTE(v102) = (((v146 - 1189127949) >> 24) - (((v146 - 1189127949) >> 23) & 0x3A) - 99) ^ 0xD1;
  LOBYTE(STACK[0x69D]) = v143;
  LOBYTE(STACK[0x665]) = v143;
  LOBYTE(STACK[0x2D3]) = v102;
  LOBYTE(STACK[0x30B]) = v102;
  LOBYTE(STACK[0x84A]) = v54;
  LOBYTE(STACK[0x812]) = v54;
  unsigned int v148 = (((v147 - 971834074) * (v147 - 1199104373)) ^ 0x7F75DDF7)
       + v146
       + ((2 * (v147 - 971834074) * (v147 - 1199104373)) & 0xFEEBBBEE);
  LOBYTE(v140) = (((v147 - 1199104373) >> 24) - (((v147 - 1199104373) >> 23) & 0xCA) + 101) ^ 0x29;
  LOBYTE(STACK[0x327]) = v140;
  LOBYTE(STACK[0x2EF]) = v140;
  int v149 = (v148 + 666642405) * (v148 - 1911344767);
  unsigned int v150 = v149 ^ 0xDBBEEFEB;
  unsigned int v151 = (2 * v149) & 0xB77DDFD6;
  LOBYTE(v149) = v148 - ((2 * v148 - 54) & 0x98) + 49;
  LOBYTE(STACK[0x4F0]) = v149;
  LOBYTE(STACK[0x528]) = v149;
  LOBYTE(v143) = (((v147 - 1199104373) >> 16) - (((v147 - 1199104373) >> 15) & 0x16) + 11) ^ 0x47;
  LOBYTE(STACK[0x866]) = v143;
  LOBYTE(STACK[0x82E]) = v143;
  LOBYTE(v143) = v147 - ((2 * v147 + 22) & 0x98);
  unsigned int v152 = v150 + v147 + v151;
  int v153 = (v152 + 1012380784) * (v152 - 861978833);
  int v154 = v153 ^ 0x5BD59FE3;
  unsigned int v155 = (2 * v153) & 0xB7AB3FC6;
  LOBYTE(v153) = ((unsigned __int16)(v148 + 10213) >> 8) - (((v148 + 666642405) >> 7) & 0x98) + 76;
  LOBYTE(STACK[0x6B9]) = v153;
  LOBYTE(STACK[0x6F1]) = v153;
  LOBYTE(v106) = ((v148 + 666642405) >> 16) - (((v148 + 666642405) >> 15) & 0x58);
  LOBYTE(v143) = v143 - 41;
  LOBYTE(STACK[0x49C]) = v143;
  LOBYTE(STACK[0x4D4]) = v143;
  LOBYTE(v60) = (((v148 + 666642405) >> 24) - (((v148 + 666642405) >> 23) & 0x54) - 86) ^ 0xE6;
  unsigned int v156 = v154 + v148 + v155;
  LOBYTE(v106) = (v106 - 84) ^ 0xE0;
  LOBYTE(STACK[0x882]) = v106;
  LOBYTE(STACK[0x8BA]) = v106;
  LOBYTE(v133) = v152 - 2 * ((v152 + 112) & 0x4F ^ v152 & 3) - 68;
  LOBYTE(STACK[0x50C]) = v133;
  LOBYTE(STACK[0x544]) = v133;
  LOBYTE(STACK[0x343]) = v60;
  LOBYTE(STACK[0x37B]) = v60;
  LOBYTE(v133) = ((v156 + 1559787941) >> 16) - (((v156 + 1559787941) >> 15) & 0x84);
  LOBYTE(v60) = (((unsigned __int16)(v156 + 31141) >> 8) - (((v156 + 1559787941) >> 7) & 0x28) - 108) ^ 0xD8;
  LOBYTE(v146) = (((unsigned __int16)(v152 - 19344) >> 8) - (((v152 + 1012380784) >> 7) & 0x48) + 36) ^ 0x68;
  LOBYTE(STACK[0x6D5]) = v146;
  LOBYTE(STACK[0x70D]) = v146;
  LOBYTE(v143) = (((v152 + 1012380784) >> 16) - (((v152 + 1012380784) >> 15) & 0x3E) - 97) ^ 0xD3;
  LOBYTE(STACK[0x8D6]) = v143;
  LOBYTE(STACK[0x89E]) = v143;
  LOBYTE(v143) = ((v152 + 1012380784) >> 24) - (((v152 + 1012380784) >> 23) & 0xD2);
  unsigned int v157 = (((v156 + 1559787941) * (v156 + 953127621)) ^ 0xFFFEF7DF)
       + v152
       + ((2 * (v156 + 1559787941) * (v156 + 953127621)) & 0xFFFDEFBE);
  LOBYTE(STACK[0x729]) = v60;
  LOBYTE(STACK[0x761]) = v60;
  LOBYTE(v152) = v156 - ((2 * v156 + 74) & 0x98) - 15;
  LOBYTE(STACK[0x598]) = v152;
  LOBYTE(STACK[0x560]) = v152;
  LOBYTE(v152) = (((v156 + 1559787941) >> 24) - (((v156 + 1559787941) >> 23) & 0xDE) - 17) ^ 0xA3;
  LOBYTE(v143) = (v143 + 105) ^ 0x25;
  LOBYTE(STACK[0x397]) = v143;
  LOBYTE(STACK[0x35F]) = v143;
  unsigned int v158 = (((v157 - 696314409) * (v157 + 1353557287)) ^ 0x67FAAF9C)
       + v156
       + ((2 * (v157 - 696314409) * (v157 + 1353557287)) & 0xCFF55F38);
  LOBYTE(STACK[0x3EB]) = v152;
  LOBYTE(STACK[0x3B3]) = v152;
  LOBYTE(STACK[0x222]) = (v133 - 62) ^ 0x8E;
  LOBYTE(v133) = (((unsigned __int16)(v157 + 5591) >> 8) - (((v157 - 696314409) >> 7) & 2) + 1) ^ 0x4D;
  LOBYTE(STACK[0x745]) = v133;
  LOBYTE(STACK[0x77D]) = v133;
  LOBYTE(v143) = ((v158 + 1740963387) >> 24) - (((v158 + 1740963387) >> 23) & 0xA4);
  LOBYTE(v78) = v157 - ((2 * v157 - 82) & 0x98) + 35;
  LOBYTE(STACK[0x5B4]) = v78;
  LOBYTE(STACK[0x57C]) = v78;
  LOBYTE(v133) = (((v157 - 696314409) >> 16) - (((v157 - 696314409) >> 15) & 0xE) - 121) ^ 0xCB;
  LOBYTE(v154) = (((v158 + 1740963387) >> 16) - (((v158 + 1740963387) >> 15) & 0x52) + 41) ^ 0x65;
  LOBYTE(STACK[0x206]) = v133;
  LOBYTE(STACK[0x23E]) = v133;
  LOBYTE(v60) = (((v157 - 696314409) >> 24) - (((v157 - 696314409) >> 23) & 0xB2) + 89) ^ 0x15;
  unsigned int v159 = (((v158 + 1349614690) * (v158 + 1740963387)) ^ 0x7DD7F5EF)
       + v157
       + ((2 * (v158 + 1349614690) * (v158 + 1740963387)) & 0xFBAFEBDE);
  LOBYTE(STACK[0x407]) = v60;
  LOBYTE(STACK[0x3CF]) = v60;
  LOBYTE(v60) = v158 - ((2 * v158 + 118) & 0x98) - 121;
  LOBYTE(STACK[0x608]) = v60;
  LOBYTE(STACK[0x5D0]) = v60;
  LOBYTE(v66) = v159 - ((2 * v159 - 24) & 0x98) - 64;
  LOBYTE(STACK[0x624]) = v66;
  LOBYTE(STACK[0x5EC]) = v66;
  LOBYTE(v155) = (((v159 + 1149670772) >> 16) - (((v159 + 1149670772) >> 15) & 0x10) - 120) ^ 0xC4;
  LOBYTE(v152) = (((unsigned __int16)(v158 - 453) >> 8) - (((v158 + 1740963387) >> 7) & 0x78) - 68) ^ 0xF0;
  LOBYTE(STACK[0x799]) = v152;
  LOBYTE(STACK[0x7D1]) = v152;
  unsigned int v160 = (((v159 + 1149670772) * (v159 + 1458325533)) ^ 0xEDF6FFFF)
       + v158
       + ((2 * (v159 + 1149670772) * (v159 + 1458325533)) & 0xDBEDFFFE);
  LOBYTE(STACK[0x25A]) = v154;
  LOBYTE(STACK[0x292]) = v154;
  LOBYTE(v143) = (v143 + 82) ^ 0x1E;
  LOBYTE(STACK[0x423]) = v143;
  LOBYTE(STACK[0x45B]) = v143;
  LOBYTE(v152) = (((unsigned __int16)(v159 - 27276) >> 8) - (((v159 + 1149670772) >> 7) & 0x84) - 62) ^ 0x8E;
  LOBYTE(STACK[0x7ED]) = v152;
  LOBYTE(STACK[0x7B5]) = v152;
  LOBYTE(v157) = ((v159 + 1149670772) >> 24) - (((v159 + 1149670772) >> 23) & 0xE6);
  LOBYTE(STACK[0x276]) = v155;
  LOBYTE(STACK[0x2AE]) = v155;
  LOBYTE(v143) = v160 - ((2 * v160 - 30) & 0x98) - 67;
  LOBYTE(STACK[0x640]) = v143;
  LOBYTE(STACK[0x678]) = v143;
  LOBYTE(v128) = (((v160 + 1925994097) >> 24) - (((v160 + 1925994097) >> 23) & 0x3A) + 29) ^ 0x51;
  unsigned int v161 = (((v160 + 1640275191) * (v160 + 1925994097)) ^ 0x691FD6C7)
       + v159
       + ((2 * (v160 + 1640275191) * (v160 + 1925994097)) & 0xD23FAD8E);
  LOBYTE(v157) = (v157 - 13) ^ 0xBF;
  LOBYTE(STACK[0x477]) = v157;
  LOBYTE(STACK[0x43F]) = v157;
  LOBYTE(STACK[0x493]) = v128;
  LOBYTE(STACK[0x4CB]) = v128;
  LOBYTE(v60) = (((v160 + 1925994097) >> 16) - (((v160 + 1925994097) >> 15) & 0x6E) - 73) ^ 0xFB;
  LOBYTE(STACK[0x302]) = v60;
  LOBYTE(STACK[0x2CA]) = v60;
  LOBYTE(v88) = ((((unsigned __int16)(v160 + 22129) >> 8) - (((v160 + 1925994097) >> 7) & 0x9E) + 111) ^ 3) - 32;
  LOBYTE(STACK[0x809]) = v88;
  LOBYTE(STACK[0x841]) = v88;
  LOBYTE(v88) = (((unsigned __int16)(v161 + 21521) >> 8) - (((v161 + 645682193) >> 7) & 0xC6) - 29) ^ 0xAF;
  unsigned int v162 = (((v161 - 1936816522) * (v161 + 645682193)) ^ 0xE7CFBB6F)
       + v160
       + ((2 * (v161 - 1936816522) * (v161 + 645682193)) & 0xCF9F76DE);
  LOBYTE(v160) = (((v161 + 645682193) >> 24) - (((v161 + 645682193) >> 23) & 0xCE) - 25) ^ 0xAB;
  LOBYTE(v143) = v161 - ((2 * v161 + 34) & 0x98) + 93;
  LOBYTE(STACK[0x694]) = v143;
  LOBYTE(STACK[0x65C]) = v143;
  LOBYTE(v154) = ((unsigned __int16)(v162 + 12848) >> 8) - (((v162 - 398314960) >> 7) & 0x18);
  LOBYTE(v157) = (((v161 + 645682193) >> 16) - (((v161 + 645682193) >> 15) & 0xE0) + 112) ^ 0x3C;
  LOBYTE(STACK[0x2E6]) = v157;
  LOBYTE(STACK[0x31E]) = v157;
  LOBYTE(STACK[0x4AF]) = v160;
  LOBYTE(STACK[0x4E7]) = v160;
  LOBYTE(v160) = v162 - ((2 * v162 + 96) & 0x98) + 124;
  LOBYTE(STACK[0x6B0]) = v160;
  LOBYTE(STACK[0x6E8]) = v160;
  LOBYTE(v153) = (((v162 - 398314960) >> 16) - (((v162 - 398314960) >> 15) & 8) + 4) ^ 0x48;
  unsigned int v163 = (((v162 - 1800679788) * (v162 - 398314960)) ^ 0xF3FAFCFF)
       + v161
       + ((2 * (v162 - 1800679788) * (v162 - 398314960)) & 0xE7F5F9FE);
  LOBYTE(STACK[0x372]) = v153;
  LOBYTE(STACK[0x33A]) = v153;
  LOBYTE(v160) = (((v162 - 398314960) >> 24) - (((v162 - 398314960) >> 23) & 0x8E) + 71) ^ 0xB;
  LOBYTE(STACK[0x53B]) = v160;
  LOBYTE(STACK[0x503]) = v160;
  LOBYTE(v143) = v163 - ((2 * v163 + 4) & 0x98) - 50;
  LOBYTE(STACK[0x6CC]) = v143;
  LOBYTE(STACK[0x704]) = v143;
  LOBYTE(STACK[0x825]) = v88;
  LOBYTE(STACK[0x85D]) = v88;
  LOBYTE(v160) = (((unsigned __int16)(v163 - 27518) >> 8) - (((v163 - 755198846) >> 7) & 2) + 1) ^ 0x4D;
  LOBYTE(STACK[0x8CD]) = v160;
  LOBYTE(STACK[0x895]) = v160;
  unsigned int v164 = (((v163 - 755198846) * (v163 + 152491326)) ^ 0xB7DBDFDF)
       + v162
       + ((2 * (v163 - 755198846) * (v163 + 152491326)) & 0x6FB7BFBE);
  LOBYTE(v160) = (v154 + 12) ^ 0x40;
  LOBYTE(STACK[0x879]) = v160;
  LOBYTE(STACK[0x8B1]) = v160;
  LOBYTE(v60) = (((v163 - 755198846) >> 16) - (((v163 - 755198846) >> 15) & 0x4E) + 39) ^ 0x6B;
  char v165 = ((v164 - 858653265) >> 24) - (((v164 - 858653265) >> 23) & 0x52);
  LOBYTE(v157) = (((v164 - 858653265) >> 16) - (((v164 - 858653265) >> 15) & 0xEA) - 11) ^ 0xB9;
  LOBYTE(v152) = (((v163 - 755198846) >> 24) - (((v163 - 755198846) >> 23) & 0x22) + 17) ^ 0x5D;
  LOBYTE(STACK[0x51F]) = v152;
  LOBYTE(STACK[0x557]) = v152;
  unsigned int v166 = (((v164 - 858653265) * (v164 - 1347363338)) ^ 0x76FF71FF)
       + v163
       + ((2 * (v164 - 858653265) * (v164 - 1347363338)) & 0xEDFEE3FE);
  LOBYTE(v160) = ((unsigned __int16)(v164 - 593) >> 8) - (((v164 - 858653265) >> 7) & 0xBE);
  LOBYTE(v152) = v164 + (~(2 * v164 + 94) | 0x67) - 4;
  LOBYTE(STACK[0x720]) = v152;
  LOBYTE(STACK[0x758]) = v152;
  LOBYTE(STACK[0x38E]) = v60;
  LOBYTE(STACK[0x356]) = v60;
  LOBYTE(STACK[0x3E2]) = v157;
  LOBYTE(STACK[0x3AA]) = v157;
  LOBYTE(v141) = (((v166 - 1113183091) >> 16) - (((v166 - 1113183091) >> 15) & 0x16) + 11) ^ 0x47;
  unsigned int v167 = (((v166 - 1113183091) * (v166 - 1520069198)) ^ 0xFF3FFDFF)
       + v164
       + ((2 * (v166 - 1113183091) * (v166 - 1520069198)) & 0xFE7FFBFE);
  LOBYTE(STACK[0x219]) = (v160 - 33) ^ 0x93;
  LOBYTE(v149) = (v165 - 87) ^ 0xE5;
  LOBYTE(v88) = ((v166 - 1113183091) >> 24) - (((v166 - 1113183091) >> 23) & 0xE6);
  LOBYTE(STACK[0x235]) = (((unsigned __int16)(v166 + 11405) >> 8) - (((v166 - 1113183091) >> 7) & 0x24) - 110) ^ 0xDE;
  LOBYTE(STACK[0x573]) = v149;
  LOBYTE(STACK[0x5AB]) = v149;
  char v168 = v166 - ((2 * v166 + 26) & 0x98) - 39;
  LOBYTE(STACK[0x774]) = v168;
  LOBYTE(STACK[0x73C]) = v168;
  LOBYTE(STACK[0x3FE]) = v141;
  LOBYTE(STACK[0x3C6]) = v141;
  unsigned int v169 = (((v167 - 517546157) * (v167 - 2044566136)) ^ 0x7B6FBE7B)
       + v166
       + ((2 * (v167 - 517546157) * (v167 - 2044566136)) & 0xF6DF7CF6);
  LOBYTE(v166) = (((v167 - 517546157) >> 16) - (((v167 - 517546157) >> 15) & 0xFA) - 3) ^ 0xB1;
  LOBYTE(v152) = ((unsigned __int16)(v169 - 1304) >> 8) - (((v169 - 1006896408) >> 7) & 0x98);
  LOBYTE(v88) = (v88 + 115) ^ 0x3F;
  LOBYTE(STACK[0x5C7]) = v88;
  LOBYTE(STACK[0x58F]) = v88;
  LOBYTE(v88) = v167 - ((2 * v167 - 90) & 0x98) - 97;
  LOBYTE(STACK[0x7C8]) = v88;
  LOBYTE(STACK[0x790]) = v88;
  LOBYTE(v160) = (((unsigned __int16)(v167 - 8365) >> 8) - (((v167 - 517546157) >> 7) & 0x68) + 52) ^ 0x78;
  LOBYTE(STACK[0x289]) = v160;
  LOBYTE(STACK[0x251]) = v160;
  LOBYTE(v88) = ((v169 - 1006896408) >> 24) - (((v169 - 1006896408) >> 23) & 0x50);
  LOBYTE(v160) = v169 - 2 * ((v169 + 104) & 0x4E ^ v169 & 2) + 52;
  LOBYTE(STACK[0x7E4]) = v160;
  LOBYTE(STACK[0x7AC]) = v160;
  LOBYTE(STACK[0x452]) = v166;
  LOBYTE(STACK[0x41A]) = v166;
  LOBYTE(v157) = ((v169 - 1006896408) >> 16) - (((v169 - 1006896408) >> 15) & 0x90);
  LOBYTE(v141) = (((v167 - 517546157) >> 24) - (((v167 - 517546157) >> 23) & 0x12) + 9) ^ 0x45;
  unsigned int v170 = (((v169 - 979048880) * (v169 - 1006896408)) ^ 0xF3FBF3FA)
       + v167
       + ((2 * (v169 - 979048880) * (v169 - 1006896408)) & 0xE7F7E7F4);
  LOBYTE(STACK[0x5E3]) = v141;
  LOBYTE(STACK[0x61B]) = v141;
  int v171 = (((v170 - 1956569468) * (v170 - 78377020)) ^ 0x2F9E787D)
       + v169
       + ((2 * (v170 - 1956569468) * (v170 - 78377020)) & 0x5F3CF0FA);
  LOBYTE(STACK[0x26D]) = v152 + 76;
  LOBYTE(STACK[0x2A5]) = v152 + 76;
  LOBYTE(v160) = (v88 + 40) ^ 0x64;
  LOBYTE(STACK[0x5FF]) = v160;
  LOBYTE(STACK[0x637]) = v160;
  LOBYTE(v119) = (((v170 - 78377020) >> 16) - (((v170 - 78377020) >> 15) & 0x50) + 40) ^ 0x64;
  LOBYTE(v166) = (((unsigned __int16)(v170 + 4036) >> 8) - (((v170 - 78377020) >> 7) & 0x94) - 54) ^ 0x86;
  LOBYTE(v160) = (v157 + 72) ^ 4;
  LOBYTE(STACK[0x436]) = v160;
  LOBYTE(STACK[0x46E]) = v160;
  LOBYTE(v160) = v170 - 2 * ((v170 + 68) & 0x4D ^ v170 & 1) + 16;
  LOBYTE(STACK[0x800]) = v160;
  LOBYTE(STACK[0x838]) = v160;
  LOBYTE(v160) = (((v170 - 78377020) >> 24) - (((v170 - 78377020) >> 23) & 0xFC) - 2) ^ 0xB2;
  LOBYTE(STACK[0x653]) = v160;
  LOBYTE(STACK[0x68B]) = v160;
  LOBYTE(STACK[0x4C2]) = v119;
  LOBYTE(STACK[0x48A]) = v119;
  char v172 = (((unsigned __int16)(v171 + 21883) >> 8) - (((v171 - 1204529797) >> 7) & 0x6E) + 55) ^ 0x7B;
  LOBYTE(STACK[0x2C1]) = v166;
  LOBYTE(STACK[0x2F9]) = v166;
  unsigned int v173 = (((v171 + 50030781) * (v171 - 1204529797)) ^ 0x6AEBDAF7)
       + v170
       + ((2 * (v171 + 50030781) * (v171 - 1204529797)) & 0xD5D7B5EE);
  LOBYTE(v160) = ((v173 + 1365815724) >> 16) - (((v173 + 1365815724) >> 15) & 0x1A);
  LOBYTE(STACK[0x2DD]) = v172;
  LOBYTE(STACK[0x315]) = v172;
  LOBYTE(v157) = ((unsigned __int16)(v173 - 20052) >> 8) - (((v173 + 1365815724) >> 7) & 0xFC);
  LOBYTE(v152) = v171 - ((2 * v171 - 10) & 0x98) - 57;
  LOBYTE(STACK[0x854]) = v152;
  LOBYTE(STACK[0x81C]) = v152;
  LOBYTE(v119) = ((v171 - 1204529797) >> 24) - (((v171 - 1204529797) >> 23) & 0x76);
  LOBYTE(v152) = ((~((v171 - 1204529797) >> 15) | 0x97)
                + ((v171 - 1204529797) >> 16)
                + 53) ^ 0x78;
  LOBYTE(STACK[0x4A6]) = v152;
  LOBYTE(STACK[0x4DE]) = v152;
  int v174 = (((v173 - 831020838) * (v173 + 1365815724)) ^ 0x2B67E7BF)
       + v171
       + ((2 * (v173 - 831020838) * (v173 + 1365815724)) & 0x56CFCF7E);
  int v175 = v174 - 766419119 + (~(2 * v174 - 651479144) | 0x348878F7);
  LOBYTE(v119) = (v119 + 59) ^ 0x77;
  LOBYTE(v166) = (((v173 + 1365815724) >> 24) - (((v173 + 1365815724) >> 23) & 0x34) + 26) ^ 0x56;
  LOBYTE(STACK[0x6A7]) = v119;
  LOBYTE(STACK[0x66F]) = v119;
  LOBYTE(STACK[0x6C3]) = v166;
  LOBYTE(STACK[0x6FB]) = v166;
  LOBYTE(v173) = v173 - ((2 * v173 + 88) & 0x98) - 8;
  LOBYTE(STACK[0x870]) = v173;
  LOBYTE(STACK[0x8A8]) = v173;
  LOBYTE(v173) = (v160 + 13) ^ 0x41;
  LOBYTE(v119) = (v157 - 2) ^ 0xB2;
  LOBYTE(STACK[0x385]) = BYTE1(v175) ^ 0x8F;
  LOBYTE(STACK[0x34D]) = BYTE1(v175) ^ 0x8F;
  LOBYTE(STACK[0x369]) = v119;
  LOBYTE(STACK[0x331]) = v119;
  LOBYTE(STACK[0x4FA]) = v173;
  LOBYTE(STACK[0x532]) = v173;
  LOBYTE(STACK[0x8C4]) = v175 ^ 0xC8;
  LOBYTE(STACK[0x88C]) = v175 ^ 0xC8;
  LOBYTE(STACK[0x717]) = HIBYTE(v175) ^ 0xA9;
  LOBYTE(STACK[0x6DF]) = HIBYTE(v175) ^ 0xA9;
  LOBYTE(STACK[0x54E]) = BYTE2(v175) ^ 0xF7;
  LOBYTE(STACK[0x516]) = BYTE2(v175) ^ 0xF7;
  unsigned int v176 = (*(unsigned __int8 *)(v18 - 115) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 115) ^ 0x3E)) & 0xFFFFFF3F);
  int v389 = (*(unsigned __int8 *)(v18 - 120) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 120) ^ 0x3E)) & 0x1CA);
  int v391 = (*(unsigned __int8 *)(v18 - 114) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 114) ^ 0x3E)) & 0x1AA);
  int v177 = (*(unsigned __int8 *)(v18 - 112) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 112) ^ 0x3E)) & 0x94);
  int v178 = *(unsigned __int8 *)((LODWORD(STACK[0x18E8]) ^ 0x9FF3ECFF3E727B30)
                            + a13
                            + ((2 * (LODWORD(STACK[0x18E8]) ^ 0xDFDD90C7)) & 0x1C35FD7EELL)
                            + 0x3D7E062C9E83225DLL);
  unsigned int v179 = (*(unsigned __int8 *)(v18 - 111) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 111) ^ 0x3E)) & 0xBBBBBBBB);
  int v180 = LOBYTE(STACK[0x790]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x15E0]) ^ 0x3B6B3EB500400F38)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0x15E0]) ^ 0xDFDD90C7)) & 0x1BF3B3FFELL)
                                                          - 0x5DF94B895F6A91ABLL);
  int v181 = v180 - ((2 * v180) & 0x58);
  int v182 = *(unsigned __int8 *)((LODWORD(STACK[0x1D74]) ^ 0x7FFAE9AFC4026738)
                            + ((2 * (LODWORD(STACK[0x1D74]) ^ 0xDFDD90C7)) & 0x37BFEFFE)
                            + a13
                            + 0x5D77097D64531655);
  int v183 = (*(unsigned __int8 *)(v18 - 108) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 108) ^ 0x3E)) & 0xA0);
  int v385 = (*(unsigned __int8 *)(v18 - 119) ^ 0x3E) + (~(2 * (*(unsigned __int8 *)(v18 - 119) ^ 0x3E)) | 0xFFFF21);
  int v184 = *(unsigned __int8 *)((LODWORD(STACK[0x172C]) ^ 0xAFBE7FBF001EBF18)
                            + a13
                            + ((2 * (LODWORD(STACK[0x172C]) ^ 0xDFDD90C7)) & 0x1BF865FBELL)
                            + 0x2DB3736CA06FDE75);
  int v381 = *(unsigned __int8 *)((LODWORD(STACK[0xB0C]) ^ 0xBBFEFEF5E0216718)
                            + ((2 * (LODWORD(STACK[0xB0C]) ^ 0xDFDD90C7)) & 0x7FF9EFBE)
                            + a13
                            + 0x2172F43740361675);
  int v185 = *(unsigned __int8 *)((LODWORD(STACK[0x15A8]) ^ 0xFE49EF424262B30)
                            + a13
                            + ((2 * (LODWORD(STACK[0x15A8]) ^ 0xDFDD90C7)) & 0x1F7F777EELL)
                            - 0x3272ABC87BC8ADA3);
  int v186 = LOBYTE(STACK[0x7AC]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1BF0]) ^ 0x8DFEDB7E7126AE1ELL)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0x1BF0]) ^ 0xDFDD90C7)) & 0x15DF67DB2)
                                                          + 0x4F7317ADD137CF7BLL);
  LODWORD(v19) = *(unsigned __int8 *)((LODWORD(STACK[0x12A0]) ^ 0x7D87FB76A0A22B3ELL)
                                    + ((2 * (LODWORD(STACK[0x12A0]) ^ 0xDFDD90C7)) & 0xFEFF77F2)
                                    + a13
                                    + 0x5FE9F7B600B3525BLL);
  int v187 = v186 - ((2 * v186) & 0xCA);
  unsigned int v188 = ((((v179 << 8) - 2073109248) ^ 0x846EDD00)
        - ((2 * (((v179 << 8) - 2073109248) ^ 0x846EDD00)) & 0x21B44C00)
        + 1356473965) ^ 0x50DA266D | ((((v177 << 16) + 1934229504) ^ 0x734A0000)
                                    - ((2 * (((v177 << 16) + 1934229504) ^ 0x734A0000)) & 0x5A00000)
                                    + 1120939620) ^ 0x42D02E64;
  unsigned int v189 = v188 - ((2 * v188) & 0x4507A17C);
  int v190 = LOBYTE(STACK[0x289]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xE14]) ^ 0x4FEFF71E3E82EB70)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0xE14]) ^ 0xDFDD90C7)) & 0x1C2BEF76ELL)
                                                          - 0x727E03F2612C6D63);
  int v191 = v190 + 245108 - 2 * (v190 & 0xF);
  int v192 = LOBYTE(STACK[0x7C8]) ^ *(unsigned __int8 *)((LODWORD(STACK[0xC90]) ^ 0xFFFFAFDB2506AE38)
                                                   + a13
                                                   + ((2 * (LODWORD(STACK[0xC90]) ^ 0xDFDD90C7)) & 0x1F5B67DFELL)
                                                   - 0x228DBCAF7AA830ABLL);
  int v193 = (v192 ^ 0x5D) - ((2 * v192) & 0x40);
  int v194 = *(unsigned __int8 *)((v382 ^ 0xE3CEFFAFA027751ALL)
                            + ((2 * (v382 ^ 0xDFDD90C7)) & 0xFFF5CBBA)
                            + a13
                            - 0x65D0C82FFC7D789);
  int v195 = *(unsigned __int8 *)((LODWORD(STACK[0x1764]) ^ 0xFC79C89F3D3262BFLL)
                            + a13
                            + ((2 * (LODWORD(STACK[0x1764]) ^ 0xDFDD90C7)) & 0x1C5DFE4F0)
                            - 0x1F07D57362BCE424);
  int v196 = (*(unsigned __int8 *)(v18 - 116) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 116) ^ 0x3E)) & 0x50);
  int v387 = (*(unsigned __int8 *)(v18 - 105) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 105) ^ 0x3E)) & 0x42);
  int v197 = (((v196 << 8) + 1396582400) ^ 0x533E2800)
       + 1391037584
       - ((2 * (((v196 << 8) + 1396582400) ^ 0x533E2800)) & 0x25D31800);
  int v198 = (v184 ^ LOBYTE(STACK[0x637]) ^ 0x5D) - ((2 * (v184 ^ LOBYTE(STACK[0x637]))) & 4);
  int v199 = *(unsigned __int8 *)((LODWORD(STACK[0x1424]) ^ 0x7FBECFBD6187F370)
                            + a13
                            + ((2 * (LODWORD(STACK[0x1424]) ^ 0xDFDD90C7)) & 0x17CB4C76ELL)
                            + 0x5DB3236EC1D8AA9DLL);
  unsigned int v200 = (LOBYTE(STACK[0x7E4]) ^ 0x5D ^ v19)
       - ((2 * (LOBYTE(STACK[0x7E4]) ^ 0x5D ^ v19)) & 0x70);
  int v201 = *(unsigned __int8 *)((LODWORD(STACK[0x111C]) ^ 0xC9FE6D9708887C39)
                            + a13
                            + ((2 * (LODWORD(STACK[0x111C]) ^ 0xDFDD90C7)) & 0x1AEABD9FCLL)
                            + 0x13738594A8DD2156);
  int v202 = (LOBYTE(STACK[0x251]) ^ 0x5D ^ v195) - ((2 * (LOBYTE(STACK[0x251]) ^ 0x5D ^ v195)) & 0x1E8);
  int v203 = (v197 ^ 0x52E98C90 | (v176 + 214254495) ^ 0xCC5439F)
       - ((2 * (v197 ^ 0x52E98C90 | (v176 + 214254495) ^ 0xCC5439F)) & 0x6D98);
  int v204 = (LOBYTE(STACK[0x2A5]) ^ 0x5D ^ v199) - ((2 * (LOBYTE(STACK[0x2A5]) ^ 0x5D ^ v199)) & 0x1D6);
  int v205 = ((((*(unsigned __int8 *)(v18 - 107) ^ 0x3E) + 2072022 - ((2 * (*(unsigned __int8 *)(v18 - 107) ^ 0x3E)) & 0x5A)) << 8)
        + 874240) ^ 0x1FAB2D00;
  unsigned int v206 = (v205 - ((2 * v205) & 0x2BD75000) + 1441507378) ^ 0x55EBA832 | ((((v183 << 16) - 565182464) ^ 0xDE500000)
                                                                       - ((2 * (((v183 << 16) - 565182464) ^ 0xDE500000)) & 0x4ACC0000)
                                                                       - 1519988752) ^ 0xA566CFF0;
  unsigned int v207 = (v206 - ((2 * v206) & 0x2E5DB202) - 1758537471) ^ 0x972ED901 | ((*(unsigned __int8 *)(v18 - 106) ^ 0x3E)
                                                                       - 1621218026
                                                                       + (~(2 * (*(unsigned __int8 *)(v18 - 106) ^ 0x3E)) | 0xFFFFFFD3)
                                                                       + 1) ^ 0x9F5E2D16;
  unsigned int v208 = v207 - ((2 * v207) & 0xAB2F9E);
  unsigned int v209 = ((((v202 << 8) - 1602882560) ^ 0xA075F400)
        - ((2 * (((v202 << 8) - 1602882560) ^ 0xA075F400)) & 0x18436000)
        + 203534430) ^ 0xC21B05E | ((((v181 << 16) - 584318976) ^ 0xDD2C0000)
                                  - ((2 * (((v181 << 16) - 584318976) ^ 0xDD2C0000)) & 0x7E6C0000)
                                  - 1086922671) ^ 0xBF36E051;
  int v210 = LOBYTE(STACK[0x5E3]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1A6C]) ^ 0x7A7ADD0EB8A0EB00)
                                                          + ((2 * (LODWORD(STACK[0x1A6C]) ^ 0xDFDD90C7)) & 0xCEFAF78E)
                                                          + a13
                                                          + 0x62F7161E18B5928DLL);
  int v211 = v210 - ((2 * v210) & 0xC);
  int v212 = (v185 ^ LOBYTE(STACK[0x46E]) ^ 0x5D) - ((2 * (v185 ^ LOBYTE(STACK[0x46E]))) & 0x140);
  unsigned int v213 = (v189 - 1568419650) ^ 0xA283D0BE | ((*(unsigned __int8 *)(v18 - 110) ^ 0x3E)
                                           - ((2 * (*(unsigned __int8 *)(v18 - 110) ^ 0x3E)) & 0x1D8)
                                           - 1703883540) ^ 0x9A70CCEC;
  unsigned int v214 = v213 - ((2 * v213) & 0x346852);
  unsigned int v215 = ((((LOBYTE(STACK[0x26D]) ^ 0x5D ^ v182) - ((2 * (LOBYTE(STACK[0x26D]) ^ 0x5D ^ v182)) & 0xBC)) << 8)
        - 1020568064) ^ 0xC32B5E00;
  unsigned int v216 = ((((v187 << 16) + 6619136) ^ 0x650000) - ((2 * (((v187 << 16) + 6619136) ^ 0x650000)) & 0xD5900000) - 355957634) ^ 0xEAC8847E | (v215 - ((2 * v215) & 0x1447FA00) + 170130856) ^ 0xA23FDA8;
  unsigned int v217 = v216 - ((2 * v216) & 0x898ECBBE);
  unsigned int v218 = (v209 - ((2 * v209) & 0x79F1ABFC) + 1022940670) ^ 0x3CF8D5FE | ((LOBYTE(STACK[0x41A]) ^ 0x5D ^ v178)
                                                                       - ((2 * (LOBYTE(STACK[0x41A]) ^ 0x5D ^ v178)) & 0x42)
                                                                       - 1565387999) ^ 0xA2B21321;
  int v219 = LOBYTE(STACK[0x452]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xF98]) ^ 0xBF55C7EF3026EFF0)
                                                          + a13
                                                          + ((2 * (LODWORD(STACK[0xF98]) ^ 0xDFDD90C7)) & 0x1DFF6FE6ELL)
                                                          + 0x1E1C2B3C90378F1DLL);
  unsigned int v220 = ((((v191 << 8) + 629504) ^ 0x3C70F00) - ((2 * (((v191 << 8) + 629504) ^ 0x3C70F00)) & 0x21511C00) + 1353223724) ^ 0x50A88E2C | ((((v193 << 16) + 975175680) ^ 0x3A200000) + 893605216 + (~(2 * (((v193 << 16) + 975175680) ^ 0x3A200000)) | 0x9579FFFF) + 1) ^ 0x35435560;
  unsigned int v221 = (((v218 - ((2 * v218) & 0x30EC32)) << 8) - 1737090816) ^ 0x98761900;
  unsigned int v222 = v221 - ((2 * v221) & 0x91874E00);
  unsigned int v223 = ((((v204 << 8) - 1473451264) ^ 0xA82CEB00)
        - ((2 * (((v204 << 8) - 1473451264) ^ 0xA82CEB00)) & 0x2693EC00)
        + 2070541990) ^ 0x7B69F6A6 | ((((v200 << 16) + 976748544) ^ 0x3A380000)
                                    - ((2 * (((v200 << 16) + 976748544) ^ 0x3A380000)) & 0x7CFA0000)
                                    + 1048388397) ^ 0x3E7D232D;
  unsigned int v224 = v223 - ((2 * v223) & 0x67C0C83E);
  int v225 = (v219 - ((2 * v219) & 0xF8) + 1216359548) ^ 0x48802C7C | (v220 - ((2 * v220) & 0x2072055C) + 272171694) ^ 0x103902AE;
  unsigned int v226 = ((v194 ^ LOBYTE(STACK[0x436]) ^ 0x5D) - ((2 * (v194 ^ LOBYTE(STACK[0x436]) ^ 0x5D)) & 0xB2) - 96876455) ^ 0xFA39C859 | (v217 - 993565217) ^ 0xC4C765DF;
  unsigned int v227 = ((((v385 << 8) + 654602240) ^ 0x27046F00)
        - ((2 * (((v385 << 8) + 654602240) ^ 0x27046F00)) & 0x54200)
        - 1944936071) ^ 0x8C12A179 | ((((v389 << 16) - 1008402432) ^ 0xC3E50000)
                                    - ((2 * (((v389 << 16) - 1008402432) ^ 0xC3E50000)) & 0xD0C0000)
                                    + 1183215008) ^ 0x46866DA0;
  unsigned int v228 = (((v225 - ((2 * v225) & 0x54809A)) << 8) - 1438626560) ^ 0xAA404D00;
  unsigned int v229 = ((((v203 << 16) - 1228144640) ^ 0xB6CC0000)
        - ((2 * (((v203 << 16) - 1228144640) ^ 0xB6CC0000)) & 0x8D1E0000)
        + 1183777144) ^ 0x468F0178 | ((((v391 << 8) - 686893824) ^ 0xD70ED500)
                                    - ((2 * (((v391 << 8) - 686893824) ^ 0xD70ED500)) & 0x3742B400)
                                    + 463559178) ^ 0x1BA15A0A;
  unsigned int v230 = ((*(unsigned __int8 *)(v18 - 109) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 109) ^ 0x3E)) & 0xF0) - 1989857416) ^ 0x89652F78 | (((((v214 + 10105923) << 8) - 6656) ^ 0x9A342900) - ((2 * ((((v214 + 10105923) << 8) - 6656) ^ 0x9A342900)) & 0x7319D200) - 1181947631) ^ 0xB98CE911;
  LODWORD(v19) = (v224 - 1277139937) ^ 0xB3E0641F | (v212 + 1851355552) ^ 0x6E5971A0;
  unsigned int v231 = (v228 - ((2 * v228) & 0x93019400) - 914306528) ^ 0xC980CA20 | ((LOBYTE(STACK[0x61B]) ^ 0x5D ^ v201)
                                                                      - ((2 * (LOBYTE(STACK[0x61B]) ^ 0x5D ^ v201)) & 0x128)
                                                                      - 1063781484) ^ 0xC097FB94;
  int v232 = (((v226 - ((2 * v226) & 0xB0952A) + 5786271) << 8) - 2560) ^ 0x584A9500;
  unsigned int v233 = (v229 + 890565854 + (~(2 * v229) | 0x95D61643) + 1) ^ 0x3514F4DE | ((*(unsigned __int8 *)(v18 - 113) ^ 0x3E)
                                                                           - ((2
                                                                             * (*(unsigned __int8 *)(v18 - 113) ^ 0x3E)) & 0xFFFFFF3F)
                                                                           - 1046933345) ^ 0xC199109F;
  unsigned int v234 = ((*(unsigned __int8 *)(v18 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v18 - 118) ^ 0x3E)) & 0xB6) - 1007891877) ^ 0xC3ECCA5B | (v227 - ((2 * v227) & 0x116FF78C) - 2001208378) ^ 0x88B7FBC6;
  unsigned int v235 = (((v234 - ((2 * v234) & 0x945D28)) << 8) - 902917120) ^ 0xCA2E9400;
  unsigned int v236 = (v231 - 2122147912 + (~(2 * v231) | 0xFCFAD091)) ^ (v230 - ((2 * v230) & 0x98A21718) + 1280379788);
  int v237 = (((v19 - ((2 * v19) & 0xC062D8)) << 8) + 1613851648) ^ 0x60316C00;
  unsigned int v238 = (v235 - ((2 * v235) & 0x79F8F800) - 1124303747) ^ 0xBCFC7C7D | ((*(unsigned __int8 *)(v18 - 117) ^ 0x3E)
                                                                       - ((2 * (*(unsigned __int8 *)(v18 - 117) ^ 0x3E)) & 0x1B2)
                                                                       + 1224939737) ^ 0x490318D9;
  unsigned int v239 = (v232 - ((2 * v232) & 0xA3D49C00) + 1374309966) ^ 0x51EA4E4E | ((v381 ^ LOBYTE(STACK[0x5FF]) ^ 0x5D)
                                                                       - 2
                                                                       * ((v381 ^ LOBYTE(STACK[0x5FF]) ^ 0x5D) & 0x7F)
                                                                       + 845413759) ^ 0x3263FD7F;
  LODWORD(STACK[0xE08]) = v236 ^ 0x120E0CFC;
  unsigned int v240 = ((((v208 << 8) + 1436012288) ^ 0x5597CF00)
        - ((2 * (((v208 << 8) + 1436012288) ^ 0x5597CF00)) & 0x7DBD4800)
        + 1054778552) ^ 0x3EDEA4B8 | (v387 - 872786399) ^ 0xCBFA5621;
  unsigned int v241 = (v239 - ((2 * v239) & 0xF9B58616) - 52772085) ^ (v233 - ((2 * v233) & 0x586FA894) - 1405627318);
  unsigned int v242 = (v237 - ((2 * v237) & 0xD6D53E00) + 1802149794) ^ 0x6B6A9FA2 | (v198 + 2001823490) ^ 0x77516702;
  unsigned int v243 = (v240 - ((2 * v240) & 0xC822E0A4) + 1678864466) ^ (v242 - ((2 * v242) & 0xF02F1184) + 2014808258);
  unsigned int v244 = v243 ^ 0xC3DB6857;
  LODWORD(STACK[0xC84]) = v241 ^ 0x8F308786;
  int v245 = v241 ^ 0x50ED1741;
  v243 ^= 0x1C06F890u;
  unsigned int v246 = (((v222 - 926701790) ^ 0xC8C3A722 | (v211 + 1162331398) ^ 0x4547C506)
        - ((2 * ((v222 - 926701790) ^ 0xC8C3A722 | (v211 + 1162331398) ^ 0x4547C506)) & 0xDFF35A6C)
        - 268849866) ^ (v238 - ((2 * v238) & 0x8A3965F0) + 1159508728);
  v236 ^= 0xCDD39C3B;
  LODWORD(STACK[0xB00]) = v246 ^ 0x75388F09;
  unsigned int v247 = (((v243 - 1206593844) ^ 0xFFFEEDFF) + 66469 + ((2 * (v243 - 1206593844)) & 0xFFFDDBFE) + 3676) * v243;
  unsigned int v248 = ((((v241 ^ 0x50ED1741) - 365499804) ^ 0x5DB7AFF7)
        - 1572319223
        + ((2 * ((v241 ^ 0x50ED1741) - 365499804)) & 0xBB6F5FEE))
       * (v241 ^ 0x50ED1741);
  unsigned int v249 = v248 ^ 0xDDFCE770;
  LODWORD(v19) = (2 * v248) & 0xBBF9CEE0;
  unsigned int v250 = v236 + (v247 ^ 0x4BFFFFDF) + ((2 * v247) & 0x97FFFFBE) - 1723665436;
  unsigned int v251 = v250 - 539127609 - ((2 * v250) & 0xBFBB218E);
  unsigned int v252 = (((v236 + 206442678) ^ 0xFFB5FCEF) + 4850449 + ((2 * (v236 + 206442678)) & 0xFF6BF9DE)) * v236;
  LODWORD(STACK[0xF8C]) = v244;
  unsigned int v253 = (v246 ^ 0xAAE51FCE)
       + v249
       + v19
       - 874080241
       - ((2 * ((v246 ^ 0xAAE51FCE) + v249 + v19 - 334952632)) & 0xBFBB218E);
  unsigned int v254 = v253 ^ 0xDFDD90C7;
  unsigned int v255 = (v253 ^ 0xDFDD90C7) - 1849164566;
  unsigned int v256 = v245 + (v252 ^ 0xEDF7FA4F) + ((2 * v252) & 0xDBEFF49E) + 361522636;
  unsigned int v257 = v256 - 539127609 - ((2 * v256) & 0xBFBB218E);
  LODWORD(STACK[0x1110]) = v253;
  unsigned int v258 = v257 ^ 0xDFDD90C7;
  unsigned int v259 = ((v255 ^ 0x5FFFF89D) - 1610610845 + ((2 * v255) & 0xBFFFF13A)) * v254;
  LODWORD(STACK[0x1418]) = v251;
  unsigned int v260 = ((((v257 ^ 0xDFDD90C7) + 1655660131) ^ 0x75FFFFF6)
        - 1979711478
        + ((2 * ((v257 ^ 0xDFDD90C7) + 1655660131)) & 0xEBFFFFEC))
       * (v257 ^ 0xDFDD90C7);
  HIDWORD(v105) = (v260 + 1292905256) ^ 8;
  LODWORD(v105) = (v260 + 1292905256 - ((2 * v260) & 0x9A205650)) ^ 0x4D102B20;
  int v261 = (v105 >> 4) - ((2 * (v105 >> 4)) & 0x4D7CCC0E) + 650012167;
  LODWORD(STACK[0x1294]) = v257;
  unsigned int v262 = v243 - 142674337 + (v259 ^ 0x6FE7D5D9) + ((2 * v259) & 0xDFCFABB2);
  unsigned int v263 = v262 - 539127609 - ((2 * v262) & 0xBFBB218E);
  unsigned int v264 = v263 ^ 0xDFDD90C7;
  unsigned int v265 = ((((v251 ^ 0xDFDD90C7) + 931829429) ^ 0xFE7FDDBB)
        + 25174597
        + ((2 * ((v251 ^ 0xDFDD90C7) + 931829429)) & 0xFCFFBB76))
       * (v251 ^ 0xDFDD90C7);
  unsigned int v266 = ((((v263 ^ 0xDFDD90C7) + 231422626) ^ 0xED3F3BFC)
        + 314622980
        + ((2 * ((v263 ^ 0xDFDD90C7) + 231422626)) & 0xDA7E77F8))
       * (v263 ^ 0xDFDD90C7);
  HIDWORD(v105) = v261 ^ 0x6BE6607;
  LODWORD(v105) = v261 ^ 0x20000000;
  int v267 = v254 + ((v105 >> 28) ^ 0x3FA7AFB9) + ((2 * (v105 >> 28)) & 0x7F4F5F72) - 1490789601;
  unsigned int v268 = v267 - 539127609 - ((2 * v267) & 0xBFBB218E);
  LODWORD(STACK[0x159C]) = v263;
  unsigned int v269 = (v251 ^ 0xDFDD90C7) + (v266 ^ 0x5EC3BE13) + ((2 * v266) & 0xBD877C26) + 1067685037;
  unsigned int v270 = v269 - 539127609 - ((2 * v269) & 0xBFBB218E);
  unsigned int v271 = ((((v268 ^ 0xDFDD90C7) - 500197015) ^ 0xBEE57FF3)
        + 1092255757
        + ((2 * ((v268 ^ 0xDFDD90C7) - 500197015)) & 0x7DCAFFE6))
       * (v268 ^ 0xDFDD90C7);
  unsigned int v272 = ((((v270 ^ 0xDFDD90C7) - 2080480705) ^ 0x3EF7F7D7)
        - 1056438231
        + ((2 * ((v270 ^ 0xDFDD90C7) - 2080480705)) & 0x7DEFEFAE))
       * (v270 ^ 0xDFDD90C7);
  unsigned int v273 = v258 + (v265 ^ 0x9FB7F2CF) + ((2 * v265) & 0x3F6FE59E) - 166923101;
  unsigned int v274 = v273 - 539127609 - ((2 * v273) & 0xBFBB218E);
  unsigned int v275 = v264 + (v271 ^ 0xEFFF3DFF) + ((2 * v271) & 0xDFFE7BFE) + 95594253;
  unsigned int v276 = v275 - 539127609 - ((2 * v275) & 0xBFBB218E);
  unsigned int v277 = (v276 ^ 0xDFDD90C7) - 437995449;
  unsigned int v278 = v277 ^ 0xC7FB2FEC;
  unsigned int v279 = (2 * v277) & 0x8FF65FD8;
  unsigned int v280 = ((((v274 ^ 0xDFDD90C7) + 1094628872) ^ 0xFD2D67FE)
        + 47355906
        + ((2 * ((v274 ^ 0xDFDD90C7) + 1094628872)) & 0xFA5ACFFC))
       * (v274 ^ 0xDFDD90C7);
  unsigned int v281 = (v274 ^ 0xDFDD90C7) + (v272 ^ 0xB8FCFBB9) + ((2 * v272) & 0x71F9F772) + 720321430;
  unsigned int v282 = v281 - 539127609 - ((2 * v281) & 0xBFBB218E);
  unsigned int v283 = (v268 ^ 0xDFDD90C7) + (v280 ^ 0x7AFFF7AF) + ((2 * v280) & 0xF5FFEF5E) + 2014943222;
  unsigned int v284 = v283 - 539127609 - ((2 * v283) & 0xBFBB218E);
  LODWORD(STACK[0x1A28]) = v270;
  LODWORD(STACK[0x1720]) = v268;
  unsigned int v285 = (v270 ^ 0xDFDD90C7)
       + (((v278 + 939839508 + v279) * (v276 ^ 0xDFDD90C7)) ^ 0x699D5BBD)
       + ((2 * (v278 + 939839508 + v279) * (v276 ^ 0xDFDD90C7)) & 0xD33AB77A)
       + 207645505;
  unsigned int v286 = v285 - 539127609 - ((2 * v285) & 0xBFBB218E);
  unsigned int v287 = ((((v282 ^ 0xDFDD90C7) + 1060866930) ^ 0xDA75FFFF)
        + 629800961
        + ((2 * ((v282 ^ 0xDFDD90C7) + 1060866930)) & 0xB4EBFFFE))
       * (v282 ^ 0xDFDD90C7);
  LODWORD(STACK[0x18A4]) = v274;
  unsigned int v288 = ((((v284 ^ 0xDFDD90C7) - 1885332716) ^ 0xE53F0EFF)
        + 448852225
        + ((2 * ((v284 ^ 0xDFDD90C7) - 1885332716)) & 0xCA7E1DFE))
       * (v284 ^ 0xDFDD90C7);
  unsigned int v289 = (v276 ^ 0xDFDD90C7) + (v288 ^ 0x7FCFFFFF) + ((2 * v288) & 0xFF9FFFFF) + 167719209;
  unsigned int v290 = v289 - 539127609 - ((2 * v289) & 0xBFBB218E);
  LODWORD(STACK[0x1BAC]) = v276;
  unsigned int v291 = v290 ^ 0xDFDD90C7;
  unsigned int v292 = ((((v290 ^ 0xDFDD90C7) - 1991769739) ^ 0x5E3BF62A)
        - 1580987946
        + ((2 * ((v290 ^ 0xDFDD90C7) - 1991769739)) & 0xBC77EC54))
       * (v290 ^ 0xDFDD90C7);
  unsigned int v293 = ((((v286 ^ 0xDFDD90C7) - 979017405) ^ 0xDEFBF0BF)
        + 553914177
        + ((2 * ((v286 ^ 0xDFDD90C7) - 979017405)) & 0xBDF7E17E))
       * (v286 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1D30]) = v284;
  unsigned int v294 = (v282 ^ 0xDFDD90C7) + (v293 ^ 0x6F2DFBA7) + ((2 * v293) & 0xDE5BF74E) - 1092070678;
  unsigned int v295 = v294 - 539127609 - ((2 * v294) & 0xBFBB218E);
  unsigned int v296 = (v286 ^ 0xDFDD90C7) + (v292 ^ 0x5FBB7F3D) + ((2 * v292) & 0xBF76FE7A) - 1059855272;
  unsigned int v297 = v296 - 539127609 - ((2 * v296) & 0xBFBB218E);
  unsigned int v298 = (v284 ^ 0xDFDD90C7) + (v287 ^ 0x6EBEDDBC) + ((2 * v287) & 0xDD7DBB78) + 912601207;
  unsigned int v299 = v298 - 539127609 - ((2 * v298) & 0xBFBB218E);
  unsigned int v300 = ((((v295 ^ 0xDFDD90C7) + 1139318838) ^ 0x9E7F3FD5)
        + 1635827755
        + ((2 * ((v295 ^ 0xDFDD90C7) + 1139318838)) & 0x3CFE7FAA))
       * (v295 ^ 0xDFDD90C7);
  LODWORD(STACK[0xAC8]) = v286;
  unsigned int v301 = ((((v299 ^ 0xDFDD90C7) + 276784180) ^ 0x1F5B57DF)
        - 526079967
        + ((2 * ((v299 ^ 0xDFDD90C7) + 276784180)) & 0x3EB6AFBE))
       * (v299 ^ 0xDFDD90C7);
  unsigned int v302 = ((((v297 ^ 0xDFDD90C7) + 1191749206) ^ 0x3BFD37F3)
        - 1006450675
        + ((2 * ((v297 ^ 0xDFDD90C7) + 1191749206)) & 0x77FA6FE6))
       * (v297 ^ 0xDFDD90C7);
  LODWORD(STACK[0xC4C]) = v290;
  LODWORD(STACK[0xF54]) = v295;
  unsigned int v303 = (v295 ^ 0xDFDD90C7) + (v302 ^ 0xFFFF3D7F) + ((2 * v302) & 0xFFFE7AFE) - 1929747104;
  unsigned int v304 = v303 - 539127609 - ((2 * v303) & 0xBFBB218E);
  unsigned int v305 = (v299 ^ 0xDFDD90C7) + (v300 ^ 0xF79FFF91) + ((2 * v300) & 0xEF3FFF22) + 292411317;
  unsigned int v306 = v305 - 539127609 - ((2 * v305) & 0xBFBB218E);
  unsigned int v307 = v291 + (v301 ^ 0x6FAED7FE) + ((2 * v301) & 0xDF5DAFFC) - 188181353;
  unsigned int v308 = v307 - 539127609 - ((2 * v307) & 0xBFBB218E);
  unsigned int v309 = v304 ^ 0xDFDD90C7;
  unsigned int v310 = v308 ^ 0xDFDD90C7;
  LODWORD(v19) = ((((v308 ^ 0xDFDD90C7) - 1438325955) ^ 0x6F6DEDDA)
                - 1869475290
                + ((2 * ((v308 ^ 0xDFDD90C7) - 1438325955)) & 0xDEDBDBB4))
               * (v308 ^ 0xDFDD90C7);
  LODWORD(v19) = (v297 ^ 0xDFDD90C7) + (v19 ^ 0xC7FEF3FB) + ((2 * v19) & 0x8FFDE7F6) + 482670452;
  LODWORD(v19) = v19 - 539127609 - ((2 * v19) & 0xBFBB218E);
  LODWORD(STACK[0xDD0]) = v299;
  LODWORD(STACK[0x10D8]) = v297;
  unsigned int v311 = ((((v19 ^ 0xDFDD90C7) - 638075184) ^ 0x731FDF7B)
        - 1931468667
        + ((2 * ((v19 ^ 0xDFDD90C7) - 638075184)) & 0xE63FBEF6))
       * (v19 ^ 0xDFDD90C7);
  unsigned int v312 = ((((v304 ^ 0xDFDD90C7) + 887327061) ^ 0x5EBEDAA4)
        - 1589566116
        + ((2 * ((v304 ^ 0xDFDD90C7) + 887327061)) & 0xBD7DB548))
       * (v304 ^ 0xDFDD90C7);
  LODWORD(STACK[0x125C]) = v308;
  unsigned int v313 = ((((v306 ^ 0xDFDD90C7) + 1574679164) ^ 0x1FFDDEB4)
        - 536731316
        + ((2 * ((v306 ^ 0xDFDD90C7) + 1574679164)) & 0x3FFBBD68))
       * (v306 ^ 0xDFDD90C7);
  unsigned int v314 = v310 + (v313 ^ 0x5F7D9F6F) + ((2 * v313) & 0xBEFB3EDE) - 500082157;
  unsigned int v315 = v314 - 539127609 - ((2 * v314) & 0xBFBB218E);
  LODWORD(STACK[0x1564]) = v304;
  unsigned int v316 = (v306 ^ 0xDFDD90C7) + (v312 ^ 0x5DED37E1) + ((2 * v312) & 0xBBDA6FC2) + 1295908835;
  unsigned int v317 = v316 - 539127609 - ((2 * v316) & 0xBFBB218E);
  int v318 = v309 + (v311 ^ 0x176EF6F1) + ((2 * v311) & 0x2EDDEDE2) - 1417390524;
  unsigned int v319 = v318 - 539127609 - ((2 * v318) & 0xBFBB218E);
  unsigned int v320 = ((((v315 ^ 0xDFDD90C7) + 1613576073) ^ 0x7DFF77FB)
        - 2113894395
        + ((2 * ((v315 ^ 0xDFDD90C7) + 1613576073)) & 0xFBFEEFF6))
       * (v315 ^ 0xDFDD90C7);
  unsigned int v321 = ((((v317 ^ 0xDFDD90C7) - 982741109) ^ 0x59FBFDFF)
        - 1509686783
        + ((2 * ((v317 ^ 0xDFDD90C7) - 982741109)) & 0xB3F7FBFE))
       * (v317 ^ 0xDFDD90C7);
  LODWORD(STACK[0x16E8]) = v19;
  LODWORD(STACK[0x13E0]) = v306;
  unsigned int v322 = (v315 ^ 0xDFDD90C7) + (v321 ^ 0x3B7BFC3F) + ((2 * v321) & 0x76F7F87E) - 1742908493;
  unsigned int v323 = v322 - 539127609 - ((2 * v322) & 0xBFBB218E);
  unsigned int v324 = (v19 ^ 0xDFDD90C7) + (v320 ^ 0x6FABDDF9) + ((2 * v320) & 0xDF57BBF2) - 1873534457;
  unsigned int v325 = ((2 * v324) & 0x7FEFBFFE) + (v324 ^ 0xBFF7DFFF);
  unsigned int v326 = v325 - ((2 * v325 - 729603958) & 0xBFBB218E) + 1243554060;
  unsigned int v327 = v323 ^ 0xDFDD90C7;
  LODWORD(STACK[0x944]) = v282;
  LODWORD(STACK[0x90C]) = v323;
  unsigned int v328 = ((((v323 ^ 0xDFDD90C7) - 1563902107) ^ 0xAF6DBDFE)
        + 1351762434
        + ((2 * ((v323 ^ 0xDFDD90C7) - 1563902107)) & 0x5EDB7BFC))
       * (v323 ^ 0xDFDD90C7);
  LODWORD(STACK[0x186C]) = v315;
  unsigned int v329 = (v328 ^ 0xDBF5FF7F) + ((2 * v328) & 0xB7EBFEFE) - 748527003 + (v326 ^ 0xDFDD90C7);
  unsigned int v330 = v329 - 539127609 - ((2 * v329) & 0xBFBB218E);
  unsigned int v331 = ((((v319 ^ 0xDFDD90C7) + 24266156) ^ 0x7F6FB7FF)
        - 2138028031
        + ((2 * ((v319 ^ 0xDFDD90C7) + 24266156)) & 0xFEDF6FFE))
       * (v319 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1B74]) = v319;
  unsigned int v332 = (v319 ^ 0xDFDD90C7)
       + (((v326 ^ 0xDFDD90C7) * (v325 - 989072712)) ^ 0x3FBF5EFD)
       + ((2 * (v326 ^ 0xDFDD90C7) * (v325 - 989072712)) & 0x7F7EBDFA)
       - 612237919;
  unsigned int v333 = v332 - 539127609 - ((2 * v332) & 0xBFBB218E);
  LODWORD(STACK[0x1CF8]) = v326;
  LODWORD(STACK[0x19F0]) = v317;
  unsigned int v334 = (v317 ^ 0xDFDD90C7) + (v331 ^ 0x7DDF77CD) + ((2 * v331) & 0xFBBEEF9A) - 1573693862;
  unsigned int v335 = v334 - 539127609 - ((2 * v334) & 0xBFBB218E);
  unsigned int v336 = v335 ^ 0xDFDD90C7;
  unsigned int v337 = v330 ^ 0xDFDD90C7;
  unsigned int v338 = ((((v335 ^ 0xDFDD90C7) + 1632780830) ^ 0x7FFDFDF7)
        - 2147352055
        + ((2 * ((v335 ^ 0xDFDD90C7) + 1632780830)) & 0xFFFBFBEE))
       * (v335 ^ 0xDFDD90C7);
  unsigned int v339 = ((((v330 ^ 0xDFDD90C7) - 833715648) ^ 0xA3FBEEFE)
        + 1543770370
        + ((2 * ((v330 ^ 0xDFDD90C7) - 833715648)) & 0x47F7DDFC))
       * (v330 ^ 0xDFDD90C7);
  LODWORD(v19) = v333 ^ 0xDFDD90C7;
  unsigned int v340 = (v333 ^ 0xDFDD90C7) + 1602764768;
  LODWORD(STACK[0xC14]) = v333;
  LODWORD(STACK[0xA90]) = v335;
  unsigned int v341 = v327 + (v338 ^ 0x57B559FD) + ((2 * v338) & 0xAF6AB3FA) + 29650802;
  unsigned int v342 = v341 - 539127609 - ((2 * v341) & 0xBFBB218E);
  unsigned int v343 = v19 + (v339 ^ 0x9FFEFBEC) + ((2 * v339) & 0x3FFDF7D8) + 1863869839;
  unsigned int v344 = v343 - 539127609 - ((2 * v343) & 0xBFBB218E);
  unsigned int v345 = ((v340 ^ 0xFEA7FABE) + 22545730 + ((2 * v340) & 0xFD4FF57C)) * v19;
  LODWORD(STACK[0xD98]) = v330;
  int v346 = v336 + (v345 ^ 0x1BF65FBF) + ((2 * v345) & 0x37ECBF7E) + 1120156650;
  unsigned int v347 = v346 - 539127609 - ((2 * v346) & 0xBFBB218E);
  unsigned int v348 = ((((v342 ^ 0xDFDD90C7) - 862877015) ^ 0xBDF95939)
        + 1107732167
        + ((2 * ((v342 ^ 0xDFDD90C7) - 862877015)) & 0x7BF2B272))
       * (v342 ^ 0xDFDD90C7);
  unsigned int v349 = v344 ^ 0xDFDD90C7;
  unsigned int v350 = ((((v344 ^ 0xDFDD90C7) + 247930638) ^ 0x6DFBEFEF)
        - 1845227503
        + ((2 * ((v344 ^ 0xDFDD90C7) + 247930638)) & 0xDBF7DFDE))
       * (v344 ^ 0xDFDD90C7);
  LODWORD(v19) = v347 ^ 0xDFDD90C7;
  unsigned int v351 = v337 + (v348 ^ 0x7DFD7F7C) + ((2 * v348) & 0xFBFAFEF8) + 304415201;
  unsigned int v352 = v351 - 539127609 - ((2 * v351) & 0xBFBB218E);
  unsigned int v353 = ((((v347 ^ 0xDFDD90C7) + 29657148) ^ 0x4EFDDFFE)
        - 1325260798
        + ((2 * ((v347 ^ 0xDFDD90C7) + 29657148)) & 0x9DFBBFFC))
       * (v347 ^ 0xDFDD90C7);
  unsigned int v354 = v352 ^ 0xDFDD90C7;
  LODWORD(STACK[0x1224]) = v344;
  LODWORD(STACK[0xF1C]) = v342;
  unsigned int v355 = (v342 ^ 0xDFDD90C7) + (v353 ^ 0x3AFFD97F) + ((2 * v353) & 0x75FFB2FE) - 420913110;
  unsigned int v356 = v355 - 539127609 - ((2 * v355) & 0xBFBB218E);
  unsigned int v357 = v356 ^ 0xDFDD90C7;
  unsigned int v358 = (v356 ^ 0xDFDD90C7) - 91915878;
  LODWORD(STACK[0x152C]) = v356;
  unsigned int v359 = ((((v352 ^ 0xDFDD90C7) + 873602273) ^ 0xF5FEDF7C)
        + 167846020
        + ((2 * ((v352 ^ 0xDFDD90C7) + 873602273)) & 0xEBFDBEF8))
       * (v352 ^ 0xDFDD90C7);
  LODWORD(STACK[0x10A0]) = v347;
  unsigned int v360 = ((v358 ^ 0x6C9C7A12) - 1822194194 + ((2 * v358) & 0xD938F424)) * v357;
  LODWORD(STACK[0x13A8]) = v352;
  unsigned int v361 = v19 + (v350 ^ 0xD7F7AB7B) + ((2 * v350) & 0xAFEF56F6) - 1956535711;
  unsigned int v362 = v361 - 539127609 - ((2 * v361) & 0xBFBB218E);
  unsigned int v363 = ((((v362 ^ 0xDFDD90C7) + 536294654) ^ 0xEA7BB54B)
        + 360991413
        + ((2 * ((v362 ^ 0xDFDD90C7) + 536294654)) & 0xD4F76A96))
       * (v362 ^ 0xDFDD90C7);
  unsigned int v364 = v349 + (v359 ^ 0x6DDFB73B) + ((2 * v359) & 0xDBBF6E76) - 291396532;
  unsigned int v365 = v364 - 539127609 - ((2 * v364) & 0xBFBB218E);
  unsigned int v366 = v354 + (v360 ^ 0x8DC3BDFF) + ((2 * v360) & 0x1B877BFE) + 1932097164;
  unsigned int v367 = v366 - 539127609 - ((2 * v366) & 0xBFBB218E);
  LODWORD(STACK[0x1834]) = v365;
  v365 ^= 0xDFDD90C7;
  LODWORD(STACK[0x16B0]) = v362;
  unsigned int v368 = v357 + (v363 ^ 0x7DE75BAD) + ((2 * v363) & 0xFBCEB75A) + 344022667;
  unsigned int v369 = v368 - 539127609 - ((2 * v368) & 0xBFBB218E);
  unsigned int v370 = ((((v367 ^ 0xDFDD90C7) - 646577300) ^ 0x7FFFBEF7)
        - 2147470963
        + ((2 * ((v367 ^ 0xDFDD90C7) - 646577300)) & 0xFFFF7DEE)
        + 3964)
       * (v367 ^ 0xDFDD90C7);
  LODWORD(v19) = ((((v369 ^ 0xDFDD90C7) - 147545505) ^ 0x7BFFB9F3)
                - 2080356851
                + ((2 * ((v369 ^ 0xDFDD90C7) - 147545505)) & 0xF7FF73E6))
               * (v369 ^ 0xDFDD90C7);
  unsigned int v371 = v365 + (v370 ^ 0x7F62AFA6) + ((2 * v370) & 0xFEC55F4C) + 1582008236;
  unsigned int v372 = (((v365 - 1434580277) ^ 0xEFBFF5DE) + 272632354 + ((2 * (v365 - 1434580277)) & 0xDF7FEBBC)) * v365;
  unsigned int v373 = (v362 ^ 0xDFDD90C7) + (v372 ^ 0xEFBDDFF1) + ((2 * v372) & 0xDF7BBFE2) + 1300484071;
  unsigned int v374 = v373 - 539127609 - ((2 * v373) & 0xBFBB218E);
  LODWORD(STACK[0x1CC0]) = v374;
  unsigned int v375 = (v367 ^ 0xDFDD90C7) + (v19 ^ 0xDFF1BD7F) + ((2 * v19) & 0xBFE37AFE) + 60047022;
  LODWORD(STACK[0x19B8]) = v367;
  LODWORD(STACK[0xA58]) = v375 - 539127609 - ((2 * v375) & 0xBFBB218E);
  unsigned int v376 = ((((v374 ^ 0xDFDD90C7) - 889553716) ^ 0x9FE277DE)
        + 1612548130
        + ((2 * ((v374 ^ 0xDFDD90C7) - 889553716)) & 0x3FC4EFBC))
       * (v374 ^ 0xDFDD90C7);
  LODWORD(STACK[0x1E44]) = v371 - 539127609 - ((2 * v371) & 0xBFBB218E);
  LODWORD(STACK[0xBDC]) = (v369 ^ 0xDFDD90C7)
                        + (v376 ^ 0x76D8E7F3)
                        + ((2 * v376) & 0xEDB1CFE6)
                        - 757632242
                        - ((2 * ((v369 ^ 0xDFDD90C7) + (v376 ^ 0x76D8E7F3) + ((2 * v376) & 0xEDB1CFE6) - 218504633)) & 0xBFBB218E);
  LODWORD(STACK[0x1B3C]) = v369;
  BOOL v377 = (a15 + 951796224) < 0x6AF57513 || (a15 + 951796224) > 0x6AF57514;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((238 * !v377) ^ (v383 + 663))))(1794471187);
}

void sub_10010E2A8()
{
}

uint64_t sub_10010E2B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned char *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v67 = v66 ^ 0x1CDu;
  LOBYTE(STACK[0x3B5]) = (v63 >> (v66 ^ 0xD1)) ^ 0x15;
  LOBYTE(STACK[0x562]) = BYTE2(v64) ^ 0xE4;
  LOBYTE(STACK[0x747]) = HIBYTE(v63) ^ 0x20;
  LOBYTE(STACK[0x399]) = BYTE1(v64) ^ 0xE6;
  LOBYTE(STACK[0x57E]) = BYTE2(v63) ^ 0xED;
  LOBYTE(STACK[0x72B]) = HIBYTE(v64) ^ 0xA8;
  LOBYTE(STACK[0x208]) = a4 ^ 0x6B;
  LOBYTE(STACK[0x77F]) = HIBYTE(v62) ^ 0xB9;
  LOBYTE(STACK[0x224]) = v62 ^ 0x5F;
  LOBYTE(STACK[0x3D1]) = BYTE1(a4) ^ 0xE8;
  LOBYTE(STACK[0x59A]) = BYTE2(a4) ^ 0x64;
  LOBYTE(STACK[0x3ED]) = BYTE1(v62) ^ 0x26;
  LOBYTE(STACK[0x763]) = HIBYTE(a4) ^ 0x18;
  LOBYTE(STACK[0x5B6]) = BYTE2(v62) ^ 0x9B;
  uint64_t v68 = (HIDWORD(a12) - 1983278700);
  BOOL v69 = v68 < 0xA2188F6E;
  unsigned int v70 = (a5 ^ 0xBB0EFD53)
      - 838698623
      * (((2 * (((v66 ^ 0x1CD) + 605) ^ 0x3D ^ *a20)) & 0x1DE)
       + (((v66 ^ 0xCD) + 93) ^ 0x3D ^ *a20 ^ 0x3F7967EF))
      + 2144643473;
  unsigned int v71 = ((2 * v70) & 0xFDDFED7A) + (v70 ^ 0x7EEFF6BD);
  unsigned int v72 = (v71 - 2129655485) % 0x101;
  int v73 = a4 ^ v65;
  unsigned int v74 = v73
      + (((v61 ^ 0xCE93D11D) - 2129655485 + v71 + 1) ^ 0x7FFB73E7)
      + ((2 * ((v61 ^ 0xCE93D11D) - 2129655485 + v71 + 1)) & 0xFFF6E7CE)
      - 2147185639;
  unsigned int v75 = ((2 * v72) & 0x3CE) + (v72 ^ 0xAFF7E9E7) + (v74 ^ 0x3D4B6FFF) + ((2 * v74) & 0x7A96DFFE);
  unsigned int v76 = v75 - ((2 * v75 + 628706356) & 0xD2A81886) + 2081469021;
  int v77 = v76 ^ v62;
  unsigned int v78 = (v77 ^ 0xF6457E31) + 1;
  unsigned int v79 = v78 + v73 - ((2 * (v78 + v73)) & 0xEA8CAC5E) + 1967543855;
  unsigned int v80 = v78 + (v61 ^ 0x316C2EE2) - ((2 * (v78 + (v61 ^ 0x316C2EE2))) & 0xC2600664) - 516947150;
  unsigned int v81 = (v80 ^ v77 ^ 0xE88A82FC) + 644140058;
  int v82 = v81 ^ 0x5EFFF277;
  unsigned int v83 = (2 * v81) & 0xBDFFE4EE;
  if (v68 >= 0xA2188F6E) {
    BOOL v69 = v68 > 0xA2188F6F;
  }
  unsigned int v84 = v76 ^ 0xFC6DEBDD;
  unsigned int v85 = ((v84 + v82 + v83 - 1593832055) ^ 0x7DBD176F)
      + (v79 ^ 0x8AB9A9D0)
      + ((2 * (v84 + v82 + v83 - 1593832055)) & 0xFB7A2EDE);
  unsigned int v86 = v85 - ((2 * v85 + 75878692) & 0xFDF3E32C) + 20765224;
  int v87 = v86 ^ v79;
  int v88 = v86 ^ v80;
  v86 ^= 0x7EF9F196u;
  int v89 = v86 + v84 + 200486236 - ((2 * (v86 + v84)) & 0x17E65AB8);
  unsigned int v90 = (((v87 ^ 0xBBFA7B9) + v86) ^ 0x65DBF85F) + (v88 ^ 0x60360D5B) + ((2 * ((v87 ^ 0xBBFA7B9) + v86)) & 0xCBB7F0BE);
  unsigned int v91 = v89 ^ 0x718DB978 ^ (v90 - ((2 * v90 + 877137732) & 0xF4FD2848) + 346201030);
  unsigned int v92 = v91 - ((2 * v91 - 1717201034) & 0xC933FD9A) + 829213320;
  int v93 = v92 ^ v87;
  unsigned int v94 = (((v92 ^ 0xE499FECD) + (v89 ^ 0xBF32D5C)) ^ 0xF0420046)
      - ((2 * ((v92 ^ 0xE499FECD) + (v89 ^ 0xBF32D5C))) & 0x1F7BFF72)
      + 264110010
      + (v93 ^ 0x3E55F95B ^ ((v92 ^ 0xE499FECD)
                           + (v92 ^ v88 ^ 0x84AFF396)
                           + 1
                           - ((2 * ((v92 ^ 0xE499FECD) + (v92 ^ v88 ^ 0x84AFF396) + 1)) & 0xA2E7405E)
                           - 780951505));
  uint64_t v95 = ((2 * v94) & 0xE6FCEBFC)
      + (v94 ^ 0xF37E75FE)
      - ((2 * (((2 * v94) & 0xE6FCEBFC) + (v94 ^ 0xF37E75FE)) + 1846959000) & 0x761DFAA6)
      - 233166049;
  uint64_t v96 = v95 ^ v93;
  unsigned int v97 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)((11 * v69) | v67));
  return v97(1846959000, 2165311811, v97, v96, v95, 200486236, v67, v68, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

void sub_10010E834()
{
}

uint64_t sub_10010E83C@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LOBYTE(STACK[0x25C]) = v8 ^ 0x76;
  LOBYTE(STACK[0x425]) = BYTE1(v8) ^ 0xBD;
  LOBYTE(STACK[0x79B]) = HIBYTE(a2) ^ 0xF7;
  LOBYTE(STACK[0x5EE]) = BYTE2(v8) ^ 0x12;
  LOBYTE(STACK[0x5D2]) = BYTE2(a2) ^ 0x42;
  LOBYTE(STACK[0x240]) = a2 ^ 0x1F;
  LOBYTE(STACK[0x409]) = BYTE1(a2) ^ 0xB1;
  LOBYTE(STACK[0x278]) = a1 ^ 0x6B;
  LOBYTE(STACK[0x60A]) = BYTE2(a1) ^ 0x64;
  LOBYTE(STACK[0x626]) = BYTE2(v7) ^ 0x9B;
  LOBYTE(STACK[0x45D]) = BYTE1(v7) ^ 0x26;
  LOBYTE(STACK[0x7B7]) = HIBYTE(v8) ^ 0x8C;
  LOBYTE(STACK[0x7D3]) = HIBYTE(a1) ^ 0x18;
  LOBYTE(STACK[0x294]) = v7 ^ 0x5F;
  LOBYTE(STACK[0x441]) = BYTE1(a1) ^ 0xE8;
  LOBYTE(STACK[0x7EF]) = HIBYTE(v7) ^ 0xB9;
  BOOL v9 = (a7 + 1179059730) < 0x8AC38E3F;
  if ((a7 + 1179059730) >= 0x8AC38E3F) {
    BOOL v9 = (a7 + 1179059730) > 0x8AC38E40;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((11 * !v9) ^ a3)))();
}

void sub_10010EDC0()
{
}

uint64_t sub_10010EDC8(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  LOBYTE(STACK[0x479]) = BYTE1(a3) ^ 0x7F;
  LOBYTE(STACK[0x80B]) = HIBYTE(a3) ^ 0xD3;
  LOBYTE(STACK[0x2CC]) = v11 ^ 0xAE;
  LOBYTE(STACK[0x2E8]) = a4 ^ 0x6B;
  LOBYTE(STACK[0x4B1]) = BYTE1(a4) ^ 0xE8;
  LOBYTE(STACK[0x827]) = HIBYTE(v11) ^ 0x7D;
  LOBYTE(STACK[0x495]) = BYTE1(v11) ^ 0x62;
  LOBYTE(STACK[0x65E]) = BYTE2(v11) ^ 0x20;
  LOBYTE(STACK[0x67A]) = BYTE2(a4) ^ 0x64;
  LOBYTE(STACK[0x304]) = a2 ^ 0x2E;
  LOBYTE(STACK[0x642]) = BYTE2(a3) ^ 0xCE;
  LOBYTE(STACK[0x696]) = BYTE2(a2) ^ 0xF0;
  LOBYTE(STACK[0x843]) = HIBYTE(a4) ^ 0x18;
  unsigned int v13 = (((a3 & 0xFFFFFFCA ^ 0x7F) - (((a3 & 0xFFFFFFCA ^ 0x7F) << (107 * (v12 ^ 0x44) + 16)) & 0x52) + 41) ^ 0x29) & (((a3 & 0x35 ^ 0xFFFFFFCE) + ((2 * a3) & 0x40 ^ 0xFFFFFFFB) + 35) ^ 0x22);
  LOBYTE(STACK[0x2B0]) = v13 - ((2 * v13) & 0x99) + 76;
  LOBYTE(STACK[0x85F]) = HIBYTE(a2) ^ 0x92;
  LOBYTE(STACK[0x4CD]) = BYTE1(a2) ^ 0x46;
  BOOL v14 = (a11 - 945279046) < 0xCA228376 || (a11 - 945279046) > 0xCA228377;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((4071 * v14) ^ (107 * (v12 ^ 0x444)))))(92732);
}

void sub_10010F3FC()
{
}

uint64_t sub_10010F414@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,unsigned __int8 a60)
{
  LOBYTE(STACK[0x33C]) = v61 ^ 0xAE;
  LOBYTE(STACK[0x320]) = a1 ^ 0x1F;
  LOBYTE(STACK[0x897]) = HIBYTE(v61) ^ 0x7D;
  LOBYTE(STACK[0x4E9]) = BYTE1(a1) ^ 0xD7;
  LOBYTE(STACK[0x6EA]) = BYTE2(v60) ^ 0xE;
  LOBYTE(STACK[0x6CE]) = BYTE2(v61) ^ 0x20;
  LOBYTE(STACK[0x87B]) = HIBYTE(a1) ^ 0xF9;
  LOBYTE(STACK[0x374]) = v62 ^ 0x5F;
  LOBYTE(STACK[0x505]) = BYTE1(v61) ^ 0x62;
  LOBYTE(STACK[0x358]) = v60 ^ 0x57;
  LOBYTE(STACK[0x8B3]) = HIBYTE(v60) ^ 0x31;
  LOBYTE(STACK[0x706]) = BYTE2(v62) ^ 0x9B;
  LOBYTE(STACK[0x6B2]) = BYTE2(a1) ^ 0x6F;
  LOBYTE(STACK[0x53D]) = BYTE1(v62) ^ 0x26;
  LOBYTE(STACK[0x8CF]) = HIBYTE(v62) ^ 0xB9;
  LOBYTE(STACK[0x521]) = BYTE1(v60) ^ 0x11;
  HIDWORD(a48) = -153104523;
  int v64 = v63 - 471;
  int v65 = -1490100004 - 1487347361 * (((2 * (a60 ^ 0x4C)) & 0x1F4) + ((v64 - 1255) ^ 0x7CBAA6C9 ^ a60 ^ 0x4C));
  unsigned int v66 = v65
      - 418090588
      + (((v65 + 738185089) % 0x101u) ^ 0xDFFE7FDD)
      + ((2 * ((v65 + 738185089) % 0x101u)) & 0x3BA)
      + 1275154340;
  unsigned int v67 = (v66 ^ 0xABDBDB8C) + 621096836 + ((2 * v66) & 0x57B7B718) + 1411654772;
  unsigned int v68 = ((v67 - ((2 * v67) & 0xD31285E4) - 376880398) ^ 0xABAFED5C) - 1738420157;
  unsigned int v69 = (v68 ^ 0x97F72DEE) + 1597240168 + ((2 * v68) & 0x2FEE5BDC) + 1;
  unsigned int v70 = ((v69 - ((2 * v69 - 1040228622) & 0xCE202FE6) - 938490004) ^ 0x363C8A30) + 882052842;
  unsigned int v71 = ((v70 - ((2 * v70 + 1862799942) & 0x4677D98C) - 624953879) ^ 0xE36AABA7) - 35086739;
  unsigned int v72 = (v71 - ((2 * v71) & 0x7AA0A172) + 1028673721) ^ 0xC7F1901B;
  int v73 = v72 - 2 * ((v72 + 774899216) & 0x21B03EFF ^ v72 & 9) + 266355974;
  int v74 = (v73 ^ 0x5E4FC109) + 1529235676 - ((2 * ((v73 ^ 0x5E4FC109) + 644941651)) & 0x696A8312);
  int v75 = (v73 ^ 0x5E4FC109) + 621096837;
  unsigned int v76 = v75 ^ 0xAFDBFDFB;
  int v77 = (2 * v75) & 0x5FB7FBF6;
  unsigned int v78 = v73 ^ 0xA3C9B81B;
  int v79 = (v73 ^ 0x5E4FC109) - 982631084 - ((2 * ((v73 ^ 0x5E4FC109) + 1117723493)) & 0x59E43DE);
  unsigned int v80 = ((2 * ((v73 ^ 0xA1B03EF6) - 1068415135)) & 0xB9FFF7F2) + (((v73 ^ 0xA1B03EF6) - 1068415135) ^ 0xDCFFFBF9);
  unsigned int v81 = v73 ^ 0xE3969158;
  unsigned int v82 = (v73 ^ 0xE3969158) + (v73 ^ 0xA1B03EF6);
  unsigned int v83 = v82 ^ 0xDFEFA784;
  unsigned int v84 = (2 * v82) & 0xBFDF4F08;
  unsigned int v85 = v76 + 1344537093 + v77;
  int v86 = v73 ^ 0x46A44F52;
  unsigned int v87 = (v74 ^ 0x34B54189)
      + (((v73 ^ 0x68CDA45D) + v85) ^ 0xF75BFF7B)
      + ((2 * ((v73 ^ 0x68CDA45D) + v85)) & 0xEEB7FEF6)
      + 144965765;
  unsigned int v88 = ((v86 + v83 + v84 + 537942140) ^ 0x7FFFCFFF)
      + ((2 * (v86 + v83 + v84 + 537942140)) & 0xFFFF9FFF)
      + (v87 ^ 0x663A2040)
      - ((2 * v87) & 0x338BBF7E);
  int v89 = v73 ^ 0x5C92D97;
  unsigned int v90 = v73 ^ 0xB7E81C6B;
  int v91 = (v73 ^ 0x5E4FC109) + 1009116781 - ((2 * ((v73 ^ 0x5E4FC109) + 1009116781) + 59076610) & 0x7933D35C) + 2119999919;
  int v92 = v73 ^ 0x4465DC7;
  int v93 = (v73 ^ 0x5E4FC109) - 1738420156 - ((2 * ((v73 ^ 0x5E4FC109) - 1738420156)) & 0x953D518) - 2069239156;
  unsigned int v94 = (v73 ^ 0xA1B03EF6) + 334030835 - ((2 * ((v73 ^ 0xA1B03EF6) + 334030835)) & 0x2B3A77D4) - 1784857622;
  unsigned int v95 = (((v73 ^ 0xA1B03EF6) - 179867185) ^ 0x262DF4AF)
      - 640545967
      + ((2 * ((v73 ^ 0xA1B03EF6) - 179867185)) & 0x4C5BE95E);
  unsigned int v96 = (v93 ^ 0x84DA3031 ^ (v88 + 1 - 2 * ((v88 + 4591553) & 0x73DABF ^ (v88 + 1) & 2) + 440003197)) + v95;
  unsigned int v97 = (v73 ^ 0x86FFFFD8) + (v79 ^ 0x8B48E815 ^ (v96 - ((2 * v96) & 0x130F93F4) + 159894010)) + 1;
  v73 ^= 0xE5C010FB;
  unsigned int v98 = v73 + (v97 ^ 0xDBD0B79B) + ((2 * v97) & 0xB7A16F36) + 607078501;
  unsigned int v99 = (v90 ^ v94 ^ 0x483ECD86 ^ (v98 - ((2 * v98) & 0xC2EB3DC) - 2045290002)) - v80;
  unsigned int v100 = (v89 ^ 0xA1272C3C) + (v91 ^ 0x98F3D8E0 ^ (v99 - ((2 * v99 + 973076466) & 0x48D4629C) + 23735623)) + 1;
  unsigned int v101 = ((2 * v100) & 0x39FA63F4)
       + (v100 ^ 0x1CFD31FA)
       - ((2 * (((2 * v100) & 0x39FA63F4) + (v100 ^ 0x1CFD31FA)) - 2100788744) & 0xDD81DDE2)
       - 1339740179;
  unsigned int v102 = (v101 ^ 0xEEC0EEF1) + v73 - 423650434 - ((2 * ((v101 ^ 0xEEC0EEF1) + v73)) & 0xCD7F4342) + 1571;
  unsigned int v103 = ((2 * ((v101 ^ 0xEEC0EEF1) + (v79 ^ 0x82CF21EF))) & 0xFEBE7F8E)
       + (((v101 ^ 0xEEC0EEF1) + (v79 ^ 0x82CF21EF)) ^ 0x7F5F3FC7);
  int v104 = v101 ^ v90;
  int v105 = v101 ^ v94;
  int v106 = v101 ^ v89;
  unsigned int v107 = (v101 ^ 0xEEC0EEF1) + v86 - ((2 * ((v101 ^ 0xEEC0EEF1) + v86)) & 0xF3A80CCE) - 103545241;
  unsigned int v108 = ((2 * ((v101 ^ 0xEEC0EEF1) + (v91 ^ 0xBC99E9AE))) & 0x3B5DFFF0)
       + (((v101 ^ 0xEEC0EEF1) + (v91 ^ 0xBC99E9AE)) ^ 0x9DAEFFF8);
  unsigned int v109 = ((2 * ((v101 ^ 0xEEC0EEF1) + v95)) & 0xBFB374F6) + (((v101 ^ 0xEEC0EEF1) + v95) ^ 0xDFD9BA7B);
  int v110 = v101 ^ v78;
  unsigned int v111 = v81 + (v101 ^ 0x113F110E) - 74149442 - ((2 * (v81 + (v101 ^ 0x113F110E) + 1)) & 0xF729237A);
  int v112 = v101 ^ v92;
  unsigned int v113 = (v101 ^ 0xEEC0EEF1) + v85 - 1163676313 - ((2 * ((v101 ^ 0xEEC0EEF1) + v85)) & 0x75476ACE);
  unsigned int v114 = (v101 ^ 0x113F110E) + v80 - ((2 * ((v101 ^ 0x113F110E) + v80) + 1174407184) & 0xD46B0A4A) + 221612333;
  int v115 = v93 ^ 0x6A69047D ^ v101;
  unsigned int v116 = (v101 ^ v113 ^ v107 ^ v111 ^ 0x5623CC4C) + v115;
  unsigned int v117 = v74 ^ 0xDA75AF78 ^ v101;
  unsigned int v118 = (((v110 ^ 0x25C4F2B7) + v117) ^ 0x21000301)
       - v103
       - ((2 * ((v110 ^ 0x25C4F2B7) + v117)) & 0xBDFFF9FC)
       + v109
       + (v116 ^ 0x6FFDED35)
       + ((2 * v116) & 0xDFFBDA6A)
       - 218869867;
  int v119 = (v102 ^ 0x19405E5E) + (v112 ^ 0x411E34C ^ (v118 - ((2 * v118 + 925272834) & 0x2F2EA0BA) - 1289054754)) + 1;
  unsigned int v120 = (v104 ^ 0xB5744173) + (v119 ^ 0x14EDFFF7) + ((2 * v119) & 0x29DBFFEE) - 351141879;
  unsigned int v121 = (v105 ^ v114 ^ 0x5F3B01E2 ^ (v120 - ((2 * v120) & 0x9CA6A3B8) - 833400356)) - 762027389;
  unsigned int v122 = (v106 ^ 0x4FE7C2CD) + (v121 ^ 0xF973B1D5) + ((2 * v121) & 0xF2E763AA) + 109858348;
  unsigned int v123 = ((2 * v122) & 0x6EAFBFFE) + (v122 ^ 0xB757DFFF);
  unsigned int v124 = v108 + v123 - ((2 * (v108 + v123) + 1441939474) & 0xAA531882) - 2145211318;
  unsigned int v125 = v124 ^ 0xD5298C41;
  unsigned int v126 = (v124 ^ 0xD5298C41) + (v113 ^ 0xBAA3B567);
  unsigned int v127 = ((2 * (v125 + (v111 ^ 0xFB9491BD))) & 0xEDBF9EEA) + ((v125 + (v111 ^ 0xFB9491BD)) ^ 0xF6DFCF75);
  unsigned int v128 = ((2 * (v125 + (v114 ^ 0xEA358525))) & 0xFFCFFFBE) + ((v125 + (v114 ^ 0xEA358525)) ^ 0xFFE7FFDF);
  HIDWORD(v129) = (v126 ^ 0x427C65BA) + 2;
  LODWORD(v129) = (v126 ^ 0x427C65BA) - 1115448762 + ((2 * v126) & 0x84F8CB74);
  int v130 = (v129 >> 2) - 464945152 - ((2 * (v129 >> 2)) & 0xC8931DD4) + 3818;
  HIDWORD(v129) = v130 ^ 0xEEA;
  LODWORD(v129) = v130 ^ 0xE4498000;
  int v131 = (v129 >> 12) - ((2 * (v129 >> 12)) & 0xD968B64A) + 1823759141;
  int v132 = v117 + (v124 ^ 0x2AD673BE) + 1056799591 - ((2 * (v117 + (v124 ^ 0x2AD673BE) + 1)) & 0x7DFAF6CC);
  HIDWORD(v129) = v131 ^ 0x5B25;
  LODWORD(v129) = v131 ^ 0x6CB40000;
  int v133 = (v129 >> 18) - 521627992 - ((2 * (v129 >> 18)) & 0xC1D12D50);
  unsigned int v134 = ((2 * (v125 + (v112 ^ 0x9386B311))) & 0xF3C7FFFE) + ((v125 + (v112 ^ 0x9386B311)) ^ 0xF9E3FFFF);
  uint64_t v135 = ((2 * (v124 ^ v107)) & 0xBEF0ECEE ^ 0x18F0044C) + (v124 ^ v107 ^ 0xF385FC51);
  unsigned int v136 = ((2 * (v124 ^ v102)) & 0x7FF72AEE ^ 0x67240AC0) + (v124 ^ v102 ^ 0x8C6DB897);
  int v137 = ((2 * (v124 ^ v110)) & 0x5FE8FEFE ^ 0x41C8FCEC)
       + (v124 ^ v110 ^ 0x5F190189)
       + v127
       + v135
       + (((v124 ^ 0x35C11AE9 ^ v133) + (v132 ^ 0x3EFD7B66)) ^ 0x7EDEDFF7)
       + ((2 * ((v124 ^ 0x35C11AE9 ^ v133) + (v132 ^ 0x3EFD7B66))) & 0xFDBDBFEE)
       + 1832277845;
  unsigned int v138 = ((v125 + v115 + 85648036 - ((2 * (v125 + v115)) & 0xA35C548)) ^ 0x239BE22B ^ (v137
                                                                                     - ((2 * v137 + 456918674) & 0x4D02011E)
                                                                                     - 1273035816))
       - (((2 * (v109 + 539379077 + v125)) & 0x7FFFDDDE)
        + ((v109 + 539379077 + v125) ^ 0xBFFFEEEF));
  unsigned int v139 = ((v103 - 2136948679 + v125 + 971134459 - ((2 * (v103 - 2136948679 + v125)) & 0x73C4ABF6)) ^ 0x4D639D24 ^ (v138 - ((2 * v138 + 2147474910) & 0xE90391BE) + 880916430))
       + (v104 ^ 0x605DCD32 ^ v124);
  unsigned int v140 = (v139 ^ 0x7DEA7DFD)
       - (v136
        + ((2 * (v125 + (v105 ^ 0x7B5DD51B))) & 0xDEF5FCF6)
        + ((v125 + (v105 ^ 0x7B5DD51B)) ^ 0xEF7AFE7B)
        + v134)
       + ((2 * v139) & 0xFBD4FBFA)
       + 666119464;
  unsigned int v141 = (v140 - ((2 * v140 + 125292952) & 0xB14BFA44) + 1549919726) ^ (v128 + 1572897);
  unsigned int v142 = (v124 ^ v106 ^ 0x9ACE4E8C)
       + (((v141 ^ 0x58A5FD22) + 70868885 - 2 * ((v141 ^ 0x58A5FD22) & 0x4395F9D ^ v141 & 8)) ^ 0x4395F95)
       + 1;
  unsigned int v143 = (v142 ^ 0x7FBD3F7E) + v123 + ((2 * v142) & 0xFF7A7EFC);
  unsigned int v144 = v143 - ((2 * v143 - 1848262394) & 0xD9087360) + 896473651;
  uint64_t v145 = ((2 * v144) & 0xBDBDFE8E ^ 0xB8B0180E) + (v144 ^ 0x2286F3E0);
  return ((uint64_t (*)(uint64_t, void, void, void, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + v64))(v135, v128 - v145 - 2 * ((v128 - v145 + 519503720) & 0x16D542BF ^ (v128 - v145) & 5), ((v145 - 1591672647) ^ v132 ^ 0x3EFD7B66) & 0x61D675FD, v145 + v127 - ((2 * (v145 + v127) + 1417831048) & 0xF46FB40C), v136 - v145 - ((2 * (v136 - v145) + 1036440480) & 0x8D12099A), v145, (v145 - 1591672647), v145 + v134 - ((2 * (v145 + v134) + 1316618612) & 0xB9ECC62C), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1001106C4()
{
}

uint64_t sub_1001106EC@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,int a63)
{
  LODWORD(a48) = a1;
  LODWORD(v75) = v69;
  LOBYTE(STACK[0x378]) = LOBYTE(STACK[0x3D8]) ^ LOBYTE(STACK[0x3A0]) ^ *(unsigned char *)((LODWORD(STACK[0x1200]) ^ 0x4EFBF7EE60023350)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1200]) ^ 0xDFDD90C7)) & 0x17FBF472ELL)
                                                                                - 0x718A04C23FAC9543) ^ *(unsigned char *)((LODWORD(STACK[0x1E20]) ^ 0xAF9ED33A21E95F38) + a7 + ((2 * (LODWORD(STACK[0x1E20]) ^ 0xDFDD90C7)) & 0x1FC699FFELL) + 0x2DD31FF181FE3E55) ^ 0x4C;
  LOBYTE(STACK[0x541]) = *(unsigned char *)((LODWORD(STACK[0x1384]) ^ 0xFEEDFFFE28726B10)
                                  + a7
                                  + ((2 * (LODWORD(STACK[0x1384]) ^ 0xDFDD90C7)) & 0x1EF5FF7AELL)
                                  - 0x217C0CD2777CED83) ^ LOBYTE(STACK[0x569]) ^ LOBYTE(STACK[0x5A1]) ^ *(unsigned char *)((LODWORD(STACK[0xA34]) ^ 0x7AC67DFD21AB47B1) + a7 + ((2 * (LODWORD(STACK[0xA34]) ^ 0xDFDD90C7)) & 0x1FCEDAEECLL) + 0x62AB752E81BC36DELL) ^ 0x4C;
  LOBYTE(STACK[0x70A]) = LOBYTE(STACK[0x76A]) ^ LOBYTE(STACK[0x732]) ^ *(unsigned char *)((LODWORD(STACK[0x1508]) ^ 0x1BFEFDF72C02675DLL)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1508]) ^ 0xDFDD90C7)) & 0x1E7BFEF34)
                                                                                - 0x3E8D0ACB73ACE946) ^ *(unsigned char *)((LODWORD(STACK[0xBB8]) ^ 0xDFBDE3F3622B6F0CLL) + a7 + ((2 * (LODWORD(STACK[0xBB8]) ^ 0xDFDD90C7)) & 0x17BEDFF96) - 0x24BF0C73DC3F177) ^ 0x4C;
  LOBYTE(STACK[0x8D3]) = a66 ^ *(unsigned char *)((LODWORD(STACK[0xD3C]) ^ 0xFFBBFFFF28634E3ALL)
                                        + a7
                                        + ((2 * (LODWORD(STACK[0xD3C]) ^ 0xDFDD90C7)) & 0x1EF7DBDFALL)
                                        - 0x224A0CD3778BD0A9) ^ *(unsigned char *)((LODWORD(STACK[0x168C]) ^ 0xFFFEFF7D260C6F29)
                                                                           + a7
                                                                           + ((2
                                                                             * (LODWORD(STACK[0x168C]) ^ 0xDFDD90C7)) & 0x1F3A3FFDCLL)
                                                                           - 0x228D0C51799EF19ALL) ^ LOBYTE(STACK[0x22B]) ^ 0x4C;
  LOBYTE(STACK[0x394]) = LOBYTE(STACK[0x3BC]) ^ LOBYTE(STACK[0x3F4]) ^ *(unsigned char *)((LODWORD(STACK[0x1810]) ^ 0xF3FFBFFDAC237F28)
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1810]) ^ 0xDFDD90C7)) & 0xE7FDDFDE)
                                                                                + a7
                                                                                - 0x168DCCD0F3CBE19BLL) ^ *(unsigned char *)((LODWORD(STACK[0xEC0]) ^ 0x3EFF7B952014EEA8) + a7 + ((2 * (LODWORD(STACK[0xEC0]) ^ 0xDFDD90C7)) & 0x1FF92FCDELL) - 0x618D88697F96701BLL) ^ 0x4C;
  LOBYTE(STACK[0x55D]) = LOBYTE(STACK[0x585]) ^ LOBYTE(STACK[0x5BD]) ^ *(unsigned char *)((LODWORD(STACK[0x1044]) ^ 0x6D8FF7C128026F78)
                                                                                + a7
                                                                                + ((2
                                                                                  * (LODWORD(STACK[0x1044]) ^ 0xDFDD90C7)) & 0x1EFBFFF7ELL)
                                                                                + 0x6FE1FB6A88530E95) ^ *(unsigned char *)((LODWORD(STACK[0x1994]) ^ 0x7B5E3FEA2A020D18) + a7 + ((2 * (LODWORD(STACK[0x1994]) ^ 0xDFDD90C7)) & 0x1EBBF3BBELL) + 0x6213B3418A537075) ^ 0x4C;
  LOBYTE(STACK[0x726]) = LOBYTE(STACK[0x786]) ^ *(unsigned char *)((LODWORD(STACK[0x1B18]) ^ 0x6C744FF32E227E9CLL)
                                                         + a7
                                                         + ((2 * (LODWORD(STACK[0x1B18]) ^ 0xDFDD90C7)) & 0x1E3FFDCB6)
                                                         + 0x70FDA3388E331FF9) ^ *(unsigned char *)((LODWORD(STACK[0x11C8]) ^ 0x75FF7EFB02267FE0)
                                                                                            + a7
                                                                                            + ((2
                                                                                              * (LODWORD(STACK[0x11C8]) ^ 0xDFDD90C7)) & 0x1BBF7DE4ELL)
                                                                                            + 0x67727430A2371F2DLL) ^ LOBYTE(STACK[0x74E]) ^ 0x4C;
  a65 = LOBYTE(STACK[0x20F]) ^ LOBYTE(STACK[0x247]) ^ *(unsigned char *)((LODWORD(STACK[0x134C]) ^ 0xDDBD6EFB232AEF3ELL)
                                                               + a7
                                                               + ((2 * (LODWORD(STACK[0x134C]) ^ 0xDFDD90C7)) & 0x1F9EEFFF2)
                                                               - 0x4B7BCF7CC471A5) ^ *(unsigned char *)((LODWORD(STACK[0x1C9C]) ^ 0x7D5CF1BE22A2611ALL)
                                                                                                + a7
                                                                                                + ((2
                                                                                                  * (LODWORD(STACK[0x1C9C]) ^ 0xDFDD90C7)) & 0x1FAFFE3BALL)
                                                                                                + 0x6015016D82B31C77) ^ 0x4C;
  uint64_t v70 = (v66 - 1024381804) & 0x3D0ED3BB;
  uint64_t v71 = v70 ^ 0x182;
  LOBYTE(STACK[0x388]) = 76;
  int v72 = LOBYTE(STACK[0x378]);
  if ((v71 & 0x63D7F028) == 0) {
    int v72 = 76;
  }
  LOBYTE(STACK[0x388]) = v72;
  int v73 = v72 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  LOBYTE(STACK[0x388]) = v73 ^ 0x4C;
  *(&a61 + (457 * (((2 * v73) & 0x13C) + (v73 ^ 0xB3DF3E9E)) - 428000206) % 0x708) = 76;
  HIDWORD(v75) = a2 + 1543159804;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + v66))(v70, 457, 3280372696, 2443359173, 1800, &a61, 2619871192, v71, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v75,
           __PAIR64__(v67, v68),
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_100110E7C(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = (v68 - ((2 * v68 + 1134829892) & ((a1 - 598291373) & 0x23A937EF ^ 0x7766FFE0)) + 1569033653) ^ 0x3BB37DAB;
  int v72 = *(_DWORD *)(v70 + 4 * ((((2722 * v71) & 0x77FCDFBC) + ((1361 * v71) ^ 0xBBFE6FDE) + 1143273627) % 0x12E0)) ^ 0x3BD5EEAA;
  unsigned int v73 = v72 - ((2 * v72 + 374804154) & 0x163BB3C8) - 162963135;
  int v74 = v73 ^ (v73 >> 7) ^ (v73 >> 3) ^ 0x42F29945;
  uint64_t v75 = *(uint64_t (**)(void))(v69 + 8 * ((2441 * (v68 + 1 == v67 + 256)) ^ a1));
  *(&a67 + (457 * v68 + 1610621810) % 0x708u) = byte_100286C20[(((4424 * v74) & 0x7EB3FF78)
                                                              + ((2212 * v74) ^ 0x3F59FFBEu)
                                                              - 1061099818)
                                                             % 0x97F] ^ 0x68;
  return v75();
}

uint64_t sub_100111024@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W4>, unsigned int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  uint64_t v12 = ((13 * (v8 ^ 0x580)) ^ 0xD23904F1)
      + v6 * a1
      - ((((((13 * (v8 ^ 0x580)) ^ 0xD23904F1) + v6 * a1) * (unint64_t)a4) >> 32) >> 10) * a5;
  unsigned int v13 = (((2 * (*(unsigned __int8 *)(v7 + v12) ^ 0x48)) & 0x1F4) + (*(unsigned __int8 *)(v7 + v12) ^ 0xBF6FBEB6)) * a1
      + 1099438070;
  int v14 = *(unsigned __int8 *)(v7 + v13 - (((v13 * (unint64_t)a4) >> 32) >> 10) * a5);
  unsigned int v15 = (((2 * (v14 ^ 3)) & 0xFFFFFFF7) + (v14 ^ 0x3E7FFBFC)) * v9 - 165496012;
  int v16 = *(unsigned __int8 *)(v10 + v15 - (((v15 * (unint64_t)a2) >> 32) >> 10) * a3);
  HIDWORD(v17) = v16 ^ 0x30;
  LODWORD(v17) = v16 << 24;
  unsigned int v18 = (v17 >> 31) - ((2 * (v17 >> 31)) & 0xFFFFFFEA) - 11;
  int v19 = (~(v18 >> 1) & 0x7A) + ((v18 & 0xFC) >> 2) - 61;
  unsigned int v20 = (v19 & (v18 ^ 0xFFFFFFF5)) - ((2 * (v19 & (v18 ^ 0xFFFFFFF5))) & 0x26);
  unsigned int v21 = ((v19 + (v18 ^ 0xFFFFFFF5)) ^ 0x7F)
      + 2 * (v19 + (v18 ^ 0xFFFFFFF5))
      + ((2 * v20 - 90) ^ 0xFFFFFFBF)
      + ((2 * (2 * v20 - 90)) & 0xFFFFFFCF ^ 0xFFFFFFB3)
      + 105;
  int v22 = v18 ^ 0xF4 ^ ((v21 >> 4) - ((v21 >> 3) & 0xE) + 119);
  unsigned int v23 = (((2 * v22) & 0x11E) + (v22 ^ 0x73FF18F)) * v9 + 1539525288;
  int v24 = *(unsigned __int8 *)(v10 + v23 - (((v23 * (unint64_t)a2) >> 32) >> 10) * a3);
  unsigned int v25 = (((2 * (v24 ^ 0xA)) & 0xDE) + (v24 ^ 0x77FF36F5)) * a1 - 915913191;
  int v26 = *(unsigned __int8 *)(v7 + v25 - (((v25 * (unint64_t)a4) >> 32) >> 10) * a5);
  unsigned int v27 = (((2 * (v26 ^ 0x1F)) & 0x1DA) + (v26 ^ 0x3FF75FF2)) * v9 + 1250945724;
  int v28 = *(unsigned __int8 *)(v10 + v27 - (((v27 * (unint64_t)a2) >> 32) >> 10) * a3);
  int v29 = (-97 * (v28 ^ 0x30) - (((v28 << 6) - 2 * (v28 ^ 0x30)) & 0x96) + 75) ^ 0xA7;
  unsigned int v30 = (((2 * v29) & 0x1DE) + (v29 ^ 0xE9B775EF)) * v9 - 1962536559;
  int v31 = *(unsigned __int8 *)(v10 + v30 - (((v30 * (unint64_t)a2) >> 32) >> 10) * a3);
  unsigned int v32 = 23 * (v31 ^ 0x30) - ((-2 * v31) & 8) + 4;
  int v33 = v32 ^ 9 ^ ((v32 >> 3) & 9 | 0x86);
  unsigned int v34 = (((2 * v33) & 0x1D6) + (v33 ^ 0xFBDF9FEB)) * a1 + 1573765309;
  int v35 = *(unsigned __int8 *)(v7 + v34 - (((v34 * (unint64_t)a4) >> 32) >> 10) * a5);
  *(unsigned char *)(v7
           + v6 * a1
           - 767455097
           - ((((v6 * a1 - 767455097) * (unint64_t)a4) >> 32) >> 10) * a5) = *(unsigned char *)(v7 + (((2 * (v35 ^ 4)) & 0x16E) + (v35 ^ 0x75FFDFB)) * a1 - 710403951 - (((((((2 * (v35 ^ 4)) & 0x16E) + (v35 ^ 0x75FFDFBu)) * a1 - 710403951) * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * (*(unsigned __int8 *)(v7 + v12) ^ 0x4C)) & 0xDDDDDDDD)
                + (*(unsigned __int8 *)(v7 + v12) ^ 0x2E797BA2))
               * a1
               + 153471074;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * (v12 ^ 0x55555555)) & 0xFC) + (v12 ^ 0x57FFCFAA)) * v9 - 1583144120;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3);
  HIDWORD(v17) = v12 ^ 0x30;
  LODWORD(v17) = v12 << 24;
  unsigned int v36 = ((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55);
  LODWORD(v12) = (((2 * (((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFFFFFF92) - 55) ^ (v36 >> 4) ^ (v36 >> 6) ^ 0x3C)) & 0xFC)
                + ((((v17 >> 31) - ((2 * (v17 >> 31)) & 0x92) - 55) ^ (v36 >> 4) ^ (v36 >> 6)) ^ 0x6BD43E42))
               * a1
               - 2112036014;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  LODWORD(v12) = (((2 * ~v12) & 0x1AE) + (v12 ^ 0x5DFEDB08)) * v9 - 770076048;
  LODWORD(v12) = *(unsigned __int8 *)(v10
                                    + v12
                                    - (((v12 * (unint64_t)a2) >> 32) >> 10) * a3) ^ 0x30;
  LODWORD(v12) = 23 * v12 - ((46 * v12) & 0xFFFFFFD8) + 108;
  LODWORD(v12) = v12 ^ 0xC7 ^ (((2 * ((v12 >> 3) & 9)) | 0xC6) - ((v12 >> 3) & 9) - 3);
  LODWORD(v12) = (((2 * v12) & 0x1FA) + (v12 ^ 0x7BFD75FD)) * a1 - 1467311461;
  LODWORD(v12) = *(unsigned __int8 *)(v7
                                    + v12
                                    - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5) ^ 0x4C;
  LODWORD(v12) = (((2 * v12) & 0x9E) + (v12 ^ 0xBFFEF54F)) * a1 + 1105205817;
  int v37 = *(uint64_t (**)(void))(v11 + 8 * (((2 * (v6 + 1 == a6 + 256)) | (16 * (v6 + 1 == a6 + 256))) ^ v8));
  *(unsigned char *)(v7
           + v6 * a1
           - 767776825
           - ((((v6 * a1 - 767776825) * (unint64_t)a4) >> 32) >> 10) * a5) = *(unsigned char *)(v7 + v12 - (((v12 * (unint64_t)a4) >> 32) >> 10) * a5);
  return v37();
}

uint64_t sub_100111548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v156 = v73 ^ 0x37A;
  HIDWORD(a48) = 1879341208;
  int v75 = *(unsigned __int8 *)((LODWORD(STACK[0x179C]) ^ 0xBB98DFFD2A227F38)
                           + a65
                           + ((2 * (LODWORD(STACK[0x179C]) ^ 0xDFDD90C7)) & 0x1EBFFDFFELL)
                           + 0x446720020A001001) ^ LOBYTE(STACK[0x573]) ^ 0x5D;
  int v76 = a70 ^ *(unsigned __int8 *)((LODWORD(STACK[0x1494]) ^ 0x57FFFDDFBD206FB9)
                                 + ((2 * (LODWORD(STACK[0x1494]) ^ 0xDFDD90C7)) & 0xC5FBFEFC)
                                 + a65
                                 - 0x57FFFDDF62FDFF7ELL);
  int v77 = LOBYTE(STACK[0x3AA]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1618]) ^ 0xFFEEDFDF38717C1DLL)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1618]) ^ 0xDFDD90C7)) & 0x1CF59D9B4)
                                                         + 0x11202018531326);
  int v78 = *(unsigned __int8 *)((LODWORD(STACK[0x1310]) ^ 0x7657EFEE701AEAF8)
                           + a65
                           + ((2 * (LODWORD(STACK[0x1310]) ^ 0xDFDD90C7)) & 0x15F8EF47ELL)
                           - 0x7657EFEEAFC77A3FLL) ^ 0x11;
  int v79 = (((v75 - ((2 * v75) & 0x164)) << 16) + 984743936) ^ 0x3AB20000;
  unsigned int v80 = (((v77 + 10105923 - ((2 * v77) & 0x56)) << 8) + 1042432) ^ 0x9A442B00;
  unsigned int v81 = (v80 + 181926882 - ((2 * v80) & 0x15AFF600)) ^ 0xAD7FBE2 | (v79 - 137560522 - ((2 * v79) & 0x6F980000)) ^ 0xF7CCFE36;
  int v82 = (v81 + 1695720919 - ((2 * v81) & 0x4A254BAE)) ^ 0x6512A5D7 | ((v76 ^ 0x5D) + 908737794 - ((2 * v76) & 4)) ^ 0x362A3D02;
  int v83 = (((v82 - ((2 * v82) & 0x705470)) << 8) + 942290944) ^ 0x382A3800;
  int v84 = (v83 + 763929304 - ((2 * v83) & 0x5B114400)) ^ 0x2D88A2D8 | (v78 + 1607271547 - ((2 * v78) & 0xF6)) ^ 0x5FCD047B;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D77) = ((LOBYTE(STACK[0x720]) ^ 0x4C)
                                            - ((2 * (LOBYTE(STACK[0x720]) ^ 0x4C)) & 0x50)
                                            + 664626472) ^ 0x146316D5 ^ (v84 - ((2 * v84) & 0xD847C674) - 333192390);
  int v85 = LOBYTE(STACK[0x58F]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1DAC]) ^ 0xEFEF57EE00764459)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1DAC]) ^ 0xDFDD90C7)) & 0x1BF57A93CLL)
                                                         + 0x1010A81120542B62);
  int v86 = *(unsigned __int8 *)((LODWORD(STACK[0x1C28]) ^ 0xFBAFFFEFE020EE26)
                           + ((2 * (LODWORD(STACK[0x1C28]) ^ 0xDFDD90C7)) & 0x7FFAFDC2)
                           + a65
                           + 0x4500010C002811FLL) ^ LOBYTE(STACK[0x3C6]) ^ 0x5D;
  int v87 = a73 ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1AA4]) ^ 0xEFACD77FA432EBBBLL)
                                        + ((2 * (LODWORD(STACK[0x1AA4]) ^ 0xDFDD90C7)) & 0xF7DEF6F8)
                                        + a65
                                        + 0x1053288084108484);
  int v88 = (((v85 - ((2 * v85) & 0x1AC)) << 16) + 1104543744) ^ 0x41D60000;
  unsigned int v89 = (((v86 - ((2 * v86) & 0x18A)) << 8) - 1935162112) ^ 0x8CA7C500;
  unsigned int v90 = (v89 + 1161781359 - ((2 * v89) & 0xA7EC000)) ^ 0x453F606F | (v88 - 71522473 - ((2 * v88) & 0x77780000)) ^ 0xFBBCA757;
  unsigned int v91 = (v90 + 361913460 - ((2 * v90) & 0x2B24B8E8)) ^ 0x15925C74 | (v87 - 250608314 - ((2 * v87) & 0x8C)) ^ 0xF1100546;
  int v92 = LOBYTE(STACK[0x73C]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1920]) ^ 0xE9B7DB5520306F79)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0x1920]) ^ 0xDFDD90C7)) & 0x1FFDBFF7CLL)
                                                         + 0x164824AA00120042);
  int v93 = (((v91 + (~(2 * v91) | 0xBB8FDB)) << 8) + 574100224) ^ 0x22381200;
  unsigned int v94 = (v93 - 2051679922 - ((2 * v93) & 0xB6BB200)) ^ 0x85B5D94E | (v92 - 2019674213 - ((2 * v92) & 0x136)) ^ 0x879E379B;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D67) = v94 - 539127609 - ((2 * v94) & 0xBFBB218E);
  int v95 = *(unsigned __int8 *)((LODWORD(STACK[0xCC8]) ^ 0xB6FB7FFC28C04438)
                           + a65
                           + ((2 * (LODWORD(STACK[0xCC8]) ^ 0xDFDD90C7)) & 0x1EE3BA9FELL)
                           + 0x4904800308E22B01);
  unsigned int v96 = ((2 * (v95 ^ 0x11)) & 0xFFFFFFEF) + (v95 ^ 0x3D779FE6);
  int v97 = *(unsigned __int8 *)((LODWORD(STACK[0x9C0]) ^ 0x7EBDFFFC622A4A78)
                           + a65
                           + ((2 * (LODWORD(STACK[0x9C0]) ^ 0xDFDD90C7)) & 0x17BEFB57ELL)
                           - 0x7EBDFFFCBDF7DABFLL) ^ LOBYTE(STACK[0x758]) ^ 0x5D;
  int v98 = LOBYTE(STACK[0x5AB]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xE4C]) ^ 0x3C7FFF7F102A5BBALL)
                                                         + a65
                                                         + ((2 * (LODWORD(STACK[0xE4C]) ^ 0xDFDD90C7)) & 0x19FEF96FALL)
                                                         - 0x3C7FFF7FCFF7CB7DLL);
  int v99 = (((v98 - ((2 * v98) & 0x134)) << 8) + 1342872064) ^ 0x500A9A00;
  int v100 = ((LOBYTE(STACK[0x3E2]) ^ 0x4C) + 1297252448 - ((2 * (LOBYTE(STACK[0x3E2]) ^ 0x4C)) & 0xC0)) ^ 0x4D528060;
  unsigned int v101 = (v99 - 627396124 - ((2 * v99) & 0x35356200)) ^ 0xDA9AB1E4 | v100;
  int v102 = (v101 ^ 0xCE5FF3) + v96 + ((2 * v101) & 0x9CBFE6);
  int v103 = (((v100 & (v96 - 1031249911)) - ((2 * (v100 & (v96 - 1031249911))) & 0x44E712)) << 9) - 991489536;
  int v104 = *(unsigned __int8 *)((LODWORD(STACK[0xB44]) ^ 0xDF6FDD65402DF668)
                            + a65
                            + ((2 * (LODWORD(STACK[0xB44]) ^ 0xDFDD90C7)) & 0x13FE0CD5ELL)
                            + 0x2090229A600F9951) ^ 0x11;
  unsigned int v105 = ((v103 ^ 0xEAE39721)
        + ((2 * v103) & 0xA3F6F400 ^ 0x7E39DBFF)
        + (((v102 << 8) - 1174399488) ^ 0x7FDBCB9F)
        + ((2 * ((v102 << 8) - 1174399488)) & 0xFFB79600)
        + 1377808193) | (v104 + 1305570465 - ((2 * v104) & 0x142)) ^ 0x4DD16CA1;
  unsigned int v106 = (((v105 + 4893253 - ((2 * v105) & 0x95548A)) ^ ((LOBYTE(STACK[0x219]) ^ 0x4C)
                                                       - ((2 * LOBYTE(STACK[0x219])) & 0x64)
                                                       + 12504626)) << 8) ^ 0xF4647700;
  unsigned int v107 = (v106 - 1080051247 - ((2 * v106) & 0x7F3F7200)) ^ 0xBF9FB9D1 | (v97 - 785494073 - ((2 * v97) & 0xFFFFFF8F)) ^ 0xD12E4FC7;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83D57) = v107 - 539127609 - ((2 * v107) & 0xBFBB218E);
  LODWORD(v152) = (*(unsigned __int8 *)(v74 - 117) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v74 - 117) ^ 0x3E)) & 0x10A);
  int v108 = *(unsigned __int8 *)((LODWORD(STACK[0x1A0C]) ^ 0xFFFFDBBF642B05BCLL)
                            + a65
                            + ((2 * (LODWORD(STACK[0x1A0C]) ^ 0xDFDD90C7)) & 0x177ED2AF6)
                            + 0x244044096A85);
  LODWORD(v155) = (*(unsigned __int8 *)(v74 - 120) ^ 0x3E)
                - 2138616428
                - ((2 * (*(unsigned __int8 *)(v74 - 120) ^ 0x3E)) & 0x128);
  int v109 = (LOBYTE(STACK[0x2DB]) ^ 0x5D ^ v108) - ((2 * (LOBYTE(STACK[0x2DB]) ^ 0x5D ^ v108)) & 0x1B8);
  HIDWORD(v155) = 1033;
  int v110 = (*(unsigned __int8 *)(v74 - 118) ^ 0x3E) - ((2 * (*(unsigned __int8 *)(v74 - 118) ^ 0x3E)) & 0x1A2);
  int v111 = *(unsigned __int8 *)((LODWORD(STACK[0x1888]) ^ 0xDDCEDAA83C205330)
                            + a65
                            + ((2 * (LODWORD(STACK[0x1888]) ^ 0xDFDD90C7)) & 0x1C7FB87EELL)
                            + 0x223125571C023C09) ^ 0x11;
  HIDWORD(v152) = v111 - ((2 * v111) & 0x1AA);
  unsigned int v112 = (((v109 << 8) - 1237459968) ^ 0xB63DDC00)
       - 1633368089
       - ((2 * (((v109 << 8) - 1237459968) ^ 0xB63DDC00)) & 0x3D498E00);
  HIDWORD(a44) = 147;
  uint64_t v154 = (LODWORD(STACK[0x195C]) ^ 0x13ED6FBBA02E5558)
       + ((2 * (LODWORD(STACK[0x195C]) ^ 0xDFDD90C7)) & 0xFFE78B3E)
       + a65;
  HIDWORD(a42) = 1490;
  uint64_t v153 = (LODWORD(STACK[0x1654]) ^ 0x7FFEFDFD7862FD18)
       + a65
       + ((2 * (LODWORD(STACK[0x1654]) ^ 0xDFDD90C7)) & 0x14F7EDBBELL);
  int v113 = (LOBYTE(STACK[0x81A]) ^ 0x4C) - 1484686958 - ((2 * LOBYTE(STACK[0x81A])) & 0x124);
  unsigned int v114 = ((((v110 << 8) + 138793216) ^ 0x845D100)
        - 457241811
        - ((2 * (((v110 << 8) + 138793216) ^ 0x845D100)) & 0x497E1600)) ^ 0xE4BF0B2D | ((((v152 << 16)
                                                                                        - 930807808) ^ 0xC8850000)
                                                                                      - 602709904
                                                                                      - ((2
                                                                                        * (((v152 << 16)
                                                                                          - 930807808) ^ 0xC8850000)) & 0x38260000)) ^ 0xDC136070;
  unsigned int v115 = (v114 - 423870275 - ((2 * v114) & 0x4D78817A)) ^ 0xE6BC40BD | ((*(unsigned __int8 *)(v74 - 119) ^ 0x3E)
                                                                      + 1162864727
                                                                      - ((2 * (*(unsigned __int8 *)(v74 - 119) ^ 0x3E)) & 0xAE)) ^ 0x454FE857;
  unsigned int v116 = (((v115 - ((2 * v115) & 0x1D1264)) << 8) - 1903611392) ^ 0x8E893200;
  unsigned int v117 = v116 - 304182686 - ((2 * v116) & 0xDBBD1400);
  int v118 = LOBYTE(STACK[0x7AB]) ^ *(unsigned __int8 *)((LODWORD(STACK[0xE1C]) ^ 0xFF5ED3AA0982FF3ELL)
                                                   + a65
                                                   + ((2 * (LODWORD(STACK[0xE1C]) ^ 0xDFDD90C7)) & 0x1ACBEDFF2)
                                                   + 0xA12C5529A09007);
  int v119 = (v118 ^ 0x5D) - ((2 * v118) & 0x44444444);
  int v120 = LOBYTE(STACK[0x5E2]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xC98]) ^ 0xF7EB675C20B57FE0)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0xC98]) ^ 0xDFDD90C7)) & 0x1FED1DE4ELL)
                                                          + 0x81498A3009710D9);
  int v121 = v120 - ((2 * v120) & 0x128);
  int v122 = LOBYTE(STACK[0x651]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1704]) ^ 0x97F6FFF9620377F8)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0x1704]) ^ 0xDFDD90C7)) & 0x17BBDCE7ELL)
                                                          + 0x68090006422118C1);
  int v123 = LOBYTE(STACK[0x488]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0x1580]) ^ 0x743E81FE883B46B5)
                                                          + ((2 * (LODWORD(STACK[0x1580]) ^ 0xDFDD90C7)) & 0xAFCDACE4)
                                                          + a65
                                                          - 0x743E81FE57E6D672);
  int v124 = v123 - 137259579 - ((2 * v123) & 0x18A);
  int v125 = LOBYTE(STACK[0x419]) ^ 0x5D ^ *(unsigned __int8 *)((LODWORD(STACK[0xB14]) ^ 0x6EF79E3D24276F38)
                                                          + a65
                                                          + ((2 * (LODWORD(STACK[0xB14]) ^ 0xDFDD90C7)) & 0x1F7F5FFFELL)
                                                          - 0x6EF79E3DFBFAFFFFLL);
  int v126 = (v117 ^ 0xEDDE8A62 | v155 ^ 0x80874D94) - ((2 * (v117 ^ 0xEDDE8A62 | v155 ^ 0x80874D94)) & 0x32ED500C);
  unsigned int v127 = ((((v121 << 8) + 782668800) ^ 0x2EA69400)
        - 1732219312
        - ((2 * (((v121 << 8) + 782668800) ^ 0x2EA69400)) & 0x3180DC00)) ^ 0x98C06E50 | ((((v119 << 16) - 1105068032) ^ 0xBE220000)
                                                                                       + 337342323
                                                                                       - ((2
                                                                                         * (((v119 << 16) - 1105068032) ^ 0xBE220000)) & 0x28360000)) ^ 0x141B6F73;
  int v128 = *(unsigned __int8 *)((LODWORD(STACK[0x990]) ^ 0x737EEF7F20265FD8)
                            + a65
                            + ((2 * (LODWORD(STACK[0x990]) ^ 0xDFDD90C7)) & 0x1FFF79E3ELL)
                            - 0x737EEF7FFFFBCF1FLL) ^ LOBYTE(STACK[0x250]) ^ 0x5D;
  unsigned int v129 = ((((v113 ^ 0xA7817992 | v112 ^ 0x9EA4C7E7) - ((2 * (v113 ^ 0xA7817992 | v112 ^ 0x9EA4C7E7)) & 0xD090) + 59464) ^ (HIDWORD(v152) + 8917)) << 16) ^ 0xCA9D0000;
  unsigned int v130 = (((v122 - ((2 * v122) & 0x1D2)) << 8) - 980227840) ^ 0xC592E900;
  uint64_t v131 = (2 * v130) & 0x460E2400;
  int v132 = (v129 + 532496134 - ((2 * v129) & 0x3F7A0000)) ^ 0x1FBD3F06 | (v130 - 486075756 - v131) ^ 0xE3071294;
  unsigned int v133 = (v127 - 2122961011 - ((2 * v127) & 0x2EC5F1A)) ^ 0x81762F8D | (v125 - 493872904 - ((2 * v125) & 0x1F0)) ^ 0xE29018F8;
  unsigned int v134 = (((v133 - ((2 * v133) & 0xE2FC80)) << 8) - 243384320) ^ 0xF17E4000;
  unsigned int v135 = (v132 + 45927899 - ((2 * v132) & 0x5799BB6)) ^ 0x2BCCDDB | v124 ^ 0xF7D195C5;
  unsigned int v136 = LODWORD(STACK[0xB00]) ^ (v126 - 1720276986) ^ (v128 - ((2 * v128) & 0x15A) - 8475987) ^ (v134
                                                                                                - ((2 * v134) & 0xD878EA00)
                                                                                                + 1815901562) ^ 0xFF906655 ^ (v135 - ((2 * v135) & 0xEB482308) - 173796988);
  int v137 = *(unsigned __int8 *)(v154 - 0x13ED6FBB7FF3C59FLL);
  int v138 = LOBYTE(STACK[0x5D9]);
  int v139 = *(unsigned __int8 *)(v153 - 0x7FFEFDFDA7BF6DDFLL);
  int v140 = *(unsigned __int8 *)((LODWORD(STACK[0x17D8]) ^ 0xFCFBF3EA71266F3ALL)
                            + a65
                            + ((2 * (LODWORD(STACK[0x17D8]) ^ 0xDFDD90C7)) & 0x15DF7FFFALL)
                            + 0x3040C1551040003);
  int v141 = LOBYTE(STACK[0x7A2]);
  int v142 = LOBYTE(STACK[0x263]);
  int v143 = LOBYTE(STACK[0x410]);
  int v144 = *(unsigned __int8 *)((LODWORD(STACK[0x14D0]) ^ 0x6BA73FDF6922CE31)
                            + a65
                            + ((2 * (LODWORD(STACK[0x14D0]) ^ 0xDFDD90C7)) & 0x16DFEBDECLL)
                            - 0x6BA73FDFB6FF5EF6);
  *(_DWORD *)(*a66 - 0x73FCE2C07DC88EB7) = v136;
  int v145 = (v140 ^ v141 ^ 0x5D) - ((2 * (v140 ^ v141 ^ 0x5D)) & 0x56);
  unsigned int v146 = (((v137 ^ v142 ^ 0x5D) - ((2 * (v137 ^ v142 ^ 0x5D)) & 0x88888888)) << 16) - 515637248;
  unsigned int v147 = ((v146 ^ 0xE1440000) + 34265122 - ((2 * v146) & 0x4140000)) ^ 0x20AD822 | ((((v145 << 8) + 2029071104) ^ 0x78F12B00)
                                                                                  + 1181822571
                                                                                  - ((2
                                                                                    * (((v145 << 8) + 2029071104) ^ 0x78F12B00)) & 0xCE25C00)) ^ 0x46712E6B;
  int v148 = (v147 + 300819278 - ((2 * v147) & 0x23DC469C)) ^ 0x11EE234E | ((v138 ^ 0x5D ^ v139)
                                                                      + 1824923451
                                                                      - ((2 * (v138 ^ 0x5D ^ v139)) & 0x76)) ^ 0x6CC61F3B;
  int v149 = (v143 ^ 0x5D ^ v144) + 2084095357 - ((2 * (v143 ^ 0x5D ^ v144)) & 0xFA);
  unsigned int v150 = (((v148 - ((2 * v148) & 0xDC9B74)) << 8) - 296896000) ^ 0xEE4DBA00;
  *(_DWORD *)(*a66 - 0x73FCE2C07DC83DE7) = ((v150 - 675686562 - ((2 * v150) & 0xAF73AE00)) ^ 0xD7B9D75E | v149 ^ 0x7C38C57D)
                                           - 539127609
                                           - ((2
                                             * ((v150 - 675686562 - ((2 * v150) & 0xAF73AE00)) ^ 0xD7B9D75E | v149 ^ 0x7C38C57D)) & 0xBFBB218E);
  return ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)(v156 ^ 0x37A)))(v156, 682824845, 218302662, v131, 532496134, 585, 3205573259, 128, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0x2B8000000EELL,
           v152,
           202418848,
           v153,
           a42,
           v154,
           a44,
           v155,
           0xDDDDBFE100000240,
           682824841,
           a48);
}

uint64_t sub_100112C58(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v67 = (((a3 - 218302646) >> 1) & 0x27FBD6FA)
      + ((a1 - 1812075895) ^ ((a3 - 218302646) >> 2));
  int v68 = &STACK[0x8E0];
  unsigned int v69 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299572550) % 0x55Cu);
  uint64_t v70 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299572841) % 0x55Cu) ^ 0xDFDD90C7;
  int v71 = *(unsigned __int8 *)((*((unsigned int *)v68 + (97 * a3 + 299596121) % 0x55Cu) ^ 0xEEFF9F7B26226DEALL)
                           + a65
                           + ((2 * (*((_DWORD *)v68 + (97 * a3 + 299596121) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1F3FFFA5ALL)
                           + 0x11006084060002D3);
  int v72 = *(unsigned __int8 *)((v70 ^ 0x7F67EBFD7FBBDF7FLL) + ((2 * v70) & 0xFF77BEFE) + a65 - 0x7F67EBFD7FBBDF7FLL);
  uint64_t v73 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299596024) % 0x55Cu) ^ 0xDFDD90C7;
  LODWORD(v70) = *(unsigned __int8 *)((v69 ^ 0xF77FDB57E4A26F58)
                                    + ((2 * (v69 ^ 0xDFDD90C7)) & 0x76FFFF3E)
                                    + a65
                                    + 0x88024A8C4800061);
  LODWORD(v73) = *(unsigned __int8 *)((v73 ^ 0x5F7DBEBAEFFDD6EFLL)
                                    + a65
                                    + ((2 * v73) & 0x1DFFBADDELL)
                                    - 0x5F7DBEBAEFFDD6EFLL);
  int v74 = *(&a67 + (457 * a3 - 979545461) % 0x708u) ^ *(unsigned __int8 *)((*((unsigned int *)v68
                                                                                           + (97 * a3 + 299572647)
                                                                                           % 0x55Cu) ^ 0x527CFDF34364EC1)
                                                                                        + a65
                                                                                        + ((2
                                                                                          * (*((_DWORD *)v68
                                                                                             + (97 * a3 + 299572647)
                                                                                             % 0x55Cu) ^ 0xDFDD90C7)) & 0x1D7D7BC0CLL)
                                                                                        - 0x527CFDFEBEBDE06);
  int v75 = *(&a67 + (457 * a3 - 979545004) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((*((unsigned int *)v68
                                                                                                  + (97 * a3 + 299572744) % 0x55Cu) ^ 0x1FFBB9F3088B6D2ALL)
                                                                                               + a65
                                                                                               + ((2
                                                                                                 * (*((_DWORD *)v68 + (97 * a3 + 299572744) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1AEADFBDALL)
                                                                                               - 0x1FFBB9F3D756FDEDLL);
  uint64_t v76 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299595927) % 0x55Cu) ^ 0xDFDD90C7;
  int v77 = v72 ^ *(&a67 + (457 * a3 - 979544547) % 0x708u) ^ 0x5D;
  unsigned int v78 = *((_DWORD *)&STACK[0x8E0] + (97 * a3 + 299595830) % 0x55Cu);
  int v79 = *(unsigned __int8 *)((v76 ^ 0x4BFD7FFF3FFFBFDFLL) + ((2 * v76) & 0x7FFF7FBE) + a65 - 0x4BFD7FFF3FFFBFDFLL);
  int v80 = *(unsigned __int8 *)((v78 ^ 0xFFC78F7B212C3B3CLL)
                           + a65
                           + ((2 * (v78 ^ 0xDFDD90C7)) & 0x1FDE357F6)
                           + 0x387084010E5405);
  int v81 = *(&a67 + (457 * a3 - 979545918) % 0x708u) ^ 0x5D ^ v70;
  LODWORD(v70) = (((v77 - ((2 * v77) & 0x72)) << 16) + 188284928) ^ 0xB390000;
  int v82 = (((v75 + 1902407 - ((2 * v75) & 0x5E)) << 8) - 6144) ^ 0x1D072F00;
  int v83 = (v82 + 45597892 - ((2 * v82) & 0x56F8800)) ^ 0x2B7C4C4 | (v70 + 736323431 - ((2 * v70) & 0x57C60000)) ^ 0x2BE36767;
  unsigned int v84 = (v83 - 1132174719 - ((2 * v83) & 0x7908C502)) ^ 0xBC846281 | ((v74 ^ 0x5D) - 1668916062 - ((2 * v74) & 0x144)) ^ 0x9C865CA2;
  unsigned int v85 = (((v84 - ((2 * v84) & 0x15FCBE)) << 8) - 1963041024) ^ 0x8AFE5F00;
  unsigned int v86 = (v85 - 50726303 - ((2 * v85) & 0xF9F3F400)) ^ 0xFCF9FA61 | (v81 - 2001516865 - ((2 * v81) & 0xFFFFFF7F)) ^ 0x88B346BF;
  int v87 = *(&a67 + (457 * a3 - 979434867) % 0x708u);
  int v88 = *(&a67 + (457 * a3 - 979436238) % 0x708u);
  int v89 = *(&a67 + (457 * a3 - 979435781) % 0x708u);
  int v90 = *(&a67 + (457 * a3 - 979435324) % 0x708u);
  *(_DWORD *)(((4 * (v67 + 1827028928)) | ((unint64_t)(v67 + 1827028928 < 0xE42B3D) << 34))
            + *a66
            - 0x73FCE2C081593BABLL) = *((_DWORD *)&STACK[0x8E0] + (97 * (v67 + 1827028928) - 1450443037) % 0x55C) ^ 0x6F20B384 ^ (v86 + 1864414084 - ((2 * v86) & 0xDE416708));
  int v91 = ((((v71 ^ v87 ^ 0x5D) + 6355159 - ((2 * (v71 ^ v87 ^ 0x5D)) & 0x11111111)) << 8) + 569600) ^ 0x61018800;
  int v92 = (v91 - 1726593683 - ((2 * v91) & 0x322C8A00)) ^ 0x9916456D | ((v73 ^ 0x11) + 756263658 - ((2 * v73) & 0x1D4)) ^ 0x2D13AAEA;
  LODWORD(v73) = (v79 ^ v89 ^ 0x5D) - ((2 * (v79 ^ v89 ^ 0x5D)) & 0x5C);
  int v93 = ((v90 ^ 0x4C) - ((2 * (v90 ^ 0x4C)) & 0xCE) + 9063) ^ (v92 - ((2 * v92) & 0x4B22) + 9617);
  unsigned int v94 = (((v93 << 16) ^ 0x6F60000) + 549956630 - ((2 * ((v93 << 16) ^ 0x6F60000)) & 0x418E0000)) ^ 0x20C7AC16 | ((((v73 << 8) - 77451776) ^ 0xFB622E00) + 168610752 - ((2 * (((v73 << 8) - 77451776) ^ 0xFB622E00)) & 0x14199600)) ^ 0xA0CCBC0;
  unsigned int v95 = (v94 + 1941494546 - ((2 * v94) & 0xE771B624)) ^ 0x73B8DB12 | ((v80 ^ v88 ^ 0x5D)
                                                                    + 1480644925
                                                                    - ((2 * (v80 ^ v88 ^ 0x5D)) & 0x7A)) ^ 0x5840D93D;
  *(_DWORD *)(((4 * (v67 - 1903056257)) | ((unint64_t)(v67 - 1903056257 < 0x228F81C8) << 34))
            + *a66
            - 0x73FCE2C1080695D7) = v95 - 539127609 - ((2 * v95) & 0xBFBB218E);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((436 * ((a3 - 218302642) > 0x1F)) ^ a57)))();
}

uint64_t sub_10011342C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  HIDWORD(v73) = a7 + 29;
  LODWORD(v73) = a7 - 1781580579;
  int v74 = (v73 >> 5) - ((2 * (v73 >> 5)) & 0xBEDAF632) + 1601010457;
  HIDWORD(v73) = v74 ^ 0x1B19;
  LODWORD(v73) = v74 ^ 0x5F6D6000;
  int v75 = (v73 >> 13) - ((2 * (v73 >> 13)) & 0x5E1A2756) + 789386155;
  uint64_t v76 = (((a7 - 1781581535) >> 2)
       - 2135157891
       - ((a6 + 24649509) & (2 * ((a7 - 1781581535) >> 2)))) ^ 0x80BC137D;
  int v77 = __PAIR64__(v75 ^ 0x13ABu, v75 ^ 0x2F0D0000u) >> 14;
  unsigned int v78 = (2 * v77) & 0xA38A2A48;
  unsigned int v79 = ((194 * v76) & 0x23FBFEEE) + ((97 * v76) ^ 0x91FDFF77) + 1845649801;
  int v80 = v77 - 775613148;
  unsigned int v81 = v79 - (((v79 * (unint64_t)a2) >> 32) >> 10) * v71;
  int v82 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861541612
                           - ((((457 * a7 + 1861541612) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624032
                                                                                 - ((((97 * a7 - 1014624032)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0xFFDFFFFF2F22EAB8)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624032
                                                                             - ((((97 * a7 - 1014624032)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1E1FEF4FELL)
                                                             + 0x2000000F008581);
  unsigned int v83 = ((194 * ((v80 - v78) ^ 0xD1C51524)) & 0xB7FD9162) + ((97 * ((v80 - v78) ^ 0xD1C51524)) ^ 0xDBFEC8B1) + 604059471;
  uint64_t v84 = *(_DWORD *)(v72 + 4 * (v83 - (((v83 * (unint64_t)a2) >> 32) >> 10) * v71)) ^ 0xDFDD90C7;
  unsigned int v85 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861540241
                           - ((((457 * a7 + 1861540241) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ a8;
  int v86 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861541155
                           - ((((457 * a7 + 1861541155) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624129
                                                                                 - ((((97 * a7 - 1014624129)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0x3FB3E33D322A6F78)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624129
                                                                             - ((((97 * a7 - 1014624129)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1DBEFFF7ELL)
                                                             - 0x3FB3E33DEDF7FFBFLL);
  unsigned int v87 = (((v82 - ((2 * v82) & 0x99999999)) << 16) + 214695936) ^ 0xCCC0000;
  unsigned int v88 = (((v86 - ((2 * v86) & 0x42)) << 8) - 1443028736) ^ 0xA9FD2100;
  LODWORD(v84) = *(unsigned __int8 *)((v84 ^ 0x7A737D5E7DB3CFEFLL)
                                    + ((2 * v84) & 0xFB679FDE)
                                    + a65
                                    - 0x7A737D5E7DB3CFEFLL) ^ v67;
  unsigned int v89 = (v88 - 179460259 - ((2 * v88) & 0x6A9B4E00)) ^ 0xF54DA75D | (v87 - 2053040257 - ((2 * v87) & 0xB420000)) ^ 0x85A1177F;
  uint64_t v90 = v84 - ((2 * v84) & 0xB0) + 1952769368;
  int v91 = *(unsigned __int8 *)(v69
                           + 457 * a7
                           + 1861540698
                           - ((((457 * a7 + 1861540698) * (unint64_t)v70) >> 32) >> 10)
                           * v68) ^ v66 ^ *(unsigned __int8 *)((*(unsigned int *)(v72
                                                                                + 4
                                                                                * (97 * a7
                                                                                 - 1014624226
                                                                                 - ((((97 * a7 - 1014624226)
                                                                                                  * (unint64_t)a2) >> 32) >> 10)
                                                                                 * v71)) ^ 0x9B5F7DB720024F38)
                                                             + a65
                                                             + ((2
                                                               * (*(_DWORD *)(v72
                                                                            + 4
                                                                            * (97 * a7
                                                                             - 1014624226
                                                                             - ((((97 * a7 - 1014624226)
                                                                                              * (unint64_t)a2) >> 32) >> 10)
                                                                             * v71)) ^ 0xDFDD90C7)) & 0x1FFBFBFFELL)
                                                             + 0x64A0824800202001);
  uint64_t v92 = (2 * v91) & 0x174;
  int v93 = (v89 - 77142376 - ((2 * v89) & 0xF6CDCD30)) ^ 0xFB66E698 | (v91 + 1664138938 - v92) ^ 0x6330BEBA;
  unsigned int v94 = (((v93 - ((2 * v93) & 0x1167A0)) << 8) - 2001481728) ^ 0x88B3D000;
  unsigned int v95 = (v94 - 794607514 - ((2 * v94) & 0xA1468000)) ^ 0xD0A34066 | (v85 + 1075872557 - ((2 * v85) & 0x5A)) ^ 0x4020832D;
  *(_DWORD *)(*a66
            + 4
            * (((((a7 - 1781581535) >> 2)
               - 2135157891
               - ((a6 + 24649509) & (2 * ((a7 - 1781581535) >> 2)))) ^ 0x1FA345EF79E18DA2)
             + ((2 * v76) & 0x1F2BB3DBELL))
            + 0xD76057F9CC0F5CDLL) = v90 ^ *(_DWORD *)(v72 + 4 * v81) ^ 0xB0A54012 ^ (v95
                                                                                      - ((2 * v95) & 0x89834A94)
                                                                                      - 993942198);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)(a6 | (32 * ((a7 - 1781581531) < 0x60)))))(2513385761, a2, 0x1F2BB3DBELL, v92, v90, a6, (a7 + 4), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_100113934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = ((2 * (((a57 ^ 0xC55C1CDF) + v67) >> 2)) & 0x39FFBC9E) + ((((a57 ^ 0xC55C1CDF) + v67) >> 2) ^ 0x9CFFDE4F);
  unsigned int v69 = (97 * v67 - 941073636) % 0x55Cu;
  unsigned int v70 = &STACK[0x8E0];
  unsigned int v71 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073733) % 0x55Cu);
  unsigned int v72 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073442) % 0x55Cu);
  uint64_t v73 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941090514) % 0x55Cu) ^ 0xDFDD90C7;
  int v74 = *(unsigned __int8 *)((v73 ^ 0xCFFFF2FEFDEFC7F7) + a65 + ((2 * v73) & 0x1FBDF8FEELL) + 0x30000D0102103809);
  uint64_t v75 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941073539) % 0x55Cu) ^ 0xDFDD90C7;
  int v76 = *(unsigned __int8 *)((v71 ^ 0x57B7B7CCA2A06A6CLL)
                           + ((2 * (v71 ^ 0xDFDD90C7)) & 0xFAFBF556)
                           + a65
                           - 0x57B7B7CC7D7DFAABLL);
  uint64_t v77 = *((_DWORD *)&STACK[0x8E0] + v69) ^ 0xDFDD90C7;
  uint64_t v78 = *((unsigned int *)&STACK[0x8E0] + v69) ^ 0x7EFF6DFD09215A48;
  int v79 = *(unsigned __int8 *)((v75 ^ 0xBF6F6F2A847CB9E5) + a65 + ((2 * v75) & 0x108F973CALL) + 0x409090D57B83461BLL);
  LODWORD(v77) = *(unsigned __int8 *)(v78 + a65 + ((2 * v77) & 0x1ADF9951ELL) - 0x7EFF6DFDD6FCCA8FLL);
  int v80 = *(unsigned __int8 *)((v72 ^ 0xFFDBB97FA84A0A3BLL)
                           + ((2 * (v72 ^ 0xDFDD90C7)) & 0xEF2F35F8)
                           + a65
                           + 0x24468088686504);
  LODWORD(v73) = *(unsigned __int8 *)((*((unsigned int *)v70 + (97 * v67 - 941090611) % 0x55Cu) ^ 0xADEC6F6F2E626738)
                                    + a65
                                    + ((2 * (*((_DWORD *)v70 + (97 * v67 - 941090611) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1E37FEFFELL)
                                    + 0x521390900E400801) ^ *(&a67 + (457 * v67 + 1366700321)
                                                                                      % 0x708u) ^ 0x5D;
  int v81 = v74 ^ *(&a67 + (457 * v67 + 1366700778) % 0x708u) ^ 0x5D;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366699864) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((*((unsigned int *)v70 + (97 * v67 - 941090708) % 0x55Cu) ^ 0x5DFBF5DD01646C3ELL) + a65 + ((2 * (*((_DWORD *)v70 + (97 * v67 - 941090708) % 0x55Cu) ^ 0xDFDD90C7)) & 0x1BD73F9F2) - 0x5DFBF5DDDEB9FCF9);
  unsigned int v82 = (((v81 - ((2 * v81) & 0xFFFFFFF7)) << 16) + 1023082496) ^ 0x3CFB0000;
  LODWORD(v73) = (((v73 - ((2 * v73) & 0x2C)) << 8) + 1762399744) ^ 0x690C1600;
  LODWORD(v73) = (v73 + 1394326195 - ((2 * v73) & 0x26377400)) ^ 0x531BBAB3;
  int v83 = (v82 + 1469713211 - ((2 * v82) & 0x2F340000)) ^ 0x579A0B3B | v73;
  LODWORD(v73) = v73 | (v78 - 1277821936 - ((2 * v78) & 0x20)) ^ 0xB3D5FC10;
  uint64_t v84 = *((_DWORD *)&STACK[0x8E0] + (97 * v67 - 941090805) % 0x55Cu) ^ 0xDFDD90C7;
  HIDWORD(v85) = (v73 - ((2 * v73) & 0x2F4) + 2426) ^ 0x97A;
  LODWORD(v85) = (v83 + 1731289088 - ((2 * v83) & 0x4E62D7F8) + 3068) ^ 0x67316000;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366699407) % 0x708u) ^ 0x5D ^ *(unsigned __int8 *)((v84 ^ 0x7F7D7BFCC9EBAFBELL) + a65 + ((2 * v84) & 0x193D75F7CLL) - 0x7F7D7BFCC9EBAFBELL);
  int v86 = (v85 >> 12) - ((2 * (v85 >> 12)) & 0x97550BD0) + 1269466600;
  HIDWORD(v85) = v86 ^ 0xA85E8;
  LODWORD(v85) = v86 ^ 0x4BA00000;
  unsigned int v87 = ((((v85 >> 20) - ((2 * (v85 >> 20)) & 0x4EC4EC)) << 8) + 660764160) ^ 0x27627600;
  int v88 = (v87 - 744567601 + (~(2 * v87) | 0x58C267FF) + 1) ^ 0xD39ECCCF | (v78 + 618497384 - ((2 * v78) & 0xD0)) ^ 0x24DD8568;
  LODWORD(v78) = *(&a67 + (457 * v67 + 1366781210) % 0x708u);
  LODWORD(v84) = *(&a67 + (457 * v67 + 1366780753) % 0x708u);
  uint64_t v89 = *(&a67 + (457 * v67 + 1366779839) % 0x708u);
  uint64_t v90 = *(&a67 + (457 * v67 + 1366780296) % 0x708u);
  *(_DWORD *)(((4 * (v68 + 2147319223)) | ((unint64_t)(v68 + 2147319223 < 0x1CFD5C06) << 34))
            + *a66
            - 0x73FCE2C0F1BDFECFLL) = *((_DWORD *)&STACK[0x8E0] + (97 * (v68 + 2147319223) + 67142330) % 0x55C) ^ 0x9DB1F96A ^ (v88 - 1649280662 - ((2 * v88) & 0x3B63F2D4));
  LODWORD(v73) = ((((v78 ^ 0x5D ^ v80) - ((2 * (v78 ^ 0x5D ^ v80)) & 0x5A)) << 16)
                + 1311571968) ^ 0x4E2D0000;
  unsigned int v91 = ((((v84 ^ 0x5D ^ v79) - ((2 * (v84 ^ 0x5D ^ v79)) & 0x1A2)) << 8) + 982896896) ^ 0x3A95D100;
  int v92 = (v91 - 964721240 + (~(2 * v91) | 0xF300F5FF) + 1) ^ 0xC67F85A8 | (v73 - 1847510556 - ((2 * v73) & 0x23C20000)) ^ 0x91E139E4;
  int v93 = (v92 - 587210480 - ((2 * v92) & 0x39FFC220)) ^ 0xDCFFE110 | ((v90 ^ 0x4C)
                                                                   - 367492036
                                                                   + (~(2 * (v90 ^ 0x4C)) | 0xFFFFFF87)
                                                                   + 1) ^ 0xEA18843C;
  int v94 = (v93 - ((2 * v93) & 0x716EB0) + 3716952) ^ ((v77 ^ 0x11)
                                                  + 14767921
                                                  + (~(2 * (v77 ^ 0x11)) | 0xFFFFFF9F));
  int v95 = (((v94 << 8) ^ 0xD9E06800) + 1517120739 - ((2 * ((v94 << 8) ^ 0xD9E06800)) & 0xB4DAD800)) ^ 0x5A6D6CE3 | ((v76 ^ v89 ^ 0x5D) + 1450312927 - ((2 * (v76 ^ v89 ^ 0x5D)) & 0xFFFFFFBF)) ^ 0x567204DF;
  *(_DWORD *)(((4 * (v68 - 1131465656)) | ((unint64_t)(v68 - 1131465656 < 0x598EFE73) << 34))
            + *a66
            - 0x73FCE2C1E4048883) = v95 - 539127609 - ((2 * v95) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((2265 * ((v67 - 983819213) < 0xB0)) ^ a57)))(3707756816, 3330246056, 93, v89, 2447456740, 3927475260, v90, a66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_100114180@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60)
{
  unsigned int v69 = (((a2 - 834708178) >> 1) & 0x7FEFDFDE) + (((a2 - 834708178) >> 2) ^ 0x7FF7EFEF);
  int v70 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790968408
                           - ((((457 * a2 + 790968408) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778284
                                                                                - ((((a2 * v68 + 637778284)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0xFDBFFFD531306428)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778284
                                                                            - ((((a2 * v68 + 637778284)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1DDDBE9DELL)
                                                            + 0x240002A11120B11);
  int v71 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790968865
                           - ((((457 * a2 + 790968865) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778381
                                                                                - ((((a2 * v68 + 637778381)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0x6BEDFAE9251A6FB8)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778381
                                                                            - ((((a2 * v68 + 637778381)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1F58FFEFELL)
                                                            - 0x6BEDFAE9FAC7FF7FLL);
  int v72 = *(unsigned __int8 *)((*(unsigned int *)(v66
                                              + 4
                                              * (a2 * v68
                                               + 637778187
                                               - ((((a2 * v68 + 637778187)
                                                                * (unint64_t)v61) >> 32) >> 10)
                                               * v62)) ^ 0x7B4E6FDF043BEF15)
                           + a59
                           + ((2
                             * (*(_DWORD *)(v66
                                          + 4
                                          * (a2 * v68
                                           + 637778187
                                           - ((((a2 * v68 + 637778187)
                                                            * (unint64_t)v61) >> 32) >> 10)
                                           * v62)) ^ 0xDFDD90C7)) & 0x1B7CCFFA4)
                           - 0x7B4E6FDFDBE67FD2);
  int v73 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790967951
                           - ((((457 * a2 + 790967951) * (unint64_t)v63) >> 32) >> 10)
                           * v64);
  int v74 = (((v71 - ((2 * v71) & 0x1D4)) << 16) + 1391067136) ^ 0x52EA0000;
  unsigned int v75 = (((v70 - ((2 * v70) & 0x19A)) << 8) - 1035350784) ^ 0xC249CD00;
  unsigned int v76 = (v74 + 584656959 - ((2 * v74) & 0x45B20000)) ^ 0x22D9283F | (v75 - 390378020 - ((2 * v75) & 0x51769A00)) ^ 0xE8BB4DDC;
  int v77 = (v76 + 42230556 - ((2 * v76) & 0x508C638)) ^ 0x284631C | ((v73 ^ a1 ^ v72)
                                                                + 1183141481
                                                                - ((2 * (v73 ^ a1 ^ v72)) & 0xD2)) ^ 0x46854E69;
  int v78 = *(unsigned __int8 *)(v60
                           + 457 * a2
                           + 790967494
                           - ((((457 * a2 + 790967494) * (unint64_t)v63) >> 32) >> 10)
                           * v64) ^ a1 ^ *(unsigned __int8 *)((*(unsigned int *)(v66
                                                                               + 4
                                                                               * (a2 * v68
                                                                                + 637778090
                                                                                - ((((a2 * v68 + 637778090)
                                                                                                 * (unint64_t)v61) >> 32) >> 10)
                                                                                * v62)) ^ 0x5235FDE52A62C674)
                                                            + a59
                                                            + ((2
                                                              * (*(_DWORD *)(v66
                                                                           + 4
                                                                           * (a2 * v68
                                                                            + 637778090
                                                                            - ((((a2 * v68 + 637778090)
                                                                                             * (unint64_t)v61) >> 32) >> 10)
                                                                            * v62)) ^ 0xDFDD90C7)) & 0x1EB7EAD66)
                                                            - 0x5235FDE5F5BF56B3);
  unsigned int v79 = (((v77 - ((2 * v77) & 0xBC325C)) << 8) - 568775168) ^ 0xDE192E00;
  unsigned int v80 = (v79 - 1515059021 - ((2 * v79) & 0x4B641000)) ^ 0xA5B208B3 | (v78 - 1818977076 - ((2 * v78) & 0x99999999)) ^ 0x93949CCC;
  unsigned int v81 = (v80 - ((2 * v80) & 0xE4D4D0A6) - 227907501) ^ *(_DWORD *)(v66
                                                                 + 4
                                                                 * (v69 * v68
                                                                  - 2096207799
                                                                  - ((((v69 * v68 - 2096207799)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v62));
  HIDWORD(v82) = v81 ^ 0x94;
  LODWORD(v82) = v81 ^ 0x2DB7F800;
  int v83 = (v82 >> 11) - ((2 * (v82 >> 11)) & 0x8C1EA08A) + 1175408709;
  HIDWORD(v82) = v83 ^ 0x60F5045;
  LODWORD(v82) = v83 ^ 0x40000000;
  int v84 = (v82 >> 29) - ((2 * (v82 >> 29)) & 0x7CBC7964) - 1101120334;
  HIDWORD(v82) = v84 ^ 0x5E3CB2;
  LODWORD(v82) = v84 ^ 0xBE000000;
  *(_DWORD *)(((4 * (v69 - 538162924)) | ((unint64_t)(v69 - 538162924 < 0x5FE43907) << 34))
            + *a60
            - 0x73FCE2C1FD5972D3) = (v82 >> 24) - 539127609 - ((2 * (v82 >> 24)) & 0xBFBB218E);
  return (*(uint64_t (**)(void))(v65 + 8 * ((29 * ((a2 - 834708174) < 0xE0)) ^ v67)))();
}

uint64_t sub_1001145F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v71 = ((v70 ^ 0x90C022A3) + (a49 + 104) - ((2 * (a49 + 104)) & 0x9C)) ^ 0x90C0224E;
  int v72 = *(&a68 + (((914 * v71) & 0xBF17E) + ((457 * v71) ^ 0x9F7DF8BF) + 1619397505) % 0x708);
  int v73 = *(_DWORD *)(v69 + 4
                        * ((1361 * (((2 * (v72 ^ 0x86)) & 0xFFFFFF1F) + (v72 ^ 0xFFB7DF19)) + 2143124797) % 0x12E0));
  unsigned int v74 = (2 * ((v73 ^ 0x19DD941) * (v73 ^ 0x19DD941) - ((2 * (v73 ^ 0x19DD941) * (v73 ^ 0x19DD941)) & 0x7A6ABD7E))
       - 93667970) ^ 0xFA6ABD7E;
  unsigned int v75 = (v74 - ((2 * v74) & 0x328065F0) - 1723845895) ^ v73;
  int v76 = HIBYTE(v75) ^ 0x4B;
  int v77 = BYTE2(v75) ^ 0xA2;
  int v78 = ((2 * (v75 ^ 0x75)) & 0x1AE) - (v75 ^ 0x75) - 1565688024;
  unsigned int v79 = (1743714629 - (BYTE1(v75) ^ 0xB7 | 0x67EEF945) + (BYTE1(v75) ^ 0xB7 | 0x981106BA)) ^ 0x1C1106BF;
  unsigned int v80 = ((914 * v77) & 0x14BFA) + ((457 * v77) ^ 0x6FFEA5FD) - 1878813373;
  int v81 = ((v78 & 0x15015 ^ 0x3D00011) + (v78 & 0xAFEA ^ 0x4202723) - 1) ^ 0x7F15875;
  uint64_t v82 = (((914 * v81) & 0xEBDED85E) + ((457 * v81) ^ 0x75EF6C2F) - 1978478831) % 0x708;
  unsigned int v83 = (v79 - ((2 * v79) & 0xD9B353B6) + 1826204123) ^ 0xE8D9A9C3;
  int v84 = *(&a68 + (((914 * v76) & 0x1BF6E) + ((457 * v76) ^ 0xCFDADFB7) + 807883905) % 0x708) ^ 0x4C;
  int v85 = *(&a68 + v80 % 0x708) ^ 0x4C;
  unsigned int v86 = (((v84 - ((2 * v84) & 0x99999999)) << 16) + 1321992192) ^ 0x4ECC0000;
  unsigned int v87 = (((v85 - ((2 * v85) & 0xFFFFFFEF)) << 8) - 170461440) ^ 0xF5D6F700;
  unsigned int v88 = (v87 - 1384870161 - ((2 * v87) & 0x5AE91C00)) ^ 0xAD748EEF | (v86 + 538835435 - ((2 * v86) & 0x403A0000)) ^ 0x201DF9EB;
  int v89 = *(&a68 + (((914 * v83) & 0xF5DE997E) + ((457 * v83) ^ 0x7AEF4CBF) - 2062356863) % 0x708);
  unsigned int v90 = (v88 - 333420215 - ((2 * v88) & 0x5840D292)) ^ 0xEC206949 | ((v89 ^ 0x4C) - 1588985342 - ((2 * v89) & 4)) ^ 0xA14A0202;
  int v91 = (((v90 + 124926 - ((2 * v90) & 0x3EE74)) << 8) + 998400) ^ 0x1F73A00;
  int v92 = (v91 + 256250697 - ((2 * v91) & 0x1E8C2600)) ^ 0xF461349 | ((*(&a68 + v82) ^ 0x4C)
                                                                  + 1901576646
                                                                  - ((2
                                                                    * (*(&a68 + v82) ^ 0x4C)) & 0x18C)) ^ 0x7157C1C6;
  unsigned int v93 = (v92 - 37447610 - ((2 * v92) & 0xFB89308C)) ^ a55;
  *((_DWORD *)&STACK[0x8E0] + (97 * a49 - 1907470744) % 0x55Cu) = (v93 ^ 0xFDC49846)
                                                                - 539127609
                                                                - 2 * ((v93 ^ 0xFDC49846) & 0x5FDD90CF ^ v93 & 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * ((730 * (a49 == 1879341463)) ^ v70)))(538835435, 4125006206, v82, 2062503103, 3957250142, 1743714629, (a49 + 1), a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100114AF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v61 - 0x73FCE2C239101DA3) = *(_DWORD *)(v60
                                                                 + 4
                                                                 * (((int)v61 * a1 + 41038193)
                                                                  % (v59 + 931)));
  return (*(uint64_t (**)(void))(v62 + 8 * ((122 * (v61 == 1859253742)) ^ v59)))();
}

uint64_t sub_100114B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((((v68 + 46) & 0x1E ^ 9) + a49)
       + 808719906
       - ((2 * (((v68 - 236456402) & 0xE180C1E ^ 0x409) + a49)) & 0x44)) ^ 0x30341622;
  int v72 = *(&a68 + (((914 * v71) & 0x7FFFE) - 2126512128 + ((457 * v71) ^ 0x7EC3FFFFu) + 1089) % 0x708);
  unsigned int v73 = ((v72 ^ 0x4C) - ((2 * (v72 ^ 0x4C)) & 0x84) + 1444787522) ^ *(_DWORD *)(v70
                                                                              + 4
                                                                              * ((1361
                                                                                * (2
                                                                                 * ((v72 ^ 0x38) & 0x3F)
                                                                                 + (v72 ^ 0x6EDB7B87u))
                                                                                - 1552320721)
                                                                               % 0x12E0));
  unsigned int v74 = (((2 * (BYTE1(v73) ^ 0x8D0100C1)) | 0xCE151D38) - (BYTE1(v73) ^ 0x8D0100C1) - 1728745116) ^ 0xEA0B8EDC;
  unsigned int v75 = ((914 * (HIBYTE(v73) ^ 0x19)) & 0x3BDFE) + ((457 * (HIBYTE(v73) ^ 0x19)) ^ 0xBBEBDEFF) + 1142316097;
  int v76 = BYTE2(v73) ^ 0x21;
  int v77 = (((2 * (v73 ^ 0x5C)) & 0x1A4) - (v73 ^ 0x5C) + 395112493) ^ 0x1ECE220F;
  unsigned int v78 = (v77 - ((2 * v77) & 0x8416BE) - 495252641) ^ 0xEB39D9DE;
  unsigned int v79 = ((914 * v78) & 0xCBABEEEE) + ((457 * v78) ^ 0x65D5F777);
  unsigned int v80 = (((914 * v74) & 0xFF27F176) + ((457 * v74) ^ 0xFF93F8BB) + 7225989) % 0x708;
  uint64_t v81 = (97 * a49 + 2061230201) % 0x55C;
  int v82 = *(&a68 + v75 % 0x708) ^ 0x4C;
  int v83 = *(&a68 + (((914 * v76) & 0x2ED54) + ((457 * v76) ^ 0xD5FF76AA) + 704824470) % 0x708) ^ 0x4C;
  int v84 = (((v82 - ((2 * v82) & 0x130)) << 16) + 1217921024) ^ 0x48980000;
  int v85 = (((v83 - 2 * (v83 & 7)) << 8) + 735053568) ^ 0x2BD00700;
  unsigned int v86 = (v85 - 139158570 - ((2 * v85) & 0x6F693600)) ^ 0xF7B49BD6 | (v84 - 1084725707 - ((2 * v84) & 0x7EB00000)) ^ 0xBF586635;
  int v87 = *(&a68 + v80) ^ 0x4C;
  unsigned int v88 = (v86 - 163325038 - ((2 * v86) & 0xEC87B724)) ^ 0xF643DB92 | (v87 - 739702299 - ((2 * v87) & 0x1CA)) ^ 0xD3E909E5;
  unsigned int v89 = (((v88 - ((2 * v88) & 0xFE6FFE)) << 8) - 13107456) ^ 0xFF37FF00;
  int v90 = (v89 + 980256466 - ((2 * v89) & 0x74DB0C00)) ^ 0x3A6D86D2 | *(&a68 + (v79 - 1708375095) % 0x708) ^ 0x4C;
  *((_DWORD *)&STACK[0x8E0] + v81) = a60 ^ 0x72721688 ^ (v90 - ((2 * v90) & 0xAF30B892) - 677880759);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((2527 * (a49 == 332974566)) ^ v68)))(4131642258, v81, 3555264997, 3210241589, 4280807798, a49, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100114FB0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * ((v59 ^ 0x3FFFFFFF9195CF72) + v61) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(a1
                                                                                                  + 4 * (v61 * v62 + 700181614 - ((((v61 * v62 + 700181614) * (unint64_t)v63) >> 32) >> 10) * v60));
  return (*(uint64_t (**)(void))(v64 + 8 * (((v61 == 1852458449) | ((v61 == 1852458449) << 6)) ^ v59)))();
}

uint64_t sub_100115034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = (((a50 + 71) & (v69 - 850)) + 2143405542 - ((2 * (a50 + 71)) & 0x1CC)) ^ 0x7FC1C5E6;
  unsigned int v73 = (((914 * v72) & 0x1F9DD6) + ((457 * v72) ^ 0xFD8FCEEB) + 41170261) % 0x708;
  unsigned int v74 = &a69;
  unsigned int v75 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (((2 * (v74[v73] ^ 0x33333333)) & 0xAE)
                     + (v74[v73] ^ 0x4FEF9F6Cu))
                    + 121285605)
                   % 0x12E0));
  unsigned int v76 = ((32 * ((BYTE2(v75) ^ 0x95) >> 4)) | 0xE292320F) - (BYTE2(v75) ^ 0x95);
  unsigned int v77 = ((v76 & 0xE00033DA ^ 0x90C01D2) + (v76 ^ 0xF0A33E0D) - ((v76 ^ 0xF0A33E0D) & 0x10010BDA)) ^ 0xEB3C37F6;
  __int16 v78 = ((2 * (v75 ^ 0x25)) & 0x19C) - (v75 ^ 0x25) - 30671;
  int v79 = ((v78 & 0x5AC ^ 0x305018D) + (v78 & 0xA53) - 1) ^ 0x30509BC;
  int v80 = ((BYTE1(v75) ^ 0xF2) + ((v75 >> 8) & 0xD1 ^ 0x201) - ((BYTE1(v75) ^ 0xF2) & 0xD1)) ^ 0x27F;
  int v81 = *(&a69
                         + (((914 * (HIBYTE(v75) ^ 0xCA)) & 0x2FFF0)
                          + ((457 * (HIBYTE(v75) ^ 0xCA)) ^ 0xFF7F7FF8)
                          + 8567624)
                         % 0x708);
  unsigned int v82 = (((914 * v79) & 0xAF3C4FDE) + ((457 * v79) ^ 0x579E27EF) - 1469836463) % 0x708;
  int v83 = *(&a69 + (((914 * v80) & 0xFF17E) + ((457 * v80) ^ 0x7E1FF8BFu) - 2115878271) % 0x708);
  int v84 = *(&a69 + (((914 * v77) & 0xDF2FB6FE) + ((457 * v77) ^ 0x6F97DB7F) - 1872076863) % 0x708);
  int v85 = (((v81 ^ 0x4C) - ((2 * (v81 ^ 0x4C)) & 0x84)) << 16) - 532545536;
  int v86 = ((((v84 ^ 0x4C) + 3816174 - ((2 * (v84 ^ 0x4C)) & 0x1C4)) << 8) - 3072) ^ 0x3A3AE200;
  unsigned int v87 = (v86 + 1482910374 - ((2 * v86) & 0x30C6D400)) ^ 0x58636AA6 | ((v85 ^ 0xE0420000)
                                                                    + 370762824
                                                                    - ((2 * v85) & 0x2C320000)) ^ 0x16196448;
  unsigned int v88 = (v87 - 539035008 - ((2 * v87) & 0xBFBDF500)) ^ 0xDFDEFA80 | ((v83 ^ 0x4C)
                                                                   - 1678439711
                                                                   - ((2 * (v83 ^ 0x4C)) & 0xFFFFFFC3)) ^ 0x9BF50AE1;
  int v89 = (((v88 + 428786 - ((2 * v88) & 0xD2B9A)) << 8) + 711424) ^ 0x695CD00;
  int v90 = (v89 + 669546707 - ((2 * v89) & 0x4FD0F000)) ^ 0x27E878D3 | ((v74[v82] ^ 0x4C)
                                                                   + 1057884239
                                                                   - ((2 * (v74[v82] ^ 0x4C)) & 0x9E)) ^ 0x3F0E084F;
  *((_DWORD *)&STACK[0x8E0] + (97 * a50 - 1683758361) % 0x55C) = a59 ^ 0xB7E1204A ^ (v90
                                                                                   - ((2 * v90) & 0xA430EBA0)
                                                                                   + 1377334736);
  int v91 = *(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((749 * (a50 == 1168586936)) ^ v69));
  return v91(v91, 2616527585, 370762824, a50, 50659725, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_1001154EC@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C0B8326A73) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v59
                                                                  + 2004061629
                                                                  - ((((v63 * v59
                                                                                                  + 2004061629)
                                                                                   * (unint64_t)v60) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((v63 != 245007906) | (16 * (v63 != 245007906)) | a1)))();
}

uint64_t sub_100115554@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v63 = (((a1 + 604885657) & 0x5BF22AFB ^ 0x534DE61) + (a43 + 113) - ((2 * (a43 + 113)) & 0x184)) ^ 0x534DCC2;
  int v64 = *(&a61 + (((914 * v63) & 0x1D0F6E) + ((457 * v63) ^ 0x7DDE87B7u) - 2111472503) % 0x708) ^ 0x3C;
  int v65 = *(_DWORD *)(v62 + 4 * ((1361 * (((2 * v64) & 0x1B6) + (v64 ^ 0xFEBBDDDB)) - 1149426451) % 0x12E0));
  HIDWORD(v66) = v65 ^ 0xEEAA;
  LODWORD(v66) = v65 ^ 0x3BD50000;
  int v67 = (v66 >> 16) - ((2 * (v66 >> 16)) & 0x693B2172) + 882741433;
  int v68 = ((16 * v67) & 0x3B897AE0 ^ 0x9890A80) + ((8 * v67) ^ 0x392838BE);
  unsigned int v69 = (v68 - ((2 * v68 + 1244552612) & 0x519AA440) - 840662795) ^ v67;
  unsigned int v70 = ((2 * HIBYTE(v69)) ^ 0x1FA) + (HIBYTE(v69) ^ 0xD7F9D702);
  unsigned int v71 = ((BYTE2(v69) ^ 0xF2) - ((2 * (BYTE2(v69) ^ 0xF2)) & 0x1A8) - 223778092) ^ 0xD2286AD5;
  int v72 = ((2 * (v69 ^ 0x20026AFC)) & 0xC4EC) - (v69 ^ 0x20026AFC) + 848988297;
  unsigned int v73 = (-1068364054 - (v71 | 0xC0520EEA) + (v71 | 0x3FADF115)) ^ 0x1F2CF1B7;
  unsigned int v74 = (v70 - ((2 * v70 + 1342984834) & 0xA5D31920) + 2062530001) ^ 0x52E98C90;
  unsigned int v75 = (335265256 - (BYTE1(v69) ^ 0x234032A9 | 0x13FBBDE8) + (BYTE1(v69) ^ 0x234032A9 | 0xEC044217)) ^ 0xCF447017;
  unsigned int v76 = (((914 * v75) & 0xFFDFB7CE) + ((457 * v75) ^ 0xFFEFDBE7) + 1204057) % 0x708;
  int v77 = *(&a61 + (((914 * v73) & 0x7FBD45D4) + ((457 * v73) ^ 0xBFDEA2EA) + 1076074582) % 0x708) ^ 0x4C;
  int v78 = *(&a61 + (((914 * v74) & 0x649AD778) + ((457 * v74) ^ 0xB24D6BBC) + 1303548996) % 0x708) ^ 0x4C;
  unsigned int v79 = (((v78 - ((2 * v78) & 0xFFFFFF8F)) << 16) + 566689792) ^ 0x21C70000;
  int v80 = (((v77 - ((2 * v77) & 0x1CC)) << 8) + 1162667520) ^ 0x454CE600;
  int v81 = *(&a61 + v76);
  unsigned int v82 = (v79 - 571902340 - ((2 * v79) & 0x3BD20000)) ^ 0xDDE9767C | (v80 + 2109369684 - ((2 * v80) & 0x7B74DA00)) ^ 0x7DBA6D54;
  uint64_t v83 = (2 * v81) & 0x126;
  int v84 = (v82 - 1450687301 - ((2 * v82) & 0x53108976)) ^ 0xA98844BB | ((v81 ^ 0x4C) + 14699667 - v83) ^ 0xE04C93;
  int v85 = *(&a61
                         + (((914 * (v72 ^ 0x1298E2A9)) & 0x3E9FFFBE)
                          + ((457 * (v72 ^ 0x1298E2A9)) ^ 0x7F4FFFDFu)
                          - 2135803039)
                         % 0x708);
  unsigned int v86 = (((v84 - ((2 * v84) & 0x5D29B4)) << 8) - 1365976576) ^ 0xAE94DA00;
  unsigned int v87 = (v86 - 909407465 - ((2 * v86) & 0x93971600)) ^ 0xC9CB8B17 | ((v85 ^ 0x4C)
                                                                   - 821556287
                                                                   - ((2 * (v85 ^ 0x4C)) & 0xFFFFFF83)) ^ 0xCF080BC1;
  *((_DWORD *)&STACK[0x8E0] + (97 * a43 + 1524613841) % 0x55Cu) = a52 ^ 0x1EC7A7A0 ^ (v87
                                                                                    - ((2 * v87) & 0x41988526)
                                                                                    - 1597226349);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((577 * (a43 == 1268344974)) | a1)))(3385559831, v83, 2844279995, 14699667, 2109369684, 4293909479, 1050673086, 2135949279, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_100115AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v71 - 0x73FCE2C181DAD8BBLL) = *(_DWORD *)(v70
                                                                 + 4
                                                                 * (v71 * v67
                                                                  + 1564317547
                                                                  - ((((v71 * v67
                                                                                                  + 1564317547)
                                                                                   * (unint64_t)v68) >> 32) >> 10)
                                                                  * v69));
  return (*(uint64_t (**)(void))(v72 + 8 * ((118 * (v71 != 1090823604)) ^ v66)))();
}

uint64_t sub_100115B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((a51 - 13) + 1873362 - ((2 * (a51 + 243)) & 0x1A4)) ^ 0x1C95D2;
  int v72 = *(&a68
                         + (((914 * v71) & 0x176A7E)
                          + ((v71 * ((v68 - 4457528) & 0x226DD59F ^ 0x2229D5C2)) ^ 0x6F8BB53F)
                          - 1871163647)
                         % 0x708) ^ 0x1D;
  int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * v72) & 0xFFFFFFEF) + (v72 ^ 0xFBEFFBF7)) - 1724680084) % 0x12E0));
  unsigned int v74 = (v73 ^ 0x3BD5EEAA) - 2 * (((v73 ^ 0x3BD5EEAA) + 734056026) & 0x5602D4BD ^ v73 & 1) + 29598486;
  int v75 = ((unsigned __int16)((v73 ^ 0xEEAA) - 2 * (((v73 ^ 0xEEAA) - 12710) & 0xD4BD ^ v73 & 1) - 23786) >> 8) ^ 0xF0;
  unsigned int v76 = ((914 * (HIBYTE(v74) ^ 0x5C)) & 0x3FF8A) + ((457 * (HIBYTE(v74) ^ 0x5C)) ^ 0x5F77FFC5) - 1601553541;
  unsigned int v77 = ((BYTE2(v74) ^ 0x19) - ((2 * (BYTE2(v74) ^ 0x19)) & 0xFFFFFFEF) + 757195511) ^ 0x2DABAAC7;
  unsigned int v78 = (v77 - ((2 * v77) & 0x10862C) - 497523946) ^ 0xE2D22B5A;
  LOWORD(v74) = ((2 * (v74 ^ 0x9A)) & 0xCCCC) - (v74 ^ 0x9A) - 5479;
  unsigned int v79 = (v74 & 0x3A6 ^ 0xB002E923) + (v74 & 0x59) - 1;
  int v80 = *(&a68 + v76 % 0x708) ^ 0x4C;
  int v81 = *(&a68 + (((914 * v78) & 0xF51FFFD0) + ((457 * v78) ^ 0x7A8FFFE8) - 2056111272) % 0x708) ^ 0x4C;
  int v82 = (((v80 - 2 * (v80 & 0x7F)) << 16) + 1199505408) ^ 0x477F0000;
  unsigned int v83 = (((v81 - ((2 * v81) & 0x180)) << 8) - 1624129536) ^ 0x9F31C000;
  unsigned int v84 = (v83 + 698352162 - ((2 * v83) & 0x53400400)) ^ 0x29A00222 | (v82 - 1843307422 - ((2 * v82) & 0x24420000)) ^ 0x92215C62;
  uint64_t v85 = (97 * a51 + 393236499) % 0x55Cu;
  int v86 = *(&a68
                         + (((914 * ((1129888276 - (v75 | 0x4358BA14) + (v75 | 0xBCA745EB)) ^ 0xBCA745A3)) & 0xFE2A7FAE)
                          + ((457 * ((1129888276 - (v75 | 0x4358BA14) + (v75 | 0xBCA745EB)) ^ 0xBCA745A3)) ^ 0xFF153FD7)
                          + 15530857)
                         % 0x708) ^ 0x4C;
  uint64_t v87 = (2 * v86) & 0x1C4;
  int v88 = (v84 + 938994734 - ((2 * v84) & 0x6FEFD85C)) ^ 0x37F7EC2E | (v86 + 254650082 - v87) ^ 0xF2DA6E2;
  int v89 = *(&a68
                         + (((914 * (v79 ^ 0xB002EB37)) & 0x6DB9DEDC)
                          + ((457 * (v79 ^ 0xB002EB37)) ^ 0x36DCEF6E)
                          - 920302638)
                         % 0x708);
  unsigned int v90 = (((v88 - ((2 * v88) & 0xCC93D2)) << 8) - 431363840) ^ 0xE649E900;
  unsigned int v91 = (v90 + 1191539386 - ((2 * v90) & 0x8E0AE400)) ^ 0x470572BA | ((v89 ^ 0x4C) - 129403472 - ((2 * v89) & 0x160)) ^ 0xF84975B0;
  *((_DWORD *)&STACK[0x8E0] + v85) = a59 ^ 0xD3A14CC ^ (v91 - ((2 * v91) & 0x65FA9058) - 1292023764);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((1400 * (a51 == 305892364)) ^ v68)))(v85, v87, 938994734, 254650082, 2952980771, (a51 + 1), a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100116008@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1066FC213) = *(_DWORD *)(a1
                                                                 + 4
                                                                 * (v63 * v60
                                                                  + 237439189
                                                                  - ((((v63 * v60 + 237439189)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * v62));
  uint64_t v65 = (((v59 - 573166537) | 0x128u) ^ 0x16BLL) + v63;
  BOOL v66 = ((v65 - v59) | (v59 - v65)) >= 0;
  return (*(uint64_t (**)(void))(v64 + 8 * ((2 * v66) | (32 * v66) | v59 ^ 0x2229D38F)))();
}

uint64_t sub_10011609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unsigned int a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = ((a51 + 89) - 986791221 - ((2 * (a51 + 89)) & 0x196)) ^ 0xC52EC2CB;
  int v71 = *(&a67
                         + (((914 * v70) & 0xEF7F6) + ((457 * v70) ^ (19 * (v67 ^ 0x17A) - 1409320245)) + 1409583173)
                         % 0x708);
  unsigned int v72 = ((v71 ^ 0x62) - ((2 * (v71 ^ 0x62)) & 0x170) - 695860552) ^ *(_DWORD *)(v69
                                                                              + 4
                                                                              * ((1361
                                                                                * (((2 * (v71 ^ 0xFFFFFFCF)) & 0xF8)
                                                                                 + (v71 ^ 0x2576BF32))
                                                                                - 741821366)
                                                                               % 0x12E0));
  unsigned int v73 = ((BYTE2(v72) ^ 0xD6) + (HIWORD(v72) & 0xA0 ^ 0xBB6F7820) - ((BYTE2(v72) ^ 0xD6) & 0xA0)) ^ 0x7B6D78B0;
  __int16 v74 = (BYTE1(v72) ^ 0xB8) - ((2 * (BYTE1(v72) ^ 0xB8)) & 0x9999) + 30924;
  int v75 = (((2 * v73) | 0x615010D8) - v73 + 1331165076) ^ 0x70AA0860;
  unsigned int v76 = ((v72 ^ 0xB9) - 787974009 - ((2 * (v72 ^ 0xB9)) & 0x17A) + 54) ^ 0xD1087887;
  unsigned int v77 = (457 * v76) ^ 0xF7F51EDF;
  unsigned int v78 = (914 * v76) & 0xEFEA3DBE;
  unsigned int v79 = ((v74 & 0x8BB ^ 0xE5A97021) + (v74 & 0x744 ^ 0x8020005) - 1) ^ 0xEDAB789B;
  int v80 = *(&a67
                         + (((914 * (HIBYTE(v72) ^ 0x63)) & 0x1FB7C)
                          + ((457 * (HIBYTE(v72) ^ 0x63)) ^ 0xDFFAFDBE)
                          + 537345410)
                         % 0x708);
  int v81 = (v80 ^ 0x4C) - ((2 * (v80 ^ 0x4C)) & 0x118);
  int v82 = *(&a67 + (((914 * v75) & 0x4DCFBFE8) + ((457 * v75) ^ 0xA6E7DFF4) + 1494899532) % 0x708) ^ 0x4C;
  unsigned int v83 = (((v82 - ((2 * v82) & 0xFFFFFF8F)) << 8) - 489109760) ^ 0xE2D8C700;
  unsigned int v84 = ((((v81 << 16) - 611581952) ^ 0xDB8C0000)
       + 2080037501
       - ((2 * (((v81 << 16) - 611581952) ^ 0xDB8C0000)) & 0x77F40000)) ^ 0x7BFADA7D | (v83
                                                                                      - 1184420284
                                                                                      - ((2 * v83) & 0x72CE5C00)) ^ 0xB9672E44;
  int v85 = *(&a67 + (((914 * v79) & 0xF5FFE79E) + ((457 * v79) ^ 0x7AFFF3CF) - 2063448207) % 0x708) ^ 0x4C;
  unsigned int v86 = 97 * a51 + 136755385;
  unsigned int v87 = (v84 - 1125383689 - ((2 * v84) & 0x79D803EE)) ^ 0xBCEC01F7 | (v85 - 1449738403 - ((2 * v85) & 0xBA)) ^ 0xA996BF5D;
  unsigned int v88 = (((v87 - ((2 * v87) & 0xF61034)) << 8) - 83355136) ^ 0xFB081A00;
  int v89 = *(&a67 + (v78 + v77 + 135076961) % 0x708) ^ 0x4C;
  unsigned int v90 = (v88 - 2132064889 - ((2 * v88) & 0x1D68A00)) ^ 0x80EB4587 | (v89 - 1737628850 - ((2 * v89) & 0x9C)) ^ 0x986DE34E;
  *((_DWORD *)&STACK[0x8E0] + v86 % 0x55C) = a59 ^ 0xF5E907A9 ^ (v90 - ((2 * v90) & 0x81016BBC) + 1082176990);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * ((187 * (a51 == 529926566)) ^ v67)))(2162902407, v86 / 0x55CuLL, 3169583607, 2845228893, a51, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_100116560@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * (((157 * (v59 ^ 0x132u)) ^ 0x3FFFFFFFDCDE8552) + v63) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(a1 + 4 * (v63 * v61 - 1337052492 - ((((v63 * v61 - 1337052492) * (unint64_t)v60) >> 32) >> 10) * v62));
  return (*(uint64_t (**)(void))(v64 + 8 * (((2 * (v63 == 589398475)) | (8 * (v63 == 589398475))) ^ v59)))();
}

uint64_t sub_1001165F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,unsigned int a52,uint64_t a53,uint64_t a54,int a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (((v69 + 216) ^ 0xFE895F6E) + (a52 - 92) - 2 * ((a52 + 164) & 0x7D ^ a52 & 1)) ^ 0xFE895D7C;
  unsigned int v73 = (((914 * v72) & 0x2EBCF79C) + ((457 * v72) ^ 0xD75E7BCE) + 681937010) % 0x708;
  unsigned int v74 = *(_DWORD *)(v71
                  + 4
                  * ((1361
                    * (2 * ((*(&a69 + v73) ^ 0xEE) & 0x7F)
                     + (*(&a69 + v73) ^ 0x7EE7CF11u))
                    + 1372063792)
                   % 0x12E0));
  int v75 = ((2 * (BYTE1(v74) ^ 0xFE)) | 0x25702AB2) - (BYTE1(v74) ^ 0xFE) + 1833429671;
  int v76 = (v74 & 0xA6 ^ 0x38A18407) + (v74 & 0x59) - 1;
  unsigned int v77 = (v76 & 0x30208405 ^ 0x86001201) + (v76 ^ 0x38F0CCA6) - ((v76 ^ 0x38F0CCA6) & 0x504805);
  unsigned int v78 = ((HIWORD(v74) & 0x27 ^ 0x84E9EE07) + (HIWORD(v74) & 0xD8 ^ 0xC9) - 1) ^ 0x1321EE37;
  int v79 = HIBYTE(v74) ^ 0xC8;
  uint64_t v80 = (457 * v79) ^ 0x65FFD7FCu;
  int v81 = (((2 * v78) & 0x29000048) - v78 - 882323493) ^ 0x5CA0CFFB;
  uint64_t v82 = (457 * v81) ^ 0xBDC1FE4E;
  unsigned int v83 = ((v75 & 0x100811B5 ^ 0xB80670B4) + (v75 & 0x2B0064A ^ 0xA08C43) - 1) ^ 0xAA1EE9B1;
  int v84 = *(&a69 + (((914 * v79) & 0x3AFF8) + v80 - 1711119548) % 0x708) ^ 0x4C;
  int v85 = *(&a69 + (((914 * v81) & 0x7B83FC9C) + v82 + 1111506162) % 0x708);
  int v86 = *(&a69
                         + (((914 * (v77 ^ 0xB6219623)) & 0x7E315DDE)
                          + ((457 * (v77 ^ 0xB6219623)) ^ 0x3F18AEEF)
                          - 1058436015)
                         % 0x708);
  int v87 = *(&a69 + (((914 * v83) & 0xFFFB73E6) + ((457 * v83) ^ 0xFFFDB9F3) + 295245) % 0x708);
  int v88 = (((v84 - ((2 * v84) & 0x16C)) << 16) + 1890975744) ^ 0x70B60000;
  unsigned int v89 = ((((v85 ^ 0x4C) - ((2 * (v85 ^ 0x4C)) & 0x6A)) << 8) - 111594240) ^ 0xF9593500;
  unsigned int v90 = (v89 - 112430904 - ((2 * v89) & 0x7298E000)) ^ 0xF94C70C8 | (v88 + 62283165 + (~(2 * v88) | 0xF893FFFF) + 1) ^ 0x3B65D9D;
  unsigned int v91 = (v90 + 775319548 - ((2 * v90) & 0x5C6CDFF8)) ^ 0x2E366FFC | ((v87 ^ 0x4C)
                                                                   + 1169499633
                                                                   - ((2 * (v87 ^ 0x4C)) & 0xFFFFFFE3)) ^ 0x45B525F1;
  unsigned int v92 = (((v91 - ((2 * v91) & 0xF0474A)) << 8) - 131881728) ^ 0xF823A500;
  unsigned int v93 = (v92 - 516926466 - ((2 * v92) & 0xC260A600)) ^ 0xE13053FE | ((v86 ^ 0x4C)
                                                                   + 939974218
                                                                   - ((2 * (v86 ^ 0x4C)) & 0x94)) ^ 0x3806DE4A;
  unsigned int v94 = a55 ^ 0xC08237C5 ^ (v93 - 1065207867 - ((2 * v93) & 0x81046F8A));
  *((_DWORD *)&STACK[0x8E0] + (97 * a52 + 2096897316) % 0x55C) = a59 ^ a60 ^ 0x8BDC1F21 ^ (v94
                                                                                         - ((2 * v94) & 0x1C7F0D38)
                                                                                         + 239044252);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((808 * (a52 == 1218167131)) ^ v69)))(4294818291, v82, v80, 2854152625, a52, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100116B08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v61 - 0x73FCE2C1791EA68BLL) = *(_DWORD *)(v60
                                                                 + 4
                                                                 * (((int)v61 * a1 + 823394167)
                                                                  % (v59 + 842)));
  return (*(uint64_t (**)(void))(v62 + 8 * ((175 * (v61 == 1054183976)) ^ v59)))();
}

uint64_t sub_100116B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (((a52 + 177) & (v69 ^ 0x242)) - 287630762 - ((2 * (a52 + 177)) & 0xAC)) ^ 0xEEDB1A56;
  int v73 = *(&a69 + (((914 * v72) & 0xFBB7E) + ((457 * v72) ^ 0x1FF7DDBF) - 536074623) % 0x708);
  unsigned int v74 = *(_DWORD *)(v71
                  + 4 * ((1361 * (((2 * (v73 ^ 0xFFFFFF83)) & 0x18A) + (v73 ^ 0x7FF7DF5E)) - 1422698069) % 0x12E0));
  unsigned int v75 = (((2 * (BYTE2(v74) ^ 0x4E)) & 0x90) - (BYTE2(v74) ^ 0x4E) - 137511241) ^ 0xE54DFB7A;
  unsigned int v76 = -2013401244 - (v75 | 0x87FDEF64) + (v75 | 0x7802109B);
  unsigned int v77 = ((BYTE1(v74) ^ 0x818080F7) + ((v74 >> 8) & 0xD9 ^ 0x5E6B2508) - ((BYTE1(v74) ^ 0x818080F7) & 0x808000D9)) ^ 0x5F6BA5B1;
  unsigned int v78 = ((914 * (HIBYTE(v74) ^ 0x66)) & 0x2B5DE) + ((457 * (HIBYTE(v74) ^ 0x66)) ^ 0xFB7F5AEF) + 75685969;
  unsigned int v79 = (((914 * (v74 ^ 0x1E)) & 0xBEE6)
       + ((457 * (v74 ^ 0x1E)) ^ 0x98F65F73)
       + 1728830413)
      % 0x708;
  int v80 = *(&a69 + v78 % 0x708);
  int v81 = *(&a69
                         + (((914 * (v76 ^ 0x6A8255BB)) & 0x1D7FE73E)
                          + ((457 * (v76 ^ 0x6A8255BB)) ^ 0xEBFF39F)
                          - 247314527)
                         % 0x708) ^ 0x4C;
  int v82 = ((((v80 ^ 0x4C) - 2 * (v80 & 3)) << 16) + 1208156160) ^ 0x48030000;
  int v83 = (((v81 - ((2 * v81) & 0x180)) << 8) + 1571995648) ^ 0x5DB2C000;
  unsigned int v84 = (v82 - 2125335496 - ((2 * v82) & 0x2A20000)) ^ 0x8151F438 | (v83 - 1719783614 - ((2 * v83) & 0x32FC5E00)) ^ 0x997E2F42;
  int v85 = *(&a69 + (((914 * v77) & 0x1DF3BE) + ((457 * v77) ^ 0x7F8EF9DF) - 2139930271) % 0x708) ^ 0x4C;
  uint64_t v86 = (2 * v85) & 0x10C;
  int v87 = (v84 - 386125511 - ((2 * v84) & 0xD1F86272)) ^ 0xE8FC3139 | (v85 + 1729089414 - v86) ^ 0x670FCF86;
  int v88 = *(&a69 + v79);
  unsigned int v89 = (((v87 - ((2 * v87) & 0x3AF5B4)) << 8) - 1652893184) ^ 0x9D7ADA00;
  unsigned int v90 = (v89 - 1076073016 - ((2 * v89) & 0x7FB8DA00)) ^ 0xBFDC6DC8 | ((v88 ^ 0x4C)
                                                                    - 1163928130
                                                                    - ((2 * (v88 ^ 0x4C)) & 0x17C)) ^ 0xBA9FDDBE;
  *((_DWORD *)&STACK[0x8E0] + (97 * a52 + 20725521) % 0x55C) = a60 ^ a61 ^ a59 ^ 0x894410C0 ^ (v90
                                                                                             - ((2 * v90) & 0x4F981A8A)
                                                                                             + 667684165);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((1834 * (a52 == 265454670)) ^ v69)))(v86, 3908841785, 1729089414, 2169631800, 2566283123, v78 / 0x708uLL, 4047652769, a52, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_100116FE0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * ((v62 ^ 0x3FFFFFFF92B83460) + v63) - 0x73FCE2C07DC88EB7) = *(_DWORD *)(v61
                                                                                                  + 4 * (v63 * a1 - 1748487197 - ((((v63 * a1 - 1748487197) * (unint64_t)v59) >> 32) >> 10) * v60));
  return (*(uint64_t (**)(void))(v64 + 8 * (int)((803 * (v63 == 1833424444)) ^ v62)))();
}

uint64_t sub_100117064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,unsigned int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,uint64_t a63)
{
  unsigned int v72 = (((v69 - 9) ^ 0xAC4F579C) + (a53 + 81) - ((2 * (a53 + 81)) & 0x6E)) ^ 0xAC4F5137;
  unsigned int v73 = (((914 * v72) & 0x3EFD4E) + ((457 * v72) ^ 0x59DF7EA7) - 1507555943) % 0x708;
  unsigned int v74 = &a69;
  int v75 = *(_DWORD *)(v71
                  + 4
                  * ((1361 * (((2 * ~v74[v73]) & 0x1C) + (v74[v73] ^ 0x5B7FFD30u))
                    - 1933364252)
                   % 0x12E0)) ^ 0x3BD5EEAA;
  unsigned int v76 = v75 - ((2 * v75 + 670994672) & 0x492E7D3C) + 2023130902;
  unsigned int v77 = (((2 * (BYTE1(v76) ^ 0x12)) & 0x1CC) - (BYTE1(v76) ^ 0x12) - 1670853863) ^ 0xDC6ACB19;
  int v78 = ((2 * (BYTE2(v76) ^ 0x49)) & 0x17C) - (BYTE2(v76) ^ 0x49) - 1723836351;
  unsigned int v79 = (1068681586 - (v77 | 0x3FB2C972) + (v77 | 0xC04D368D)) ^ 0x804F3606;
  unsigned int v80 = (2021986934 - (v76 ^ 0xC21040B8 | 0x78851276) + (v76 ^ 0xC21040B8 | 0x877AED89)) ^ 0x456AADFC;
  uint64_t v81 = (457 * v79) ^ 0xBA41F5EF;
  unsigned int v82 = ((v78 & 0x11000774 ^ 0x60820630) + (v78 ^ 0x9368E947) - ((v78 ^ 0x9368E947) & 0x283774)) ^ 0x7B828634;
  uint64_t v83 = (457 * v82) ^ 0x7DFF397A;
  unsigned int v84 = ((914 * (HIBYTE(v76) ^ 0x5D)) & 0x3BFFE) + ((457 * (HIBYTE(v76) ^ 0x5D)) ^ 0xF7FFDFFF) + 134372161;
  unsigned int v85 = (((914 * v80) & 0xFFDE9DFA) + ((457 * v80) ^ 0xFFEF4EFD) + 1240131) % 0x708;
  int v86 = *(&a69 + v84 % 0x708);
  int v87 = *(&a69 + (((914 * v82) & 0xFBFE72F4) + v83 - 2113732154) % 0x708);
  int v88 = ((((v86 ^ 0x4C) - ((2 * v86) & 0x40)) << 16) + 1797259264) ^ 0x6B200000;
  unsigned int v89 = ((((v87 ^ 0x4C) - ((2 * (v87 ^ 0x4C)) & 0x30)) << 8) - 666298368) ^ 0xD8491800;
  int v90 = (v89 + 1498213616 - ((2 * v89) & 0x3299D800)) ^ 0x594CECF0 | (v88 + 1644832750 - ((2 * v88) & 0x44140000)) ^ 0x620A27EE;
  int v91 = *(&a69 + (((914 * v79) & 0x7483EBDE) + v81 + 1170228561) % 0x708) ^ 0x4C;
  unsigned int v92 = (v90 - 1875812358 - ((2 * v90) & 0x2062BFF4)) ^ 0x90315FFA | (v91 + 451289160 - ((2 * v91) & 0x90)) ^ 0x1AE62048;
  unsigned int v93 = (((v92 - ((2 * v92) & 0x5850E8)) << 8) - 1406635008) ^ 0xAC287400;
  LODWORD(v74) = (v93 - 151168213 - ((2 * v93) & 0xEDFAB600)) ^ 0xF6FD5B2B | ((v74[v85] ^ 0x4C)
                                                                            - 110928598
                                                                            - ((2 * (v74[v85] ^ 0x4C)) & 0x54)) ^ 0xF9635D2A;
  *((_DWORD *)&STACK[0x8E0] + (97 * a53 + 471390385) % 0x55C) = a62 ^ (v74
                                                                     - ((2 * v74) & 0xFBB4ADDC)
                                                                     + 2111461102) ^ 0x76AC2F61;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * ((117 * (a53 == 570754734)) ^ v69)))(1498213616, v81, v83, 93, 2113878394, a53, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100117548@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C18EB6A32BLL) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  + 627788111
                                                                  - ((((v63 * v60 + 627788111)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * (((v63 == 1144756560) * ((23 * (v59 ^ 0x69D)) ^ 0x4AA)) ^ v59)))();
}

uint64_t sub_1001175C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  unsigned int v71 = ((a53 - 125) - 979520368 - (((83 * (v68 ^ 0x4DE)) ^ 0x6C) & (2 * (a53 + 131)))) ^ 0xC59DB490;
  int v72 = *(&a68 + (((914 * v71) & 0x1EF1F2) + ((457 * v71) ^ 0xAAFF78F9) + 1426361159) % 0x708) ^ 0x76;
  unsigned int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * v72) & 0x1B6) + (v72 ^ 0xE7FFB6DB)) - 1717377733) % 0x12E0));
  int v74 = (((2 * (BYTE1(v73) ^ 0xB2)) & 0xC8) - (BYTE1(v73) ^ 0xB2) + 10139) ^ 0x2742;
  unsigned int v75 = ((v73 ^ 0xC3) + (v73 & 0x7A ^ 0x7BC41738) - ((v73 ^ 0xC3) & 0x7A)) ^ 0xC2C51DF7;
  int v76 = HIBYTE(v73) ^ 0x44;
  unsigned int v77 = (BYTE2(v73) ^ 0x46 | 0xA5E4B963) - (BYTE2(v73) ^ 0x46 | 0x5A1B469C) + 1511736988;
  unsigned int v78 = ((v77 & 0x8000318D ^ 0x88023104) + (v77 ^ 0x60AC40C9) - ((v77 ^ 0x60AC40C9) & 0x880A318D)) ^ 0x4D42C89B;
  unsigned int v79 = (v75 - ((2 * v75) & 0x72000534) + 1023410842) ^ 0x8401089A;
  unsigned int v80 = ((914 * v79) & 0xDFDD9DD2) + ((457 * v79) ^ 0xEFEECEE9) + 269708375;
  int v81 = *(&a68 + (((914 * v76) & 0x1CCF4) + 215084 + ((457 * v76) ^ 0xFFFEE67A) + 3226) % 0x708) ^ 0x4C;
  int v82 = *(&a68 + (((914 * v78) & 0xBFEAEEFA) + ((457 * v78) ^ 0x5FF5777D) - 1609776189) % 0x708);
  unsigned int v83 = v80 % 0x708;
  int v84 = *(&a68 + (((914 * v74) & 0xFE7FE6) + ((457 * v74) ^ 0xDBFF3FF3) + 604175181) % 0x708);
  int v85 = (v82 ^ 0x4C) - ((2 * v82) & 0x44444444);
  unsigned int v86 = (((v81 - ((2 * v81) & 0xF4)) << 16) - 2122711040) ^ 0x817A0000;
  unsigned int v87 = ((((v85 << 8) + 1330848256) ^ 0x4F532200)
       + 758210519
       - ((2 * (((v85 << 8) + 1330848256) ^ 0x4F532200)) & 0x5A62BE00)) ^ 0x2D315FD7 | (v86
                                                                                      - 2141503146
                                                                                      - ((2 * v86) & 0xB60000)) ^ 0x805B4156;
  unsigned int v88 = (v87 + 1698606842 - ((2 * v87) & 0xCA7D5DF4)) ^ 0x653EAEFA | ((v84 ^ 0x4C)
                                                                    - 85028780
                                                                    - ((2 * (v84 ^ 0x4C)) & 0xA8)) ^ 0xFAEE9054;
  unsigned int v89 = (((v88 - ((2 * v88) & 0xB277FE)) << 8) - 650379520) ^ 0xD93BFF00;
  unsigned int v90 = (v89 - 716144521 - ((2 * v89) & 0xAAA10000)) ^ 0xD5508077 | ((*(&a68 + v83) ^ 0x4C)
                                                                   - 1546895644
                                                                   + (~(2 * (*(&a68 + v83) ^ 0x4C)) | 0xFFFFFE37)
                                                                   + 1) ^ 0xA3CC3EE4;
  *((_DWORD *)&STACK[0x8E0] + (97 * a53 - 1701809245) % 0x55Cu) = a63 ^ 0xF6E7FC39 ^ (v90
                                                                                    - ((2 * v90) & 0xEB981FD0)
                                                                                    - 171175960);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((471 * (a53 != 1832943228)) ^ v68)))(3578822775, 4209938516, 1698606842, 215084, (a53 + 1), 1511736988, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100117A8C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1DA4E6DE7) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  - 61840128
                                                                  - ((((v63 * v60 - 61840128)
                                                                                   * (unint64_t)v61) >> 32) >> 10)
                                                                  * a1));
  return (*(uint64_t (**)(void))(v64 + 8 * (((4 * (v63 != 1461812223)) | (32 * (v63 != 1461812223))) ^ v59)))();
}

uint64_t sub_100117AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,uint64_t a63)
{
  int v71 = (((v68 + 726) ^ 0x4AEE45F9) + (a54 - 65) - ((2 * (a54 + 191)) & 0x1B6)) ^ 0x4AEE41DB;
  int v72 = *(&a68 + (((914 * v71) & 0x13BF7DC) + ((457 * v71) ^ 0x679DFBEEu) - 1738143662) % 0x708);
  unsigned int v73 = *(_DWORD *)(v70 + 4 * ((1361 * (((2 * (v72 ^ 9)) & 0x15E) + (v72 ^ 0xF5CFFCB6)) + 697303487) % 0x12E0));
  unsigned int v74 = (-1135379446 - (BYTE2(v73) ^ 0x5E | 0xBC537C0A) + (BYTE2(v73) ^ 0x5E | 0x43AC83F5)) ^ 0x43AC831E;
  unsigned int v75 = (v73 ^ 0xCF | 0xC984AF22) - (v73 ^ 0xCF | 0x367B50DD) + 914051293;
  uint64_t v76 = (457 * v74) ^ 0x6F7F7BFA;
  unsigned int v77 = ((914 * (HIBYTE(v73) ^ 0x5F)) & 0x3BD74) + ((457 * (HIBYTE(v73) ^ 0x5F)) ^ 0x7BDDDEBA) - 2077991802;
  int v78 = BYTE1(v73) ^ 0x83;
  uint64_t v79 = (457 * v78) ^ 0xFD7E4AFB;
  unsigned int v80 = ((v75 & 0x8900B571 ^ 0x2A327500) + (v75 ^ 0xD185887B) - ((v75 ^ 0xD185887B) & 0xAB32F571)) ^ 0xB333D257;
  int v81 = *(&a68 + v77 % 0x708) ^ 0x4C;
  int v82 = *(&a68 + (((914 * v74) & 0xDEFEF7F4) + v76 - 1870479546) % 0x708) ^ 0x4C;
  int v83 = (((v81 - ((2 * v81) & 0x17A)) << 16) + 1606221824) ^ 0x5FBD0000;
  unsigned int v84 = (((v82 - ((2 * v82) & 0xFFFFFFCF)) << 8) + 539682560) ^ 0x202AE700;
  unsigned int v85 = (v84 + 2135652027 - ((2 * v84) & 0x3E96EC00)) ^ 0x7F4B76BB | (v83 - 610821348 - ((2 * v83) & 0x372E0000)) ^ 0xDB979B1C;
  int v86 = *(&a68 + (((914 * v78) & 0x95F6) + v79 + 42201157) % 0x708);
  int v87 = *(&a68 + (((914 * v80) & 0xC6BAE7FC) + ((457 * v80) ^ 0xE35D73FE) + 480560962) % 0x708);
  unsigned int v88 = (v85 - 1318602952 - ((2 * v85) & 0x62CF6E70)) ^ 0xB167B738 | ((v86 ^ 0x4C)
                                                                    + 1898238600
                                                                    - ((2 * (v86 ^ 0x4C)) & 0x11111111)) ^ 0x7124D288;
  int v89 = (((v88 - ((2 * v88) & 0xFE831A)) << 8) + 2135002368) ^ 0x7F418D00;
  unsigned int v90 = (v89 + 789470900 - ((2 * v89) & 0x5E1CBC00)) ^ 0x2F0E5EB4 | ((v87 ^ 0x4C)
                                                                   - 697038554
                                                                   - ((2 * (v87 ^ 0x4C)) & 0x4C)) ^ 0xD6740926;
  *((_DWORD *)&STACK[0x8E0] + (97 * a54 - 881105825) % 0x55Cu) = a61 ^ 0x8DC1AFA3 ^ (v90
                                                                                   - ((2 * v90) & 0x445137D6)
                                                                                   - 1574396949);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((1234 * (a54 == 1824482368)) ^ v68)))(789470900, 2976364344, 1898238600, 3684145948, 2135652027, v76, v79, 3814552574, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_100117F4C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1F9F24F4FLL) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (a1
                                                                  - 165
                                                                  + v63 * v59
                                                                  - 49633175
                                                                  - ((((a1
                                                                                                  - 165
                                                                                                  + v63 * v59
                                                                                                  - 49633175)
                                                                                   * (unint64_t)v60) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((118 * (v63 == 1594520409)) ^ a1)))();
}

uint64_t sub_100117FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,unsigned int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v71 = ((a55 + 123) + 1383323677 - ((2 * (a55 + 123)) & 0x3A)) ^ 0x5273D81D;
  unsigned int v72 = (((914 * v71) & 0x376BBE) + (v68 ^ 0xFF5BB6A2 ^ (457 * v71)) + 11030113) % 0x708;
  int v73 = *(_DWORD *)(v70
                  + 4
                  * ((1361
                    * (((2 * (*(&a68 + v72) ^ 0x13)) & 0xFFFFFFF7)
                     + (*(&a68 + v72) ^ 0x9CF9FDE8))
                    + 1929649354)
                   % 0x12E0));
  HIDWORD(v74) = v73 ^ 0x3D5EEAA;
  LODWORD(v74) = v73 ^ 0x38000000;
  unsigned int v75 = (v74 >> 27) - ((2 * (v74 >> 27)) & 0x2C81C10) - 2124149240;
  unsigned int v76 = (((2 * (BYTE1(v75) ^ 0xBE)) & 0x136) - (BYTE1(v75) ^ 0xBE) - 1195624604) ^ 0xFEF43764;
  unsigned int v77 = ((2 * (BYTE2(v75) ^ 0x4B)) & 0xAAAAAAAA) - (BYTE2(v75) ^ 0x4B) - 1337981270;
  unsigned int v78 = ((v77 & 0xA040019F ^ 0x5000015) + (v77 ^ 0xB0CA8FEA) - ((v77 ^ 0xB0CA8FEA) & 0x2099F)) ^ 0xA5C8800F;
  unsigned int v79 = (v76 - ((2 * v76) & 0x80802EB6) - 792357029) ^ 0x968D971D;
  int v80 = (2 * (((2 * v75) ^ 0x10) & 0x36 ^ (2 * (_BYTE)v75) & 2)
       - ((2 * v75) ^ 0x10)
       + 74) & 0x80;
  uint64_t v81 = v80 ^ 0xEFFEDF95;
  int v82 = (((v74 >> 27) - ((2 * (v74 >> 27)) & 0x10) + 8) ^ 0x1F6) + 2 * v80 + v81 + 268509291;
  int v83 = *(&a68
                         + (((914 * (HIBYTE(v75) ^ 0xE6)) & 0x1DB7A)
                          + ((457 * (HIBYTE(v75) ^ 0xE6)) ^ 0xFF6EEDBD)
                          + 9653635)
                         % 0x708) ^ 0x4C;
  int v84 = *(&a68 + (((914 * v78) & 0xF27E7FFC) + ((457 * v78) ^ 0x793F3FFE) - 2034042046) % 0x708) ^ 0x4C;
  unsigned int v85 = (((v83 - ((2 * v83) & 0xCCCCCCCC)) << 16) + 1097203712) ^ 0x41660000;
  int v86 = (((v84 - ((2 * v84) & 0x1C4)) << 8) + 1864688128) ^ 0x6F24E200;
  unsigned int v87 = (v86 - 1934465306 - ((2 * v86) & 0x1964CC00)) ^ 0x8CB266E6 | (v85 + 1793660153 - ((2 * v85) & 0x55D20000)) ^ 0x6AE914F9;
  int v88 = *(&a68 + (((914 * v79) & 0xEFBE8F5E) + 136508305 + ((457 * v79) ^ 0xF7DF47AF)) % 0x708) ^ 0x4C;
  int v89 = *(&a68 + (457 * (((2 * v82) & 0x57AEB7F2) + (v82 ^ 0xEBD75BF9)) - 57880449) % 0x708);
  int v90 = (v87 + 1024114459 - ((2 * v87) & 0x7A157E36)) ^ 0x3D0ABF1B | (v88 + 1461435148 - ((2 * v88) & 0x18)) ^ 0x571BBB0C;
  int v91 = ((v90 - ((2 * v90) & 0x95716E)) << 8) - 893864192;
  unsigned int v92 = ((v91 ^ 0xCAB8B700) + 1587916908 - ((2 * (v91 ^ 0xCAB8B700)) & 0xBD4B6000)) ^ 0x5EA5B06C | ((v89 ^ 0x4C)
                                                                                                  + 662840948
                                                                                                  - ((2 * (v89 ^ 0x4C)) & 0xE8)) ^ 0x27822674;
  *((_DWORD *)&STACK[0x8E0] + (97 * a55 + 1877949339) % 0x55C) = a65 ^ 0x582AB0A1 ^ (v92
                                                                                   - ((2 * v92) & 0x82FC4956)
                                                                                   + 1098785963);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 8 * ((224 * (a55 != 1264702340)) ^ v68)))(1587916908, 1793660153, 4285459901, v81, a55, 46668816, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1001184B4@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  *(_DWORD *)(*a59 + 4 * v63 - 0x73FCE2C1145A0067) = *(_DWORD *)(v62
                                                                 + 4
                                                                 * (v63 * v60
                                                                  - 1129055648
                                                                  - ((((v63 * v60
                                                                                                  - 1129055648)
                                                                                   * (unint64_t)a1) >> 32) >> 10)
                                                                  * v61));
  return (*(uint64_t (**)(void))(v64 + 8 * ((937 * (v63 + 7 * (v59 ^ 0x1E9u) == 631532709)) ^ v59)))();
}

uint64_t sub_100118534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,uint64_t a62,uint64_t a63)
{
  unsigned int v70 = ((((v67 - 26) ^ 0xAB) + a55)
       - 1981563544
       - ((2 * ((((v67 + 91529958) | 0x22005800) ^ 0x2774FCAB) + a55)) & 0xD0)) ^ 0x89E3BD68;
  int v71 = *(&a67 + (((914 * v70) & 0x1FDAFA) + ((457 * v70) ^ 0xF59FED7D) + 174331587) % 0x708);
  int v72 = v71 ^ 0x4C;
  unsigned int v73 = (*(_DWORD *)(v69
                   + 4 * ((1361 * (((2 * (v71 ^ 0xDDDDDDDD)) & 0x16C) + (v71 ^ 0xEBBDEB6A)) - 1280906710) % 0x12E0)) ^ 0x3BD5EEAA)
      + ((((v72 - ((2 * v72) & 0x16) - 32976373) ^ 0x1B6EC3A8) + 1) ^ 0x55F53BBF)
      + ((2 * (((v72 - ((2 * v72) & 0x16) - 32976373) ^ 0x1B6EC3A8) + 1)) & 0xABEA777E)
      - 1442134975;
  unsigned int v74 = v73 - ((2 * v73) & 0x6E010C52) - 1224702423;
  unsigned int v75 = ((v74 & 0xB2 ^ 0x27578803) + (v74 & 0x4D) - 1) ^ 0xEF9FB8AA;
  unsigned int v76 = ((2 * (BYTE2(v74) ^ 0xAD)) | 0x981D097C) - (BYTE2(v74) ^ 0xAD) - 1276019902;
  unsigned int v77 = ((v76 & 0x80C82A8 ^ 0x8204E2A9) + (v76 & 0x44020557) - 1) ^ 0xCE0A66BA;
  unsigned int v78 = (176968663 - (v75 | 0xA8C53D7) + (v75 | 0xF573AC28)) ^ 0x3DBB9C48;
  uint64_t v79 = (457 * v78) ^ 0xCF95F5F5;
  unsigned int v80 = (1871899100 - (BYTE1(v74) ^ 0x13087C88 | 0x6F92E9DC) + (BYTE1(v74) ^ 0x13087C88 | 0x906D1623)) ^ 0x83656A25;
  uint64_t v81 = (457 * v80) ^ 0x77AEEADF;
  unsigned int v82 = ((914 * v77) & 0x3F7FFE68) + ((457 * v77) ^ 0x9FBFFF34) + 1614953484;
  unsigned int v83 = ((914 * v78) & 0x9F2BEBEA) + v79 + 812401995;
  int v84 = *(&a67 + v82 % 0x708);
  int v85 = *(&a67
                         + (((914 * (HIBYTE(v74) ^ 0xF7)) & 0x3FFFC)
                          + ((457 * (HIBYTE(v74) ^ 0xF7)) ^ 0x7DFFFFFE)
                          - 2113782974)
                         % 0x708u) ^ 0x4C;
  int v86 = (((v85 - ((2 * v85) & 0x108)) << 16) + 830734336) ^ 0x31840000;
  unsigned int v87 = ((((v84 ^ 0x4C) - ((2 * v84) & 0x120)) << 8) - 376664064) ^ 0xE98C9000;
  unsigned int v88 = ((v86 + 1267932940 - ((2 * v86) & 0x17260000)) ^ 0x4B931F0C | (v87 - 2138490775 - ((2 * v87) & 0x1127000)) ^ 0x80893869)
      - 1943721623
      - ((2
        * ((v86 + 1267932940 - ((2 * v86) & 0x17260000)) ^ 0x4B931F0C | (v87 - 2138490775 - ((2 * v87) & 0x1127000)) ^ 0x80893869)) & 0x184A52D2);
  int v89 = *(&a67 + (((914 * v80) & 0xEF5DD5BE) + v81 - 2007805855) % 0x708) ^ 0x4C;
  unsigned int v90 = (v88 ^ 0x8C252969 | (v89 + 319489722 - ((2 * v89) & 0x174)) ^ 0x130B06BA)
      + 3300537
      - ((2 * (v88 ^ 0x8C252969 | (v89 + 319489722 - ((2 * v89) & 0x174)) ^ 0x130B06BA)) & 0x64CEE6);
  int v91 = *(&a67 + v83 % 0x708);
  unsigned int v92 = ((((v90 << 8) + 702976) ^ 0x32677300) + 14961793 - ((2 * (((v90 << 8) + 702976) ^ 0x32677300)) & 0x1C89800)) ^ 0xE44C81 | ((v91 ^ 0x4C) + 2055422457 - ((2 * (v91 ^ 0x4C)) & 0xFFFFFFF3)) ^ 0x7A8341F9;
  *((_DWORD *)&STACK[0x8E0] + (97 * a55 + 1984428007) % 0x55C) = a61 ^ 0xB69ED264 ^ (v92
                                                                                   - ((2 * v92) & 0xCB0B12B4)
                                                                                   - 444233382);
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 8 * (((4 * (a55 != 555156408)) | (8 * (a55 != 555156408))) ^ v67)))(14961793, 319489722, v82 / 0x708uLL, v79, v81, 4015904190, a55, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_100118A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v71 - 0x73FCE2C11B9C7D97) = *(_DWORD *)(v70
                                                                 + 4
                                                                 * (v71 * v68
                                                                  + 212634516
                                                                  - ((((v71 * v68 + 212634516)
                                                                                   * (unint64_t)v69) >> 32) >> 10)
                                                                  * v67));
  return (*(uint64_t (**)(void))(v72
                              + 8
                              * (int)(v66 ^ 0x2774FEEA ^ (2630
                                                        * (((61 * (v66 ^ 0xEB)) ^ (((v71 + 1 - v66) | (v66 - (v71 + 1))) < 0)) & 1)))))();
}

uint64_t sub_100118B08@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v63 = ((a49 - 117) + 1670447876 - ((2 * (a49 + 139)) & 8)) ^ 0x63910304;
  unsigned int v64 = (((914 * v63) & 0x7B9AFAE) + ((457 * v63) ^ 0x37DCD7D7u) - 936956823) % 0x708;
  unsigned int v65 = *(_DWORD *)(v62
                  + 4
                  * ((1361
                    * (((2 * (*(&a61 + v64) ^ 0xFFFFFFF9)) & 0x1B6)
                     + (*(&a61 + v64) ^ 0x4F97BE06))
                    - 626998424)
                   % 0x12E0));
  int v66 = (a1 - 330) * a49;
  unsigned int v67 = v66 + 1568815349;
  unsigned int v68 = ((v65 ^ 0xCA) - ((2 * (v65 ^ 0xCA)) & 0x8A) - 1719095739) ^ 0x93C637EF;
  unsigned int v69 = ((2 * (BYTE1(v65) ^ 0x920AE560)) | 0x249ACB6C) - (BYTE1(v65) ^ 0x920AE560) + 1840421450;
  int v70 = ((457 * (HIBYTE(v65) ^ 0x91)) ^ 0x4F7FFFFF) + 914 * (HIBYTE(v65) ^ 0x91);
  unsigned int v71 = (HIWORD(v65) & 0x2C) + (BYTE2(v65) ^ 0xFFFFFFFC) + (BYTE2(v65) | 0xB9E7F2D3) + 1;
  unsigned int v72 = (v71 & 0xB6D4F245 ^ 0x14102000) + (v71 & 0x492B0DBA ^ 0x92A0091);
  int v73 = ((v69 & 0x408FF40F ^ 0x408A7402) + (v69 ^ 0x25808D) - ((v69 ^ 0x25808D) & 0x408FF40F)) ^ 0x40EDF407;
  unsigned int v74 = v70 - 1333642431;
  unsigned int v75 = v66 + 63381327;
  unsigned int v76 = (-1996952315 - (v68 | 0x88F8ED05) + (v68 | 0x770712FA)) ^ 0x7D498BFB;
  uint64_t v77 = (914 * v73) & 0xBFFD7CDC;
  uint64_t v78 = (457 * v76) ^ 0x67EAFFFF;
  uint64_t v79 = (914 * v76) & 0xCFD5FFFE;
  uint64_t v80 = ((v75 % 0x55C) ^ 0x7FFF7E4E) - 642017796 + ((2 * (v75 % 0x55C)) & 0xC9C);
  unsigned int v81 = (v72 - 1) ^ 0xA4DDD245;
  if (v75 >= 0xFFFFFAA4) {
    unsigned int v82 = v67;
  }
  else {
    unsigned int v82 = ((v75 % 0x55C) ^ 0x7FFF7E4E) - 642017796 + ((2 * (v75 % 0x55C)) & 0xC9C);
  }
  int v83 = *(&a61 + v74 % 0x708) ^ 0x4C;
  int v84 = *(&a61 + (((914 * v81) & 0xFFF89E7A) + ((457 * v81) ^ 0xFFFC4F3D) + 388099) % 0x708) ^ 0x4C;
  unsigned int v85 = (((v83 - ((2 * v83) & 0x114)) << 16) - 745930752) ^ 0xD38A0000;
  unsigned int v86 = (((v84 - ((2 * v84) & 0xEC)) << 8) - 161909248) ^ 0xF6597600;
  unsigned int v87 = (v86 - 763339104 - ((2 * v86) & 0x2500BC00)) ^ 0xD2805EA0 | (v85 - 365053012 - ((2 * v85) & 0x547A0000)) ^ 0xEA3DBBAC;
  int v88 = *(&a61 + (v77 + ((457 * v73) ^ 0xDFFEBE6E) + 537099474) % 0x708) ^ 0x4C;
  unsigned int v89 = (v87 + 1946026591 - ((2 * v87) & 0x67FC04BE)) ^ 0x73FE025F | (v88 - 519183705 + (~(2 * v88) | 0xFFFFFEB1) + 1) ^ 0xE10DE2A7;
  unsigned int v90 = (((v89 + 12606839 - ((2 * v89) & 0x80BACC)) << 8) - 4352) ^ 0xC05D6600;
  int v91 = *(&a61 + ((int)v79 + (int)v78 - 1743307967) % 0x708u) ^ 0x4C;
  unsigned int v92 = (v90 + 623224051 - ((2 * v90) & 0x4A4B4800)) ^ 0x2525A4F3 | (v91 - 496350488 - ((2 * v91) & 0x1D0)) ^ 0xE26A4AE8;
  *((_DWORD *)&STACK[0x8E0] + v82 - 1505432650) = a57 ^ 0x1CA9A1C8 ^ (v92 - ((2 * v92) & 0x72E140F6) + 963682427);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * (a1 ^ (4 * (a49 == 353570932)))))(623224051, 3775783591, 1946026591, 3531628192, v78, v77, v79, v80, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100119028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v70 - 0x73FCE2C1D1CEB6ABLL) = *(_DWORD *)(v69
                                                                 + 4
                                                                 * (97 * v70
                                                                  - 899229329
                                                                  - ((((97 * v70 - 899229329)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v72
                              + 8
                              * ((1991
                                * (((v70 + (v66 - 1426165449) - 1639 - v66) | (v66
                                                                                           - (v70
                                                                                            + (v66 - 1426165449)
                                                                                            - 1639))) >= 0)) ^ (v71 + (int)v66 + 334))))();
}

uint64_t sub_1001190B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  int v64 = *(&a61
                         + ((((a49 - 47) * (((a1 + 60) | 3) - 789)) & 0x3FEFE)
                          + ((457 * (a49 - 47)) ^ 0xFBBDFF7F)
                          + 71697601)
                         % 0x708);
  unsigned int v65 = 1361 * (((2 * (v64 ^ 0xFFFFFFF1)) & 0x2E) + (v64 ^ 0xFFC7F746)) + 706755339;
  unsigned int v66 = ((2 * (v64 ^ 4)) & 0xFFFFFF7F) + (v64 ^ 0x7BD3E7BB);
  unsigned int v67 = (v66 - 867168193 + ((2 * v66 + 904) & 0x4F4 ^ 0x5F6FFFFF)) ^ *(_DWORD *)(v63 + 4 * (v65 % 0x12E0));
  int v68 = (((2 * (BYTE1(v67) ^ 0x2F)) & 0x5A) - (BYTE1(v67) ^ 0x2F) + 4562) ^ 0x11D8;
  int v69 = (((2 * (BYTE2(v67) ^ 0xCD082)) | 0x6FCE2532) - (BYTE2(v67) ^ 0xCD082) - 937890457) ^ 0x37EBC2FC;
  int v70 = HIBYTE(v67) ^ 0xB2;
  uint64_t v71 = (914 * v70) & 0x3C676;
  uint64_t v72 = (457 * v68) ^ 0x3EFDC37Fu;
  unsigned int v73 = ((v67 & 0x5D ^ 0x67C14F15) + (v67 & 0xA2 ^ 0xA1) - 1) ^ 0xA549477D;
  unsigned int v74 = (((2 * v73) | 0xEBDEAFF2) - v73 + 168863751) ^ 0x37675FF9;
  unsigned int v75 = ((914 * v74) & 0xFDDE7BFA) - 2129461949 + ((457 * v74) ^ 0x7EEF3DFD);
  unsigned int v76 = (((914 * v69) & 0xFE70AAB6) + ((457 * v69) ^ 0x7F38555B) - 2134252059) % 0x708;
  int v77 = *(&a61 + (v71 + ((457 * v70) ^ 0xD765E33B) + 681334789) % 0x708) ^ 0x4C;
  int v78 = *(&a61 + v76) ^ 0x4C;
  int v79 = (((v77 - ((2 * v77) & 0x19C)) << 16) + 701366272) ^ 0x29CE0000;
  unsigned int v80 = (((v78 - ((2 * v78) & 0x4E)) << 8) - 10410240) ^ 0xFF612700;
  unsigned int v81 = (v80 - 250203015 - ((2 * v80) & 0x622C6800)) ^ 0xF1163479 | (v79 - 1172111949 - ((2 * v79) & 0x74440000)) ^ 0xBA22FDB3;
  int v82 = *(&a61 + (((914 * v68) & 0x7B86FE) + v72 - 1056671807) % 0x708) ^ 0x4C;
  unsigned int v83 = (v81 + 688155845 - ((2 * v81) & 0x5208D98A)) ^ 0x29046CC5 | (v82 - 2092275569 - ((2 * v82) & 0xFFFFFF1F)) ^ 0x834A688F;
  int v84 = *(&a61 + v75 % 0x708);
  int v85 = (((v83 - ((2 * v83) & 0xFAD9BA)) << 8) + 2104286464) ^ 0x7D6CDD00;
  int v86 = (v85 + 645474418 - ((2 * v85) & 0x4CF25000)) ^ 0x26792872 | ((v84 ^ 0x4C)
                                                                   + 322605621
                                                                   - ((2 * (v84 ^ 0x4C)) & 0x6A)) ^ 0x133A9235;
  *((_DWORD *)&STACK[0x8E0] + (a49 * v61 + 1196364337) % 0x55C) = a54 ^ a53 ^ a55 ^ 0x93F7BFBD ^ (v86
                                                                                                - ((2 * v86) & 0xC8E75288)
                                                                                                - 462182076);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((432 * (a49 == 2068733230)) ^ a1)))(688155845, 3122855347, 2165505347, v71, 929521657, v72, 1056818047, a49, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_100119554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * v70 - 0x73FCE2C1DA0E2887) = *(_DWORD *)(v69
                                                                 + 4
                                                                 * (97 * v70
                                                                  + 40004440
                                                                  - ((((97 * v70 + 40004440)
                                                                                   * (unint64_t)v67) >> 32) >> 10)
                                                                  * v68));
  return (*(uint64_t (**)(void))(v71 + 8 * ((126 * (v70 != 1460762279)) ^ v66)))();
}

uint64_t sub_1001195C4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59,int a60,uint64_t a61,uint64_t a62,char a63)
{
  unsigned int v66 = (((a50 + 253) & (v63 - 1448)) - 146698432 - ((2 * (a50 + 253)) & 0x80)) ^ 0xF7418F40;
  int v67 = *(&a63 + (((914 * v66) & 0x1C7EF86) + ((457 * v66) ^ 0xCEE3F7C3) + 824183933) % 0x708);
  int v68 = (((v67 ^ 0x4C) - ((2 * (v67 ^ 0x4C)) & 0x7C) - 729250498) ^ 0x3B9E348D)
      + (*(_DWORD *)(v65
                   + 4 * ((1361 * (((2 * (v67 ^ 0x39)) & 0xFFFFFFF3) + (v67 ^ 0xC7DCEFC6)) + 1923510908) % 0x12E0)) ^ 0x3BD5EEAA);
  unsigned int v69 = v68 - ((2 * v68) & 0x7046D4E8) + 941845108;
  unsigned int v70 = (152853897 - (BYTE2(v69) ^ 0x4F | 0x91C5D89) + (BYTE2(v69) ^ 0x4F | 0xF6E3A276)) ^ 0x16C3A23E;
  int v71 = HIBYTE(v69) ^ 0x43;
  unsigned int v72 = (((2 * v70) & 0x20AFF1B6) - v70 + 1873282852) ^ 0x8F880711;
  uint64_t v73 = (457 * v72) ^ 0x7BDB6F7D;
  unsigned int v74 = (1767269915 - (BYTE1(v69) ^ 0x81 | 0x6956661B) + (BYTE1(v69) ^ 0x81 | 0x96A999E4)) ^ 0x96A99955;
  int v75 = ((2 * (v69 ^ 0xA)) & 0xEC) - (v69 ^ 0xA) - 1588022391;
  uint64_t v76 = (457 * v74) ^ 0x5BB4DFBF;
  uint64_t v77 = (((914 * v71) & 0x1EF0E) + ((457 * v71) ^ 0xAFFEF787) + 1342391225) % 0x708;
  unsigned int v78 = ((v75 & 0x2100999B ^ 0x200810) + (v75 ^ 0x6397B1AF) - ((v75 ^ 0x6397B1AF) & 0xC2C2199B)) ^ 0x212D9B9B;
  int v79 = *(&a63 + v77) ^ 0x4C;
  int v80 = *(&a63 + (((914 * v72) & 0xF7B6DEFA) + v73 - 2077832253) % 0x708) ^ 0x4C;
  int v81 = (((v79 - ((2 * v79) & 0x2A)) << 16) + 1981087744) ^ 0x76150000;
  int v82 = (((v80 + 5103790 - ((2 * v80) & 0x74)) << 8) + 101376) ^ 0x4DE23A00;
  int v83 = *(&a63 + (((914 * v78) & 0x5FE77FF2) + ((457 * v78) ^ 0x2FF3BFF9) - 804357305) % 0x708);
  unsigned int v84 = (v82 - 1575363579 - ((2 * v82) & 0x4433B800)) ^ 0xA219DC05 | (v81 + 2077179062 - ((2 * v81) & 0x779E0000)) ^ 0x7BCF3CB6;
  int v85 = *(&a63 + (((914 * v74) & 0xB769BF7E) + v76 - 1538434175) % 0x708);
  unsigned int v86 = (v84 - 2012606486 - ((2 * v84) & 0x10141FD4)) ^ 0x880A0FEA | ((v85 ^ 0x4C)
                                                                    + 562148033
                                                                    - ((2 * (v85 ^ 0x4C)) & 0xFFFFFF83)) ^ 0x2181B2C1;
  unsigned int v87 = (((((v86 + 4512727 - ((2 * v86) & 0x89B79E)) << 8) - 2048) ^ 0x44DBCF00)
       + 673692010
       - ((2 * ((((v86 + 4512727 - ((2 * v86) & 0x89B79E)) << 8) - 2048) ^ 0x44DBCF00)) & 0x504F7200)) ^ 0x2827B96A | ((v83 ^ 0x4C) + 697292198 + (~(2 * (v83 ^ 0x4C)) | 0xFFFFFEB3) + 1) ^ 0x298FD5A6;
  *((_DWORD *)&STACK[0x8E0] + (a50 * a1 - 1635113507) % 0x55C) = a60 ^ a57 ^ a58 ^ 0x2F56E5DE ^ (v87
                                                                                               - ((2 * v87) & 0x21E1076C)
                                                                                               + 284197814);
  int v88 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * ((3737 * (a50 == 105413122)) ^ v63));
  return v88(v88, v77, v73, 556637083, 3077160830, v76, 3267500443, a50, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_100119AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = v70 - ((2 * v70 + 947057592) & 0x6B01E674) - 776311530;
  *(_DWORD *)(*a66
            + 4 * ((v72 ^ 0x3FBFF9E8AB96165) + ((2 * (v72 ^ 0x3580F33A)) & 0x17E7324BELL))
            + 0x7C131EC4855127CDLL) = *(_DWORD *)(v66
                                                + 4
                                                * (((v69 + 175165856) & 0xF58F27F4 ^ 0x31C41048)
                                                 + 97 * v70
                                                 - ((((((v69 + 175165856) & 0xF58F27F4 ^ 0x31C41048)
                                                                   + 97 * v70)
                                                                  * (unint64_t)v67) >> 32) >> 10)
                                                 * v68));
  unsigned int v73 = ((2 * v72) ^ 0x6B01E674) - ((2 * ((2 * v72) ^ 0x6B01E674)) & 0xEAF62EF0) - 176482439;
  unsigned int v74 = (v72 ^ 0xCA7F04F7) + (v73 & 0xFFFFEF9A ^ 0x6F640D4) + ((2 * v73) & 0xE71A8F10 ^ 0xE2120E10) + 208844852;
  return (*(uint64_t (**)(void))(v71
                              + 8
                              * ((30 * (((2 * v74) & 0xE79FDEB6) + (v74 ^ 0x73CFEF5B) - 1943007067 < 0x100)) ^ v69)))();
}

uint64_t sub_100119C64@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  int v61 = byte_100286C20[(((4424 * ((((401 * (a1 ^ 0xE2)) ^ 0xB8019C2E) + 25) ^ 0xB8019F0C)) & 0x5FEFBBE8)
                                       + ((2212 * ((((401 * (a1 ^ 0xE2)) ^ 0xB8019C2E) + 25) ^ 0xB8019F0C)) ^ 0xAFF7DDF5)
                                       + 1346716215)
                                      % 0x97F] ^ 0x30;
  unsigned int v62 = 23 * v61 - ((46 * v61) & 0xFFFFFFA2) + 81;
  int v63 = *(&a60
                         + (457
                          * (((2 * (v62 ^ 0x52 ^ (v62 >> 3) & 9)) & 0xF6)
                           + (v62 ^ 0x52 ^ (v62 >> 3) & 9 ^ 0xFEFF7E7B))
                          - 907447891)
                         % 0x708) ^ 0x4C;
  unsigned int v64 = (v63 - 1418784915 - ((2 * v63) & 0xDA)) ^ 0xAB6F0F6D | (((a29 + 1868824780) & 0xFFFFFF00)
                                                              - ((2 * (a29 + 1868824780)) & 0xBCD6AA00)
                                                              + 1584092456) ^ 0x5E6B5528;
  *((_DWORD *)&STACK[0x8E0] + (1399347521 * v60 + 1702243935) % 0x55Cu) = v64 - 539127609 - ((2 * v64) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))*(&off_1002E1F70 + a1))(218, 1702243935, 3205573259, 1372, &STACK[0x8E0]);
}

void sub_100119E88()
{
}

uint64_t sub_100119E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * a7 - 0x73FCE2C127F12A7BLL) = *((_DWORD *)&STACK[0x8E0]
                                                      + ((v66 ^ 0xE1A3C2D9) + 97 * a7) % 0x55C);
  return (*(uint64_t (**)(void))(v67 + 8 * (((2 * (a7 == 713699620)) | ((a7 == 713699620) << 6)) ^ v66)))();
}

uint64_t sub_100119F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = *(&a67 + ((((v67 ^ 0x47) + 980) ^ 0x3BF7F8CFu) - 1005845430) % 0x708);
  int v73 = byte_100286C20[(2212 * (((2 * (v72 ^ 0x31)) & 0xFFFFFFF7) + (v72 ^ 0x7EBDB7CA)) - 524924108)
                                      % 0x97F];
  HIDWORD(v74) = v73 ^ 0x30;
  LODWORD(v74) = v73 << 24;
  LOBYTE(v73) = ((v74 >> 31) - ((2 * (v74 >> 31)) & 0x46) + 35) ^ (((v74 >> 31)
                                                                                   - ((2 * (v74 >> 31)) & 0x46)
                                                                                   + 35) >> 6) ^ (((v74 >> 31) - ((2 * (v74 >> 31)) & 0x46) + 35) >> 4) ^ 0x21;
  unsigned int v75 = (v73 + 1400702979 - 2 * (v73 & 3)) ^ 0x537D0803 | ((((a37 & 0xCE8B200 ^ 0x840B26B | a37 & 0xF3174D00)
                                                                            - 1) ^ 0x45861D19)
                                                                          - 1) ^ 0x5B13ED72;
  *(_DWORD *)(v71
            + 4
            * (557676257 * v68
             + 1739977919
             - ((((557676257 * v68 + 1739977919) * (unint64_t)v69) >> 32) >> 10)
             * v70)) = (v75 - ((2 * v75) & 0x25990736) - 1832090725) ^ 0x4D1113E9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (v67 ^ 0x47)))(1465642797, 1400702979, 33);
}

void sub_10011A11C()
{
}

uint64_t sub_10011A124(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * ((a4 ^ 0x3FFFFFFFFF4DC529) + v66) - 0x73FCE2C07DC88EB7) = *((_DWORD *)&STACK[0x8E0]
                                                                                       + (97 * (int)v66 - 1133385636)
                                                                                       % 0x55Cu);
  return (*(uint64_t (**)(void))(v67 + 8 * (int)((3885 * (v66 == 11684643)) ^ a4)))();
}

uint64_t sub_10011A1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(&a67 + (457 * v67 - 35283429) % 0x708u) = *(&a67
                                              + (457
                                               * ((((v68 - 2001186910) & 0x7747ADBF ^ 0x545) & (2
                                                                                              * (*(&a67 + (457 * v67 - 35283429) % 0x708u) ^ 0x4C)))
                                                + (*(&a67 + (457 * v67 - 35283429) % 0x708u) ^ 0x778BFFBBu))
                                               - 1759587239)
                                              % 0x708);
  int v70 = *(uint64_t (**)(void))(v69 + 8 * ((60 * (v67 == 827117692)) ^ v68));
  *(&a67 + (457 * v67 - 35162781) % 0x708u) = *(&a67
                                              + (457
                                               * (((2
                                                  * (*(&a67 + (457 * v67 - 35162781) % 0x708u) ^ 0x44)) & 0xFFFFFFEF)
                                                + (*(&a67 + (457 * v67 - 35162781) % 0x708u) ^ 0x76E7CEBB))
                                               - 1137589167)
                                              % 0x708);
  return v70();
}

uint64_t sub_10011A2E4@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v5
           + a1 * v1
           + 1260917811
           - ((((a1 * v1 + 1260917811) * (unint64_t)v2) >> 32) >> 10) * v3) = *(unsigned char *)(v5 + a1 * v1 + 1261155451 - ((((a1 * v1 + 1261155451) * (unint64_t)v2) >> 32) >> 10) * v3);
  return (*(uint64_t (**)(void))(v6 + 8 * ((26 * (a1 + 1 != (v4 ^ 0xF3) + 260389325)) ^ v4)))();
}

uint64_t sub_10011A358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = (v68 - 1110) | 0x44C;
  int v70 = *(&a68 + (1028 * (v69 ^ 0x44Cu) + 144184) % 0x708) ^ 0x4C;
  unsigned int v71 = (v70 - 1404176571 + (~(2 * v70) | 0xFFFFFF75) + 1) ^ 0xAC4DF745 | (((1781104450 - a37) & 0xFFFFFF00)
                                                                         - ((2 * (1781104450 - a37)) & 0x7110C800)
                                                                         + (v69 ^ 0xB88860D3)) ^ 0xB888649D;
  LODWORD(STACK[0x8E0]) = v71 - 539127609 - ((2 * v71) & 0xBFBB218E);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (v69 ^ 0x16)))(524152557, 2443359173, 1800, &a68, 76, 4294967157, 177010029, 3205573259);
}

void sub_10011A4A8()
{
}

uint64_t sub_10011A4B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  HIDWORD(v62) = v60 + 89068783;
  LODWORD(v62) = v60 - 45148945;
  int v63 = a1 + (v62 >> 27) - (((v62 >> 27) << (v59 - 7)) & 0xC739C7AE) + 23;
  HIDWORD(v62) = v63 ^ 0xFFFFFFF7;
  LODWORD(v62) = v63 ^ a1;
  int v64 = ((2 * (v62 >> 5)) & 0xF3596CB6) + ((v62 >> 5) ^ 0x79ACB65B);
  *(_DWORD *)(((4 * (v64 - 2105408)) | ((unint64_t)((v64 - 2105408) < 0x798C961B) << 34))
            + *a59
            - 0x73FCE2C263FAE723) = *((_DWORD *)&STACK[0x8E0] + (97 * v60 - 84510245) % 0x55Cu);
  return (*(uint64_t (**)(void))(v61 + 8 * ((39 * ((v64 - 2041362318) > 0xFF)) ^ v59)))();
}

uint64_t sub_10011A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v74 = (v72 + 1186372963) & 0xB9495BF7;
  unsigned int v75 = ((LOBYTE(STACK[0x380]) ^ 0x4C) - 796694848 - ((2 * (LOBYTE(STACK[0x380]) ^ 0x4C)) & 0x180)) ^ 0xD08366C0 | (((v74 ^ 0xFFFFFE9C) + (a38 & 0x829C5800 ^ 0x141859)) | a38 & 0x7D63A700) ^ 0xFF7CF558;
  *(_DWORD *)(v71
            + 4
            * (1502118999 * v68
             + 323345161
             - ((((1502118999 * v68 + 323345161) * (unint64_t)v69) >> 32) >> 10)
             * v70)) = v75 - 539127609 - ((2 * v75) & 0xBFBB218E);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v73 + 8 * (int)(v74 ^ 0x12)))(457, 323345161, 726648049, 2443359173, 1800, &a68, 1435837123, 76);
}

void sub_10011A704()
{
}

uint64_t sub_10011A70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)(*a66 + 4 * (((382 * (v67 ^ 0x161u)) ^ 0x3FFFFFFFAA6AE38DLL) + a7) - 0x73FCE2C07DC88EB7) = *((_DWORD *)&STACK[0x8E0] + (97 * (int)a7 - 1837247459) % 0x55Cu);
  return (*(uint64_t (**)(void))(v68 + 8 * ((800 * (a7 + 1 == v66 + 256)) ^ v67)))();
}

uint64_t sub_10011A7A8@<X0>(uint64_t a1@<X7>, int a2@<W8>, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60)
{
  *a5 = 867373565;
  int v66 = *(unsigned __int8 *)(v65
                           + (((4424 * ((408924592 - (((v63 ^ 0x5F2) - 1454) & 0x3C3CF400)) ^ 0x185FB15A)) & 0xFE77F8)
                            + ((2212 * ((408924592 - (((v63 ^ 0x5F2) - 1454) & 0x3C3CF400)) ^ 0x185FB15A)) ^ 0xB47F3BFF)
                            + 1270140889)
                           % 0x97F);
  unsigned int v67 = (((2 * (v66 ^ 0x38)) & 0xF4) + (v66 ^ 0xFDFEB746)) * a2 - 1032000398;
  *(_DWORD *)(v62 + 4 * (v67 - (((v67 * (unint64_t)v60) >> 32) >> 10) * v61)) = *(_DWORD *)(*a60 + a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64
                                                                       + 8
                                                                       * ((42
                                                                         * ((v63 ^ 0x2714C44Eu) + 2021437166 > 0x9F9174A1)) ^ v63 ^ 0x5F2)))(272, 657137094, 2350513918, 194);
}

void sub_10011A95C()
{
}

uint64_t sub_10011A968@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  int v73 = (((((a5 - 1291) | a1) - 532) & (a64 - 1364300014)) + v69 - ((a62 + 1566367268) & 0x1E)) ^ v69;
  unsigned int v74 = ((v73 * a4) & 0x3FDFC) + ((v73 * a6) ^ a3) + v72;
  *(_DWORD *)(((4 * (a64 - 1364300072)) | ((unint64_t)(a64 - 1364300072 < a2) << 34)) + *a65 + v70) = *(_DWORD *)(v67 + 4 * (v74 - (((v74 * (unint64_t)v65) >> 32) >> 10) * v66));
  BOOL v76 = a64 + 2021694568 < v68 || a64 + 2021694823 <= (a64 + 2021694568);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v76 * v71) ^ (a5 - 1422))))();
}

void sub_10011AA40()
{
}

uint64_t sub_10011AA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(void))(v66
                              + 8
                              * (((((v65 - 711) | 0x2B0) + 765) * ((a65 - 1219898733) < 0x2FC69581)) ^ v65)))();
}

void sub_10011AA9C()
{
}

uint64_t sub_10011AAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t result = (*(uint64_t (**)())(v6 + 8 * (v7 ^ 0xAD2)))();
  *(_DWORD *)(v10 + 8) = a6;
  return result;
}

uint64_t sub_10011AB24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7 = (qword_10031E668 - qword_10031E688) ^ (unint64_t)&v15;
  qword_10031E688 = 431200057 * v7 - 0x76B82A39AB17D7D3;
  qword_10031E668 = 431200057 * (v7 ^ 0xA5F8A63A3EE64495);
  v10[0] = sub_100239FB8;
  v10[1] = a1;
  int v11 = a3;
  _DWORD v10[2] = a2;
  v10[3] = a4;
  uint64_t v12 = a5;
  uint64_t v13 = a6;
  uint64_t v14 = a7;
  unsigned int v16 = (230600693
       * ((((&vars0 - 32) | 0x4099155E) - ((&vars0 - 32) & 0x4099155E)) ^ 0x92A59375)) ^ 0x54F58F50;
  LOBYTE(v7) = 57 * ((qword_10031E668 - (57 * v7 + 45)) ^ 0x95);
  char v8 = byte_100296C50[byte_100296B50[v7] ^ 0x1E];
  unint64_t v17 = v10;
  ((void (*)(unsigned int *))*(&off_1002E1F70 + (v7 ^ v8) + 1927))(&v16);
  return v18;
}

void sub_10011AC74(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 928048777 * (((a1 | 0x634B8ECF) - (a1 | 0x9CB47130) - 1665896144) ^ 0x4557FBA2);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10011AD4C()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xA83)))(152, 0x10300401EA5018FLL) != 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 - 613) | 0x94) ^ 0xFFFFFB55) + ((v0 - 1394377399) & 0x531C84F7)) * v2) ^ v0)))();
}

uint64_t sub_10011ADC8(uint64_t a1)
{
  *(_DWORD *)a1 = 2023518720;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(void *)(a1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(a1 + 72) = 1649474516;
  *(_WORD *)(a1 + 92) = 13854;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(_DWORD *)(a1 + 96) = 68414646;
  *(void *)(a1 + 120) = 0x7E422C649661EC57;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 1664814209;
  return (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0x8F6)))();
}

uint64_t sub_10011AEB8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * (((v2 == v1) ^ ((v0 ^ 0x61) + 10)) & 1)) & 0xEF | (16 * (((v2 == v1) ^ ((v0 ^ 0x361) - 1014)) & 1))) ^ v0)))();
}

uint64_t sub_10011AEEC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((*(void *)(v1 - 0x7E422C649661EC4FLL) == 0) ^ (a1 - 38)) & 1)
                                * (((a1 + 148) | 8) + 92)) ^ a1)))();
}

uint64_t sub_10011AF3C()
{
  unsigned int v3 = v0 ^ 0xEC9E6246;
  (*(void (**)(void))(v2 + 8 * (int)(v0 ^ 0xEC9E6BE5)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(void *)(v1 - 0x7E422C649661EC3FLL) == 0) ^ (v3 + 90)) & 1)
                                     * ((v3 ^ 0x56A) - 1231)) ^ v3)))();
}

uint64_t sub_10011AFA4()
{
  (*(void (**)(void))(v2 + 8 * (v3 + 839)))();
  (*(void (**)(uint64_t))(v2 + 8 * (v3 + 839)))(v1 - 0x7E422C649661EC57);
  *(void *)(v0 + 120) = 0x7E422C649661EC57;
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v3 ^ 0xCC2)))(40, 0x1010040725982CDLL) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v3 + 44) ^ v4) & 1) * ((v3 + 335) ^ 0x604)) ^ (v3 - 279))))();
}

uint64_t sub_10011B0A4(uint64_t *a1)
{
  int v6 = v4 + 555;
  int v7 = *(_DWORD *)(v1 + 20) + v2;
  *a1 = *(void *)(v1 + 40) ^ v2;
  a1[1] = 0;
  a1[3] = 0;
  uint64_t v8 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v6 ^ 0xF37)))((v7 - 1067439884), 1174015124);
  a1[1] = v8;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v6 - 1) ^ (v8 == 0)) & 1)
                                     * (((v6 + 1347095021) & 0xAFB4EFDC) - 184)) | v6)))();
}

uint64_t sub_10011B134()
{
  *(_DWORD *)(v0 + 16) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((152
                                * ((v2 | ((unint64_t)(v2 < ((v3 - 1519053139) & 0x5A8AE7D8u)
                                                                              + 1067438452) << 32)) == 1067439884)) ^ (v3 - 736))))();
}

uint64_t sub_10011B1D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  BOOL v10 = v3 < v2;
  char v11 = *(unsigned char *)(v5 + *(void *)(v8 + 32) - 0x46CAA1F943420962);
  *(unsigned char *)(v6 + a1 - 0xE12EB7A184A0BF8) = v11 + ((-52 * (a2 ^ 0x30)) ^ 0xF2) - ((2 * v11) & 0xD4);
  if (v10 == v7 - 0x75FCE2784E5EFC13 < v2) {
    BOOL v10 = v7 - 0x75FCE2784E5EFC13 < v3;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v10 * v4) ^ a2)))();
}

uint64_t sub_10011B288()
{
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v4 ^ 0xDBD)))(*(_DWORD *)(v0 + 28) ^ v2 ^ ((v4 - 1233) | 0x210) ^ (((v4 + 1014343239) & 0xC38A54FC) - 1997148268), 80338550);
  *(void *)(v1 + 24) = v5;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * (v5 == 0)) | ((v5 == 0) << 6)) ^ v4)))();
}

uint64_t sub_10011B30C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v2 + 1637778914) & 0x9E617F77) + ((v2 + 179) ^ 0xFFFFFB8D)) * (v0 != 0)) ^ v2)))();
}

uint64_t sub_10011B350()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((251 * (((v0 + 625) | 0xE7) ^ 0x4E2)) ^ 0x4F4) * (*(void *)(v1 + 8) == 0)) ^ v0)))();
}

void sub_10011B394(int a1@<W8>)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10011B5AC()
{
  int v4 = (v0 - 1591959322) & 0x5EE35DDE;
  (*(void (**)(void))(v3 + 8 * (v0 + 1559)))();
  (*(void (**)(uint64_t))(v3 + 8 * (v4 ^ 0x8F2u)))(v2);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((86 * (((*(void *)(v1 + 48) == 0) ^ ((v4 + 80) ^ (v4 + 89))) & 1)) ^ (v4 + 1370))))();
}

uint64_t sub_10011B644@<X0>(int a1@<W8>)
{
  int v3 = 2 * (a1 ^ 0x79D);
  uint64_t v4 = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0xE02)))();
  *(void *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 56) = -1279805853;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((235
                                              * (((5 * (v3 ^ 0x45)) ^ (*(void *)(v1 + 64) == 0x228E0CD37FCCF1ACLL)) & 1)) ^ v3)))(v4);
}

uint64_t sub_10011B6BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 ^ 0xB4C)))(a1 - 0x228E0CD37FCCF1ACLL);
  *(void *)(v1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(v1 + 72) = 1649474516;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((((v2 + 117) & 0xEB) + 20) ^ (*(void *)(v1 + 120) == 0x7E422C649661EC57)) & 1)
                                              * (((v2 - 494564235) & 0x1D7A75EB ^ 0x26) - 1478)) ^ (v2 - 494564235) & 0x1D7A75EB)))(v4);
}

uint64_t sub_10011B7DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((a1 & 0x7953C6AB) + 411320628) & 0xE77BBFEF ^ 0xFFFFFAB5)
                                      + (a1 & 0x7953C6AB)
                                      + 1174)
                                     * (v2 == v1)) ^ a1 & 0x7953C6AB)))();
}

uint64_t sub_10011B82C()
{
  *(void *)(v0 + 120) = 0x7E422C649661EC57;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((503 * (v1 ^ 0x3A4)) ^ 0x4FB ^ (*(void *)(v0 + 104) == 0)) & 1) == 0)
                                * ((503 * (v1 ^ 0x3A4) - 702) ^ 0x32D)) ^ (503 * (v1 ^ 0x3A4)))))();
}

uint64_t sub_10011BAA4()
{
  int v3 = (v0 - 498207656) & 0x1DB2099E;
  (*(void (**)(void))(v2 + 8 * (v0 + 1287)))();
  *(void *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 112) = 1494274718;
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(v1 + 136) == 0) * (v3 + 35 + v3 + 392 - 904)) ^ v3)))();
}

void sub_10011BB0C()
{
  _DWORD *v0 = 2023518720;
  (*(void (**)(_DWORD *))(v2 + 8 * (v1 + 1416)))(v0);
  JUMPOUT(0x10011BB30);
}

void sub_10011BB50(uint64_t a1)
{
  int v1 = 1189216979 * ((2 * (a1 & 0xB5105BF) - a1 - 189859264) ^ 0xDA45F686);
  int v2 = *(_DWORD *)a1 ^ v1;
  if (*(void *)(a1 + 16)) {
    BOOL v3 = *(_DWORD *)(a1 + 8) - v1 == 1080579747;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10011BC28()
{
  uint64_t v3 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v1 ^ 0xB80)))(((((v1 + 151) | 0x200) - 1612) & (v2 - 1080579732) ^ 0x57BFDFDF)+ ((2 * (v2 - 1080579732)) & 0xAF7FBFA0)- 1472192461, 1766098721);
  STACK[0x478] = v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v3 != 0) | ((v3 != 0) << 6)) ^ v1)))();
}

uint64_t sub_10011BCB8(unsigned char *a1)
{
  STACK[0x420] = (unint64_t)a1;
  *a1 = 1;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((932
                                              * ((v3 | ((unint64_t)(v3 < v1) << 32)) - 679690685 != (v2 - 623) + 400888752)) ^ (v2 + 589))))(0x2529CB7575BFAA0FLL);
}

uint64_t sub_10011BD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  BOOL v12 = v5 < v6;
  *(unsigned char *)(v9 + a2 - 0x3E00B48F098C3E71) = *(unsigned char *)(v8 + v10 - 0x2753AE28DD8E3DF2);
  unint64_t v13 = a1 - 0x2529CB755DDA9528;
  uint64_t v14 = a1 + 1;
  int v15 = v12 ^ (v13 < a3 + v4);
  BOOL v16 = v13 < v5;
  if (!v15) {
    BOOL v12 = v16;
  }
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((v12 * v7) ^ v3)))(v14);
}

uint64_t sub_10011BDF8@<X0>(unint64_t a1@<X4>, unint64_t a2@<X5>, int a3@<W8>)
{
  STACK[0x400] = v6;
  LODWORD(STACK[0x41C]) = v5;
  STACK[0x428] = v4;
  STACK[0x408] = a1;
  STACK[0x410] = a2;
  *(unsigned char *)(a2 + a1 - 0x217F59977FC75E46) = 0x80;
  return (*(uint64_t (**)(void))(v7 + 8 * ((15 * (v3 - 280166708 >= (a3 ^ 0x739u) + 2147482096)) ^ a3)))();
}

uint64_t sub_10011BE74@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v3 + v2 + v1 + 1545) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((15 * (((a1 + 1241) ^ v2) + v1 > 0x7FFFFFFE)) ^ a1)))();
}

uint64_t sub_10011BEB4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((355 * (dword_10031E65C == ((7 * (v0 ^ 0x646)) ^ 0x525B8796))) ^ v0)))();
}

uint64_t sub_10011BF04()
{
  int v2 = (*(uint64_t (**)(void, unint64_t *))(v1 + 8 * (v0 ^ 0x968)))(0, &STACK[0x494]);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((735
                               * (((v0 + 2145335551) & (2 * v2)) + (v2 ^ 0x3FEF9D7F) == 15 * (v0 ^ 0x1BA) + 1072666996)) ^ v0)))();
}

uint64_t sub_10011BF88()
{
  strcpy((char *)(v1 - 215), "com_apple_driver_FairPlayIOKit");
  BOOL v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1159)))(v1 - 215) != 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)((v3 * ((v0 + 561) ^ 0x7D8 ^ (v0 + 319111148) & 0xECFABDFB)) ^ v0)))();
}

uint64_t sub_10011C03C(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(v2 + 8 * (v1 + 1653)))(LODWORD(STACK[0x494]), a1, &STACK[0x430]);
  BOOL v4 = ((2 * v3) & 0xBBFE5FFE) + (v3 ^ 0x5DFF2FFF) != ((v1 - 491) | 0x634) + 1577003459;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((4 * v4) | (8 * v4) | v1)))();
}

uint64_t sub_10011C0B4()
{
  int v2 = v0 + 1380;
  int v3 = (*(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0xF3B)))(LODWORD(STACK[0x430]));
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((227
                               * (((v2 ^ 0x7B1BFE91 ^ (266 * (v2 ^ 0x751))) & (2 * v3)) + (v3 ^ 0xBD8DFFFD) != -1114767363)) ^ v2)))();
}

uint64_t sub_10011C134@<X0>(int a1@<W8>)
{
  int v3 = (*(uint64_t (**)(void, void, void, unint64_t *))(v1 + 8 * (v2 ^ 0x8E2)))(a1 + (v2 ^ 0x683u) + 1114765767, mach_task_self_, 0, &STACK[0x448]);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((1715 * (((2 * v3) & 0xFEFD6FFC) + (v3 ^ 0xFF7EB7FE) == -8472578)) ^ v2)))();
}

uint64_t sub_10011C1BC()
{
  *(_DWORD *)(v4 + 1628) = ((v2 + 1407157678) ^ LODWORD(STACK[0x448]))
                         + ((2 * LODWORD(STACK[0x448])) & 0xA7BF0CDA)
                         - 25427972;
  (*(void (**)(uint64_t))(v0 + 8 * ((v2 + 1405) ^ 0xE41)))(v1);
  uint64_t v5 = ((uint64_t (*)(void))*(&off_1002E1F70 + ((v2 + 1405) ^ 0xE41)))(LODWORD(STACK[0x430]));
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((47 * (*(_DWORD *)(v4 + 1628) == ((v2 - 28985664) & 0x1BA4DAC ^ v3))) ^ (v2 + 1360))))(v5);
}

uint64_t sub_10011C284(uint64_t a1)
{
  unint64_t v4 = STACK[0x420] + 2;
  LODWORD(STACK[0x5E0]) = 0;
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t *))(v3
                                                                                  + 8
                                                                                  * (((v1 - 1226)
                                                                                    * ((v2 | ((unint64_t)(v2 < 0x511B57D6) << 32)) != 1360746454)) ^ v1)))(a1, v4, &STACK[0x5E0]);
}

uint64_t sub_10011C318(uint64_t a1, uint64_t a2)
{
  BOOL v10 = v4 < v3;
  *(unsigned char *)(v6 + v8 - 0x204076AA34B3326CLL) = *(unsigned char *)(v5 + a2 - 0x76E5A03120A00CD8);
  if (v10 == v7 - 0x2F0A3A7D32AA70F9 < v3) {
    BOOL v10 = v7 - 0x2F0A3A7D32AA70F9 < v4;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((98 * v10) ^ v2)))();
}

uint64_t sub_10011C3AC@<X0>(unint64_t a1@<X1>, unint64_t a2@<X2>, int a3@<W8>)
{
  STACK[0x3F8] = a1;
  LODWORD(STACK[0xDB4]) = v5 - v3 - 739 + v4;
  STACK[0x548] = 2008;
  uint64_t v7 = (a3 - 1381729897);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t *))(v6 + 8 * (v5 + 1394));
  STACK[0x3F0] = a2;
  BOOL v9 = v8(v7, 34, a2, 2008, a2, &STACK[0x548]) == v5 - 739;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((1949 * v9) ^ v5)))();
}

uint64_t sub_10011C42C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v2 + ((v0 - v2 - 1781) | 0x630) + 870) ^ v0 ^ (1887
                                                                               * (((LODWORD(STACK[0xDB4]) - v1 - v0) | (v0 - (LODWORD(STACK[0xDB4]) - v1))) >= 0)))))();
}

uint64_t sub_10011C480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v4
                                                                       + 8
                                                                       * (int)((14
                                                                              * (v3 + 1599546412 != (a3 ^ 0xB0727B03))) | a3)))(a1, a2, STACK[0x3F8]);
}

uint64_t sub_10011C53C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  BOOL v9 = v3 < v2;
  *(unsigned char *)(v5 + a1 - 0x2A495A22A80A49D8) = *(unsigned char *)(v4 + v7 - 0x56A4AB65C6D482FLL);
  if (v9 == v6 - 0x8133F152AE30F4DLL < v2) {
    BOOL v9 = v6 - 0x8133F152AE30F4DLL < v3;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v9 * ((a2 + 1722211437) & 0x99591EDB ^ 0x244)) | a2)))();
}

uint64_t sub_10011C5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0x4C0] = 0x7BB775407D70C8E2;
  int v8 = 230600693 * ((v6 - 152) ^ 0xD23C862B);
  *(_DWORD *)(v6 - 124) = (v3 ^ 0xB794E351) - v8 + ((v5 - 173022050) & (2 * v3) ^ (v5 - 1870258690)) + 2013195452;
  unint64_t v9 = STACK[0x420];
  *(void *)(v6 - 144) = a3 + v4;
  *(void *)(v6 - 136) = v9;
  *(_DWORD *)(v6 - 152) = (v5 - 387) ^ v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v5 + 1543)))(v6 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((47 * (*(_DWORD *)(v6 - 128) == 0)) ^ v5)))(v10);
}

uint64_t sub_10011C6B4()
{
  STACK[0x560] = 1;
  BOOL v2 = (*(uint64_t (**)(void, const char *, unint64_t *))(v1 + 8 * (v0 + 1579)))(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x560]) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((((((v0 - 26) ^ v2) & 1) == 0) * ((v0 + 1503315378) & 0xA6653E3F ^ 0x639)) ^ (v0 + 153))))();
}

uint64_t sub_10011C734()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 | 0x100) ^ 0x364) + 1712) ^ 0x167 ^ (19 * ((v0 | 0x100) ^ 0x364)))
                                * (STACK[0x560] == 1)) ^ (v0 | 0x100))))();
}

uint64_t sub_10011C77C()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xF75)))(v1);
  BOOL v4 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_1002E1F70 + v0 + 289))((((v0 ^ 0x4D9u) + 607 + 0x649AB9CBBD5FD8D3) ^ v3) + ((2 * v3) & 0xC93573977ABFBE1ELL) - 0x649AB9CBBD5FDEF1, 3185216350) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v4 | (16 * v4)) ^ v0)))();
}

uint64_t sub_10011C82C()
{
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xE12)))(v1);
  uint64_t result = ((uint64_t (*)())*(&off_1002E1F70 + (v0 ^ 0xE12)))();
  *(_DWORD *)(v4 + 4) = -42908;
  return result;
}

uint64_t sub_10011E7AC()
{
  uint64_t v1 = (const float *)&xmmword_10031DC90;
  int8x16_t v2 = (int8x16_t)vld1q_dup_f32(v1);
  int v3 = LODWORD(STACK[0x41C]) - 92;
  v4.i64[0] = 0x8000000080000000;
  v4.i64[1] = 0x8000000080000000;
  v5.i64[0] = 0x100000001;
  v5.i64[1] = 0x100000001;
  v0.i64[0] = *(void *)((char *)&xmmword_10031DC90 + 4);
  v0.i32[2] = HIDWORD(xmmword_10031DC90);
  int8x16_t v6 = vextq_s8(v2, v0, 0xCuLL);
  int8x16_t v7 = v0;
  v7.i32[3] = dword_10031DCA0[0];
  int8x16_t v8 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v6, v4), vdupq_n_s32(0x95BD1EF9));
  int32x4_t v9 = (int32x4_t)veorq_s8(vandq_s8(v7, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xA01EC64F));
  int8x16_t v10 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), (int8x16_t)vdupq_n_s32(0xB1772202)), v9), vdupq_n_s32(0xA7446EFE));
  int32x4_t v11 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x50C74406u)), (int8x16_t)vdupq_n_s32(0x40454401u)), (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0xAF38BBF8)), (int8x16_t)vdupq_n_s32(0x25202041u))), v5), vandq_s8(v8, v4)), (int8x16_t)vdupq_n_s32(0x68E6C40Eu));
  v12.i32[0] = *((_DWORD *)&STACK[0x598] + (DWORD1(xmmword_10031DC90) & (v3 ^ 0x5E1u)));
  v12.i32[1] = *((_DWORD *)&STACK[0x598] + (BYTE8(xmmword_10031DC90) & 1));
  v12.i32[2] = *((_DWORD *)&STACK[0x598] + (BYTE12(xmmword_10031DC90) & 1));
  v12.i32[3] = *((_DWORD *)&STACK[0x598] + (dword_10031DCA0[0] & 1));
  xmmword_10031DC90 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031E2C4, v12), (int8x16_t)vdupq_n_s32(0x4DF06F9Fu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v11, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0xBF541A06))), vdupq_n_s32(0xDFAA0D03)), 1uLL));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v3))();
}

uint64_t sub_10011E998@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, int a5@<W8>)
{
  int8x16_t v7 = (unsigned int *)(a2 + 4 * (v6 + a3));
  unsigned int v8 = a5 - 905300471 + (v5 & 0x80000000) - 877469229;
  uint64_t v9 = v6 + 1;
  int v10 = *(_DWORD *)(a2 + 4 * (v9 + a3));
  unsigned int v11 = ((2 * (v10 & 0x7FFFFFFE ^ 0xA01EC64F)) & 0xB1772202) - (v10 & 0x7FFFFFFE ^ 0xA01EC64F) - 1488687362;
  unsigned int v12 = (((v11 & 0x50C74406 ^ 0x40454401) + (v11 & 0xAF38BBF8 ^ 0x25202041) - 2) | v8 & 0x80000000) ^ 0x68E6C40E;
  *int8x16_t v7 = v7[397] ^ *((_DWORD *)&STACK[0x598] + (v10 & 1)) ^ ((v12 - ((2 * v12) & 0xBF541A06) - 542503677) >> 1) ^ 0x4DF06F9F;
  return (*(uint64_t (**)(void))(a1 + 8 * ((59 * (v9 != a4 + 3)) ^ a5)))();
}

uint64_t sub_10011EAAC(uint64_t a1, uint64_t a2, uint64_t a3, int8x16_t *a4)
{
  int v7 = (v5 + 905299962) | 0x97;
  unsigned int v8 = (const float *)&a4[56].i32[3];
  int8x16_t v9 = (int8x16_t)vld1q_dup_f32(v8);
  v10.i64[0] = 0x8000000080000000;
  v10.i64[1] = 0x8000000080000000;
  int32x4_t v11 = vdupq_n_s32(0x50ACF547u);
  v12.i64[0] = -1;
  v12.i64[1] = -1;
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  v6.i64[0] = a4[57].i64[0];
  v6.i32[2] = a4[57].i32[2];
  int8x16_t v14 = vextq_s8(v9, v6, 0xCuLL);
  int8x16_t v15 = v6;
  v15.i32[3] = a4[57].i32[3];
  int8x16_t v16 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v14, v10), vdupq_n_s32(0xB048335B)), (int8x16_t)vdupq_n_s32(0x3EB7DD8Du)), vdupq_n_s32(0xBDB6DC17));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x272FD3DAu));
  int8x16_t v18 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0xAF530AB8)), (int32x4_t)vorrq_s8(v17, (int8x16_t)v11)), v11);
  int32x4_t v19 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(veorq_s8(vandq_s8(v18, (int8x16_t)vdupq_n_s32(0x19EFBB5Eu)), (int8x16_t)vdupq_n_s32(0x18EA2843u)), vandq_s8(v18, (int8x16_t)vdupq_n_s32(0xE61044A0))), v12), (int8x16_t)vdupq_n_s32(0x9A4FF9DE));
  v20.i32[0] = *(_DWORD *)(v4 + 4 * (a4[57].i32[0] & 1));
  v20.i32[1] = *(_DWORD *)(v4 + 4 * (a4[57].i32[1] & 1));
  v20.i32[2] = *(_DWORD *)(v4 + 4 * (a4[57].i32[2] & 1));
  v20.i32[3] = *(_DWORD *)(v4 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)((char *)a4 + 4 * (v7 - 810) - 1704) = veorq_s8(veorq_s8(veorq_s8(*a4, v20), (int8x16_t)vdupq_n_s32(0x6DF6B964u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v19, vandq_s8(v16, v13)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x3F4F41E8u))), vdupq_n_s32(0x9FA7A0F4)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * v7))();
}

void sub_10011EC70()
{
}

uint64_t sub_10011EC7C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  int v2 = (-478670807
      - ((14 * (a2 ^ 0x2FF)) ^ 0x3221D18E ^ xmmword_10031DC90 & 0x7FFFFFFE | 0xE3781029)
      + ((14 * (a2 ^ 0x2FF)) ^ 0x3221D18E ^ xmmword_10031DC90 & 0x7FFFFFFE | 0x1C87EFD6)) ^ 0x4CFEB92;
  unsigned int v3 = (((v2 << ((3 * (a2 ^ 0x99)) ^ 0x3D)) & 0x64363AA0) - v2 - 840637777) ^ 0xED5439A7;
  dword_10031E64C = dword_10031E2C0 ^ *((_DWORD *)&STACK[0x598] + (xmmword_10031DC90 & 1)) ^ (((v3 | ~dword_10031E64C & 0x80000000)
                                                                                             - ((2 * v3) & 0x3077797A)
                                                                                             - 1740915523) >> 1) ^ 0x6E38B740;
  return (*(uint64_t (**)(void))(a1 + 8 * ((45 * (LODWORD(STACK[0x514]) > 0x26F)) ^ a2)))();
}

uint64_t sub_10011ED90()
{
  LODWORD(STACK[0x514]) = 0;
  int v2 = v0;
  int v3 = LODWORD(STACK[0x514])++;
  dword_10031E658 = v3 + 340121380;
  uint64_t v4 = (*(_DWORD *)aHr + 504018905);
  unint64_t v5 = 516615401
     * ((0x641260299975D211
       - ((v1 - 152) ^ 0x44954548B8C9ED11 | 0x641260299975D211)
       + ((v1 - 152) ^ 0x44954548B8C9ED11 | 0x9BED9FD6668A2DEELL)) ^ 0x57C452E5AD20C6CDLL);
  *(_DWORD *)(v1 - 152) = v5;
  *(void *)(v1 - 144) = v4 - v5;
  *(_DWORD *)(v1 - 132) = (v2 - 564507341) ^ v5;
  *(void *)(v1 - 128) = v5 ^ 0x7E5D2002;
  *(_DWORD *)(v1 - 116) = (v2 - 185257397) ^ v5;
  *(_DWORD *)(v1 - 112) = v5 + v2 - 564507341 - 84;
  *(_DWORD *)(v1 - 120) = ((v2 - 564507341) ^ 0x4A) + v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v2 ^ 0xE79)))(v1 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v1 - 136)))(v6);
}

uint64_t sub_10011EED0()
{
  int v1 = LODWORD(STACK[0x41C]) - 535;
  if (v0 >= 0x7E5D2002) {
    int v2 = *(_DWORD *)aHr + 1;
  }
  else {
    int v2 = 1616013353;
  }
  *(_DWORD *)aHr = v2;
  return sub_1001484F4(STACK[0x3D0], (uint64_t)&unk_10026B3E0, (uint64_t)&unk_10026B3B0, (uint64_t)&unk_100286A80, 0xE9FE122F, v1);
}

uint64_t sub_10011F050()
{
  unint64_t v3 = STACK[0x420] + 3;
  STACK[0x338] = STACK[0x4C0];
  LODWORD(STACK[0x544]) = -1741588327;
  STACK[0x408] = v3;
  if (v3) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = v0 == -604659854;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((152 * v5) ^ v1)))();
}

uint64_t sub_10011F0AC@<X0>(int a1@<W8>)
{
  int v4 = v1 ^ 0x110;
  int v5 = (char *)&STACK[0x5A0] + STACK[0x338] + (v1 ^ 0x84488ABF828F3537);
  STACK[0x3D8] = (unint64_t)(v5 + 255);
  STACK[0x348] = (unint64_t)(v5 + 510);
  STACK[0x3E0] = (unint64_t)v5;
  STACK[0x3A8] = (unint64_t)(v5 + 528);
  return (*(uint64_t (**)(void, uint64_t, unint64_t, uint64_t))(v3
                                                                               + 8
                                                                               * (int)(((((((v4 + 117) & 0xD7) - 69) ^ ((a1 - 1816283062) > 0xD131EF37uLL)) & 1)
                                                                                      * ((((v4 + 1164288885) & 0xBA9A59D7)
                                                                                        + 580) ^ 0x301)) ^ (v4 + 1164288885) & 0xBA9A59D7)))((v2 + a1 - 1456910838), qword_10031EE68, dword_10031EC60 & 0xFFFFFFFFF413B3F8, 296520604);
}

uint64_t sub_10011F1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v12 = a6 - v8;
  int8x16_t v13 = (unsigned __int8 *)(v10 + a4 + v6);
  unsigned int v14 = ((*(_DWORD *)(a2 + a3) ^ v13) & ((a6 - v8) ^ 0x7FFFFC86)) * v9;
  unint64_t v15 = (v14 ^ HIWORD(v14)) * v9;
  LODWORD(v13) = byte_100294600[v15 >> 24] ^ *v13 ^ byte_10028BF10[v15 >> 24] ^ byte_10026CAB0[(v15 >> 24) + 1] ^ v15 ^ (41 * (v15 >> 24));
  *(unsigned char *)(STACK[0x3E0] + a4 + v6) = ((_BYTE)v13 - ((2 * (_BYTE)v13) & 0x96) - 53) ^ byte_10026F311[a4 + v6] ^ (v12 + 125) & 0xCF ^ 0x28;
  return (*(uint64_t (**)(void))(v11 + 8 * ((207 * (a4 + (v12 + 334) - 1222 == v7 + 255)) ^ v12)))();
}

void sub_10011F24C()
{
  STACK[0x4C0] = STACK[0x338];
  (*(void (**)(uint64_t))(v3 + 8 * ((266 * (v0 ^ 0x26F)) ^ 0xE12)))(v2);
  STACK[0x5E8] = 0;
  LODWORD(STACK[0x5F0]) = v1;
  JUMPOUT(0x10011C850);
}

uint64_t sub_10011F26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x488] = STACK[0x3A8];
  LODWORD(STACK[0x524]) = v9;
  STACK[0x4A8] = STACK[0x3D8];
  unsigned int v10 = ((235 * (a8 ^ 0x6E5) - 466) ^ (2 * v8) & 0x5E) + (v8 & 0x3F ^ 0xAB7DFABD);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((308
                               * ((((v9 ^ 0x98317866) + 1417807185 + v10) ^ 0x7FE7C7F6)
                                - 2145896502
                                + ((2 * ((v9 ^ 0x98317866) + 1417807185 + v10)) & 0xFFCF8FEC) < 0xFFFFFFC0)) ^ a8)))();
}

uint64_t sub_10011F344(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v7 = v5 + 1417807185;
  if ((v7 + 1) > 0x40) {
    int v8 = v7 + 1;
  }
  else {
    int v8 = 64;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((-a5 - v6 + ((a1 + 1440) ^ 0xAB7DFDD8) + v8 > 0xE) * (a1 ^ 0x1DC)) ^ a1)))(2131970610);
}

uint64_t sub_10011F3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  if ((v9 + a5 + 1417807186) > 0x40) {
    int v10 = v9 + a5 + 1417807186;
  }
  else {
    int v10 = 64;
  }
  unsigned int v11 = a8 - 1417807186 + v8 + v10;
  BOOL v13 = __CFADD__(v9 + a5 + 1417807185 + (a7 ^ 0x597) + 1198 - 1935, v11) || v11 > 0xF;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((15 * v13) ^ a7)))(2131970610);
}

uint64_t sub_10011F470(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v7 = (char *)&STACK[0x5A0] + STACK[0x338] + (v3 + 1417807185) - 0x7BB775407D70C692;
  unint64_t v8 = (unint64_t)&v7[-v4];
  unint64_t v9 = (unint64_t)&v7[-v5];
  BOOL v10 = (unint64_t)&v7[-v4] < ((a3 - 1198) ^ 0x2F1uLL) || (unint64_t)&v7[-v5] < 0x10;
  unint64_t v11 = (unint64_t)&v7[STACK[0x320]];
  if (v11 < 0x10) {
    BOOL v10 = 1;
  }
  char v12 = (unint64_t)&v7[-v6] < 0x10 || v10;
  if (v8 < 0x10) {
    char v12 = 1;
  }
  if (v9 < 0x10) {
    char v12 = 1;
  }
  if (v11 < (a3 ^ 0x79FuLL)) {
    char v12 = 1;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (int)((35 * (v12 & 1)) ^ a3)))(2131970610);
}

uint64_t sub_10011F538(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(int8x16_t *)(STACK[0x3A8] + (((a6 + 169280197) & 0xF5E8FBF6 ^ STACK[0x398]) & (v7 + v9))) = veorq_s8(*v8, a1);
  return ((uint64_t (*)(uint64_t, uint64_t, int8x16_t *))*(&off_1002E1F70
                                                                 + ((1525 * (((v6 + 1) & 0x1FFFFFFF0) == 16)) ^ a6)))(((v6 + 1) & 0x1FFFFFFF0) + 2131970610, a3, &v8[1]);
}

void sub_10011F5B8()
{
}

void sub_10011F5C4()
{
  switch(((((v0 - 1604193480) & 0x5F9E07DB ^ 0x80ECB49E) + 2131970610 >= v1)
          * (((v0 + 2080209217) & 0x840287DB) - 1825)) ^ (v0 - 622))
  {
    case 0u:
LABEL_2:
      while (2)
      {
        switch((((LODWORD(STACK[0x3C0]) ^ 0x53B) - 164)
                * ((char)(LODWORD(STACK[0x3B8]) ^ *(unsigned char *)(STACK[0x480] + 96)) < -70)) ^ LODWORD(STACK[0x3C0]))
        {
          case 0:
            continue;
          case 1:
            goto LABEL_3;
        }
      }
    case 1u:
LABEL_3:
      while (2)
      {
        BOOL v2 = LODWORD(STACK[0x3B0]) < 0xFFFFFFC0;
        STACK[0x4C0] -= 640;
        int v3 = (_DWORD *)STACK[0x550];
        STACK[0x460] = STACK[0x550] + 56;
        v3[31] = -2116520046;
        v3[30] = 375050475;
        v3[32] = 1772312350;
        v3[33] = -517218410;
        v3[34] = -1772312351;
        v3[35] = 517218409;
        v3[38] = 1513631264;
        v3[37] = 1809559827;
        unint64_t v4 = STACK[0x3F0];
        STACK[0x528] = STACK[0x3F0];
        STACK[0x538] = v4;
        switch(((&unk_10026B3E0 ^ 0x480 ^ LODWORD(STACK[0x3E8])) * v2) ^ (&unk_10026B3E0
                                                                                        - 1520))
        {
          case 0u:
            goto LABEL_2;
          case 1u:
            continue;
        }
      }
  }
}

uint64_t sub_10012175C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  unsigned int v9 = (*(_DWORD *)(a8 + 68) ^ 0x81D87792)
     + v8
     - 2116520046
     - (((21 * (a7 ^ 0x11C)) ^ 0x3B0E918) & (2 * ((*(_DWORD *)(a8 + 68) ^ 0x81D87792) + v8)));
  *(_DWORD *)(a8 + 68) = v9;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((1635 * ((v9 ^ 0x81D87792) < v8)) ^ a7)))();
}

uint64_t sub_1001217C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 64) = (a7 ^ 0x76C) + *(_DWORD *)(a8 + 64) - 1595;
  return ((uint64_t (*)(void))STACK[0x468])();
}

uint64_t sub_1001217EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x4D8] = (unint64_t)*(&off_1002E1F70 + LODWORD(STACK[0x41C]) - 1592);
  return sub_100121D54(a1, a2, a3, a4, a5, a6, a7, STACK[0x3A8]);
}

uint64_t sub_100121818(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v5 = v3 + 2131970610 - v4;
  LODWORD(STACK[0x344]) = v5;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((((a3 + 196) ^ 0xDAE ^ ((a3 - 817) | 0x140)) * (v5 < 8)) ^ a3)))();
}

uint64_t sub_10012187C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v10 = v8 + 2131970610 + a7 - 1;
  BOOL v13 = v10 > 0xF || ((((a1 + 67) | 8) - v9 + 9) & 0xFu) < (v10 & 0xF) || 18143917 - v7 < v10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v13 * ((a1 - 30) ^ 0x7FD)) | a1)))();
}

uint64_t sub_1001218F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (v9 + v14) + a8;
  unint64_t v17 = v16 - v8 - v10;
  uint64_t v18 = (v15 + 14) & 0xF;
  BOOL v20 = (unint64_t)(v16 - (v11 + v18)) >= 0x10 && v17 >= 0x10 && (unint64_t)(v16 - (v12 + v18)) >= 0x10;
  unint64_t v21 = ~(v13 + v18) + v16;
  int v23 = !v20 || v21 < 0x10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((((8 * a5) ^ 0x3A90) + 11 * (a5 ^ 0x7E8) + 2431) * v23) ^ a5)))();
}

uint64_t sub_100121984(int a1)
{
  LODWORD(STACK[0x3D8]) = a1 + 32;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((LODWORD(STACK[0x344]) >= ((a1 + 225) ^ 0x1CEu)) * (a1 + 258)) ^ a1)))();
}

uint64_t sub_1001219C8(double a1, double a2, int8x16_t a3, double a4, int8x16_t a5, double a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned int v19 = STACK[0x344] & 0xFFFFFFF0;
  LODWORD(STACK[0x30C]) = v18 + 11;
  LODWORD(STACK[0x310]) = v18 + 12;
  LODWORD(STACK[0x318]) = v18 + 13;
  STACK[0x3D8] = ((_BYTE)v18 - 1) & 0xF;
  STACK[0x390] = v18 & 0xF;
  STACK[0x388] = (v18 + 1) & 0xF;
  STACK[0x380] = ((_BYTE)v18 + 2) & 0xF;
  STACK[0x378] = (v18 + 3) & 0xF;
  STACK[0x370] = ((_BYTE)v18 + 4) & 0xF;
  STACK[0x368] = ((_BYTE)v18 + 5) & 0xF;
  STACK[0x360] = ((_BYTE)v18 + 6) & 0xF;
  STACK[0x358] = ((_BYTE)v18 + 7) & 0xF;
  STACK[0x350] = ((_BYTE)v18 + 8) & 0xF;
  v23.val[0].i64[0] = ((_BYTE)v18 - 50) & 0xF;
  v23.val[0].i64[1] = STACK[0x3D8];
  v23.val[1].i64[0] = STACK[0x390];
  v23.val[1].i64[1] = STACK[0x388];
  v23.val[2].i64[0] = STACK[0x380];
  v23.val[2].i64[1] = STACK[0x378];
  v23.val[3].i64[0] = STACK[0x370];
  v23.val[3].i64[1] = STACK[0x368];
  v23.val[0].i64[0] = vqtbl4q_s8(v23, a5).u64[0];
  v23.val[1].i64[0] = STACK[0x360];
  v23.val[1].i64[1] = STACK[0x358];
  v23.val[2].i64[0] = STACK[0x350];
  v23.val[2].i64[1] = ((_BYTE)v18 + 9) & 0xF;
  v23.val[3].i64[0] = ((_BYTE)v18 + 10) & 0xF;
  v23.val[3].i64[1] = STACK[0x30C] & 0xF;
  uint64_t v20 = STACK[0x310] & 0xF;
  uint64_t v21 = STACK[0x318] & 0xF;
  v23.val[0].i64[1] = vqtbl4q_s8(*(int8x16x4_t *)((char *)&v23 + 16), a5).u64[0];
  *(int8x16_t *)(a15 + (v16 - 18143918)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + (v18 - 2131970610)), *(int8x16_t *)((char *)&unk_10026B3E0+ (((_BYTE)v18 - 50) & 0xF))), veorq_s8(*(int8x16_t *)((char *)&unk_10026B3B0+ (((_BYTE)v18 - 50) & 0xF)), *(int8x16_t *)((char *)&unk_100286A80+ ((v18 - 50) & 0xF)+ 1))), a3), vmulq_s8(v23.val[0], a7));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v19 == 16) * (((v15 + 546) | 0x200) ^ 0x639)) ^ v15)))();
}

void sub_100121B94()
{
}

uint64_t sub_100121BA4()
{
  STACK[0x468] = (unint64_t)*(&off_1002E1F70 + LODWORD(STACK[0x41C]) - 1566);
  STACK[0x3D8] = STACK[0x348];
  return sub_1001225D4();
}

uint64_t sub_100121BC8()
{
  STACK[0x468] = (unint64_t)*(&off_1002E1F70 + LODWORD(STACK[0x41C]) - 1590);
  STACK[0x3D8] = (unint64_t)&unk_100287DE3;
  return sub_1001225D4();
}

uint64_t sub_100121C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x4D8] = (unint64_t)*(&off_1002E1F70 + LODWORD(STACK[0x41C]) - 1595);
  return sub_100121D54(a1, a2, a3, a4, a5, a6, a7, STACK[0x3A8]);
}

uint64_t sub_100121C3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16 = v8 + 1;
  char v17 = *(unsigned char *)(STACK[0x538] + (v8 + v11));
  *(unsigned char *)(a8 + (v12 + 1869071940)) = v17 + ((((a3 ^ v10) * v15) ^ 0xA6) & (2 * v17)) - 64;
  BOOL v18 = v16 + v14 < v9;
  if (v9 < v13 != v16 + v14 < v13) {
    BOOL v18 = v9 < v13;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((500 * v18) ^ (a3 - 910))))();
}

void sub_100121CC4()
{
}

void sub_100121CD0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 64) = *(_DWORD *)(a8 + 64) + (((a1 ^ 0x55) - 1643) | 0x11) - 24;
  JUMPOUT(0x100121CF4);
}

uint64_t sub_100121D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  STACK[0x480] = a8;
  STACK[0x438] = v8;
  unsigned int v10 = ((2 * *(_DWORD *)(a8 + 68)) & 0x2E ^ 0x24)
      + ((v9 + 223) ^ 0xB676FC86 ^ *(_DWORD *)(a8 + 68) & (21 * (v9 ^ 0x68) - 1533));
  *(unsigned char *)(a8 + v10 + 1233715817) = 64;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((223 * (v10 + 1233715761 < 0xFFFFFFC8)) ^ v9)))(v10 - 1736101527);
}

uint64_t sub_100121DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((1492 * ((((a5 ^ 0x7F7) + 1233714010) ^ (a5 - 223)) + v5 < 0x40)) ^ a5)))();
}

uint64_t sub_100121E50(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * ((510
                                                                * (-1233716090 - v4 - v5 + 335 >= ((((v2 - 229265334) & 0xDAA4EFD)
                                                                                                  - 1581) ^ 8u))) ^ v2)))(a1, a2, a1);
}

uint64_t sub_100121EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(a7 ^ 0x93 ^ (89
                                                 * (((-75 * (a7 ^ 0xC)) ^ (((a7 ^ v8) & a7) >> (__clz(a7 ^ v8 | 1) ^ 0x1F))) & 1)))))();
}

uint64_t sub_100121EFC(int a1, double a2, double a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11)
{
  int v12 = 42 * (a10 ^ 0x29);
  *(__n128 *)(a11 + (a1 - 1325149951)) = a4;
  BOOL v13 = ((v12 - 1399453313) & 0x5369F5F5) - 1441 != (v11 & 0x1FFFFFFF0);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v13 | (4 * v13)) ^ (v12 - 1252))))();
}

uint64_t sub_100121F74(int a1, uint64_t a2, int a3)
{
  int v3 = (a1 - 1325151961 + 1005 * ((a3 - 1341488266) & 0x4FF57E6D ^ 0x822)) ^ (a3 - 1540);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((3132 * (((v3 & (a3 - 1540)) >> (__clz(v3 | 1) ^ 0x1F)) & 1)) ^ (a3 - 563))))();
}

uint64_t sub_100122004(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v1 ^ (8 * (1325147412 - a1 + (v1 ^ 0xBC6) + ((v1 - 996) | 0x200u) > 6)))))();
}

uint64_t sub_100122048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 + (v8 + a5)) = v11;
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a1 + 1) & 0x1FFFFFFF8) == 8) * ((v10 ^ 0x7EF) - 1020)) ^ v10)))();
}

uint64_t sub_10012208C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(void *)(a8 + v8) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v11 == 0) * a7) ^ v10)))();
}

uint64_t sub_1001220B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((56 * ((((a1 == a3) ^ a5) ^ (a5 - 47)) & 1)) ^ a5)))();
}

uint64_t sub_100122108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8)
{
  *(unsigned char *)(a8 + (v8 + a5)) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((v8 + ((a7 + 414) ^ (v10 + 3505)) < 0x38) * v11) ^ (a7 - 1382))))();
}

uint64_t sub_100122144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((995
                                    * ((char)(*(unsigned char *)(a8 + 96) ^ (v8 + 20) & 0xF7 ^ 0x1B) >= (char)(((11 * ((v8 + 20) & 0xF7 ^ 0xCD)) ^ 0x39) + ((((v8 + 20) & 0xF7) + 90) | 0xBE)))) ^ (v8 + 1498453524) & 0xA6AF67F7)))();
}

uint64_t sub_1001221C0()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((39 * (((v1 == -34) ^ ((v0 + 33) ^ (v0 + 102))) & 1)) ^ v0)))();
}

uint64_t sub_100122218(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = *(_DWORD *)(a8 + 64);
  unsigned int v9 = *(_DWORD *)(a8 + 68);
  *(unsigned char *)(a8 + 56) = (30 * (a1 ^ 0x2E)
                       + ((v8 - 375050475) >> 21)
                       - (((v8 - 375050475) >> 20) & 0x10)
                       + 10) ^ 0xC8;
  *(unsigned char *)(a8 + 57) = (((v8 - 375050475) >> 13) - (((v8 - 375050475) >> 12) & 0x1A) - 115) ^ 0x4D;
  HIDWORD(v10) = v8 + 161820437;
  LODWORD(v10) = v9 ^ 0x80000000;
  *(unsigned char *)(a8 + 58) = (((v8 - 375050475) >> 5) - (((v8 - 375050475) >> 4) & 0x10) - 120) ^ 0x48;
  *(unsigned char *)(a8 + 59) = ((v10 >> 29) - ((2 * (v10 >> 29)) & 0x4E) + 39) ^ 0xE7;
  *(unsigned char *)(a8 + 60) = (v9 >> 21) ^ 0xCE;
  *(unsigned char *)(a8 + 61) = (v9 >> 13) ^ 3;
  *(unsigned char *)(a8 + 62) = (v9 >> 5) ^ 0x7C;
  *(unsigned char *)(a8 + 63) = ((8 * v9) ^ 0x90) + ((v9 >> 3) << 7) - 64;
  STACK[0x508] = (unint64_t)*(&off_1002E1F70 + (int)((30 * (a1 & 0xC44387FF ^ 0x32E) + 1053773341) & 0xC130AFE4));
  return sub_1001227B4();
}

uint64_t sub_100122490()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((63 * (((v1 - 11) ^ (((v1 - 1596) | 4u) - 4 < 0x10)) & 1)) ^ (v1 + 149))))();
}

uint64_t sub_1001224EC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(a7 + a1) ^= *(unsigned char *)(v11 + a1) ^ 0x1E;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((63 * (((v8 + 45) ^ (v9 + 1 + a8 + ((v8 - 4) | 4u) < 0x10)) & 1)) ^ (v8 + 1741))))();
}

void sub_10012254C(double a1, double a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int8x16_t *a11)
{
  *a11 = veorq_s8(*a11, a4);
  BOOL v13 = (_DWORD *)STACK[0x3E0];
  v13[156] = 1513631264;
  v13[149] = -2116520046;
  v13[148] = 375050475;
  v13[150] = 1772312350;
  v13[151] = -517218410;
  v13[152] = -1772312351;
  v13[153] = 517218409;
  v13[155] = 1809559827;
  STACK[0x468] = *(void *)(v11 + 8 * v12);
  JUMPOUT(0x1001225D0);
}

uint64_t sub_1001225D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10011F26C(a1, a2, a3, a4, a5, a6, a7, v7 + 1426);
}

uint64_t sub_1001225F0()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((v0 ^ 0x52D ^ (((v2 - v1) | (unint64_t)(v1 - v2)) >> 63)) & 1) == 0)
                               * ((v0 - 1421) ^ 0x397)) ^ v0)))();
}

uint64_t sub_100122654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                               + 8
                                                                               * ((1562
                                                                                 * (((3 * (v7 ^ 0x29) - 535) & v6) == 0)) ^ v7)))(a1, a2, v4 + a1, a4, v7 ^ 0x6A0);
}

uint64_t sub_100122690(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = (v10 - 20);
  *(void *)(a8 + v11 + a1 - 1670 + v8 + 167 * (v13 ^ 0x201)) = v12;
  BOOL v14 = ((v13 ^ 0x1FFFFFDF3) & v9) - 8 != v8;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(((4 * v14) | (16 * v14)) ^ v13)))();
}

void sub_1001226FC()
{
}

uint64_t sub_100122704()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((798 * (v3 ^ 0x684)) ^ 0x63A) + v3 - 1634) * (v1 == v2)) ^ v3)))();
}

uint64_t sub_100122758(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a8 + (a3 + v9)) = v12;
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((((v10 + a3 + 1 + 2010) < 0x40) * ((a5 ^ v11) - 22)) ^ (a5 - 1337))))();
}

void sub_100122794()
{
}

void sub_1001227B4()
{
}

uint64_t sub_1001227C4(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((a3 ^ 0x604) + 249) ^ 0x1A6 ^ (84 * (a3 ^ 0x604))) * (LODWORD(STACK[0x344]) == v3)) | a3)))();
}

uint64_t sub_100122834()
{
  LODWORD(STACK[0x3D8]) = v0 + 32;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((((v0 - 245) | 0x560) ^ 0x1DA) * ((STACK[0x344] & 8) == 0)) ^ v0)))();
}

uint64_t sub_100122880(double a1, double a2, double a3, double a4, double a5, int8x16_t a6, double a7, int8x8_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  unsigned int v23 = STACK[0x344] & 0xFFFFFFF8;
  LODWORD(STACK[0x390]) = v17 + v19;
  LODWORD(STACK[0x388]) = v23 - 8;
  LODWORD(STACK[0x380]) = v20 + LODWORD(STACK[0x3D8]) - 281;
  v25.val[0].i64[0] = ((_BYTE)v20 + (_BYTE)v21 + (_BYTE)v16) & 0xF;
  v25.val[0].i64[1] = ((_BYTE)v20 + (_BYTE)v16 - 1) & 0xF;
  v25.val[1].i64[0] = ((_BYTE)v20 + (_BYTE)v16) & 0xF;
  v25.val[1].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 1) & 0xF;
  v25.val[2].i64[0] = ((_BYTE)v20 + (_BYTE)v16 + 2) & 0xF;
  v25.val[2].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 3) & 0xF;
  v25.val[3].i64[0] = (LODWORD(STACK[0x380]) + v16) & 0xFLL;
  v25.val[3].i64[1] = ((_BYTE)v20 + (_BYTE)v16 + 5) & 0xF;
  *(int8x8_t *)(a16 + (LODWORD(STACK[0x390]) + v16)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v18+ (v20 + v21 + v16)), *(int8x8_t *)((char *)&unk_10026B3E0+ v25.val[0].i64[0])), veor_s8(*(int8x8_t *)((char *)&unk_10026B3B0+ v25.val[0].i64[0]), *(int8x8_t *)((char *)&unk_100286A80+ v25.val[0].i64[0]+ 1))), v22), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v25, a6), a8));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((52 * (LODWORD(STACK[0x388]) == v16)) ^ LODWORD(STACK[0x3D8]))))();
}

void sub_1001229A8()
{
}

uint64_t sub_1001229B0()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((3148
                               * (((((LODWORD(STACK[0x344]) - v0) | (v0 - LODWORD(STACK[0x344]))) >> ((48 * ((LOBYTE(STACK[0x3D8]) + 50) ^ 0x48)) ^ 0x4F)) & 1) == 0)) ^ (LODWORD(STACK[0x3D8]) + 818))))();
}

uint64_t sub_100122A40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = (v10 + v16);
  *(unsigned char *)(a8 + (a3 + v15)) = *(unsigned char *)(v11 + v17) ^ *(unsigned char *)(v12 + (v17 & 0xF)) ^ *(unsigned char *)(v13 + (v17 & 0xF)) ^ *(unsigned char *)((v17 & 0xF) + v14 + 1) ^ (39 * (v17 & 0xF)) ^ 0xC0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((1694 * (v10 + 1 + v16 < v9)) ^ ((v8 - 1048) | 0x2A6))))();
}

void sub_100122AC0()
{
}

uint64_t sub_100122ACC()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((167
                               * ((*(unsigned int *)(STACK[0x460] + 92) | ((unint64_t)(*(_DWORD *)(STACK[0x460] + 92) < 0x6BDBB103u) << 32))
                                - 1150605463 == ((v0 - 1007) ^ 0x1DEu) + 658953433)) ^ (v0 - 214))))();
}

uint64_t sub_100122B40()
{
  STACK[0x4C0] -= 32;
  STACK[0x580] = (unint64_t)&STACK[0x608];
  STACK[0x588] = STACK[0x3D0];
  STACK[0x568] = (unint64_t)&STACK[0x608];
  STACK[0x370] = (unint64_t)&STACK[0x608];
  STACK[0x578] = (unint64_t)&STACK[0x608];
  STACK[0x590] = 0;
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v0 + 1216))(1028);
  STACK[0x590] = v1;
  uint64_t v2 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0xBC0)))(1032);
  STACK[0x570] = v2;
  if (v1) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v4 * (((v0 + 149) ^ 0x615) + 755)) ^ v0)))();
}

uint64_t sub_100122BE0()
{
  uint64_t v1 = LOBYTE(STACK[0x604]) ^ 0x89;
  int v2 = LOBYTE(STACK[0x5F9]) ^ 0x46 ^ byte_1002944F0[LOBYTE(STACK[0x5F9]) ^ 0xDELL];
  LODWORD(STACK[0x420]) = (v0 + 1266947006) & 0xB47BEF6D;
  int v3 = (((v2 - ((2 * v2) & 0x74) + 7232) << (((v0 - 66) & 0x6D) - 89)) - 393216) ^ 0x1C3A0000;
  int v4 = v3 - ((2 * v3) & 0x231E0000);
  unsigned int v5 = byte_100288A80[v1];
  int v6 = LOBYTE(STACK[0x603]);
  unsigned int v7 = ((v5 >> 1) & 4 | 0x41) ^ (((2 * (v5 & 0x14 ^ 0x15)) & 0xFFFFFFE7) - (v5 & 0x14 ^ 0x15) + 68) | ((v5 & 0xEB ^ 0xFFFFFFCA | 0xFFFFFF95) - (v5 & 0xEB ^ 0xFFFFFFCA | 0x6A) + 106) ^ (~(byte_100288A80[v1] >> 1) | 0xFFFFFFBF);
  unsigned int v8 = v7 - ((2 * v7) & 0xFFFFFF94) - 54;
  LODWORD(v1) = ((((v8 ^ 0xCA) - ((2 * (v8 ^ 0xCA)) & 0x90)) << 24) + 1207959552) ^ 0x48000000;
  unsigned int v9 = ((2 * (v6 ^ 0x7C)) & 0xFFFFFFEF) + (v6 ^ 0xF7FDFE8B);
  int v10 = byte_100295520[LOBYTE(STACK[0x5FC]) ^ 0xDLL];
  unsigned int v11 = v9
      + 134349065
      + ((-(v6 ^ 0xA8) - 2146892799 + v9 - ((2 * (-(v6 ^ 0xA8) - 2146892799 + v9) + 267516432) & 0x9522CF46) - 762682197) ^ 0xB56E985B);
  HIDWORD(v12) = ~v10;
  LODWORD(v12) = (v10 ^ 0x2A) << 24;
  int v13 = (v12 >> 25) - ((2 * (v12 >> 25)) & 0x44) + 34;
  unsigned int v14 = v13 ^ 0x5E ^ (((4 * v13) ^ 0xFFFFFF88) - ((2 * ((4 * v13) ^ 0xFFFFFF88)) & 0x98) + 79);
  int v15 = ((v14 - ((2 * v14) & 0x48)) << 24) - 1543503872;
  int v16 = byte_1002944F0[LOBYTE(STACK[0x606]) ^ 0xF1] ^ LOBYTE(STACK[0x606]);
  unsigned int v17 = ((((v16 ^ 0xCF) - ((2 * (v16 ^ 0xCF)) & 0xF6)) << 8) - 1175749888) ^ 0xB9EB7B00;
  LODWORD(v1) = (v1 - ((2 * v1) & 0x50000000) - 1467118157) ^ 0xA88D8DB3 | (v17 - ((2 * v17) & 0x2BC88E00) + 1441023891) ^ 0x55E44793;
  int v18 = v1 - ((2 * v1) & 0x57C35352);
  unint64_t v19 = STACK[0x588];
  unint64_t v20 = *(unsigned __int8 *)(STACK[0x588] + 5);
  STACK[0x350] = v20;
  int v21 = (unsigned __int8 *)v19;
  LODWORD(v19) = byte_100295520[v20 ^ 0x89];
  HIDWORD(v12) = ~v19;
  LODWORD(v12) = (v19 ^ 0x2A) << 24;
  LODWORD(v20) = (v12 >> 25) - ((2 * (v12 >> 25)) & 0xFFFFFFEA) + 117;
  LODWORD(v20) = v20 ^ 0xC8 ^ (((4 * v20) ^ 0xD6) - 1);
  LODWORD(v20) = (((v20 - ((2 * v20) & 0x182)) << 16) + 1103167488) ^ 0x41C10000;
  LODWORD(v20) = (v20 - ((2 * v20) & 0x19580000) + 212655842) ^ 0xCACDEE2 | ((v15 ^ 0xA4000000)
                                                                           - ((2 * v15) & 0x20000000)
                                                                           + 284357830) ^ 0x10F2F4C6;
  int v22 = v20 - ((2 * v20) & 0x4B931624);
  unint64_t v23 = v21[13];
  STACK[0x3B0] = v23;
  LODWORD(v20) = byte_100288A80[v23 ^ 0xD2];
  LODWORD(v23) = ((v20 >> 1) & 4 ^ 0xFFFFFF86)
               - ((v20 >> 1) & 4)
               + ((v20 >> 1) & 0x44444444 ^ 0x40);
  LODWORD(v20) = ((v23 ^ 0x7D) + ((2 * v23) | 0xFFFFFFCC) + 27) ^ v20;
  LODWORD(v23) = ((((v20 ^ 0x5D) - ((2 * (v20 ^ 0x5D)) & 0x14A)) << 16) - 240844800) ^ 0xF1A50000;
  unint64_t v24 = v21[10];
  STACK[0x320] = v24;
  LODWORD(v24) = byte_100288A80[v24 ^ 0xBF] ^ (-(~(byte_100288A80[v24 ^ 0xBF] >> 1) & 0x44) - 50);
  LODWORD(v24) = ((((v24 ^ 3) - ((2 * v24) & 0x178) + 7959258) << 8) - 7680) ^ 0x7972BC00;
  int v25 = v6 ^ 0xFB ^ byte_1002944F0[v11];
  int v26 = (v24 - ((2 * v24) & 0x5EFEDE00) - 1350603006) ^ 0xAF7F6F02 | (v25
                                                                    - ((2 * v25) & 0xC)
                                                                    + 204849414) ^ 0xC35C106;
  unint64_t v27 = v21[3];
  STACK[0x348] = v27;
  int v28 = v27 ^ 0x17 ^ byte_1002944F0[v27 ^ 6];
  LODWORD(v24) = (~(2 * v28) | 0xFFFFFF3B) + v28;
  unint64_t v29 = v21[6];
  STACK[0x2F0] = v29;
  unsigned int v30 = v21;
  int v31 = byte_100288A80[v29 ^ 0x4C] ^ 0xC2 ^ (byte_100288A80[v29 ^ 0x4C] >> 1) & 0x44;
  int v32 = (((v31 - ((2 * v31) & 0x26)) << 8) + 2233088) ^ 0x221300;
  unsigned int v33 = (v22 - 1513518318) ^ 0xA5C98B12 | (v32 - ((2 * v32) & 0x3A9A7400) + 491600553) ^ 0x1D4D3AA9;
  LODWORD(v21) = v33 - ((2 * v33) & 0x42822C7A);
  unint64_t v34 = v30[8];
  STACK[0x318] = v34;
  LODWORD(v34) = byte_100295520[v34 ^ 0xAD];
  HIDWORD(v12) = ~v34;
  LODWORD(v12) = (v34 ^ 0x2A) << 24;
  LODWORD(v34) = (v12 >> 25) - ((2 * (v12 >> 25)) & 0x7A) + 61;
  LODWORD(v34) = v34 ^ 0xE4 ^ (((4 * v34) ^ 0xFFFFFFF4) - ((2 * ((4 * v34) ^ 0xFFFFFFF4)) & 0x18) - 115);
  LODWORD(v29) = (((v34 - ((2 * v34) & 0xFFFFFFF7)) << 24) - 83886080) ^ 0xFB000000;
  int v35 = (v29 - ((2 * v29) & 0xC2000000) - 504796549) ^ 0xE1E96A7B | (v26 - ((2 * v26) & 0x34777B10) - 633619064) ^ 0xDA3BBD88;
  LODWORD(v29) = v35 - ((2 * v35) & 0x728362CA);
  unint64_t v36 = v30[15];
  STACK[0x310] = v36;
  unsigned int v37 = byte_10026BD00[v36 ^ 0x9D] ^ v36;
  int v38 = (v23 - ((2 * v23) & 0x1E760000) - 818195421) ^ 0xCF3B5423 | (v18 - 1411274327) ^ 0xABE1A9A9;
  unsigned int v39 = (v38 - ((2 * v38) & 0x10EE96CA) + 142035813) ^ 0x8774B65 | ((v37 ^ 0xDB)
                                                                  - ((2 * (v37 ^ 0xDB)) & 0x4E)
                                                                  - 923717081) ^ 0xC8F13227;
  unint64_t v40 = v30[7];
  STACK[0x3B8] = v40;
  int v41 = byte_1002944F0[v40 ^ 0x1C];
  int v42 = v39 - ((2 * v39) & 0x5D4073AE) - 1365231145;
  LODWORD(STACK[0x3E8]) = v42;
  int v43 = (v21 - 1589569987) ^ 0xA141163D | ((v40 ^ 0xBF ^ v41)
                                                 - ((2 * (v40 ^ 0xBF ^ v41)) & 0x1E8)
                                                 + 920216308) ^ 0x36D962F4;
  unsigned int v44 = v43 - ((2 * v43) & 0xFED26EF2) + 2137601913;
  LODWORD(STACK[0x3C8]) = v44;
  unint64_t v45 = v30[9];
  STACK[0x2E8] = v45;
  LODWORD(v45) = byte_100288A80[v45 ^ 0x7C] ^ 0xB ^ (((byte_100288A80[v45 ^ 0x7C] >> 1) & 0x44 ^ 0xB7) - 1);
  LODWORD(v45) = ((v45 - ((2 * v45) & 0x98)) << 16) - 2142502912;
  unint64_t v46 = *v30;
  STACK[0x388] = v46;
  STACK[0x290] = (unint64_t)v30;
  int v47 = byte_100295520[v46 ^ 0x23];
  HIDWORD(v12) = ~v47;
  LODWORD(v12) = (v47 ^ 0x2A) << 24;
  int v48 = (v12 >> 25) - 2 * ((v12 >> 25) & 0xF) + 15;
  LODWORD(v45) = (v29 - 1186877083) ^ 0xB941B165 | ((v45 ^ 0x804C0000) - ((2 * v45) & 0x1A220000) + 219229773) ^ 0xD112E4D;
  int v49 = v48 ^ (((4 * v48) ^ 0x3C) - ((2 * ((4 * v48) ^ 0x3C)) & 0x20) - 110) ^ 7;
  int v50 = (((v49 - ((2 * v49) & 0xA)) << 24) + 83886080) ^ 0x5000000;
  unint64_t v51 = v30[2];
  STACK[0x2F8] = v51;
  LODWORD(v29) = byte_100288A80[v51 ^ 0xDF] ^ 0xE3 ^ (((byte_100288A80[v51 ^ 0xDF] >> 1) & 0x44444444)
                                                    - ((byte_100288A80[v51 ^ 0xDF] >> 1) & 4)
                                                    + ((byte_100288A80[v51 ^ 0xDF] >> 1) & 4 ^ 0x36)) & 0x5C;
  LODWORD(v29) = (((v29 - ((2 * v29) & 0x77777777)) << 8) + 197114624) ^ 0xBBFBB00;
  int v52 = (v29 - ((2 * v29) & 0x1CC14E00) + 1314957182) ^ 0x4E60A77E | (v4 + 294623957) ^ 0x118F9AD5;
  unsigned int v53 = (v52 - ((2 * v52) & 0x7BE0626A) - 1108332235) ^ 0xBDF03135 | (v50 - ((2 * v50) & 0xCA000000) + 1710981428) ^ 0x65FB8134;
  LODWORD(v24) = v24 + 1477429347;
  LODWORD(STACK[0x3F0]) = v24;
  int v54 = (v53 - ((2 * v53) & 0x5E81F540) + 792787616) ^ 0x2F40FAA0 | v24 ^ 0x580FC862;
  int v55 = dword_1002702A0[v8 ^ 0xB0];
  HIDWORD(v12) = v55 ^ 0x1A6468;
  LODWORD(v12) = v55 ^ 0xDFFFFFFF;
  int v56 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x5A3F87E) + 47316031;
  LODWORD(v24) = (((2 * v56) ^ 0x5A3F87E) - ((2 * ((2 * v56) ^ 0x5A3F87E)) & 0x4DB0BF34) + 651714459) & 0xE97D4E04 ^ 0x36DAFFFA;
  LODWORD(v24) = (v24 - 781877917 + ((2 * v24) & 0x82CA9800 ^ 0xDFFF9D3B)) ^ v56;
  HIDWORD(v12) = v24 ^ 0x6D;
  LODWORD(v12) = v24 ^ 0xFBFC8000;
  LODWORD(v24) = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x12D2B96C) - 1989583690;
  int v57 = dword_1002702A0[v16 ^ 0xAD];
  HIDWORD(v12) = v57 ^ 0x1A6468;
  LODWORD(v12) = v57 ^ 0xDFFFFFFF;
  int v58 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x32826E4C) + 423704358;
  unsigned int v59 = (((2 * v58) ^ 0x32826E4C) - 666468200 + (~(2 * ((2 * v58) ^ 0x32826E4C)) | 0x4F72FED3)) & 0xE97D4E04 ^ 0xDEC6B1FE;
  unsigned int v60 = (v59 - ((2 * v59) & 0xC2858F3C) - 515717218) ^ v58;
  HIDWORD(v12) = v60 ^ 0x4BF188;
  LODWORD(v12) = v60 ^ 0xD0000000;
  int v61 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x950D36C0);
  LODWORD(v20) = dword_100285750[v20 ^ 0xC4];
  LODWORD(v20) = v20 - ((2 * v20 + 54081700) & 0xCD54E736) - 397996051;
  HIDWORD(v12) = v20 ^ 0xD398;
  LODWORD(v12) = v20 ^ 0x181B0000;
  unsigned int v62 = (v37 ^ 0xE7ABAAEA) + 2 * (v37 ^ 0x15);
  int v63 = dword_100290CB0[v37 ^ 0x2D] ^ (v62 + 1414183536 + ((2 * v62 + 3902) & 0x25A0 ^ 0x7FFDBFFF)) ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x4FCA2088) + 669323332) ^ (v61 - 897148064);
  LODWORD(v20) = v54 - 1575863144 - ((2 * v54) & 0x4424793A) + 5;
  LODWORD(STACK[0x3E0]) = v20;
  LODWORD(v20) = v63 ^ v20 ^ v24;
  int v64 = v45 - ((2 * v45) & 0x1931368) + 13207988;
  int v65 = v44 ^ 0x45B95C0C ^ v20;
  int v66 = v20;
  int v67 = v64;
  LODWORD(STACK[0x3A0]) = v64;
  LODWORD(STACK[0x400]) = v65 ^ v64;
  int v68 = v65;
  LODWORD(STACK[0x3C0]) = v65;
  unsigned int v69 = v65 ^ v64 ^ v42;
  LODWORD(v20) = ((HIWORD(v69) & 0xFB ^ 0x42) + (HIWORD(v69) & 0xDA ^ 0xDF1BA498) - ((HIWORD(v69) & 0xFB ^ 0x42) & 0xDA)) ^ 0xDD6AC498;
  int v70 = dword_1002702A0[(((v69 >> 8) & 0x66 ^ 0xC81D8805) + ((v69 >> 8) & 0x99) - 1) ^ 0xC81D8811];
  HIDWORD(v12) = v70 ^ 0x1A6468;
  LODWORD(v12) = v70 ^ 0xDFFFFFFF;
  int v71 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xB2DB3BA6) + 1500356051;
  LODWORD(v20) = ((v20 | 0x62520AC9) - (v20 | 0x9DADF536) - 1649543882) ^ ((((-(HIWORD(v69) | 3) ^ 6)
                                                                           - 1) & 4 ^ 0xBF)
                                                                         - 1162105329);
  unsigned int v72 = (((2 * v71) ^ 0xB2DB3BA6) - ((2 * ((2 * v71) ^ 0xB2DB3BA6)) & 0x59C4B774) - 1394451525) & 0xE97D4E04 ^ 0xBEE2FBFA;
  unsigned int v73 = (v72 - 389190910 + ((2 * v72) & 0xD09A9400 ^ 0xFEFFBDFF)) ^ v71;
  HIDWORD(v12) = v73 ^ 0xE8F7E2;
  LODWORD(v12) = v73 ^ 0x99999999;
  int v74 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x49C2BCE) + 38671847;
  LODWORD(v20) = ((v20 ^ 0xDA98C4A8) - ((2 * (v20 ^ 0xDA98C4A8) - 1498782404) & 0xB06DF5C6) + 730606977) ^ dword_100290CB0[v20 ^ 0xDA98C490];
  HIDWORD(v12) = v20 ^ 0x423D;
  LODWORD(v12) = v20 ^ 0x941E0000;
  LODWORD(v20) = v12 >> 16;
  int v75 = dword_1002702A0[HIBYTE(v69) ^ 6];
  HIDWORD(v12) = v75 ^ 0x1A6468;
  LODWORD(v12) = v75 ^ 0xDFFFFFFF;
  int v76 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD38102BA) - 373259939;
  LODWORD(v23) = (((2 * v76) ^ 0xD38102BA) - ((2 * ((2 * v76) ^ 0xD38102BA)) & 0x284E68B0) - 1809370024) & 0xE97D4E04 ^ 0x96A7B5FA;
  int v77 = (v23 - ((2 * v23) & 0x40B00808) - 1613364691) ^ v76;
  LODWORD(v23) = v69;
  LODWORD(v45) = v69;
  unsigned int v78 = ((v69 ^ 0x340885B | 0x3A04E923) - (v69 ^ 0x340885B | 0xC5FB16DC) - 973400356) ^ 0x39446198;
  HIDWORD(v12) = v77 ^ 0xB0;
  LODWORD(v12) = v77 ^ 0x61528500;
  int v79 = v45;
  LODWORD(STACK[0x274]) = v45;
  int v80 = (v45 ^ 0xF014E35B)
      + (((v45 ^ 0x56B8658C) + 1) ^ 0xFB9CF6FE)
      + ((2 * ((v45 ^ 0x56B8658C) + 1)) & 0xF739EDFC)
      + 73599234;
  int v81 = v74 ^ dword_100290CB0[(((2 * (v23 ^ 0x2803000F)) & 0x500401B6)
                             - (v23 ^ 0x2803000F)
                             - 794745052) ^ 0xF8A227F3] ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x5DFAD51A) - 1359123827) ^ v66 ^ (v78 - ((2 * v78 + 648701244) & 0x4E42C61E) - 92891731) ^ (v20 - 1323107881 - ((2 * v20) & 0x624604A8) + 2173);
  int v82 = ((v80 - ((2 * v80) & 0xF0ACBFB6) - 128557093) ^ 0x7A9A02B) + (v45 ^ 0xF014E35B);
  LODWORD(v20) = v82 - ((2 * v82) & 0xC7D5DA22) + 1676340497;
  int v83 = v81 ^ v67;
  int v84 = v81;
  int v85 = v81 ^ v67 ^ 0x4A7BE995;
  LODWORD(v23) = (((unsigned __int16)(v85 ^ v20) >> 8) ^ 0xF7 | 0x130A0C17)
               - (((unsigned __int16)(v85 ^ v20) >> 8) ^ 0xF7 | 0xECF5F3E8)
               - 319425560;
  LODWORD(v23) = dword_100295120[((v23 & 0x100A0CCA ^ 0x80652049) + (v23 & 0x3000335) - 1) ^ 0x936F2C28];
  LODWORD(v23) = 96924509 * v23 - ((193849018 * v23 - 799979766) & 0xBEA90EB6) + 1199385312;
  unsigned int v86 = (((2 * ((v23 >> 2) & 0x94457BF ^ 0x904462A)) & 0x10800646)
       - ((v23 >> 2) & 0x94457BF ^ 0x904462A)
       - 1246440228) ^ 0xADA490E8;
  LODWORD(v23) = (v86 - ((2 * v86) & 0x5B287186) + 764754115) ^ v23;
  int v87 = ((v85 ^ v20) >> 16);
  LODWORD(STACK[0x3D8]) = v85 ^ v20;
  unsigned int v88 = (((2 * (v87 ^ 7)) & 0x122) - (v87 ^ 7) - 1424403090) ^ 0xEDBB556A;
  HIDWORD(v12) = v23 ^ 0xB93408;
  LODWORD(v12) = v23 ^ 0xDC000000;
  LODWORD(v23) = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x4770E68E) - 1548192953;
  unsigned int v89 = ((v87 ^ 0xE8100882 | 0xDCF6EE8F) - (v87 ^ 0xE8100882 | 0x23091170) + 587796848) ^ 0x34E6E635;
  int v90 = (v89 - ((2 * v89 + 111830332) & 0x73EFE9E) + 1458876909) ^ dword_100290CB0[(((2 * v88) | 0xE8C3AB2C)
                                                                                  - v88
                                                                                  + 194914922) ^ 0xB2C3D595];
  HIDWORD(v12) = v90 ^ 0xC791;
  LODWORD(v12) = v90 ^ 0x4FB70000;
  int v91 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0xFF2757BC) - 7099426;
  HIDWORD(v12) = v91 ^ 0xABDE;
  LODWORD(v12) = v91 ^ 0xFF930000;
  int v92 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x5B17EBB0) - 1383336488;
  LODWORD(v23) = v84 ^ v23;
  LODWORD(STACK[0x3A8]) = v84;
  HIDWORD(v12) = v23 ^ 0xE16F;
  LODWORD(v12) = v23 ^ 0x51DD0000;
  int v93 = dword_100295120[(v85 ^ v20) ^ 0x1C];
  LODWORD(v23) = v92 ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x2DD430F6) + 384440443);
  unsigned int v94 = 96924509 * v93 - ((193849018 * v93 - 799979766) & 0xA42B73AA) + 977165658;
  HIDWORD(v12) = v23 ^ 0x4B6A;
  LODWORD(v12) = v23 ^ 0x42510000;
  LODWORD(v23) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x79BE2E42) + 1021253409;
  unsigned int v95 = (((v94 >> 2) & 0x94457BF ^ 0x844531D)
       + ((v94 >> 2) & 0x444017 ^ 0xA6820002)
       - (((v94 >> 2) & 0x94457BF ^ 0x844531D) & 0x444017)) ^ 0xBE844D37;
  LODWORD(v19) = dword_100295120[((v85 ^ v20) >> 24) ^ 0xC8];
  LODWORD(v19) = 96924509 * v19 - ((193849018 * v19 + 1347503882) & 0x5C9E90D2) - 1770525714;
  LODWORD(v19) = (v19 >> 2) & 0x94457BF ^ v19;
  HIDWORD(v12) = v19 ^ 0x6B;
  LODWORD(v12) = v19 ^ 0x19679200;
  int v96 = v94 ^ ((v95 | 0xECFE66CB) - (v95 | 0x13019934) + 318871860) ^ ((v12 >> 8)
                                                                     - ((2 * (v12 >> 8)) & 0xC71780CE)
                                                                     + 1670103143) ^ 0xA83E53F6 ^ v23;
  LODWORD(STACK[0x410]) = v84 ^ v68;
  LODWORD(v23) = v96 ^ v84 ^ v68;
  LODWORD(v45) = v96;
  LODWORD(STACK[0x344]) = v96;
  int v97 = v23 ^ 0xDC8BE651 ^ v85;
  LODWORD(STACK[0x408]) = v97;
  unsigned int v98 = v23 ^ 0xDC8BE651 ^ v20;
  LODWORD(v19) = ((v83 ^ 0xB1BED69B) - ((2 * (v83 ^ 0xB1BED69B) + 1990652498) & 0x7CA94AA0) - 1180164487) ^ v83 ^ ((v83 ^ 0xCAEDAFB3) - ((2 * (v83 ^ 0xCAEDAFB3) + 2) & 0x85A71598) - 1026323763);
  unsigned int v99 = (BYTE1(v98) ^ 0x9D | 0x379146E7) - (BYTE1(v98) ^ 0x9D | 0xC86EB918) - 932267752;
  int v100 = dword_1002702A0[((v99 & 0x261100C0) + (v99 ^ 0x37D104E5) - ((v99 ^ 0x37D104E5) & 0xC0) - 938727424) ^ 0xEE5D6AA2];
  HIDWORD(v12) = v100 ^ 0x1A6468;
  LODWORD(v12) = v100 ^ 0xDFFFFFFF;
  int v101 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xE296A284) - 246722238;
  LODWORD(v20) = (((2 * v101) ^ 0xE296A284) - 2 * (((2 * v101) ^ 0xE296A284) & 0x5BCB105E ^ (2 * v101) & 8) + 1540034647) & 0xE97D4E04 ^ 0x5FCBB1FE;
  int v102 = (v20 - 529225084 + ((2 * v20) & 0xC0E81400 ^ 0xFFFEBEFB)) ^ v101;
  HIDWORD(v12) = v102 ^ 0x77FAF1;
  LODWORD(v12) = v102 ^ 0x39000000;
  int v103 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0xFD55E040) + 2125131808;
  int v104 = ((HIWORD(v98) & 0x8C ^ 0x5A278CFB) - (HIWORD(v98) & 0x73)) ^ 0x5A278CCA;
  unsigned int v105 = (v104 - ((2 * v104 - 1498782404) & 0x8202056E) - 1059046059) ^ dword_100290CB0[((((HIWORD(v98) & 0xCA)
                                                                                         + (BYTE2(v98) ^ 0x51020CCA)) | 0x8238C200)
                                                                                       - ((BYTE2(v98) ^ 0x51020CCA) & 0x10004CA)) ^ 0xD23ACA09];
  HIDWORD(v12) = v105 ^ 0xB269;
  LODWORD(v12) = v105 ^ 0x21A30000;
  int v106 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x55A0E42C) + 718303766;
  int v107 = dword_1002702A0[HIBYTE(v98) ^ 0xB4];
  HIDWORD(v12) = v107 ^ 0x1A6468;
  LODWORD(v12) = v107 ^ 0xDFFFFFFF;
  int v108 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x8401FA9E) + 1107361103;
  unsigned int v109 = (((2 * v108) ^ 0x8401FA9E) - ((2 * ((2 * v108) ^ 0x8401FA9E)) & 0x1F4A6924) + 262485138) & 0xE97D4E04 ^ 0x1FA7B5FA;
  int v110 = (v109 + 31999178 - ((2 * v109) & 0x10D20808) + 3832) ^ v108;
  LODWORD(v30) = v98;
  HIDWORD(v12) = v110 ^ 0x39;
  LODWORD(v12) = v110 ^ 0x64A14800;
  int v111 = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x90E7B9AE) + 1215552727;
  int v112 = dword_1002702A0[((v98 ^ 0x51B1297)
                        + (v98 & 0xC7 ^ 0x9004A840)
                        - ((v98 ^ 0x51B1297) & 0x902C7)) ^ 0x9516B833];
  HIDWORD(v12) = v112 ^ 0x1A6468;
  LODWORD(v12) = v112 ^ 0xDFFFFFFF;
  int v113 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xECB43D28) + 1985617556;
  unsigned int v114 = (((2 * v113) ^ 0xECB43D28) - ((2 * ((2 * v113) ^ 0xECB43D28)) & 0xB26648CC) + 1496523878) & 0xE97D4E04 ^ 0x5FB3B5FE;
  int v115 = (v114 - ((2 * v114) & 0x50101408) - 1786410684) ^ v113 ^ v111 ^ v45 ^ v106 ^ v103;
  LODWORD(STACK[0x330]) = v115;
  unsigned int v116 = v115 ^ 0x96E7464E;
  int v117 = v115 ^ 0x96E7464E ^ v23 ^ 0x861B5476;
  LODWORD(STACK[0x368]) = v117;
  int v118 = v23 ^ 0x861B5476;
  LODWORD(STACK[0x300]) = v23 ^ 0x861B5476;
  LODWORD(STACK[0x32C]) = v117 ^ v97;
  unsigned int v119 = v117 ^ v97 ^ 0xCE6CCF47;
  int v120 = (int)v30;
  LODWORD(v20) = ((v119 ^ v30) >> 16) ^ 0x31;
  LODWORD(v20) = dword_100285750[(((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) & 0x60821187 ^ 0x702D87)
                                + ((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) ^ 0xE4875278)
                                - (((((2 * v20) & 0xFFFFFF0F) - v20 + 1620005496) ^ 0xE4875278) & 0x80000187)) ^ 0x64FA3D58];
  LODWORD(v20) = v20 - ((2 * v20 + 54081700) & 0x92A7C3CC) - 890208712;
  HIDWORD(v12) = v20 ^ 0x41E5;
  LODWORD(v12) = v20 ^ 0x37E20000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x965AB174) - 886220614;
  LODWORD(STACK[0x304]) = v119 ^ v30;
  int v121 = dword_1002702A0[(((v119 ^ v30) & 0x4B ^ 0x42785048)
                        + ((v119 ^ v30) & 0xB4 ^ 0x10800421)
                        - 1) ^ 0x52F85435];
  HIDWORD(v12) = v121 ^ 0x1A6468;
  LODWORD(v12) = v121 ^ 0xDFFFFFFF;
  int v122 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x8E0D8A20) + 1191626000;
  unsigned int v123 = (((2 * v122) ^ 0x8E0D8A20) - 2 * (((2 * v122) ^ 0x8E0D8A20) & 0x63704A3E ^ (2 * v122) & 0x14) - 479180246) & 0xE97D4E04 ^ 0xF7F2FBFA;
  LODWORD(v23) = dword_1002702A0[((v119 ^ v30) >> 24) ^ 0x11];
  HIDWORD(v12) = v23 ^ 0x1A6468;
  LODWORD(v12) = v23 ^ 0xDFFFFFFF;
  LODWORD(v23) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xC0B61EAA) - 530903211;
  int v124 = (((2 * v23) ^ 0xC0B61EAA) - ((2 * ((2 * v23) ^ 0xC0B61EAA)) & 0x514A16AC) + 681904982) & 0xE97D4E04 ^ 0x3EA7BBFE;
  LODWORD(v23) = (v124 - ((2 * v124) & 0x426A1000) - 1632479567) ^ v23;
  unsigned int v125 = (v119 ^ v30) >> 8;
  unsigned int v126 = ((v125 & 0x6D ^ 0x6A618248) + (v125 & 0x92 ^ 0x84000181) - 1) ^ 0xEE618356;
  HIDWORD(v12) = v23 ^ 0x34;
  LODWORD(v12) = v23 ^ 0x6BA4B700;
  LODWORD(v23) = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x19B6A554) + 215700138;
  int v127 = (v126 - ((2 * v126 + 648701244) & 0x40CBDC3A) - 205840197) ^ dword_100290CB0[((((unsigned __int16)(v119 ^ (unsigned __int16)v30) >> 8) ^ 0xCD300B21)
                                                                                     + (v125 & 0x98 ^ 0x32422098)
                                                                                     - ((((unsigned __int16)(v119 ^ (unsigned __int16)v30) >> 8) ^ 0xCD300B21) & 0x49100398)) ^ 0xB662281F];
  HIDWORD(v12) = v127 ^ 0x4D56C3;
  LODWORD(v12) = v127 ^ 0xEC000000;
  LODWORD(v20) = v20 ^ v122 ^ (v123 - ((2 * v123) & 0x61011004) - 1333753853) ^ ((v12 >> 24)
                                                                               - ((2 * (v12 >> 24)) & 0x514EB194)
                                                                               + 682055882) ^ v23;
  int v128 = v20 ^ v118;
  unsigned int v129 = v20 ^ v118 ^ v30;
  int v130 = ((unsigned __int16)(v129 ^ 0x2B10) >> 8);
  LODWORD(v23) = ((v130 ^ 0x82) + (((v129 ^ 0xAA152B10) >> 8) & 0xF6 ^ 0x4174) - ((v130 ^ 0x82) & 0xF6)) ^ 0x41E4;
  unsigned int v131 = ((v130 ^ 0x32CA6B87) - ((2 * (v130 ^ 0x32CA6B87)) & 0x6110421C) - 1316178674) ^ 0x8B6F4E9D;
  unsigned int v132 = ((((2 * v131) | 0x31C6F3D6) - v131 + 1729922581) ^ 0x90CAE957) - 749391202;
  unsigned int v133 = ((2 * v132) & 0xB3FFFBFE) + (v132 ^ 0x59FFFDFF);
  LODWORD(v23) = dword_100290CB0[v23];
  LODWORD(v23) = (((2 * (v23 & 0x3F864EB7 ^ 0x2E455931)) & 0x7288AB64) - (v23 & 0x3F864EB7 ^ 0x2E455931) + 109292045) ^ 0x88B30F55 ^ (((v133 + 100663809) & 0x130402B7) - ((2 * (v133 + 100663809)) & 0x2000062) - 2056146823) | (((2 * (v23 & 0xC079B148 ^ 0x798100)) & 0xB26080) - (v23 & 0xC079B148 ^ 0x798100) - 719011560) & 0xC1FFFFC8 ^ 0x6577FA21 ^ (((v133 - 1509948927) & 0xC0513148) - ((2 * (v133 - 1509948927)) & 0x822200) + 610999073);
  LODWORD(v23) = v23 - ((2 * v23) & 0x9B07ED8A) + 1300494021;
  HIDWORD(v12) = v23 ^ 0xEEA303;
  LODWORD(v12) = v23 ^ 0x24000000;
  int v134 = v20 ^ v116;
  LODWORD(STACK[0x2E4]) = v20 ^ v116;
  int v135 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0xBA83CB20) - 582883952;
  LODWORD(v20) = ((v129 ^ 0xAA152B10) >> 16) ^ 0x5F;
  LODWORD(v20) = ((v20 | 0x935732A7) - (v20 | 0x6CA8CD58) + 1823001944) ^ 0x93573304;
  LODWORD(v20) = dword_100285750[(((2 * v20) | 0xF4BBBF2) - v20 + 2019172871) ^ 0x87A5DC2E];
  LODWORD(v20) = v20 - 2 * ((v20 + 27040850) & 0x48CDAC13 ^ v20 & 1) - 899004316;
  HIDWORD(v12) = v20 ^ 0xC11;
  LODWORD(v12) = v20 ^ 0x367C0000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x760365E2) - 1157516559;
  int v136 = dword_1002702A0[v129 ^ 0x11];
  HIDWORD(v12) = v136 ^ 0x1A6468;
  LODWORD(v12) = v136 ^ 0xDFFFFFFF;
  int v137 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x3F72345A) + 532224557;
  LODWORD(v23) = (((2 * v137) ^ 0x3F72345A) - ((2 * ((2 * v137) ^ 0x3F72345A)) & 0x4CF66558) + 645608109) & 0xE97D4E04 ^ 0x36FBB3FE;
  unsigned int v138 = v129 ^ 0xC2942E3F;
  int v139 = dword_1002702A0[HIBYTE(v129) ^ 0x55];
  HIDWORD(v12) = v139 ^ 0x1A6468;
  LODWORD(v12) = v139 ^ 0xDFFFFFFF;
  int v140 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xCA731E1C) - 449212658;
  unsigned int v141 = (((2 * v140) ^ 0xCA731E1C) - 2 * (((2 * v140) ^ 0xCA731E1C) & 0x6E8D6D76 ^ (2 * v140) & 2) + 1854762356) & 0xE97D4E04 ^ 0x7E8FFDFE;
  unsigned int v142 = (v141 - ((2 * v141) & 0xC0D20000) - 832020778) ^ v140;
  HIDWORD(v12) = v142 ^ 0x14;
  LODWORD(v12) = v142 ^ 0x3F182F00;
  LODWORD(v24) = v20 ^ v137 ^ (v23 - ((2 * v23) & 0xC2B321B8) + 1633259740) ^ v134 ^ ((v12 >> 8)
                                                                                    - ((2 * (v12 >> 8)) & 0x14A1911E)
                                                                                    - 1974417265) ^ v135;
  LODWORD(v40) = v24 ^ v119;
  LODWORD(STACK[0x2B8]) = v24 ^ v119;
  LODWORD(STACK[0x2D8]) = v138;
  unsigned int v143 = v24 ^ v119 ^ v138;
  int v144 = ((unsigned __int16)(v20 ^ v137 ^ (v23 - ((2 * v23) & 0x21B8) - 28452) ^ v134 ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x911E) - 14193) ^ v135 ^ v119 ^ v138) >> 8) ^ 0x48008191;
  int v145 = dword_100285750[(v144 - ((2 * v144) & 0x2F6) - 1223921797) ^ 0xFF0CEEC3];
  int v146 = v145 - ((2 * v145 + 54081700) & 0x5D22D390) + 808322586;
  int v147 = (v24 ^ v119 ^ v138);
  unsigned int v148 = ((v147 ^ 0x840004B6 | 0xA7662105) - (v147 ^ 0x840004B6 | 0x5899DEFA) + 1486479098) ^ 0x23662597;
  HIDWORD(v12) = v146 ^ 0x20C9CB;
  LODWORD(v12) = v146 ^ 0xD0000000;
  int v149 = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x161574AC) - 1962231210;
  LODWORD(STACK[0x2E0]) = v143;
  LODWORD(v20) = dword_1002702A0[HIBYTE(v143) ^ 0xD0];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD8EC6A) - 2140375499;
  LODWORD(v23) = (((2 * v20) ^ 0xD8EC6A) - ((2 * ((2 * v20) ^ 0xD8EC6A)) & 0xD0B9F320) + 1750923664) & 0xE97D4E04 ^ 0x7EDEF9FA;
  LODWORD(v20) = (v23 - 193744260 + ((2 * (v23 & 0x60710204 ^ ((2 * v20) | 0x7FFFFFFB))) ^ 0x280560FD)) ^ v20;
  HIDWORD(v12) = v20 ^ 0x7E;
  LODWORD(v12) = v20 ^ 0x5C57C500;
  LODWORD(v20) = v12 >> 8;
  LODWORD(v23) = ((BYTE2(v143) ^ 0xF9) - ((2 * (BYTE2(v143) ^ 0xF9)) & 0x6E) - 1074156489) ^ 0x3FB93417;
  LODWORD(v23) = dword_100285750[(((2 * v23) | 0x23C0275C) - v23 + 1847585874) ^ 0x11A08B3C];
  LODWORD(v23) = v23 - ((2 * v23 + 54081700) & 0x66C24DB6) + 889045805;
  HIDWORD(v12) = v23 ^ 0x86D8;
  LODWORD(v12) = v23 ^ 0xCDD00000;
  int v150 = dword_100290CB0[((v147 ^ 0xD3) + (v143 & 0xE0 ^ 0xB8DE0320) - ((v147 ^ 0xD3) & 0xE0)) ^ 0xB8DE032F] ^ v149 ^ ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x8BB202E0) - 975634064);
  LODWORD(STACK[0x2DC]) = v24;
  int v151 = v150 ^ v24 ^ (v148 - ((2 * v148 + 648701244) & 0x53192ABE) - 52312067) ^ 0xFC2C23F8 ^ (v20
                                                                                              - ((2 * v20) & 0x31DE14CC)
                                                                                              + 418318950);
  int v152 = v24 ^ v128;
  LODWORD(STACK[0x2D4]) = v24 ^ v128;
  int v153 = v24 ^ v128 ^ 0xE417D096 ^ v151;
  int v154 = v151;
  LODWORD(STACK[0x2CC]) = v151;
  unsigned int v155 = v153 ^ v138;
  LODWORD(v24) = v153;
  LODWORD(STACK[0x2D0]) = v153;
  int v156 = dword_1002702A0[((((v153 ^ v138) >> 16) ^ 0x1B) - (((v153 ^ v138) >> 15) & 0x140) - 1548320608) ^ 0xA3B680F0];
  LODWORD(STACK[0x338]) = (v19 ^ 0xC9957FD0)
                        - 2 * (((v19 ^ 0xC9957FD0) + 2069068072) & 0x7AFFF6DE ^ v19 & 6)
                        - 162304000;
  HIDWORD(v12) = v156 ^ 0x1A6468;
  LODWORD(v12) = v156 ^ 0xDFFFFFFF;
  int v157 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xD6AA9F7A) - 346730563;
  unsigned int v158 = (((2 * v157) ^ 0xD6AA9F7A) - ((2 * ((2 * v157) ^ 0xD6AA9F7A)) & 0x77812674) - 1145007301) & 0xE97D4E04 ^ 0xBFC2B3FA;
  LODWORD(v19) = dword_1002702A0[((v155 ^ 0x2D | 0x22C61E5D)
                                - (v155 ^ 0x2D | 0xDD39E1A2)
                                - 583409246) ^ 0x22C61E83];
  int v159 = (v158 - ((2 * v158) & 0x52629C08) - 1833886611) ^ v157;
  HIDWORD(v12) = v19 ^ 0x1A6468;
  LODWORD(v12) = v19 ^ 0xDFFFFFFF;
  int v160 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xAEC2BC7A) + 1465998909;
  HIDWORD(v12) = v159 ^ 0x3110;
  LODWORD(v12) = v159 ^ 0x7CAC0000;
  int v161 = (v12 >> 16) - ((2 * (v12 >> 16)) & 0xB8C08F8A) + 1549813701;
  LODWORD(v19) = (((2 * v160) ^ 0xAEC2BC7A) - 2 * (((2 * v160) ^ 0xAEC2BC7A) & 0x5109F3C ^ (2 * v160) & 4) - 2062508232) & 0xE97D4E04 ^ 0x9792BFFA;
  LODWORD(v20) = dword_1002702A0[HIBYTE(v155) ^ 0x2F];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x13849262) + 163727665;
  int v162 = (((2 * v20) ^ 0x13849262) - ((2 * ((2 * v20) ^ 0x13849262)) & 0x22B28A8C) + 291063110) & 0xE97D4E04 ^ 0x17DBF5FE;
  LODWORD(v20) = (v162 - ((2 * v162) & 0x2E2F297C) + 387421374) ^ v20;
  HIDWORD(v12) = v20 ^ 0xFFFFFFBF;
  LODWORD(v12) = v20 ^ 0x369DDC00;
  int v163 = (v12 >> 8) - ((2 * (v12 >> 8)) & 0x5854A874) - 1406512070;
  int v164 = ((BYTE1(v155) ^ 0xBD) - ((v155 >> 7) & 0x80) + 546430784) ^ 0x28B15FD4;
  LODWORD(v20) = (139213 - (BYTE1(v155) ^ 0xC6) + ((2 * (BYTE1(v155) ^ 0xC6)) & 0xA) + 45) ^ 0x21FCD;
  LODWORD(v20) = (v20 - ((2 * v20 - 1498782404) & 0xA49468A4) + 1245669104) ^ dword_100290CB0[(v164
                                                                                             - ((2 * v164) & 0x1E0AE)
                                                                                             + 576712791) ^ 0x2A7F70B7];
  HIDWORD(v12) = v20 ^ 0xC28C8C;
  LODWORD(v12) = v20 ^ 0xBA000000;
  int v165 = (v19 - 536754998 + ((2 * v19) & 0xC0028800 ^ 0xFFFEFE6F)) ^ v160 ^ v163 ^ ((v12 >> 24)
                                                                                  - ((2 * (v12 >> 24)) & 0x7961F94)
                                                                                  - 2083844150) ^ v161;
  LODWORD(v19) = v40 ^ 0xA5219770 ^ v24;
  int v166 = v165 ^ v152 ^ v19;
  int v167 = v165 ^ v152;
  LODWORD(STACK[0x2A8]) = v165 ^ v152;
  LODWORD(STACK[0x2BC]) = v19;
  LODWORD(STACK[0x2C8]) = v166;
  int v168 = dword_100285750[((((unsigned __int16)(v166 ^ v155) >> 8) ^ 0x52001112 | 0xB502E3BC)
                        - (((unsigned __int16)(v166 ^ v155) >> 8) ^ 0x52001112 | 0x4AFD1C43)
                        + 1258101827) ^ 0xE702F23D];
  int v169 = v168 + 1974944756 + (~(2 * v168 + 54081700) | 0x17CAB0BD);
  HIDWORD(v12) = v169 ^ 0xAB07A2;
  LODWORD(v12) = v169 ^ 0x8A000000;
  LODWORD(v20) = dword_100285750[(((v166 ^ v155) ^ 0x4860032D)
                                - ((2 * ((v166 ^ v155) ^ 0x4860032D)) & 0x10800790)
                                - 1714404408) ^ 0xD1B04078];
  int v170 = ((v12 >> 24) - ((2 * (v12 >> 24)) & 0xA56BAB16) + 1387648395) ^ (v20
                                                                        - ((2 * v20 + 54081700) & 0xA22831B8)
                                                                        - 760171218);
  LODWORD(v20) = ((v166 ^ v155) >> 16) ^ 0xB9;
  LODWORD(v20) = dword_1002702A0[(v20 + (((v166 ^ v155) >> 16) & 0xD ^ 0x204) - (v20 & 0xD)) ^ 0x238];
  HIDWORD(v12) = v20 ^ 0x1A6468;
  LODWORD(v12) = v20 ^ 0xDFFFFFFF;
  LODWORD(v20) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0x55748890) - 1430633400;
  int v171 = (((2 * v20) ^ 0x55748890) - 2 * (((2 * v20) ^ 0x55748890) & 0x6F9B606E ^ (2 * v20) & 2) + 1872453741) & 0xE97D4E04 ^ 0x7F9BF1FE;
  LODWORD(v20) = (v171 + 1517922433 + ((2 * v171) & 0x90F21000 ^ 0xDBFEBEFF)) ^ v20;
  HIDWORD(v12) = v20 ^ 0xEDF8;
  LODWORD(v12) = v20 ^ 0xD88B0000;
  LODWORD(v20) = (v12 >> 16) - ((2 * (v12 >> 16)) & 0x62478BA2) + 824427985;
  LODWORD(v23) = v166 ^ v155 ^ 0xC119330C;
  LODWORD(STACK[0x2C4]) = v23;
  LODWORD(v19) = ((((v166 ^ v155) >> 24) ^ 0x3C)
                - 859504793
                + ((2 * (((v166 ^ v155) >> 24) ^ 0x3C) + 316) & 0x190 ^ 0x5D75FFFF)) ^ dword_100290CB0[((v166 ^ v155) >> 24) ^ 4];
  HIDWORD(v12) = v19 ^ 0x16;
  LODWORD(v12) = v19 ^ 0x35477400;
  int v172 = v165 ^ v154;
  LODWORD(STACK[0x2AC]) = v172;
  int v173 = v170 ^ v172 ^ ((v12 >> 8) - ((2 * (v12 >> 8)) & 0x5ADC7DA6) + 762199763) ^ v20;
  LODWORD(STACK[0x2B0]) = v167 ^ 0x9294D9A6;
  LODWORD(v20) = v173 ^ v167 ^ 0x9294D9A6;
  int v174 = v20 ^ v166;
  unsigned int v175 = v20 ^ v166 ^ v23;
  int v176 = dword_1002702A0[HIBYTE(v175) ^ 0xFC];
  HIDWORD(v12) = v176 ^ 0x1A6468;
  LODWORD(v12) = v176 ^ 0xDFFFFFFF;
  int v177 = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xC65C04A6) + 1663959635;
  unsigned int v178 = (((2 * v177) ^ 0xC65C04A6) - ((2 * ((2 * v177) ^ 0xC65C04A6)) & 0xFEE10BEC) - 9402889) & 0xE97D4E04 ^ 0xFFF2B5FE;
  unsigned int v179 = (v178 + 1774224085 + ((2 * v178) & 0xD2800408 ^ 0xFEFEFE5F)) ^ v177;
  HIDWORD(v12) = v179 ^ 0xB7;
  LODWORD(v12) = v179 ^ 0x22A68100;
  int v180 = (v12 >> 8) + 1491506014 + (~(2 * (v12 >> 8)) | 0x4E32D945);
  int v181 = (((2 * ((v20 ^ v166 ^ v23) ^ 0x8E)) & 0xB2)
        - ((v20 ^ v166 ^ v23) ^ 0x8E)
        + 1578375078) ^ 0x5C1C3385;
  int v182 = dword_100285750[(((2 * v181) | 0x267B502A) - v181 + 1824675819) ^ 0x91358C82];
  LODWORD(v34) = dword_1002702A0[(((v175 >> 8) & 0x4F ^ 0x7BCB8444) + ((v175 >> 8) & 0xB0 ^ 0x80204021) - 1) ^ 0xFBEBC428];
  HIDWORD(v12) = v34 ^ 0x1A6468;
  LODWORD(v12) = v34 ^ 0xDFFFFFFF;
  LODWORD(v34) = (v12 >> 27) - ((2 * (v12 >> 27)) & 0xE2D72D24) + 1902876306;
  int v183 = ((2 * v34) ^ 0xE2D72D24) - 2 * (((2 * v34) ^ 0xE2D72D24) & 0xA009036 ^ (2 * v34) & 2) + 167809077;
  LODWORD(v34) = ((v183 & 0xE97D4E04 ^ 0x1E82B1FE) - 2020252415 + ((2 * v183) & 0x22A8800 ^ 0xF2FFBDFF)) ^ v34;
  HIDWORD(v12) = v34 ^ 0xB6F2A2;
  LODWORD(v12) = v34 ^ 0xDE000000;
  LODWORD(v34) = (v12 >> 24) - ((2 * (v12 >> 24)) & 0x1A906ABA) + 222836061;
  LODWORD(STACK[0x2C0]) = v175 ^ 0x9C148819;
  unsigned int v184 = (BYTE2(v175) ^ 0x36 | 0xCF48A4AE) - (BYTE2(v175) ^ 0x36 | 0x30B75B51) + 817322833;
  int v185 = dword_100295120[((v184 & 0x424805AC ^ 0x40540D21) + (v184 & 0x8D00A253) - 1) ^ 0x8F1CA989];
  unsigned int v186 = 96924509 * v185 - ((193849018 * v185 - 799979766) & 0xBC16DE9C) - 969665837;
  unsigned int v187 = (((2 * ((v186 >> 2) & 0x94457BF ^ 0x14402A0)) | 0x95B0E404) - ((v186 >> 2) & 0x94457BF ^ 0x14402A0) - 1255698946) ^ v186;
  HIDWORD(v12) = v187 ^ 0xC467;
  LODWORD(v12) = v187 ^ 0x2ABF0000;
  int v188 = ((v12 >> 16) - ((2 * (v12 >> 16)) & 0x11CBF296) + 149289291) ^ (v182
                                                                       - ((2 * v182 + 54081700) & 0xADFEE4AA)
                                                                       - 660861273) ^ v180 ^ v34 ^ v173;
  LODWORD(STACK[0x2B4]) = v20 ^ 0xEFA86EDA;
  int v189 = LODWORD(STACK[0x408]) ^ 0x31BCA71D;
  int v190 = v20 ^ 0xEFA86EDA ^ v188;
  int v191 = v190 ^ v20 ^ v166;
  LODWORD(STACK[0x3F8]) = v191;
  LODWORD(v20) = (v191 ^ 0x8F858CC9) + 1;
  int v192 = ((2 * (v20 + v189)) & 0x368FFCFA) + ((v20 + v189) ^ 0x1B47FE7D);
  LODWORD(STACK[0x378]) = v192 - ((2 * v192 + 49145382) & 0x45E827A) + 1537619024;
  LODWORD(STACK[0x358]) = (v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24)
                        - 2
                        * (((v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24) + 131358868) & 0x4F82C7B ^ (v79 ^ 0x9A9C9713 ^ v40 ^ 0xA5219770 ^ v24) & 3)
                        + 1422691596;
  LODWORD(STACK[0x30C]) = (v190 ^ 0x3CFCE19D)
                        + (v174 ^ 0xD197BF59)
                        - ((2 * ((v190 ^ 0x3CFCE19D) + (v174 ^ 0xD197BF59))) & 0x67A3805A)
                        + 869384237;
  LODWORD(v19) = STACK[0x3C8];
  LODWORD(v24) = (LODWORD(STACK[0x3C8]) ^ 0x405FFE0A) + (v174 ^ 0xD197BF59) + 1;
  int v193 = ((2 * v24) & 0x9B7D7EFE) + (v24 ^ 0x4DBEBF7F);
  int v194 = v128 ^ v119;
  LODWORD(v24) = v128 ^ 0xAAEAA00E;
  unsigned int v195 = ((2 * ((v128 ^ 0x36723FD8) + (v30 ^ 0x2D3FF3D5))) & 0xEC7F96FA)
       + (((v128 ^ 0x36723FD8) + (v30 ^ 0x2D3FF3D5)) ^ 0x763FCB7D);
  int v196 = v66;
  LODWORD(v29) = ((2 * ((v66 ^ 0x20356DF) + (v191 ^ 0x707A7336) + 1)) & 0xCE7EFFFE)
               + (((v66 ^ 0x20356DF) + (v191 ^ 0x707A7336) + 1) ^ 0x673F7FFF);
  LODWORD(STACK[0x360]) = (LODWORD(STACK[0x410]) ^ 0xCD4BCE7E ^ v24)
                        - ((2 * (LODWORD(STACK[0x410]) ^ 0xCD4BCE7E ^ v24) + 812454938) & 0x802FB05C)
                        - 665951685;
  int v197 = STACK[0x3A0];
  LODWORD(v40) = (4 * LODWORD(STACK[0x3A0])) & 0x3EBD7FF8 ^ 0xFB47D35F;
  LODWORD(STACK[0x390]) = v195 - ((2 * v195 - 1599041214) & 0x9CE3F6BE) + 516572160;
  unsigned int v198 = v66 ^ 0xFDFCA920;
  unsigned int v199 = (v66 ^ 0xFDFCA920)
       + (((v190 ^ 0x3CFCE19D) - 389043312) ^ 0xBBDAAF77)
       + ((2 * ((v190 ^ 0x3CFCE19D) - 389043312)) & 0x77B55EEE)
       + 1143296137;
  LODWORD(v45) = (v30 ^ 0x2D3FF3D5) + (v197 ^ 0x317E0B29);
  LOBYTE(v79) = v45 ^ 0xEB;
  LODWORD(STACK[0x398]) = v29 - ((2 * v29 + 400895530) & 0x3651A978) + 1729850321;
  int v200 = v193 - ((2 * v193 + 165964534) & 0x9B08C2C) - 372606063;
  LODWORD(v45) = v40 + ((2 * v197) ^ 0x825D5651) + (v45 ^ 0x9990BFEB) + ((2 * v45) & 0x33217FD6);
  int v201 = STACK[0x2A8];
  LODWORD(v34) = ((2 * ((v174 ^ 0xD197BF59) + (LODWORD(STACK[0x2A8]) ^ 0xE8738819))) & 0x5F5FA27C)
               + (((v174 ^ 0xD197BF59) + (LODWORD(STACK[0x2A8]) ^ 0xE8738819)) ^ 0x2FAFD13E);
  int v202 = 331399871 - v34 - ((1298719094 - 2 * v34) & 0x5A18A408);
  int v203 = STACK[0x2B8];
  LODWORD(v34) = (v194 ^ 0x939E11E6) + (LODWORD(STACK[0x2B8]) ^ 0xD41826EE) + 1;
  LODWORD(v51) = v34 - ((2 * v34) & 0xA68B7754) + 1397078954;
  LODWORD(v23) = v199 - ((2 * v199) & 0x15AA5CB2) - 1965740455;
  HIDWORD(v12) = v23 ^ 1;
  LODWORD(v12) = v23 ^ 0x8AD52E58;
  int v204 = (v12 >> 3) - ((2 * (v12 >> 3)) & 0x72F120CA) + 964202597;
  unsigned int v205 = (v188 ^ 0xC1154CFC) + v198 - ((2 * ((v188 ^ 0xC1154CFC) + v198)) & 0xFE534C6C) + 2133435958;
  LODWORD(v29) = STACK[0x3E8];
  LODWORD(v20) = ((2 * (v20 + (LODWORD(STACK[0x3E8]) ^ 0xB2D53129))) & 0x36EE67E8)
               + ((v20 + (LODWORD(STACK[0x3E8]) ^ 0xB2D53129)) ^ 0x9B7733F4);
  HIDWORD(v12) = LODWORD(STACK[0x3F0]) ^ 2;
  LODWORD(v12) = LODWORD(STACK[0x3E0]) ^ 0xA2123C98;
  int v206 = v204 ^ ((v12 >> 3) - ((2 * (v12 >> 3)) & 0x71C755E8) - 1193039116);
  int v207 = STACK[0x2AC];
  unsigned int v208 = (LODWORD(STACK[0x2AC]) ^ 0xB4FB0452) + (v173 ^ 0xE6A3E5EA) + 1;
  unsigned int v209 = v208 - ((2 * v208) & 0xCC0AF4A8) - 435848620;
  LODWORD(v30) = v45 - 2 * ((v45 + 1352419888) & 0x522D862B ^ v79 & 1) + 583651418;
  HIDWORD(v12) = v206 ^ 0x126110C8;
  LODWORD(v12) = v206 ^ 0x60000000;
  LODWORD(STACK[0x3F0]) = (v12 >> 29) - ((2 * (v12 >> 29)) & 0xA08986F0) - 800799880;
  LODWORD(v45) = v197 ^ v23 ^ 0xE0C8F134;
  int v210 = v20 - ((2 * v20 + 926183954) & 0x27D1EE98) - 813485995;
  LODWORD(v34) = v19 ^ v51 ^ v23 ^ 0xF60A6B6D;
  LODWORD(STACK[0x250]) = v23;
  LODWORD(v20) = v29 ^ v23 ^ 0x6363CB34;
  unsigned int v211 = v196 ^ 0x90B7CF42;
  int v212 = LODWORD(STACK[0x2B0]) ^ LODWORD(STACK[0x408]);
  unsigned int v213 = v209 ^ 0xC16522AE;
  LODWORD(STACK[0x2A4]) = LODWORD(STACK[0x408]) ^ v209 ^ 0xC16522AE ^ 0xBCA47A44;
  LODWORD(STACK[0x3A0]) = v203 ^ 0x5E5E20A6;
  LODWORD(STACK[0x23C]) = v209;
  LODWORD(STACK[0x2A0]) = v120 ^ v209 ^ 0x6B6C92C8;
  int v214 = v24 ^ 0x1E536EC9;
  int v215 = v194 ^ 0x1155E0F9;
  LODWORD(v29) = STACK[0x390];
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x390]) ^ v174 ^ 0x6251FB9E;
  LODWORD(STACK[0x408]) = v207 ^ 0x3D9C5F07;
  LODWORD(STACK[0x298]) = v29 ^ v173 ^ 0xAA9A5ED2;
  LODWORD(STACK[0x2AC]) = v188 ^ 0x29FC3AB9;
  LODWORD(STACK[0x380]) = v210;
  unsigned int v216 = v212 ^ 0x88979EBA ^ v210;
  LODWORD(STACK[0x284]) = v216 ^ v201 ^ 0x6114D34C;
  unsigned int v217 = v200 ^ v30;
  unsigned int v218 = v200 ^ v30 ^ LODWORD(STACK[0x2D8]);
  int v219 = v218 ^ 0x34A7EB6D;
  int v220 = (v216 ^ v201 ^ 0x5F324CE4) + (v218 ^ 0x1F6625B1) + 1;
  LODWORD(STACK[0x2A8]) = v190 ^ 0xD41597D8;
  LODWORD(v40) = 2 * &unk_100294700;
  LODWORD(STACK[0x3E0]) = v40;
  int v221 = (&unk_100294700 ^ 0xEFDEFBED) + 270599187 + (v40 & 0xDFBDF7C0);
  unsigned int v222 = (v220 - ((2 * v220) & 0x497D835C) - 1531002450) ^ (v221 - ((2 * v221) & 0xE692392A) - 213312363);
  LODWORD(STACK[0x270]) = LODWORD(STACK[0x3F8]) ^ v205 ^ 0xB978FB8E;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x2CC]) ^ 0xC4324EDB;
  LODWORD(STACK[0x27C]) = v155 ^ 0x4236229E;
  LODWORD(STACK[0x278]) = LODWORD(STACK[0x368]) ^ v202 ^ 0xB8C3C456;
  unsigned int v223 = (((v222 ^ 0xA80822C4) + 1597978868) ^ 0x8BF9BF7F)
       + 1946566785
       + ((2 * ((v222 ^ 0xA80822C4) + 1597978868)) & 0x17F37EFE);
  int v224 = LODWORD(STACK[0x358]) ^ v210;
  unsigned int v225 = LODWORD(STACK[0x2D0]) ^ 0xFB663E42 ^ v224;
  unsigned int v226 = ((((v222 ^ 0x57F7DD3B) - 1597978868) ^ 0x7FEF7FEF)
        - 2146402287
        + ((2 * ((v222 ^ 0x57F7DD3B) - 1597978868)) & 0xFFDEFFDE)) & v225;
  unsigned int v227 = (v223 & v225 ^ 0x5FF7FFFF)
       + (v226 ^ 0xFFEDFDE6)
       + ((2 * v226) & 0xFFDBFBCC)
       + ((2 * (v223 & v225)) & 0xBFEFFFFE);
  LODWORD(STACK[0x288]) = v227 - ((2 * v227 + 1077150774) & 0xB0E41408) + 2022444063;
  int v228 = v200 ^ v205 ^ 0x21EBFEFD;
  int v229 = v205 ^ 0x21EBFEFD;
  int v230 = v228 ^ LODWORD(STACK[0x3A8]);
  unsigned int v231 = v230 ^ 0x9826C3E0;
  unsigned int v232 = v223 + (v230 ^ 0x51454C84);
  LODWORD(STACK[0x248]) = v51;
  LODWORD(STACK[0x244]) = v51 ^ 0x981C9085;
  int v233 = STACK[0x398];
  int v234 = LODWORD(STACK[0x398]) ^ v51 ^ 0x981C9085;
  int v235 = v45 ^ v234;
  int v236 = v20 ^ v234;
  unsigned int v237 = v234 ^ 0xF0C1A050 ^ LODWORD(STACK[0x3F0]);
  int v238 = LODWORD(STACK[0x400]) ^ 0x5BD09992;
  unsigned int v239 = LODWORD(STACK[0x3C0]) ^ 0xFACA0E30;
  unsigned int v240 = LODWORD(STACK[0x274]) ^ 0xC2E06176;
  LODWORD(STACK[0x254]) = v240;
  int v241 = LODWORD(STACK[0x378]) ^ v240;
  int v242 = v211 ^ v241;
  int v243 = v238 ^ v241;
  int v244 = v239 ^ v241;
  int v245 = v34 ^ v233;
  int v246 = v233;
  unsigned int v247 = v232 ^ 0xFF57BDF9;
  BOOL v248 = ((v232 ^ 0xFF57BDF9) & 1) == 0;
  if ((v232 ^ 0xFF57BDF9)) {
    int v249 = v235;
  }
  else {
    int v249 = v236;
  }
  LODWORD(STACK[0x3F0]) = v249;
  if (v247) {
    int v235 = v245;
  }
  LODWORD(STACK[0x3C0]) = v235;
  if (v247) {
    int v245 = v237;
  }
  LODWORD(STACK[0x3E8]) = v245;
  if ((v247 & 1) == 0) {
    int v236 = v237;
  }
  LODWORD(STACK[0x3A8]) = v236;
  unsigned int v250 = LODWORD(STACK[0x410]) ^ 0xEB991ABB;
  int v251 = LODWORD(STACK[0x338]) ^ v200 ^ 0xD828BFE;
  int v252 = LODWORD(STACK[0x3D8]) ^ 0x49FE29EE;
  unsigned int v253 = LODWORD(STACK[0x344]) ^ 0xF2DFA593;
  int v254 = v228;
  LODWORD(STACK[0x2B8]) = v228;
  int v255 = v250 ^ v228;
  int v256 = v251 ^ v229;
  int v257 = v229;
  LODWORD(STACK[0x368]) = v229;
  int v258 = v252 ^ v254;
  if (v247) {
    unsigned int v259 = v231;
  }
  else {
    unsigned int v259 = v255;
  }
  LODWORD(STACK[0x410]) = v259;
  if ((v247 & 1) == 0) {
    int v255 = v256;
  }
  LODWORD(STACK[0x338]) = v255;
  if (v247) {
    unsigned int v260 = v258;
  }
  else {
    unsigned int v260 = v231;
  }
  LODWORD(STACK[0x2D8]) = v260;
  if (v247) {
    int v261 = v256;
  }
  else {
    int v261 = v258;
  }
  LODWORD(STACK[0x344]) = v261;
  int v262 = STACK[0x30C];
  int v263 = LODWORD(STACK[0x30C]) ^ 0xA2E9EEA;
  int v264 = v253 ^ v263 ^ v213;
  unsigned int v265 = LODWORD(STACK[0x300]) ^ 0xCA209678 ^ v263 ^ v213;
  unsigned int v266 = LODWORD(STACK[0x32C]) ^ v202 ^ 0xE6CA9B0B;
  int v267 = LODWORD(STACK[0x330]) ^ v202 ^ 0xC87AF93;
  int v268 = LODWORD(STACK[0x304]) ^ v202 ^ 0x6A2C5FD9;
  unsigned int v269 = LODWORD(STACK[0x2E4]) ^ 0x813070E3;
  unsigned int v270 = LODWORD(STACK[0x2DC]) ^ 0xFBB20E98;
  int v271 = LODWORD(STACK[0x2E0]) ^ 0x3F7C367E;
  int v272 = LODWORD(STACK[0x2D4]) ^ 0x1A8E3DEA;
  LODWORD(STACK[0x28C]) = v217;
  int v273 = v214 ^ v217;
  int v274 = v215 ^ v217;
  int v275 = v269 ^ v217;
  if (v247) {
    int v276 = v219;
  }
  else {
    int v276 = v275;
  }
  if (v247) {
    int v277 = v275;
  }
  else {
    int v277 = v273;
  }
  LODWORD(STACK[0x2E0]) = v277;
  if (v247) {
    int v219 = v274;
  }
  else {
    int v273 = v274;
  }
  LODWORD(STACK[0x2DC]) = v219;
  int v278 = STACK[0x390];
  int v279 = v200 ^ LODWORD(STACK[0x390]);
  LODWORD(STACK[0x2E4]) = v279;
  int v280 = LODWORD(STACK[0x3A0]) ^ v279;
  if (v247) {
    int v281 = LODWORD(STACK[0x3A0]) ^ v279;
  }
  else {
    int v281 = v271 ^ v279;
  }
  LODWORD(STACK[0x3D8]) = v281;
  if (v247) {
    int v282 = v271 ^ v279;
  }
  else {
    int v282 = v270 ^ v279;
  }
  LODWORD(STACK[0x2D0]) = v282;
  if (v247) {
    int v283 = v270 ^ v279;
  }
  else {
    int v283 = v272 ^ v279;
  }
  LODWORD(STACK[0x3A0]) = v283;
  if (v247) {
    int v280 = v272 ^ v279;
  }
  LODWORD(STACK[0x2CC]) = v280;
  unsigned int v284 = LODWORD(STACK[0x2BC]) ^ 0xC1D41471;
  int v285 = LODWORD(STACK[0x2C4]) ^ 0x23EFD6AF;
  unsigned int v286 = v278 ^ LODWORD(STACK[0x2B4]) ^ 0xD33EC454;
  unsigned int v287 = v216;
  LODWORD(STACK[0x3C8]) = v216;
  int v288 = LODWORD(STACK[0x408]) ^ v216;
  int v289 = v285 ^ v287;
  int v290 = STACK[0x284];
  if (v247) {
    int v291 = v288;
  }
  else {
    int v291 = STACK[0x284];
  }
  LODWORD(STACK[0x2D4]) = v291;
  if (v247) {
    int v292 = v289;
  }
  else {
    int v292 = v288;
  }
  LODWORD(STACK[0x408]) = v292;
  int v293 = LODWORD(STACK[0x2C8]) ^ 0x3B4BAFA6 ^ v287;
  if (v247) {
    int v294 = LODWORD(STACK[0x2C8]) ^ 0x3B4BAFA6 ^ v287;
  }
  else {
    int v294 = v289;
  }
  LODWORD(STACK[0x2B4]) = v294;
  if (v247) {
    int v295 = v290;
  }
  else {
    int v295 = v293;
  }
  LODWORD(STACK[0x400]) = v295;
  unsigned int v296 = v278 ^ LODWORD(STACK[0x2C0]) ^ 0xB8265B9E;
  int v297 = LODWORD(STACK[0x2C0]) ^ LODWORD(STACK[0x3F8]) ^ 0xE6237D8;
  LODWORD(STACK[0x308]) = v202;
  int v298 = LODWORD(STACK[0x2B0]) ^ v202;
  int v299 = LODWORD(STACK[0x298]) ^ v202;
  int v300 = v286 ^ v202;
  int v301 = v296 ^ v202;
  if (v247) {
    int v302 = LODWORD(STACK[0x298]) ^ v202;
  }
  else {
    int v302 = v300;
  }
  LODWORD(STACK[0x2C8]) = v302;
  if (v247) {
    int v303 = v301;
  }
  else {
    int v303 = v299;
  }
  if (v247) {
    int v301 = v298;
  }
  LODWORD(STACK[0x2C4]) = v301;
  if (v247) {
    int v304 = v300;
  }
  else {
    int v304 = v298;
  }
  int v305 = v246 ^ LODWORD(STACK[0x360]);
  int v306 = v305 ^ LODWORD(STACK[0x270]);
  int v307 = v305 ^ v257;
  LODWORD(STACK[0x298]) = v305 ^ v257;
  int v308 = v305 ^ v257 ^ LODWORD(STACK[0x2AC]);
  int v309 = v307 ^ LODWORD(STACK[0x2A8]);
  int v310 = v307 ^ v297;
  if (v247) {
    int v311 = v310;
  }
  else {
    int v311 = v308;
  }
  LODWORD(STACK[0x2B0]) = v311;
  if (v247) {
    int v312 = v306;
  }
  else {
    int v312 = v310;
  }
  LODWORD(STACK[0x330]) = v312;
  if ((v247 & 1) == 0) {
    int v308 = v309;
  }
  LODWORD(STACK[0x32C]) = v308;
  if (v247) {
    int v313 = v309;
  }
  else {
    int v313 = v306;
  }
  LODWORD(STACK[0x2A8]) = v313;
  unsigned int v314 = byte_100288A80[STACK[0x388] ^ 0xCC];
  int v316 = LODWORD(STACK[0x2A4]) ^ v262;
  int v317 = LODWORD(STACK[0x2A0]) ^ v263;
  int v318 = v224;
  LODWORD(STACK[0x29C]) = v224;
  int v319 = LODWORD(STACK[0x280]) ^ v224;
  int v320 = LODWORD(STACK[0x27C]) ^ v224;
  int v321 = STACK[0x380];
  int v322 = LODWORD(STACK[0x380]) ^ LODWORD(STACK[0x278]);
  LODWORD(STACK[0x234]) = v247;
  int v323 = -(((_BYTE)v247 + 2 * (_BYTE)v232 - 1) & 2);
  LODWORD(STACK[0x230]) = v323;
  unsigned int v324 = LODWORD(STACK[0x378]) ^ 0xBB815546;
  LODWORD(STACK[0x210]) = v317;
  if (v248) {
    int v325 = v264;
  }
  else {
    int v325 = v317;
  }
  LODWORD(STACK[0x2C0]) = v325;
  if (v248) {
    unsigned int v326 = v265;
  }
  else {
    unsigned int v326 = v264;
  }
  LODWORD(STACK[0x220]) = v326;
  LODWORD(STACK[0x21C]) = v316;
  if (v248) {
    unsigned int v327 = v316;
  }
  else {
    unsigned int v327 = v265;
  }
  LODWORD(STACK[0x2AC]) = v327;
  int v328 = v321 ^ v266;
  int v329 = v284 ^ v318;
  LODWORD(STACK[0x218]) = v319;
  int v330 = STACK[0x288];
  if (v248) {
    int v331 = STACK[0x288];
  }
  else {
    int v331 = v319;
  }
  LODWORD(STACK[0x2A4]) = v331;
  if (v248) {
    int v332 = v329;
  }
  else {
    int v332 = v330;
  }
  LODWORD(STACK[0x2BC]) = v332;
  LODWORD(STACK[0x20C]) = v320;
  if (v248) {
    int v329 = v320;
  }
  LODWORD(STACK[0x2A0]) = v329;
  LODWORD(STACK[0x24C]) = v243;
  LODWORD(STACK[0x240]) = v244;
  if (v248) {
    int v333 = v243;
  }
  else {
    int v333 = v244;
  }
  LODWORD(STACK[0x268]) = v242;
  LODWORD(STACK[0x200]) = v324;
  if (v248) {
    unsigned int v334 = v242;
  }
  else {
    unsigned int v334 = v324;
  }
  LODWORD(STACK[0x208]) = v322;
  if (!v248) {
    int v328 = v322;
  }
  LODWORD(STACK[0x388]) = v328;
  if (v248) {
    int v335 = v321 ^ v267;
  }
  else {
    int v335 = v321 ^ v268;
  }
  BOOL v336 = v323 == 0;
  if (v323) {
    unsigned int v337 = v333;
  }
  else {
    unsigned int v337 = v334;
  }
  LODWORD(STACK[0x304]) = v337;
  if (v323) {
    int v333 = v334;
  }
  LODWORD(STACK[0x278]) = v333;
  if (v323) {
    int v338 = v276;
  }
  else {
    int v338 = v273;
  }
  LODWORD(STACK[0x3F8]) = v338;
  if (v323) {
    int v339 = v273;
  }
  else {
    int v339 = v276;
  }
  LODWORD(STACK[0x300]) = v339;
  unsigned int v315 = ((2 * ((v314 >> 1) & 0x44 ^ 0xFFFFFF85)) | 0x66) - ((v314 >> 1) & 0x44 ^ 0xFFFFFF85);
  int v340 = ((((v314 ^ (v315 + 77) ^ 0x1F) - ((2 * (v314 ^ (v315 + 77) ^ 0x1F)) & 0x96)) << 24) + 1258291200) ^ 0x4B000000;
  int v341 = *(unsigned __int8 *)(STACK[0x290] + 1) ^ 0x79 ^ byte_1002944F0[*(unsigned __int8 *)(STACK[0x290] + 1) ^ 0x8BLL];
  int v342 = (((v341 - ((2 * v341) & 0xFC)) << 16) + 159252480) ^ 0x97E0000;
  int v343 = (v340 + 185703216 - ((2 * v340) & 0x16000000)) ^ 0xB119B30 | (v342 - ((2 * v342) & 0x3EA00000) + 525345149) ^ 0x1F50217D;
  int v344 = v343 - ((2 * v343) & 0x7386C0F0);
  int v345 = STACK[0x2F0] ^ 0x57 ^ byte_1002944F0[STACK[0x2F0] ^ 0x88];
  unsigned int v346 = (((v345 - ((2 * v345) & 0x38)) << 8) - 1735517184) ^ 0x988E1C00;
  int v347 = STACK[0x2E8] ^ 0xFB ^ byte_10026BD00[STACK[0x2E8] ^ 0x9F];
  unsigned int v348 = (((v347 - ((2 * v347) & 0x120)) << 16) - 124780544) ^ 0xF8900000;
  unsigned int v349 = byte_100288A80[STACK[0x350] ^ 0x25];
  int v350 = (((v349 ^ 0xD0 ^ (v349 >> 1) & 0x44) - ((2 * (v349 ^ 0xD0 ^ (v349 >> 1) & 0x44)) & 0x106)) << 16)
       + 612564992;
  unsigned int v351 = ((v350 ^ 0x24830000) - ((2 * v350) & 0x12480000) + 153402880) ^ 0x924BE00 | (v346
                                                                                    - ((2 * v346) & 0x68104C00)
                                                                                    - 1274534195) ^ 0xB40826CD;
  unsigned int v352 = v351 - ((2 * v351) & 0x3245F2F8);
  int v353 = STACK[0x320] ^ 0xAB ^ byte_10026BD00[STACK[0x320] ^ 0xF8];
  unsigned int v354 = (((v353 - ((2 * v353) & 0x8A)) << 8) - 566082304) ^ 0xDE424500;
  unsigned int v355 = (v354 - ((2 * v354) & 0x540E1400) - 1442379033) ^ 0xAA070AE7 | (v348 - ((2 * v348) & 0x4EE40000) - 411944652) ^ 0xE7723934;
  unsigned int v356 = v355 - ((2 * v355) & 0x582D3986);
  unsigned int v357 = byte_10026BD00[STACK[0x3B0] ^ 0x5C] ^ STACK[0x3B0];
  int v358 = ((((v357 ^ 0xC) - ((2 * (v357 ^ 0xC)) & 0x16)) << 16) + 420151296) ^ 0x190B0000;
  int v359 = byte_1002944F0[STACK[0x310] ^ 0xE2];
  int v360 = (v358 - ((2 * v358) & 0x547C0000) + 1782508247) ^ 0x6A3EEAD7 | (((v359 ^ STACK[0x310]) ^ 2)
                                                                       - ((2 * (v359 ^ STACK[0x310] ^ 2)) & 0x34)
                                                                       - 1461226982) ^ 0xA8E7721A;
  int v361 = v360 - ((2 * v360) & 0x5D6F7D94);
  int v362 = ((STACK[0x348] ^ 0xAA ^ byte_1002944F0[STACK[0x348] ^ 0x70])
        - ((2 * (STACK[0x348] ^ 0xAA ^ byte_1002944F0[STACK[0x348] ^ 0x70])) & 0x140)
        - 60034144) ^ 0xFC6BF3A0 | (v344 - 1178378120) ^ 0xB9C36078;
  int v363 = v362 - ((2 * v362) & 0x1C04DC6A);
  int v364 = STACK[0x318] ^ byte_10026BD00[STACK[0x318] ^ 0x5D] ^ 2;
  unsigned int v365 = (((v364 - ((2 * v364) & 0xFFFFFFE7)) << 24) - 218103808) ^ 0xF3000000;
  unsigned int v366 = ((v365 - 1810196343 + (~(2 * v365) | 0xD7FFFFFF)) | 1) ^ 0x941A9889 | (v356 - 1407804221) ^ 0xAC169CC3;
  unsigned int v367 = byte_100288A80[*(unsigned __int8 *)(STACK[0x290] + 4) ^ 0xD6];
  int v368 = ((v367 >> 1) & 0x40 | ~(v367 >> 1) & 0x44) - (~(v367 >> 1) & 0x40) - 95;
  int v369 = v367 ^ 0x55 ^ ((v368 & 0x84) - (v368 | 0x9E) + 9);
  unsigned int v370 = (((v369 - ((2 * v369) & 0x2C)) << 24) - 1778384896) ^ 0x96000000;
  unsigned int v371 = (v370 - ((2 * v370) & 0x24000000) - 1842811221) ^ 0x9228EEAB | (v352 + 421722492) ^ 0x1922F97C;
  unsigned int v372 = byte_100288A80[*(unsigned __int8 *)(STACK[0x290] + 14) ^ 0x14];
  int v373 = (((((v372 ^ (v372 >> 1) & 0x44) ^ 0xA0) - ((2 * (v372 ^ (v372 >> 1) & 0x44)) & 0x96)) << 8)
        + 1948994304) ^ 0x742B4B00;
  int v374 = v373 - ((2 * v373) & 0x43E4F400);
  int v375 = byte_100295520[*(unsigned __int8 *)(STACK[0x290] + 12) ^ 0x78];
  HIDWORD(v376) = ~v375;
  LODWORD(v376) = (v375 ^ 0x2A) << 24;
  int v377 = (v376 >> 25) - ((2 * (v376 >> 25)) & 0x68) - 76;
  unsigned int v378 = (((4 * v377) ^ 0xFFFFFFD0) - ((8 * v377) & 0x40) - 96) ^ v377;
  unsigned int v379 = ((((v378 ^ 0xC1) - ((2 * (v378 ^ 0xC1)) & 0xEC)) << 24) - 167772160) ^ 0xF6000000;
  unsigned int v380 = byte_100288A80[STACK[0x2F8] ^ 0x94];
  int v381 = (v379 - ((2 * v379) & 0x4E000000) + 660153514) ^ 0x275924AA | (v374 + 569539073) ^ 0x21F27A01;
  unsigned int v382 = (v381 - ((2 * v381) & 0xDC691A8) - 2031925036) ^ 0x86E348D4 | (v361 - 1363689782) ^ 0xAEB7BECA;
  unsigned int v383 = v382 - ((2 * v382) & 0xEAFA228A) + 1971130693;
  unsigned int v384 = v380 ^ 0x61 ^ (((((v380 >> 1) & 0x44 ^ 0xFFFFFFFB) - 33) ^ 0xC1) + 15);
  unsigned int v385 = (((v384 - ((2 * v384) & 0x1DA)) << 8) - 1049170688) ^ 0xC176ED00;
  unsigned int v386 = (v385 - ((2 * v385) & 0x3FE8F200) - 537626293) ^ 0xDFF4794B | (v363 + 235040309) ^ 0xE026E35;
  int v387 = (v371 - ((2 * v371) & 0x65BF0D3E) + 853509791) ^ 0x32DF869F | ((STACK[0x3B8] ^ 0xA0 ^ byte_10026BD00[STACK[0x3B8] ^ 0xF4])
                                                                      - ((2
                                                                        * (STACK[0x3B8] ^ 0xA0 ^ byte_10026BD00[STACK[0x3B8] ^ 0xF4])) & 0x176)
                                                                      - 508421701) ^ 0xE1B219BB;
  unsigned int v388 = byte_100288A80[*(unsigned __int8 *)(STACK[0x290] + 11) ^ 0x44];
  int v389 = v387 - ((2 * v387) & 0x1E2D9430) - 1894331880;
  int v390 = v388 ^ (((2 * (~(v388 >> 1) & 0x44)) | 0x6A) - (~(v388 >> 1) & 0x44) + 75) ^ 0xC;
  unsigned int v391 = (v390 - ((2 * v390) & 0x1CC) - 1174345242) ^ 0xBA00E9E6 | (v366
                                                                                   - ((2 * v366) & 0x88DD9FF2)
                                                                                   + 1148112889) ^ 0x446ECFF9;
  int v392 = ((BYTE1(v383) ^ 0x3E) - 1306438566 + ((2 * (BYTE1(v383) ^ 0x3E) + 316) & 0x77777777 ^ 0x5B77BFFF)) ^ dword_100290CB0[BYTE1(v383) ^ 6];
  HIDWORD(v376) = v392 ^ 0xE49965;
  LODWORD(v376) = v392 ^ 0x12000000;
  int v393 = (v376 >> 24) - ((2 * (v376 >> 24)) & 0x2137A628) + 278647572;
  int v394 = dword_100295120[v378 ^ 0x99];
  unsigned int v395 = 96924509 * v394 - ((193849018 * v394 - 799979766) & 0xC2B525DC) - 914147725;
  int v396 = (((2 * ((v395 >> 2) & 0x94457BF ^ 0x1001634)) & 0x10880C64) - ((v395 >> 2) & 0x94457BF ^ 0x1001634) + 1127479693) ^ 0x4A336B8E;
  int v397 = (v396 - ((2 * v396) & 0x43813F00) + 635477888) ^ v395;
  HIDWORD(v376) = v397 ^ 0xFA;
  LODWORD(v376) = v397 ^ 0x7AD60500;
  int v398 = (v376 >> 8) - ((2 * (v376 >> 8)) & 0xF20EA9AA) - 116960043;
  int v399 = dword_100285750[v357 ^ 0x95];
  int v400 = v399 - ((2 * v399 + 54081700) & 0x30D341F0) + 436616522;
  int v401 = dword_100285750[(v359 ^ ~STACK[0x310])];
  HIDWORD(v376) = v400 ^ 0xFB;
  LODWORD(v376) = v400 ^ 0xE6D80000;
  int v402 = ((v376 >> 16) - ((2 * (v376 >> 16)) & 0x8A08B564) + 1157913266) ^ (v401
                                                                          - ((2 * v401 + 54081700) & 0x5EC6D0B6)
                                                                          + 822084781) ^ (v386
                                                                                        - ((2 * v386) & 0xF32831C0)
                                                                                        - 107734816) ^ v398 ^ v393;
  int v403 = v389 ^ (v391 - ((2 * v391) & 0x61364B22) - 1332009583) ^ v402;
  unsigned int v404 = v403 ^ v383 ^ 0xD96B5EF8;
  int v405 = dword_100295120[HIBYTE(v404) ^ 0xC5];
  if (v336) {
    int v406 = v303;
  }
  else {
    int v406 = v304;
  }
  LODWORD(STACK[0x3B8]) = v406;
  if (v336) {
    int v407 = v304;
  }
  else {
    int v407 = v303;
  }
  LODWORD(STACK[0x26C]) = v407;
  unsigned int v408 = 96924509 * v405 - ((193849018 * v405 + 1347503882) & 0x607060EA) + 408998906;
  char v409 = -1 - ((33 - (HIBYTE(v404) | 0xEF)) & 0x10 | 0x42);
  int v410 = (((2 * ((v408 >> 2) & 0x94457BF ^ 0x825087C)) & 0x1282A13A) - ((v408 >> 2) & 0x94457BF ^ 0x825087C) + 1916677986) ^ v408;
  HIDWORD(v411) = v410 ^ 0x6E;
  LODWORD(v411) = v410 ^ 0xFC0F9B00;
  unsigned int v412 = ((((v403 ^ v383 ^ 0xC812AA17) >> (v409 ^ 0xBD))
         - ((2 * ((v403 ^ v383 ^ 0xC812AA17) >> (v409 ^ 0xBD))) & 0x7EA01F3C)
         + 1062211486) ^ 0x3F500F9E) >> (v409 & 0x10);
  int v413 = dword_1002702A0[(v412 - ((2 * v412) & 0x80) - 64) ^ 0x36];
  int v414 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xF514D074);
  HIDWORD(v411) = v413 ^ 0x1A6468;
  LODWORD(v411) = v413 ^ 0xDFFFFFFF;
  int v415 = (v411 >> 27) + 1207991115 + (~(2 * (v411 >> 27)) | 0x6FFF096B);
  unsigned int v416 = (((2 * v415) ^ 0x9000F694) - ((2 * ((2 * v415) ^ 0x9000F694)) & 0x6F0AAD20) + 931485329) & 0xE97D4E04 ^ 0x3787F7FA;
  int v417 = (v416 - ((2 * v416) & 0x613DFD6C) + 815726263) ^ v415;
  int v418 = (((2 * (BYTE1(v404) ^ 0x64)) | 0x570834C2) - (BYTE1(v404) ^ 0x64) - 730077793) ^ 0xDA41661;
  HIDWORD(v411) = v417 ^ 0x84CD;
  LODWORD(v411) = v417 ^ 0x50D60000;
  int v419 = dword_1002702A0[(((2 * v418) | 0x8548962A) - v418 + 1029420267) ^ 0xE4844773];
  int v420 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x5C4BDBCC);
  HIDWORD(v411) = v419 ^ 0x1A6468;
  LODWORD(v411) = v419 ^ 0xDFFFFFFF;
  int v421 = v420 + 774237670;
  int v422 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x23CE18D2) + 300354665;
  unsigned int v423 = (((2 * v422) ^ 0x23CE18D2) - ((2 * ((2 * v422) ^ 0x23CE18D2)) & 0x60CBA438) - 1335504356) & 0xE97D4E04 ^ 0xB6E7F3FE;
  unsigned int v424 = (v423 - ((2 * v423) & 0xD2708800) + 1463141297) ^ v422;
  HIDWORD(v411) = v424 ^ 0x95C908;
  LODWORD(v411) = v424 ^ 0x42000000;
  int v425 = dword_100295120[(((2 * ((v403 ^ v383) ^ 0xB2)) | 0xADCD10C)
                        - ((v403 ^ v383) ^ 0xB2)
                        + 1922144122) & 0xFFFFFFF ^ 0xD6E68F7];
  unsigned int v426 = 96924509 * v425 - ((193849018 * v425 + 1347503882) & 0x55722C0E) - 1830700660;
  unsigned int v427 = (((2 * ((v426 >> 2) & 0x94457BF ^ 0x4568B)) & 0x12880950) - ((v426 >> 2) & 0x94457BF ^ 0x4568B) - 1834421417) ^ 0xC282F85D;
  int v428 = (v414 - 91592646) ^ v426 ^ (((2 * v427) | 0xE081B2AA) - v427 - 1883298133) ^ ((v411 >> 24)
                                                                                     - ((2 * (v411 >> 24)) & 0xA662EF24)
                                                                                     + 1395750802) ^ v421;
  unsigned int v429 = v389 ^ 0xE6B6FB57;
  unsigned int v430 = v402 ^ 0xC8E9F944;
  int v431 = v429 ^ v428;
  int v432 = v428 ^ v430;
  LODWORD(STACK[0x3B0]) = v428 ^ v430;
  unsigned int v433 = v403 ^ v404 ^ v429 ^ v428;
  unsigned int v434 = v433 ^ 0xF8ABE76F;
  int v435 = ((unsigned __int16)(v433 ^ 0xE76F) >> 8);
  unsigned int v436 = ((v435 ^ 0x33 | 0xA6157F55) - (v435 ^ 0x33 | 0x59EA80AA) + 1508540586) ^ 0xA6060C55;
  unsigned int v437 = ((v435 ^ 0x20A08E) + (((v433 ^ 0xF8ABE76F) >> 8) & 0xE2 ^ 0x84C01460) - ((v435 ^ 0x20A08E) & 0x20E2)) ^ 0x84E094DD;
  int v438 = (v437 - ((2 * v437 + 648701244) & 0x2F805AAC) - 350920716) ^ dword_100290CB0[(((2 * v436) & 0x5C25AA66)
                                                                                     - v436
                                                                                     - 1846727988) ^ 0x91FE5976];
  HIDWORD(v411) = v438 ^ 0xE89588;
  LODWORD(v411) = v438 ^ 0xDB000000;
  unsigned int v439 = v433 ^ 0xF7400572;
  int v440 = dword_100285750[HIBYTE(v433) ^ 8];
  int v441 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xE2111148) - 251098972;
  int v442 = v440 - ((2 * v440 + 54081700) & 0x10F24CB2) + 169198251;
  int v443 = ((2 * (BYTE2(v434) ^ 0xF8)) & 0x1A2) - (BYTE2(v434) ^ 0xF8) - 167193298;
  HIDWORD(v411) = v442 ^ 0x5A;
  LODWORD(v411) = v442 ^ 0xF6C88600;
  int v444 = (v443 & 0x3008C2BD ^ 0x40AB1) + (v443 ^ 0x72EBF50E) - ((v443 ^ 0x72EBF50E) & 0x6022BD);
  int v445 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xEA1C09EC);
  unsigned int v446 = ((v444 ^ 0xB48FCA1A) - ((2 * (v444 ^ 0xB48FCA1A) + 648701244) & 0x29D9E502) - 398318305) ^ dword_100290CB0[v444 ^ 0xB48FCA22];
  HIDWORD(v411) = v446 ^ 0x4A5F;
  LODWORD(v411) = v446 ^ 0xD8C40000;
  int v447 = v445 - 183630602;
  int v448 = dword_100295120[(((2 * (v434 ^ 0xE6)) | 0x79CB9534)
                        - (v434 ^ 0xE6)
                        - 1021692570) ^ 0x3CE5CA43];
  unsigned int v449 = 96924509 * v448 - ((193849018 * v448 - 799979766) & 0x941B9F5E) - 1305054412;
  int v450 = v449 ^ v447 ^ v432 ^ v441 ^ ((v411 >> 16) - ((2 * (v411 >> 16)) & 0xA0FF77D8) + 1350548460) ^ (((2 * ((v449 >> 2) & 0x94457BF ^ 0x140112A)) & 0x1008A758) - ((v449 >> 2) & 0x94457BF ^ 0x140112A) + 291570771) ^ 0xF3C43C58;
  int v451 = v403 ^ 0x387C0FDB ^ v450;
  int v452 = ((v451 ^ v439) >> 16) ^ 0x40924497;
  int v453 = dword_100295120[(v452 + (((v451 ^ v439) >> 16) & 0x52 ^ 0x8B65A240) - (v452 & 0x40924452)) ^ 0x8B65A284];
  unsigned int v454 = 96924509 * v453 - ((193849018 * v453 - 799979766) & 0xFE1270C2) + 1731320806;
  int v455 = (v454 >> 2) & 0x94457BF ^ v454;
  HIDWORD(v411) = v455 ^ 0xF661;
  LODWORD(v411) = v455 ^ 0xC8610000;
  int v456 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x7DE3B14A) + 1056037029;
  unsigned int v457 = (v451 ^ v439) >> 8;
  unsigned int v458 = ((((unsigned __int16)(v451 ^ v439) >> 8) ^ 4)
        + (v457 & 0x44 ^ 0x8F04D140)
        - ((((unsigned __int16)(v451 ^ v439) >> 8) ^ 4) & 0x44444444)) ^ 0xD2A4F9C6;
  int v459 = ((v457 & 0xB5 ^ 0x701) + (v457 & 0x4A ^ 0xB) - 1) ^ 0x752;
  int v460 = (v459 - 899253418 + ((2 * v459 + 25916) & 0x916E ^ 0x59DDFFFF)) ^ dword_100290CB0[(((2 * v458) & 0xA9400742)
                                                                                          - v458
                                                                                          - 1458766754) ^ 0xF4ACD4B9];
  unsigned int v461 = (((v451 ^ v439) ^ 0x8F)
        + ((v451 ^ v439) & 0x3D ^ 0x5F0E2530)
        - (((v451 ^ v439) ^ 0x8F) & 0x3D)) ^ 0x809748F7;
  HIDWORD(v411) = v460 ^ 0x39F069;
  LODWORD(v411) = v460 ^ 0x3B000000;
  int v462 = dword_1002702A0[((v461 | 0x96E69F55) - (v461 | 0x691960AA) + 1763270826) ^ 0x497FF2CC];
  int v463 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xEAE861AC);
  HIDWORD(v411) = v462 ^ 0x1A6468;
  LODWORD(v411) = v462 ^ 0xDFFFFFFF;
  int v464 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x5F760E70) - 1346697416;
  unsigned int v465 = (((2 * v464) ^ 0x5F760E70) - 2 * (((2 * v464) ^ 0x5F760E70) & 0x777B9BEA ^ (2 * v464) & 2) + 2004589544) & 0xE97D4E04 ^ 0x77FBBBFA;
  int v466 = dword_100285750[(v451 ^ ~v439) >> 24];
  int v467 = v466 - ((2 * v466 + 54081700) & 0x3A22D266) + 514721157;
  HIDWORD(v411) = v467 ^ 0x30;
  LODWORD(v411) = v467 ^ 0xE3A0C900;
  int v468 = v450 ^ v431;
  int v469 = v464 ^ ((v411 >> 8) - ((2 * (v411 >> 8)) & 0x7C51CE6C) - 1104615626) ^ v456 ^ v450 ^ (v463 + 1970548950) ^ 0xBA1F3F87 ^ (v465 - ((2 * v465) & 0x10488008) + 1973690189);
  int v470 = v468 ^ v469;
  unsigned int v471 = v468 ^ v469 ^ v439;
  int v472 = (((2 * (v471 ^ 0x89)) & 0x62) - (v471 ^ 0x89) - 2130115122) ^ 0x2807DA;
  int v473 = dword_100295120[(((2 * v472) | 0xCC3E75AE) - v472 - 1713322711) ^ 0xE73E3853];
  unsigned int v474 = 96924509 * v473 - ((59631290 * v473 + 5326602) & 0x40B3042) + 1781414822;
  int v475 = (((v474 >> 2) & 0x10051B3 ^ 0x805912) + ((v474 >> 2) & 0x844060C ^ 0x2C3E0401) - 1) ^ 0x3CBE1B2F;
  unsigned int v476 = ((BYTE1(v471) ^ 0xFC | 0x73AAD353) - (BYTE1(v471) ^ 0xFC | 0x8C552CAC) - 1940575060) ^ 0x67AB9043;
  unsigned int v477 = ((BYTE1(v471) ^ 0x1300218) - ((2 * (BYTE1(v471) ^ 0x1300218)) & 0x2200434) - 1860828390) ^ 0x90260131;
  unsigned int v478 = (v477 - ((2 * v477 - 1498782404) & 0xCF163874) - 1159704872) ^ dword_100290CB0[(((2 * v476) & 0x5533DCAC)
                                                                                       - v476
                                                                                       - 1788472919) ^ 0x8167524E];
  HIDWORD(v411) = v478 ^ 0xA3A4E4;
  LODWORD(v411) = v478 ^ 0x2B000000;
  int v479 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0xF6F0B6A) + 129467829;
  unsigned int v480 = ((2 * (BYTE2(v471) ^ 0xF)) | 0xCCC7C86A) - (BYTE2(v471) ^ 0xF) - 1717822517;
  int v481 = dword_100285750[((v480 & 0xDA4B0A4C ^ 0x98010848) + (v480 ^ 0x667E6614) - ((v480 ^ 0x667E6614) & 0xDA4B0A4C)) ^ 0xDA568848];
  unsigned int v482 = v481 - ((2 * v481 + 54081700) & 0x98B4CF4C) + 1308034040;
  HIDWORD(v411) = v482 ^ 0xC7A5;
  LODWORD(v411) = v482 ^ 0xB2EB0000;
  int v483 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x6D7D754E) + 918469287;
  int v484 = dword_100295120[HIBYTE(v471) ^ 0x32];
  unsigned int v485 = 96924509 * v484 - ((193849018 * v484 - 799979766) & 0xB410D728) - 1036972263;
  int v486 = (((v485 >> 2) & 0x4458A ^ 0x2497490B) + ((v485 >> 2) & 0x9401235) - 1) ^ 0x9401211;
  unsigned int v487 = ((v486 & 0x40C12 ^ 0xC0208451) + (v486 & 0x94053AD) - 1) ^ v485;
  HIDWORD(v411) = v487 ^ 0x62;
  LODWORD(v411) = v487 ^ 0xAD442E00;
  int v488 = v474 ^ v483 ^ ((v411 >> 8) - ((2 * (v411 >> 8)) & 0xBF509706) - 542618749) ^ v469 ^ (((2 * v475) & 0x10003758)
                                                                                            - v475
                                                                                            - 1789606829) ^ v479 ^ 0xC67F073E;
  int v489 = v488 ^ v451;
  int v490 = v488 ^ v451 ^ v471;
  unsigned int v491 = v490 ^ 0x8FAA257C;
  unsigned int v492 = v490 ^ 0x89395957;
  unsigned int v493 = (v490 ^ 0xE1)
       + ((v490 ^ 0x8FAA257C) & 0x68 ^ 0x67656060)
       - ((v490 ^ 0xE1) & 0x68);
  int v494 = dword_1002702A0[((v493 & 0x4243560 ^ 0x80101520) + (v493 ^ 0x56E42248) - ((v493 ^ 0x56E42248) & 0x20007560)) ^ 0x95B537E1];
  HIDWORD(v411) = v494 ^ 0x1A6468;
  LODWORD(v411) = v494 ^ 0xDFFFFFFF;
  int v495 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x3074A1FC) + 406475006;
  unsigned int v496 = (((2 * v495) ^ 0x3074A1FC) + 1295958204 + (~(2 * ((2 * v495) ^ 0x3074A1FC)) | 0x65827E8B)) & 0xE97D4E04 ^ 0x5FBEF1FA;
  int v497 = dword_100295120[(((2 * (BYTE1(v491) ^ 0xC100105C)) | 0x73369160) - (BYTE1(v491) ^ 0xC100105C) + 1181005648) ^ 0x789B5844];
  unsigned int v498 = 96924509 * v497 - ((193849018 * v497 - 799979766) & 0xC847297C) - 867420093;
  unsigned int v499 = (((v498 >> 2) & 0x94457BF ^ 0x844429F | 0x1619D1EF)
        - ((v498 >> 2) & 0x94457BF ^ 0x844429F | 0xE9E62E10)
        - 370790896) ^ 0x77DD2BF;
  int v500 = (v499 - ((2 * v499) & 0x799EF018) + 2093971468) ^ v498;
  HIDWORD(v411) = v500 ^ 0xE4604A;
  LODWORD(v411) = v500 ^ 0x36000000;
  int v501 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x5EC12124) + 794857618;
  int v502 = dword_100295120[BYTE2(v491) ^ 0x9C];
  unsigned int v503 = 96924509 * v502 - ((193849018 * v502 - 799979766) & 0x930184E4) + 833185271;
  int v504 = (v503 >> 2) & 0x94457BF ^ v503;
  HIDWORD(v411) = v504 ^ 0x5AF6;
  LODWORD(v411) = v504 ^ 0xF7E80000;
  int v505 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x47FF3868) - 1543529420;
  unsigned int v506 = ((HIBYTE(v491) ^ 0x88) + 24768717 + ((2 * (HIBYTE(v491) ^ 0x88) + 60) & 0x5C ^ 0xFBF79BFF)) ^ dword_100290CB0[HIBYTE(v491) ^ 0xB0];
  HIDWORD(v411) = v506 ^ 0xF0;
  LODWORD(v411) = v506 ^ 0xE20C0600;
  int v507 = v505 ^ v495 ^ (v496 - ((2 * v496) & 0x52880008) + 650203050) ^ ((v411 >> 8)
                                                                       - ((2 * (v411 >> 8)) & 0x11277960)
                                                                       + 143899824) ^ v501;
  int v508 = v507 ^ v488;
  int v509 = v507 ^ v470;
  LODWORD(STACK[0x320]) = v509 ^ 0x1994262A;
  int v510 = v489 ^ 0x6ABA6D4F ^ v509 ^ 0x1994262A;
  unsigned int v511 = v510 ^ v492;
  int v512 = v510;
  LODWORD(STACK[0x290]) = v510;
  int v513 = ((v510 ^ v492) >> 16);
  unsigned int v514 = ((v513 ^ 3 | 0xFFB02A1D) - (v513 ^ 3 | 0x4FD5E2) + 5232098) ^ 0xEFBC621F;
  unsigned int v515 = (((v511 >> 15) & 0x162) + (v513 ^ 0xFFFFFFB7) + 2019608655) ^ 0x7860C83D;
  int v516 = (v515 - ((2 * v515 + 111830332) & 0x88394) + 1465611368) ^ dword_100290CB0[((v514 | 0x359825A3)
                                                                                   - (v514 | 0xCA67DA5C)
                                                                                   - 899163556) ^ 0x25946DA1];
  HIDWORD(v411) = v516 ^ 0xF914;
  LODWORD(v411) = v516 ^ 0x482E0000;
  int v517 = (v411 >> 16) - ((2 * (v411 >> 16)) & 0x24CE59A6) - 1838732077;
  int v518 = dword_100295120[(((2 * (BYTE1(v511) ^ 0xF)) | 0xC9B22838) - (BYTE1(v511) ^ 0xF) + 455535588) ^ 0xE4D9146C];
  unsigned int v519 = 96924509 * v518 - ((193849018 * v518 - 799979766) & 0x8F3C55E8) - 1345925511;
  int v520 = ((2 * ((v519 >> 2) & 0x94457BF ^ 0x10012BA)) & 0x8F04) - ((v519 >> 2) & 0x94457BF ^ 0x10012BA) + 1809158269;
  unsigned int v521 = ((v520 & 0x2247C826 ^ 0x84064806) + (v520 ^ 0x6BC1B078) - ((v520 ^ 0x6BC1B078) & 0x47C826)) ^ v519;
  HIDWORD(v411) = v521 ^ 0xA15AC8;
  LODWORD(v411) = v521 ^ 0xDFFFFFFF;
  int v522 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x7D4C14D4) - 1096414614;
  int v523 = dword_1002702A0[HIBYTE(v511) ^ 0x68];
  HIDWORD(v411) = v523 ^ 0x1A6468;
  LODWORD(v411) = v523 ^ 0xDFFFFFFF;
  int v524 = (v411 >> 27) - ((2 * (v411 >> 27)) & 0x404B6DBA) + 539342557;
  unsigned int v525 = (((2 * v524) ^ 0x404B6DBA) - ((2 * ((2 * v524) ^ 0x404B6DBA)) & 0x25BBE68) - 2127700171) & 0xE97D4E04 ^ 0x97AFFFFE;
  unsigned int v526 = (v525 - ((2 * v525) & 0xE9FFF138) + 1962932381) ^ v524;
  HIDWORD(v411) = v526 ^ 0x70;
  LODWORD(v411) = v526 ^ 0x7C924F00;
  unsigned int v527 = v511 ^ 0x9234560F;
  LODWORD(STACK[0x22C]) = v511 ^ 0x9234560F;
  int v528 = dword_100285750[(((2 * (v511 ^ 0x63)) | 0xCC52651E)
                        - (v511 ^ 0x63)
                        - 1713975951) ^ 0x66293226];
  int v529 = (v528 - ((2 * v528 + 54081700) & 0x16DE79FA) - 1928603313) ^ ((v411 >> 8)
                                                                     - ((2 * (v411 >> 8)) & 0x855E62D4)
                                                                     - 1028705942) ^ v508 ^ v517 ^ 0x2C6AD534 ^ v522;
  int v530 = v509 ^ 0x7EB53B76 ^ v529;
  LODWORD(STACK[0x228]) = v529;
  LODWORD(STACK[0x284]) = v530 ^ v512;
  int v531 = v530 ^ v512 ^ 0x392D0FE5;
  unsigned int v532 = v531 ^ v527;
  int v533 = v509 ^ 0x76 ^ v529 ^ v512 ^ 0xE5 ^ v527 ^ 0xDB;
  int v534 = dword_100295120[(((v533 - ((2 * v533) & 0x84) + 1368143938) & 0x10C0D5F ^ 0x2062450E)
                        + ((v533 - ((2 * v533) & 0x84) + 1368143938) ^ 0xD51CB851)
                        - (((v533 - ((2 * v533) & 0x84) + 1368143938) ^ 0xD51CB851) & 0x84000D5F)) ^ 0x21FECDBB];
  unsigned int v535 = 96924509 * v534 - ((193849018 * v534 - 799979766) & 0xCF48BB92) + 1338835278;
  unsigned int v536 = ((v532 >> 8) & 0x49 ^ 0x9B400141) + ((v532 >> 8) & 0xB6 ^ 0x23) - 1;
  int v537 = dword_100285750[((v536 & 0x23A ^ 0x47324E1B) + (v536 & 0x1C5) - 1) ^ 0x47324F76];
  int v538 = v537 - ((2 * v537 + 54081700) & 0x4233D20E) + 582387033;
  HIDWORD(v411) = v538 ^ 0xA84904;
  LODWORD(v411) = v538 ^ 0xDFFFFFFF;
  int v539 = (v411 >> 24) - ((2 * (v411 >> 24)) & 0x33C5212A) - 1713205099;
  int v540 = dword_100295120[((v531 ^ v527) >> 24) ^ 0xBA];
  unsigned int v541 = 96924509 * v540 - ((193849018 * v540 - 799979766) & 0xAE2557C8) - 1086632087;
  int v542 = (((2 * ((v541 >> 2) & 0x94457BF ^ 0x140031F)) & 0x80A348) - ((v541 >> 2) & 0x94457BF ^ 0x140031F) - 75198949) ^ v541;
  HIDWORD(v411) = v542 ^ 0x41;
  LODWORD(v411) = v542 ^ 0x92BAAC00;
  int v543 = (v411 >> 8) - ((2 * (v411 >> 8)) & 0xEE3C24CE) - 149024153;
  LOWORD(v541) = (BYTE2(v532) ^ 0x27) - ((2 * (BYTE2(v532) ^ 0x27)) & 0x1EA) + 8949;
  int v544 = dword_100285750[((v541 & 0x2C ^ 0xD930429) + (v541 & 0x3D3) - 1) ^ 0xD9306A8];
  int v545 = v544 - ((2 * v544 + 54081700) & 0xB2DF990) + 120822042;
  HIDWORD(v411) = v545 ^ 0x5CCB;
  LODWORD(v411) = v545 ^ 0xFB270000;
  int v546 = v535 ^ v539 ^ ((v411 >> 16) - ((2 * (v411 >> 16)) & 0xF346D234) - 106731238) ^ v543 ^ (((2
                                                                                                * ((v535 >> 2) & 0x94457BF ^ 0x1C107733)) & 0x30A8040E)
                                                                                              - ((v535 >> 2) & 0x94457BF ^ 0x1C107733)
                                                                                              + 117636600) ^ v529 ^ 0x6FF108B3;
  int v547 = v530 ^ v546;
  unsigned int v548 = (v530 ^ v546 ^ LODWORD(STACK[0x3C8]) ^ 0x7F5AC0A6)
       + (((v492 ^ 0x4B9F3388 ^ LODWORD(STACK[0x28C])) + 1) ^ 0x7FBF7BDD)
       + ((2 * ((v492 ^ 0x4B9F3388 ^ LODWORD(STACK[0x28C])) + 1)) & 0xFF7EF7BA)
       - 2143255517;
  int v549 = v548 + 860921063 - ((2 * v548) & 0x66A139CE);
  unsigned int v550 = (~v549 & 0x400 | ((((~v549 & 0x400u) >> 10) & 1) << 11)) ^ 0x3FDF56BF;
  unsigned int v551 = (&unk_100294700 ^ 0x8FF5F7BB) + 1879705669 + (STACK[0x3E0] & 0x1FEBEF60);
  unsigned int v552 = v551 - ((2 * v551) & 0xC78169FA) - 473910019;
  unsigned int v553 = (v550 - 1071601343) & (v552 ^ 0xE3C0B400);
  int v554 = STACK[0x3F0];
  if (!v336) {
    int v554 = STACK[0x3E8];
  }
  LODWORD(STACK[0x288]) = v554;
  int v555 = STACK[0x3C0];
  if (v336) {
    int v555 = STACK[0x3A8];
  }
  LODWORD(STACK[0x318]) = v555;
  int v556 = STACK[0x338];
  if (!v336) {
    int v556 = STACK[0x2D8];
  }
  LODWORD(STACK[0x350]) = v556;
  int v557 = STACK[0x410];
  if (v336) {
    int v557 = STACK[0x344];
  }
  LODWORD(STACK[0x2F8]) = v557;
  int v558 = STACK[0x2C0];
  if (!v336) {
    int v558 = STACK[0x2AC];
  }
  LODWORD(STACK[0x310]) = v558;
  LODWORD(STACK[0x264]) = v335;
  int v559 = STACK[0x388];
  if (!v336) {
    int v559 = v335;
  }
  LODWORD(STACK[0x25C]) = v559;
  int v560 = STACK[0x3D8];
  if (!v336) {
    int v560 = STACK[0x3A0];
  }
  LODWORD(STACK[0x238]) = v560;
  int v561 = STACK[0x2E0];
  if (v336) {
    int v561 = STACK[0x2DC];
  }
  LODWORD(STACK[0x260]) = v561;
  int v562 = STACK[0x2D0];
  if (v336) {
    int v562 = STACK[0x2CC];
  }
  LODWORD(STACK[0x2F0]) = v562;
  int v563 = STACK[0x2A4];
  if (v336) {
    int v563 = STACK[0x2A0];
  }
  LODWORD(STACK[0x258]) = v563;
  int v564 = STACK[0x2D4];
  if (!v336) {
    int v564 = STACK[0x2B4];
  }
  LODWORD(STACK[0x2E8]) = v564;
  int v565 = STACK[0x408];
  if (!v336) {
    int v565 = STACK[0x400];
  }
  LODWORD(STACK[0x348]) = v565;
  int v566 = STACK[0x2C8];
  if (v336) {
    int v566 = STACK[0x2C4];
  }
  LODWORD(STACK[0x204]) = v566;
  int v567 = STACK[0x2B0];
  if (!v336) {
    int v567 = STACK[0x2A8];
  }
  LODWORD(STACK[0x270]) = v567;
  int v568 = v532 ^ 0x23C028EE;
  unsigned int v569 = v532 ^ 0x23C028EE ^ v531 ^ v547;
  int v570 = v531 ^ v547;
  LODWORD(STACK[0x28C]) = v531 ^ v547;
  int v571 = v532 ^ 0xEE ^ (v531 ^ v547) ^ 0x3464B3;
  int v572 = dword_100285750[(((2 * v571) & 0x600164) - v571 - 1811484851) ^ 0x94328B6D];
  int v573 = dword_1002702A0[(((v569 >> 8) & 0x2F ^ 0x92E4F421) + ((v569 >> 8) & 0xD0 ^ 0x81) - 1) ^ 0x92E4F423];
  HIDWORD(v574) = v573 ^ 0x1A6468;
  LODWORD(v574) = v573 ^ 0xDFFFFFFF;
  int v575 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0xDB783E88) + 1841045316;
  unsigned int v576 = (((2 * v575) ^ 0xDB783E88) - 2 * (((2 * v575) ^ 0xDB783E88) & 0x3FA40ABA ^ (2 * v575) & 2) + 1067715256) & 0xE97D4E04 ^ 0x3FA6BBFA;
  int v577 = (v576 - ((2 * v576) & 0x42321400) - 1869182586) ^ v575;
  HIDWORD(v574) = v577 ^ 0x6F940E;
  LODWORD(v574) = v577 ^ 0xF4000000;
  int v578 = (v574 >> 24) - ((2 * (v574 >> 24)) & 0x28F7B6D8);
  int v579 = dword_100295120[((HIWORD(v569) & 0xF ^ 0x36922D0D) + (HIWORD(v569) & 0xF0 ^ 0x150B1) - 1) ^ 0x36937DED];
  unsigned int v580 = 96924509 * v579 - ((193849018 * v579 - 799979766) & 0xE041F34E) + 1481219372;
  int v581 = (v580 >> 2) & 0x94457BF ^ v580;
  HIDWORD(v574) = v581 ^ 0x6796;
  LODWORD(v574) = v581 ^ 0xC6080000;
  char v582 = v578 + 108;
  int v583 = (v574 >> 16) - ((2 * (v574 >> 16)) & 0x4B583EA2);
  unsigned int v584 = v569 ^ 0xA1129B5E;
  int v585 = dword_1002702A0[HIBYTE(v569) ^ 0xFD];
  HIDWORD(v574) = v585 ^ 0x1A6468;
  LODWORD(v574) = v585 ^ 0xDFFFFFFF;
  int v586 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0xC3FE81DE) - 503365393;
  unsigned int v587 = (((2 * v586) ^ 0xC3FE81DE) - ((2 * ((2 * v586) ^ 0xC3FE81DE)) & 0x5EEA0D3C) - 1351285089) & 0xE97D4E04 ^ 0xBFF7B7FE;
  unsigned int v588 = (v587 + 379318794 + ((2 * v587) & 0x328400 ^ 0xD2FA9FEF)) ^ v586;
  HIDWORD(v574) = v588 ^ 0xD6;
  LODWORD(v574) = v588 ^ 0xDF2CB300;
  v583 += 632037201;
  int v589 = v583 ^ (v572 - ((2 * v572 + 54081700) & 0xAEB9E950) + 1492750586) ^ ((v574 >> 8)
                                                                            - ((2 * (v574 >> 8)) & 0x7D01D570)
                                                                            - 1098847560) ^ (v578 + 343661420);
  int v590 = v530 ^ v589 ^ v570 ^ 0x289562B9;
  int v591 = (v584 ^ v530 ^ v583 ^ (v572 - ((2 * v572 - 92) & 0x50) - 6) ^ (BYTE1(v574)
                                                                                       - ((2 * BYTE1(v574)) & 0x70)
                                                                                       - 72) ^ v582 ^ v570 ^ 0xB9) ^ 0x9A;
  unsigned int v592 = (v591 + ((v584 ^ v590) & 0xE1 ^ 0xB6224961) - (v591 & 0xFFFFFFE1)) ^ 0xBF223D49;
  int v593 = dword_100295120[((v592 | 0x4A360A28) - (v592 | 0xB5C9F5D7) - 1245055529) ^ 0x43367EE2];
  unsigned int v594 = 96924509 * v593 - ((193849018 * v593 - 799979766) & 0xC9907C32) - 856628834;
  int v595 = ((v594 >> 2) & 0x94457BF ^ 0x944023A) - ((2 * ((v594 >> 2) & 0x94457BF ^ 0x944023A)) & 0x2000D00) + 1102057152;
  int v596 = (v595 & 0x1114B538 ^ 0x10201521) + (v595 & 0x6E4B4A87);
  int v597 = dword_1002702A0[((v584 ^ v590) >> 24) ^ 0x59];
  HIDWORD(v574) = v597 ^ 0x1A6468;
  LODWORD(v574) = v597 ^ 0xDFFFFFFF;
  int v598 = (v574 >> 27) - ((2 * (v574 >> 27)) & 0x19748548) + 213533348;
  unsigned int v599 = (((2 * v598) ^ 0x19748548) - 2 * (((2 * v598) ^ 0x19748548) & 0x13E953FE ^ (2 * v598) & 4) + 334058490) & 0xE97D4E04 ^ 0x17EBF3FA;
  int v600 = (v599 - ((2 * v599) & 0x2D20C00) - 278502345) ^ v598;
  int v601 = dword_100285750[((unsigned __int16)(v584 ^ v530 ^ v589 ^ v570 ^ 0x62B9) >> 8) ^ 0x7A];
  HIDWORD(v574) = v600 ^ 0x5F;
  LODWORD(v574) = v600 ^ 0x3799E400;
  int v602 = (v574 >> 8) - ((2 * (v574 >> 8)) & 0x5D9A0F9C) - 1362294834;
  int v603 = v601 - 2 * ((v601 + 27040850) & 0x345381F ^ v601 & 1) - 2065574800;
  HIDWORD(v574) = v603 ^ 0xF4981D;
  LODWORD(v574) = v603 ^ 0x7D000000;
  int v604 = (v574 >> 24) - ((2 * (v574 >> 24)) & 0xB0405608) - 668980476;
  int v605 = ((v584 ^ v590) >> 16);
  unsigned int v606 = ((v605 ^ 0xBB) - ((2 * (v605 ^ 0xBB)) & 0x9C) - 1431846322) ^ 0x8EEEE2EE;
  int v607 = (((2 * v606) | 0x28C38588) - v606 - 341951172) ^ 0x3028E25B;
  int v608 = (v607 - ((2 * v607 + 648701244) & 0x518721FA) - 65485925) ^ dword_100290CB0[(((-(v605 ^ 9) - 570011137) ^ 0xDC1445F9 | 0x1EB6BA60)
                                                                                    - ((-(v605 ^ 9) - 570011137) ^ 0xDC1445F9 | 0xE149459F)
                                                                                    - 515291745) ^ 0x1CA4AED3];
  HIDWORD(v574) = v608 ^ 0x2823;
  LODWORD(v574) = v608 ^ 0xE4EB0000;
  int v609 = v594 ^ v604 ^ (v596 - 1) ^ v546 ^ v589 ^ ((v574 >> 16) - ((2 * (v574 >> 16)) & 0x1DE20276) + 250675515) ^ v602 ^ 0x855D6BA8;
  HIDWORD(v574) = LODWORD(STACK[0x284]) ^ 0x1E2CDCB;
  LODWORD(v574) = LODWORD(STACK[0x284]) ^ 0xA6000000;
  int v610 = (v574 >> 25) - ((2 * (v574 >> 25)) & 0x3ACF96F8);
  HIDWORD(v574) = LODWORD(STACK[0x358]) ^ 0xF82C78;
  LODWORD(v574) = LODWORD(STACK[0x358]) ^ 0x84000000;
  int v611 = (v610 + 493341564) ^ ((v574 >> 25) - ((2 * (v574 >> 25)) & 0x8B371228) - 979662572);
  HIDWORD(v574) = v611 ^ 0xCCCCCCCC;
  LODWORD(v574) = v611 ^ 0x6B506200;
  int v612 = (v574 >> 7) - ((2 * (v574 >> 7)) & 0x857066F8) + 1119368060;
  unsigned int v613 = ((v549 & 0xFFFFFBFF ^ 0xD2897A28 | 0x3662A98A) - (v549 & 0xFFFFFBFF ^ 0xD2897A28 | 0xC99D5675) - 912435595) ^ 0xD7F2EB46;
  int v614 = ((2 * v613) | 0x7A44876A) - v613 - 1025655733;
  unsigned int v615 = v550 - 268452370;
  unsigned int v616 = 1874750316 - v550;
  if (v553 == ((2 * v553) & 0xF4B7F000)) {
    unsigned int v616 = v615;
  }
  unsigned int v617 = ((v552 ^ 0xE3C0B4FD)
        - 803148973
        + v616
        - ((2 * ((v552 ^ 0xE3C0B4FD) - 803148973 + v616)) & 0x43E88902)
        - 1577827199) ^ v614;
  int v618 = v617 ^ v552 ^ 0x7F5F13CA;
  unsigned int v619 = LODWORD(STACK[0x3B8]) ^ v617 ^ v552 ^ 0xAFE4FE56;
  LODWORD(STACK[0x284]) = v619 + v618;
  LODWORD(STACK[0x280]) = 2 * ((v619 & v618) - ((2 * (v619 & v618)) & 0x3246196A)) + 843454826;
  int v620 = (LODWORD(STACK[0x3B0]) ^ 0x321FD2E1 ^ LODWORD(STACK[0x2B8])) + 1;
  unsigned int v621 = (v617 ^ 0x636058C8) + v620;
  int v622 = v621 ^ 0x5DE4BF5F;
  unsigned int v623 = ((2 * v621) & 0xBBC97EBE)
       + v622
       - 2 * ((((2 * v621) & 0xBBC97EBE) + v622 + 22706580) & 0x12F2977B ^ (((2 * v621) & 0xBBC97EBE) + v622) & 3)
       + 340594956;
  unsigned int v624 = (&unk_100294700 ^ 0xB4FBDAD7) + 1258562857 + (STACK[0x3E0] & 0x69F7B5A0);
  unsigned int v625 = (&unk_100294700 ^ 0xEDDDE8FF) + 304224001 + (STACK[0x3E0] & 0xDBBBD1E0);
  LODWORD(STACK[0x27C]) = ((v625 - ((2 * v625) & 0xD4947DFE) + 1783250677) ^ 0xA6E55DED ^ v549) + v620;
  unsigned int v626 = ((v624 - ((2 * v624) & 0x264BDC5C) - 1826230740) ^ 0x5F8A8D34 ^ v549) + v620;
  unsigned int v627 = ((2 * v626) & 0xFEEFF5D4) + (v626 ^ 0x7F77FAEA);
  LODWORD(STACK[0x3B0]) = 2 * v627 - 1081181166;
  LODWORD(STACK[0x224]) = v627 + 1249377122;
  unsigned int v628 = v568 ^ 0xF0C5F3E9;
  unsigned int v629 = v612 ^ 0xCE59A320;
  unsigned int v630 = LODWORD(STACK[0x29C]) ^ LODWORD(STACK[0x228]) ^ 0xB14788C7;
  int v631 = LODWORD(STACK[0x29C]) ^ v628;
  int v632 = LODWORD(STACK[0x29C]) ^ v530 ^ 0x4DC7820C;
  unsigned int v633 = LODWORD(STACK[0x28C]) ^ v609 ^ LODWORD(STACK[0x298]) ^ v584 ^ v590 ^ 0xCB4B3A9D;
  int v634 = LODWORD(STACK[0x298]) ^ v609 ^ 0x22EA13BC;
  int v635 = LODWORD(STACK[0x348]) ^ 0x3E269FA8;
  unsigned int v636 = (LODWORD(STACK[0x26C]) ^ 0xD0BBED9C) + (LODWORD(STACK[0x270]) ^ 0xC427F8B6);
  unsigned int v637 = (v636 ^ 0x4A385662)
       + (((LODWORD(STACK[0x3F8]) ^ 0xB8756384) + 1123900472) ^ 0x547A5FFC)
       + ((2 * ((LODWORD(STACK[0x3F8]) ^ 0xB8756384) + 1123900472)) & 0x28F4BFF8)
       - ((2 * v636) & 0x6B8F533A);
  unsigned int v638 = LODWORD(STACK[0x320]) ^ 0xAC7BA012 ^ LODWORD(STACK[0x2E4]);
  unsigned int v639 = LODWORD(STACK[0x290]) ^ 0x9C811C26 ^ LODWORD(STACK[0x2E4]);
  int v640 = LODWORD(STACK[0x22C]) ^ 0x3B6E4AC8 ^ LODWORD(STACK[0x2E4]);
  LODWORD(STACK[0x298]) = v622;
  if ((v622 & 1) == 0) {
    int v640 = v639;
  }
  LODWORD(STACK[0x290]) = v640;
  if ((v622 & 1) == 0) {
    unsigned int v639 = v638;
  }
  LODWORD(STACK[0x29C]) = v639;
  int v641 = LODWORD(STACK[0x380]) ^ v629;
  if (v622) {
    int v642 = v631;
  }
  else {
    int v642 = LODWORD(STACK[0x380]) ^ v629;
  }
  if ((v622 & 1) == 0) {
    int v641 = v632;
  }
  LODWORD(STACK[0x28C]) = v641;
  if (v622) {
    unsigned int v643 = v632;
  }
  else {
    unsigned int v643 = v630;
  }
  if (v622) {
    unsigned int v644 = v634;
  }
  else {
    unsigned int v644 = v633;
  }
  LODWORD(STACK[0x2B8]) = v644;
  LODWORD(STACK[0x3B8]) = v623;
  LODWORD(STACK[0x214]) = v635;
  unsigned int v645 = ((2 * (2 * v637 - 1030057148)) & 0xF9FDFDD4) + ((2 * v637 - 1030057148) ^ 0xFCFEFEEB);
  unsigned int v646 = (LODWORD(STACK[0x350]) ^ 0x369C709B)
       + ((v635 - ((2 * v635 + 139108668) & 0x47489210) + 1741265318) ^ 0x8DCBD5B6)
       + 1;
  unsigned int v647 = (LODWORD(STACK[0x288]) ^ 0x5B552393)
       + (((LODWORD(STACK[0x310]) ^ 0x174B205F) + 1496722228) ^ 0x6FFE6E7F)
       + ((2 * ((LODWORD(STACK[0x310]) ^ 0x174B205F) + 1496722228)) & 0xDFFCDCFE)
       - 1878945407;
  unsigned int v648 = v645 - ((2 * v645 + 1656759624) & 0xCBFCD1C4) + 392067974;
  unsigned int v649 = LODWORD(STACK[0x204]) ^ 0xD0BBED9C;
  LODWORD(STACK[0x228]) = v649;
  unsigned int v650 = v649 + (v646 ^ 0xEB32EF7F) + ((2 * v646) & 0xD665DEFE) + 1590192772;
  unsigned int v651 = (v650 ^ 0xDDF0DFF9) + 571416583 + ((2 * v650) & 0xBBE1BFF2);
  unsigned int v652 = ((v651 >> 1) ^ 0xFFCE64FF)
       + (v651 & 0xFF9CC9FE)
       - ((2 * (((v651 >> 1) ^ 0xFFCE64FF) + (v651 & 0xFF9CC9FE)) - 669411578) & 0xE0679BEC)
       - 599746183;
  unsigned int v653 = (LODWORD(STACK[0x318]) ^ 0x5B552393) + (v647 ^ 0x7EB6FD56) + ((2 * v647) & 0xFD6DFAAC) - 478801593;
  int v654 = 2 * (((2 * v653) & 0x5BA39EFA) + (v653 ^ 0x6DD1CF7D)) + 610033926;
  int v655 = ((2 * v654) & 0xEFEBE7C) + (v654 ^ 0x77F5F3E);
  int v656 = (void *)STACK[0x568];
  unsigned int v657 = v655 - ((2 * v655 + 343458314) & 0x9C5BFC22) + 1483366166;
  int v658 = *(void *)(STACK[0x568]
                   + 8
                   * ((*(void *)(STACK[0x568]
                                 + 8 * (*(void *)(STACK[0x568] + 8 * (*(void *)(STACK[0x568] + 8) & 1)) & 1)) & 1) == 0)) & 1;
  unsigned int v659 = (v658 ^ 0xFE7DFFFF) + 2 * v658 + 683161310;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x230]) - 1254488118;
  LODWORD(STACK[0x3C8]) = v657;
  LODWORD(STACK[0x3B0]) = v652;
  LODWORD(STACK[0x320]) = v648;
  LODWORD(STACK[0x230]) = v642;
  LODWORD(STACK[0x22C]) = v643;
  if ((v623 & 2) != 0) {
    int v660 = v642;
  }
  else {
    int v660 = v643;
  }
  LODWORD(STACK[0x204]) = v660;
  int v661 = STACK[0x420];
  *(void *)STACK[0x578] = *v656 ^ 0xAEAEAEAEAEAEAEAELL;
  BOOL v662 = v659 > 0x273636DE;
  if (v659 < 0x273636DD) {
    BOOL v662 = 1;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((230 * !v662) ^ v661)))(579636850);
}

uint64_t sub_10012A14C@<X0>(unint64_t a1@<X8>)
{
  *(unsigned char *)(STACK[0x4F8] - 0x69023F1E88EC7975) = *(unsigned char *)STACK[0x450] ^ 0xB4 ^ byte_100293280[(183 * (v1 ^ 0x248u)) ^ 0x390];
  BOOL v3 = v2 > 0x2746D86D;
  if (v2 < a1 != a1 > 0x2746D86D) {
    BOOL v3 = v2 < a1;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((137 * !v3) ^ v1)))();
}

void sub_10012A280()
{
}

uint64_t sub_10012A290(uint64_t a1)
{
  ((void (*)(unint64_t))*(&off_1002E1F70 + (v1 ^ 0xC06)))(STACK[0x590]);
  ((void (*)(uint64_t))*(&off_1002E1F70 + v1 + 1030))(a1);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v1 - 9) ^ 0x37)))();
}

uint64_t sub_10012A298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,uint64_t a54,uint64_t a55,int a56,int a57,uint64_t a58,int a59,int a60,int a61,int a62,int a63)
{
  if (STACK[0x234]) {
    int v78 = STACK[0x24C];
  }
  else {
    int v78 = STACK[0x200];
  }
  if (STACK[0x234]) {
    int v79 = STACK[0x268];
  }
  else {
    int v79 = STACK[0x240];
  }
  int v80 = STACK[0x21C];
  if (STACK[0x234])
  {
    int v81 = a74;
  }
  else
  {
    int v80 = STACK[0x210];
    int v81 = STACK[0x208];
  }
  if (STACK[0x234]) {
    a73 = a75;
  }
  if (STACK[0x234]) {
    int v83 = STACK[0x20C];
  }
  else {
    int v83 = STACK[0x218];
  }
  int v84 = a68 ^ LODWORD(STACK[0x2E4]);
  int v85 = (v77 - 2117582552) | 0x804;
  BOOL v86 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v87 = STACK[0x410];
  if (LODWORD(STACK[0x3E0]) != -1254488118) {
    int v87 = STACK[0x344];
  }
  LODWORD(STACK[0x24C]) = v87;
  int v88 = STACK[0x220];
  if (v86) {
    int v89 = v80;
  }
  else {
    int v89 = STACK[0x220];
  }
  LODWORD(STACK[0x2E4]) = v89;
  if (v86) {
    int v80 = v88;
  }
  LODWORD(STACK[0x240]) = v80;
  int v90 = STACK[0x2E0];
  if (!v86) {
    int v90 = STACK[0x2DC];
  }
  LODWORD(STACK[0x2E0]) = v90;
  int v91 = STACK[0x2A4];
  if (!v86) {
    int v91 = STACK[0x2A0];
  }
  LODWORD(STACK[0x2A4]) = v91;
  int v92 = STACK[0x2D4];
  if (v86) {
    int v92 = STACK[0x2B4];
  }
  LODWORD(STACK[0x2DC]) = v92;
  int v93 = STACK[0x2B0];
  if (v86) {
    int v93 = STACK[0x2A8];
  }
  LODWORD(STACK[0x220]) = v93;
  LODWORD(STACK[0x2B0]) = LODWORD(STACK[0x284]) ^ 0x6E0DF939;
  LODWORD(STACK[0x2A0]) = LODWORD(STACK[0x280]) ^ 0x334D9B6B;
  int v94 = v84 ^ 0x7E983DA4;
  LODWORD(STACK[0x280]) = v78;
  LODWORD(STACK[0x200]) = v79;
  if (v86) {
    int v95 = v78;
  }
  else {
    int v95 = v79;
  }
  LODWORD(STACK[0x234]) = v95;
  LODWORD(STACK[0x210]) = v81;
  LODWORD(STACK[0x20C]) = a73;
  if (v86) {
    int v96 = v81;
  }
  else {
    int v96 = a73;
  }
  LODWORD(STACK[0x344]) = v96;
  int v97 = STACK[0x2BC];
  LODWORD(STACK[0x218]) = v83;
  if (v86) {
    int v97 = v83;
  }
  LODWORD(STACK[0x27C]) = v97;
  BOOL v98 = (STACK[0x298] & 1) == 0;
  if (STACK[0x298]) {
    int v99 = a57;
  }
  else {
    int v99 = v94;
  }
  if ((STACK[0x298] & 1) == 0) {
    a63 = a62;
  }
  LODWORD(STACK[0x2B4]) = a63;
  if (!v98) {
    a53 = a59;
  }
  LODWORD(STACK[0x208]) = v99;
  STACK[0x420] = (v85 - 1926426645) & 0x72D2E89E;
  LODWORD(STACK[0x21C]) = a53;
  unint64_t v102 = (STACK[0x420] ^ 0xC23B04F52BC36E07) + v75 + ((unint64_t)(v75 < v76) << 32) + 0x3DC4FB0A66B9D9CDLL;
  *(void *)(STACK[0x578] + 8 * v102) = *(void *)(STACK[0x568] + 8 * v102) ^ 0xAEAEAEAEAEAEAEAELL;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + ((46 * (v75 - 1837283233 > 1)) ^ v85)))(4216840473, 1812684658);
}

void sub_10012AB58()
{
}

uint64_t sub_10012AB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = (((unint64_t)(a6 + 0x4AA16570590ACCAFLL) >> 30) ^ 0xD2FF6B327EDEFCFFLL)
      + a6
      + (((unint64_t)(a6 + 0x4AA16570590ACCAFLL) >> 29) & 0x4FDBDF9FELL);
  unint64_t v75 = (((v74 + 0x77A1FA3DDA2BCFB0) >> 12) ^ 0xEDED6DEAFB3FFFF6)
      + v74
      + (((v74 + 0x77A1FA3DDA2BCFB0) >> 11) & 0x1ADBD5F67FFFECLL);
  unint64_t v76 = v75
      + (((v75 - 0x764B73AD21143046) >> 7) ^ 0xDCC04395170E1288)
      - (((v75 - 0x764B73AD21143046) >> 6) & 0x27F78D5D1E3DAEELL)
      + 1;
  uint64_t v77 = v76 - ((2 * v76 + 0x59E8917B8FBB7A62) & 0x4C2317E923BB072ALL) - 0x2CFA2B4DA644BF3ALL;
  unint64_t v78 = ((2 * ((v77 ^ 0x26118BF491DD8395) + 0x288AB139EA2E5744)) & 0xE75FFFFEFC7F3EDALL)
      + (((v77 ^ 0x26118BF491DD8395) + 0x288AB139EA2E5744) ^ 0x73AFFFFF7E3F9F6DLL);
  unint64_t v79 = v78
      + (((v78 - 0x73AFFFFF7E3F9F6DLL) >> 24) ^ 0x8804085100051082)
      - (((v78 - 0x73AFFFFF7E3F9F6DLL) >> 23) & 0x15DFFF5DEFALL);
  unint64_t v80 = v79
      + (((v79 + 0x44BF7AF81BB5011) >> 13) ^ 0xAC840148802A1C20)
      - (((v79 + 0x44BF7AF81BB5011) >> 12) & 0x7FD6EFFABC7BELL);
  unint64_t v81 = v80
      + (((v80 + 0x57C7F667019133F1) >> 5) ^ 0xB05A82D008030001)
      - (((v80 + 0x57C7F667019133F1) >> 4) & 0xF4AFA5FEFF9FFFCLL)
      + 3;
  unint64_t v82 = v81 - ((2 * v81 + 0x4EDAE72DF31C67DALL) & 0xB48B7E454FFD7E64) - 0x7E4CCD465E730CE1;
  unint64_t v83 = (v82 ^ 0xF254B173A45EAA12)
      + ((v82 >> 31) ^ 0x916C8589C4A962B7)
      + ((v82 >> 30) & 0x3BFFFFF5ELL ^ 0xFFFFFFFC76AD3AB1)
      + 0x6E937A77DFFFFFB1;
  unint64_t v84 = (((((2 * v83) & 0xC47A5B58E95F7A9ELL) + (v83 ^ 0xE23D2DAC74AFBD4FLL) + 0x1DC2D2538B5042B1) >> 11) ^ 0x739FFF4FF56F5DFDLL)
      + ((2 * v83) & 0xC47A5B58E95F7A9ELL)
      + (v83 ^ 0xE23D2DAC74AFBD4FLL)
      + (((((2 * v83) & 0xC47A5B58E95F7A9ELL) + (v83 ^ 0xE23D2DAC74AFBD4FLL) + 0x1DC2D2538B5042B1) >> 10) & 0x3FFE9FEADEBBFALL);
  unint64_t v85 = (((v84 - 0x55DD2CFC6A1F1B4CLL) >> 4) ^ 0xBEFF3F57DFBCED6FLL)
      + v84
      + (((v84 - 0x55DD2CFC6A1F1B4CLL) >> 3) & 0x1DFE7EAFBF79DADELL);
  uint64_t v86 = v85 - ((2 * v85 + 0x4727576C47EE8ALL) & 0xE06EC9D02057EELL) - 0x146C34EF61CBDCC4;
  uint64_t v87 = ((2 * ((v86 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6)) & 0x7FADBF37BFFFFFFCLL)
      + (((v86 ^ 0x703764E8102BF7) + 0x1E4A8A832E7300A6) ^ 0x3FD6DF9BDFFFFFFELL);
  unint64_t v88 = v87
      + (((unint64_t)(v87 - 0x3FD6DF9BDFFFFFFELL) >> 30) ^ 0x854185040001D12ALL)
      - (((unint64_t)(v87 - 0x3FD6DF9BDFFFFFFELL) >> 29) & 0x7FFFC5DAALL);
  unint64_t v89 = v88
      + (((v88 + 0x3AE79B601FFE2ED8) >> 15) ^ 0x7E7B65FDB5F7BCF8)
      + (((v88 + 0x3AE79B601FFE2ED8) >> 14) & 0x2CBFB6BEF79F0);
  unint64_t v90 = v89
      + (((v89 - 0x4393CA9D95F98E20) >> 8) ^ 0xEE352763AFBE8CEDLL)
      + (((v89 - 0x4393CA9D95F98E20) >> 7) & 0x6A4EC75F7D19DALL)
      + 1;
  unint64_t v91 = v90 - ((2 * v90 - 0x6391E4028B70361CLL) & 0x86F079A3613DDDEELL) - 0x6E50B52F95192C17;
  unint64_t v92 = ((2 * ((v91 ^ 0xC3783CD1B09EEEF7) + 0x2C1E97BC5C429E81)) & 0x55FD2D1DBCDCFFA6)
      + (((v91 ^ 0xC3783CD1B09EEEF7) + 0x2C1E97BC5C429E81) ^ 0x2AFE968EDE6E7FD3);
  unint64_t v93 = (((v92 - 0x2AFE968EDE6E7FD3) >> 27) ^ 0xF7FE76B73DBFEFE9)
      + v92
      + (((v92 - 0x2AFE968EDE6E7FD3) >> 26) & 0x2E7B7FDFD2);
  unint64_t v94 = (((v93 - 0x22FD0D461C2E6FBCLL) >> 15) ^ 0x5F72FFFE7C5EEB36)
      + v93
      + (((v93 - 0x22FD0D461C2E6FBCLL) >> 14) & 0x1FFFCF8BDD66CLL);
  unint64_t v95 = (((v94 + 0x7D8FF2BB6772A50ELL) >> 8) ^ 0xFBEF7E7B37BBBF97)
      + v94
      + (((v94 + 0x7D8FF2BB6772A50ELL) >> 7) & 0x1DEFCF66F777F2ELL);
  unint64_t v96 = v95 - ((2 * v95 + 0x340E8805F6DCAEELL) & 0x220468122728BA24) - 0x6D5D57B6BCB4BD77;
  unint64_t v97 = (v96 ^ 0x8D13B1AEBFEB8D82)
      + ((v96 >> 30) ^ 0x7DB5FF95F9913D43)
      + ((v96 >> 29) & 0x79BBFF7F2 ^ 0x4089D8570)
      - 0x7DB5FF97CDDFFBF9;
  unint64_t v98 = (((((2 * v97) & 0xFD7FADD425FF7AF8) + (v97 ^ 0xFEBFD6EA12FFBD7CLL) + 0x1402915ED004284) >> 8) ^ 0x7FFEA7EFEC95FE7CLL)
      + ((2 * v97) & 0xFD7FADD425FF7AF8)
      + (v97 ^ 0xFEBFD6EA12FFBD7CLL)
      + (((((2 * v97) & 0xFD7FADD425FF7AF8) + (v97 ^ 0xFEBFD6EA12FFBD7CLL) + 0x1402915ED004284) >> 7) & 0x1FD4FDFD92BFCF8);
  unint64_t v99 = v98
      + (((v98 - 0x7EBE7ED9FF95BBF8) >> 8) ^ 0xD5044618043C00CALL)
      - (((v98 - 0x7EBE7ED9FF95BBF8) >> 7) & 0x1F773CFF787FE6ALL)
      + 1;
  unint64_t v100 = v99 - ((2 * v99 + 0x587A761BF85C867ALL) & 0x9C79C01BD0E66262) - 0x585E4E41B5E8B92;
  uint64_t v101 = ((2 * ((v100 ^ 0x4E3CE00DE8733131) + 0x75D572E7727DD82)) & 0x4FDFBDBEC5EFBA7CLL)
       + (((v100 ^ 0x4E3CE00DE8733131) + 0x75D572E7727DD82) ^ 0x27EFDEDF62F7DD3ELL);
  unint64_t v102 = v101
       + (((unint64_t)(v101 - 0x27EFDEDF62F7DD3ELL) >> 30) ^ 0x8B4781A8050A0899)
       - (((unint64_t)(v101 - 0x27EFDEDF62F7DD3ELL) >> 29) & 0x7F5EBEECCLL);
  unint64_t v103 = v102
       + (((v102 + 0x4CC89F7897FE1A29) >> 9) ^ 0xA94C01009A020046)
       - (((v102 + 0x4CC89F7897FE1A29) >> 8) & 0x67FDFECBFBFF72);
  unint64_t v104 = v103
       + (((v103 - 0x5C8361880203E61DLL) >> 7) ^ 0x4D3FF6FFF8DFFFF9)
       + (((v103 - 0x5C8361880203E61DLL) >> 6) & 0x27FEDFFF1BFFFF2)
       + 2;
  unint64_t v105 = v104 - ((2 * v104 - 0x5386B10FF5C7CC30) & 0xD460B24072623150) - 0x3F92FF67C1B2CD70;
  uint64_t v106 = ((2 * ((v105 ^ 0x6A305920393118A8) + 0x20226CA5EA003BB7)) & 0x66F6DE69FF777BC6)
       + (((v105 ^ 0x6A305920393118A8) + 0x20226CA5EA003BB7) ^ 0x337B6F34FFBBBDE3);
  unint64_t v107 = v106
       + (((unint64_t)(v106 - 0x337B6F34FFBBBDE3) >> 27) ^ 0x12279880020A1840)
       - (((unint64_t)(v106 - 0x337B6F34FFBBBDE3) >> 26) & 0x3FFBEBCF7ELL);
  unint64_t v108 = v107
       + (((v107 - 0x45A307B501C5D623) >> 13) ^ 0xBEF7FD7F767ED4FFLL)
       + (((v107 - 0x45A307B501C5D623) >> 12) & 0xFFAFEECFDA9FELL);
  unint64_t v109 = v108
       + (((v108 - 0x49B05347844AB22) >> 4) ^ 0xF97F5DFEF9FCB7FALL)
       + (((v108 - 0x49B05347844AB22) >> 3) & 0x12FEBBFDF3F96FF4)
       + 1;
  unint64_t v110 = v109 - ((2 * v109 + 0x3CB39991B7D39C6) & 0x8E4CE4A1DB415BCELL) - 0x36F3F0E284A0B536;
  unint64_t v111 = (v110 ^ 0xB541D018924A52A8)
       + ((v110 >> 26) ^ 0x33EFE5828783F1DALL)
       + ((v110 >> 25) & 0x5FAFEFEFFCLL ^ 0x5AA0E80C48)
       - 0x33EFE5AFD7F7F7FELL;
  unint64_t v112 = ((2 * v111) & 0xE76BD399FA5E9DB6)
       + (v111 ^ 0xF3B5E9CCFD2F4EDBLL)
       + (((((2 * v111) & 0xE76BD399FA5E9DB6) + (v111 ^ 0xF3B5E9CCFD2F4EDBLL) + 0xC4A163302D0B125) >> 15) ^ 0x9A040A74264704)
       - (((((2 * v111) & 0xE76BD399FA5E9DB6) + (v111 ^ 0xF3B5E9CCFD2F4EDBLL) + 0xC4A163302D0B125) >> 14) & 0x3F7EB17B371F6);
  int v113 = ((v112 + 0xBB012288EAA6A21) >> 6) - (((v112 + 0xBB012288EAA6A21) >> 5) & 0x2FF64738);
  LODWORD(v112) = ((2 * (v112 - 1901434335)) & 0xE1DFFFAE)
                + ((v112 - 1901434335) ^ 0x70EFFFD7)
                + ((v113 + 402334620) ^ 0xB6FFE7DC)
                + ((2 * (v113 + 402334620)) & 0xBDF6777E ^ 0xD209B8C7);
  int v114 = v100 ^ v86 ^ a5 ^ (v112 - ((2 * v112 + 1472468) & 0x3B419B6) - 270186299);
  LODWORD(v86) = ((2 * (v114 & 7 ^ 5)) | 0x42236B82) - (v114 & 7 ^ 5) - 554808769;
  int v115 = (v86 & 0x6B111EF4 ^ 0xA81106A4) + (v86 ^ 0x53A8795B) - ((v86 ^ 0x53A8795B) & 0x6B111EF4);
  LODWORD(v86) = (((v114 ^ 2) + 1) & 7) - 2 * (((v114 ^ 2) + 1) & 3) + 1453350803;
  LODWORD(STACK[0x2A8]) = v86;
  unint64_t v116 = v86 ^ 0x56A05F93;
  uint64_t v117 = 255;
  if (v115 == -1716989330) {
    uint64_t v117 = 0;
  }
  STACK[0x410] = v116;
  int v118 = (v117 << v116) - ((2 * (v117 << v116)) & 0xC5B07EB8) - 489144484;
  __int16 v119 = 2 * ((v117 << v116) - ((2 * (v117 << v116)) & 0x7EB8) + 16220);
  char v120 = (v118 ^ 0xD1) + (v119 & 0x1A ^ 0x18) + 115 + (((v119 ^ 0xB8) - ((2 * (v119 ^ 0xB8)) & 0x44) - 94) ^ 0x5D);
  char v121 = (v120 ^ 0xED) + 19 + ((2 * v120) & 0xDA);
  LODWORD(STACK[0x268]) = v115;
  if (v115 == -1716989330) {
    char v121 = 0;
  }
  BOOL v122 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v123 = STACK[0x3C0];
  if (LODWORD(STACK[0x3E0]) != -1254488118) {
    int v123 = STACK[0x3A8];
  }
  LODWORD(STACK[0x284]) = v123;
  int v124 = STACK[0x338];
  if (v122) {
    int v124 = STACK[0x2D8];
  }
  LODWORD(STACK[0x2D4]) = v124;
  int v125 = STACK[0x210];
  if (v122) {
    int v125 = STACK[0x20C];
  }
  LODWORD(STACK[0x2D8]) = v125;
  int v126 = STACK[0x2D0];
  if (!v122) {
    int v126 = STACK[0x2CC];
  }
  LODWORD(STACK[0x2D0]) = v126;
  int v127 = STACK[0x2BC];
  if (!v122) {
    int v127 = STACK[0x218];
  }
  LODWORD(STACK[0x210]) = v127;
  int v128 = STACK[0x2C8];
  if (!v122) {
    int v128 = STACK[0x2C4];
  }
  LODWORD(STACK[0x2CC]) = v128;
  LODWORD(STACK[0x20C]) = a63 & 0xDC1BF272;
  HIDWORD(a63) &= 0xEFFCFFBC;
  if (STACK[0x298]) {
    a67 = a71;
  }
  BOOL v130 = (STACK[0x3B8] & 2) == 0;
  int v131 = STACK[0x290];
  if ((STACK[0x3B8] & 2) != 0) {
    int v131 = STACK[0x208];
  }
  HIDWORD(a42) = v131;
  int v132 = STACK[0x28C];
  if ((STACK[0x3B8] & 2) != 0) {
    int v132 = a72;
  }
  HIDWORD(a45) = v132;
  if ((STACK[0x3B8] & 2) != 0) {
    a66 = a64;
  }
  LODWORD(a52) = a66;
  unsigned int v134 = v91 ^ v77 ^ v72 ^ v105;
  unsigned int v135 = v96 ^ v82 ^ v73 ^ v110;
  unsigned int v136 = ((v134 & 0x54) + (v134 & 0x7F ^ 0xFFFFFFFD) + (v134 & 0x54 | 0xAFABEC2B) + 1) ^ 0xAFABEC16;
  unsigned int v137 = ((2 * (v134 & 0xFFFFFF80 ^ 0xBEC1D880)) | 0x34F2DF7E) - (v134 & 0xFFFFFF80 ^ 0xBEC1D880) - 444166079;
  int v138 = v137 ^ 0xE986FBE;
  HIDWORD(v171) = v137 & 0xC988221E ^ 0xC1000000;
  unsigned int v139 = ((v118 ^ 0xFFF7EBE3) + (v119 & 0x100) + 1226397312) ^ 0x4911423F;
  LODWORD(STACK[0x218]) = v114;
  HIDWORD(v170) = (((419430400 * v139 - ((838860800 * v139) & 0x9C000000) + 1322904326) ^ 0x4ED9EB06) & (v135 ^ 0x857EB65B))
                - ((2
                  * (((419430400 * v139 - ((838860800 * v139) & 0x9C000000) + 1322904326) ^ 0x4ED9EB06) & (v135 ^ 0x857EB65B))) & 0x924F8556)
                - 920141141;
  unsigned __int8 v140 = (v121 & (v134 ^ 0x79)) - ((2 * (v121 & (v134 ^ 0x79))) & 0xA6) - 45;
  int v141 = (v134 ^ BYTE1(v134) ^ BYTE2(v134)) ^ HIBYTE(v134) ^ 0x4F;
  unsigned int v142 = 16843009 * v141 - ((33686018 * v141) & 0x84A1CC6E) - 1034885577;
  unsigned int v143 = (((v135 ^ BYTE1(v135) ^ BYTE2(v135)) ^ 0x72)
        - ((2 * ((v135 ^ BYTE1(v135) ^ BYTE2(v135)) ^ 0x72)) & 0x2C)
        + 1124834838) ^ 0xC20AD664;
  unsigned int v144 = (((2 * v143) | 0x1F5A7FD0) - v143 - 263012328) ^ HIBYTE(v135) ^ 0x8EAC7773;
  int v145 = 16843009 * v144 - ((33686018 * v144) & 0x629247AE) + 826876887;
  LODWORD(a63) = v134;
  LODWORD(STACK[0x3A8]) = 33686018 * v136;
  LODWORD(v170) = v138 & 0xC9882200;
  LODWORD(v171) = 16843009 * v139 - ((33686018 * v139) & 0x24EC8E9C) + 309741390;
  LODWORD(STACK[0x3C0]) = ((v140 & 0xED ^ 0x410A082C) + (v140 ^ 0x203430D3) - ((v140 ^ 0x203430D3) & 0x2030ED)) ^ v171;
  unint64_t v146 = STACK[0x578];
  uint64_t v147 = *(void *)(v146 + 8 * (*(void *)(v146 + 8 * ((*(_DWORD *)STACK[0x578] & 1) == 0)) & 1));
  LODWORD(STACK[0x298]) = v142;
  LODWORD(STACK[0x2BC]) = v145 ^ v142;
  LODWORD(v147) = *(void *)(v146 + 8 * ((v147 & 1) == 0)) & 1;
  LODWORD(STACK[0x208]) = v135;
  LODWORD(STACK[0x290]) = v135 ^ 0x2937AA06;
  uint64_t v148 = (v147 | (2 * v147) | 0x8F65A390) ^ 2;
  uint64_t v149 = STACK[0x420] ^ 0x2BC;
  int v150 = STACK[0x2B4];
  LODWORD(STACK[0x338]) = a67;
  if (!v130) {
    int v150 = a67;
  }
  HIDWORD(a49) = v150;
  BOOL v151 = v148 == -1889164400;
  unint64_t v152 = (unint64_t)((v149 + 103361864) > 0x6292F72) << 32;
  unint64_t v153 = 0x5F3D51B5D321F3ADLL
       * (*(void *)(v146 + ((unint64_t)((v149 + 103361864) > 0x6292F72) << 35)) ^ 0xAEAEAEAEAEAEAEAELL)
       - ((0xBE7AA36BA643E75ALL
         * (*(void *)(v146 + ((unint64_t)((v149 + 103361864) > 0x6292F72) << 35)) ^ 0xAEAEAEAEAEAEAEAELL)) & 0x91978618F26D4518)
       - 0x37343CF386C95D74;
  unint64_t v154 = ((2 * ((v153 ^ 0x2E32AD250418208CLL) + v152)) & 0xE7FA6F7CFEFDB9BCLL)
       + (((v153 ^ 0x2E32AD250418208CLL) + v152) ^ 0xF3FD37BE7F7EDCDELL);
  unint64_t v155 = v154
       + (((v154 + 0xC02C84180812322) >> 32) ^ 0x66295085011060C8)
       - (((v154 + 0xC02C84180812322) >> 31) & 0x1FDDF3E6ELL);
  unint64_t v156 = v155
       + (((v155 - 0x5A268843808F3DA6) >> 16) ^ 0x7E7FBF6CD56EFFFFLL)
       + (((v155 - 0x5A268843808F3DA6) >> 15) & 0x17ED9AADDFFFELL);
  unint64_t v157 = v156
       + (((v156 + 0x2759B84FAA01C25BLL) >> 8) ^ 0x8233201500105420)
       - (((v156 + 0x2759B84FAA01C25BLL) >> 7) & 0x199BFD5FFDF57BELL)
       + 2;
  uint64_t v158 = v157 - ((2 * v157 + 0x3853AD88371BB5F2) & 0x5F42EE5CFC703BDELL) - 0x7434B20D663A0718;
  unint64_t v159 = ((2 * ((v153 ^ 0xE76AB422070EBF63 ^ v158) + v152)) & 0xE7D4FEFFFCF7F9EELL)
       + (((v153 ^ 0xE76AB422070EBF63 ^ v158) + v152) ^ 0xF3EA7F7FFE7BFCF7);
  unint64_t v160 = v159
       + (((v159 + 0xC15808001840309) >> 32) ^ 0x5AC048154813ALL)
       - (((v159 + 0xC15808001840309) >> 31) & 0xFD56FD8A);
  unint64_t v161 = v160
       + (((v160 + 0xC0FD47B802F81CFLL) >> 16) ^ 0x3DEFFF75AFEF9DF7)
       + (((v160 + 0xC0FD47B802F81CFLL) >> 15) & 0x1FEEB5FDF3BEELL);
  unint64_t v162 = v161
       + (((v161 - 0x31E02AFA2FC01C28) >> 8) ^ 0x40601210200488)
       - (((v161 - 0x31E02AFA2FC01C28) >> 7) & 0x17F3FDBDFBFF6EELL)
       + 2;
  unint64_t v163 = v162 - ((2 * v162 + 0x9C566FA6378981CLL) & 0xD3FE8E379A2C3A9ALL) + 0x6EE1FA98FED2695BLL;
  unint64_t v164 = ((2 * ((v153 ^ 0x21348417B420BFC1 ^ v163) + v152)) & 0xF7FF5F3D779D70F2)
       + (((v153 ^ 0x21348417B420BFC1 ^ v163) + v152) ^ 0xFBFFAF9EBBCEB879);
  unint64_t v165 = v164
       + (((v164 + 0x400506144314787) >> 32) ^ 0xE088006042507E00)
       - (((v164 + 0x400506144314787) >> 31) & 0x17B5F03FELL);
  unint64_t v166 = v165
       + (((v165 + 0x2378500101E0C987) >> 16) ^ 0x76F9A98ADF1DFAF5)
       + (((v165 + 0x2378500101E0C987) >> 15) & 0x15315BE3BF5EALL);
  if (v148 != -1889164400) {
    BOOL v151 = v148 > 0x8F65A392;
  }
  HIDWORD(a50) = v145 ^ 0xB4978217;
  LODWORD(v169) = 16843009 * v136 - 803244119;
  HIDWORD(v169) = (33686018 * v136) & 0xA03EEF52;
  unint64_t v167 = v166
       + (((v166 - 0x53815989DD3D316ELL) >> 8) ^ 0x649282C0360C488ALL)
       - (((v166 - 0x53815989DD3D316ELL) >> 7) & 0xDAFA7F93E76EEALL)
       + 2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((49 * !v151) ^ STACK[0x420])))(2405802896, 3879603023, 1240448233, v149, v148, 0x7DDEC47EBCA5E58CLL, 1342219776, v167 - ((2 * v167 + 0x7DDEC47EBCA5E58CLL) & 0x7A2161056704D8B6) + 0x3C0012C211D55F21, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           v169,
           v170,
           v171,
           a63);
}

uint64_t sub_10012C520(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  BOOL v73 = LODWORD(STACK[0x3E0]) == -1254488118;
  int v74 = STACK[0x280];
  if (LODWORD(STACK[0x3E0]) == -1254488118) {
    int v74 = STACK[0x200];
  }
  LODWORD(STACK[0x280]) = v74;
  int v75 = STACK[0x388];
  if (v73) {
    int v75 = STACK[0x264];
  }
  LODWORD(STACK[0x2C8]) = v75;
  int v76 = STACK[0x408];
  if (v73) {
    int v76 = STACK[0x400];
  }
  LODWORD(STACK[0x2C4]) = v76;
  LODWORD(STACK[0x388]) = (a4 - 1686648063) ^ a72;
  LODWORD(STACK[0x28C]) = a66 ^ 0xF0F13CB0;
  LODWORD(STACK[0x2B4]) = a60 - a61;
  LODWORD(STACK[0x338]) = a63 ^ a64;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x2BC]) ^ 0x98E35E99;
  LODWORD(STACK[0x29C]) = a66 ^ 0x805280A2;
  LODWORD(STACK[0x420]) = a66 ^ 0x9F06705;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70
                                                    + ((2 * ((v72 - 103362417) < 2)) | (32 * ((v72 - 103362417) < 2)) | (a4 - 34))))(0xA8AD9D00ACE38CALL, 328705121);
}

void sub_10012CE64()
{
}

#error "10012FA20: call analysis failed (funcsize=1834)"

uint64_t sub_10012FA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  int v64 = (STACK[0x3F8] + 1360239058) & 0xFBCEB1F7;
  int v65 = STACK[0x330];
  if (LODWORD(STACK[0x3E0]) == -1254488118) {
    int v65 = STACK[0x32C];
  }
  HIDWORD(a52) = v65;
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x208]) ^ 0xF42E8F18;
  LODWORD(STACK[0x3F8]) = a60 - LODWORD(STACK[0x2B8]);
  LODWORD(STACK[0x2B8]) = HIDWORD(a39) - a40;
  LODWORD(STACK[0x2B4]) = LODWORD(STACK[0x240]) ^ 0xF27071FC;
  LODWORD(STACK[0x330]) = LODWORD(STACK[0x318]) ^ 0x300615CA;
  LODWORD(STACK[0x32C]) = HIDWORD(a38) - LODWORD(STACK[0x2A4]);
  LODWORD(STACK[0x2B0]) = (v64 - 347067732) ^ LODWORD(STACK[0x228]);
  uint64_t v66 = (v64 + 1569);
  unint64_t v67 = (v61 | ((unint64_t)(v61 < 0x2B676E17) << 32)) - 728198679;
  unint64_t v68 = v66
      + 0x5F3D51B5D321F3ADLL * (*(void *)(STACK[0x578] + 8 * v67) ^ 0xAEAEAEAEAEAEAEAELL)
      - ((0x3E7AA36BA643E75ALL * (*(void *)(STACK[0x578] + 8 * v67) ^ 0xAEAEAEAEAEAEAEAELL)) & 0x7A47032A15A61FB4)
      + 0x3D2381950AD307E2;
  unint64_t v69 = ((2 * ((v63 ^ 0x138548781DB6ACEALL ^ v68) + v67)) & 0xD5FFFCF97DDDB27ALL)
      + (((v63 ^ 0x138548781DB6ACEALL ^ v68) + v67) ^ 0x6AFFFE7CBEEED93DLL);
  unint64_t v70 = v69
      + (((v69 - 0x6AFFFE7CBEEED93DLL) >> 32) ^ 0x4890C6101700000)
      - (((v69 - 0x6AFFFE7CBEEED93DLL) >> 31) & 0x1FD1FFFFELL);
  unint64_t v71 = v70
      + (((v70 - 0x6F890ADDC05ED93DLL) >> 16) ^ 0xFB3BD179F7FEAFB3)
      + (((v70 - 0x6F890ADDC05ED93DLL) >> 15) & 0x1A2F3EFFD5F66);
  unint64_t v72 = v71 - 0x6AC4DC57B85D88F0;
  unint64_t v73 = v71 + (((v71 - 0x6AC4DC57B85D88F0) >> 8) ^ 0x2303804840A0A2E2) + 2;
  unint64_t v74 = v73 - ((v72 >> 7) & 0x1F8FF6F7EBEBA3ALL);
  int v75 = (2 * v74 - 2 * ((2 * v74 + 235120728) & 0x6E935E7E ^ (2 * v74) & 6) + 2090272464) & v62 ^ 0x391A6AC9;
  int v76 = (v74 + 117560364) ^ 0xA77A2E6C ^ (((((2 * v75) | 0xA1CE239E) - v75 + 790162993) & 0xA39C0F0C ^ 0x22840901 | (((2 * v75) | 0xA1CE239E) - v75 + 790162993) & 0x5C63F0E0)
                                        - 1);
  LODWORD(v73) = (v76 - 2 * (v76 & 0x58BC9F3D ^ v73 & 1) - 658727108) ^ v60;
  uint64_t v77 = v74 - ((2 * v74 + 0x5275C3D2F13C81D8) & 0x51F45EB45CFBFAAALL) + 0x52351143A71C3E41;
  LODWORD(v74) = (2 * (v74 - ((2 * v74 - 247692840) & 0x5CFBFAAA) - 1491321279)) ^ 0x5CFBFAAA;
  uint64_t v78 = (v74 - ((2 * v74) & 0x83001424) + 1098910227) & 0x70402048 ^ 0x10502159 | (v74
                                                                                                 - ((2 * v74) & 0x83001424)
                                                                                                 + 1098910227) & 0x8D2FDC24;
  unint64_t v79 = ((2 * ((v68 ^ 0x15D9AECF24AEF28FLL ^ v77) + v67)) & 0x73DFDFFC7EABFFAALL)
      + (((v68 ^ 0x15D9AECF24AEF28FLL ^ v77) + v67) ^ 0xB9EFEFFE3F55FFD5);
  unint64_t v80 = v79
      + (((v79 + 0x46101001C0AA002BLL) >> 32) ^ 0x8602008400000820)
      - ((2 * ((v79 + 0x46101001C0AA002BLL) >> 32)) & 0x1FFFFEFBELL);
  unint64_t v81 = v80
      + (((v80 - 0x3FF1F0823F5607F5) >> 16) ^ 0x1F9DBFBBBF72DDE1)
      + (((v80 - 0x3FF1F0823F5607F5) >> 15) & 0x17F777EE5BBC2);
  unint64_t v82 = v81
      + (((v81 - 0x5F8FB03DFEC8E5D6) >> 8) ^ 0x949384860831170FLL)
      - (((v81 - 0x5F8FB03DFEC8E5D6) >> 7) & 0xD8F6F3EF9DD1E0);
  unint64_t v83 = v82 + 2;
  unint64_t v84 = (((unint64_t)((v73 ^ 0xCFBD922D) - 2 * ((v73 ^ 0xCFBD922D) & 1) + 2) << 61)
       + 0x6000000000000000) ^ 0xA000000000000000;
  uint64_t v85 = 2 * (v82 + 2);
  uint64_t v86 = (v85 - ((4 * (v82 + 2) + 1679297636) & 0x7CCBAE9C) + 812768640) & v62 ^ 0xED42BC2CLL;
  uint64_t v87 = (v86 - ((2 * v86) & 0x102D330D0) + 0x4FF83699BFALL) & 0x7FFFFFFFFFCLL ^ (v82 + 0xBDCCB3BF906031BLL);
  uint64_t v88 = (v87 ^ 0x4FF524EF398)
      - 0x6FE81C7C37739610
      - 2 * ((v87 ^ 0x4FF524EF398) & 0x1017E383C88C69F7 ^ v87 & 5)
      + 2;
  uint64_t v89 = (v84 + 0x7F3293C7B29DCE14 - 2 * v84) ^ 0x7F3293C7B29DCE14 | (((v73 >> 3) ^ 0x19F7B245)
                                                                       + 0x6E405979623A081BLL
                                                                       - ((2 * ((v73 >> 3) ^ 0x19F7B245)) & 0x4741036)) ^ 0x6E405979623A081BLL;
  *((void *)&v90 + 1) = v88 ^ 2;
  *(void *)&long long v90 = v88 ^ 0x9017E383C88C69F0;
  unint64_t v91 = ((v90 >> 3) - ((2 * (v90 >> 3)) & 0x9B7B5EDC740BEBA4) - 0x32425091C5FA0A2ELL) ^ (v89
                                                                                         - ((2 * v89) & 0x595EF9186C7DECFCLL)
                                                                                         - 0x53508373C9C10982);
  LODWORD(v91) = ((v91 >> 61) + 758337000 + ((8 * v91) ^ 0xEDD7720) - ((2 * ((8 * v91) ^ 0xEDD7720)) & 0x5A669BD0)) ^ 0x2D334DEA;
  unint64_t v92 = ((2
        * ((v68 ^ 0xF40A36064FA05455 ^ (v83
                                        - ((v85 - 0x7A3FEC752ABB204ELL) & 0x92536F268AE6B71ELL)
                                        - 0x73F63EA74FEA3498))
         + v67)) & 0x7C9DFB5C6735F97ELL)
      + (((v68 ^ 0xF40A36064FA05455 ^ (v83
                                       - ((v85 - 0x7A3FEC752ABB204ELL) & 0x92536F268AE6B71ELL)
                                       - 0x73F63EA74FEA3498))
        + v67) ^ 0x3E4EFDAE339AFCBFLL);
  unint64_t v93 = v92
      + (((v92 - 0x3E4EFDAE339AFCBFLL) >> 32) ^ 0x81014038415C00A0)
      - (((v92 - 0x3E4EFDAE339AFCBFLL) >> 31) & 0x17D47FEBELL);
  unint64_t v94 = v93
      + (((v93 + 0x40AFC2198B0902A1) >> 16) ^ 0x6BDDB7DFF6C358DBLL)
      + (((v93 + 0x40AFC2198B0902A1) >> 15) & 0x16FBFED86B1B6);
  unint64_t v95 = v94
      + (((v94 - 0x2B2DF5C66BBA563ALL) >> 8) ^ 0xAB2480BA34E28800)
      - (((v94 - 0x2B2DF5C66BBA563ALL) >> 7) & 0x1B6FE8B963AEFFELL)
      + 2;
  LODWORD(v86) = (2 * v95 - 2 * ((2 * v95 + 1053180808) & 0x421BD632 ^ (2 * v95) & 2) - 2132665928) & v62 ^ 0x46D428;
  LODWORD(v86) = (((2 * v86) | 0x5EFB72CE) - v86 - 796768615) ^ 0xEF34B9E5;
  LODWORD(v86) = (((2 * v86) & 0x460D800) - v86 - 36727810) ^ (v94
                                                             + (((v94 - 0x2B2DF5C66BBA563ALL) >> 8) ^ 0x34E28800)
                                                             - (((v94 - 0x2B2DF5C66BBA563ALL) >> 7) & 0x963AEFFE)
                                                             + 1600332230);
  int v96 = v95 - ((2 * v95 + 811774024) & 0x88E54714) - 593232978;
  LODWORD(v67) = (((2 * v96) ^ 0x88E54714) - ((2 * ((2 * v96) ^ 0x88E54714)) & 0x4C4DD870) - 1507398600) & v62 ^ 0xE8074C2C;
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((1013 * ((v61 & 0xFFFFFFFE) != 728198678)) ^ v64)))(v78, v91 - ((2 * v91) & 0xC25B8), 0xF5791F5E86531B4, v66, ~(2 * ((v86 ^ 0xFDCB9374) & 0x9F971F ^ v86 & 1)) + (v86 ^ 0xFDCB9374) + 10458911, 758337000, (v67 - ((2 * v67) & 0x709AA8D0) - 1201842823) & 0xFFFFFDFC ^ v96, 0x5D4D93DA2ECB4660, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_100130740()
{
}

#error "1001343E4: call analysis failed (funcsize=2381)"

#error "1001343EC: too big function (funcsize=0)"

void sub_10014837C()
{
}

uint64_t sub_100148388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W8>, uint64_t a5)
{
  LODWORD(STACK[0x3E8]) = a3;
  int v6 = a4 ^ 0x4CF;
  unint64_t v7 = ((unint64_t)&STACK[0x514] ^ 0x775CF75AE6F67AFFLL)
     - 0x775CF75AE6F67AFFLL
     + (((void)&STACK[0x514] << ((a4 ^ 0xCFu) + 23)) & 0xEEB9EEB5CDECF5F8);
  STACK[0x3F8] = ((v7 % 0x25) ^ 0x3EF5F7FBFFFDEFF3)
               - 0x3EF5F7FBFFFDEFE3
               + ((2 * (v7 % 0x25)) & 0x66);
  unint64_t v8 = STACK[0x4C0];
  STACK[0x3E0] = STACK[0x4C0];
  unsigned int v9 = (char *)&a5 + v8 - 0x7BB775407D70C302;
  int v10 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, void *, void *, void *, uint64_t))(v5 + 8 * ((289 * (v6 + 1848031518 + 38 * (v6 ^ 0xC0) == 1848033348)) ^ v6));
  STACK[0x410] = STACK[0x4E8];
  STACK[0x420] = (unint64_t)v9;
  STACK[0x3F0] = (unint64_t)(v9 + 16);
  return v10(a1, a2, STACK[0x3D0], &unk_10026B3E0, &unk_10026B3B0, &unk_100286A80, 3925742127);
}

uint64_t sub_1001484F4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, unsigned int a5@<W6>, int a6@<W8>)
{
  unsigned int v11 = (v7 ^ a5) >> (v6 + ((a6 + 122) ^ 0x43));
  LOBYTE(v11) = (v11 - (((a6 - 59) ^ 0xB0) & (2 * v11)) + 45) ^ 0x36;
  *(unsigned char *)(a1 + (v9 - 525641235)) = v11;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((307
                                * (v9
                                 - ((*(unsigned __int8 *)(a2 + ((v9 - 525641235) & 0xFLL)) ^ (39 * ((v9 - 19) & 0xF)) ^ *(unsigned __int8 *)(a3 + ((v9 - 525641235) & 0xFLL)) ^ *(unsigned __int8 *)(((v9 - 525641235) & 0xFLL) + a4 + 1)) != v11) == v8)) ^ a6)))();
}

uint64_t sub_100148598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((289 * (v8 + 8 == v9 + 827 + a8 + 38 * (v9 ^ 0xC0))) ^ v9)))();
}

uint64_t sub_1001485D4()
{
  LODWORD(STACK[0x400]) = v1;
  STACK[0x598] = 0xBB2DD9C12225691ELL;
  LODWORD(STACK[0x514]) = dword_10031E658 - 340121379;
  uint64_t v4 = *(unsigned int *)aHr;
  unint64_t v5 = 1856021207
     * ((((v2 - 152) | 0x8A6AD391298A1BEDLL) - (v2 - 152) + ((v2 - 152) & 0x75952C6ED675E410)) ^ 0x677E440A67E3CD13);
  *(_DWORD *)(v2 - 140) = v0 - 1713751891 + v5;
  *(_DWORD *)(v2 - 120) = v5 + v0 + 1123495981;
  *(_DWORD *)(v2 - 116) = v5;
  int v6 = v5 ^ (v0 - 1713751891);
  *(void *)(v2 - 136) = v4 - v5;
  *(void *)(v2 - 128) = v5 ^ 0x60526829;
  *(_DWORD *)(v2 - 148) = v6 ^ 0x7B;
  *(_DWORD *)(v2 - 144) = v6 ^ 0x5E;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 ^ 0xE4F)))(v2 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v2 - 152)))(v7);
}

uint64_t sub_1001486E0()
{
  int v0 = STACK[0x41C];
  int v1 = LODWORD(STACK[0x41C]) ^ 0xD8;
  STACK[0x410] = ((uint64_t (*)(unint64_t, uint64_t))*(&off_1002E1F70 + LODWORD(STACK[0x41C]) + 489))(STACK[0x3F8], 3312658705);
  int v2 = ((uint64_t (*)(void))*(&off_1002E1F70 + v0 + 551))();
  unsigned int v3 = v1 - 1965487874 + v2 - ((2 * v2) & 0x15B211FC) - 1764;
  LODWORD(xmmword_10031DC90) = v3;
  DWORD1(xmmword_10031DC90) = ((1812433253 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) ^ 0xDB7A77BE)
                            + ((-670100790 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) & 0xB6F4EF7C)
                            - 1352756927
                            - ((((((1812433253 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) ^ 0xDB7A77BE)
                                + ((-670100790 * (v3 ^ 0x8AD908FC ^ (v3 >> 30))) & 0xB6F4EF7C)
                                + 628279112) << ((v1 - 47) & 0x7F ^ 0x34))
                              + 505774582) & 0x15B211FC);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (v1 ^ 0x1F)))();
}

void sub_100148850()
{
}

uint64_t sub_10014886C@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  LODWORD(STACK[0x514]) = a2 + 1;
  uint64_t v5 = (*(uint64_t (**)(unint64_t, void))(a1 + 8 * (v2 ^ v3)))(STACK[0x3F0], 0);
  int v6 = (_DWORD *)STACK[0x420];
  int v7 = *(_DWORD *)(STACK[0x420] + 16) - 1965487874 - ((2 * *(_DWORD *)(STACK[0x420] + 16)) & 0x15B211FC);
  v6[1] = *(_DWORD *)(STACK[0x420] + 24) - 1965487874 - ((*(_DWORD *)(STACK[0x420] + 24) << (v2 - 52)) & 0x15B211FC);
  v6[2] = v7;
  int v8 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v2 + 499727150))(v5);
  v6[3] = v8 - 1965487874 - ((2 * v8) & 0x15B211FC);
  int v9 = ((uint64_t (*)(void))*(&off_1002E1F70 + (v2 ^ (v3 + 15))))();
  _DWORD *v6 = v9 - 1965487874 - ((2 * v9) & 0x15B211FC);
  unint64_t v10 = 516615401 * ((v4 - 152) ^ 0x88BC887B73630632);
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x41C]) - 125091471;
  int v11 = (DWORD1(xmmword_10031DC90) ^ 0x40C98719 ^ (1664525
                                                 * (xmmword_10031DC90 ^ 0xAFA33E38 ^ ((xmmword_10031DC90 >> 30) | 0x257A36C4))
                                                 - ((3329050
                                                   * (xmmword_10031DC90 ^ 0xAFA33E38 ^ ((xmmword_10031DC90 >> 30) | 0x257A36C4))) & 0x94211FCE)
                                                 - 904884249))
      + (*(_DWORD *)STACK[0x420] ^ 0x8AD908FE);
  unsigned int v12 = (v11 ^ 0xFD4DF7F7) + 1257025232 + ((2 * v11) & 0xFA9BEFEE);
  DWORD1(xmmword_10031DC90) = v12 - ((2 * v12 + 260747890) & 0x15B211FC) + 1117676087;
  *(_DWORD *)(v4 - 132) = (v2 - 1787609054) ^ v10;
  *(void *)(v4 - 144) = 1114820231 - v10;
  *(_DWORD *)(v4 - 120) = ((v2 - 1787609054) & 0x7FBE6D86) + v10;
  *(_DWORD *)(v4 - 116) = (v2 + 314469202) ^ v10;
  *(_DWORD *)(v4 - 112) = ((v2 - 1787609054) & 0xFFEE1FF8) + v10;
  *(_DWORD *)(v4 - 152) = v10;
  *(void *)(v4 - 128) = v10 ^ 0x4272CE85;
  uint64_t v13 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v2 + 499727120))(v4 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v4 - 136)))(v13);
}

uint64_t sub_100148B7C()
{
  BOOL v2 = v1 >= (LODWORD(STACK[0x41C]) ^ 0x360u) + 1114818857;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 | (4 * v2)) ^ (LODWORD(STACK[0x41C]) - 227))))();
}

uint64_t sub_100148BC0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((LODWORD(STACK[0x41C]) + 16) ^ (v1 > 0x4272D0F4)) & 1) == 0) | (4 * ((((LODWORD(STACK[0x41C]) + 16) ^ (v1 > 0x4272D0F4)) & 1) == 0))) ^ (LODWORD(STACK[0x41C]) - 227))))();
}

uint64_t sub_100148C14()
{
  int v6 = (v0 - 348) | 0x23C;
  _DWORD *v3 = v3[623];
  unint64_t v7 = 516615401 * ((0xE919A3F3EA000F92 - ((v5 - 152) | 0xE919A3F3EA000F92) + v2) ^ 0x9E5AD477669CF65FLL);
  *(_DWORD *)(v5 - 132) = (v6 + 773368451) ^ v7;
  *(void *)(v5 - 144) = (v4 + 247723212) - v7;
  *(_DWORD *)(v5 - 152) = v7;
  *(void *)(v5 - 128) = v7 ^ 0x59B0A39B;
  *(_DWORD *)(v5 - 116) = (v6 - 185257397) ^ v7;
  *(_DWORD *)(v5 - 112) = v7 + v6 + 773368451 + 16;
  *(_DWORD *)(v5 - 120) = ((v6 + 773368451) ^ 0x43) + v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v6 ^ 0xE79)))(v5 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v5 - 136)))(v8);
}

uint64_t sub_100148D08()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 < (STACK[0x408] & 0x774BBFB ^ 0x59B0A032u)) * (LODWORD(STACK[0x41C]) - 1551)) ^ (LODWORD(STACK[0x41C]) - 1132))))();
}

uint64_t sub_100148D70()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((45 * (v1 > ((LODWORD(STACK[0x41C]) - 1472) | 0x181u) + 1504747937)) ^ (LODWORD(STACK[0x41C]) - 1132))))();
}

uint64_t sub_100148DD0@<X0>(int a1@<W8>)
{
  int v4 = (a1 - 117) | 0x221;
  *(_DWORD *)(STACK[0x420] + 4 * ((v4 ^ 0xB5135298) + v3)) ^= 0x7018468C ^ *(_DWORD *)(STACK[0x410]
                                                                                       + 4 * ((v4 ^ 0xB5135298) + v3));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((21
                                * (((((v4 - 288134187) & 0x112C96BD) - 3193) ^ ((v4 - 373) | 0x408)) + v2 == 989631341)) ^ v4)))();
}

void sub_100148E88()
{
}

uint64_t sub_100148E90@<X0>(int a1@<W8>)
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((4 * (a1 ^ 0x3A3) + 521726825) & 0xE0E710FF ^ 0xFFFFFFDA) + v3 == 1675212282)
                                * ((532 * ((4 * (a1 ^ 0x3A3)) ^ 0x3BF)) ^ 0x10E)) ^ (4 * (a1 ^ 0x3A3)))))();
}

uint64_t sub_100148F0C@<X0>(int a1@<W8>)
{
  uint64_t v6 = 4 * (v4 - 2058244370);
  unsigned int v7 = *(_DWORD *)(v3 + 4 * (v4 - 2058244371));
  int v8 = (*(_DWORD *)(v3 + v6) ^ 0xA0FE06D5 ^ (1566083941 * (v7 ^ v2 ^ (v7 >> 30))
                                           - ((984684234 * (v7 ^ v2 ^ (v7 >> 30))) & 0x544E1C56)
                                           + 707202603))
     - v4;
  *(_DWORD *)(v3 + v6) = v8 - ((2 * v8 + 358392356) & 0x15B211FC) + 92756496;
  unint64_t v9 = 1606104089 * ((v5 - 152) ^ 0xC2BEFB347517423ELL);
  *(_DWORD *)(v5 - 120) = -1231241978 - v9 + a1;
  *(void *)(v5 - 128) = (v4 - 1140200194) ^ v9;
  *(_DWORD *)(v5 - 140) = v9 ^ (a1 - 1268367938) ^ 0x54;
  *(_DWORD *)(v5 - 136) = a1 - 1268367938 + v9;
  *(_DWORD *)(v5 - 152) = v9 | 1;
  *(_DWORD *)(v5 - 144) = (a1 - 1268367947) ^ v9;
  *(void *)(v5 - 112) = 918044175 - v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 534)))(v5 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v5 - 148)))(v10);
}

uint64_t sub_100149070()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1908
                                * (v1 < ((239 * (LODWORD(STACK[0x41C]) ^ 0x638)) ^ 0x36B8397Fu)
                                      + LODWORD(STACK[0x41C])
                                      - 752)) ^ (LODWORD(STACK[0x41C]) - 752))))();
}

uint64_t sub_1001490B8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1908 * (v1 > (((LODWORD(STACK[0x41C]) - 1020) | 0x10C) ^ 0x36B84332u))) ^ (LODWORD(STACK[0x41C]) - 752))))();
}

void sub_100149100()
{
  LODWORD(xmmword_10031DC90) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 + 2057)))(STACK[0x410]);
  JUMPOUT(0x10011E7B0);
}

uint64_t sub_10014912C()
{
  STACK[0x4C0] = STACK[0x3E0];
  STACK[0x4B8] = v0;
  STACK[0x4E8] = STACK[0x410];
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x5E8] == 0) * ((v1 + 1867) ^ (v1 + 1437))) ^ v1)))();
}

uint64_t sub_100149188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = (unsigned __int8 *)(STACK[0x5E8]
                          + (int)((((v11 << ((v7 - 101) ^ 0x85)) - 1371128582) ^ 0x6EFF2F5F)
                                - 1862217567
                                + ((((v11 << ((v7 - 101) ^ 0x85)) - 1371128582) << (v7 + 24)) & 0xDDFE5EBC)));
  unint64_t v14 = ((((v13 ^ *(_DWORD *)(v9 + v10)) & 0x7FFFFFFF) * v8) ^ ((((v13 ^ *(_DWORD *)(v9 + v10)) & 0x7FFFFFFF)
                                                                             * v8) >> 16))
      * v8;
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((499
                                * (*v13 == (*(unsigned char *)(a6 + (v14 >> 24)) ^ *(unsigned char *)(a5 + (v14 >> 24)) ^ *(unsigned char *)(a7 + (v14 >> 24)) ^ v14 ^ (-33 * BYTE3(v14))))) ^ v7)))();
}

uint64_t sub_100149240(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v17 = (unsigned char *)(v14 + (int)((((v9 - 588) ^ 0xFF69FBED) & v12) + (a1 ^ 0xFFB4FFB9) + (((v9 - 1200) | 0x102) ^ 0x4B037C)));
  unint64_t v18 = ((((v17 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((703
                                * ((char)(v18 ^ *v17 ^ *(unsigned char *)(v11 + (v18 >> 24)) ^ *(unsigned char *)(v13 + (v18 >> 24)) ^ *(unsigned char *)((v18 >> 24) + a8 + 1) ^ (BYTE3(v18) * v8)) > 47)) ^ (v9 - 588))))();
}

uint64_t sub_100149308(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((char)(v7 ^ (-33 * a1) ^ *(unsigned char *)(a5 + a1) ^ *(unsigned char *)(a6 + a1) ^ *(unsigned char *)(a7 + a1)) >= (char)((((a3 ^ 0x7E) - 95) | 2) - 76))
                                * (a3 ^ 0x49B)) ^ a3 ^ 0x57E)))();
}

uint64_t sub_100149368(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((27 * ((a3 ^ 0xBD ^ (v3 > ((a3 - 75) ^ 0x7Bu))) & 1)) ^ a3)))();
}

uint64_t sub_1001493B8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((char)(v7 ^ *(unsigned char *)(a5 + a1) ^ *(unsigned char *)(a6 + a1) ^ *(unsigned char *)(a7 + a1) ^ ((a2 - 92) * a1)) > 96)
                                * ((a2 + 769) ^ 0x65)) ^ (a2 - 325))))();
}

uint64_t sub_10014940C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v17 = (char *)(v14
               + (int)((v9 ^ 0x7F4ED7FF)
                     - 2135873534
                     + ((v9 << ((v12 + 43) ^ 0x20)) & (((v12 + 83290449) & 0xFB0917FF) - 23221067))));
  char v18 = *v17;
  unint64_t v19 = ((((v17 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v17 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((25
                                * ((char)(*(unsigned char *)(v11 + (v19 >> 24)) ^ v18 ^ *(unsigned char *)(v13 + (v19 >> 24)) ^ *(unsigned char *)((v19 >> 24) + a8 + 1) ^ v19 ^ (BYTE3(v19) * v8)) < 48)) ^ (v12 + 280))))();
}

uint64_t sub_1001495E4(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 < ((a1 + 99) ^ 0xBEu)) * (((a1 - 353178211) & 0x150D177D) - 1568)) ^ a1)))();
}

uint64_t sub_100149640(uint64_t a1, int a2)
{
  int v5 = a2 - 440;
  BOOL v7 = v2 + 1558748170 < 0 && v3 - 805031979 <= (int)((56 * (a2 ^ 0x634)) ^ 0xFFFFFE3F);
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * v7) ^ v5)))();
}

uint64_t sub_1001497AC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v18 = (((v16 << (v9 + 68)) - (((v16 << (v9 + 69)) + 64) & 0xE0) + 25) ^ 0x79 | (a1 + 17))
      - ((2 * (((v16 << (v9 + 68)) - (((v16 << (v9 + 69)) + 64) & 0xE0) + 25) ^ 0x79 | (a1 + 17))) & 0x60)
      + 48;
  unint64_t v19 = (unsigned char *)(v13 + v12 - 685564291);
  unint64_t v20 = ((((v19 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v19 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
      * v10;
  *unint64_t v19 = v20 ^ (((((((v19 ^ v15) & 0x7FFFFFFF) * v10) ^ ((((v19 ^ v15) & 0x7FFFFFFF) * v10) >> 16))
                * v10) >> 24)
              * v8) ^ *(unsigned char *)(v11 + (v20 >> 24)) ^ *(unsigned char *)(v14 + (v20 >> 24)) ^ *(unsigned char *)((v20 >> 24) + a8 + 1) ^ v18 ^ 0x30;
  return (*(uint64_t (**)(void))(v17 + 8 * (v9 ^ (14 * ((v12 - 685564290) < 0x14)))))();
}

uint64_t sub_100149894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100149188(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10014989C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((663 * (LODWORD(STACK[0x410]) == ((v0 - 1628895509) & 0x6116F7D7) - 839)) ^ v0)))();
}

uint64_t sub_1001498DC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((8 * (((STACK[0x5E8] == 0) ^ (v0 - 122)) & 1)) & 0xDF | (32 * (((STACK[0x5E8] == 0) ^ (v0 + 390)) & 1))) ^ (v0 + 389))))();
}

uint64_t sub_100149918()
{
  ((void (*)(void))*(&off_1002E1F70 + (v1 ^ 0xE12u)))();
  STACK[0x5E8] = v0;
  return sub_10014B44C(1031026433);
}

void sub_100149974()
{
  if (v0 >= v1) {
    int v2 = *(_DWORD *)aHr + 1;
  }
  else {
    int v2 = 1616013353;
  }
  *(_DWORD *)aHr = v2;
  JUMPOUT(0x100149AECLL);
}

uint64_t sub_100149B5C(uint64_t a1, int a2, char a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((393 * (((((v3 + 8 - v4) | (v4 - (v3 + 8))) >> (v4 - a3 + 49)) & 1) == 0)) ^ (a2 + v4 + 1212))))();
}

uint64_t sub_100149BA4(uint64_t a1)
{
  *(void *)(v4 - 184) = 0x39907029A91B7DDLL;
  LODWORD(STACK[0x4F4]) = dword_10031E658 - 340121379;
  uint64_t v5 = *(unsigned int *)aHr;
  unint64_t v6 = 1856021207 * ((v4 - 152 + v3 - 2 * ((v4 - 152) & v3)) ^ 0xDD86721C725D88F9);
  *(_DWORD *)(v4 - 140) = v1 + 290879479 + v6;
  int v7 = v6 ^ (v1 + 290879479);
  *(void *)(v4 - 136) = a1 - v6;
  *(void *)(v4 - 128) = v5 ^ v6;
  *(_DWORD *)(v4 - 120) = v6 + v1 + 1123495981;
  *(_DWORD *)(v4 - 116) = v6;
  *(_DWORD *)(v4 - 148) = v7 ^ 0xD;
  *(_DWORD *)(v4 - 144) = v7 ^ 0x87;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 567)))(v4 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v4 - 152)))(v8);
}

uint64_t sub_100149C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x3A8]) = v5;
  int v8 = (2 * v7) ^ 0xEE4;
  STACK[0x3E8] = (*(uint64_t (**)(unint64_t, uint64_t))(a5 + 8 * (v7 + 489)))(STACK[0x398], 3312658705);
  int v9 = ((uint64_t (*)(void))*(&off_1002E1F70 + (v7 ^ 0xE5F)))();
  unsigned int v10 = v8 - 1965487874 + v9 - ((2 * v9) & 0x15B211FC) - 668;
  LODWORD(xmmword_10031DC90) = v10;
  int v11 = v10 ^ (v10 >> 30) ^ (11 * ((2 * v7) ^ 0xC2B) - 1965488789);
  *(_DWORD *)(v6 + 4) = ((1812433253 * v11) ^ 0xEDCFFCE5)
                      + ((-670100790 * v11) & 0xDB9FF9CA)
                      - 2
                      * ((((1812433253 * v11) ^ 0xEDCFFCE5) + ((-670100790 * v11) & 0xDB9FF9CA) + 1378878236) & 0xAD908FF ^ (((101 * v11) ^ 0xE5) + ((-54 * (_BYTE)v11) & 0xCA) + 48) & 1)
                      - 1660351462;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v8))(1355690544);
}

void sub_100149DF0()
{
}

uint64_t sub_100149E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = (v6 - 1265) | 0x230;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  int32x4_t v11 = vdupq_n_s32(0xC9143492);
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  uint64_t v13 = (v9 + 7);
  v8.i32[0] = *(_DWORD *)(v5 + 4);
  v8.i32[1] = *(_DWORD *)(v5 + 4 * (v13 - 896));
  v8.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v14 = vextq_s8(v10, v8, 0xCuLL);
  int8x16_t v15 = v8;
  v15.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v16 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v14, v12), vdupq_n_s32(0x8D8812C6)), (int8x16_t)vdupq_n_s32(0x629199BEu)), vdupq_n_s32(0xFF6BD24F));
  int8x16_t v17 = veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x3D4BF1B0u));
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v17, (int8x16_t)vdupq_n_s32(0x36EBCB6Du)), (int32x4_t)vorrq_s8(v17, (int8x16_t)v11)), v11), (int8x16_t)vdupq_n_s32(0x36B5A2Bu));
  int32x4_t v19 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0x4826262u)), v18), vdupq_n_s32(0xFDBECECF)), veorq_s8(v16, (int8x16_t)vdupq_n_s32(0xEE855DCA))), (int8x16_t)vdupq_n_s32(0x535939u));
  v20.i32[0] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 4) & 1));
  v20.i32[1] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 4 * (v13 - 896)) & 1));
  v20.i32[2] = *(_DWORD *)(v7 - 184 + 4 * (*(_DWORD *)(v5 + 12) & 1));
  v20.i32[3] = *(_DWORD *)(v7 - 184 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v20), (int8x16_t)vdupq_n_s32(0xBBA45E56)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x84D7A62E))), vdupq_n_s32(0x426BD317u)), 1uLL));
  return (*(uint64_t (**)(void))(a5 + 8 * v9))();
}

uint64_t sub_10014A918@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X4>, int a4@<W8>)
{
  int v9 = (unsigned int *)(v7 + 4 * (v4 + v6));
  int v10 = (((v5 | 0x7FFFFFFF) - 1920462138) ^ (((a4 - 2008961906) | 0x31024023) - 1454528117)) - 9711025;
  uint64_t v11 = v4 + 1;
  int v12 = *(_DWORD *)(v7 + 4 * (v11 + v6));
  int v13 = (a2 - (v12 & 0x7FFFFFFE ^ 0x3D4BF1B0 | a2) + (v12 & 0x7FFFFFFE ^ 0x3D4BF1B0 | 0x36EBCB6D)) ^ 0x36B5A2B;
  unsigned int v14 = ((((2 * v13) | 0x4826262) - v13 - 37826865) | v10 ^ 0xEE855DCA) ^ 0x535939;
  unsigned int *v9 = v9[397] ^ *(_DWORD *)(v8 - 184 + 4 * (v12 & 1)) ^ ((v14 - ((2 * v14) & 0x84D7A62E) + 1114362647) >> 1) ^ 0xBBA45E56;
  return (*(uint64_t (**)(void))(a3 + 8 * ((2970 * (v11 == a1 + 3)) ^ a4)))();
}

uint64_t sub_10014AA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v9 = (const float *)&unk_10031E01C;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32(v9);
  uint64_t v11 = 7 * (v6 ^ 0xB943F072);
  v12.i64[0] = 0x8000000080000000;
  v12.i64[1] = 0x8000000080000000;
  v13.i64[0] = 0x8000000080000000;
  v13.i64[1] = 0x8000000080000000;
  v8.i32[0] = dword_10031E020;
  v8.i32[1] = *(_DWORD *)(v7 + 4 * (v11 - 226));
  v8.i32[2] = dword_10031E028;
  int8x16_t v14 = vextq_s8(v10, v8, 0xCuLL);
  int8x16_t v15 = v8;
  v15.i32[3] = dword_10031E02C;
  int8x16_t v16 = (int8x16_t)vsubq_s32(vdupq_n_s32(0x3492F3F7u), (int32x4_t)vorrq_s8(v14, v12));
  int32x4_t v17 = (int32x4_t)veorq_s8(vandq_s8(v15, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x24AF0CCEu));
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0x31F08B08u))), vdupq_n_s32(0x18F84584u)), (int8x16_t)vdupq_n_s32(0xB4FC4584));
  int32x4_t v19 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32(v18, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v18, v18), (int8x16_t)vdupq_n_s32(0x8A11A4D4))), vdupq_n_s32(0xC508D26A)), vandq_s8(v16, v13)), (int8x16_t)vdupq_n_s32(0x477AD65Au));
  v20.i32[0] = *(_DWORD *)(v5 + 4 * (dword_10031E020 & 1));
  v20.i32[1] = *(_DWORD *)(v5 + 4 * (*(_DWORD *)(v7 + 4 * (v11 - 226)) & 1));
  v20.i32[2] = *(_DWORD *)(v5 + 4 * (dword_10031E028 & 1));
  v20.i32[3] = *(_DWORD *)(v5 + 4 * (dword_10031E02C & 1));
  unk_10031E01C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031DC90, v20), (int8x16_t)vdupq_n_s32(0xCB06BB50)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v19, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v19, v19), (int8x16_t)vdupq_n_s32(0x465C3236u))), vdupq_n_s32(0xA32E191B)), 1uLL));
  return (*(uint64_t (**)(void))(a5
                              + 8
                              * (int)((1373 * (((4 - (v6 ^ 0xB943F1BF)) | ((v6 ^ 0xB943F1BF) - 4)) >= 0)) ^ ((v6 ^ 0xB943F1BF) - 72))))();
}

void sub_10014AC04()
{
}

uint64_t sub_10014AC14@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  unsigned int v4 = ((*v2 & 0x42B26832 ^ 0xC0B02001) - 1) | *v2 & ((a2 ^ 0x7FB) + 1028493712);
  unsigned int v5 = (((v4 & ((a2 + 1141) ^ 0x35E2454E) ^ 0xB4820301) - 1) | v4 & 0x4A1DBC8C) ^ 0xFEEB2BFE;
  v2[623] = v2[396] ^ *(_DWORD *)(v3 - 184 + 4 * (*v2 & 1)) ^ (((((v2[623] & 0x80000000) - 2096650292) & 0x80000000)
                                                                + v5
                                                                - ((2 * v5) & 0x82323CDC)
                                                                - 1055318417) >> 1) ^ 0xFA1D38EA;
  return (*(uint64_t (**)(void))(a1 + 8 * ((963 * (LODWORD(STACK[0x4F4]) > 0x26F)) ^ a2)))();
}

uint64_t sub_10014AD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x4F4]) = 0;
  int v8 = v5;
  int v9 = LODWORD(STACK[0x4F4])++;
  *(_DWORD *)(v6 + 1624) = v9 + 340121380;
  uint64_t v10 = (*(_DWORD *)aHr + 1958664424);
  unint64_t v11 = 1606104089
      * ((((v7 - 152) | 0xE47FA843712E5989) - (v7 - 152) + ((v7 - 152) & 0x1B8057BC8ED1A670)) ^ 0x26C1537704391BB7);
  int v12 = v11 ^ (v8 - 943509761);
  *(_DWORD *)(v7 - 120) = -1231241978 - v11 + v8;
  *(_DWORD *)(v7 - 140) = v12 ^ 0x78;
  *(_DWORD *)(v7 - 136) = v8 - 943509761 + v11;
  *(void *)(v7 - 128) = v10 ^ v11;
  *(void *)(v7 - 112) = 3574677777u - v11;
  *(_DWORD *)(v7 - 152) = v11 | 1;
  *(_DWORD *)(v7 - 144) = v12 ^ 0x62;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a5 + 8 * (v8 + 534)))(v7 - 152);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v7 - 148)))(v13);
}

void sub_10014AE34()
{
}

uint64_t sub_10014AE48()
{
  STACK[0x518] = v0;
  STACK[0x4D0] = STACK[0x3E8];
  return ((uint64_t (*)(void))STACK[0x380])();
}

uint64_t sub_10014AE60()
{
  uint64_t v0 = ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + (LODWORD(STACK[0x41C]) ^ 0xE12)))(STACK[0x388]);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((((LODWORD(STACK[0x41C]) - 572) | 0x26) - 848)
                                             * (LODWORD(STACK[0x44C]) == 0)) ^ (LODWORD(STACK[0x41C]) - 534))))(v0);
}

void sub_10014AF20(int a1@<W8>)
{
  LODWORD(STACK[0x5F0]) = STACK[0x45C];
  STACK[0x5E8] = STACK[0x3A0];
  STACK[0x4C0] = STACK[0x3B0];
  (*(void (**)(unint64_t))(v1 + 8 * (a1 ^ 0xC51)))(STACK[0x3C8]);
  JUMPOUT(0x10014AF90);
}

uint64_t sub_10014B008@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1288
                                * (((-69 * ((v2 + 40) & 0xFD ^ 0x35)) ^ (((a1 - v2) | (v2 - a1)) < 0)) & 1)) ^ (v1 + v2 + 329))))();
}

uint64_t sub_10014B068()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 402)))(20, 2865462264) != 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v2 * ((v0 ^ 0xAF) + ((v0 - 1615) | 0x18A) - 2051)) ^ v0)))();
}

uint64_t sub_10014B0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x410]) = v6;
  STACK[0x3A0] = v4;
  STACK[0x3D0] = v5;
  return sub_100149188(a1, a2, a3, a4, (uint64_t)&unk_100283D10, (uint64_t)&unk_10026D010, (uint64_t)&unk_10028B9E0);
}

uint64_t sub_10014B16C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 + 703134773) & 0xD61707BC) - 1406) * (a1 == v2 + 26)) ^ v1)))();
}

uint64_t sub_10014B1AC()
{
  int v2 = (uint64_t (*)(void))*(&off_1002E1F70
                          + ((((((v0 - 528) ^ ((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 489)))(25, 4244850056) == 0)) & 1) == 0)* ((v0 - 82658977) & 0x4ED41EF ^ 0x19B)) ^ (v0 - 757)));
  return v2();
}

uint64_t sub_10014B22C(uint64_t a1)
{
  STACK[0x3A0] = v1;
  STACK[0x3D0] = v3;
  uint64_t v5 = (int)((((v2 ^ 0xC) + 1443) ^ 0x9BACA478) + 1683184814);
  int v6 = (char *)(STACK[0x5E8] + v5);
  char v7 = *v6;
  int v8 = *(_DWORD *)(qword_10031EE68 + (int)((v2 ^ 0xF413B273) & dword_10031EC60));
  unint64_t v9 = 1755343967
     * ((1755343967 * ((v6 ^ v8) & 0x7FFFFFFF)) ^ ((1755343967 * ((v6 ^ v8) & 0x7FFFFFFF)) >> 16));
  uint64_t v10 = (unsigned char *)(a1 + v5);
  unint64_t v11 = 1755343967
      * ((1755343967 * ((v10 ^ v8) & 0x7FFFFFFF)) ^ ((1755343967 * ((v10 ^ v8) & 0x7FFFFFFF)) >> 16));
  *uint64_t v10 = byte_100294600[v9 >> 24] ^ v7 ^ byte_10028BF10[v9 >> 24] ^ byte_10026CAB0[(v9 >> 24) + 1] ^ byte_100294600[v11 >> 24] ^ byte_10028BF10[v11 >> 24] ^ byte_10026CAB0[(v11 >> 24) + 1] ^ v9 ^ v11 ^ (41 * BYTE3(v9)) ^ (41 * BYTE3(v11));
  return (*(uint64_t (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 8 * v2))(byte_10028BF10, byte_10026CAB0, 41);
}

uint64_t sub_10014B378()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (v1 != 12 * (((v0 - 1754) | 0x25) ^ 0xF0) - 1596)) ^ v0)))();
}

void sub_10014B3B4()
{
  ((void (*)(uint64_t))*(&off_1002E1F70 + (v1 ^ 0xE12)))(v0);
  JUMPOUT(0x10011C850);
}

uint64_t sub_10014B3E0@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((STACK[0x5E8] == 0) ^ ((a1 ^ 0x49) + 1)) & 1) * (a1 + 99)) ^ a1)))();
}

uint64_t sub_10014B420@<X0>(int a1@<W8>)
{
  uint64_t v2 = ((uint64_t (*)(void))*(&off_1002E1F70 + ((a1 + 1479) ^ 0xE12)))();
  STACK[0x5E8] = v1;
  return sub_10014B44C(v2);
}

uint64_t sub_10014B44C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x5F0]) = a1;
  LODWORD(STACK[0x5E0]) = 65;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((1035 * (*(unsigned __int8 *)STACK[0x408] == ((v1 ^ 0xA3) + 98))) ^ (v1 - 1437))))();
}

uint64_t sub_10014B4A4()
{
  unint64_t v2 = *(unsigned __int8 *)STACK[0x3F8];
  STACK[0x3C8] = v2;
  int v3 = STACK[0x400] - (((2 * v2) & 0xE4) + (v2 ^ 0xDBF59F72));
  LODWORD(STACK[0x400]) = v3;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1089 * (((v3 + 12) & (((57 * (v0 ^ 0x83)) ^ 0x455) - 602)) == ((2 * v3) & 4))) ^ v0)))();
}

uint64_t sub_10014B550@<X0>(int a1@<W8>)
{
  int v4 = a1 + v1 - 164318290;
  uint64_t v5 = (char *)&STACK[0x5A0] + STACK[0x338] + ((v2 - 1929694696) & 0x7304C92F) - 0x7BB775407D70C8A2;
  STACK[0x4C0] = STACK[0x338] - 1682119004 + (v2 + 1682118869);
  int v6 = *(void (**)(void *))(v3 + 8 * (v2 + 936));
  STACK[0x410] = (unint64_t)(v5 + 944);
  v6(&unk_100286AD2);
  char v7 = *(uint64_t (**)(void *, char *, uint64_t))(v3 + 8 * (v2 ^ 0xCA8));
  STACK[0x3F8] = (unint64_t)(v5 + 1008);
  uint64_t v8 = v7(&unk_100291517, v5 + 1008, 64);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (v2 | (16 * ((v4 - 262048269) > 0xF7)) | (32 * ((v4 - 262048269) > 0xF7)))))(v8);
}

uint64_t sub_10014B63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (v7 + 1752);
  STACK[0x4C0] = v9 + v8 - 2215;
  uint64_t v10 = (void *)STACK[0x3E0];
  v10[74] = 0x81D87792165AD0EBLL;
  unint64_t v11 = (void *)((char *)v10 + 620);
  v10[75] = 0xE12BDF9669A3571ELL;
  v10[76] = 0x1ED42069965CA8E1;
  unint64_t v12 = (unint64_t)*(&off_1002E1F70 + v7);
  void *v11 = 0x5A382E206BDBB113;
  STACK[0x468] = v12;
  int v13 = STACK[0x400];
  LODWORD(STACK[0x410]) = LODWORD(STACK[0x400]) + 2097253747;
  STACK[0x3F0] = STACK[0x408] + STACK[0x3C8];
  LODWORD(STACK[0x330]) = v13 + 520850630;
  int v14 = v13 - 1685239684;
  STACK[0x398] = 4294966825;
  LODWORD(v12) = STACK[0x41C];
  int v15 = 710 * (LODWORD(STACK[0x41C]) ^ 0x63E);
  LODWORD(STACK[0x3E8]) = 13 * (LODWORD(STACK[0x41C]) ^ 0x613);
  int v16 = (v12 - 70236094) & 0x42FB7DB;
  LODWORD(STACK[0x3F8]) = v16;
  LODWORD(STACK[0x408]) = v16 ^ 0x634;
  LODWORD(STACK[0x32C]) = v12 + 520402793;
  LODWORD(STACK[0x400]) = -512473929;
  LODWORD(STACK[0x3B0]) = v14;
  LODWORD(STACK[0x334]) = v14 + 64;
  STACK[0x320] = ~(unint64_t)&unk_100286A80;
  LODWORD(STACK[0x3C0]) = v15;
  LODWORD(STACK[0x3B8]) = v15 ^ 0x15;
  return sub_10011F26C(a1, 249984031, a3, 115766303, a5, 100, a7, v9);
}

uint64_t sub_10014F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8 = STACK[0x350];
  int v9 = LODWORD(STACK[0x350]) + 612;
  int v10 = LODWORD(STACK[0x350]) + 588;
  LODWORD(STACK[0x3F0]) = a8 ^ 0x98317866;
  if ((a8 ^ 0x98317866) <= 1) {
    unsigned int v11 = 1;
  }
  else {
    unsigned int v11 = a8 ^ 0x98317866;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((121 * (((v10 ^ (v11 - 17 < (v9 ^ 0xFFFFFBE3))) & 1) == 0)) ^ v8)))();
}

uint64_t sub_10014F330(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v5 = v4 < ((a4 - 62442069) & 0x3B8C6EB) + ((a4 + 552) ^ 0xFFFFF959);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v5 | (2 * v5)) ^ a4)))();
}

uint64_t sub_10014F380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)STACK[0x3D8] = xmmword_10026B2E0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4
                                                                      + 8
                                                                      * ((1360
                                                                        * ((((v5 - 72600254) ^ (((16 - (v3 & 0xFFFFFFF0)) | ((v3 & 0xFFFFFFF0) - 16)) >> 31)) & 1) == 0)) ^ (v5 - 606))))(a1, a2, a3, (v5 - 72600254) & 0x453C7F3);
}

void sub_10014F3E4()
{
}

uint64_t sub_10014F3F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)(((((a4 + 948405385) & 0x47787BF6 ^ 0xFFFFFE4D) + 9 * (a4 ^ 0x333)) * (v4 == v5)) | a4)))();
}

uint64_t sub_10014F444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(((((a6 - 533) | 0x3C8) - 1018) * ((v6 >> 3) & 1)) ^ a6)))();
}

uint64_t sub_10014F494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  v11.val[0].i64[0] = v8 & 8;
  v11.val[0].i64[1] = v8 & 8 | 1;
  v11.val[1].i64[0] = v11.val[0].i64[0] | 2;
  v11.val[1].i64[1] = (13 * (a5 ^ 0x86u) - 582) | v11.val[0].i64[0];
  v11.val[2].i64[0] = v11.val[0].i64[0] | 4;
  v11.val[2].i64[1] = v11.val[0].i64[0] | 5;
  v11.val[3].i64[0] = v11.val[0].i64[0] | 6;
  v11.val[3].i64[1] = v11.val[0].i64[0] | 7;
  *(int8x8_t *)(STACK[0x3E0] + v8 + 255) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + v11.val[0].i64[0]), *(int8x8_t *)(v5 + v11.val[0].i64[0])), *(int8x8_t *)(v6 + v11.val[0].i64[0] + 1)), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v11, (int8x16_t)xmmword_10026B2F0), (int8x8_t)0x2121212121212121));
  return ((uint64_t (*)(__n128))*(&off_1002E1F70 + ((1473 * ((v7 & 0xFFFFFFF8) - 8 == v8)) ^ a5)))((__n128)xmmword_10026B2F0);
}

void sub_10014F584()
{
}

uint64_t sub_10014F58C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((((v2 + 15125941) & 0xFF1933FD ^ ((v2 ^ 0x1BB) + 21)) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_10014F5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v9 = v6 - 19;
  int v10 = ((v6 - 19) ^ 0x4406831A) + v5;
  int v11 = v6 - 957599741;
  uint64_t v12 = (v8 - 1141276916);
  *(unsigned char *)(STACK[0x3D8] + v12) = *(unsigned char *)(v7 + ((v11 & 0x3913CFF2 ^ 0x3FD) & v12)) ^ *(unsigned char *)(v3 + ((v11 & 0x3913CFF2 ^ 0x3FD) & v12)) ^ *(unsigned char *)(((v11 & 0x3913CFF2 ^ 0x3FD) & v12) + v4 + 1) ^ (33 * ((v11 & 0xF2 ^ 0xFD) & v12)) ^ 0x18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((21 * (v8 != v10)) ^ v9)))(a1, a2, a3, 957599730);
}

void sub_10014F670()
{
}

void sub_10014F678()
{
}

uint64_t sub_10014F6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v7 + a7 - 77) ^ (a4 + 3213190043 < v8)) & 1)
                                * ((a7 + 580) ^ 0x301)) ^ a7)))();
}

uint64_t sub_10014F700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v9 = v5 < 0x4869D40F || a4 + 2687573129 + (unint64_t)((a5 + 658096243) & 0xD8C63D8E) < v6;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v9 * (((a5 - 778) | 0x10C) - 214)) ^ a5)))();
}

uint64_t sub_10014F760(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((127 * (a6 ^ 0x10B) - 847) * (a4 + 3756430965 < a1)) ^ a6)))();
}

void sub_10014F79C()
{
}

void sub_10014F8B0(_DWORD *a1)
{
  unsigned int v1 = 230600693 * (a1 ^ 0xD23C862B);
  int v2 = *a1 ^ v1;
  unsigned int v3 = ((a1[7] + v1) & 0xFFFFFFF0) - 1926684720;
  uint64_t v4 = (uint64_t)*(&off_1002E1F70
                + (((((uint64_t (*)(void, uint64_t))*(&off_1002E1F70 + v2 + 1886))(((2 * v3) & 0x1DFD7FA0) + (v3 ^ 0xEFEBFDF) - 251576271, 1867024353) == 0)* (((v2 - 1136040168) & 0x43B69FBC) - 1497)) ^ v2));
  __asm { BRAA            X8, X17 }
}

void sub_10014F9A8()
{
  *(_DWORD *)(v0 + 24) = -45013;
}

void sub_10015BDD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 176504963 * (a1 ^ 0x8AA6E91F);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10015BE68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (((*(_DWORD *)(a1 + 8) + v3 == (((v2 + 917) | 0x2A0) ^ 0x14A9A261)) * (v2 ^ 0x848)) ^ v2)))();
}

uint64_t sub_10015BEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (*(void *)(a1 + 56)) {
    BOOL v10 = *(void *)(a1 + 40) == 0xC2C3062343A3C93;
  }
  else {
    BOOL v10 = 1;
  }
  int v11 = !v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 8 * ((v11 * (((v9 - 465) ^ 0x5E4) - 178)) ^ v9)))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10015BF00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1843
                                * (((439 * (v2 ^ 0xC2)) ^ (*(_DWORD *)(a1 + 4) - v3) ^ 0xE689115D) == *(_DWORD *)(a1 + 48) + v3 - 1253782788)) ^ v2)))();
}

uint64_t sub_10015BF60(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = (v3 & 0xF ^ 0x2814018E | 0xC0E187FE) - (v3 & 0xF ^ 0x2814018E | 0x3F1E7801);
  BOOL v7 = *(_DWORD *)(a1 + 64) - v4 == 734402563 && v5 == (((v2 - 193) | 0xA4) ^ 0xA9D70ED3);
  return (*(uint64_t (**)(void))(a2 + 8 * ((1219 * v7) ^ v2)))();
}

#error "10015BFDC: too big function (funcsize=0)"

void sub_1001ACCC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  BOOL v73 = v72 == 49;
  if (v72 == 49) {
    a20 = a4;
  }
  LODWORD(STACK[0x354]) = a20;
  if (v72 == 49) {
    a21 = v71;
  }
  LODWORD(STACK[0x350]) = a21;
  int v76 = STACK[0x314];
  if (v72 == 49) {
    int v76 = v70;
  }
  LODWORD(STACK[0x348]) = v76;
  int v77 = LODWORD(STACK[0x328]) - 1207805124;
  if (v73) {
    a22 = v69;
  }
  LODWORD(STACK[0x34C]) = a22;
  int v79 = (STACK[0x4AC] & 3) + 1738501085 - ((LODWORD(STACK[0x4AC]) << (v77 ^ 0xE1)) & 2);
  int v80 = LODWORD(STACK[0x310]) ^ 0x3F3687F;
  int v81 = (((a69 + 1) & 3) + 1182176802 - ((2 * (a69 + 1)) & 4)) ^ 0x46769622 | v80;
  unsigned int v82 = ((STACK[0x2E4] & 3) - 1306575377 - 2 * (STACK[0x2E4] & 3)) ^ 0xB21F3DEF | v80;
  LODWORD(STACK[0x4B0]) = (v82 ^ 0xFFF7F75F) + 1073732604 + ((2 * v82) & 0x7FEFEEBE);
  int v83 = (LODWORD(STACK[0x2E8]) + 1) & 3 | v80;
  LODWORD(STACK[0x340]) = (v83 ^ 0xE777A66B) + 1541397981 + ((2 * v83) & 0x4EEF4CD6);
  int v84 = (LODWORD(STACK[0x2F0]) - 1) & 3 | v80;
  LODWORD(STACK[0x4C0]) = (STACK[0x2F8] & 3 | v80) + 1461125917 - ((2 * (STACK[0x2F8] & 3 | v80)) & 0x2E2E063A);
  int v85 = (LODWORD(STACK[0x304]) + 1) & 3;
  int v86 = (v85 + 120242567 - 2 * v85) ^ 0x72AC187 | v80;
  LODWORD(STACK[0x330]) = (v86 ^ 0xFFFC0BFF) + 157810349 + ((2 * v86) & 0x7FF817FE);
  int v87 = ((STACK[0x308] & 3) + 62153145 - 2 * (STACK[0x308] & 1)) ^ 0x3B461B9 | v80;
  LODWORD(STACK[0x328]) = (v87 ^ 0xFFCECEF9) + 1564212152 + ((2 * v87) & 0x7F9D9DF2);
  int v88 = (LODWORD(STACK[0x30C]) + 1) & 3;
  LODWORD(STACK[0x320]) = ((v79 ^ 0x679F6BDD | v80) ^ 0x3BEF7F5E)
                        - 18884672
                        + ((2 * (v79 ^ 0x679F6BDD | v80)) & 0x77DEFEBC);
  LODWORD(STACK[0x310]) = a19 - 849609230;
  LODWORD(STACK[0x4B8]) = v81 - ((2 * v81) & 0x3E198C) + 1075776710;
  LODWORD(STACK[0x338]) = v84 - ((2 * v84) & 0x1672) - 104105167;
  LODWORD(STACK[0x4E4]) = ((a18 + 1) & 3 | v80) - ((2 * ((a18 + 1) & 3 | v80)) & 0x29C) + 930361670;
  LODWORD(STACK[0x318]) = ((v88 - 60896685 - 2 * v88) ^ 0xFC5ECA53 | v80) - 671264608;
  JUMPOUT(0x10015E2F0);
}

_DWORD *sub_1001ACFCC@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

void sub_1001ACFF0(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1001AD0B4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = ((v8 & 0xBE9DF940 | ~(v8 | 0xBE9DF940)) ^ 0x52F8FAFC) * v2;
  memset(v8, 0, sizeof(v8));
  uint64_t v9 = v3;
  long long v10 = 0u;
  int v12 = v6 ^ 0x1D49DC7F;
  int v13 = (v1 + v4) ^ v6;
  uint64_t v14 = a1;
  uint64_t result = ((uint64_t (*)(unsigned char *))*(&off_1002E1F70 + (int)(v1 ^ 0xD007B828)))(v8);
  _DWORD *v5 = v11;
  return result;
}

uint64_t sub_1001AD1D0(uint64_t a1)
{
  unint64_t v1 = (unint64_t)&v5[qword_10031E668 - qword_10031E678];
  qword_10031E678 = 431200057 * v1 + 0x5A0759C5C119BB6BLL;
  qword_10031E668 = 431200057 * (v1 ^ 0xA5F8A63A3EE64495);
  unint64_t v2 = 941074649
     * ((((unint64_t)&v6 | 0x6B6B37162FCDE1F4) - ((unint64_t)&v6 & 0x6B6B37162FCDE1F4)) ^ 0x6AEDD0F42F052E90);
  int v9 = -804802556 - v2;
  char v3 = byte_100296850[byte_100296750[(57 * ((qword_10031E668 - qword_10031E678) ^ 0x95))] ^ 0xAB];
  BOOL v7 = (char *)&loc_1001AD118 + v2;
  uint64_t v8 = a1;
  ((void (*)(unsigned int *))*(&off_1002E1F70
                                        + ((57
                                                                         * ((qword_10031E668 - qword_10031E678) ^ 0x95)) ^ v3)
                                        + 1994))(&v6);
  return v6;
}

void sub_1001AD318(uint64_t a1)
{
  unsigned int v1 = 755310587 * ((a1 + 704913948 - 2 * (a1 & 0x2A04221C)) ^ 0x6B0879D5);
  unsigned int v2 = *(_DWORD *)(a1 + 8) - v1;
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(_DWORD *)(a1 + 48) ^ v1;
  uint64_t v7 = 0;
  int v8 = 0;
  char v6 = (v2 + 64) ^ (41 * (v2 ^ 0x55)) ^ (((unsigned int (*)(uint64_t, uint64_t, uint64_t, uint64_t *, int *))*(&off_1002E1F70 + (int)(v2 + 810)))(*(void *)(v3 - 0x7E422C649661EC57) - 0xF2AF1F3399A0E89, v4, v5, &v7, &v8) == 0);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1001AD420@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a1 - 252108704) & 0xF06DF5F ^ 0x556) * (a4 == 0)) ^ a1)))();
}

uint64_t sub_1001AD460@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 668)))();
  *(_DWORD *)(v1 + 24) = v2;
  return result;
}

void sub_1001AD9D8()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = 562267567 * ((~v0 & 0xCACA2F0 | v0 & 0xF3535D0F) ^ 0x1F365EB3);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1001ADC14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((v3 + 696) | 0x430) ^ 0x7E9) * (v2 < 1788183827)) ^ v3)))();
}

uint64_t sub_1001ADC60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 < v2 + 1015229591) * ((v2 ^ 0x34C) - 1146)) ^ v2)))();
}

uint64_t sub_1001ADC9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 == (((v2 ^ 0x3E0) + 1342) ^ v4)) * (3 * (v2 ^ 0x3E0) - 1074)) ^ v2)))();
}

uint64_t sub_1001ADCD0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (int)(((STACK[0x538] != 0) * ((a2 + 490182779) & 0xE2C867EE ^ 0x7CC)) ^ a2)))();
}

void sub_1001ADD14(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2 = (*(uint64_t (**)(unint64_t))(a1 + 8 * (((a2 - 2111550780) | 0x400220B1) + 1037669755)))(STACK[0x538]);
  sub_1002359CC(v2, v3, v4, v5, v6, v7, 0);
}

uint64_t sub_1001B00A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v10 = v8 & 0xB0B59FAF;
  STACK[0x6F8] = 0x73FCE2C07DC88EB7;
  LODWORD(STACK[0x878]) = 867352061;
  BOOL v11 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (int)(v10 ^ 0xB09)))(((((v10 - 390) ^ 0x5F4) + 1006189436) ^ (v9 - 1715765038) & 0xFFFFFFF0)+ ((2 * (v9 - 1715765038)) & 0x77F27F80)- 1006190526, 1750171035) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)((21 * v11) ^ v10)))();
}

uint64_t sub_1001B0160(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LODWORD(STACK[0x570]) = v9;
  STACK[0x578] = a1;
  BOOL v11 = (uint64_t (*)(void))*(&off_1002E1F70
                           + ((((*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8 * (v8 + 979)))(v10, 771563492) == 0)
                             * (v8 - 1098)) | v8));
  LODWORD(STACK[0x4D8]) = -42028;
  return v11();
}

uint64_t sub_1001B01C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)(((((v4 == 1715765038) ^ (((v3 - 37) ^ 0x85) + 1)) & 1)
                                     * (((v3 + 475) ^ 0xD4464739) + 733593433)) ^ (v3 + 475))))();
}

uint64_t sub_1001B0240@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  int v7 = 9 * (v4 ^ v3);
  *(unsigned char *)(v6 + a2 + 200571139 + ((unint64_t)(v2 > 0xBF47903) << 32)) = v7
                                                                               - 121
                                                                               + *(unsigned char *)(STACK[0x518]
                                                                                          + a2
                                                                                          + 200571139
                                                                                          + ((unint64_t)(v2 > 0xBF47903) << 32))
                                                                               - 77;
  BOOL v8 = (v5 + 486501397) > 0x8343EB44;
  if (v5 + 486501397 < (v7 - 2092701662)) {
    BOOL v8 = 1;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((2 * v8) | (16 * v8) | v7)))();
}

void sub_1001B02E8()
{
}

uint64_t sub_1001B02F0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  LOBYTE(STACK[0xAA0]) = LOBYTE(STACK[0xA90]) ^ 0xE9;
  LOBYTE(STACK[0xAA1]) = LOBYTE(STACK[0xA91]) ^ 0xE9;
  LOBYTE(STACK[0xAA2]) = LOBYTE(STACK[0xA92]) ^ 0xE9;
  LOBYTE(STACK[0xAA3]) = LOBYTE(STACK[0xA93]) ^ 0xE9;
  LOBYTE(STACK[0xAA4]) = LOBYTE(STACK[0xA94]) ^ 0xE9;
  LOBYTE(STACK[0xAA5]) = LOBYTE(STACK[0xA95]) ^ 0xE9;
  LOBYTE(STACK[0xAA6]) = LOBYTE(STACK[0xA96]) ^ (((a2 - 18) | 0x89) + 62);
  LOBYTE(STACK[0xAA7]) = LOBYTE(STACK[0xA97]) ^ 0xE9;
  LOBYTE(STACK[0xAA8]) = LOBYTE(STACK[0xA98]) ^ 0xE9;
  LOBYTE(STACK[0xAA9]) = LOBYTE(STACK[0xA99]) ^ 0xE9;
  LOBYTE(STACK[0xAAA]) = LOBYTE(STACK[0xA9A]) ^ 0xE9;
  LOBYTE(STACK[0xAAB]) = LOBYTE(STACK[0xA9B]) ^ 0xE9;
  LOBYTE(STACK[0xAAC]) = LOBYTE(STACK[0xA9C]) ^ 0xE9;
  LOBYTE(STACK[0xAAD]) = LOBYTE(STACK[0xA9D]) ^ 0xE9;
  LOBYTE(STACK[0xAAE]) = LOBYTE(STACK[0xA9E]) ^ 0xE9;
  LOBYTE(STACK[0xAAF]) = LOBYTE(STACK[0xA9F]) ^ 0xE9;
  LODWORD(STACK[0xB68]) = -932955626;
  STACK[0xB48] = 0xDED30A4024145F56;
  STACK[0xB50] = 0x1482B5319C0A3DB9;
  STACK[0xB58] = 0xEB7D4ACE63F5C246;
  LODWORD(STACK[0xB60]) = 949878600;
  LODWORD(STACK[0xB64]) = 1804694436;
  unint64_t v2 = STACK[0x870];
  int v3 = STACK[0x8C4];
  unint64_t v4 = STACK[0x518];
  STACK[0x7F8] = *(void *)(a1 + 8 * a2);
  STACK[0x978] = v2;
  LODWORD(STACK[0x7F4]) = v3;
  STACK[0x880] = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((1132
                                     * (v3
                                      - 1872156399
                                      + ((((a2 + 750) | 0x89) - 2034619574) & 0x7945D79B)
                                      + ((2 * *(_DWORD *)(v2 + 68)) & 0x4A)
                                      - 1644734133
                                      + (*(_DWORD *)(v2 + 68) & 0x3F ^ (((((a2 + 750) | 0x89) - 358060991) & 0x155797BBu)
                                                                      + 1801121789)) < 0xFFFFFFC0)) ^ ((a2 + 750) | 0x89))))();
}

uint64_t sub_1001B0440@<X0>(int a1@<W1>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((613 * (((a3 - ((a1 ^ 0x3EE) - 1223710037)) | ((a1 ^ 0x3EE) - 1223710037 - a3)) >= 0)) ^ ((a1 ^ 0x48F0566C) + (a1 ^ 0x3EE) - 1223710037))))();
}

uint64_t sub_1001B0498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (int)(((((2 * (*(_DWORD *)(v9 + 96) & 2 ^ 0xA444A4A)) | 0x879F537A) - (*(_DWORD *)(v9 + 96) & 2 ^ 0xA444A4A) != -1923379790) * (((v8 ^ 0x32D) + 840424249) & 0xCDE827E9 ^ 0x7BC)) ^ v8 ^ 0x32D)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B0510@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((31
                                * ((((__int16)LODWORD(STACK[0x568]) < -8974) ^ (-17
                                                                                               * ((a1 + 35) ^ 0xAA)
                                                                                               - 1)) & 1)) ^ (a1 - 343))))();
}

uint64_t sub_1001B055C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((592 * (v8 == (unsigned __int16)(a7 + ((8 * a7) ^ 0xFBBA) + 458))) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294924368);
}

uint64_t sub_1001B0598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x8E8] = (unint64_t)&STACK[0x58405A597B2429E8];
  STACK[0x788] = 208;
  uint64_t v9 = *(void *)(v8 + 104);
  STACK[0x7E8] = v8 + 104;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((53 * (v9 != 0)) ^ v6 ^ 0x2A68)))(a1, a2, a3, a4, a5, a6, 4294924366);
}

uint64_t sub_1001B05F4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((21
                               * (*(_DWORD *)(v1 + 112) >= ((a1 - 1029185241) & 0x3D581EFA ^ 0x453)
                                                         + 206
                                                         + ((a1 - 1029185241) & 0x3D581EFA ^ 0x433)
                                                         + 1494274206)) ^ (a1 - 1029185241) & 0x3D581EFA ^ 0x453u)))();
}

uint64_t sub_1001B065C@<X0>(int a1@<W8>)
{
  BOOL v3 = a1 == ((v1 + ((v2 + 1410359155) & 0xABEFA7AB) - 1024) ^ (v2 + 1039));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((8 * v3) | (32 * v3)) ^ v2)))();
}

uint64_t sub_1001B06B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4 = STACK[0x570];
  *(unsigned char *)(v3 + a2 + 13274046 - 0xC2C3062343A3C93) = -37;
  unsigned int v5 = (((v2 - 1672) | 0x45) ^ 0x1BBB9120) + 13274046;
  int v6 = ((v4 - 293036777) < 0x1C861C02) ^ (v5 < 0x1C861C02);
  BOOL v7 = v5 < v4 - 293036777;
  if (v6) {
    BOOL v7 = (v4 - 293036777) < 0x1C861C02;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v7 * ((v2 ^ 0x683) - 270)) ^ (v2 - 1603))))();
}

uint64_t sub_1001B0774@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  BOOL v9 = v7 < v4;
  *(unsigned char *)(v8 + (v3 + 1) + a2 + ((unint64_t)(v3 + 1 < v2) << 32)) = 91;
  if (v9 == v3 + v5 < v4) {
    BOOL v9 = v3 + v5 < v7;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v9 * ((v6 ^ 0x4E) - 270)) ^ v6)))();
}

uint64_t sub_1001B07D8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 64);
  int v8 = 1448877107 * ((2 * ((v6 - 192) & 0x6AB54B10) - (v6 - 192) + 357217515) ^ 0x6471A9C1);
  int v9 = *(_DWORD *)(v2 + 72) - v8 - 1607903256;
  *(_DWORD *)(v6 - 128) = v3 - v8 + 465;
  *(_DWORD *)(v6 - 192) = v9;
  *(_DWORD *)(v6 - 188) = v8 + 1149012029;
  *(_DWORD *)(v6 - 160) = v8 ^ 0x323A3323;
  *(void *)(v6 - 152) = v2 + 0x57414C243E4E482;
  *(void *)(v6 - 144) = v2 + 0x3E93D6427590D1F4;
  *(void *)(v6 - 120) = v2 + 0x4E52AB80F767C057;
  *(_DWORD *)(v6 - 112) = v8 + 407829994;
  *(void *)(v6 - 176) = v4;
  *(void *)(v6 - 168) = v7;
  *(void *)(v6 - 136) = v5;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v3 ^ 0x97F)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((*(_DWORD *)(v6 - 184) != 0) * (((v3 - 1314017877) & 0x4E5253FD) - 622)) ^ v3)))(v10);
}

uint64_t sub_1001B0910()
{
  int v3 = v2 + 1236;
  (*(void (**)(uint64_t))(v0 + 8 * (v3 + 134)))(v1);
  uint64_t v4 = ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + (v3 ^ 0xF86)))(STACK[0x578]);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v3 - 1538))(v4);
}

uint64_t sub_1001B0BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8 * (v2 + 1839)))(16, 2270204515);
  STACK[0x8B8] = v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v3 == 0) * ((v2 + 176) ^ 0x68)) ^ v2)))();
}

uint64_t sub_1001B0C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (int)(((((v9 - 94) ^ 0xFFFFFA5B) + ((v9 - 94) | 0x410)) * (v8 != 0)) ^ v9)))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_1001B0C58(unsigned __int16 a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(uint64_t (**)(void))(a8
                           + 8
                           * ((1669
                             * (a1 == (unsigned __int16)(49 * ((a3 - 1637) ^ 0x16B) + ((a3 - 32699) & 0x7FBA) - 12938))) ^ (a3 - 1637)));
  LODWORD(STACK[0x568]) = a2;
  return v8();
}

uint64_t sub_1001B0CB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((726
                                * ((unsigned __int16)(v8 + ((v9 + 76) ^ 0xA0A2) - ((2 * (v9 + 76)) & 0xBEBA) + 13996) < (unsigned __int16)(((11 * (a3 ^ 0x7CC)) ^ 0xFFFB) + ((a3 - 16866) & 0x3E7F)))) ^ (a3 - 500))))();
}

uint64_t sub_1001B0D48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = ((v11 + ((a1 - v10 - 1606392652) & 0x2A2CEFE9) - 2036) & (2 * (v13 + 59510)))
      + ((unsigned __int16)(v13 - 6026) ^ 0x7DF7FBD9u)
      - 638678283;
  unint64_t v15 = STACK[0x530] + v9 + ((v14 + 0x19A31ED87B88CCCCLL) | ((unint64_t)(v14 < 0x57E686CD) << 32));
  __int16 v16 = (((*(unsigned __int8 *)v15 - ((2 * *(unsigned __int8 *)v15) & 0x4A)) << 8) + 9472) ^ 0x2500;
  LOWORD(v15) = (v16 - ((2 * v16) & 0x6E00) + 14230) ^ 0x3796 | (*(unsigned __int8 *)(v15 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v15 + 1)) & 0x9A)
                                                               + 5453) ^ 0x154D;
  LODWORD(v15) = (unsigned __int16)((v15 - ((2 * v15) & 0xB9A4) - 9006) ^ v12);
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((49
                                * ((v8 | ((v8 < 0x28AFu) << 16)) - 880719015 < ((v11 + 1904) & (2 * v15))
                                                                                              + (v15 ^ 0xADEDFFB7)
                                                                                              + 496202836)) | a1)))();
}

uint64_t sub_1001B0EA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                                          + (((*(char *)(STACK[0x530] + (v6 - 2113403865)) < (char)(v5 + a3 - 74))
                                            * (((v5 + a3 + 768) ^ 0x6B4) - 448)) ^ (v5 + a3 + 768))))((a5 - 9002));
}

uint64_t sub_1001B0F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((a6 == (a7 + 9)) * (a7 ^ 0x68A)) ^ a7)))();
}

uint64_t sub_1001B0F34(uint64_t a1, unsigned __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((278 * (a2 == ((unsigned __int16)(a7 - 279) ^ 0xDC23))) ^ (a7 - 279))))();
}

uint64_t sub_1001B0F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  STACK[0x560] = a4 + 3;
  return sub_1001B0CB4(a1, a2, a1 ^ 0x749, a4, a5, a6, a7, a8);
}

uint64_t sub_1001B0F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a8
                                                             + 8
                                                             * (a5 ^ 0x1FA ^ (1019
                                                                            * ((((a6 - a5) | (a5 - a6)) & 0x80) == 0)))))(a1, a2, (a5 - 960757765) & 0x394407AA);
}

uint64_t sub_1001B0FC8(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  STACK[0x570] = a4 + 3;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((((a1 & ((a3 - 10930) ^ a1) | (a1 - (a3 - 10930)) & ~((a3 - 10930) ^ a1)) & 0x8000) == 0)
                                * ((a3 + 718852951) & 0x552727B3 ^ 0x208)) ^ (a3 - 136))))();
}

uint64_t sub_1001B102C(unsigned __int16 a1, int a2, uint64_t a3, int a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int16 v8 = *(uint64_t (**)(void))(a8 + 8 * (((a1 == (unsigned __int16)((a4 ^ 0x51B) + a5)) * ((a4 + 1269) ^ 0x3AA)) ^ a4));
  LODWORD(STACK[0x568]) = a2;
  return v8();
}

uint64_t sub_1001B106C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v13 = v11 ^ 0x470;
  uint64_t v14 = (unsigned char *)((v12 | ((unint64_t)(v12 < v10 + 16) << 32)) + v9 + 0x13C33699AE49CD7CLL);
  *a1 = v14[(5 * (((v13 - 1104) | 0x28) ^ 0x10Du)) ^ 0xEC3CC9660339FE46];
  v14 -= 0x13C33699FCC60296uLL;
  a1[1] = *v14;
  a1[2] = v14[1];
  a1[3] = v14[2];
  a1[4] = v14[3];
  a1[5] = v14[4];
  a1[6] = v14[5];
  a1[7] = v14[6];
  a1[8] = v14[7];
  a1[9] = v14[8];
  a1[10] = v14[9];
  a1[11] = v14[10];
  a1[12] = v14[11];
  a1[13] = v14[12];
  a1[14] = v14[13];
  a1[15] = v14[14];
  LOWORD(STACK[0x816]) = 172;
  uint64_t v15 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (v13 + 591)))(*(_DWORD *)(v8 + 56) ^ 0xB3B7B663, 3461793785);
  STACK[0x688] = v15;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((978 * (v15 == 0)) ^ v13)))();
}

uint64_t sub_1001B11B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)((108
                                     * ((*(_DWORD *)(v8 + 56) ^ v10 ^ (5 * (v9 ^ 0x2A7) - 0x109B0060012007B8))
                                      + ((2 * (*(_DWORD *)(v8 + 56) ^ v10)) & 0x1FDBFFFE0)
                                      + 0x109B006038837114 != (v9 ^ 0x3763722BLL))) ^ v9)))();
}

uint64_t sub_1001B1270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unint64_t a3@<X8>)
{
  BOOL v9 = v5 < a3;
  *(unsigned char *)(v7 + a1 - 0xE6557886D2875E7) = *(unsigned char *)(v4
                                                       + ((v3 + 1156240564) & 0xBB152FBE ^ 0xDC85EDAD9671E7EDLL)
                                                       + v6)
                                            - 83;
  if (v9 == v8 - 0x5009BD05CA8038B2 < a3) {
    BOOL v9 = v8 - 0x5009BD05CA8038B2 < v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((127 * !v9) ^ v3)))();
}

uint64_t sub_1001B1320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = ((v8 + 18950) & 0xAFF7 ^ 0x61E0 ^ (2 * *(_DWORD *)(v9 + 56)) & 0xF36E)
                       + (*(_DWORD *)(v9 + 56) ^ 0xCFD4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (int)(((((((v8 + 1401047558) & 0xAC7DAFF7) - 94) ^ 0xFFFFFA5B) + ((((v8 + 1401047558) & 0xAC7DAFF7) - 94) | 0x410)) * (v10 != 0)) ^ (v8 + 1401047558) & 0xAC7DAFF7)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B1328@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + a2 + 898292060 - 0xC2C3062343A3C93) = -37;
  BOOL v5 = (v3 + 2077778436) > 0xD1C3E1F4;
  if ((v3 + 2077778436) < 0xD1C3E1F3) {
    BOOL v5 = 1;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((27 * (((((v2 + 5) & 0x5F) + 66) ^ v5) & 1)) ^ (v2 - 1435))))();
}

uint64_t sub_1001B13F8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  BOOL v11 = v4 < v5;
  uint64_t v12 = (v3 + 1);
  *(unsigned char *)(a2 + v10 + v12 + ((unint64_t)(v12 < v2) << 32) + v9 - 847) = 91;
  if (v11 == (int)v12 + v6 < v5) {
    BOOL v11 = (int)v12 + v6 < v4;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v11 * v8) ^ v7)))();
}

uint64_t sub_1001B1460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = STACK[0x580] + 0x3E93D6427590D1F4;
  unint64_t v9 = STACK[0x580] + 0x4E52AB80F767C057;
  unint64_t v10 = STACK[0x580] + 0x57414C243E4E482;
  uint64_t v11 = *(void *)(STACK[0x580] + 64);
  int v12 = *(_DWORD *)(STACK[0x580] + 72);
  int v13 = 1448877107 * (((v7 - 192) & 0x8D583415 | ~((v7 - 192) | 0x8D583415)) ^ 0x39CD6C0);
  *(_DWORD *)(v7 - 160) = v13 ^ 0x323A3323;
  *(_DWORD *)(v7 - 112) = v13 + 407829994;
  *(void *)(v7 - 144) = v8;
  *(void *)(v7 - 136) = a6;
  *(void *)(v7 - 152) = v10;
  *(_DWORD *)(v7 - 192) = ((v6 - 491629425) & 0x1D4DA9BF ^ 0xA0295676) - v13 + v12;
  *(_DWORD *)(v7 - 188) = v13 + 1149012029;
  *(_DWORD *)(v7 - 128) = v6 - v13 - 83;
  *(void *)(v7 - 120) = v9;
  *(void *)(v7 - 176) = a5;
  *(void *)(v7 - 168) = v11;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v6 ^ 0xB1B)))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (((*(_DWORD *)(v7 - 184) == 0) * (v6 - 816)) ^ v6)))(v14);
}

uint64_t sub_1001B15A0()
{
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 8 * (v5 ^ 0x918)))(v1, 0, v2, -1);
  unint64_t v7 = STACK[0x660];
  int v8 = 176504963 * ((2 * ((v6 - 192) & 0x61636310) - (v6 - 192) + 513580264) ^ 0x943A75F7);
  int v9 = LODWORD(STACK[0x96C]) - v8 - 520711526;
  *(_DWORD *)(v6 - 188) = v8 + v3 - ((2 * v3 + 1411973154) & 0xCD1228E0) + v5 - 1868721429;
  *(_DWORD *)(v6 - 184) = v9;
  *(void *)(v6 - 152) = v4;
  LOBYTE(STACK[0x15D4]) = -125 * ((2 * ((v6 + 64) & 0x10) - (v6 + 64) - 24) ^ 0xF7) + 49;
  *(_DWORD *)(v6 - 128) = v8 + 734402563;
  *(void *)(v6 - 176) = &unk_100284310;
  *(void *)(v6 - 168) = v7;
  *(_DWORD *)(v6 - 160) = v5 - v8 + 903;
  *(void *)(v6 - 136) = v1;
  *(_DWORD *)(v6 - 144) = v3 - v8 - 187714283;
  uint64_t v10 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v5 + 1670))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((2017 * (*(_DWORD *)(v6 - 192) == 0)) ^ v5)))(v10);
}

uint64_t sub_1001B16F0()
{
  STACK[0x948] = v1;
  LODWORD(STACK[0x7DC]) = v3 - 213434859;
  (*(void (**)(unint64_t))(v0 + 8 * (v5 ^ 0xF86u)))(STACK[0x660] - 0x73FCE2C07DC88EB7);
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v5 + 134)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((2584 * (v4 == ((v5 - 1192) | 0x53) - 851)) ^ (v5 - 1357))))(v6);
}

uint64_t sub_1001B212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xB76)))(16, 2751337138);
  STACK[0x958] = v4;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v4 == 0) * ((((v3 - 1662247773) & 0x6313E2CF) + 1) ^ 0x22D)) ^ v3)))();
}

uint64_t sub_1001B219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((22
                                * (a1
                                 - STACK[0x948]
                                 - (LODWORD(STACK[0x7DC]) - 23499672)
                                 - ((unint64_t)((LODWORD(STACK[0x7DC]) - 23499672) < 0x47CC2A7C) << 32)
                                 + 1204562556 >= (unint64_t)(v8 ^ 0x54) - 642)) ^ v8)))();
}

void sub_1001B2258(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  int8x16_t v5 = *(int8x16_t *)(v2 + v3 + a2 + ((v4 + 2047226165) & 0x85F9CEFF));
  v6.i64[0] = 0xF7F7F7F7F7F7F7F7;
  v6.i64[1] = 0xF7F7F7F7F7F7F7F7;
  int8x16_t v7 = veorq_s8(v5, v6);
  v8.i64[0] = 0xEEEEEEEEEEEEEEEELL;
  v8.i64[1] = 0xEEEEEEEEEEEEEEEELL;
  int8x16_t v9 = vandq_s8(vaddq_s8(v5, v5), v8);
  v8.i64[0] = 0x3C3C3C3C3C3C3C3CLL;
  v8.i64[1] = 0x3C3C3C3C3C3C3C3CLL;
  *a1 = vaddq_s8(vaddq_s8(v7, v8), v9);
  JUMPOUT(0x1001B2354);
}

uint64_t sub_1001B22AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a1 + (((v8 - 577) | 0x242) ^ 0xC3BBFC7532AF690ALL) + v6) = (*(unsigned char *)(a3 + v5 + v3 + 711) ^ 0xF7)
                                                                      + ((2 * *(unsigned char *)(a3 + v5 + v3 + 711)) & 0xEF)
                                                                      + 60;
  return (*(uint64_t (**)(void))(a2 + 8 * ((1505 * (v7 + 1 == v4 + 16)) ^ v8)))();
}

uint64_t sub_1001B232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t))(a3 + 8 * (v4 ^ 0xF86)))(v3);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((STACK[0x948] != 0) * (((v4 - 1249) ^ 0x38D) + 148)) ^ (v4 - 1249))))();
}

uint64_t sub_1001B2380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  int v9 = 33 * (v8 ^ 0x2CD);
  uint64_t v10 = *(uint64_t (**)(void))(a8 + 8 * (v8 ^ 0xAE9));
  uint64_t v12 = v10();
  STACK[0x948] = 0;
  LODWORD(STACK[0x7DC]) = 1228062212;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((599 * (a7 == ((v9 - 880746827) & 0x347F2539) - 1337)) ^ v9)))(v12);
}

uint64_t sub_1001B2400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((599 * (a7 == ((v8 - 880746827) & 0x347F2539) - 1337)) ^ v8)))();
}

uint64_t sub_1001B2440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * (int)((((STACK[0x818] | STACK[0x658] | STACK[0x958]) == 0) * (((91 * (a8 ^ 0x53E)) ^ 0xFFFFFCB3) + a8 - 915)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B2494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x816]) = 159;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)(((LODWORD(STACK[0x904]) == (((v8 - 125) | 0x102) ^ 0x26E08589))
                                     * ((v8 + 1624378465) & 0x9F2DF3AD ^ 0x27D)) ^ v8)))();
}

uint64_t sub_1001B24FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8
                                   * (((v9 == v10 + 3 * (v8 ^ 0x3D6) - 636) * (((v8 - 386) | 0x203) ^ 0x385)) ^ v8)))();
}

uint64_t sub_1001B2544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = 29 * (v8 ^ 0x263);
  LOWORD(STACK[0x816]) = ((2 * (v9 + 17167)) & 0x7FEE) + v10 + ((v11 - 908) ^ (v9 + 17167)) + 12;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((LODWORD(STACK[0x7BC]) == ((v11 - 569) ^ 0x7A3F012D)) * (((v11 - 105) | 0x85) ^ 0x383)) | v11)))();
}

uint64_t sub_1001B2648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (*(uint64_t (**)(void, uint64_t))(a8 + 8 * (v8 ^ 0x96F)))((unsigned __int16)(v9 + v8 + 92 - 578), 564493012);
  STACK[0x8B8] = v10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((222 * (((v8 - 75) ^ (v10 == 0)) & 1)) ^ v8)))();
}

uint64_t sub_1001B26F0(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = 1;
  int v10 = (unsigned __int16)(v9 - 159) >> ((v8 & 0xAD) + 91);
  a1[1] = (v10 - ((2 * v10) & 0xF8) + 124) ^ ((((v8 & 0xAD) - 126) & 0xDF) + 109);
  a1[2] = (v9 + (~(2 * v9 - 62) | 0x1B) + 84) ^ 0xF2;
  return (*(uint64_t (**)(void))(a8 + 8 * (int)((493 * (LODWORD(STACK[0x904]) == 652248715)) ^ v8 & 0xD2CEEFAD)))();
}

uint64_t sub_1001B2798@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((((a2 - 1357) ^ 0xFD) - 164) * (v2 != v3)) ^ (a2 - 1357))))();
}

uint64_t sub_1001B27D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (int)(((((v8 + 1266256471) & 0xB486768F) - 587) * (v9 == v10)) ^ v8)))();
}

uint64_t sub_1001B2820(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  a1[3] = 4;
  __int16 v10 = LOWORD(STACK[0x904]) - ((2 * LOWORD(STACK[0x904]) + 29418) & 0x766E) - 19284;
  a1[4] = (v8 - 103) ^ HIBYTE(v10) ^ 0x93;
  a1[5] = v10 ^ 0x37;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((108
                                * ((LODWORD(STACK[0x904]) | ((unint64_t)(LODWORD(STACK[0x904]) < ((5 * (v8 ^ 0x48D)) ^ (v9 - 1418))) << 32)) == 652248715)) ^ v8)))();
}

uint64_t sub_1001B28F8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((a2 + 1057354185) & 0xC0FA07EE ^ 0xFD) - 164) * (v2 != v3)) ^ (a2 + 1057354185) & 0xC0FA07EE)))();
}

uint64_t sub_1001B29FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 + v3 - 3)) = 1;
  int v6 = v5 - (((v5 << (((2 * v4) ^ 0x38) + 13)) + 1566) & 0x660E) + 30230;
  uint64_t v7 = (unsigned char *)(((a3 - 380576369) | ((unint64_t)((a3 - 380576369) < 0x3EF18C4D) << 32))
               + a1
               - 1056017485);
  *uint64_t v7 = BYTE1(v6) ^ 0x33;
  v7[1] = v6 ^ 7;
  return (*(uint64_t (**)(void))(a2 + 8 * (v4 ^ (3243 * ((unint64_t)v5 - 1010547954 < 0xFFFFFFFFECF6ACB2)))))();
}

uint64_t sub_1001B2AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70
                                                                      + (((v6
                                                                         + (unint64_t)((a6 - 1488050489) & 0x58B1D77D) < 8)
                                                                        * (((a6 - 1513) | 0x440) ^ 0x9B1)) ^ a6)))(a1, 0x592D6D089F395208, 0x60DA7C9A38CA41A8, 0x4E4E21E9419924C0);
}

uint64_t sub_1001B2B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((93
                               * ((((unint64_t)(a1 - v9 + v8) < 0x10) ^ (((a8 + 18) ^ 0xD3) + 1)) & 1)) ^ a8)))();
}

uint64_t sub_1001B2BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((((a5 + 16) ^ 0x239) - 1388) * (v5 < 0x10)) | a5)))();
}

uint64_t sub_1001B2C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v11 = (int8x8_t *)(a1 + a6 + v8);
  int8x8_t *v11 = vadd_s8(*(int8x8_t *)(v10 + a6), (int8x8_t)0xCDCDCDCDCDCDCDCDLL);
  return ((uint64_t (*)(uint64_t, int8x8_t *, uint64_t))*(&off_1002E1F70
                                                                + ((229
                                                                  * (((a6 - (v9 & 0xFFFFFFFFFFFFFFF8) == -8) ^ ((a8 ^ 0xE5) - 1)) & 1)) ^ a8 ^ 0xE5)))(a1, &v11[1], v10 + a6 + 8);
}

void sub_1001B2C8C()
{
}

void sub_1001B2C94()
{
  STACK[0x948] = STACK[0x578];
  LODWORD(STACK[0x7DC]) = v0 + 221871686;
  JUMPOUT(0x1001B2CB0);
}

uint64_t sub_1001B2D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xC28)))(16, 49968828);
  STACK[0x658] = v4;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v4 == 0) * (v3 - 684 + ((v3 - 953) | 0x60A) - 1960)) ^ v3)))();
}

uint64_t sub_1001B2D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (((((v8 - 91) | 0xA0) ^ (4 * v8) ^ 0x22C ^ 0x6F9) * (v9 == 0)) ^ v8)))(a1, a2, a3, a4, a5, a6, 4294925268);
}

uint64_t sub_1001B2DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(unint64_t))(a3 + 8 * (v4 ^ 0xF86)))(STACK[0x578]);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)(((((((v4 + 745758289) & 0xD38C9B67) - 91) | 0xA0) ^ (4 * ((v4 + 745758289) & 0xD38C9B67)) ^ 0x22C ^ 0x6F9)
                                                  * (v3 == 0)) ^ (v4 + 745758289) & 0xD38C9B67)))(v5);
}

uint64_t sub_1001B2E64@<X0>(int a1@<W6>, uint64_t a2@<X7>, int a3@<W8>)
{
  int v6 = a3 - 1960;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (a3 + 134)))(v4);
  STACK[0x948] = 0;
  LODWORD(STACK[0x7DC]) = v3;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((v6 + 1357) ^ v6 ^ (685
                                                                * (((((a1 - v6) | (v6 - a1)) >> (((v6 - 66) & 0xE9) + 119)) & 1) == 0)))))(v7);
}

uint64_t sub_1001B2E98()
{
  (*(void (**)(unint64_t))(v0 + 8 * (v1 + 1603)))(STACK[0x840] - 0x73FCE2C07DC88EB7);
  uint64_t v4 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v1 ^ 0x9C5)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((v3 != ((v1 + 219031043) & 0xF2F1DFB9) - 1960)
                                             * (((v1 - 1509745422) & 0x59FCE57E) - 117)) ^ v1)))(v4);
}

void sub_1001B2F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 ^ 0xF86)))(v4);
  sub_1002359CC(v6, v7, v8, v9, v10, v11, v5);
}

uint64_t sub_1001B2F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(unint64_t))(a3 + 8 * ((305 * (v3 == 1101)) ^ v3)))(STACK[0x6B0]);
}

void sub_1001B2FC8()
{
}

uint64_t sub_1001B2FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = (-22 * ((v4 + 38) ^ 0xFFFFFF86)) ^ ((v3 & 0xF0) >> 4) ^ 0xFFFFFFA9 | v3 ^ 0x16;
  int v6 = v5 - (((v4 - 1302508718) & 0x4DA2B7F9 ^ 0x24) & (2 * v5)) - 58;
  unsigned int v7 = ((v6 & 0xFC) >> 2) ^ 0x31 | v6 ^ 0xFFFFFFC6;
  unsigned int v8 = 1 - (v7 | ((1 - v7) >> 1));
  uint64_t v10 = (*(uint64_t (**)(void))(a3 + 8 * (v4 + 978)))();
  STACK[0x6B0] = 0;
  LODWORD(STACK[0x790]) = 984789230;
  return (*(uint64_t (**)(uint64_t))(a3 + 8 * ((7 * ((v8 & 1) == 0)) ^ (v4 + 38))))(v10);
}

void sub_1001B30AC()
{
}

uint64_t sub_1001B3134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((a1
                                 - ((v8 + 565145905)
                                  + v10)
                                 - ((unint64_t)(v8 + 565145905 < (v9 + 1793206503)) << 32)
                                 + 1793208133 < 0x10)
                                * ((v9 - 784) ^ 0x37E)) ^ v9)))();
}

uint64_t sub_1001B31F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v14 = *(unsigned __int8 *)(v8 + v11 + a3 + 1960);
  *(unsigned char *)(v12 + a1 - 0x5E45D7E57CF9CC69) = v14 - ((v14 << ((70 * (v10 ^ 0x52)) ^ 0xA9)) & 0xD2) - 23;
  return (*(uint64_t (**)(void))(a8 + 8 * ((28 * (v13 + 1 == v9 + 16)) ^ v10)))();
}

void sub_1001B3274()
{
  LODWORD(STACK[0x7BC]) = v0 + 16;
  JUMPOUT(0x1001B2E68);
}

uint64_t sub_1001B332C@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((((v2 ^ 0x61F) - 253) * (a1 == v1 + 32)) ^ v2)))();
}

uint64_t sub_1001B3368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (STACK[0x518]) {
    BOOL v5 = STACK[0x570] == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = !v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((((((v4 ^ 0x49A) + 1958) ^ 0x78F) + 4 * (v4 ^ 0x49A)) * v6) ^ v4)))();
}

void sub_1001B33B0(uint64_t a1@<X3>, int a2@<W8>)
{
  STACK[0x860] = (unint64_t)&STACK[0xAF8];
  STACK[0x998] = (unint64_t)&STACK[0xAB4];
  int v2 = (unsigned char *)STACK[0x570];
  LOBYTE(STACK[0xA90]) = *(unsigned char *)STACK[0x570];
  LOBYTE(STACK[0xA91]) = v2[1];
  LOBYTE(STACK[0xA92]) = v2[2];
  LOBYTE(STACK[0xA93]) = v2[3];
  LOBYTE(STACK[0xA94]) = v2[4];
  LOBYTE(STACK[0xA95]) = v2[5];
  LOBYTE(STACK[0xA96]) = v2[6];
  LOBYTE(STACK[0xA97]) = v2[7];
  LOBYTE(STACK[0xA98]) = v2[8];
  LOBYTE(STACK[0xA99]) = v2[9];
  LOBYTE(STACK[0xA9A]) = v2[10];
  LOBYTE(STACK[0xA9B]) = v2[11];
  LOBYTE(STACK[0xA9C]) = v2[12];
  LOBYTE(STACK[0xA9D]) = v2[13];
  LOBYTE(STACK[0xA9E]) = v2[14];
  LOBYTE(STACK[0xA9F]) = v2[15];
  LODWORD(STACK[0xB58]) = -932955626;
  STACK[0xB38] = 0xDED30A4024145F56;
  STACK[0xB40] = 0x1482B5319C0A3DB9;
  STACK[0xB48] = 0xEB7D4ACE63F5C246;
  LODWORD(STACK[0xB50]) = 949878600;
  LODWORD(STACK[0xB54]) = 1804694436;
  STACK[0x7F8] = *(void *)(a1 + 8 * a2);
  JUMPOUT(0x1001FE868);
}

uint64_t sub_1001B34FC()
{
  v4.i64[0] = 0xCDCDCDCDCDCDCDCDLL;
  v4.i64[1] = 0xCDCDCDCDCDCDCDCDLL;
  int8x16_t *v0 = vaddq_s8(*v3, v4);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((1586 * ((v2 ^ 0x7B8) == (v1 & 0xFFFFFFFFFFFFFFF0))) ^ (v2 - 993))))();
}

uint64_t sub_1001B3554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((((7 * (v7 ^ 0x6CC)) ^ 0x6E3 ^ (88 * (v7 ^ 0x7D3))) * (v6 == a6)) ^ v7)))();
}

uint64_t sub_1001B35AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)(((((7 * (a5 ^ 0x15B) + 1266256471) & 0xB486768F) - 587) * (v5 == v6)) ^ (7 * (a5 ^ 0x15B)))))();
}

uint64_t sub_1001B3620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (((v5 + v4) | 0x120) ^ (v3 - 95)) + a3) = 2;
  int v7 = (unsigned char *)(((a3 - 1414784038 + v5 + 1604372593) | ((unint64_t)(a3 - 1414784038 + v5 + 1604372593 < 0x14CCD1C) << 32))
               + a1
               - 21810460);
  *int v7 = BYTE1(v6);
  v7[1] = v6 ^ 0x67;
  uint64_t v8 = (v6 ^ 0x7ABBD1BB9DC0F69CLL) - 0x7ABBD1BB47A0BCE8 + ((2 * (v6 ^ 0x7A3F0067)) & 0x1CFFFEDF6);
  return (*(uint64_t (**)(void))(a2
                              + 8 * (int)((642 * (((v8 - v5) | ((unint64_t)v5 - v8)) >> 63)) ^ (v5 + v4 + 288))))();
}

uint64_t sub_1001B3768@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v7 + a2 - 0x1FC001661BF5F27ELL) = *(unsigned char *)((v4 ^ 0x320u) + v6 + v9 - 0x428925971CC71D7CLL) ^ 0xE9;
  BOOL v10 = v2 < v3;
  if (v10 == v8 - 0x6C8FBACB4F9D55DLL < v3) {
    BOOL v10 = v8 - 0x6C8FBACB4F9D55DLL < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v5) ^ v4)))();
}

uint64_t sub_1001B3804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = 31162;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (((LODWORD(STACK[0x904]) == ((v8 - 23267015) & 0x163047F ^ (v9 + 43)))
                                * (((v8 - 627) | 0x28E) ^ 0x284)) | v8)))();
}

uint64_t sub_1001B3860@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((a2 + 1838) ^ 0x7E7) * (v2 != v3)) ^ a2)))();
}

uint64_t sub_1001B388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8 * ((27 * (((v9 == v10) ^ (((v8 - 103) | 0x80) + 69)) & 1)) ^ v8)))();
}

uint64_t sub_1001B38C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LOWORD(STACK[0x656]) = v8
                       - 610
                       + ((LOWORD(STACK[0x994]) - 4724) ^ 0x3F3E)
                       + ((2 * (LOWORD(STACK[0x994]) - 4724)) & 0x7E7C)
                       + 14914;
  return (*(uint64_t (**)(void))(a8 + 8 * ((((v8 + 1228) ^ 0x7E7) * (v9 != v10)) ^ (v8 - 610))))();
}

uint64_t sub_1001B3924@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v5 = 633 * (a2 ^ 0x3E);
  LOWORD(STACK[0x656]) = v4
                       + (*(_WORD *)(STACK[0x580] + 56) ^ 0x5B9C)
                       + v5
                       + ((2 * *(_WORD *)(STACK[0x580] + 56)) & 0xDBFE ^ 0x48C6)
                       + 2713;
  return (*(uint64_t (**)(void))(a1 + 8
                                   * ((27 * (((v2 == v3) ^ (((v5 - 103) | 0x80) + 69)) & 1)) ^ v5)))();
}

uint64_t sub_1001B39A0@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  unint64_t v3 = STACK[0x580];
  LOWORD(STACK[0x656]) = v2
                       + (*(_WORD *)(STACK[0x580] + 56) ^ 0x472C)
                       + ((2 * *(_WORD *)(STACK[0x580] + 56)) & 0xE29E ^ 0x6086)
                       + 3764;
  return (*(uint64_t (**)(void))(a1
                              + 8 * (((*(void *)(v3 + 136) != 0) * ((a2 - 302259535) & 0x12041DEE ^ 0x430)) ^ a2)))();
}

uint64_t sub_1001B3A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((145
                                * (((*(_DWORD *)(v9 + 144) == 1664814209) ^ (7 * (v8 ^ 0x8B))) & 1)) | v8)))();
}

uint64_t sub_1001B3A58@<X0>(uint64_t a1@<X7>, __int16 a2@<W8>)
{
  int v4 = v2 ^ 0xED;
  __int16 v5 = v3 + ((a2 - 4426 + (v2 ^ 0xED)) ^ 0xFFA8) + ((2 * (a2 - 4426 + (v2 ^ 0xED))) & 0xFF50);
  LOWORD(STACK[0x656]) = v5 + 91;
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t))(a1 + 8 * (v2 ^ 0xC01)))((unsigned __int16)(v5 - 31490 + (v2 ^ 0x582)), 4019456641);
  STACK[0x688] = v6;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (v4 ^ (16 * (v6 != 0)))))();
}

uint64_t sub_1001B3AF0(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = 1;
  a1[1] = (((unsigned __int16)(v9 - 31162) >> 8) - (((v9 - 31162) >> 7) & 0xA) - 123) ^ 0x85;
  a1[2] = (v9 - (((v9 << (((v10 + 65) | 0x81) + 118)) + 12) & 0x64) + 120) ^ 0x32;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((4 * (LODWORD(STACK[0x904]) == v8)) | ((LODWORD(STACK[0x904]) == v8) << 6) | (v10 - 959) | 0x481)))();
}

uint64_t sub_1001B3B80@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((v2 == v3) ^ (a2 + 110)) & 1)
                                * ((a2 - 523102634) & 0x1F2DE5FF ^ 0x1F9)) | (a2 - 523102634) & 0x1F2DE5FF)))();
}

uint64_t sub_1001B3BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * (((v8 - 1619 + v8 - 1814 - 646) * (v9 != v10)) ^ v8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B3C18@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  a1[3] = 4;
  unsigned __int16 v3 = LOWORD(STACK[0x994]) - ((2 * LOWORD(STACK[0x994]) + 23320) & 0x4C26) + 5023;
  a1[4] = (v3 >> (((14 * ((a3 - 90) ^ 0xBD)) ^ 0xA0) & 0xFE)) ^ 0x26;
  a1[5] = v3 ^ 0x13;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1007
                                * ((LODWORD(STACK[0x994]) | ((unint64_t)(LODWORD(STACK[0x994]) < 0x4961274uLL) << 32)) == 76943988)) ^ (a3 - 90))))();
}

uint64_t sub_1001B3D04@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v2 == v3) ^ (((a2 + 85) & 0xE3) + 24)) & 1)
                                     * ((a2 + 242888277) & 0xF185CBE3 ^ 0x1F9)) | (a2 + 242888277) & 0xF185CBE3)))();
}

uint64_t sub_1001B3E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = 1;
  unint64_t v6 = STACK[0x580];
  int v7 = *(_DWORD *)(STACK[0x580] + 56);
  int v8 = (unsigned char *)(((v4 + 235014901) | ((unint64_t)(v4 + 235014901 < ((v5 - 1333222922) & 0x4F775BFD ^ 0x2AC15AABu)) << 32))
               + a1
               - 717315015);
  *int v8 = v5 ^ 0x38 ^ BYTE1(v7) ^ 0xF6;
  v8[1] = v7 ^ 0x63;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1862
                                * ((*(_DWORD *)(v6 + 56) ^ a3 ^ 0x5DDFE378EEFFAF7FLL)
                                 - 0x5DDFE3781EF18641
                                 + ((2 * (*(_DWORD *)(v6 + 56) ^ a3)) & 0x1DDFF5EFELL) == 3490588990)) ^ v5)))();
}

uint64_t sub_1001B3F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))*(&off_1002E1F70
                                                                                                + (((v6 + 58 + v6 - 137 - 646)
                                                                                                  * (v7 != v8)) ^ (v6 + 1677))))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B40A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, unsigned int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = 2;
  uint64_t v6 = v4 - 293945097 + ((v5 - 97) | 0x28) + ((v5 + 1282260252) & 0xB3924271);
  unint64_t v7 = v6 | ((unint64_t)(v6 < 0xB3A12E4) << 32);
  unint64_t v8 = STACK[0x580];
  int v9 = *(_DWORD *)(STACK[0x580] + 56);
  int v10 = (unsigned char *)(v7 + a1 - 188355300);
  *int v10 = BYTE1(v9) ^ 0xB6;
  v10[1] = v9 ^ 0x63;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1042
                                * ((*(_DWORD *)(v8 + 56) ^ a3 ^ 0xDE7FFBB729FDFE5FLL)
                                 + ((2 * (*(_DWORD *)(v8 + 56) ^ a3)) & 0x53FBFCBE)
                                 + 0x21800449103A8658 == 976782519)) ^ v5)))();
}

uint64_t sub_1001B41EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))*(&off_1002E1F70
                                                                                                + ((203
                                                                                                  * (*(void *)(v6 + 136) != 0)) ^ v7)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B42E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a8
                                                                                                 + 8
                                                                                                 * ((119 * (*(_DWORD *)(v8 + 144) == (((v9 + 1731) | 0x81) ^ 0x613) + 1664813787)) ^ ((v9 + 1731) | 0x81))))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001B4338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  unsigned int v8 = ((2 * (v5 + v4)) & 0xEBFFB53E) + ((v7 + 1979701497) ^ (v5 + v4));
  *(unsigned char *)(a1 + v8 - 1979701919) = 5;
  __int16 v9 = *(_WORD *)(v3 + 144) - ((2 * *(_WORD *)(v3 + 144) + 1790) & (((a3 - 537) | 0x86) + 1186)) - 2397;
  int v10 = (unsigned char *)(((v8 - 426885940) | ((unint64_t)(v8 - 426885940 < 0x5C8E176A) << 32)) + a1 - 1552815978);
  *int v10 = HIBYTE(v9) ^ 3;
  v10[1] = v9 ^ 0x24;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((1958
                                * ((*(unsigned int *)(v3 + 144) | ((unint64_t)(*(_DWORD *)(v3 + 144) < v6) << 32)) != 1664814209)) ^ a3)))();
}

uint64_t sub_1001B4480@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  BOOL v10 = v2 < v3;
  *(unsigned char *)(v8 + v4 - 0x598255749887B338) = *(unsigned char *)(v7 + v5 - 0x1F43A200490039DALL) - 126;
  unint64_t v11 = v9 - 0x265D4E7BC0B2C219 + (a2 - 403);
  int v12 = v10 ^ (v11 < v3);
  BOOL v13 = v11 < v2;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v6) ^ a2)))();
}

uint64_t sub_1001B4518()
{
  unint64_t v3 = STACK[0x578];
  ((void (*)(unint64_t, void, uint64_t, uint64_t))*(&off_1002E1F70 + v0 + 2027))(STACK[0x578], 0, v1, -1);
  unint64_t v4 = STACK[0x890];
  int v5 = STACK[0x780];
  int v6 = STACK[0x568];
  int v7 = 176504963 * ((((v2 - 192) | 0x7D73C2A0) - ((v2 - 192) | 0x828C3D5F) - 2104738465) ^ 0xF7D52BBF);
  *(_DWORD *)(v2 - 128) = v7 + 734402563;
  *(void *)(v2 - 152) = STACK[0x560];
  *(_DWORD *)(v2 - 188) = v7 + v6 - ((2 * v6 - 2138832574) & 0xCD1228E0) - 1496640231;
  *(_DWORD *)(v2 - 184) = v5 - v7 - 520711526;
  *(_DWORD *)(v2 - 144) = v6 - v7 + ((v0 + 26) ^ 0xAFD34E0 ^ (16 * (v0 ^ 0x84)));
  *(void *)(v2 - 176) = &unk_100284310;
  *(void *)(v2 - 168) = v4;
  *(_DWORD *)(v2 - 160) = v0 - v7 + 1162;
  *(void *)(v2 - 136) = v3;
  LOBYTE(STACK[0x15D4]) = -125 * ((((v2 + 64) | 0xA0) - ((v2 + 64) | 0x5F) + 95) ^ 0xBF) + 49;
  uint64_t v8 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0x8BF)))(v2 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((46 * (*(_DWORD *)(v2 - 192) != 0)) ^ v0)))(v8);
}

uint64_t sub_1001B4688()
{
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x9DE)))(STACK[0x890] - 0x73FCE2C07DC88EB7);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1598)))(v2);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((((v0 + 136) ^ 0x6C ^ ((v0 - 495) | 0x88)) * (v3 == 0)) ^ v0)))(v4);
}

uint64_t sub_1001B481C()
{
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + v0))(STACK[0x6B0]);
}

void sub_1001B4898()
{
}

void sub_1001B48A0()
{
  uint64_t v2 = ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + v1 + 1957))(STACK[0x578]);
  sub_1002359CC(v2, v3, v4, v5, v6, v7, v0);
}

uint64_t sub_1001B48C4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a1 + 8 * (a2 + 918)))();
  return sub_1002359CC(v2);
}

uint64_t sub_1001B491C@<X0>(char a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8 * (((((a2 ^ 0x503) - 982) ^ ((a2 ^ 0x503) - 839)) * ((a1 & 8) == 0)) ^ a2 ^ 0x503)))();
}

uint64_t sub_1001B4958(uint64_t a1, int a2)
{
  LODWORD(STACK[0x200]) = LODWORD(STACK[0x3F0]) ^ 0xF229010E;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((108 * ((v2 + 1) > 0xF)) ^ (a2 - 105))))(1606081807);
}

uint64_t sub_1001B5200@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (((v68 + 731244245) >> 8) ^ 0xB31EF52F)
      + v68
      + (((v68 + 731244245) >> 7) & 0x3DEA5E);
  int v70 = v66 + 1742753891;
  unsigned int v71 = v69 + ((((v70 ^ 0x7876F313) + v69) >> 5) ^ 0x408001A2) - ((((v70 ^ 0x7876F313) + v69) >> 4) & 0xEFFFCBA) + 1;
  int v72 = v71 + 756013590 + (~(2 * v71 + 1877860358) | 0x15CE2BDB);
  unsigned int v73 = ((2 * ((v72 ^ 0xF518EA12) - 1879573490)) & 0x7F7F7678) + (((v72 ^ 0xF518EA12) - 1879573490) ^ 0x3FBFBB3C);
  unsigned int v74 = (((v73 - 1069529916) >> 10) ^ 0x7FFDDFEF) + v73 + (((v73 - 1069529916) >> 9) & 0x7BBFDE);
  unsigned int v75 = ((v74 + 1078093013) & 0xFDEBECC6) + v74 + (((v74 + 1078093013) >> 1) ^ 0x7EF5F663);
  unsigned int v76 = v75 - ((2 * v75 - 2103911196) & 0x9B5FFDA6) - 1896059579;
  unsigned int v77 = ((2 * ((v76 ^ 0xCDAFFED3) + 1287124013)) & 0xABFB48E6) + (((v76 ^ 0xCDAFFED3) + 1287124013) ^ 0xD5FDA473);
  unsigned int v78 = v77 + (((v77 + 704797581) >> 13) ^ 0x3000027) - ((2 * ((v77 + 704797581) >> 13)) & 0xFFFB0);
  unsigned int v79 = v78 + (((v78 + 654465894) >> 6) ^ 0x30A51208) - (((v78 + 654465894) >> 5) & 0x6B5DBEE) + 2;
  unsigned int v80 = v79 - ((2 * v79 - 323317064) & 0x8F4EB030) - 1106992780;
  unsigned int v81 = ((2 * ((v80 ^ 0xC7A75818) - 1282870125)) & 0x5DD77C38) + (((v80 ^ 0xC7A75818) - 1282870125) ^ 0x2EEBBE1C);
  unsigned int v82 = (((v81 - 787201564) >> 8) ^ 0x7DDFD59F) + v81 + (((v81 - 787201564) >> 7) & 0x1BFAB3E);
  unsigned int v83 = (((v82 + 1395944517) >> 2) ^ 0xB7FDDCDC) + v82 + (((v82 + 1395944517) >> 1) & 0x6FFBB9B8);
  unsigned int v84 = v83 - ((2 * v83 + 913120978) & 0xF7AE7C26) - 1760703108;
  unsigned int v85 = ((2 * ((v84 ^ 0xFBD73E13) + 707258702)) & 0xFF79E4BA) + (((v84 ^ 0xFBD73E13) + 707258702) ^ 0xFFBCF25D);
  unsigned int v86 = (((v85 + 4394403) >> 13) ^ 0x1FCFFFF7) + v85 + ((2 * ((v85 + 4394403) >> 13)) & 0xFFFEE);
  unsigned int v87 = (((v86 - 529330772) >> 3) ^ 0x6FDCCFCD) + v86 + (((v86 - 529330772) >> 2) & 0x1FB99F9A);
  unsigned int v88 = v87 + 1551839369 + (~(2 * v87 - 517178434) | 0x282E1AAD);
  unsigned int v89 = (v88 ^ 0x6067A423) + ((v88 >> 11) ^ 0x801D49D4) + ((v88 >> 10) & 0x1D75BE ^ 0xFFE7EE57) + 2146351841;
  unsigned int v90 = (((((2 * v89) & 0x22EBFFFE) + (v89 ^ 0x9175FFFF) + 1854537729) >> 5) ^ 0x27ED8FFE)
      + ((2 * v89) & 0x22EBFFFE)
      + (v89 ^ 0x9175FFFF)
      + (((((2 * v89) & 0x22EBFFFE) + (v89 ^ 0x9175FFFF) + 1854537729) >> 4) & 0xFDB1FFC);
  unsigned int v91 = v90 - ((2 * v90 - 1925652474) & 0xA2EB2CB2) + 403834460;
  unsigned int v92 = (v91 ^ 0xE52942A1) + ((v91 >> 12) ^ 0xE8CED7BD) + ((v91 >> 11) & 0x1EF5AC ^ 0xFFE35AD7) + 390036184;
  unsigned int v93 = (((((2 * v92) & 0xBDFFFEFC) + (v92 ^ 0x5EFFFF7E) - 1593835390) >> 7) ^ 0x74C27BCB)
      + ((2 * v92) & 0xBDFFFEFC)
      + (v92 ^ 0x5EFFFF7E)
      + (((((2 * v92) & 0xBDFFFEFC) + (v92 ^ 0x5EFFFF7E) - 1593835390) >> 6) & 0x184F796);
  unsigned int v94 = v93 - ((2 * v93 + 1484458350) & 0xB9430BA0) + 148834951;
  unsigned int v95 = ((2 * ((v94 ^ 0xDCA185D0) - 2045107421)) & 0xFFFEB9FE) + (((v94 ^ 0xDCA185D0) - 2045107421) ^ 0xFFFF5CFF);
  unsigned int v96 = (((v95 + 41729) >> 11) ^ 0x6FEA7FEF) + v95 + (((v95 + 41729) >> 10) & 0x14FFDE);
  unsigned int v97 = v96 + (((v96 - 1877597422) >> 8) ^ 0xC42D1842) - (((v96 - 1877597422) >> 7) & 0x1A5CF7A) + 1;
  unsigned int v98 = v97 - ((2 * v97 - 1747839586) & 0xF36FE872) + 1168178952;
  unsigned int v99 = ((v84 ^ v72 ^ v94) >> 1) & 0x7FFBE43E ^ 0x6A2F642C;
  unsigned int v100 = ((v88 ^ v76 ^ v98) >> 1) & 0x7FFBE43E ^ 0x1CE1B692;
  unsigned int v101 = ((v100 - ((2 * v100) & 0x30D64564) + 409936818) & 0x21D3C4FA ^ 0x208104EB)
       + ((v100 - ((2 * v100) & 0x30D64564) + 409936818) & 0xDE2C3904 ^ 0x8241101);
  unsigned int v102 = (v98 ^ 0x43277A6A) + ((v98 >> 8) ^ 0xE4F9167B) + ((v98 >> 7) & 0x8B9DFC ^ 0xFF7DF30B) + 457559808;
  unsigned int v103 = (((((2 * v102) & 0xBFEDFFFC) + (v102 ^ 0xDFF6FFFE) + 537460738) >> 8) ^ 0xDF7A2FEE)
       + ((2 * v102) & 0xBFEDFFFC)
       + (v102 ^ 0xDFF6FFFE)
       + (((((2 * v102) & 0xBFEDFFFC) + (v102 ^ 0xDFF6FFFE) + 537460738) >> 7) & 0xF45FDC);
  int v104 = v103 - ((2 * v103 + 18718760) & 0xE0626FE) - 946740333;
  unsigned int v105 = ((v91 ^ v80 ^ v104) >> 1) & 0x7FFBE43E ^ 0x45816038;
  int v106 = (((2 * v105) | 0x568CB5DE) - v105 + 1421452561) ^ 0x418DD52E;
  unsigned int v107 = STACK[0x4B0];
  unsigned int v108 = LODWORD(STACK[0x368]) ^ LODWORD(STACK[0x4B0]) ^ a65 ^ 0x92B0B623 ^ ((LODWORD(STACK[0x4B0]) ^ a65) >> 1) & 0x7FFBE43E;
  unsigned int v109 = ((v108 & 0xFF188309 ^ 0xE0088308) - ((2 * (v108 & 0xFF188309 ^ 0xE0088308)) & 0xB4000602) + 1512507141) ^ 0x5B620320;
  unsigned int v110 = (((2 * v109) | 0xF7A0361C) - v109 + 70247666) ^ 0xAF851F2A | (((2 * (v108 & 0xE77CF6 ^ 0x1302427)) | 0x64132CF0)
                                                                     - (v108 & 0xE77CF6 ^ 0x1302427)
                                                                     + 1307994504) ^ 0xB39AD27D;
  HIDWORD(v111) = LODWORD(STACK[0x4E8]) ^ 0x26D4;
  LODWORD(v111) = LODWORD(STACK[0x4E8]) ^ 0x7B0C8000;
  unsigned int v112 = v67 ^ (v110 - ((2 * v110) & 0x7B9E1AD2) - 1110504087) ^ v72 ^ v84 ^ v94 ^ (v99
                                                                                  - ((2 * v99) & 0xB0B1407C)
                                                                                  + 1482209471);
  int v113 = (v111 >> 14) - ((2 * (v111 >> 14)) & 0x276B889E) - 1816804273;
  HIDWORD(v111) = v112 ^ 0x11BC;
  LODWORD(v111) = v112 ^ 0x17784000;
  int v114 = ((v111 >> 14) - ((2 * (v111 >> 14)) & 0xB2A46A72) - 648923847) ^ v113;
  HIDWORD(v111) = v114 ^ 0x1B405;
  LODWORD(v111) = v114 ^ 0xD79C0000;
  int v115 = v111 >> 18;
  LODWORD(STACK[0x4E8]) = (2 * v115) & 0xE261717A;
  LODWORD(STACK[0x4C0]) = v115 + 1899018429;
  unsigned int v116 = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x414]) ^ LODWORD(STACK[0x4C8]);
  unsigned int v117 = (((v116 >> 1) & 0x7FFBE43E ^ 0x25CA6018)
        + ((v116 >> 1) & 0x2BE0843E ^ 0x8A208E66)
        - (((v116 >> 1) & 0x7FFBE43E ^ 0x25CA6018) & 0x2BE0843E)) ^ 0xD888C5D;
  int v118 = STACK[0x4F8];
  unsigned int v119 = (((LODWORD(STACK[0x494]) ^ LODWORD(STACK[0x4B8])) ^ LODWORD(STACK[0x4F8])) >> 1) & 0x7FFBE43E ^ 0x2DB1642E;
  unsigned int v120 = ((v119 | 0x3DC34C31) - (v119 | 0xC23CB3CE) - 1036209202) ^ 0x318B4FB1;
  int v121 = (((2 * ((LODWORD(STACK[0x4B8]) >> 1) & 0x7FFBE43E ^ 0x3F1B0430)) & 0x4EE60004)
        - ((LODWORD(STACK[0x4B8]) >> 1) & 0x7FFBE43E ^ 0x3F1B0430)
        + 1485635453) ^ 0x10E2B859;
  int v122 = LODWORD(STACK[0x414]) ^ LODWORD(STACK[0x398]) ^ LODWORD(STACK[0x4F0]) ^ (LODWORD(STACK[0x414]) >> 1) & 0x7FFBE43E ^ LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x208]) ^ v116;
  LODWORD(STACK[0x568]) = (v107 >> 1) & 0x7FFBE43E;
  LODWORD(STACK[0x36C]) ^= v122 ^ LODWORD(STACK[0x44C]) ^ (v117 - ((2 * v117) & 0x9058B7E8) - 936616972) ^ a1 ^ v76 ^ v88 ^ v98 ^ (v101 - 2);
  LODWORD(STACK[0x368]) = (((2 * v121) | 0x38784C2) - v121 - 29606497) ^ LODWORD(STACK[0x39C]) ^ v118 ^ ((v120 | 0x5330D9FE) - (v120 | 0xACCF2601) - 1395710463) ^ v65 ^ v80 ^ v91 ^ v104 ^ (v106 - 1) ^ 0x23DC5A27;
  unsigned int v123 = LODWORD(STACK[0x450]) ^ 0xFFFFFF94;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x358]) ^ 0x4475BBEA;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x350]) ^ 0xA2101912;
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x3E0]) ^ 0x3F73C0C;
  unint64_t v124 = STACK[0xA68];
  int v125 = LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x234]);
  unsigned int v126 = (2 * ((STACK[0x3AC] & 0x48FF756B) - ((2 * (STACK[0x3AC] & 0x48FF756B)) & 0xCED2E84)) - 1930613116) ^ 0x8CED2E84;
  unsigned int v127 = (v126 + 1206949376 - ((2 * v126) & 0x8FE30C00) + 61440) ^ 0xF0EF36B;
  unsigned int v128 = (v127 & STACK[0x39C]) + 1845085777 - ((2 * (v127 & STACK[0x39C])) & 0xDBF38CA2);
  unsigned int v129 = (((v127 & STACK[0x398]) - 415205122 - ((2 * (v127 & STACK[0x398])) & 0xCE80F1FC)) ^ 0xE74078FE) >> STACK[0x3B0];
  uint64_t v130 = ((v128 ^ 0x6DF9C651) << LODWORD(STACK[0x3A4]))
       - 1799203340
       - ((2 * ((v128 ^ 0x6DF9C651) << LODWORD(STACK[0x3A4]))) & 0x2984ABE8);
  uint64_t v131 = LODWORD(STACK[0x558]);
  uint64_t v132 = 4
       * ((LODWORD(STACK[0x558]) ^ ((227969280 << v123) - ((2 * (227969280 << v123)) & 0xB4) - 38)) ^ 0xB2u);
  *(_DWORD *)(STACK[0xA58] + v132) = v125 ^ v130 ^ (v129 - ((2 * v129) & 0xB29FC646) + 1498407715) ^ 0x2D23E99D;
  *(_DWORD *)(v124 + v132) = v125 ^ 0x63C269C5 ^ ((unsigned __int16)(unk_100286A18 - 7889)
                                                - ((2 * (unsigned __int16)(unk_100286A18 - 7889)) & 0x13A26)
                                                - 382427885);
  return ((uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + v70))(v130, v131, v70 ^ 0x2ACu, 3879762174, 2231851456, 1845085777, 2495763956, 3966488660, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

#error "1001B6008: too big function (funcsize=0)"

void sub_1001CAB50()
{
  int v0 = STACK[0x254];
  LODWORD(STACK[0x2B8]) = LODWORD(STACK[0x570]) - 104419360;
  LODWORD(STACK[0x3C0]) += 1204648960;
  LODWORD(STACK[0x268]) = LODWORD(STACK[0x248]) ^ 0xBF1B7777;
  LODWORD(STACK[0x258]) = (v0 + 1005412694) ^ LODWORD(STACK[0x250]);
  LODWORD(STACK[0x260]) = LODWORD(STACK[0x24C]) ^ 0x5868BFBC;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x244]) ^ 0xD9D21802;
  int v1 = STACK[0x23C];
  int v2 = STACK[0x3BC];
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v3 = STACK[0x23C];
  }
  else {
    int v3 = STACK[0x3BC];
  }
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v4 = STACK[0x238];
  }
  else {
    int v4 = STACK[0x234];
  }
  if (LODWORD(STACK[0x240]) == 829073770) {
    int v1 = STACK[0x234];
  }
  else {
    int v2 = STACK[0x238];
  }
  int v5 = STACK[0x3C4];
  if (LODWORD(STACK[0x3C4]) == 709617036) {
    int v6 = v3;
  }
  else {
    int v6 = v4;
  }
  LODWORD(STACK[0x23C]) = v6;
  if (v5 == 709617036) {
    int v3 = v4;
  }
  LODWORD(STACK[0x238]) = v3;
  if (v5 == 709617036) {
    int v7 = v1;
  }
  else {
    int v7 = v2;
  }
  LODWORD(STACK[0x234]) = v7;
  if (v5 == 709617036) {
    int v8 = v2;
  }
  else {
    int v8 = v1;
  }
  LODWORD(STACK[0x3BC]) = v8;
  JUMPOUT(0x1001BED00);
}

uint64_t sub_1001CAC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  (*(void (**)(unint64_t))(v12 + 8 * (a12 ^ 0xCA6)))(STACK[0xA68]);
  uint64_t v13 = ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + (a12 ^ 0x52D) + 1673))(STACK[0xA58]);
  return sub_10022E08C(v13);
}

uint64_t sub_1001CAC7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = ((v7 << 6) & 0x3AB06F40 ^ 0x3A004740) - 1364233168 + ((v7 << (((a4 + 127) & 0x6C) - 103)) ^ 0xE2F81C4F);
  if (v9 >= 0x2E07ABBF) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = 0xFFFFFFFF00000000;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a7
                                                     + 8
                                                     * ((13 * (STACK[0x560] + v8 + a1 + v9 - v10 - 772254655 < 0x10)) | a4)))(0x45F2F5AC818D5A5BLL, 0x582402397BEC8B77);
}

uint64_t sub_1001CAD84()
{
  v2.i64[0] = 0xBCBCBCBCBCBCBCBCLL;
  v2.i64[1] = 0xBCBCBCBCBCBCBCBCLL;
  v3.i64[0] = 0x7878787878787878;
  v3.i64[1] = 0x7878787878787878;
  *(int8x16_t *)&STACK[0xAC0] = vaddq_s8(vaddq_s8(veorq_s8(*v1, v2), v3), vandq_s8(vaddq_s8(*v1, *v1), v3));
  LODWORD(STACK[0x614]) = v0 + 64;
  int v4 = (unsigned char *)STACK[0x830];
  *int v4 = v1[1].i8[0];
  v4[1] = v1[1].i8[1];
  v4[2] = v1[1].i8[2];
  v4[3] = v1[1].i8[3];
  void v4[4] = v1[1].i8[4];
  void v4[5] = v1[1].i8[5];
  v4[6] = v1[1].i8[6];
  v4[7] = v1[1].i8[7];
  v4[8] = v1[1].i8[8];
  v4[9] = v1[1].i8[9];
  v4[10] = v1[1].i8[10];
  v4[11] = v1[1].i8[11];
  v4[12] = v1[1].i8[12];
  v4[13] = v1[1].i8[13];
  v4[14] = v1[1].i8[14];
  v4[15] = v1[1].i8[15];
  return sub_1001EEF18();
}

uint64_t sub_1001CAE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a2 + v7 - 0x582402397BEC8B77) = (*(unsigned char *)((v10 ^ v11) + a1 + v8 - 0x45F2F5AC818D5CBCLL) ^ 0xBC)
                                             + ((2 * *(unsigned char *)((v10 ^ v11) + a1 + v8 - 0x45F2F5AC818D5CBCLL)) & 0x78)
                                             + 120;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 8 * ((228 * (a4 + 1 != v9 + 16)) ^ v10)))(a1 + 1, a2 + 1);
}

uint64_t sub_1001CAEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (v3 ^ 0xC95)))(STACK[0x570], 2722084108);
  STACK[0x558] = v5 + 0x228E0CD37FCCF1ACLL;
  STACK[0x960] = v5 + 0x228E0CD37FCCF1ACLL;
  return (*(uint64_t (**)(void))(a3 + 8 * (((v5 == 0) * ((((v3 - 304) | 0x428) - 1038) ^ ((v3 - 284) | 0xA))) ^ v3)))();
}

uint64_t sub_1001CAF5C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((85
                                * ((STACK[0x570] ^ 0xF9334FDD7B6FFF9ELL)
                                 + 0x6CCB0233BB1AEABLL
                                 + ((2 * STACK[0x570]) & 0x1FF3CLL) != ((v1 + 728) ^ 0xB721A83FLL))) ^ v1)))();
}

uint64_t sub_1001CB008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t a4@<X8>)
{
  BOOL v10 = v4 < a4;
  *(unsigned char *)(v7 + a1 - 0x2A2D4C3DC919F48ELL) = *(unsigned char *)(v6 + a3 - 0x5C3BD53D0E70C091)
                                             - ((2 * *(unsigned char *)(v6 + a3 - 0x5C3BD53D0E70C091)) & 0x22)
                                             + 17;
  if (v10 == v8 - 0x720825050F08B557 < a4) {
    BOOL v10 = v8 - 0x720825050F08B557 < v4;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((v10 * v5) ^ v9)))();
}

uint64_t sub_1001CB0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (STACK[0x570] ^ 0xBEDABAA) + 1735093792 + (STACK[0x560] & 0x15754);
  unint64_t v8 = v5 + v6 + ((v4 + 5312900) & 0xFFAEEFAD ^ 0x42B3AEA6);
  BOOL v9 = v8 < 0x80C09F7A;
  unint64_t v10 = (v7 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v7 < 0x73591987) << 32)) + 224888311;
  int v11 = (v10 < 0x80C09F7A) ^ v9;
  BOOL v12 = v10 <= v8;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((155 * v9) ^ v4)))();
}

uint64_t sub_1001CB16C()
{
  LODWORD(STACK[0x550]) = STACK[0x778];
  LODWORD(STACK[0x548]) = -1842144807;
  unint64_t v4 = ((v2 - 429100752) | ((unint64_t)((v2 - 429100752) < 0x59C58AB5) << 32))
     + v3
     - 1506118325;
  unsigned int v5 = (((*(unsigned __int8 *)v4 - ((*(unsigned __int8 *)v4 << ((2 * (v0 + 50)) ^ 0x51)) & 0xC4)) << 8) - 7680) ^ 0xFFFFE200;
  LOWORD(v4) = (v5 - ((2 * v5) & 0x4E00) - 22651) ^ 0xA785 | (*(unsigned __int8 *)(v4 + 1)
                                                            - ((2 * *(unsigned __int8 *)(v4 + 1)) & 0x42)
                                                            + 26657) ^ 0x6821;
  int v6 = (unsigned __int16)(v4 - ((2 * v4) & 0x55E0) - 21776) ^ 0xAAF0;
  unsigned int v7 = v2 + (v6 ^ 0x3FB7FEEF) + ((2 * v6) & 0x1FDDE) + 1877342448;
  BOOL v8 = v7 < 0x22F71162;
  BOOL v9 = v7 > v1 - 454419722;
  if ((v1 - 454419722) < 0x22F71162 != v8) {
    BOOL v9 = v8;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((58 * v9) ^ (v0 - 793))))(4294925278, 4294953326, 758, v2);
}

uint64_t sub_1001CB31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, __int16 a7)
{
  int v13 = (v9 ^ 0x894) - 838;
  uint64_t v14 = v8 + v11 - 0x3749BB5A557E7DA5 + v12 + 0x3749BB59E225641ELL;
  __int16 v15 = (a6
       + ((*(unsigned __int8 *)v14 - (((unsigned __int16)v13 ^ 0x52) & (unsigned __int16)(2 * *(unsigned __int8 *)v14))) << 8)) ^ a6;
  LOWORD(v14) = (v15 - ((2 * v15) & 0xBFFF) + v7) ^ v7 | (*(unsigned __int8 *)(v14 + 1)
                                                        - ((2 * *(unsigned __int8 *)(v14 + 1)) & 0x16C)
                                                        + a7) ^ a7;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((232
                                * ((__int16)(v14 - ((2 * v14) & 0x88C0) - 15248) >= (__int16)(((v13 ^ 0xC004) + 16269) ^ 0xC07D))) ^ v13)))();
}

uint64_t sub_1001CB400(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((863
                                * (((3 * ((a1 + 64) & 0x77 ^ 0xC9)) ^ (((v3 - a1) | (a1 - v3)) >> 15)) & 1)) ^ v2)))();
}

uint64_t sub_1001CB450()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * ((1562 * ((((v0 - v1) | (v1 - v0)) & 0x8000) == 0)) ^ (v1 - 43589))))(4294925278);
}

uint64_t sub_1001CB4A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = (((v5 + 2082228144) & 0x83E30DFE) + 1138) | 0x20;
  int v9 = *(unsigned __int8 *)(v7 + (a4 - 1935219075));
  LODWORD(STACK[0x550]) = (v8 ^ LODWORD(STACK[0x548])) + v9 - ((2 * v9) & 0x1D6);
  BOOL v10 = v4 < 0x80C09F7A;
  unint64_t v11 = (a4 + 5) + 224888311 + ((unint64_t)((a4 + 5) < 0x73591987) << 32);
  int v12 = v10 ^ (v11 < 0x80C09F7A);
  BOOL v13 = v11 <= v4;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((v10 * ((v8 - 66043190) & 0x3EFBFAB ^ 0xA ^ (28 * (v8 ^ 0x574)))) ^ v8)))();
}

void sub_1001CB6DC()
{
}

uint64_t sub_1001CB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(a4 + 8 * (v4 ^ 0xF8D)))(v4 ^ 0xB3B7B1CB ^ LODWORD(STACK[0x8C8]), 2168017039);
  STACK[0x7B0] = v5;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((201 * (v5 != 0)) ^ (v4 - 1880))))();
}

uint64_t sub_1001CB780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x550]) = v4;
  BOOL v7 = (v5 ^ 0x736FE46FA5B9FF96) - 0x736FE46F770FFFD4 + ((v5 << ((v6 + 112) ^ 0xD2u)) & 0x14B73FF2CLL) != 782892994;
  return (*(uint64_t (**)(unint64_t))(a4 + 8 * ((v7 | (8 * v7)) ^ v6)))(STACK[0x530]);
}

uint64_t sub_1001CB82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X8>)
{
  BOOL v9 = v3 < a3;
  *(unsigned char *)(v5 + v7 - 0x213D59D78CBAC61BLL) = (*(unsigned char *)(v4 + a1 - 0x5D9649EC48261E52) ^ 0x7B)
                                             + ((2 * *(unsigned char *)(v4 + a1 - 0x5D9649EC48261E52)) & 0xF7)
                                             - 40;
  if (v9 == v6 - 0x3B5F6F3E56D97BEBLL < a3) {
    BOOL v9 = v6 - 0x3B5F6F3E56D97BEBLL < v3;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((v9 | (8 * v9)) ^ v8)))();
}

uint64_t sub_1001CB8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((dword_10031E65C == 227 * (v4 ^ 0x2D6) + 1381728762) * (v4 - 671)) ^ v4)))();
}

uint64_t sub_1001CB930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 + 300;
  unsigned int v6 = (v4 + 230671532) & 0xF2403FB7;
  int v7 = (*(uint64_t (**)(void, unint64_t *))(a4 + 8 * ((v4 + 300) ^ 0xB68)))(0, &STACK[0x87C]);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((v6 - 9078585) & (2 * v7)) + (v7 ^ 0x7FBABFFF) == 2142945279) * (v5 + 723)) ^ v5)))();
}

uint64_t sub_1001CB9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (*(uint64_t (**)(unint64_t *))(a4 + 8 * (v4 + 347)))(&STACK[0x14C1]) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((118 * ((v5 ^ (v4 + 113 + v4 - 61 + 1)) & 1)) ^ v4)))();
}

uint64_t sub_1001CBA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(a4 + 8 * (v4 ^ 0xB92)))(LODWORD(STACK[0x87C]), a1, &STACK[0x90C]);
  BOOL v6 = ((2 * v5) & 0xAEEAEFF6) + ((((v4 - 634) | 0x628) + 1467314259) ^ v5) == 1467316219;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((v4 + 71) ^ v6) & 1 | (4 * (((v4 + 71) ^ v6) & 1)) | v4)))();
}

uint64_t sub_1001CBA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 | 0x12C;
  int v6 = (*(uint64_t (**)(void))(a4 + 8 * (v5 + 255)))(LODWORD(STACK[0x90C]));
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((28
                               * (((2 * v6) & 0xEB793FDA) + ((((v5 + 1050736701) & 0xC15F07FD) + 1975294021) ^ v6) != ((v5 + 116934797) & 0xF907B23F) + 1975295411)) ^ v5)))();
}

uint64_t sub_1001CBB34()
{
  int v1 = ((uint64_t (*)(void))*(&off_1002E1F70 + (v0 ^ 0xA67)))();
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((99 * (((2 * v1) & 0xFFFDFD7E) + (v1 ^ 0x7FFEFEBF) == 2147417791)) ^ v0)))();
}

uint64_t sub_1001CBBC4()
{
  *(_DWORD *)(v2 + 1628) = (LODWORD(STACK[0x8DC]) ^ 0x777BC67B)
                         - 622870546
                         + ((LODWORD(STACK[0x8DC]) << (v0 ^ 0x3B)) & 0xEEF78CF6);
  ((void (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0xA47)))(v1);
  uint64_t v3 = ((uint64_t (*)(void))*(&off_1002E1F70 + (v0 ^ 0x592) + 213))(LODWORD(STACK[0x90C]));
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((1191 * (*(_DWORD *)(v2 + 1628) == (v0 ^ 0x592) + 1381727937)) ^ ((v0 ^ 0x592) - 1237))))(v3);
}

void sub_1001CBC94()
{
  STACK[0x788] = v2;
  ((void (*)(uint64_t))*(&off_1002E1F70 + (v1 ^ 0xF86)))(v0);
  STACK[0x7B0] = 0;
  JUMPOUT(0x1001CC4ECLL);
}

uint64_t sub_1001CC514(int a1)
{
  int v2 = STACK[0x4B0];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v2 = STACK[0x4A8];
  }
  LODWORD(STACK[0x550]) = v2;
  LODWORD(STACK[0x4F0]) = LODWORD(STACK[0x4D8]) ^ 0x6AE519AE;
  LODWORD(STACK[0x4A8]) = STACK[0x350] & 0x27CFE90;
  int v3 = LODWORD(STACK[0x374]) - LODWORD(STACK[0x3BC]);
  LODWORD(STACK[0x3BC]) = v3;
  LODWORD(STACK[0x358]) ^= v3;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x370]) ^ 0x3986F3EE;
  LODWORD(STACK[0x4B0]) = a1 ^ 0x4E06C865;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((45 * (v1 - 1487072877 >= STACK[0x568])) ^ a1)))();
}

void sub_1001CCC94()
{
}

uint64_t sub_1001CCCB8()
{
  int v0 = (LODWORD(STACK[0x4B0]) + 1778381827) & 0x47F946EB;
  LODWORD(STACK[0x288]) = LODWORD(STACK[0x28C]) + LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x4B0]) = STACK[0x454] & 0xFFFFFF80;
  LODWORD(STACK[0x454]) = LODWORD(STACK[0x4A8]) - LODWORD(STACK[0x3A8]) - 20873036;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x558]) ^ 0x4897E03F;
  int v1 = *(unsigned __int8 *)(STACK[0x570]
                          + (*(unsigned char *)(STACK[0x570]
                                      + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 5) + 12) & 0xF)) + 6) & 0xF)) & 0xF))
     + 14;
  int v2 = ((v1 & 0xF) + (~(2 * v1) | 0xE9) - 116) ^ 0x8B;
  unsigned int v3 = ((2 * v2) & 0x1BC) + (v2 ^ 0x7D70FBDE);
  BOOL v4 = v3 < 0x7D70FBDE || v3 + 975828682 > 0xB79AF2A9;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((486 * v4) ^ v0)))();
}

uint64_t sub_1001CDDF4(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  int v6 = STACK[0x3F8];
  if ((STACK[0x548] & 2) != 0) {
    int v6 = STACK[0x3AC];
  }
  LODWORD(STACK[0x258]) = v6;
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x3F0]) ^ LODWORD(STACK[0x3BC]);
  int v7 = v5 + 243;
  int v8 = (a3 - 1075921141) & 0x40214507;
  LODWORD(STACK[0x548]) = v8;
  int v9 = *(unsigned __int8 *)(STACK[0x570] + v7 + 795478812 + (v8 ^ 0xD095F1E2));
  unsigned int v10 = 1364176807 * (((2 * v9) & 0xFFFFFFEF) + (v9 ^ 0x6FFAFBF7))
      - ((-1566613682 * (((2 * v9) & 0xFFFFFFEF) + (v9 ^ 0x6FFAFBF7)) - 241331778) & 0x8471F2C2)
      + 990364224;
  unsigned int v11 = v7 + 795478812 + (a5 ^ 0x4A99770F ^ v10) + (v8 ^ 0xD095F1E2);
  unsigned int v12 = (((((2 * v11) & 0xEB3677BA) + (v11 ^ 0xF59B3BDD) + 174375971) >> 16) ^ 0xF97EFBFF)
      + ((2 * v11) & 0xEB3677BA)
      + (v11 ^ 0xF59B3BDD)
      + ((2 * ((((2 * v11) & 0xEB3677BA) + (v11 ^ 0xF59B3BDD) + 174375971) >> 16)) & 0x1F7FE);
  unsigned int v13 = (((v12 + 283494436) >> 8) ^ 0xC38CBFFD) + v12 + (((v12 + 283494436) >> 7) & 0x1197FFA);
  unsigned int v14 = v13 - ((2 * v13 - 1145665006) & 0xB7B0985A) - 1179414218;
  unsigned int v15 = v7 + 795478812 + (v10 ^ 0x99E0B54C ^ v14) + (v8 ^ 0xD095F1E2);
  unsigned int v16 = (((((2 * v15) & 0xAFFFFB76) + (v15 ^ 0xD7FFFDBB) + 671089221) >> 16) ^ 0xB2DD7FCF)
      + ((2 * v15) & 0xAFFFFB76)
      + (v15 ^ 0xD7FFFDBB)
      + (((((2 * v15) & 0xAFFFFB76) + (v15 ^ 0xD7FFFDBB) + 671089221) >> 15) & 0xFF9E);
  unsigned int v17 = (((v16 + 1965195894) >> 8) ^ 0x5FBFFFCF) + v16 + ((2 * ((v16 + 1965195894) >> 8)) & 0x17FFF9E);
  int v18 = v17 - ((2 * v17 + 1271496466) & 0x6D700F86) + 1553778508;
  unsigned int v19 = v7 + 795478812 + (v10 ^ 0xF480FEA2 ^ v18) + (v8 ^ 0xD095F1E2);
  unsigned int v20 = (((((2 * v19) & 0xABF1D73E) + (v19 ^ 0xD5F8EB9F) + 705107041) >> 16) ^ 0xDF9BCFF7)
      + ((2 * v19) & 0xABF1D73E)
      + (v19 ^ 0xD5F8EB9F)
      + ((2 * ((((2 * v19) & 0xABF1D73E) + (v19 ^ 0xD5F8EB9F) + 705107041) >> 16)) & 0x19FEE);
  unsigned int v21 = (((v20 + 1248543850) >> 8) ^ 0x5BF9FDCF) + v20 + (((v20 + 1248543850) >> 7) & 0x1F3FB9E);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))*(&off_1002E1F70
                                                                     + ((28 * ((v7 + 1) < 0x10)) ^ (a3 + 1620))))(1248543850, a2 ^ v14 ^ v18 ^ 0xE5C1C580 ^ (v21 - ((2 * v21 + 501679866) & 0x11431CDC) - 2020273685), 1543110095, 32766878);
}

uint64_t sub_1001CE25C(uint64_t a1, int a2)
{
  int v5 = LODWORD(STACK[0x3D4]) - LODWORD(STACK[0x478]);
  unsigned int v6 = LODWORD(STACK[0x2A8]) ^ 0x9A316B6B;
  int v7 = (LODWORD(STACK[0x548]) - 1091133015) & 0x41095D7D;
  LODWORD(STACK[0x38C]) = v7;
  unsigned int v8 = (((v4 - 1192880174) >> 8) ^ 0xFB5FDDBD) + v4 + (((v4 - 1192880174) >> 7) & 0xBFBB7A);
  unsigned int v9 = v8
     + (((v8 - 1115276779) >> (v7 ^ 0x28)) ^ 0x5200C029)
     - ((2 * ((v8 - 1115276779) >> (v7 ^ 0x28))) & 0xBFE7FAC)
     + 1;
  unsigned int v10 = v9 - ((2 * v9 - 687148074) & 0x93FEC25E) - 1249584358;
  unsigned int v11 = ((2 * ((v10 ^ 0x49FF612F) - 1879573490)) & 0x9FEFFEFA) + (((v10 ^ 0x49FF612F) - 1879573490) ^ 0x4FF7FF7D);
  unsigned int v12 = (((v11 - 1341652861) >> 10) ^ 0x7F7D3B95) + v11 + (((v11 - 1341652861) >> 9) & 0x7A772A);
  unsigned int v13 = ((v12 + 814400750) & 0x3F5DFCAE) + v12 + (((v12 + 814400750) >> 1) ^ 0x9FAEFE57);
  unsigned int v14 = v13 - ((2 * v13 + 565677358) & 0xA809C926) + 1692445482;
  unsigned int v15 = ((2 * ((v14 ^ 0xD404E493) + 1287124013)) & 0xFBACFCFE) + (((v14 ^ 0xD404E493) + 1287124013) ^ 0xFDD67E7F);
  unsigned int v16 = v15 + (((v15 + 36274561) >> 13) ^ 0x90021280) - (((v15 + 36274561) >> 12) & 0xBDAFE);
  unsigned int v17 = v16 + (((v16 + 1915186945) >> 6) ^ 0x80022838) - (((v16 + 1915186945) >> 5) & 0x7FBAF8E) + 2;
  unsigned int v18 = v17 - ((2 * v17 - 464876146) & 0xA2AFADE8) + 1132273083;
  unsigned int v19 = ((2 * ((v18 ^ 0x5157D6F4) - 1282870125)) & 0xEDFE8DF8) + (((v18 ^ 0x5157D6F4) - 1282870125) ^ 0x76FF46FC);
  unsigned int v20 = (((v19 - 1996441340) >> 8) ^ 0x7BBDEC7F) + v19 + (((v19 - 1996441340) >> 7) & 0x17BD8FE);
  unsigned int v21 = (((v20 + 222481541) >> 2) ^ 0xB863EBCF) + v20 + (((v20 + 222481541) >> 1) & 0x70C7D79E);
  int v22 = v21 - ((2 * v21 + 700301676) & 0x6649A64E) - 2013023267;
  unsigned int v23 = ((2 * ((v22 ^ 0x3324D327) + 707258702)) & 0xB3FEF7BC) + (((v22 ^ 0x3324D327) + 707258702) ^ 0x59FF7BDE);
  unsigned int v24 = (((v23 - 1509915614) >> 13) ^ 0x3F3DA9B7) + v23 + (((v23 - 1509915614) >> 12) & 0xB536E);
  unsigned int v25 = (((v24 + 1724045931) >> 3) ^ 0xBBFE78BE) + v24 + (((v24 + 1724045931) >> 2) & 0x37FCF17C);
  unsigned int v26 = v25 - ((2 * v25 + 361284442) & 0x3DB27B64) - 912416929;
  unsigned int v27 = (v26 ^ 0x95566B38) + ((v26 >> 11) ^ 0x8739AEC4) + ((v26 >> 10) & 0x29F7EC ^ 0xFFDEAA77) + 2027224056;
  unsigned int v28 = (((((2 * v27) & 0xB9BB7B6A) + (v27 ^ 0xDCDDBDB5) + 589447755) >> 5) ^ 0x77CF48E7)
      + ((2 * v27) & 0xB9BB7B6A)
      + (v27 ^ 0xDCDDBDB5)
      + (((((2 * v27) & 0xB9BB7B6A) + (v27 ^ 0xDCDDBDB5) + 589447755) >> 4) & 0xF9E91CE);
  unsigned int v29 = v28 - ((2 * v28 + 1453716168) & 0xD3F7B7DE) - 1789995693;
  unsigned int v30 = (v29 ^ 0xDDA70F17) + ((v29 >> 12) ^ 0x85DA50) - 8912927 + ((2 * (v29 >> 12)) & 0xFFFBE ^ 0xFFF44B5F);
  unsigned int v31 = (((((2 * v30) & 0x8B75F49E) + (v30 ^ 0x45BAFA4F) - 1169881679) >> 7) ^ 0xF7EDFCFD)
      + ((2 * v30) & 0x8B75F49E)
      + (v30 ^ 0x45BAFA4F)
      + (((((2 * v30) & 0x8B75F49E) + (v30 ^ 0x45BAFA4F) - 1169881679) >> 6) & 0x3DBF9FA);
  int v32 = v31 - ((2 * v31 + 78516584) & 0x6B158B38) + 2011287120;
  unsigned int v33 = ((2 * ((v32 ^ 0xB58AC59C) - 2045107421)) & 0xF79BFF7E) + (((v32 ^ 0xB58AC59C) - 2045107421) ^ 0x7BCDFFBF);
  unsigned int v34 = (((v33 - 2077097919) >> 11) ^ 0x7AFFDBED) + v33 + (((v33 - 2077097919) >> 10) & 0x3FB7DA);
  unsigned int v35 = v34 + (((v34 + 154281044) >> 8) ^ 0x4188000C) - (((v34 + 154281044) >> 7) & 0xEFFFE6) + 1;
  unsigned int v36 = v35 + 1825213414 - ((2 * v35 + 257181838) & 0x4A40E34C) + 2567;
  unsigned int v37 = (v36 ^ 0x9FB0FFF5) + ((v36 >> 8) ^ 0xC09EB2EE) + 1073675760 + ((2 * (v36 >> 8)) & 0x1FDFBDC ^ 0xFEC29E23);
  unsigned int v38 = (((((2 * v37) & 0xF1F3FDBC) + (v37 ^ 0x78F9FEDE) - 2029649630) >> 8) ^ 0x7A952DFD)
      + ((2 * v37) & 0xF1F3FDBC)
      + (v37 ^ 0x78F9FEDE)
      + (((((2 * v37) & 0xF1F3FDBC) + (v37 ^ 0x78F9FEDE) - 2029649630) >> 7) & 0x12A5BFA);
  int v148 = v18 ^ a2 ^ v29 ^ (v38 - ((2 * v38 + 417441354) & 0x6D585D8A) + 1125974506);
  unsigned int v39 = (~v148 & 4 | 0x5388D0A3) - (~v148 & 3 | 0xAC772F5C) - 1401475236;
  int v40 = (v39 & 0x10800B2 ^ 0x80431) + (v39 & 0x5280D00D) - 1;
  int v41 = v40 ^ 0x614CFA39;
  int v42 = -(-v148 & 7) - 1270251721;
  if ((v40 ^ 0x614CFA39) == 0x32CC2EAD) {
    int v43 = 0;
  }
  else {
    int v43 = 255;
  }
  unint64_t v44 = v42 ^ 0xB4497F37;
  unsigned int v45 = v10 ^ v3 ^ v22 ^ v32;
  unsigned int v46 = v14 ^ v2 ^ v26 ^ v36;
  unsigned int v47 = ((v45 & 0x7F ^ 0x2B) + (v45 & 0x74 ^ 0x67F04554) - ((v45 & 0x7F ^ 0x2B) & 0x74)) ^ 0xED784FE5;
  int v48 = ((2 * v47) | 0x50021692) - v47 - 671157065;
  LODWORD(STACK[0x28C]) = v48;
  unsigned int v49 = v48 ^ 0xA28901D1;
  unsigned int v50 = 33686018 * (v48 ^ 0xA28901D1);
  LODWORD(STACK[0x2A8]) = v50;
  LODWORD(STACK[0x27C]) = v49;
  unsigned int v51 = 16843009 * v49 - (v50 & 0x8CBCEAEA);
  LODWORD(STACK[0x214]) = (v45 & 0xFFFFFF80 ^ 0x3C40DB80)
                        + (v45 & 0x358D8980 ^ 0x18D001C)
                        - ((v45 & 0xFFFFFF80 ^ 0x3C40DB80) & 0x358D8980);
  unsigned int v52 = ((v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))
       + 1239056511
       - ((2 * (v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))) & 0x93B502CE)
       + 232) ^ 0xB6257E98;
  int v53 = (((_BYTE)v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))
                        + 127
                        - ((2 * ((_BYTE)v43 << ((55 - (-(char)v148 & 7)) ^ 0x37))) & 0xCE)
                        - 24) ^ 0x51530033;
  unsigned int v54 = (((2 * v53) | 0xC0058D42) - v53 + 536688991) ^ 0xB151C6F5;
  unsigned int v55 = 16843009 * v54 - ((33686018 * v54) & 0xF64C4E06) + 2066097923;
  unsigned int v56 = (LODWORD(STACK[0x47C]) ^ 0x9FE9C7A9)
      + (v55 ^ 0x84D9D8FC)
      + 1
      - ((2 * ((LODWORD(STACK[0x47C]) ^ 0x9FE9C7A9) + (v55 ^ 0x84D9D8FC) + 1)) & 0xFE327C94)
      + 2132360778;
  int v57 = 2 * (((v56 ^ 0x7F193E4A) & (v55 ^ 0x7B262703)) - ((2 * ((v56 ^ 0x7F193E4A) & (v55 ^ 0x7B262703))) & 0x1339D95C))
      - 1824925348;
  unsigned int v58 = ((-1191182336 * v54 - ((1912602624 * v54) & 0x68000000) - 1273267421) ^ 0xB41B7B23) & (v46 ^ 0x529C019E);
  LODWORD(STACK[0x3D4]) = v58 - ((2 * v58) & 0xCCCCCCCC) - 428096153;
  LODWORD(STACK[0x478]) = v55;
  unsigned int v59 = (v55 ^ 0x43F1949 ^ v56) + (v57 ^ 0x684F6463) + 76104385 + ((2 * v57) & 0xF6ED7A7C ^ 0x26613238);
  LODWORD(STACK[0x374]) = v59 ^ 0xFA9739FE;
  LODWORD(STACK[0x370]) = (2 * v59) & 0xF52E73FC;
  if (v41 == 852242093) {
    LOBYTE(v52) = 0;
  }
  unsigned __int8 v60 = (v52 & (v45 ^ 0xDA)) - ((2 * (v52 & (v45 ^ 0xDA))) & 0xA8) - 44;
  LODWORD(STACK[0x23C]) = (v60 ^ 0xA11148D4) + (v60 & 0xF ^ 0x58C0130B) - ((v60 ^ 0xA11148D4) & 0x8100400F);
  unsigned int v61 = v51 - 966888075;
  unsigned int v62 = (v51 - 966888075) ^ 0xC65E7575;
  int v63 = v46 ^ (v46 >> 8) ^ HIWORD(v46) ^ 0x6A680E4A;
  int v64 = ((v63 & 0xF5 ^ 0x1AC486F5) - (v63 & 0xF5) + ((v46 ^ BYTE1(v46) ^ BYTE2(v46)) ^ 0x4A)) ^ 0x52C446F7;
  unsigned int v65 = HIBYTE(v45) ^ 0x778776 ^ (((v45 ^ BYTE1(v45) ^ BYTE2(v45)) ^ 0x1B)
                                + ((v45 ^ (v45 >> 8) ^ HIWORD(v45) ^ 0xDF8FF851) & 0x7A ^ 0x778730)
                                - (((v45 ^ BYTE1(v45) ^ BYTE2(v45)) ^ 0x1B) & 0x7A));
  LODWORD(STACK[0x234]) = v46;
  unsigned int v66 = (((2 * v64) & 0x90010044) - v64 + 317157341) ^ HIBYTE(v46) ^ 0x5AE7AF5F;
  unsigned int v67 = (~(33686018 * v66) | 0xE5AC53A1) + 16843009 * v66;
  unsigned int v68 = 16843009 * v65 - ((33686018 * v65) & 0x917D8940) + 1220461728;
  LODWORD(STACK[0x3F8]) = v67 - 1926638032;
  LODWORD(STACK[0x208]) = v5;
  int v69 = STACK[0x44C];
  LODWORD(STACK[0x47C]) = LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x24C]) ^ v42 ^ ((v42 ^ LODWORD(STACK[0x44C])) >> 1);
  LODWORD(STACK[0x3A8]) = v5 ^ 0xC4D51A5E;
  uint64_t v70 = 4 * ((((v5 ^ 0xC4D51A5E) % 0x101) ^ 0x27FFBF9F) - 671072159 + ((2 * ((v5 ^ 0xC4D51A5E) % 0x101)) & 0x33E));
  int v71 = *(_DWORD *)((char *)dword_100282DC0 + v70);
  HIDWORD(v72) = v71 ^ 0x1934;
  LODWORD(v72) = v71 ^ 0xF960000;
  LODWORD(STACK[0x3F0]) = v68;
  int v73 = (v67 - 1926638032) ^ v68;
  int v74 = STACK[0x4A8];
  LODWORD(STACK[0x548]) = v73 ^ 0xECD9A44B;
  LODWORD(STACK[0x24C]) = (2 * ((16 * (v73 ^ 0xECD9A44B ^ v74)) ^ 0x33751C50)) & 0xC052C580;
  int v75 = (((v72 >> 17) - ((2 * (v72 >> 17)) & 0xBC01414) - 2048914934) ^ 0x9785A4BB) + 1;
  unsigned int v76 = v6 + (v75 ^ 0xBFF9BF7F) + ((2 * v75) & 0x7FF37EFE) + 1074151553;
  LODWORD(STACK[0x3AC]) = v62;
  unsigned int v77 = dword_100282DC0[v62 % 0x101];
  HIDWORD(v72) = v77 ^ 0x1934;
  LODWORD(v72) = v77 ^ 0xF960000;
  LODWORD(STACK[0x200]) = ((((v72 >> 17) - ((2 * (v72 >> 17)) & 0x6F43A498) + 933352012) ^ 0xDA3B8302)
                         + (v76 ^ 0x39E5BDFE)
                         + ((2 * v76) & 0x73CB7BFC)
                         - 971357694) ^ 0xFE19F679;
  int v78 = STACK[0x3E0];
  LODWORD(STACK[0x244]) = LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x2AC]);
  int v79 = v78 ^ LODWORD(STACK[0x450]);
  LODWORD(STACK[0x3BC]) = v41;
  int v80 = STACK[0x3E8];
  unsigned int v81 = v79 ^ ((v41 ^ LODWORD(STACK[0x3E8])) >> 2);
  unint64_t v82 = STACK[0x3B0];
  uint64_t v83 = 4 * STACK[0x3B0];
  int v84 = *(_DWORD *)((char *)dword_10026D140 + v83)
      - ((2 * *(_DWORD *)((char *)dword_10026D140 + v83) + 139067286) & 0xC08A49A)
      + 1915310616;
  LODWORD(STACK[0x450]) = v40;
  unsigned int v85 = v40 ^ 0x5380D494;
  LODWORD(STACK[0x204]) = v81 ^ 0xC9CBA826;
  int v86 = STACK[0x558];
  unsigned int v87 = (16 * ((v84 ^ 0x604524D) * (v84 ^ 0x604524D) - ((2 * (v84 ^ 0x604524D) * (v84 ^ 0x604524D)) & 0xDB8CBD6))
       - 305766736) ^ 0xEDC65EB0;
  unsigned int v88 = v87 - ((2 * v87) & 0xC5619420) + 1655753240;
  unsigned int v89 = (LODWORD(STACK[0x558]) ^ 0x74B85168u) % 0x101
      - ((2 * ((LODWORD(STACK[0x558]) ^ 0x74B85168u) % 0x101)) & 0x392)
      + 810237385;
  LODWORD(STACK[0x3E0]) = v42;
  STACK[0x218] = v44;
  uint64_t v90 = v42 ^ 0xB4497F37;
  int v91 = (dword_10026EDC0[v90] ^ v42 ^ (v44 - ((2 * v44 - 2073191046) & 0xE5DE12D8) - 1255811031) ^ 0x958E5520) + 1;
  unsigned int v92 = (LODWORD(STACK[0x368]) ^ 0x33347CFB) + (v91 ^ 0xF7EEBDFF) + ((2 * v91) & 0xEFDD7BFE) + 135348737;
  unsigned int v93 = v92 ^ 0xFBEFFABE;
  unsigned int v94 = (2 * v92) & 0xF7DFF57C;
  int v95 = (v89 ^ ((v89 ^ 0x304B3DC9) - ((2 * (v89 ^ 0x304B3DC9) + 74292602) & 0x63A038B6) - 200873192) ^ dword_10026EDC0[v89 ^ 0x304B3DC9] ^ 0x2D4CFD16)
      + (LODWORD(STACK[0x36C]) ^ 0xB5FA5A4);
  int v96 = *(_DWORD *)((char *)dword_10026E170 + v70)
      - ((2 * *(_DWORD *)((char *)dword_10026E170 + v70) + 434692178) & 0x47641CC0)
      - 257524087;
  LODWORD(v70) = (v84 ^ 0xB6C0490E ^ v88) + v93 + v94 + 68158786;
  int v147 = v70 ^ 0x6FBCFFCF;
  int v146 = (2 * v70) & 0xDF79FF9E;
  LODWORD(v70) = dword_100282DC0[(v73 ^ 0x93C144D9) % 0x101];
  HIDWORD(v72) = v70 ^ 0x1934;
  LODWORD(v72) = v70 ^ 0xF960000;
  int v97 = ((v77 << 15) ^ 0xC9A0000) - ((2 * ((v77 << 15) ^ 0xC9A0000)) & 0x3D320000) + 513371522;
  LODWORD(v70) = v77 >> 17;
  int v98 = (((v77 >> 17) & 0x3C65 ^ 0x3860)
       + ((v77 >> 17) & 0x2845 ^ 0xF3A401D)
       - (((v77 >> 17) & 0x3C65 ^ 0x3860) & 0x2845)) ^ 0x4DBA757F;
  int v99 = ((2 * v98) & 0x4026C44) - v98 + 2040187357;
  unsigned int v100 = v80 ^ 0xDC7A4D6B;
  unsigned int v101 = (v97 & 0x6E98000 ^ 0x8E810000) + (v97 & 0x6C08000 ^ 0x7150D614) - ((v97 & 0x6E98000 ^ 0x8E810000) & 0x86C08000);
  unsigned int v102 = (v96 ^ 0xBD30A193) + (LODWORD(STACK[0x3A4]) ^ 0x97EF21F);
  int v103 = v102 ^ 0x7FF9F55D;
  unsigned int v104 = (2 * v102) & 0xFFF3EABA;
  int v105 = (((v72 >> 17) - 180176413 - ((2 * (v72 >> 17)) & 0xEA858822) + 2606) ^ 0xE7276AA0) + 1;
  int v106 = v105 ^ 0x7EDEFFFF;
  unsigned int v107 = (2 * v105) & 0xFDBDFFFE;
  int v108 = dword_10026E170[v80 ^ 0xDC7A4D6B];
  unsigned int v109 = ((2 * v95) & 0xBF9F77BC) + (v95 ^ 0xDFCFBBDE) + v106 + v107;
  int v110 = 2 * v109 + 1117947974;
  LODWORD(STACK[0x36C]) = v109 - 1725657635;
  LODWORD(v70) = ((((v97 & 0xF9160000 ^ 0xA1120000) - ((2 * (v97 & 0xF9160000 ^ 0xA1120000)) & 0xBBBBBBBB) - 637666373) ^ 0xF3A06D7A)
                - 1) ^ 0x935F96C0 | ((v70 & 0x439A ^ 0x20A4288)
                                   + (v70 & 0x398 ^ 0xDD208D14)
                                   - ((v70 & 0x439A ^ 0x20A4288) & 0x3FF8)) ^ 0xDF2ACE9E;
  unsigned int v111 = v85;
  int v112 = dword_10026D140[v85] - ((2 * dword_10026D140[v85] + 407502742) & 0x3CD2C66C) - 1970380031;
  int v113 = (v70 - ((2 * v70) & 0x9ADCE736) - 848399461) ^ 0xCD6E739B | ((v99 ^ 0x3B1AE8DE | v101 ^ 0x7FD8D614)
                                                                    - ((2 * (v99 ^ 0x3B1AE8DE | v101 ^ 0x7FD8D614)) & 0x98AC4A34)
                                                                    - 866769638) ^ 0xCC56251A;
  unsigned int v114 = ((v113 - ((2 * v113) & 0x847845D0) - 1036246296) ^ 0xD0598C59) + 1;
  unsigned int v115 = v104 + v103 + (v114 ^ 0x5B9FDEFF) + ((2 * v114) & 0xB73FBDFE);
  LODWORD(STACK[0x240]) = (2 * v115 + 1221351240) & 0xDC50A666;
  LODWORD(STACK[0x238]) = v115 + 311328471;
  int v116 = 16
       * ((v112 ^ 0x1E696336) * (v112 ^ 0x1E696336) - ((2 * (v112 ^ 0x1E696336) * (v112 ^ 0x1E696336)) & 0xE039510));
  unsigned int v117 = ((v108 - ((2 * v108 + 434692178) & 0x722E7E6E) + 101429088) ^ 0xA79590C4)
       + (LODWORD(STACK[0x438]) ^ 0xA55FF9A6);
  LODWORD(STACK[0x438]) = (2 * ((8 * v73) ^ 0x9E0A26C8)) & 0x55B817F0;
  int v118 = (v112 ^ 0x56C0AC72 ^ (((v116 + 1880926336) ^ 0x701CA880)
                             - 2 * (((v116 + 1880926336) ^ 0x701CA880) & 0x6522E1F0 ^ ((_BYTE)v116 + 0x80) & 0x10)
                             + 1696784864))
       + 1;
  unsigned int v119 = ((2 * v117) & 0x5F33B5FE) + (v117 ^ 0xAF99DAFF) + (v118 ^ 0xFF7E377E) + ((2 * v118) & 0xFEFC6EFC);
  LODWORD(STACK[0x368]) = (2 * v119 + 567270150) & 0x6C3CD71A;
  LODWORD(STACK[0x248]) = v119 - 2029627120;
  int v120 = (v82 - ((2 * v82 - 2073191046) & 0x86A5DDA8) + 92913041) ^ v69;
  int v121 = ((2 * (v120 & 0x22640A9 ^ 0x22040A1)) | 0x421015B8) - (v120 & 0x22640A9 ^ 0x22040A1) + 1593308452;
  int v122 = *(_DWORD *)((char *)dword_10026EDC0 + v83);
  int v123 = ((2 * (v122 & 0x3AA640A9 ^ 0x2060029)) & 0x60008010) - (v122 & 0x3AA640A9 ^ 0x2060029) - 877187915;
  unsigned int v124 = ((v121 & 0x58408925 ^ 0x5040B501) + (v121 & 0xA7BF42DA ^ 0xA1280083) - 1) ^ ((v123 & 0xCBB56125 ^ 0xAC00120)
                                                                                    + (v123 ^ 0xE13F6017)
                                                                                    - ((v123 ^ 0xE13F6017) & 0xCAA54923)) ^ 0x9BBBDA5A | ((v122 & 0xC559BF56 ^ 0x1DD83C83) - 1) & 0xC559BF56 ^ 0x8109A006;
  int v125 = dword_10026E170[v90] - ((2 * dword_10026E170[v90] + 434692178) & 0x204B24F8) + 1561985701;
  unsigned int v126 = (LODWORD(STACK[0x480]) ^ 0xA55FF9A6)
       + ((((2 * (v120 & 0x40108E56 ^ 0x40000214)) | 0x5BF1DB08) - (v120 & 0x40108E56 ^ 0x40000214) + 1376195196) ^ 0x2DF884EA ^ (v124 - ((2 * v124) & 0x7FDF31AA) + 1072666837))
       + 1;
  LODWORD(STACK[0x480]) = ((8 * v86) ^ 0xA5C28B40) - ((2 * ((8 * v86) ^ 0xA5C28B40)) & 0xCD997200) - 422790907;
  unsigned int v127 = (v125 ^ 0xEA73D8F) + (v126 ^ 0xF76FFED7) + ((2 * v126) & 0xEEDFFDAE) + 143655209;
  int v128 = (LODWORD(STACK[0x208]) ^ 0x8F)
       - ((2 * (LODWORD(STACK[0x208]) ^ 0x8F)) & 0xC8)
       + 861819236;
  unsigned int v129 = ((v128 & 0x34E0AC7 ^ 0xC00082C3) + (v128 ^ 0x237F5934) - ((v128 ^ 0x237F5934) & 0xAC7)) ^ 0xD36F8246;
  unsigned int v130 = v129
       + (LODWORD(STACK[0x4B0]) ^ 0xE24B0580)
       - 2 * ((v129 + (LODWORD(STACK[0x4B0]) ^ 0xE24B0580)) & 0x1B1072DB ^ v129 & 0xA)
       - 1693420847;
  unsigned int v131 = LODWORD(STACK[0x454]) ^ 0xDCB28384 | v100;
  LODWORD(STACK[0x3A4]) = v100;
  LODWORD(STACK[0x4B0]) = v131 & 0x22CC416F ^ v100 & 5;
  int v132 = STACK[0x4E0];
  LODWORD(STACK[0x2AC]) = v61;
  unsigned int v133 = ((v61 ^ 0x2091407E)
        + (v61 & 0xD6 ^ 0xC72CBB80)
        - ((v61 ^ 0x2091407E) & 0x200040D6)) ^ 0xC7BDBBDD;
  unsigned int v134 = (v133 | STACK[0x214] & 0xFFFFFF80 ^ 0x3264FB00)
       - 2 * ((v133 | STACK[0x214] & 0xFFFFFF80 ^ 0x3264FB00) & 0x2CF6E9BF ^ v133 & 0x12);
  LODWORD(v82) = v45 ^ 0x1B1A7F28 ^ LODWORD(STACK[0x470]) ^ ((LODWORD(STACK[0x214]) ^ v45) >> 8);
  LODWORD(STACK[0x470]) = (((4 * v148) ^ 0xA52B7940) + 1992535490 + (~(2 * ((4 * v148) ^ 0xA52B7940)) | 0x1278A47F)) ^ LODWORD(STACK[0x250]) ^ (((4 * v148) ^ 0x113146A0) - 2 * (((4 * v148) ^ 0x113146A0) & 0x603E016C ^ (4 * v148) & 4) + 1614676328);
  LODWORD(STACK[0x44C]) = v130;
  LODWORD(STACK[0x208]) = ((16 * v132) ^ 0x587BBA40) & 0x2481430 ^ (16 * v132) & 0x10;
  LODWORD(STACK[0x200]) = (2
                         * (((1456694535 * (v148 ^ 0xC44C51A8)) ^ 0x77E7FF7D)
                          + ((-1381578226 * (v148 ^ 0xC44C51A8)) & 0xEFCFFEFA)
                          + ((1381578226 * (v148 ^ 0xC44C51A8)) & 0xEEEB67B4)
                          + ((-1456694535 * (v148 ^ 0xC44C51A8)) ^ 0xF775B3DA)
                          + LODWORD(STACK[0x374])
                          + LODWORD(STACK[0x370]))
                         + 739648854) & 0x7697A2D8;
  LODWORD(v83) = (-1775709411 * LODWORD(STACK[0x468])) ^ 0xE3EFBF9F;
  unsigned int v135 = (743548474 * LODWORD(STACK[0x468])) & 0xC7DF7F3E;
  LODWORD(STACK[0x214]) = v111;
  LODWORD(STACK[0x468]) = v45;
  unsigned int v136 = 0xF30A3ECA % STACK[0x568];
  int v137 = v83
       + v135
       + ((-743548474 * (v45 ^ 0xBCEF228)) & 0xFFFA678E)
       + ((1775709411 * (v45 ^ 0xBCEF228)) ^ 0x7FFD33C7)
       + v147
       + v146;
  LODWORD(STACK[0x378]) = (2 * v137 + 11278742) & 0x2D8307E;
  LODWORD(STACK[0x204]) = v137 + 767698186;
  unint64_t v138 = (*(void *)(STACK[0xA50] + 8 * v136) ^ 0xC9C9C9C9C9C9C9C9) + 152420640;
  unint64_t v139 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v138 ^ 0x7E9FBEF9B7F6B7FFLL) - 0x7E9FBEF9B7F6B7FFLL + ((2 * v138) & 0xFD3F7DF36FED6FFELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 2316401174u;
  unint64_t v140 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v139 ^ 0xAFFE9F5FFFF7C72FLL) + 0x500160A0000838D1 + ((2 * v139) & 0x5FFD3EBFFFEF8E5ELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 3287320712u;
  unint64_t v141 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v140 ^ 0xDBF7FFF9EF7BFFFBLL) + 0x2408000610840005 + ((2 * v140) & 0xB7EFFFF3DEF7FFF6))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 304768445;
  LODWORD(v141) = ((v141 ^ 0xBFE7F7F7AFB3CEFFLL) + 0x40180808504C3101 + ((2 * v141) & 0x7FCFEFEF5F679DFELL))
                % STACK[0x4C0];
  unsigned int v142 = ((v141 - ((2 * v141) & 0xE85E2E64) - 198240462) ^ 0x2FD0E0EC)
       - 1044254412
       + ((2 * (v141 - ((2 * v141) & 0xE85E2E64) - 198240462)) & 0xB7FFEFBC ^ 0xA05E2E24);
  unsigned int v143 = STACK[0x38C];
  STACK[0x550] = (LODWORD(STACK[0x38C]) + 568834506) & 0xDE1843BD;
  LODWORD(STACK[0x380]) = v110 & 0xEFA69374;
  LODWORD(STACK[0x374]) = (2 * v127) & 0x84164DAE;
  LODWORD(STACK[0x370]) = v127 - 1039456553;
  LODWORD(STACK[0x458]) = v134 + 754379181;
  LODWORD(STACK[0x3E8]) = v82 ^ (v134 + 754379181);
  LODWORD(STACK[0x250]) = LODWORD(STACK[0x3F8]) ^ 0x2F788544;
  BOOL v144 = v142 < 0x9DC1E912;
  if (v142 >= 0x9DC1E912) {
    BOOL v144 = v142 > 0x9DC1E913;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + ((299 * v144) ^ v143)))(1804738045, 1159995119);
}

void sub_1001D1158()
{
}

uint64_t sub_1001D1164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = STACK[0x550] ^ 0x486;
  STACK[0x550] = (v75 + 4) ^ LODWORD(STACK[0x3E0]);
  LODWORD(STACK[0x388]) = a68 - a72;
  LODWORD(STACK[0x3E0]) = LODWORD(STACK[0x23C]) ^ LODWORD(STACK[0x478]);
  LODWORD(STACK[0x480]) ^= LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x548]) ^ (a59
                                                                                                  - LODWORD(STACK[0x438]));
  LODWORD(STACK[0x38C]) = LODWORD(STACK[0x3E8]) ^ 0x86063186;
  LODWORD(STACK[0x438]) = HIDWORD(a57) - 2 * a58;
  LODWORD(a63) = a56 + 376816253;
  LODWORD(STACK[0x4B0]) = a53 - HIDWORD(a54);
  LODWORD(STACK[0x24C]) = HIDWORD(a55) - a55;
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x468]) ^ 0x8FAAFDA4;
  unint64_t v76 = v73 - 38938703 + ((unint64_t)(v73 < 0x252284F) << 32);
  unint64_t v77 = 0xC76BB339E9ED63B1 * (*(void *)(STACK[0xA50] + 8 * v76) ^ 0xC9C9C9C9C9C9C9C9)
      - ((0xED76673D3DAC762 * (*(void *)(STACK[0xA50] + 8 * v76) ^ 0xC9C9C9C9C9C9C9C9)) & ((v75 - 65) ^ 0x342050506AC8E704))
      - 0x65EFD7D7CA9B8E05;
  unint64_t v78 = ((2 * ((v72 ^ 0x7BAAB294610BA9A1 ^ v77) + v76)) & 0xCB7EF7DF5F49DFE6)
      + (((v72 ^ 0x7BAAB294610BA9A1 ^ v77) + v76) ^ 0x65BF7BEFAFA4EFF3);
  unint64_t v79 = v78
      + (((v78 - 0x65BF7BEFAFA4EFF3) >> 32) ^ 0x851112014099D1)
      - (((v78 - 0x65BF7BEFAFA4EFF3) >> 31) & 0x1FD7ECC5CLL);
  unint64_t v80 = v79
      + (((v79 - 0x66448D01B0E589C4) >> 16) ^ 0x3B77FFFFADFBDBFELL)
      + (((v79 - 0x66448D01B0E589C4) >> 15) & 0x1FFFF5BF7B7FCLL);
  unint64_t v81 = v80
      + (((v80 + 0x5E4372FEA11E9A3ELL) >> 8) ^ 0x3FD7F6DE7FFFE7E9)
      + (((v80 + 0x5E4372FEA11E9A3ELL) >> 7) & 0x1AFEDBCFFFFCFD2)
      + 1;
  unint64_t v82 = v81 - ((2 * v81 - 0x7D58C3C47CAAE224) & 0xBF1EFC45FF902E26) - 0x5F1CE3BF3E8D59FFLL;
  int v83 = (((2 * v82) ^ 0xFF902E26) - ((2 * ((2 * v82) ^ 0xFF902E26)) & 0x71C21120) + 2028013713) & a8 ^ 0x71011430;
  int v84 = v83 - ((2 * v83) & 0x7C2306C0);
  unint64_t v85 = ((2 * ((v77 ^ 0x459F560ACAAC66E8 ^ v82) + v76)) & 0xAF3AAFFAFF9BA7EALL)
      + (((v77 ^ 0x459F560ACAAC66E8 ^ v82) + v76) ^ 0x579D57FD7FCDD3F5);
  unint64_t v86 = v85
      + (((v85 - 0x579D57FD7FCDD3F5) >> 32) ^ 0x10105090802604)
      - (((v85 - 0x579D57FD7FCDD3F5) >> 31) & 0xDEFFB3F6);
  unint64_t v87 = v86
      + (((v86 - 0x57AD684E104DF9F9) >> 16) ^ 0xDF6F7EFDE4F5D7DFLL)
      + (((v86 - 0x57AD684E104DF9F9) >> 15) & 0xFDFBC9EBAFBELL);
  unint64_t v88 = v87
      + (((v87 - 0x371CE74BF543D1D8) >> 8) ^ 0x3A7F5FFDAFBBB7BBLL)
      + (((v87 - 0x371CE74BF543D1D8) >> 7) & 0xFEBFFB5F776F76)
      + 1;
  unint64_t v89 = (v88 - ((2 * v88 + 0x1CC7716CB600ECD8) & 0x29A5FF9D398C051CLL) + 0x2336B884F7C678FALL) ^ 0x94D2FFCE9CC6028ELL;
  unint64_t v90 = v89 - ((2 * v89 + 0x45D043FB4117B934) & 0xFD4BFFBA93B3B9D6) + 0x218E21DAEA65B985;
  int v91 = 2 * (v89 - ((2 * v89 + 1092073780) & 0x93B3B9D6) - 362432123);
  int v92 = ((v91 ^ 0x93B3B9D6) + 54363238 - 2 * ((v91 ^ 0x93B3B9D6) & 0x33D846E ^ v91 & 8)) & a8 ^ 0x25000210;
  LODWORD(v89) = (v92 - ((2 * v92) & 0x72200EC0) - 1187901594) & 0xFFFBFFF8 ^ (v89
                                                                             - ((2 * v89 + 1092073780) & 0x93B3B9D6)
                                                                             - 362432123);
  unint64_t v93 = ((2 * ((v77 ^ 0xE4B5D7F57CBDAD10 ^ v90) + v76)) & 0xCFBECBFFFE5FFEDALL)
      + (((v77 ^ 0xE4B5D7F57CBDAD10 ^ v90) + v76) ^ 0x67DF65FFFF2FFF6DLL);
  unint64_t v94 = v93
      + (((v93 - 0x67DF65FFFF2FFF6DLL) >> 32) ^ 0xC866401099001863)
      - (((v93 - 0x67DF65FFFF2FFF6DLL) >> 31) & 0xCDFFCF38);
  unint64_t v95 = v94
      + (((v94 - 0x3045A610983017D0) >> 16) ^ 0x54DCFF57DFD7747FLL)
      + (((v94 - 0x3045A610983017D0) >> 15) & 0x1FEAFBFAEE8FELL);
  unint64_t v96 = v95
      + (((v95 + 0x7ADD5A9787F873B1) >> 8) ^ 0x7D3DE6C3F89FDFDDLL)
      + (((v95 + 0x7ADD5A9787F873B1) >> 7) & 0x7BCD87F13FBFBALL)
      + 1;
  unint64_t v97 = v96 - 2 * ((v96 + 1604223520) & 0x6FE81C36 ^ v96 & 0x10) - 813261242;
  int v98 = ((2 * v97) ^ 0xDFD0384C) - ((2 * ((2 * v97) ^ 0xDFD0384C)) & 0x15761B60) - 893710928;
  unsigned int v99 = (v98 & 0x22118330 ^ 0xA0006291) + (v98 & 0x5D081448 ^ 0x45001001) - 2;
  LODWORD(v80) = v96 - ((2 * v96 + 1607000282) & 0xA8DFB0B4) - 2074851129;
  LODWORD(v95) = (((2 * v80) ^ 0xA8DFB0B4) - ((2 * ((2 * v80) ^ 0xA8DFB0B4)) & 0x23CBD6DC) + 1374022511) & a8 ^ 0x7D089240;
  return ((uint64_t (*)(void, void, uint64_t, unint64_t, void, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (v75 ^ (4 * (STACK[0x568] > v73 - 38938702)))))(v73 - 38938702, (v84 - 1099707548) & 0xFFFFFFF8 ^ v82 ^ v74 ^ v89 ^ (-1233421293- (v95 | 0xB67B7C13)+ (v95 | 0x498483EC)) ^ v80, 4294705144, STACK[0xA50], ((v99 & 0x33011810 ^ 0x10021003) + (v99 ^ 0xAB116FB0) - ((v99 ^ 0xAB116FB0) & 0x33011810)) ^ v97, v97, (v99 ^ 0xAB116FB0) & 0x33011810, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

void sub_1001D1C9C()
{
}

uint64_t sub_1001D1CC8@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  LODWORD(STACK[0x3D4]) ^= LODWORD(STACK[0x478]);
  LODWORD(STACK[0x444]) = LODWORD(STACK[0x36C]) - LODWORD(STACK[0x380]);
  LODWORD(STACK[0x380]) = LODWORD(STACK[0x248]) - LODWORD(STACK[0x368]);
  LODWORD(STACK[0x368]) = a65 - a66;
  LODWORD(STACK[0x36C]) = a60 - a61;
  LODWORD(STACK[0x478]) = a63 ^ LODWORD(STACK[0x37C]) ^ LODWORD(STACK[0x458]);
  LODWORD(STACK[0x468]) = a59 + a56;
  int v67 = STACK[0x234];
  LODWORD(STACK[0x248]) = a57 - a58;
  LODWORD(STACK[0x234]) = v67 ^ 0x7DDCC2CF;
  unint64_t v68 = v66
      + (((unint64_t)(v66 - 0x75014711FDA3A804) >> 24) ^ 0x8004A160085522B0)
      - (((unint64_t)(v66 - 0x75014711FDA3A804) >> 23) & 0x13FEF55BA9ELL);
  unint64_t v69 = v68
      + (((v68 + 0xAFA178DFA07354CLL) >> 14) ^ 0xBAFF7DC9F9FFA2EFLL)
      + (((v68 + 0xAFA178DFA07354CLL) >> 13) & 0x6FB93F3FF45DELL);
  unint64_t v70 = v69
      + (((v69 + 0x4FFA99C40007925DLL) >> 7) ^ 0xE0AC1C484300D1CLL)
      - (((v69 + 0x4FFA99C40007925DLL) >> 6) & 0x3EA7C76F79FE5C6);
  unint64_t v71 = (((v70 + 0x6052247533A9D9A6) >> 28) ^ 0x5BE9F3F6735FFF5BLL)
      + v70
      + 2
      + (((v70 + 0x6052247533A9D9A6) >> 27) & 0xCE6BFFEB6);
  unint64_t v72 = (((v71 + 0x468307EC049DA49) >> 8) ^ 0x7F58BBD337DF7FFCLL)
      + v71
      + (((v71 + 0x468307EC049DA49) >> 7) & 0xB177A66FBEFFF8);
  unint64_t v73 = v72
      + (((v72 - 0x7AF08B547795A5B3) >> 2) ^ 0xAC440A8818105200)
      - (((v72 - 0x7AF08B547795A5B3) >> 1) & 0x2777EAEFCFDF5BFELL);
  unint64_t v74 = (((v73 + 0x5250F7179CC8BD16) >> 27) ^ 0x73EDEEDFEF1FDFFELL)
      + v73
      + 1
      + (((v73 + 0x5250F7179CC8BD16) >> 26) & 0x3FDE3FBFFCLL);
  unint64_t v75 = v74
      + (((v74 - 0x219CF7C8525722E9) >> 14) ^ 0x104012907110C016)
      - (((v74 - 0x219CF7C8525722E9) >> 13) & 0x7DADF1DDE7FD2);
  unint64_t v76 = v75
      + (((v75 - 0x31DD0A58C367E2FFLL) >> 6) ^ 0xAC00040104200C20)
      - (((v75 - 0x31DD0A58C367E2FFLL) >> 5) & 0x7FFF7FDF7BFE7BELL);
  LODWORD(v75) = ((2 * (v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0x485A5636)) + 961181684) ^ 0xC85A5636)
               - 2
               * (((2 * (v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0x485A5636)) + 961181684) ^ 0xC85A5636) & 0x117CE0BC ^ (2 * ((_BYTE)v76 + 2 - ((2 * ((_BYTE)v76 + 2) - 66) & 0x36)) + 4) & 8)
               - 780345163;
  int v77 = v76 + 2 - ((2 * (v76 + 2) + 1894785470) & 0xA87A1FFC) - 1934286627;
  unint64_t v78 = v76
      + 2
      + (((v76 + 0x4A7E5246B39B0F50) >> 27) ^ 0xA08001414F0AD12ALL)
      - (((v76 + 0x4A7E5246B39B0F50) >> 26) & 0x3D61EA5DAALL);
  unint64_t v79 = v78
      + (((v78 - 0x5601AEFA9B6FC1DCLL) >> 11) ^ 0x91D040A6C0490901)
      - (((v78 - 0x5601AEFA9B6FC1DCLL) >> 10) & 0x1F7EB27F6DEDFCLL);
  unint64_t v80 = v79
      + (((v79 + 0x182E105EA4473523) >> 7) ^ 0xBBFAFD7FD7D7EFFFLL)
      + (((v79 + 0x182E105EA4473523) >> 6) & 0x3F5FAFFAFAFDFFELL)
      + 2;
  uint64_t v81 = v80 + 0x53E8CEB9614D20B1 + (~(2 * v80 - 0x4799DA42672175BCLL) | 0x1094884AD64448E3);
  unint64_t v82 = ((2 * ((v81 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976)) & 0xFC2D8FDEAEE7FBFCLL)
      + (((v81 ^ 0xF7B5BBDA94DDDB8ELL) + 0x2CA9E7BAB642E976) ^ 0x7E16C7EF5773FDFELL);
  unint64_t v83 = (((v82 - 0x7E16C7EF5773FDFELL) >> 27) ^ 0xFEFEFE5BF5BFF5C5)
      + v82
      + (((v82 - 0x7E16C7EF5773FDFELL) >> 26) & 0x37EB7FEB8ALL);
  unint64_t v84 = v83
      + (((v83 - 0x7D15C64B4D33F3C3) >> 8) ^ 0x440008050A4001)
      - (((v83 - 0x7D15C64B4D33F3C3) >> 7) & 0x177FFEFF5EB7FFCLL);
  unint64_t v85 = v84
      + (((v84 - 0x7D59C653523E33C4) >> 6) ^ 0xFDF5F6BFEE32FBAFLL)
      + (((v84 - 0x7D59C653523E33C4) >> 5) & 0x3EBED7FDC65F75ELL)
      + 1;
  unint64_t v86 = v85 - ((2 * v85 + 0x96085D97F1DA118) & 0x84180501B11C8C2) - 0x772EFCEB32E84B13;
  unint64_t v87 = (v86 ^ 0x3ED5DB549D1022A5)
      + ((v86 >> 24) ^ 0x30A1A3CD4DA5D3FLL)
      + ((v86 >> 23) & 0x1FBFDFDECBALL ^ 0xFFFFFF86564B57C5)
      - 0x30A1A02010109A1;
  unint64_t v88 = (((((2 * v87) & 0xFF64FFFFFFBFFBD6) + (v87 ^ 0xFFB27FFFFFDFFDEBLL) + 0x4D800000200215) >> 10) ^ 0x6FFFFB27BDBAFB7FLL)
      + ((2 * v87) & 0xFF64FFFFFFBFFBD6)
      + (v87 ^ 0xFFB27FFFFFDFFDEBLL)
      + (((((2 * v87) & 0xFF64FFFFFFBFFBD6) + (v87 ^ 0xFFB27FFFFFDFFDEBLL) + 0x4D800000200215) >> 9) & 0x7FF64F7B75F6FELL);
  unint64_t v89 = v88
      + (((v88 - 0x6FB27B27BD9AF96ALL) >> 5) ^ 0x840007A118104106)
      - (((v88 - 0x6FB27B27BD9AF96ALL) >> 4) & 0x7FFF0BDCFDF7DF2)
      + 1;
  uint64_t v90 = v89 + 0x611AA1A6B236087 + (~(2 * v89 + 0x189AFA6E54A98B1ELL) | 0xC77A6397E62CA11);
  LODWORD(v89) = ((2 * v90) ^ 0x819D35EE) - ((2 * ((2 * v90) ^ 0x819D35EE)) & 0xBD301B0) - 974552872;
  LODWORD(v89) = (v89 & 0x43081278 ^ 0xAFF | v89 & 0x3C118500) - 1;
  LODWORD(v89) = ((v89 & 0x7E099706 ^ 0x3E638500) + (v89 ^ 0x41881A2F) - ((v89 ^ 0x41881A2F) & 0x7E099700)) ^ v90;
  unint64_t v91 = ((2 * ((v90 ^ 0xF9C42CE340CE9AF7) - 0x5F6C9CB288BB47ADLL)) & 0xDFDF9D9FBFBFF7F4)
      + (((v90 ^ 0xF9C42CE340CE9AF7) - 0x5F6C9CB288BB47ADLL) ^ 0xEFEFCECFDFDFFBFALL);
  unint64_t v92 = v91
      + (((v91 + 0x1010313020200406) >> 29) ^ 0x8028130004E80CA0)
      - (((v91 + 0x1010313020200406) >> 28) & 0xFF62FE6BELL);
  unint64_t v93 = v92
      + (((v92 - 0x7017E1CFE4C8089ALL) >> 11) ^ 0xFF77FFEF6BA2F3FBLL)
      + (((v92 - 0x7017E1CFE4C8089ALL) >> 10) & 0x2FFFDED745E7F6);
  unint64_t v94 = v93
      + (((v93 - 0x6F8FE1BF506AFC95) >> 8) ^ 0x60081808F098A0C8)
      - (((v93 - 0x6F8FE1BF506AFC95) >> 7) & 0x1EFCFEE1ECEBE6ELL)
      + 2;
  unint64_t v95 = v94 - ((2 * v94 + 0xD00C6F7DF8C542) & 0xE0ED654B0B0EDB6) + 0x376F71621754D97CLL;
  unint64_t v96 = (v95 ^ 0xB22B2720A5AEC5D2)
      + ((v95 >> 31) ^ 0x77EF6BD61B08B1BFLL)
      + ((v95 >> 30) & 0x2FEBDFFFCLL ^ 0x2C8AC9C80)
      - 0x77EF6BD77F5EFFFELL;
  unint64_t v97 = ((2 * v96) & 0xFDFEFDE3D7FEF3DCLL)
      + (v96 ^ 0x7EFF7EF1EBFF79EELL)
      + (((((2 * v96) & 0xFDFEFDE3D7FEF3DCLL) + (v96 ^ 0x7EFF7EF1EBFF79EELL) - 0x7EFF7EF1EBFF79EELL) >> 13) ^ 0x1024448220808040)
      - (((((2 * v96) & 0xFDFEFDE3D7FEF3DCLL) + (v96 ^ 0x7EFF7EF1EBFF79EELL) - 0x7EFF7EF1EBFF79EELL) >> 12) & 0x776FBBEFEFF7ELL);
  unint64_t v98 = v97
      + (((v97 + 0x70DC3C8BF38005D2) >> 6) ^ 0x6F5FEBBBDF970FE8)
      + (((v97 + 0x70DC3C8BF38005D2) >> 5) & 0x6BFD777BF2E1FD0)
      + 1;
  uint64_t v99 = v98 - ((2 * v98 + 0x2F8A1A027D1EBD2) & 0x49C577F9D78D4DCALL) - 0x59A0F33300506332;
  unint64_t v100 = ((2 * ((v99 ^ 0xA4E2BBFCEBC6A6E5) + 0xDD7C7F76974F1B8)) & 0xEA7F9FDFE86FABDELL)
       + (((v99 ^ 0xA4E2BBFCEBC6A6E5) + 0xDD7C7F76974F1B8) ^ 0xF53FCFEFF437D5EFLL);
  unint64_t v101 = v100
       + (((v100 + 0xAC030100BC82A11) >> 29) ^ 0x24200D21A0408434)
       - (((v100 + 0xAC030100BC82A11) >> 28) & 0xCBF7EF796);
  unint64_t v102 = v101
       + (((v101 - 0x195FDD1194785A23) >> 8) ^ 0x8068080130402032)
       - (((v101 - 0x195FDD1194785A23) >> 7) & 0x12FEFFD9F7FBF9ALL);
  LODWORD(v102) = v102
                + (((v102 + 0x66381AED3B4785ABLL) >> 4) ^ 0xC5250591)
                - (((v102 + 0x66381AED3B4785ABLL) >> 3) & 0x75B5F4DC)
                + 2;
  LODWORD(v102) = v102 - ((2 * v102 - 331022288) & 0xDB2DED6E) + 1673098959;
  LODWORD(v99) = ((2 * v102) ^ 0xDB2DED6E) - ((2 * ((2 * v102) ^ 0xDB2DED6E)) & 0x3155F334) - 1733625445;
  LODWORD(v99) = (v99 & 0x22019220 ^ 0x203F285 | v99 & 0x5D180558) - 1;
  LODWORD(v89) = a1 ^ v77 ^ ((v75 & 0x7F199778 ^ 0x811506AE)
                           + (v75 & 0x4B109320 ^ 0x4AE2D901)
                           - ((v75 & 0x7F199778 ^ 0x811506AE) & 0xCB1493A4)) ^ v89 ^ 0x4E0CE215 ^ ((v99 & 0x7C180718 ^ 0x50184C1F)
                                                                                                 + (v99 & 0x3019060 ^ 0x2018001)
                                                                                                 - 2) ^ v102;
  LOBYTE(v102) = *(unsigned char *)(STACK[0x570]
                          + ((*(unsigned char *)(STACK[0x570]
                                       + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 13) + 10) & 0xF)) + 9) & 0xF))
                            + 3) & 0xF))
               + 11;
  LODWORD(v102) = ((v102 & 0xF) - 2 * (v102 & 7) - 57) ^ 0xC7;
  unsigned int v103 = (v102 ^ 0x457FAFD5) + ((2 * v102) & 0x1AA) - 59694301;
  LODWORD(STACK[0x458]) = LODWORD(STACK[0x47C]) ^ 0x2804E132;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x4F8]) >> 3;
  LODWORD(v75) = ((2 * *(unsigned __int8 *)STACK[0x570]) & 0xDE)
               + (*(unsigned __int8 *)STACK[0x570] ^ ((a2 ^ 0xC7B75599) + 783379972));
  int v104 = 1364176807 * v75 - ((-1566613682 * v75 - 384140498) & 0xF97AAF72) - 246770352;
  LODWORD(v75) = ((2 * (v104 ^ 0x94BDA38D)) & 0xFFDFFEDA) + (v104 ^ 0x6B525CE0);
  LODWORD(v75) = (((v75 + 1048723) >> 16) ^ 0xEAEDF5BB)
               + v75
               + ((2 * ((v75 + 1048723) >> 16)) & 0x1EB76);
  int v105 = (((v75 + 354552536) >> 8) ^ 0xDDBBFF53)
       + v75
       + (((v75 + 354552536) >> 7) & 0x177FEA6);
  unsigned int v106 = v105 - ((2 * v105 - 1882156850) & 0xBE374556) + 654568210;
  LODWORD(v75) = (((2 * v106) ^ 0xBE374556) + 12906792 - ((2 * ((2 * v106) ^ 0xBE374556)) & 0x189E250)) & 0x7F199778 ^ 0x4F081208;
  LODWORD(v75) = (((2 * v75) | 0x6E0893CC) - v75 - 923027942) ^ 0xF6A849E6;
  LODWORD(v99) = ((2 * (v104 ^ 0xA3A6F512 ^ v106)) & 0xFA5FFFFE) + (v104 ^ 0xA3A6F512 ^ v106 ^ 0x7D2FFFFF);
  LODWORD(v99) = (((v99 - 2100297727) >> 16) ^ 0xAF7DBFBC)
               + v99
               + ((2 * ((v99 - 2100297727) >> 16)) & 0x17F78);
  int v107 = (((v99 - 749584315) >> 8) ^ 0xF7FEE2FF)
       + v99
       + (((v99 - 749584315) >> 7) & 0x1FDC5FE);
  int v108 = v107 - 2 * ((v107 + 198548008) & 0x1562427F ^ v107 & 7) - 2127045472;
  LODWORD(v80) = ((2 * v108) ^ 0x2AC484F0) - 2 * (((2 * v108) ^ 0x2AC484F0) & 0x279167DC ^ (2 * v108) & 8) - 409901099;
  int v109 = (v80 & 0x1D001658 ^ 0x9042380B) + (v80 & 0x62198120 ^ 0x42018121);
  LODWORD(v80) = ((2 * (v104 ^ 0xE9DF15C1 ^ v108)) & 0xBF7D757A) + (v104 ^ 0xE9DF15C1 ^ v108 ^ 0x5FBEBABD);
  LODWORD(v80) = (((v80 - 1606335165) >> 16) ^ 0x42FD377A)
               + v80
               + (((v80 - 1606335165) >> 15) & 0x6EF4);
  LODWORD(v80) = (((v80 + 1564741065) >> 8) ^ 0xEF7FBBFF)
               + v80
               + (((v80 + 1564741065) >> 7) & 0xFF77FE);
  LODWORD(v80) = v80 - ((2 * v80 + 461939604) & 0x12366FBA) + 1994361255;
  int v110 = (v80 ^ 0x91B37DD) - ((2 * (v80 ^ 0x91B37DD) + 17070532) & 0x1BDE9E6C) + 510757912;
  LODWORD(v99) = (((2 * v110) ^ 0x1BDE9E6C)
                + 1738678006
                - 2 * (((2 * v110) ^ 0x1BDE9E6C) & 0x27A22562 ^ (2 * v110) & 2)
                + 1643) & 0x7F199778 ^ 0x2D088710;
  uint64_t v111 = v89 ^ v106 ^ (v75 - ((2 * v75) & 0xA95F705C) + 1420802095) ^ v108 ^ (((v109 - 2) ^ 0x7C37E66F) - 1) ^ v110 ^ 0x7BEE39EF ^ (((((2 * v99) | 0x6F350A8) - v99 + 2089179052) & 0x279095C4 ^ 0x26009505) + ((((2 * v99) | 0x6F350A8) - v99 + 2089179052) ^ 0xC1F74AF0) - (((((2 * v99) | 0x6F350A8) - v99 + 2089179052) ^ 0xC1F74AF0) & 0x279095C4));
  BOOL v112 = v103 > 0x41F0D2F9;
  if (v103 < 0x41F0D2F8) {
    BOOL v112 = 1;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((499 * !v112) ^ a2)))(663786948, 305557434, v111);
}

uint64_t sub_1001D364C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v77 = v73 + 944289327;
  LODWORD(STACK[0x3BC]) ^= LODWORD(STACK[0x244]);
  LODWORD(STACK[0x244]) = LODWORD(STACK[0x238]) - LODWORD(STACK[0x240]);
  LODWORD(STACK[0x208]) = a73 - 2 * LODWORD(STACK[0x208]);
  LODWORD(STACK[0x238]) = a69 - a70;
  LODWORD(STACK[0x454]) = a71 - a72;
  int v78 = *(unsigned __int8 *)(STACK[0x570] + v75);
  uint64_t v79 = (v77 - 1942) | 0x500u;
  int v80 = (v79 ^ 0x4F9924B6)
      + 1364176807 * ((v78 ^ 0x35BBCFFF) + 2 * v78)
      - ((580869966 * ((v78 ^ 0x35BBCFFF) + 2 * v78) + 557186894) & 0x3DFC4416);
  unsigned int v81 = ((2 * (v75 + (v76 ^ 0x93116D3D ^ v80))) & 0xB7DF93AE) + ((v75 + (v76 ^ 0x93116D3D ^ v80)) ^ 0xDBEFC9D7);
  unsigned int v82 = (((v81 + 605042217) >> 16) ^ 0x7AB6DEB7) + v81 + ((2 * ((v81 + 605042217) >> 16)) & 0x1BD6E);
  unsigned int v83 = (((v82 - 1453762702) >> 8) ^ 0xEFF720FD) + v82 + (((v82 - 1453762702) >> 7) & 0x1EE41FA);
  unsigned int v84 = v83 - ((2 * v83 + 1925475562) & 0xBEA819E2) + 414597990;
  int v85 = 2 * (v84 ^ 0x5F540CF1);
  unsigned int v86 = (v84 ^ 0x5F540CF1) - ((v85 + 276970722) & 0xE48C224A) + 2055679894;
  unsigned int v87 = ((2 * v86) ^ 0xE48C224A) - 2 * (((2 * v86) ^ 0xE48C224A) & 0x2442FF52 ^ (2 * v86) & 0x10) - 1539113150;
  int v88 = (v87 & v74 ^ 0x4E081540) + (v87 & 0x3E100350 ^ 0x30F24213) - ((v87 & v74 ^ 0x4E081540) & 0x3E100350);
  uint64_t v89 = v88 & 0xFB71AAA0 ^ 0xE30128A1 | v88 & 0x4885558;
  unsigned int v90 = (v84 ^ 0x5F540CF1) - ((v85 + 553941444) & 0xCCC90E28) + 1994834934;
  unsigned int v91 = ((2 * v90) ^ 0xCCC90E28) - 2 * (((2 * v90) ^ 0xCCC90E28) & 0x3AF38B54 ^ (2 * v90) & 0x14) - 84702399;
  int v92 = (v91 & 0x22181160 ^ 0xC05825 | v91 & 0x5D018618) - 1;
  unsigned int v93 = (v92 & 0x4600970C ^ 0x84060208) + (v92 ^ 0x72D0FDE4) - ((v92 ^ 0x72D0FDE4) & 0x4600B708);
  unsigned int v94 = ((2 * (v75 + (v80 ^ 0xF89AA51F ^ v90))) & 0x7FBFE7AA) + ((v75 + (v80 ^ 0xF89AA51F ^ v90)) ^ 0xBFDFF3D5);
  unsigned int v95 = (((v94 + 1075842091) >> 16) ^ 0x7FAF8BA7) + v94 + ((2 * ((v94 + 1075842091) >> 16)) & 0x1174E);
  unsigned int v96 = (((v95 - 1066368892) >> 8) ^ 0xBECD7B7E) + v95 + (((v95 - 1066368892) >> 7) & 0x19AF6FC);
  int v97 = v96 - ((2 * v96 + 331892462) & 0x132D9A6A) - 1820659540;
  int v98 = ((2 * v97) ^ 0x132D9A6A) - ((2 * ((2 * v97) ^ 0x132D9A6A)) & 0x72AA7184) - 111855421;
  unsigned int v99 = ((v98 & 0x4F091560 ^ 0xCDC15005) + (v98 & 0x30108218 ^ 0x30000211) - 2) ^ 0x8ED95154;
  uint64_t v100 = v99 - ((2 * v99) & 0x56132600);
  unsigned int v101 = v96 - ((2 * v96 + 608863184) & 0xAF43D77C) + 1774661030;
  unsigned int v102 = (((2 * v101) ^ 0xAF43D77C) - ((2 * ((2 * v101) ^ 0xAF43D77C)) & 0x7D0B9C5C) + 1048956462) & v74 ^ 0x7E0962D;
  unsigned int v103 = ((2 * (v75 + (v80 ^ 0xC95FC9B5 ^ v101))) & 0xF2EEF77E) + ((v75 + (v80 ^ 0xC95FC9B5 ^ v101)) ^ 0xF9777BBF);
  unsigned int v104 = (((v103 + 109610049) >> 16) ^ 0x67FF7F79) + v103 + (((v103 + 109610049) >> 15) & 0xFEF2);
  unsigned int v105 = (((v104 - 1635187512) >> 8) ^ 0x5FEBFDF3) + v104 + (((v104 - 1635187512) >> 7) & 0x1D7FBE6);
  unsigned int v106 = v105 - ((2 * v105 - 1917039988) & 0xA530511C) - 1720300076;
  unsigned int v107 = (((2 * v106) ^ 0xA530511C) - 2 * (((2 * v106) ^ 0xA530511C) & 0x20005206 ^ (2 * v106) & 2) + 1610633732) & v74 ^ 0x87477D4B;
  int v108 = v105 - ((2 * v105 + 507414382) & 0x1BDE9E6C) + 1561236205;
  unsigned int v109 = (((2 * v108) ^ 0x1BDE9E6C) - ((2 * ((2 * v108) ^ 0x1BDE9E6C)) & 0x51C5F614) + 685964042) & v74 ^ 0xAA00F838;
  return ((uint64_t (*)(void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((59 * (v75 + 1 < 0x10)) ^ v77)))(((2 * v107) & 0x3AA3F6B4) - v107, a3 ^ v90 ^ v93, a3 ^ v90 ^ v93 ^ v101 ^ (-118725562 - v102 + ((2 * v102) | 0xE27188C) + 3956) ^ v108 ^ 0xA0B32EDE ^ (v109 - ((2 * v109) & 0xDC10D670) - 294884419), 1041236816, 321755754, v100, v79, v89, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1001D3EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v72 = (a7 + 515129559) & 0xE14BBEEF;
  LODWORD(STACK[0x394]) ^= LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x548]) ^ a69;
  LODWORD(STACK[0x4A8]) = LODWORD(STACK[0x204]) - LODWORD(STACK[0x378]);
  unsigned int v73 = (((v70 + 152164364) >> 8) ^ 0xB56EFBAC)
      + v70
      + (((v70 + 152164364) >> 7) & 0xDDF758);
  unsigned int v74 = v73 + (((v73 + 1403182176) >> 5) ^ 0x83129125) - (((v73 + 1403182176) >> 4) & 0x9DADDB4) + 1;
  unsigned int v75 = v74 - 556438370 + (~(2 * v74 + 18912884) | 0xE375B375) + 1250;
  unsigned int v76 = ((2 * ((v75 ^ 0xE452645) - 1879573490)) & 0xDFFAFFFE) + (((v75 ^ 0xE452645) - 1879573490) ^ 0x6FFD7FFF);
  unsigned int v77 = (((v76 - 1878884351) >> 10) ^ 0x7F82F2FE) + v76 + (((v76 - 1878884351) >> 9) & 0x5E5FC);
  unsigned int v78 = ((v77 + 276794627) & 0xEF26FDDA) + v77 + (((v77 + 276794627) >> 1) ^ 0xF7937EED);
  int v79 = v78 - ((2 * v78 + 836246572) & 0x55CA40D6) + 1137782401;
  unsigned int v80 = ((2 * ((v79 ^ 0x2AE5206B) + 1287124013)) & 0xF1DDEBDE) + (((v79 ^ 0x2AE5206B) + 1287124013) ^ 0x78EEF5EF);
  unsigned int v81 = v80 + (((v80 - 2028926447) >> 13) ^ 0x4880088) - ((2 * ((v80 - 2028926447) >> 13)) & 0xFFEEE) + 1;
  unsigned int v82 = (((v81 - 2104948344) >> 5) & 0x57AFB76) + (((v81 - 2104948344) >> 6) ^ 0xB6BD7DBB);
  unsigned int v83 = v82 + v81 + ((2 * v82 - 1836776310) ^ 0x1000C217) - ((2 * (2 * v82 - 1836776310)) & 0xDFFE7BD0);
  int v84 = v83 - ((2 * v83 + 2006291308) & 0x6D39348E) - 228105219;
  int v85 = ((2 * ((v84 ^ 0x369C9A47) - 1282870125)) & 0x41FCFEF2) + (((v84 ^ 0x369C9A47) - 1282870125) ^ 0x20FE7F79);
  unsigned int v86 = (((v85 - 553549689) >> 8) ^ 0xBBADC22D)
      + v85
      + (((v85 - 553549689) >> 7) & 0x15B845A);
  unsigned int v87 = (((v86 + 592690778) >> 2) ^ 0x29FBBFFF) + v86 + (((v86 + 592690778) >> 1) & 0x53F77FFE);
  unsigned int v88 = v87 - ((2 * v87 - 223347530) & 0xB3EE8AE8) - 749780017;
  unsigned int v89 = ((2 * ((v88 ^ 0xD9F74574) + 707258702)) & 0xE7FBFED8) + (((v88 ^ 0xD9F74574) + 707258702) ^ 0xF3FDFF6C);
  unsigned int v90 = (((v89 + 201457812) >> 13) ^ 0x96D63D66) + v89 + (((v89 + 201457812) >> 12) & 0xC7ACC);
  unsigned int v91 = (((v90 + 1965802286) >> 3) ^ 0x5F7FCFBF) + v90 + (((v90 + 1965802286) >> 2) & 0x3EFF9F7E);
  unsigned int v92 = v91 - 424714034 - ((2 * v91 + 727181022) & 0xA206DABE);
  int v93 = v92 ^ v79;
  unsigned int v94 = (v92 ^ 0x5A8C3BD5) + ((v92 >> 11) ^ 0x4B5895) + ((v92 >> 10) & 0x3FEDDA ^ 0xFFE95EF5) - 4196625;
  unsigned int v95 = (((((2 * v94) & 0x66B279B8) + (v94 ^ 0xB3593CDC) + 1285997348) >> 5) ^ 0x6FF5FF3A)
      + ((2 * v94) & 0x66B279B8)
      + (v94 ^ 0xB3593CDC)
      + (((((2 * v94) & 0x66B279B8) + (v94 ^ 0xB3593CDC) + 1285997348) >> 4) & 0xFEBFE74);
  unsigned int v96 = v95 - ((2 * v95 - 1184790572) & 0xE4BCCD52) + 1326394003;
  unsigned int v97 = (v96 ^ 0x4602B251) + ((v96 >> 12) ^ 0x994100D) + ((v96 >> 11) & 0x1F1FB2 ^ 0xFFF7FFED) - 160460837;
  unsigned int v98 = (((((2 * v97) & 0x7B9EF7E4) + (v97 ^ 0xBDCF7BF2) + 1110475790) >> 7) ^ 0x8FFFA473)
      + ((2 * v97) & 0x7B9EF7E4)
      + (v97 ^ 0xBDCF7BF2)
      + (((((2 * v97) & 0x7B9EF7E4) + (v97 ^ 0xBDCF7BF2) + 1110475790) >> 6) & 0x3FF48E6);
  int v99 = v98 - ((2 * v98 + 1684127542) & 0x4FA34B88) + 1510114655;
  unsigned int v100 = ((2 * ((v99 ^ 0xA7D1A5C4) - 2045107421)) & 0xF7FFCFBE) + (((v99 ^ 0xA7D1A5C4) - 2045107421) ^ 0x7BFFE7DF);
  unsigned int v101 = (((2 * (v88 ^ v75 ^ v99)) ^ 0xE0C78DEA)
        - ((2 * ((2 * (v88 ^ v75 ^ v99)) ^ 0xE0C78DEA)) & 0x6B1C2124)
        + 1972244626) & v69 ^ 0x59008618;
  unsigned int v102 = (((2 * v101) & 0x96130260) - v101 - 1269678386) ^ 0x9478AE47;
  unsigned int v103 = v71 ^ v75 ^ v88 ^ v99 ^ ((v102 | 0x9CC7E6FB) - (v102 | 0x63381904) + 1664620804);
  unsigned int v104 = (((v100 - 2080368607) >> 11) ^ 0xFE5DBB5D) + v100 + (((v100 - 2080368607) >> 10) & 0x3B76BA);
  unsigned int v105 = v104 + (((v104 - 2052956988) >> 8) ^ 0xFE049440) - (((v104 - 2052956988) >> 7) & 0x1F6D77E) + 1;
  unsigned int v106 = v105 - ((2 * v105 + 255561990) & 0x7D09165A) + 1176654768;
  unsigned int v107 = (v106 ^ 0x8414057E) + ((v106 >> 8) ^ 0x80C72411) + ((v106 >> 7) & 0x1799FD6 ^ 0xFEF7F7FD) + 2143080429;
  unsigned int v108 = (((((2 * v107) & 0xF9525D78) + (v107 ^ 0x7CA92EBC) - 2091462332) >> 8) ^ 0xDDAFE4B7)
       + ((2 * v107) & 0xF9525D78)
       + (v107 ^ 0x7CA92EBC)
       + (((((2 * v107) & 0xF9525D78) + (v107 ^ 0x7CA92EBC) - 2091462332) >> 7) & 0x15FC96E);
  unsigned int v109 = v108 - ((2 * v108 + 1263393050) & 0xFC6C83E2) + 601697918;
  HIDWORD(v153) = (((((2 * (v93 ^ v106)) ^ 0x8AC58C32)
                   - ((2 * ((2 * (v93 ^ v106)) ^ 0x8AC58C32)) & 0x49C55DC)
                   - 2108806417) & 0x5A109318 ^ 0x8AE6119D)
                 - 1) & 0xDAD2931C;
  unsigned int v110 = (a67 ^ 0x4BF69DB4) + (a67 ^ 0xD429C207 ^ v103) + 1;
  unsigned int v111 = (v103 ^ ((v103 ^ 0x9FDF5FB3) - ((2 * (v103 ^ 0x9FDF5FB3) + 2) & 0x6249BF40) - 1322983519) ^ (v110 - ((2 * v110) & 0xB2CE2912) + 1499927689) ^ 0x88636B65)
       + (a67 ^ 0x4BF69DB4);
  LODWORD(v153) = (2 * v111) & 0x5563677C;
  HIDWORD(v152) = v111 + 716288958;
  unsigned int v112 = ((2 * LODWORD(STACK[0x444])) ^ 0xEFA69374)
       - 2 * (((2 * LODWORD(STACK[0x444])) ^ 0xEFA69374) & 0x1B1544C8 ^ (2 * LODWORD(STACK[0x444])) & 8)
       - 1693104960;
  int v113 = (v112 & v69 ^ 0x32109560) + (v112 & 0x7A100710 ^ 0x48246A95) - ((v112 & v69 ^ 0x32109560) & 0x7A100710);
  int v114 = STACK[0x418];
  LODWORD(v152) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x4C8]);
  int v115 = (((2 * v152) ^ 0x659031F4) - ((2 * ((2 * v152) ^ 0x659031F4)) & 0x70E2E524) + 946958994) & v69 ^ 0x3A0F0531;
  HIDWORD(a61) = ((2 * v115) | 0x31BB2056) - v115 - 417173547;
  unint64_t v116 = STACK[0xA50];
  unint64_t v117 = (*(void *)(STACK[0xA50] + 8 * (0x8EA31169 % STACK[0x568])) ^ 0xC9C9C9C9C9C9C9C9)
       + 1547586649;
  unint64_t v118 = STACK[0x4C0];
  unint64_t v119 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v117 ^ 0xFDB7DBF4DFEDEF3FLL) + 0x248240B201210C1 + ((2 * v117) & 0xFB6FB7E9BFDBDE7ELL))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 2207661067u;
  unint64_t v120 = (*(void *)(STACK[0xA50]
                    + 8
                    * (((v119 ^ 0x3F6B34F3FFFC6BFALL) - 0x3F6B34F3FFFC6BFALL + ((2 * v119) & 0x7ED669E7FFF8D7F4))
                     % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
       + 1300402492;
  unint64_t v121 = ((v120 ^ 0xEDDBFFBF6BDFEEDALL) + 0x1224004094201126 + ((2 * v120) & 0xDBB7FF7ED7BFDDB4)) % STACK[0x4C0];
  STACK[0x548] = STACK[0xA50];
  unsigned int v122 = ((2 * v114) ^ 0xED57F878) - ((2 * ((2 * v114) ^ 0xED57F878)) & 0x9D559798) - 827667507;
  unint64_t v123 = (*(void *)(v116 + 8 * v121) ^ 0xC9C9C9C9C9C9C9C9) + 214590498;
  int v124 = ((v123 ^ 0xEFEDDD7CF1EBF95FLL) + 0x101222830E1406A1 + ((2 * v123) & 0xDFDBBAF9E3D7F2BELL)) % v118;
  int v125 = -212321494 - (v122 & 0x20 | 0x79AC1D95);
  if ((v122 & 0x20 & ~v114) == 0) {
    int v125 = v122 & 0x20 | 0x79AC1D95;
  }
  unsigned int v126 = v114 ^ 0xF6ABFC3C;
  LODWORD(STACK[0x240]) = v126;
  HIDWORD(a58) = (((2 * (v122 & (v69 - 32) ^ 0x16180740)) & 0x6A3208A0) - (v122 & (v69 - 32) ^ 0x16180740) - 905921652) & 0xFFFFFFF8 ^ LODWORD(STACK[0x3A0]) ^ (v126 - 2041322901 + v125 - ((2 * (v126 - 2041322901 + v125)) & 0x82E20ADA) + 1097925997);
  unsigned int v127 = (2 * (LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x494]) ^ v84 ^ v96 ^ v109)) ^ 0xF6074A2E;
  int v128 = v127 - ((2 * v127) & 0x7A9C57A8) - 45208620;
  int v129 = LODWORD(STACK[0x4D8]) ^ 0x1CF8CF87;
  unsigned int v130 = ((v124 - ((2 * v124) & 0xADA8B3B2) + 1456757209) ^ 0x2B8BC276)
       - 259262224
       + ((2 * (v124 - ((2 * v124) & 0xADA8B3B2) + 1456757209)) & 0xFABF375E ^ 0xA8A83312);
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x470]) ^ 0x25BC713E ^ v72;
  LODWORD(STACK[0x4C0]) = v113 & 0xFFFFFFF8;
  uint64_t v131 = v72 ^ 0x4E4;
  unint64_t v132 = 0xC76BB339E9ED63B1 * (*(void *)STACK[0x548] ^ 0xC9C9C9C9C9C9C9C9)
       - ((0x8ED76673D3DAC762 * (*(void *)STACK[0x548] ^ 0xC9C9C9C9C9C9C9C9)) & ((12 * v131) ^ 0xAEB96725F21256B4))
       + 0x575CB392F9092A40;
  unint64_t v133 = ((2 * (v132 ^ 0x9221AE62F5CD9AFALL)) & 0xDE9BFFFF37D67AEELL) + (v132 ^ 0xFD6C519D6E26A78DLL);
  unint64_t v134 = v133
       + (((v133 - 0x6F4DFFFF9BEB3D77) >> 32) ^ 0x901980AA122800A0)
       - (((v133 - 0x6F4DFFFF9BEB3D77) >> 31) & 0x1DBAFFEBELL);
  unint64_t v135 = v134
       + (((v134 + 0x987F5651ECC1E9) >> 16) ^ 0xDFF76BBB7D7FCBE7)
       + (((v134 + 0x987F5651ECC1E9) >> 15) & 0xD776FAFF97CELL);
  unint64_t v136 = v135
       + (((v135 + 0x20A1139AD46CF602) >> 8) ^ 0x3BBF7FFE3E9D7DBFLL)
       + (((v135 + 0x20A1139AD46CF602) >> 7) & 0x17EFFFC7D3AFB7ELL)
       + 1;
  uint64_t v137 = v136 - ((2 * v136 + 0x1C327392B9EF084) & 0x478CFA42D4A7E62) - 0x18E20491538B488DLL;
  uint64_t v138 = 2 * (v137 ^ 0x23C67D216A53F31);
  unsigned int v139 = (v137 ^ 0x16A53F31) - ((v138 - 1601446758) & 0xBC22A92A) - 1370012958;
  uint64_t v140 = (v137 ^ 0x23C67D216A53F31) - ((v138 + 0x45D043FB4117B934) & 0x7FFF4E1498E50982) - 0x1D1836F813019EA5;
  unint64_t v141 = ((2 * (v132 ^ 0x68A31498B57BAE81 ^ v140)) & 0x3EDDD55FAF2EF6F8)
       + (v132 ^ 0x68A31498B57BAE81 ^ v140 ^ 0x9F6EEAAFD7977B7CLL);
  unint64_t v142 = v141
       + (((v141 + 0x6091155028688484) >> 32) ^ 0xA010048AD1B9F721)
       - (((v141 + 0x6091155028688484) >> 31) & 0x5C8C11BC);
  unint64_t v143 = v142
       + (((v142 - 0x3F7EEF3AA951729DLL) >> 16) ^ 0xABFE7FAFBBB73FDDLL)
       + (((v142 - 0x3F7EEF3AA951729DLL) >> 15) & 0xFF5F776E7FBALL);
  unint64_t v144 = v143
       + (((v143 + 0x148291159AF74D86) >> 8) ^ 0x7BCBFF9DFEEE5EFALL)
       + (((v143 + 0x148291159AF74D86) >> 7) & 0x197FF3BFDDCBDF4)
       + 1;
  unint64_t v145 = (v144 - ((2 * v144 + 0x316D22EF3811DD16) & 0x22B05403AC20C342) + 0x2A0EBB797219502CLL) ^ 0x91582A01D61061A1;
  uint64_t v146 = v145 - ((2 * v145 + 0x5D043FB4117B934) & 0x97EA2F431C60566) - 0x58588C88469120B3;
  unint64_t v147 = ((2 * (v132 ^ 0x53E3E2E8E1EA28F3 ^ v146)) & 0xEDBD7F9FEF7BFE9CLL)
       + (v132 ^ 0x53E3E2E8E1EA28F3 ^ v146 ^ 0xF6DEBFCFF7BDFF4ELL);
  unint64_t v148 = v147
       + (((v147 + 0x9214030084200B2) >> 32) ^ 0x5049ACA0AFC2D222)
       - (((v147 + 0x9214030084200B2) >> 31) & 0xA07A5BBA);
  unint64_t v149 = v148
       + (((v148 - 0x47286C70A780D170) >> 16) ^ 0xCAF7F8FA7DFE7DEFLL)
       + (((v148 - 0x47286C70A780D170) >> 15) & 0x1F1F4FBFCFBDELL);
  BOOL v150 = v130 > 0x6DEB94A0;
  if (v130 < 0x6DEB949F) {
    BOOL v150 = 1;
  }
  LODWORD(a59) = v128 & 0x4C180630 ^ 0x4080031;
  LODWORD(a60) = v128 & 0x33019148 ^ 0x3242E845;
  return ((uint64_t (*)(BOOL, void, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)((463 * v150) ^ (a7 + 515129559) & 0xE14BBEEF)))(v130 < 0x6DEB949F, (-22596057- ((v146 >> 1) & 0x7FFBE43E ^ 0x88FB803C | 0xFEA73627)+ ((v146 >> 1) & 0x7FFBE43E ^ 0x88FB803C | 0x158C9D8)) ^ v146, a3, v149+ (((v149 - 0x1220656B257F4F5FLL) >> 8) ^ 0xFFBFFEFF662F7E7ELL)+ 1+ (((v149 - 0x1220656B257F4F5FLL) >> 7) & 0x17FFDFECC5EFCFCLL), v129 ^ v139, v131, 1089807006, 712649025, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           v152,
           v153);
}

void sub_1001D557C()
{
}

uint64_t sub_1001D5588(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  unsigned int v81 = (v80 + 227839307) & 0xF26B76D7;
  LODWORD(STACK[0x204]) = LODWORD(STACK[0x404]) ^ 0x91BF2BE9;
  LODWORD(STACK[0x378]) = a79 - LODWORD(STACK[0x200]);
  LODWORD(STACK[0x3A0]) = a67 - a68;
  int v82 = a59 ^ LODWORD(STACK[0x4F0]) ^ a66 ^ a65 ^ LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x37C]) ^ a78 ^ a72 ^ v79 ^ a77 ^ a75 ^ a71 ^ (a69 | a70 & 0x25090460);
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x390]) ^ a3 ^ a76 ^ a74 ^ a73 ^ (a62 + a60 - 2);
  LODWORD(STACK[0x4D0]) = v82;
  LODWORD(STACK[0x548]) = v82 ^ 0xF436205F ^ v81;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)((38 * (STACK[0x568] <= a7 - 1089807004)) ^ v81)))(2673588286);
}

void sub_1001D5F74()
{
}

#error "1001D7464: call analysis failed (funcsize=810)"

void sub_1001D7468()
{
}

uint64_t sub_1001D7474@<X0>(int a1@<W8>)
{
  STACK[0x788] = ((14 * (a1 ^ 0x268u)) ^ 0xFFFFFFFFFFFFFD98) + v1;
  return sub_1001D74A0();
}

uint64_t sub_1001D74A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x550]) = STACK[0x684];
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((STACK[0x6A8] == 0)
                                * ((((v4 - 1044571346) & 0x3E42E76B) - 1158) ^ 0x233 ^ ((((v4 - 1044571346) & 0x3E42E76B)
                                                                                       - 770) | 0x54))) ^ (v4 - 1044571346) & 0x3E42E76B)))();
}

uint64_t sub_1001D74FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((STACK[0x730] == 0) * (((v4 ^ 0x7D4) - 736) ^ (v4 + 959))) ^ v4)))();
}

uint64_t sub_1001D7530()
{
  STACK[0x4E8] = v2;
  STACK[0x788] = STACK[0x788] + ((v1 + 33251629) & 0xFE049E7F) - 1595;
  unint64_t v3 = STACK[0x7C0];
  STACK[0x4C0] = STACK[0x7C0];
  return (*(uint64_t (**)(void))(v0 + 8 * (((4 * (v3 != 0)) | (16 * (v3 != 0))) ^ v1)))();
}

uint64_t sub_1001D7598()
{
  uint64_t v3 = (v2 - 1148) | 0x1ACu;
  STACK[0x4C8] = v0;
  uint64_t v4 = -16 * (~(&STACK[0xA90] + v0) & 2) - 0x71704E76C778D250;
  STACK[0x570] = (v4 ^ (v3 + 0x1B7D866F4DE07E70))
               + ((2 * v4) & 0x9046300600E5BA0 ^ 0x9046300600E5B20)
               + 0x7AFFFE5FFEDBFDC0;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (int)(v3 ^ 0xBEF)))();
  uint64_t v6 = v5 ^ ((v3 - 894) | 0x40Au) ^ 0x6D5FFF76E5FF7B2DLL;
  unint64_t v7 = (2 * v5) & 0xDABFFEEDCBFEFF4ELL;
  uint64_t v8 = ((uint64_t (*)(void))*(&off_1002E1F70 + (int)v3 + 1168))();
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((2032
                                    * (v7
                                     + ((v3 + 342) ^ 0x555)
                                     + v6
                                     + (v8 ^ 0xA10DB09010208008)
                                     - ((2 * v8) & 0xBDE49EDFDFBEFFEELL) != 0xE6DB006F61FFFB0)) ^ v3)))();
}

uint64_t sub_1001D7708()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 903)))(v2);
  unint64_t v4 = v3 ^ 0xFF16FFBAEFFA7749;
  unint64_t v5 = (v3 << (3 * (v1 ^ 0x55u) + 100)) & 0xFE2DFF75DFF4EE92;
  uint64_t v6 = ((uint64_t (*)(void))*(&off_1002E1F70 + v1 + 996))();
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((25
                               * (v4 + (v6 ^ 0x240000821490101) - ((2 * v6) & 0xFB7FFFEFBD6DFDFCLL) + v5 == 0x156FFC31143784ALL)) ^ v1)))();
}

uint64_t sub_1001D77DC()
{
  int v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * ((v1 ^ 0x3F6) + 174)))(v2);
  unsigned int v4 = v3 - ((2 * v3) & 0xF33F7FB2) + (v1 ^ 0x3F6) - 257 + (v1 ^ 0x759) + 2040509835;
  unsigned int v5 = ((2 * v4) & 0xFF3FF36A ^ 0xF33F7322) + (v4 ^ 0x8600466C);
  LODWORD(STACK[0x7AC]) = v5 + 1994852336;
  BOOL v6 = ((uint64_t (*)(void, uint64_t))*(&off_1002E1F70 + (v1 ^ 0xCAF)))(v5 + 6293067, 2381541563) != 0;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((198 * v6) ^ v1 ^ 0x3F6)))(v2);
}

uint64_t sub_1001D78C8(unint64_t a1)
{
  unint64_t v7 = (void *)(STACK[0x570] + v3 - 0x10F236467443AD9ELL);
  *unint64_t v7 = 0;
  v7[1] = (v2 & 0xFFFFFFFEFFFFFFFFLL | ((unint64_t)(v2 < v6) << 32))
        + ((17 * (v5 ^ 0x3D1)) ^ 0x84u)
        - 1988559435;
  uint64_t v8 = *(void (**)(void))(v1 + 8 * (v5 + 1226));
  STACK[0x4B8] = a1;
  v8();
  uint64_t v9 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + v5 + 1106))(v4, 3796205151);
  STACK[0x4B0] = v9;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((43 * (v9 != 0)) ^ v5)))();
}

uint64_t sub_1001D798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((110 * ((v5 << 32) + v3 + ((2 * v4) ^ 0x44F3F600) == 3145398513)) ^ v4)))();
}

uint64_t sub_1001D7A08@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  LODWORD(STACK[0x990]) = a2;
  STACK[0x4A8] = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((unsigned __int16)(v3 - ((2 * v3 + 3254) & 0x982) + (v2 ^ 0x33E)) ^ 0x4C0u) > 1)
                                * ((v2 ^ 0x78A) - 617)) ^ v2 ^ 0x24D)))();
}

uint64_t sub_1001D7E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = *(uint64_t (**)(void))(a3
                           + 8
                           * ((228
                             * (((unsigned __int16)v4 ^ 0x4C1 ^ (((v3 - 47) | 0xC) + 2145055898))
                              + ((2 * (v4 ^ 0x4C1)) & 0x1EDCC)
                              - 1259339782 != 885716704)) ^ v3));
  STACK[0x4E0] = v5;
  return v6();
}

uint64_t sub_1001D7E8C@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  STACK[0x4A0] = v2;
  uint64_t v4 = a2 ^ 0x639u;
  unint64_t v5 = ((unint64_t)&STACK[0x6D0] ^ 0x53EDAEFFFFFFBBBDLL)
     - 0x53EDAEFFFFFFBBBDLL
     + ((2 * (void)&STACK[0x6D0]) & 0xA7DB5DFFFFFF7778);
  STACK[0x4D8] = ((2 * (v5 % 0x25)) & 0x74)
               + ((v4 + 0x37BBFFDDBFEFD785) ^ (v5 % 0x25))
               - 0x37BBFFDDBFEFDBEALL;
  unint64_t v6 = STACK[0x570] + v3 - 0x10F236467443AD9ELL;
  unint64_t v7 = *(uint64_t (**)(uint64_t))(a1 + 8 * (int)v4);
  STACK[0x548] = STACK[0x988];
  STACK[0x570] = v6;
  STACK[0x4D0] = v6 + 16;
  return v7(940786443);
}

uint64_t sub_1001D7FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0xA70] = 0x3275FC70AB7D4CAFLL;
  LODWORD(STACK[0x6D0]) = dword_10031E658 - 340121379;
  uint64_t v6 = *(unsigned int *)aHr;
  unint64_t v7 = 1856021207 * ((v5 - 192) ^ 0xED14979B4E69D6FELL);
  *(_DWORD *)(v5 - 160) = v7 + v3 + 1123495617;
  *(_DWORD *)(v5 - 156) = v7;
  int v8 = v7 ^ (v3 - 1853260508);
  *(void *)(v5 - 176) = v4 - v7;
  *(void *)(v5 - 168) = v6 ^ v7;
  *(_DWORD *)(v5 - 180) = v3 - 1853260508 + v7;
  *(_DWORD *)(v5 - 188) = v8 ^ 0x18;
  *(_DWORD *)(v5 - 184) = v8 ^ 0x77;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v3 ^ 0xFDB)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v5 - 192)))(v9);
}

uint64_t sub_1001D80AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = STACK[0x578];
  unsigned int v5 = (STACK[0x578] - 284876014) & 0x10FADD57;
  STACK[0x548] = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (int)(STACK[0x578] + 125)))(STACK[0x4D8], 3312658705);
  int v7 = (*(uint64_t (**)(void))(a3 + 8 * (int)(v4 ^ 0xFCB)))();
  unsigned int v8 = v7 - 1965487874 - ((v5 + 363989482) & (2 * v7));
  LODWORD(xmmword_10031DC90) = v8;
  *(_DWORD *)(v3 + 4) = ((1812433253 * (v8 ^ 0x8AD908FC ^ (v8 >> 30))) ^ 0x5F499525)
                      + (((v8 ^ 0x8AD908FC ^ (v8 >> 30)) * (((v5 + 677692464) | 0x811130A5) + 781784547)) & 0xBE932A4A)
                      + 730821594
                      - ((2
                        * (((1812433253 * (v8 ^ 0x8AD908FC ^ (v8 >> 30))) ^ 0x5F499525)
                         + (((v8 ^ 0x8AD908FC ^ (v8 >> 30)) * (((v5 + 677692464) | 0x811130A5) + 781784547)) & 0xBE932A4A))
                        - 512961096) & 0x15B211FC);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v5))();
}

void sub_1001D8210()
{
}

uint64_t sub_1001D822C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  int v6 = STACK[0x578] ^ 0xC8;
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v4.i64[0] = *(void *)(v3 + 4);
  v4.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v8 = vextq_s8(v5, v4, 0xCuLL);
  int8x16_t v9 = v4;
  v9.i32[3] = *(_DWORD *)(v3 + 16);
  int8x16_t v10 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v8, v7), vdupq_n_s32(0xF10E8CD4));
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x775A672Eu));
  int32x4_t v12 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0xCD193A50)), v11), vdupq_n_s32(0x197362D7u)), vandq_s8(v10, v7)), (int8x16_t)vdupq_n_s32(0x64F00D07u));
  v13.i32[0] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 4) & 1));
  v13.i32[1] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 8) & 1));
  v13.i32[2] = *((_DWORD *)&STACK[0xA70] + (*(_DWORD *)(v3 + 12) & 1));
  v13.i32[3] = *((_DWORD *)&STACK[0xA70] + (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v3 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + 4 * (((v6 - 1658) | 0x11u) ^ 0x17ALL)), v13), (int8x16_t)vdupq_n_s32(0x8F6FA741)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x904BAFB8))), vdupq_n_s32(0x4825D7DCu)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * v6))();
}

void sub_1001D8D18()
{
}

uint64_t sub_1001D8D20@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int8x16_t v7 = (_DWORD *)(v5 + 4 * (v3 + v6));
  unsigned int v8 = ((((2 * (*v7 & 0x7FFFFFFE ^ 0x775A672E)) & 0xCD193A50) - (*v7 & 0x7FFFFFFE ^ 0x775A672E) + 426992343) | ((v4 & 0x80000000) - 250704684) & 0x80000000) ^ 0x64F00D07;
  *(_DWORD *)(v5 + 4 * ((a3 - 1033328924) + v3) - 0x428DCD824) = v7[396] ^ *((_DWORD *)&STACK[0xA70]
                                                                                           + (*v7 & 1)) ^ ((v8 - ((2 * v8) & 0x904BAFB8) + 1210439644) >> 1) ^ 0x8F6FA741;
  return (*(uint64_t (**)(void))(a1 + 8 * ((448 * (v3 + 1 != a2 + 3)) ^ a3)))();
}

uint64_t sub_1001D8E08()
{
  int v4 = (const float *)&unk_10031E01C;
  int v5 = v1 + 1033329593;
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32(v4);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v8.i64[0] = 0x100000001;
  v8.i64[1] = 0x100000001;
  uint64_t v9 = (v5 + 118) | 0x120u;
  v3.i32[0] = dword_10031E020;
  v3.i32[1] = *(_DWORD *)(v2 + 4 * (v9 ^ 0x5CF));
  v3.i32[2] = dword_10031E028;
  int8x16_t v10 = vextq_s8(v6, v3, 0xCuLL);
  int8x16_t v11 = v3;
  v11.i32[3] = dword_10031E02C;
  int32x4_t v12 = (int32x4_t)vorrq_s8(veorq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7E6E02C0u)), (int8x16_t)vdupq_n_s32(0xBA280001)), (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x191FD3Eu)), (int8x16_t)vdupq_n_s32(0x101111Fu))), v8), (int8x16_t)vdupq_n_s32(0xB1F019E0)), veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, v7), (int8x16_t)vdupq_n_s32(0xDFFA7B8F)), vdupq_n_s32(0x7143EC23u)), (int8x16_t)vdupq_n_s32(0xD13E67B2)));
  v13.i32[0] = *(_DWORD *)(v0 + 4 * (dword_10031E020 & 1));
  v13.i32[1] = *(_DWORD *)(v0 + 4 * (*(_DWORD *)(v2 + 4 * (v9 ^ 0x5CF)) & 1));
  v13.i32[2] = *(_DWORD *)(v0 + 4 * (dword_10031E028 & 1));
  v13.i32[3] = *(_DWORD *)(v0 + 4 * (dword_10031E02C & 1));
  unk_10031E01C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031DC90, v13), (int8x16_t)vdupq_n_s32(0xFF36F178)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0x512EF75Eu))), vdupq_n_s32(0xA8977BAF)), 1uLL));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v5))();
}

void sub_1001D8FA4()
{
}

uint64_t sub_1001D8FB0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v3 = ((((a2 - 394) | 0x408) ^ 0x322B130C ^ *v2 & 0x7FFFFFFE)
      + (*v2 & 0x50E35F0A ^ 0x40C04B0A)
      - ((((a2 - 394) | 0x408) ^ 0x322B130C ^ *v2 & 0x7FFFFFFE) & 0x50E35F0A)) ^ 0xC063430A;
  int v4 = ((2 * v3) | 0x9B08582) - v3 + 2066201919;
  unsigned int v5 = (v4 | (((a2 - 463603069) & 0x1BA207FA) + 768459200 + (v2[623] & 0x80000000 ^ 0xB4CFD7E8)) & 0x80000000) ^ 0x2CAA429B;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0xA70] + (*v2 & 1)) ^ ((v5 - 2 * (v5 & 0x33F44EFC ^ v4 & 4) - 1275834632) >> 1) ^ 0xF2876BD3;
  return (*(uint64_t (**)(void))(a1 + 8 * ((101 * (LODWORD(STACK[0x6D0]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001D90E4(uint64_t a1)
{
  LODWORD(STACK[0x6D0]) = 0;
  unint64_t v4 = 1606104089 * ((((v3 - 192) | 0x9C57C659393F90E6) - ((v3 - 192) & 0x9C57C659393F90E6)) ^ 0x5EE93D6D4C28D2D8);
  int v5 = LODWORD(STACK[0x6D0])++;
  *(_DWORD *)(v2 + 1624) = v5 + 340121380;
  uint64_t v6 = (*(_DWORD *)aHr - 1196301951);
  *(_DWORD *)(v3 - 160) = -1231242342 - v4 + v1;
  *(void *)(v3 - 168) = v6 ^ v4;
  *(void *)(v3 - 152) = 419711402 - v4;
  *(_DWORD *)(v3 - 184) = (v1 - 1384653047) ^ v4;
  *(_DWORD *)(v3 - 180) = (v1 - 1384653062) ^ v4;
  *(_DWORD *)(v3 - 192) = v4 + 1;
  *(_DWORD *)(v3 - 176) = v1 - 1384653005 + v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v1 + 170)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v3 - 188)))(v7);
}

uint64_t sub_1001D91FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v10 = (STACK[0x578] - 1581) | 0x80;
  if (v4 >= v5) {
    int v11 = *(_DWORD *)aHr + 1;
  }
  else {
    int v11 = v7;
  }
  *(_DWORD *)aHr = v11;
  unsigned int v12 = ((((((v3 ^ (v3 >> 11)) << 7) ^ 0x6429EE7B ^ v10)
         - ((2 * (((v3 ^ (v3 >> 11)) << 7) ^ 0x6429EE7B ^ v10)) & 0x266A7E00)
         + 322256659) & 0x9D2C5680 ^ 0xC4FC1B7)
       - 1) ^ v3 ^ (v3 >> 11);
  unsigned int v13 = (((v12 << 15) ^ 0xC2348000) - ((2 * ((v12 << 15) ^ 0xC2348000)) & 0x84E70000) + 1114866289) & 0xEFC60000 ^ 0x25C40000;
  unsigned int v14 = (((((2 * v13) | 0x781D69B0) - v13 - 1007596760) & 0x1FB40E74 ^ 0x1140A25)
       + ((((2 * v13) | 0x781D69B0) - v13 - 1007596760) & 0xE04BF18A)
       - 1) ^ v12;
  unsigned int v15 = v14 ^ (v14 >> 18) ^ 0xF52C4AD1;
  *(unsigned char *)(v9 + (v8 - 885716705)) = ((v15 ^ 0xB)
                                                   - (((v10 + 116) ^ 0xC5) & (2 * (v15 ^ 0xB)))
                                                   + ((v10 - 6) & 0x7F ^ 0x9E)
                                                   - 22) ^ 0xCD;
  return (*(uint64_t (**)(uint64_t))(a3
                                            + 8
                                            * ((951
                                              * (v8
                                               - (((v15 ^ 0xB)
                                                                  - (((v10 + 116) ^ 0xC5) & (2 * (v15 ^ 0xB)))
                                                                  + ((v10 - 6) & 0x7F ^ 0x9E)
                                                                  - 22) != 0xCD) != v6)) ^ v10)))(940786443);
}

uint64_t sub_1001D9338()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xA8C)))(v2);
  uint64_t v4 = v3 ^ 0x491FBF3EF7FF7FE5;
  unint64_t v5 = (v3 << (((v1 - 124) | 0x5Au) - 122)) & 0x923F7E7DEFFEFFCALL;
  uint64_t v6 = ((uint64_t (*)(void))*(&off_1002E1F70 + v1 + 1505))();
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((1715
                                             * (v4
                                              + (v6 ^ 0xE20CD2444031884)
                                              - ((2 * v6) & 0xE3BE65B777F9CEF6)
                                              + v5
                                              + 1 == (((v1 - 157) | 0x43Au) ^ 0x57408C633C029E50))) ^ v1)))(v2);
}

uint64_t sub_1001D9430(unint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8 * (v2 ^ 0xE41));
  STACK[0x4B8] = a1;
  int v4 = v3();
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70
                                                    + ((87
                                                      * ((((v2 ^ 0x39) - 108) ^ ((((v4 << (41 * (v2 ^ 0x39) - 122)) & 0xBE) + (v4 ^ 0x5F)) == 95)) & 1)) ^ v2)))(STACK[0x4B8]);
}

uint64_t sub_1001D94BC()
{
  LODWORD(STACK[0x7AC]) = v2 + 8;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xAB2)))(8, 3533575369);
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + (((v3 == 0) * ((v1 + 859) ^ (v1 + 865))) ^ v1)))(STACK[0x4B8]);
}

uint64_t sub_1001D9528()
{
  *int v2 = (v1 + LOBYTE(STACK[0x5BF]) - (((v1 - 125) & 0xEC ^ 0xF8) & (2 * LOBYTE(STACK[0x5BF]))) + 80) ^ 0x48;
  v2[1] = (HIWORD(STACK[0x5B8]) - ((STACK[0x5B8] >> 47) & 0x24) - 110) ^ 0x92;
  v2[2] = (((unsigned __int16)WORD2(STACK[0x5B8]) >> 8) - ((STACK[0x5B8] >> 39) & 0x52) - 87) ^ 0xA9;
  v2[3] = (HIDWORD(STACK[0x5B8]) - ((STACK[0x5B8] >> 31) & 0x7E) + 63) ^ 0x3F;
  v2[4] = (HIBYTE(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 23) & 0x20) + 16) ^ 0x10;
  v2[5] = (HIWORD(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 15) & 0x56) - 85) ^ 0xAB;
  v2[6] = (BYTE1(LODWORD(STACK[0x5B8])) - ((LODWORD(STACK[0x5B8]) >> 7) & 0xA0) - 48) ^ 0xD0;
  v2[7] = (LOBYTE(STACK[0x5B8]) - ((2 * LOBYTE(STACK[0x5B8])) & 0xF8) + 124) ^ 0x7C;
  uint64_t v3 = v0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xDDD)))(8, 3715716460);
  STACK[0x4B0] = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((960 * (v4 != 0)) ^ v1)))();
}

uint64_t sub_1001D96AC()
{
  unsigned int v2 = 1755343967
     * ((*(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & 0xFFFFFFFFB2A98008)) ^ STACK[0x4B0]) & 0x7FFFFFFF);
  unint64_t v3 = 1755343967 * (v2 ^ HIWORD(v2));
  *(unsigned char *)STACK[0x4B0] = byte_1002828C0[v3 >> 24] ^ *(unsigned char *)(v1
                                                               + ((v0 - 852) ^ 0xF5BBB0935C02EE7BLL)
                                                               + 0xA444F6CA3FD1191) ^ byte_10026ECA0[(v3 >> 24) + 3] ^ byte_100291410[(v3 >> 24) + 2] ^ v3 ^ (13 * BYTE3(v3));
  return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t, unint64_t, void))*(&off_1002E1F70 + v0))(byte_10026ECA0, byte_100291410, 13, 0xD6A0FE0E107AF0DFLL, 0);
}

void sub_1001D97E4()
{
}

uint64_t sub_1001D97F4()
{
  unsigned int v8 = 1755343967
     * ((*(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & 0xFFFFFFFFB2A98008)) ^ (v4
                                                                                  + LODWORD(STACK[0x4B0])
                                                                                  + 1350926784)) & 0x7FFFFFFF);
  unint64_t v9 = 1755343967 * (v8 ^ HIWORD(v8));
  char v10 = byte_1002828C0[v9 >> 24] ^ *(unsigned char *)(((v6 + 286450940) & 0xEEED1A7F) + v3 + v7 - 0x7709C0F478AEBB6DLL) ^ byte_10026ECA0[(v9 >> 24) + 3] ^ byte_100291410[(v9 >> 24) + 2] ^ v9 ^ (13 * BYTE3(v9));
  if (v1 < v0 != v5 - 0x3B2D24740838ADB5 < v0) {
    BOOL v11 = v1 < v0;
  }
  else {
    BOOL v11 = v5 - 0x3B2D24740838ADB5 < v1;
  }
  *(unsigned char *)(v4 + STACK[0x4B0] - 0x3EDCC9D4AF7A7E40) = v10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((!v11 * v2) ^ v6)))();
}

uint64_t sub_1001D9938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>)
{
  unsigned int v14 = ((*(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & v3)) ^ (v10 + a1 + 1228906477)) & 0x7FFFFFFF) * a3;
  unint64_t v15 = (v14 ^ HIWORD(v14)) * a3;
  unint64_t v16 = v15 >> (((v11 - 64) | 2) + 6);
  *(unsigned char *)(v10 + a1 - 0x6FB30C29B6C06013) = *(unsigned char *)(v6 + v16) ^ *(unsigned char *)(v9 + v13 - 0x5916F71378A59CC3) ^ *(unsigned char *)(v16 + v7 + 3) ^ *(unsigned char *)(v16 + v5 + 2) ^ v15 ^ (13 * v16);
  if (v8 < v4 != a2 - 0x41286C1B8FF94209 < v4) {
    BOOL v17 = v8 < v4;
  }
  else {
    BOOL v17 = a2 - 0x41286C1B8FF94209 < v8;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * (v17 | (2 * v17) | v11)))();
}

uint64_t sub_1001D9A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x5CC]) = a5;
  STACK[0x4A8] = v5;
  return sub_1001D7E1C(a1, a2, (uint64_t)&off_1002E1F70);
}

uint64_t sub_1001D9A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (const float *)&unk_10031E01C;
  int8x16_t v8 = (int8x16_t)vld1q_dup_f32(v7);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  int8x16_t v10 = (int8x16_t)vdupq_n_s32(0x3D953674u);
  v6.i64[0] = *(void *)&dword_10031E020;
  v6.i32[2] = dword_10031E028;
  int8x16_t v11 = vextq_s8(v8, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = dword_10031E02C;
  int8x16_t v13 = vandq_s8(v11, v9);
  int32x4_t v14 = (int32x4_t)vorrq_s8(v13, (int8x16_t)vdupq_n_s32(0x2280804u));
  int8x16_t v15 = (int8x16_t)vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)vaddq_s32((int32x4_t)vbicq_s8((int8x16_t)vdupq_n_s32(0xD0018018), v13), v14), (int8x16_t)vdupq_n_s32(0x4400102u)), (int32x4_t)vandq_s8((int8x16_t)v14, (int8x16_t)vdupq_n_s32(0x80000804)));
  int32x4_t v16 = (int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x28D90AFAu));
  int32x4_t v17 = (int32x4_t)vorrq_s8(veorq_s8(v15, (int8x16_t)vdupq_n_s32(0x5669811Au)), veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v16, (int32x4_t)veorq_s8(vandq_s8(v12, v10), (int8x16_t)vdupq_n_s32(0x15043404u))), (int32x4_t)vandq_s8((int8x16_t)v16, v10)), (int8x16_t)vdupq_n_s32(0x1F953470u)));
  v18.i32[0] = *(_DWORD *)(v5 + 4 * (dword_10031E020 & 1));
  v18.i32[1] = *(_DWORD *)(v5 + 4 * (unk_10031E024 & 1));
  v18.i32[2] = *(_DWORD *)(v5 + 4 * (dword_10031E028 & ((v4 - 471) ^ 0x1C5u)));
  v18.i32[3] = *(_DWORD *)(v5 + 4 * (dword_10031E02C & 1));
  unk_10031E01C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031DC90, v18), (int8x16_t)vdupq_n_s32(0x5DD46855u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0x7CF94D10u))), vdupq_n_s32(0x3E7CA688u)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * v4))();
}

void sub_1001D9BF0()
{
}

uint64_t sub_1001D9BFC@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (((a2 + 1508) ^ (a2 + 1082172907) & 0xBF7F5FF8 ^ 0x7FFFFFFE) & *v2 ^ 0x71E80A89) - 1;
  unsigned int v4 = (((v3 & 0x3F77F3CA ^ 0x44261C8) + (v3 ^ 0xFB359E32) - ((v3 ^ 0xFB359E32) & 0xBF77F3CA)) | ((v2[623] & 0x80000000 ^ 0xBC50ED13)
                                                                                                - 1084377374) ^ 0xFBAEA3F5) ^ 0x3F736F8E;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14A8] + (*v2 & 1)) ^ ((v4 - ((2 * v4) & 0xADF6EA2) - 2056276143) >> 1) ^ 0x5DE0B9;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1603 * (LODWORD(STACK[0x610]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001D9D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x610]) = 0;
  int v7 = LODWORD(STACK[0x610])++;
  *(_DWORD *)(v5 + 1624) = v7 + 340121380;
  unint64_t v8 = 516615401
     * ((((v6 - 192) | 0x5642CE80E520FB21) - (v6 - 192) + ((v6 - 192) & 0xA9BD317F1ADF04D8)) ^ 0xDEFE46FB9643FD13);
  *(void *)(v6 - 184) = (*(_DWORD *)aHr + 932360373) - v8;
  *(_DWORD *)(v6 - 172) = (v4 + 1947213023) ^ v8;
  *(void *)(v6 - 168) = v8 ^ 0x97E518DE;
  *(_DWORD *)(v6 - 152) = ((v4 + 1947213023) ^ 0x57) + v8;
  *(_DWORD *)(v6 - 192) = v8;
  *(_DWORD *)(v6 - 160) = v8 + v4 + 1947213023 + 53;
  *(_DWORD *)(v6 - 156) = (v4 - 185257761) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 ^ 0xFED)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v6 - 176)))(v9);
}

uint64_t sub_1001D9E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v10 = v5 < v6;
  unint64_t v11 = STACK[0x578];
  int v12 = STACK[0x548];
  int v13 = STACK[0x578] - 1364;
  if (v10) {
    int v14 = v7;
  }
  else {
    int v14 = *(_DWORD *)aHr + 1;
  }
  *(_DWORD *)aHr = v14;
  int v15 = v4 ^ (v4 >> 11);
  unsigned int v16 = ((v15 << 7) ^ 0x6429EF80) - ((((v15 << 7) ^ 0x6429EF80) << (v11 + 89)) & 0x96EF2200) - 881356514;
  unsigned int v17 = ((v16 & 0x9D2C5680 ^ 0x8C2C5600)
       + (v16 & 0x81000600 ^ 0x61012858)
       - ((v16 & 0x9D2C5680 ^ 0x8C2C5600) & 0x81000600)) ^ 0xA1016818;
  unsigned int v18 = (((2 * v17) & 0xFA097C80) - v17 - 2105851473) ^ v15;
  unsigned int v19 = (((((v18 << 15) ^ 0x89180000) - ((2 * ((v18 << 15) ^ 0x89180000)) & 0x2AB10000) + 358136438) & v8 ^ 0x6C7EA17F)
       - 1) ^ 0x7F043DDE;
  unsigned int v20 = (v19 - ((2 * v19) & 0x44A01940) + 575680497) ^ v18;
  unsigned int v21 = (unsigned char *)(v9 + (v12 - 1921021613));
  unsigned char *v21 = ((v20 ^ (v20 >> 18) ^ 0x15)
        - ((2 * (v20 ^ (v20 >> 18) ^ 0x15)) & 0x9E)
        + ((v13 + 78) ^ 0xD9)
        + (v13 ^ 0x2E)
        + 90) ^ 0x34;
  LODWORD(v21) = 1755343967
               * ((*(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & 0x561E13BC)) ^ v21) & 0x7FFFFFFF);
  unint64_t v22 = 1755343967 * (v21 ^ (v21 >> 16));
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((328
                                * (v12
                                 - ((byte_10026F210[v22 >> 24] ^ byte_100294F20[v22 >> 24] ^ byte_10026BF60[(v22 >> 24) + 5] ^ v22 ^ (79 * BYTE3(v22))) != (((v20 ^ (v20 >> 18) ^ 0x15) - ((2 * (v20 ^ (v20 >> 18) ^ 0x15)) & 0x9E) + ((v13 + 78) ^ 0xD9) + (v13 ^ 0x2E) + 90) ^ 0x34)) == 1921021612)) ^ v13)))();
}

uint64_t sub_1001DB804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4
                              + 8 * (int)(((v5 + 8 == a5) * ((((v6 + 1288629552) & 0xB33117FD) - 1364) ^ 0x48D)) ^ v6)))();
}

uint64_t sub_1001DB848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x548]) = v5;
  unint64_t v8 = 1856021207
     * ((((v7 - 192) | 0x4E4EC8390FF411A2) - (v7 - 192) + ((v7 - 192) & 0xB1B137C6F00BEE58)) ^ 0xA35A5FA2419DC75CLL);
  STACK[0x14A8] = 0xDBE28BCE42EA3B11;
  LODWORD(STACK[0x610]) = dword_10031E658 - 340121379;
  uint64_t v9 = *(unsigned int *)aHr;
  *(_DWORD *)(v7 - 188) = (v4 - 870273649) ^ v8;
  *(_DWORD *)(v7 - 184) = (v4 - 870273617) ^ v8;
  *(_DWORD *)(v7 - 180) = v4 - 870273678 + v8;
  *(void *)(v7 - 176) = v6 - v8;
  *(void *)(v7 - 168) = v9 ^ v8;
  *(_DWORD *)(v7 - 160) = v8 + v4 + 1123495617;
  *(_DWORD *)(v7 - 156) = v8;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + 203)))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v7 - 192)))(v10);
}

uint64_t sub_1001DB95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = v4 + 72;
  int v8 = v4;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (v4 + 125)))(STACK[0x4E8], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (v8 + 187)))();
  unsigned int v10 = v9 - 1965487874 - ((v9 << (v6 ^ 0xF1)) & 0x15B211FC);
  LODWORD(xmmword_10031DC90) = v10;
  *(_DWORD *)(v5 + 4) = ((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ (v6 + 1610168239))
                      + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xBFF27F3E)
                      + 719309152
                      - ((2
                        * (((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ (v6 + 1610168239))
                         + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xBFF27F3E))
                        - 2146598716) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v6))(813489423);
}

void sub_1001DBA9C()
{
}

uint64_t sub_1001DBAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v5);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = -1;
  v9.i64[1] = -1;
  uint64_t v10 = (v4 - 918);
  v6.i32[0] = *(_DWORD *)(v5 + 4);
  v6.i32[1] = *(_DWORD *)(v5 + 4 * (v10 - 1040));
  v6.i32[2] = *(_DWORD *)(v5 + 12);
  int8x16_t v11 = vextq_s8(v7, v6, 0xCuLL);
  int8x16_t v12 = v6;
  v12.i32[3] = *(_DWORD *)(v5 + 16);
  int8x16_t v13 = (int8x16_t)vaddq_s32((int32x4_t)vandq_s8(v11, v8), vdupq_n_s32(0xF2BD5A23));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0xCCA09167)), v9), (int8x16_t)vdupq_n_s32(0xC6799998));
  v15.i32[0] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 4) & 1));
  v15.i32[1] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 4 * (v10 - 1040)) & 1));
  v15.i32[2] = *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v5 + 12) & 1));
  v15.i32[3] = *((_DWORD *)&STACK[0x14A8] + (v12.i8[12] & 1));
  *(int8x16_t *)uint64_t v5 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v5 + 1588), v15), (int8x16_t)vdupq_n_s32(0x183604EBu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(vandq_s8(v13, v8), (int8x16_t)v14), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x6B70FFE8u))), vdupq_n_s32(0xB5B87FF4)), 1uLL));
  return (*(uint64_t (**)(void))(a4 + 8 * (v4 - 1030)))();
}

uint64_t sub_1001DC510@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int8x16_t v7 = (unsigned int *)(v6 + 4 * (v3 + v4));
  uint64_t v8 = v3 + 1;
  *int8x16_t v7 = v7[397] ^ *((_DWORD *)&STACK[0x14A8] + (*(_DWORD *)(v6 + 4 * (v8 + v4)) & 1)) ^ ((((((a2 + 1512403945) & 0xA5DA8B9F ^ 0xF2BD59B8)
                                                                                            + (v2 & 0x80000000)) & 0x80000000 | ((*(_DWORD *)(v6 + 4 * (v8 + v4)) & 0x7FFFFFFE ^ 0xCCA09167) - 1) ^ 0xC6799998)
                                                                                          - ((2
                                                                                            * (((*(_DWORD *)(v6 + 4 * (v8 + v4)) & 0x7FFFFFFE ^ 0xCCA09167)
                                                                                              - 1) ^ 0xC6799998)) & 0x6B70FFE8)
                                                                                          - 1246199820) >> 1) ^ 0x183604EB;
  return (*(uint64_t (**)(void))(a1 + 8 * ((481 * (v8 == v5 + 3)) ^ a2)))();
}

uint64_t sub_1001DC5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = v5 & 0xD8E52AFF ^ 0x2DE;
  STACK[0x788] = STACK[0x4D0];
  STACK[0x628] = v4;
  STACK[0x928] = STACK[0x560];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (int)(v5 & 0xD8E52AFF ^ 0xA8C)))(v6);
  STACK[0x6A8] = 0;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)(((STACK[0x730] == 0) * (((v7 ^ 0x7D4) - 736) ^ (v7 + 959))) ^ v7)))(v8);
}

uint64_t sub_1001DC668@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  LODWORD(STACK[0x4D8]) = a2;
  uint64_t v5 = (a3 + 455044963) & 0xE4E08EF1;
  unint64_t v6 = ((unint64_t)&STACK[0x924] ^ 0xFF9D7FF6F9B7F7FFLL)
     + ((2 * (void)&STACK[0x924]) & 0xFF3AFFEDF36FEFF8)
     + 0x62800906480571
     + v5;
  STACK[0x4F0] = ((v6 % 0x25) ^ 0x7DFD8BBFF6D7B9FDLL)
               - 0x7DFD8BBFF6D7B9EDLL
               + ((2 * (v6 % 0x25)) & 0x7ALL);
  unint64_t v7 = STACK[0x788];
  uint64_t v8 = *(uint64_t (**)(void))(a1
                           + 8
                           * (int)((1636
                                  * (((196 * (v5 ^ 0x29A)) ^ 0x33C46C78) + v5 + 397 == 868511725)) ^ v5));
  STACK[0x4E0] = STACK[0x788];
  STACK[0x560] = STACK[0x7D0];
  STACK[0x570] = (unint64_t)&STACK[0xA90] + v7;
  STACK[0x4E8] = (unint64_t)&STACK[0xA90] + v7 + 16;
  STACK[0x4F8] = v4;
  STACK[0x548] = v3;
  return v8();
}

uint64_t sub_1001DC7DC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a4
                              + 8 * (((a7 == ((a2 - 660) | 0x220) - 1844) * (20 * (a2 ^ 0x7ED) + 595)) ^ (a2 - 1690))))();
}

uint64_t sub_1001DC824()
{
  int v1 = LODWORD(STACK[0x784]) - LODWORD(STACK[0x930]);
  LODWORD(STACK[0x7CC]) = v1;
  uint64_t v2 = ((uint64_t (*)(void, uint64_t))*(&off_1002E1F70 + v0 + 241))(v1 + ((v0 - 464) ^ 0x9CC4F61B), 3113660523);
  STACK[0x898] = v2;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v2 == 0) * (v0 - 1835)) ^ v0)))();
}

uint64_t sub_1001DC894()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((452
                               * ((v1 | ((unint64_t)(v1 < 0x633B0C81) << 32))
                                + ((v0 - 694505287) & 0x29654FBA ^ 0xFFFFFFFFB06077AFLL) == 328957064)) ^ (v0 - 1642))))();
}

uint64_t sub_1001DC90C@<X0>(unsigned char *a1@<X0>, unint64_t a2@<X8>)
{
  int v4 = v3 - 1690;
  BOOL v5 = v2 < a2;
  *a1 = ((2 * *(unsigned char *)STACK[0x8A0]) & 0xFC) + (*(unsigned char *)STACK[0x8A0] ^ 0x7E);
  if (v5 == a2 > 0x139B7C89) {
    BOOL v5 = v2 > 0x139B7C89;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((1883 * v5) ^ v4)))();
}

void sub_1001DC9EC()
{
}

uint64_t sub_1001DCA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((73 * (((v4 == 0) ^ (v5 - 20)) & 1)) ^ v5)))();
}

uint64_t sub_1001DCA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = 16 * (v5 ^ 0x7EA);
  (*(void (**)(uint64_t))(a4 + 8 * (v6 + 108)))(18);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v6 + 122)))(v4, 289);
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (int)(v6 + 12 * ((((2 * v8) & 0xEEBFFFEE) + (v8 ^ 0xF75FFFF7) - 2002780151) >> 31))))();
}

uint64_t sub_1001DCAE0@<X0>(int a1@<W8>)
{
  uint64_t v2 = ((uint64_t (*)(void, uint64_t))*(&off_1002E1F70 + v1 + 1245))(((139 * (v1 ^ 0x3A8)) ^ 0x8A0011Fu) + a1, 64);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((1334 * (v2 == 0)) ^ v1)))(v2);
}

uint64_t sub_1001DCB4C()
{
  int v1 = (v0 - 680) | 0x2A8;
  BOOL v2 = *(_DWORD *)((uint64_t (*)(void))*(&off_1002E1F70 + v1 + 1207))() == 2;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v2 * ((v1 ^ 0x2BC) - 252)) ^ v1)))();
}

uint64_t sub_1001DCBA4()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 8 * (v2 ^ 0xBE5)))(v1, 801, 4, 0);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)((((((2 * v3) & 0x3FBBFBDE)
                                                    + (v3 ^ 0x1FDDFDEF)
                                                    + 1612841489) >> 31)
                                                  * (v2 + 396)) ^ v2)))(v3);
}

uint64_t sub_1001DCC2C()
{
  unint64_t v4 = LODWORD(STACK[0x8B0]);
  uint64_t v5 = (*(uint64_t (**)(void, unint64_t, void))(v0 + 8 * (v2 + 1190)))((v3 + v1), STACK[0x8A8], (v4 - 1236203077));
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((1045
                               * ((v5 ^ 0xBFFF26AEE231DEFDLL)
                                - ((v4 | ((unint64_t)(v4 < 0x49AEF645) << 32))
                                 + 0x8544D26F3587D16)
                                + ((((2 * v2) ^ 0x642u) + 0x7FFE4D5DC463BCE4) & (2 * v5)) == 0xB7AAD987A52A6BA2)) ^ v2)))();
}

uint64_t sub_1001DCCF8@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(v1 + 8 * (v3 + 1258)))(v4, a1 - 0x8544D273D07735BLL);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((2 * (((v5 + v2 >= 0) ^ (v3 + 107)) & 1)) & 0xDF | (32 * (((v5 + v2 >= 0) ^ (v3 + 107)) & 1))) ^ (v3 - 660))))();
}

uint64_t sub_1001DCDA4()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((57 * (v1 < (int)(((v0 - 206009273) & 0xC476DDF) + ((v0 - 1497) ^ 0xFFFFFFFE)))) ^ (v0 - 1549))))();
}

uint64_t sub_1001DCDF4()
{
  uint64_t v2 = ((uint64_t (*)(void))*(&off_1002E1F70 + v0 + 232))();
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((57
                                             * (v1 < (int)(((v0 - 206009273) & 0xC476DDF) + ((v0 - 1497) ^ 0xFFFFFFFE)))) ^ (v0 - 1549))))(v2);
}

uint64_t sub_1001DCE58@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1399 * (v2 == ((a1 - 1313703638) & 0x4E4D85CF ^ 0xFFFF589A))) ^ a1)))();
}

uint64_t sub_1001DCE9C()
{
  int v3 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0x9BE)))(v2);
  BOOL v4 = ((uint64_t (*)(const CFAllocatorRef, uint64_t, void, void))*(&off_1002E1F70 + v1 + 1697))(kCFAllocatorDefault, v2, ((2 * v3) & 0xBEE5FEBE) + (v3 ^ (v1 + 1288847374) & 0xB32DBEEB ^ 0xDF72FF96) + 546111649, 0) != 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((23 * v4) ^ v1)))();
}

uint64_t sub_1001DCF50(uint64_t a1)
{
  unsigned int v6 = (v2 + 752430640) & 0xD326D0C9;
  (*(void (**)(uint64_t, const CFStringRef, const CFBooleanRef, void))(v1 + 8 * (v2 ^ 0x9B6)))(a1, kCFURLIsExcludedFromBackupKey, kCFBooleanTrue, 0);
  ((void (*)(uint64_t))*(&off_1002E1F70 + (v2 ^ 0x9B8)))(a1);
  int v7 = (v6 - 183) | 0xAC;
  ((void (*)(uint64_t))*(&off_1002E1F70 + (int)(v6 + 1907)))(v4);
  ((void (*)(uint64_t))*(&off_1002E1F70 + v7 + 1904))(v3);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((STACK[0x8A8] == 0)
                               * ((8 * (v7 ^ 0x27B)) ^ 0x1193 ^ (980 * ((2 * (v7 ^ 0x27B)) ^ 0x588)))) ^ (2 * (v7 ^ 0x27B)))))();
}

void sub_1001DD084(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a1 + 8 * (a3 ^ 0xF86)))();
  sub_1002359CC(v4, v5, v6, v7, v8, v9, a2);
}

uint64_t sub_1001DD098@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  BOOL v10 = v2 < v3;
  *(unsigned char *)(v4 + v5 + v9 + v6) = 0;
  if (v10 == v4 + v7 < v3) {
    BOOL v10 = v4 + v7 < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v10 * v8) ^ a2)))();
}

uint64_t sub_1001DD0E0@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return sub_1001DD098(a1, a2);
}

uint64_t sub_1001DD0E8(uint64_t a1)
{
  *(_DWORD *)a1 = 2023518720;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1279805853;
  *(void *)(a1 + 64) = 0x228E0CD37FCCF1ACLL;
  *(_DWORD *)(a1 + 72) = 1649474516;
  *(unsigned char *)(a1 + 8) = (v3 >> (20 * (v2 ^ 0x6A) + 112)) ^ 0x48;
  *(unsigned char *)(a1 + 9) = BYTE2(v3) ^ 0xC7;
  *(unsigned char *)(a1 + 10) = (v2 - 9) & 0xFD ^ BYTE1(v3) ^ 0xEE;
  *(unsigned char *)(a1 + 11) = v3 ^ 0x80;
  *(_WORD *)(a1 + 92) = v4;
  *(_DWORD *)(a1 + 96) = v1;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 1494274718;
  *(void *)(a1 + 120) = 0x7E422C649661EC57;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 1664814209;
  *(_DWORD *)(a1 + 128) = 0;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((1314 * ((~(v1 - 68414640) + (unint64_t)v2) >> 32)) ^ (v2 | 0x2F5))))();
}

uint64_t sub_1001DD20C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((500
                                * ((((((a1 - 72) & 0xDF) + 42) >> v1) & ((a1 - 1333760840) ^ 0x4F7F97B4)) != 0)) ^ a1)))();
}

uint64_t sub_1001DD260()
{
  STACK[0x560] = v4;
  STACK[0x568] = v2;
  *(_DWORD *)(v5 + 4) = dword_100285F50[v0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (int)(((((((v1 + 900739434) & 0xCA4FCDCB) - 1227) | 0x482) - 1404) * (1703118420 - ((1148667756 << ((((v1 + 106) & 0xCB) + 55) ^ 3)) & 4) >= 1703118420)) ^ (((v1 + 900739434) & 0xCA4FCDCB) + 567))))(1154, 1098, 178, -1148666367, 1842, 918876196, 3376091123, 1418);
}

uint64_t sub_1001DD33C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((15 * (v2 < (((v3 - 1265) | a2) ^ v5))) ^ v3)))();
}

uint64_t sub_1001DD368()
{
  int v7 = v0 - 143;
  char v8 = (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 167) ^ 0xCB8)))();
  uint64_t v9 = (v7 + 418);
  *(unsigned char *)(v5 + (v9 ^ 0xFFFFFFFFBB88BE01) + v6) = (v8 - 2 - ((v7 + 9) & (2 * v8))) ^ 0xB2;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)(((((v7 + 418) ^ 0x732u ^ v3) + v6 == (((v7 - 811) | v2) ^ 0x447742B7)) * v4) ^ v9)))(1154, 1098, 178, -1148666367, 1842, 918876196, 3376091123, 1418);
}

uint64_t sub_1001DD480()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((8 * (((v1 + 36) ^ (v0 == ((7 * (v1 ^ 0x46E)) ^ v3))) & 1)) & 0xDF | (32 * (((v1 + 36) ^ (v0 == ((7 * (v1 ^ 0x46E)) ^ v3))) & 1))) ^ v1)))();
}

uint64_t sub_1001DD4D4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((125 * (STACK[0x938] != 0)) ^ (v1 - 792))))();
}

uint64_t sub_1001DD500()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((4 * (((*(_DWORD *)(v2 + 4) == -1223708077) ^ (91 * (v0 ^ 0xA4))) & 1)) & 0xEF | (16 * (((*(_DWORD *)(v2 + 4) == -1223708077) ^ (91 * (v0 ^ 0xA4))) & 1))) ^ v0)))();
}

uint64_t sub_1001DD544()
{
  int v2 = 274 * (v0 ^ 0x1A1);
  STACK[0x858] = 0xD0C883D6A823E977;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v2 ^ 0xE49)))(21, 519376027);
  STACK[0x938] = v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v3 == 0) * (14 * (((v2 - 100) | 0xB2) ^ 0x636) - 1944)) ^ v2)))();
}

uint64_t sub_1001DD93C(unsigned char *a1)
{
  (*(void (**)(void *, unint64_t *, uint64_t))(v1 + 8 * (v2 + 437)))(&unk_10026B450, &STACK[0xAA0], 16);
  *a1 = ((v4[4] & 0x7F ^ 0xD7) - ((2 * (v4[4] & 0x7F ^ 0xD7)) & 0x72) - 71) ^ 0xB9;
  a1[1] = v4[12] ^ 0x4C;
  a1[2] = v4[13] ^ (((v2 - 56) | v3) + 103 * (v2 ^ 0xB5) - 84);
  a1[3] = v4[14] ^ 0x4C;
  a1[4] = v4[15] ^ 0x4C;
  a1[5] = v4[16] ^ 0x4C;
  a1[6] = v4[17] ^ 0x4C;
  a1[7] = v4[18] ^ 0x4C;
  a1[8] = v4[19] ^ 0x4C;
  a1[9] = v4[20] ^ 0x4C;
  a1[10] = v4[21] ^ 0x4C;
  a1[11] = v4[22] ^ 0x4C;
  a1[12] = v4[23] ^ 0x4C;
  a1[13] = v4[24] ^ 0x4C;
  a1[14] = v4[25] ^ 0x4C;
  a1[15] = v4[26] ^ 0x4C;
  a1[16] = v4[27] ^ 0x4C;
  a1[17] = v4[8] ^ 0x33;
  a1[18] = v4[9] ^ 0x33;
  a1[19] = v4[10] ^ 0x33;
  a1[20] = v4[11] ^ 0x33;
  unint64_t v6 = STACK[0x938] + 1;
  STACK[0x9B0] += 32;
  LODWORD(STACK[0x9DC]) = 0;
  STACK[0x9C8] = v6;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((89 * (v6 == 0)) ^ v2)))();
}

uint64_t sub_1001DDAE8()
{
  STACK[0x9B0] = v0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 + 1553) ^ 0x7A8) == -42900) * (((v2 - 271) | 1) ^ 0x7BE)) ^ v2)))();
}

uint64_t sub_1001DDB28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((125 * (a1 != 0)) ^ (v2 - 792))))();
}

void sub_1001DDB50()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xF86)))();
  JUMPOUT(0x1001DDB7CLL);
}

uint64_t sub_1001DDB8C()
{
  STACK[0x578] = v1;
  int v2 = LOBYTE(STACK[0xAA4]);
  int v3 = (v2 ^ 0x3D) - ((2 * (v2 ^ 0x3D)) & 0x66666666) + 1781140787;
  unsigned int v4 = (v3 ^ 0x95D5F2A1) + 1;
  v3 ^= 0x6A2A0D33u;
  unsigned int v5 = v3 + (v4 ^ 0x7DFF77D3) + ((2 * v4) & 0xFBFEEFA6) - 2113894355;
  LOBYTE(v2) = ((v2 ^ 0xD8) - ((2 * (v2 ^ 0xD8) + 54) & 0xBC) + 121) ^ v2 ^ ((v2 ^ 0xC2)
                                                                           - ((2 * (v2 ^ 0xC2) + 2) & 0xCA)
                                                                           - 26);
  LODWORD(STACK[0x9DC]) = -1879803947;
  int v6 = byte_1002832D0[((v5 + 1332117162 - ((2 * v5) & 0x9ECD1A1C) + 3684) ^ 0xB09972F0) + v3];
  int v7 = byte_100283BF0[LOBYTE(STACK[0xAAD]) ^ 0x9CLL];
  int v8 = ((v2 ^ 0x86) - 2 * (((v2 ^ 0x86) + 26) & 0xDF ^ v2 & 1) + 120);
  int v9 = (v7 - ((2 * v7 + 90) & 0xEE) + 36) ^ 0x3B;
  int v10 = (((v9 - ((2 * v9) & 0xD0)) << 16) + 90701824) ^ 0x5680000;
  int v11 = byte_1002834E0[LOBYTE(STACK[0xAA2]) ^ 0x46];
  int v12 = byte_10028A0A0[LOBYTE(STACK[0xAAF]) ^ 0x32] ^ 0xB8;
  unsigned int v13 = (v10 - ((2 * v10) & 0x27DC0000) + 334371433) ^ 0x13EE1A69 | (v12 - ((2 * v12) & 0x15C) - 404084050) ^ 0xE7EA2AAE;
  int v14 = (((v6 ^ v8 ^ 0x64) - ((2 * (v6 ^ v8 ^ 0x64)) & 0x80)) << 24) - 0x40000000;
  int v15 = byte_100283BF0[LOBYTE(STACK[0xAA5]) ^ 0x73];
  unsigned int v16 = ((((v11 ^ 0x14 ^ (((16 * v11) ^ 0x40)
                                                          - ((2 * ((16 * v11) ^ 0x40)) & 0xC0)
                                                          + 106))
         - ((2 * (v11 ^ 0x14 ^ (((16 * v11) ^ 0x40) - ((2 * ((16 * v11) ^ 0x40)) & 0xC0) + 106))) & 0x1A0)) << 8)
       - 1036529664) ^ 0xC237D000;
  int v17 = byte_10028A0A0[LOBYTE(STACK[0xAA3]) ^ 0x95] ^ 0xB8;
  uint64_t v18 = LOBYTE(STACK[0xAA8]);
  unsigned int v19 = (v16 - ((2 * v16) & 0x3CD1AC00) - 1637296420) ^ 0x9E68D6DC | (v17 - ((2 * v17) & 0x1E8) - 94012940) ^ 0xFA6579F4;
  HIDWORD(v20) = v15 + 1;
  LODWORD(v20) = (v15 << 24) - 1392508928;
  int v21 = (v20 >> 25) - ((2 * (v20 >> 25)) & 0xFFFFFFD8);
  HIDWORD(v20) = (v21 + 108) ^ 0x6C;
  LODWORD(v20) = (19 - v21) << 24;
  unsigned int v22 = ((((((v20 >> 31) - ((2 * (v20 >> 31)) & 0x5A) + 45) ^ 0x25)
         - ((2 * (((v20 >> 31) - ((2 * (v20 >> 31)) & 0x5A) + 45) ^ 0x25)) & 0x70)) << 16)
       - 1539833856) ^ 0xA4380000;
  unsigned int v23 = (v22 - ((2 * v22) & 0x72220000) + 957470611) ^ 0x3911D793 | ((v14 ^ 0xC0000000)
                                                                   - 1946429871
                                                                   - ((2 * v14) & 0x16000000)) ^ 0x8BFBD651;
  unsigned int v24 = v23 - ((2 * v23) & 0xE3686C18);
  int v25 = byte_100283BF0[LOBYTE(STACK[0xAA1]) ^ 0x99];
  uint64_t v26 = LOBYTE(STACK[0xAAB]) ^ 0xDLL;
  STACK[0x9C0] = 0;
  STACK[0x9F0] = 0;
  STACK[0x9E8] = 0;
  STACK[0x9B8] = 0;
  STACK[0x9E0] = 0;
  STACK[0x9F8] = 0;
  STACK[0xA00] = 0;
  int v27 = v25 - ((2 * (_BYTE)v25 + 90) & 0x70) - 27;
  int v28 = v18 ^ 0xFB ^ byte_1002832D0[v18 ^ 9];
  int v29 = ((((v27 ^ 0x36) - ((2 * v27) & 0x10)) << 16) + 1745354752) ^ 0x68080000;
  int v30 = byte_10028A0A0[LOBYTE(STACK[0xAA7]) ^ 0xD0];
  unsigned int v31 = (v29 - ((2 * v29) & 0x4760000) - 2110042458) ^ 0x823B4EA6 | (v19 - ((2 * v19) & 0x795F9862) - 1129329615) ^ 0xBCAFCC31;
  unsigned int v32 = ((byte_10028A0A0[v26] ^ 0xB8) - ((2 * (byte_10028A0A0[v26] ^ 0xB8)) & 0xFFFFFF3F) - 1126013537) ^ 0xBCE2659F | ((v28 << 24) - ((v28 << 25) & 0x72000000) - 1175254943) ^ 0xB9F30861;
  unsigned int v33 = v32 - ((2 * v32) & 0xD3977900);
  LODWORD(v18) = ((2 * v30) ^ 0x70) + 65;
  int v34 = v13 - ((2 * v13) & 0x23DE702) - 2128678015;
  int v35 = (((v30 ^ 0xFFFFFFB8) - 78) ^ 0xDE) + ((2 * ((v30 ^ 0xFFFFFFB8) - 78)) & 0xBC) - ((2 * v18) & 0x40);
  int v36 = v31 - ((2 * v31) & 0x2054AD6E) + 271210167;
  int v37 = byte_1002834E0[LOBYTE(STACK[0xAA6]) ^ 0x72];
  int v38 = (v24 - 239847924) ^ 0xF1B4360C | ((v35 + (v18 & 0x64 ^ 0x97) + 75)
                                        - ((2 * (v35 + (v18 & 0x64 ^ 0x97) + 75)) & 0xEC)
                                        - 348347530) ^ 0xEB3CA376;
  LODWORD(v26) = v37 ^ 0x79 ^ (((16 * v37) ^ 0x40) - ((2 * ((16 * v37) ^ 0x40)) & 0xA0) + 92);
  LODWORD(v26) = (((v26 - ((2 * v26) & 0xC6)) << 8) + 646210304) ^ 0x26846300;
  LODWORD(v18) = byte_100283BF0[LOBYTE(STACK[0xAA9]) ^ 0x73];
  int v39 = (v38 - ((2 * v38) & 0xED9EC4A0) + 1993302608) ^ 0x76CF6250 | (v26 - ((2 * v26) & 0x15E05800) + 183512105) ^ 0xAF02C29;
  int v40 = byte_1002834E0[LOBYTE(STACK[0xAAE]) ^ 0x46];
  unsigned int v41 = (((((v18 - ((2 * v18 + 2) & 6) + 48) ^ 0x8B)
         - ((2 * ((v18 - ((2 * (_BYTE)v18 + 2) & 6) + 48) ^ 0x8B)) & 0x128)) << 16)
       - 7077888) ^ 0xFF940000;
  LODWORD(v26) = ((16 * v40) ^ 0xFFFFFF90) - ((2 * ((16 * v40) ^ 0xFFFFFF90)) & 0x20) - 112;
  unsigned int v42 = (v41 - ((2 * v41) & 0xDBA60000) - 304911902) ^ 0xEDD369E2 | (v33 + 1774959744) ^ 0x69CBBC80;
  v40 ^= 0x7Eu;
  LODWORD(v26) = v26 ^ 0x40;
  int v43 = (v26 & v40) + (~(2 * (v26 & v40)) | 0xFFFFFFD5) + 86;
  int v44 = ((v26 + v40) ^ 0x3A) + ((2 * (v26 + v40)) & 0x74);
  int v45 = ((((v44 + ((2 * v43) ^ 0xB) + ((4 * v43) & 0xBC ^ 0xEB) + 38)
         - ((2 * (v44 + ((2 * v43) ^ 0xB) + ((4 * v43) & 0xBC ^ 0xEB) + 38)) & 0xCC)) << 8)
       + 1593337344) ^ 0x5EF86600;
  unsigned int v46 = v34 ^ 0x811EF381;
  uint64_t v47 = LOBYTE(STACK[0xAA0]);
  LODWORD(v26) = byte_1002834E0[LOBYTE(STACK[0xAAA]) ^ 0x50];
  int v48 = (v45 - ((2 * v45) & 0x5B77EE00) + 1841035104) ^ 0x6DBBF760 | v46;
  int v49 = LOBYTE(STACK[0xAAC]) ^ 0x6B ^ byte_1002832D0[LOBYTE(STACK[0xAAC]) ^ 0xELL];
  unsigned int v50 = (((v49 - ((2 * v49) & 0xFFFFFF8F)) << 24) + 1191182336) ^ 0x47000000;
  unsigned int v51 = (v48 - ((2 * v48) & 0x8DDDE610) - 957418744) ^ 0xC6EEF308 | (v50 - 812239916 + (~(2 * v50) | 0x61FFFFFF) + 1) ^ 0xCF9633D4;
  LODWORD(STACK[0x4B0]) = v51 + 1770402728 - ((2 * v51) & 0xD30C676E) + 15;
  int v52 = byte_1002832D0[v47 ^ 0xB0];
  unsigned int v53 = ((((v26 ^ 0xEA ^ (((16 * v26) ^ 0x40) + ((2 * ((16 * v26) ^ 0x40)) & 0x80) - 63) | 0x610100)
         - ((2
           * (v26 ^ 0xEA ^ (((16 * v26) ^ 0x40) + ((2 * ((16 * v26) ^ 0x40)) & 0x80) - 63))) & 0x116)) << 8)
       + 494336) ^ 0x61088B00;
  unsigned int v54 = (v53 - ((2 * v53) & 0x9FA1400) - 2063791602) ^ 0x84FD0A0E | (v42 - ((2 * v42) & 0x7CD2F7C4) - 1100383262) ^ 0xBE697BE2;
  LODWORD(STACK[0x560]) = (2 * v54) & 0x47B102CE;
  LODWORD(STACK[0x558]) = v54 - 1546092185;
  unsigned int v55 = (((v47 ^ 0x92 ^ v52) - ((2 * (v47 ^ 0x92 ^ v52)) & 0x62)) << 24) - 1325400064;
  unsigned int v56 = (v55 ^ 0xB1000000) - ((2 * v55) & 0x90000000) - 937424467;
  LODWORD(STACK[0x4D0]) = v56;
  LODWORD(STACK[0x4C0]) = v56 ^ 0xC82009AD;
  unsigned int v57 = v56 ^ 0xC82009AD | v36 ^ 0x102A56B7;
  LODWORD(STACK[0x570]) = (2 * v57) & 0xCB6A5D3A;
  LODWORD(STACK[0x568]) = v57 - 441110883;
  LODWORD(STACK[0x470]) = (v39 - ((2 * v39) & 0xEBD700AA) + 1978368085) ^ 0x65B7B765;
  int v58 = *(unsigned __int8 *)STACK[0x9C8];
  LOBYTE(STACK[0xA90]) = v58 + 107;
  int v59 = (v58 ^ 0x3BFFFFEF) + ((((v0 - 777) | 0x4A8) - 1482) & (2 * v58)) + 47645916;
  unsigned int v60 = (-1950399707 * v59 - ((394167882 * v59 - 1235244528) & 0x88055B94) - 1624079662) ^ 0xDA429950;
  unsigned int v61 = ((v60 + 1363901570) ^ 0x2090A084)
      + ((v60 % 0x101) ^ 0x72BEF7EF)
      + ((2 * (v60 % 0x101)) & 0x3DE)
      - ((2 * (v60 + 1363901570)) & 0xBEDEBEF6)
      + 1;
  int v62 = v61 - ((2 * v61 + 1499516696) & 0x44EC72FC) - 1893293814;
  unsigned int v63 = (v62 ^ ((v62 ^ 0xDD89C681) - ((2 * (v62 ^ 0xDD89C681) + 2) & 0x98F09898) - 864531379) ^ ((v62 ^ 0x6BD7213C)
                                                                                               - 1235294274
                                                                                               - ((2
                                                                                                 * ((v62 ^ 0x6BD7213C)
                                                                                                  - 1235294274)) & 0x819584E6)
                                                                                               + 1087029875) ^ 0xAEC4B741)
      - 1235294275;
  unsigned int v64 = (v63 - ((2 * v63) & 0x6117B450) + 814471720) ^ 0xD8AE23FA;
  unsigned int v65 = v64 - ((2 * v64 + 247228098) & 0x31C0F4D8);
  unsigned int v66 = v65 - 1606505011;
  HIDWORD(v20) = (v65 - 1606505011) ^ 0x18E07A6C;
  LODWORD(v20) = 1606505010 - v65;
  int v67 = (((v20 >> 31) ^ 0xDCACBEFD)
       - 827053620
       + ((2 * (v20 >> 31)) & 0xB9597DFA)
       + 1
       - ((2 * (((v20 >> 31) ^ 0xDCACBEFD) - 827053620 + ((2 * (v20 >> 31)) & 0xB9597DFA) + 1) + 911950276) & 0xE60D3C02)
       + 238304995) ^ (v65 - 1606505011) ^ 0x47E65936;
  unsigned int v68 = (((v66 ^ 0x98E07A6C) + 1363901570) ^ 0xDF7FFAEF)
      + ((2 * ((v66 ^ 0x98E07A6C) + 1363901570)) & 0xBEFFF5DE)
      + 545260817
      + (v67 ^ 0x60B2E6DE);
  return ((uint64_t (*)(void, void))*(&off_1002E1F70 + v0))((v68 ^ 0x7BFFBF6D) - 1074051180 + ((2 * v68) & 0xF7FF7EDA), v67 ^ 0xBB01FC9A);
}

void sub_1001DE964()
{
}

uint64_t sub_1001DE96C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7 = LODWORD(STACK[0x558]) - LODWORD(STACK[0x560]);
  LODWORD(STACK[0x4C8]) = v7;
  LODWORD(STACK[0x498]) = v7 ^ 0x4842EED5;
  char v8 = (v6 ^ 0x8B) - 117 - ((2 * (v6 ^ 0x8B) + 2) & 0x16) + 1;
  unsigned int v9 = a2 ^ 0x9F27C539 ^ ((LOBYTE(STACK[0xA90]) - 107)
                        - ((2 * (LOBYTE(STACK[0xA90]) + 149)) & 0xFA)
                        + 1150607229);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((1761 * (((134217726 - ((~(v8 & 3) | 0x59E3C62) + (v8 & 2 | 0x261C39D))) & 0x498047F) == 77071457)) ^ (v5 - 994))))(a1, v9 - ((2 * v9 + 864704412) & 0xB7663488) + 1970816530, 236, 250, a5, 1150607229, 2670183737, 864704412);
}

void sub_1001DEAC8()
{
}

uint64_t sub_1001DEAD0(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x568]) - LODWORD(STACK[0x570]);
  unsigned int v7 = (2 * a2) ^ 0xB7267199;
  unsigned int v8 = (4 * a2) & 0xFF7F75DC ^ 0x91B39EEF;
  unsigned int v9 = (a2 ^ 0xDBB31A44)
     - 1752068653
     * ((*(unsigned __int8 *)STACK[0x578] ^ 0x5FDFE32E) - 1599324051 + ((2 * *(unsigned __int8 *)STACK[0x578]) & 0x5C))
     - 2024331024;
  unsigned int v10 = v7 + v8 + (v9 ^ 0xF7E76AEF) + ((2 * v9) & 0xEFCED5DE);
  unsigned int v11 = v10 + 1;
  unsigned int v12 = a5 ^ 0xBB79EB1B;
  unsigned int v13 = (a5 ^ 0xBB79EB1B) - a1 + 1137923841 + v10 + 1;
  unsigned int v14 = v13 ^ 0xFAFBF99F;
  unsigned int v15 = (2 * v13) & 0xF5F7F33E;
  if (v10 + 131616769 >= 0xCAD9B2A3) {
    int v16 = 1468616377;
  }
  else {
    int v16 = 576913756;
  }
  unsigned int v17 = v15 + v14 + (((v11 - 445296988 + v16) % 0x101) ^ 0x6FC9DD8B) + ((2 * ((v11 - 445296988 + v16) % 0x101)) & 0x316);
  int v18 = (v17 - 1565546093 - ((2 * v17 + 175395244) & 0x1AEB017A)) ^ v6;
  int v19 = (v18 ^ 0x447EBE7B ^ (a1 - 1006307073)) + 120897070 - ((2 * (v18 ^ 0x447EBE7B ^ (a1 - 1006307073))) & 0xE697C5C);
  HIDWORD(v20) = v18 ^ 0x47EBE7B;
  LODWORD(v20) = v18 ^ 0x40000000;
  int v21 = ((v12 + (v18 ^ 0xBB814184) + 1 - ((2 * (v12 + (v18 ^ 0xBB814184) + 1)) & 0x6B138934) - 1249262438) ^ 0x4A763B65)
      + (v19 ^ 0x9C46F628 ^ ((v20 >> 29) - ((2 * (v20 >> 29)) & 0x36E4900C) - 1687009274))
      + 1;
  unsigned int v22 = ((v18 ^ 0x447EBE7B)
       + (v6 ^ 0xF1B8BE8B)
       + 2060771752
       - ((2 * ((v18 ^ 0x447EBE7B) + (v6 ^ 0xF1B8BE8B))) & 0xF5A9C350)) ^ 0xFEC5562F ^ (v21
                                                                                      - ((2 * v21) & 0x8236F0E)
                                                                                      - 2079213689);
  unsigned int v23 = v22 - ((2 * v22 + 1655225282) & 0xB7663488) - 1928890331;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v5 - 1816))((((v23 ^ 0x244CE5BB) + 1 + (v19 ^ 0x734BE2E)) ^ 0xFFFFA7C3)+ 1006329662+ ((2 * ((v23 ^ 0x244CE5BB) + 1 + (v19 ^ 0x734BE2E))) & 0xFFFF4F86));
}

void sub_1001DEE44()
{
}

uint64_t sub_1001DEE4C(uint64_t a1, int a2)
{
  unsigned int v4 = (v2 + (a2 ^ v2) - ((2 * (a2 ^ v2) + 2) & 0xB7663488) + 1) ^ v2;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((124 * (((v4 % 3) ^ 0x7CC58DFF) + 2 * (v4 % 3) == 2093321727)) ^ (v3 - 1268))))();
}

void sub_1001DEF84()
{
}

uint64_t sub_1001DEF90(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8 = (v7 + 844964218) * (v5 ^ v6) - ((1689929286 * (v5 ^ v6)) & 0x44949A94) + 575294794;
  int v9 = -134217728 * ((3 * (v5 ^ v6)) & 0xF) - 1946157056 * (v5 ^ v6) + 1009568654;
  unsigned int v10 = ((2 * ((v9 ^ 0x3C2CCB8E) & 0xFC000000 | (v8 >> 6))) & 0x93EFAB3E ^ 0x102022A)
      + (((v9 ^ 0x3C2CCB8E) & 0xFC000000 | (v8 >> 6)) ^ 0x497EFCAA);
  unsigned int v11 = ((192114608 * (a4 ^ 0x6E3ADEDE) - ((384229216 * (a4 ^ 0x6E3ADEDE)) & 0x9633A140) + 1259983018) ^ 0x4B19D0AA) & 0xFFFFFFF0 | ((-524863749 * (a4 ^ 0x6E3ADEDE) - ((-1049727498 * (a4 ^ 0x6E3ADEDE)) & 0xD680D032) - 348100583) >> 28);
  unsigned int v12 = ((2 * v11) & 0xBBFBFFF6 ^ 0x14) + (v11 ^ 0xDDFDFFF5);
  unsigned int v13 = (((~(1563722576 * a1) | 0x8B8E9E5F) - 1365622360 * a1 + 976793815) ^ 0x3A38B0D6) & 0xFFFFFFF8 | ((-170702795 * a1 - ((195465322 * a1) & 0x1869D990u) + 204795080) >> 29);
  int v14 = v13 ^ 0x6FB9FBD5;
  unsigned int v15 = (2 * v13) & 0xDF73F7AA;
  unsigned int v16 = ((-913864192 * v4 - ((-1827728384 * v4 + 208528384) & 0x977CEC00) - 772446140) ^ 0x4BBE7644) & 0xFFFFFE00 | ((-1570454587 * v4 - ((1154058122 * v4 + 1803958002) & 0x4966E66Cu) + 1517719215) >> 23);
  unsigned int v17 = ((2 * v16) & 0x3F6BFFBA ^ 0x92) + (v16 ^ 0x9FB5FF94);
  unsigned int v18 = 1642707893 * v17 - ((64190314 * v17 + 177034110) & 0x216A555A) + 368825452;
  int v19 = v12 + v14 + v15 - v17 + v10 - 1626632993;
  unsigned int v20 = ((-2123366400 * v19 - ((48234496 * v19 + 2065694720) & 0xEA000000) - 1298906932) ^ 0xF50440CC) & 0xFFF00000 | ((741165079 * v19 - ((1482330158 * v19 - 869304398) & 0xBD659856) + 1154123780) >> 12);
  HIDWORD(v21) = v12 + 5;
  LODWORD(v21) = (-1279558367 * v12 - ((1735850562 * v12 - 1109990582) & 0xF700DDC2) - 630464378) ^ 0xFB806EE0;
  unsigned int v22 = ((2 * v20) & 0xF76EFF9C ^ 0xAD618) + (v20 ^ 0xFBB294E2);
  int v23 = (v21 >> 5) - ((2 * (v21 >> 5)) & 0x6C4BCECE) - 1239029913;
  unsigned int v24 = (377029380 * v10 - ((754058760 * v10 - 1661888248) & 0xEC037290)) & 0xFFFFFFFC | ((((-1958968958 * v10
                                                                                           + 658269762) & 0xA37CA2FC)
                                                                                         + 979484479 * v10
                                                                                         + 446921568) >> 30);
  unsigned int v25 = 1513788405 * v22 - 2 * ((1513788405 * v22 + 1515415002) & 0x79B2DE71 ^ (1513788405 * v22) & 1) - 737786806;
  unsigned int v26 = ((2 * (v24 - 998603316)) & 0xFEFFFFFE ^ 0xEC037290) + ((v24 - 998603316) ^ 0x97E46B7);
  unsigned int v27 = v23 ^ 0xB625E767;
  unsigned int v28 = 1337753485 * (v23 ^ 0xB625E767) - ((-1619460326 * (v23 ^ 0xB625E767)) & 0x84D9ED44) - 1033046366;
  unsigned int v29 = -774594648 * v22 - ((-1549189296 * v22 - 1523163744) & 0x9274EE50) - 1680497156;
  int v30 = -2019103020 * v17 - ((256761256 * v17 + 708136440) & 0x23D77820) + 654729997;
  unsigned int v31 = ((2 * ((v30 ^ 0x11EBBC11) & 0xFFFFFFFC | (v18 >> 30))) & 0x7FE6DCAC ^ 4)
      + (((v30 ^ 0x11EBBC11) & 0xFFFFFFFC | (v18 >> 30)) ^ 0xBFF36E54)
      + v22;
  unsigned int v32 = (v23 ^ 0x951F7D14 ^ (v31 - ((2 * v31 + 145367992) & 0x467534E6) + 1737469007)) - v26 + 2139095039;
  int v33 = v32 ^ 0x3DFF76ED;
  int v34 = -1146936625 * (((2 * v32) & 0x7BFEEDDA) + (v32 ^ 0x3DFF76ED))
      - ((2001094046 * (((2 * v32) & 0x7BFEEDDA) + (v32 ^ 0x3DFF76ED)) + 829995194) & 0x60757086)
      + 1224152224;
  unsigned int v35 = -141561440 * v27 - ((-283122880 * v27) & 0x9846E580) + 1277391561;
  unsigned int v36 = ((v29 ^ 0xC93A772C) & 0xFFFFFFF8 | (v25 >> 29)) ^ 3;
  unsigned int v37 = v36 - ((2 * v36) & 0xB50B67EE) + 1518711799;
  HIDWORD(v21) = v33 + 1;
  LODWORD(v21) = v34 ^ 0x303AB842;
  int v38 = (v21 >> 1) - ((2 * (v21 >> 1)) & 0xB69B59C0) - 615666464;
  unsigned int v39 = ((((((v28 >> 27) & 0x1C ^ 0x18 | 0x1C2D5E48) + -472735306 - ((v28 >> 27) & 0x1C ^ 0x18 | 0xE3D2A1B6)) | 1) ^ 0x8CD066EC)
       - 1) ^ 0x90FD38A4 | ((((v35 ^ 0x4C2372C9) & 0xFFFFFFFC | ((2112093288 * v27
                                                                - ((-70780720 * v27) & 0xB0C0B580)
                                                                + 1482709696) >> 30)) ^ 1)
                          - ((2 * (v35 ^ 0x4C2372C9)) & 0x23540840)
                          + 296354852) ^ 0x11AA0424;
  HIDWORD(v21) = v39 ^ 1;
  LODWORD(v21) = (v39 - ((2 * v39) & 0x17B4618) + 12428044) ^ 0x679F3C38;
  unsigned int v40 = 2107421365 * (v37 ^ 0x5A85B3F7) - ((2067359082 * (v37 ^ 0x5A85B3F7)) & 0x57C8670C) - 1411107962;
  unsigned int v41 = (((-805306368 * v26 - (((v26 << 29) + 0x20000000) & 0x40000000) + 1931189494) ^ 0xA31B9CF6) & 0xF0000000 | ((71091677 * v26 - ((142183354 * v26 + 91851706) & 0x1D99DBBA) - 2121681990) >> 4)) ^ 0xECCEDD;
  unsigned int v42 = v41 - ((2 * v41) & 0xDBED4278) - 302603972;
  int v43 = -886353920 * (v37 ^ 0x5A85B3F7) - ((374775808 * (v37 ^ 0x5A85B3F7)) & 0x5E368000) - 1357165796;
  unsigned int v44 = v42 ^ 0xEDF6A13C;
  unsigned int v45 = -1761270391 * (v42 ^ 0xEDF6A13C) - ((772426514 * (v42 ^ 0xEDF6A13C)) & 0xB122D242) - 661559007;
  int v46 = ((v21 >> 2) - ((2 * (v21 >> 2)) & 0x1EBE0D0) + 16117864) ^ v42 ^ v37 ^ 0x3503E98E ^ v38;
  unsigned int v47 = (((973078528 * (v38 ^ 0xDB4DACE0) - ((1946157056 * (v38 ^ 0xDB4DACE0)) & 0x94000000) + 1267397027) ^ 0x4B8AF1A3) & 0xFE000000 | ((-721323363 * (v38 ^ 0xDB4DACE0) - ((-1442646726 * (v38 ^ 0xDB4DACE0)) & 0xE2D9925A) - 244528851) >> 7)) ^ 0x1E2D992;
  int v48 = v47 - ((2 * v47) & 0xB9989EC) - 2050177802;
  unsigned int v49 = ((v43 ^ 0xAF1B4B1C) & 0xFFFFF000 | (v40 >> 20)) ^ 0xABE;
  int v50 = v49 - ((2 * v49) & 0x11F6A210) + 150688008;
  unsigned int v51 = ((1259470848 * v44 - ((-1776025600 * v44) & 0x90900000) + 1212778565) ^ 0x48498845) & 0xFFFE0000 | (v45 >> 15);
  int v52 = (v51 ^ 0x2F3E2DC5) + ((2 * v51) & 0x5E7F39CE ^ 0x32044) - 792698087 + (v50 ^ 0x8FB5108);
  unsigned int v53 = v48 ^ (v52 - ((2 * v52) & 0xB4B27BA4) + 1515797970);
  unsigned int v54 = (((-945815552 * v46 - ((-1891631104 * v46) & 0xFB800000) + 2110705686) ^ 0x7DCED016) & 0xFFE00000 | ((1719619133 * v46 - ((1291754618 * v46) & 0x56485F4Cu) - 1423691866) >> 11)) ^ 0x156485;
  unsigned int v55 = v54 - ((2 * v54) & 0xB43E647A) - 635489731;
  unsigned int v56 = 2 * (((v53 ^ 0xDF95F924) & (v55 ^ 0xDA1F323D)) - ((2 * ((v53 ^ 0xDF95F924) & (v55 ^ 0xDA1F323D))) & 0x72974800))
      + 1922516992;
  unsigned int v57 = -152148793 * (v50 ^ v48 ^ v55 ^ 0x39DF4930)
      - ((-304297586 * (v50 ^ v48 ^ v55 ^ 0x39DF4930)) & 0xBD7578F6)
      - 558187397;
  unsigned int v58 = (v55 ^ 0x58ACB19 ^ v53) + (v56 ^ 0xDD9BDF7) - 2135881207 + ((2 * v56) & 0xFE9DEBEC ^ 0xE40C8000);
  unsigned int v59 = v58 - ((2 * v58) & 0xC2DB2F3E) + 1634572191;
  LODWORD(STACK[0x4F8]) = v59 ^ 0x616D979F;
  unsigned int v60 = 2 * (((v59 ^ 0x616D979F) & (v57 ^ 0xDEBABC7B)) - ((2 * ((v59 ^ 0x616D979F) & (v57 ^ 0xDEBABC7B))) & 0x7F49278A))
      + 2135500682;
  unsigned int v61 = (v57 ^ 0xBFD72BE4 ^ v59) + (v60 ^ 0x8013897D) + 10834185 + ((2 * v60) & 0xFEB55DEC ^ 0xFE904D04);
  unsigned int v62 = ((2 * v61) & 0xCCFFF4BE) + (v61 ^ 0xE67FFA5F);
  int v63 = 2 * v62 + 28806980;
  LODWORD(STACK[0x508]) = v63;
  LODWORD(STACK[0x510]) = v62;
  unsigned int v64 = v62 - (v63 & 0xC24B9E38) - 503212354;
  int v65 = v64 ^ v59;
  int v66 = v64 ^ 0x6125CF1C;
  LODWORD(STACK[0x458]) = v65;
  int v67 = v65 ^ 0x485883;
  unsigned int v68 = (v64 ^ 0x6125CF1C)
      + (v48 ^ 0x85CCC4F6)
      - ((2 * ((v64 ^ 0x6125CF1C) + (v48 ^ 0x85CCC4F6))) & 0x7189E3C)
      + 59526942;
  int v69 = -1909726993 * (v64 ^ 0x6125CF1C) - 1191383511;
  unsigned int v70 = v69 - ((475513310 * (v64 ^ 0x6125CF1C)) & 0x71F9DC52);
  LODWORD(STACK[0x4B8]) = v68;
  int v71 = v68 ^ 0x38C4F1E;
  int v72 = 1847209695 * (v68 ^ 0x38C4F1E) - ((473193918 * (v68 ^ 0x38C4F1E)) & 0x28E6D896) - 1804374965;
  unsigned int v73 = 2 * (((v64 ^ 0x6125CF1C) & (v55 ^ 0xDA1F323D)) - ((2 * ((v64 ^ 0x6125CF1C) & (v55 ^ 0xDA1F323D))) & 0x4B9156EA))
      - 879667478;
  LODWORD(STACK[0x550]) = v64;
  unsigned int v74 = (v55 ^ 0xBB3AFD21 ^ v64) + (v73 ^ 0x6C8AA111) + 1491339269 + ((2 * v73) & 0x4E37EFF4 ^ 0x622ADD4);
  int v75 = v74 - ((2 * v74) & 0x18B1CAA0) + 207152464;
  LODWORD(STACK[0x570]) = v75;
  LODWORD(STACK[0x4F0]) = v66;
  int v76 = 1002438656 * v66 - ((2004877312 * v66) & 0x46800000) + 593305188;
  unsigned int v77 = ((1571042304 * (v75 ^ 0xC58E550) - ((-1152882688 * (v75 ^ 0xC58E550)) & 0xA5B16800) + 1389934150) ^ 0x52D8B646) & 0xFFFFFC00 | ((198666509 * (v75 ^ 0xC58E550) - ((397333018 * (v75 ^ 0xC58E550)) & 0xB8135104) + 1544136834) >> 22);
  unsigned int v78 = ((2 * v77) & 0xEF6E7FDE ^ 0x2C0) + (v77 ^ 0xF7B73E9F);
  LODWORD(STACK[0x4E8]) = v67;
  unsigned int v79 = ((786366464 * v71 - ((1572732928 * v71) & 0x4E160000) + 655043157) ^ 0x270B2A55) & 0xFFFF0000 | HIWORD(v72);
  unsigned int v80 = ((2 * v79) & 0x9F7B7BD6 ^ 0x128C6) + (v79 ^ 0x4FBD2998);
  unsigned int v81 = (((260087808 * v67 - ((520175616 * v67) & 0x5F0DC000) + 797375320) ^ 0x2F86FB58) & 0xFFFFE000 | ((-2048885755 * v67 - ((197195786 * v67) & 0x3B16D8CAu) + 495676517) >> 19)) ^ 0x3B1;
  unsigned int v82 = v81 - ((2 * v81) & 0xC8779D9E) + 1681641167;
  unsigned int v83 = ((2 * ((v76 ^ 0x235D1E64) & 0xFFC00000 | (v70 >> 10))) & 0xDF57774C ^ 0x547644)
      + (((v76 ^ 0x235D1E64) & 0xFFC00000 | (v70 >> 10)) ^ 0x6F85849D)
      - v80
      + v78;
  int v84 = v82 ^ 0x643BCECF;
  unsigned int v85 = 1257180215 * (v82 ^ 0x643BCECF) - ((-1780606866 * (v82 ^ 0x643BCECF)) & 0x9BC9BB68) - 840639052;
  unsigned int v86 = v82 ^ 0x2281BF ^ (v83 - ((2 * v83 - 793410388) & 0xC8329EE0) + 1282675142);
  unsigned int v87 = ((-40894464 * v86 - ((455081984 * v86) & 0x17200000) + 195006150) ^ 0xB9F8EC6) & 0xFFF00000 | ((435343321 * v86 - ((870686642 * v86) & 0x320D1444) - 1727624670) >> 12);
  unsigned int v88 = ((2 * v87) & 0xD4BFFFF8 ^ 0x1320D0) + (v87 ^ 0xEA566F94);
  unsigned int v89 = (((-1316814848 * v78 - ((1661337600 * v78 + 325451776) & 0xC3AA0000) - 343405885) ^ 0xE1D50AC3) & 0xFFFF0000 | ((182563203 * v78 - ((365126406 * v78 + 99488614) & 0xC6BDFE40) - 430569261) >> 16)) ^ 0xE35E;
  int v90 = v89 - ((2 * v89) & 0x19060E22) + 209913617;
  unsigned int v91 = ((((~v80 << 30) & 0x80000000) - (v80 << 29) - 1279471520) ^ 0x53BCD060) & 0xE0000000 | ((943187215 * v80
                                                                                               - ((1886374430 * v80
                                                                                                 - 956084106) & 0xBC5CD6E4)
                                                                                               - 1045425235) >> 3);
  unsigned int v92 = ((2 * v91) & 0x7FEFDFFC ^ 0x178B9ADC) + (v91 ^ 0x34322290) + v88;
  unsigned int v93 = v92 - ((2 * v92 - 1420812276) & 0xA5F67DA6) - 1465692455;
  unsigned int v94 = ((2019670016 * v84 - ((-255627264 * v84) & 0xAE5D1000) - 684816334) ^ 0xD72E8832) & 0xFFFFF800 | (v85 >> 21);
  unsigned int v95 = ((2 * v94) & 0xBB67FCDE ^ 0xCDE) + (v94 ^ 0x5DB3F800);
  unsigned int v96 = -1045817253 * v88 - ((55849142 * v88 + 1829815000) & 0x408D059C) + 1456399418;
  unsigned int v97 = 289091809 * (v90 ^ 0xC830711) - ((578183618 * (v90 ^ 0xC830711)) & 0x8B673DFA) + 1169399549;
  v88 *= 204308480;
  unsigned int v98 = v88 + 817233920;
  unsigned int v99 = (((v88 + 817233920) & 0xFFFF8000 | (v96 >> 17)) ^ 0x4142E263)
      + v88
      + ((2 * ((v88 + 817233920) & 0xFFFF8000 | (v96 >> 17))) & 0x7D7A9B7E ^ 0xFFFF7FB9);
  unsigned int v100 = ((2 * ((v90 ^ 0xDE7839C2 ^ v93) - v95 + 1572077167)) & 0xFFDFB2EE)
       + (((v90 ^ 0xDE7839C2 ^ v93) - v95 + 1572077167) ^ 0x7FEFD977);
  unsigned int v101 = (v96 >> 17) ^ (((v96 >> 17) ^ 0xFFFFAFDC) - ((2 * ((v96 >> 17) ^ 0xFFFFAFDC) + 2) & 0x771858EC) + 999042167) ^ 0xEED1C8E1 ^ (v99 - ((2 * v99 - 555312254) & 0xAABB6968) - 992935307);
  int v102 = v101 + v98 - 2 * ((v101 + v98) & 0x6684C65B ^ v101 & 0x19) + 1719977538;
  unsigned int v103 = ((-2145703632 * v100 - ((3560032 * v100 + 1397511520) & 0x838E1CA0) + 1802320134) ^ 0x41C70E56) & 0xFFFFFFF0 | ((-1207848301 * v100 - ((1879270694 * v100 - 986397354) & 0xBDA425BA) + 1097627016) >> 28);
  unsigned int v104 = ((2 * v103) & 0xC6B5EB7A ^ 0x1A) + (v103 ^ 0xE35AF5B0);
  unsigned int v105 = 492085891 * (v102 ^ 0x6684C642) - ((984171782 * (v102 ^ 0x6684C642)) & 0x6363739C) - 1313752626;
  unsigned int v106 = (((1986118144 * (v90 ^ 0xC830711) - ((-322731008 * (v90 ^ 0xC830711)) & 0xC06D1800) - 533295979) ^ 0xE0368C95) & 0xFFFFFE00 | (v97 >> 23)) ^ 0x8B;
  int v107 = v106 - 2 * (v106 & 0x521D26FC ^ (v97 >> 23) & 0x14) - 769841432;
  unsigned int v108 = -1483399605 * v104 - ((1328168086 * v104 - 753289406) & 0xA60CD74A) - 1131198650;
  unsigned int v109 = ((-1799663310 * v95 - ((695640676 * v95 + 1887723172) & 0x779C6E70) - 200251765) ^ 0x3BCE3739) & 0xFFFFFFFE | ((((-1799663310 * v95 - 1203622062) & 0xA585CF7C) - 1247651993 * v95 - 786693992) >> 31);
  int v110 = ((2 * v109) & 0x7BD3F2AE) + (v109 ^ 0x3DE9F957);
  unsigned int v111 = 1968343564 * (v102 ^ 0x6684C642) - ((-358280168 * (v102 ^ 0x6684C642)) & 0xC3E20E88);
  unsigned int v112 = ((v104 + (v107 ^ 0xB499E0AA ^ v102) + 480578115) ^ 0xFEFFD32A)
       - v110
       + ((2 * (v104 + (v107 ^ 0xB499E0AA ^ v102) + 480578115)) & 0xFDFFA654);
  unsigned int v113 = -162153024 * v112 - ((-324306048 * v112 - 243681920) & 0xB0F67E80) + 1362631222;
  unsigned int v114 = (v113 ^ 0x587B3F76) & 0xFFFFFFC0 | ((735663863 * v112
                                            - ((1471327726 * v112 + 264627926) & 0x5328AF48)
                                            + 1903643407) >> 26);
  int v115 = (v114 ^ 0xA) - ((2 * v114) & 0x23036420) + 293712400;
  unsigned int v116 = (((-224147104 * v104 - ((625447616 * v104 + 590800960) & 0x3D611780) - 800325634) ^ 0x9EB08BDE) & 0xFFFFFFE0 | (v108 >> 27)) ^ 0xA;
  int v117 = v116 - 2 * (v116 & 0x712C0C5F ^ (v108 >> 27) & 5) - 248771494;
  unsigned int v118 = ((1507413208 * v110 - ((867342768 * v110 + 1705088304) & 0x4F39F650)) & 0xFFFFFFF8 | ((-348444261 * v110
                                                                                              - ((1450595126 * v110
                                                                                                + 1823748774) & 0x615662A4u)
                                                                                              + 1728400037) >> 29))
       - 630340160;
  unsigned int v119 = (v117 ^ 0xF12C0C5A)
       + ((((v111 - 504297659) ^ 0xE1F10745) & 0xFFFFFFFC | (v105 >> 30)) ^ 0x6DE3BD4A)
       + ((2 * (v111 - 504297659)) & 0xDBC77A90 ^ 0xC3C20A80);
  unsigned int v120 = v119 + (v118 ^ 0xB92716D3) + ((2 * v118) & 0x3D77DBFC ^ 0xD31D258) - 211790662;
  int v121 = ((2 * (v119 - 1843641672)) & 0x5D7FEFF6) + ((v119 - 1843641672) ^ 0x2EBFF7FB);
  unsigned int v122 = v115 ^ (v120 - ((2 * v120) & 0xB94B16FE) + 1554353023);
  HIDWORD(v21) = v115 ^ 0x210;
  LODWORD(v21) = v113 ^ 0x587B3C00;
  unsigned int v123 = (((-1438646272 * v121 - ((1417674752 * v121 + 645922816) & 0x69800000) + 137322998) ^ 0xB4EF61F6) & 0xFFC00000 | ((600736425 * v121 - ((1201472850 * v121 - 1799640422) & 0xCF81A5BA) + 840869930) >> 10)) ^ 0x19F034;
  int v124 = (v123 - ((2 * v123) & 0x5623EDBC) - 1424886050) ^ ((v21 >> 10) - ((2 * (v21 >> 10)) & 0xB2338BD2) - 652622359);
  HIDWORD(v21) = v124 ^ 0x301867;
  LODWORD(v21) = v124 ^ 0xD6000000;
  int v125 = ((v21 >> 22) - ((2 * (v21 >> 22)) & 0x21855ABE) - 1866289825) ^ 0x706FEFCF;
  unsigned int v126 = (-921885487 * v125 - ((-1843770974 * v125) & 0xFAE35A52) - 42881751) ^ v122;
  int v127 = ((2 * v126) ^ 0x60AB288C) - ((2 * ((2 * v126) ^ 0x60AB288C)) & 0x27348F10) + 1939490697;
  v126 ^= 0xAC349D75;
  int v128 = v126 + (v127 & 0x38C21266 ^ 0x2D65FDFC) + ((2 * v127) & 0x318424C8 ^ 0x21040400) - 501743612;
  int v129 = v128 - 2 * (v128 & 0x136BCE0F ^ v126 & 1) - 1821651442;
  int v130 = v129 ^ v117;
  LODWORD(STACK[0x494]) = v129 ^ v115;
  int v131 = (v122 ^ 0x4D24396F)
       + (v129 ^ 0x6C9431F1)
       + 1
       - ((2 * ((v122 ^ 0x4D24396F) + (v129 ^ 0x6C9431F1) + 1)) & 0x168653C0)
       - 1958532640;
  unsigned int v132 = ((-1019281408 * (v130 ^ 0x6247C254) - ((-2038562816 * (v130 ^ 0x6247C254)) & 0xBE880000) + 1598295720) ^ 0x5F440EA8) & 0xFFFF0000 | ((-932265153 * (v130 ^ 0x6247C254) - ((-1864530306 * (v130 ^ 0x6247C254)) & 0xEFC7B944) + 2011421858) >> 16);
  unsigned int v133 = ((2 * v132) & 0xCAADE4BE ^ 0xE486) + (v132 ^ 0x655685BC);
  LODWORD(STACK[0x468]) = v129;
  unsigned int v134 = ((-268435456 * ((v129 ^ v115 ^ 0x82EA7C1E) & 7) - 939524096 * (v129 ^ v115 ^ 0x82EA7C1E) + 1025609613) ^ 0x3D218F8D) & 0xF8000000 | ((-407839463 * (v129 ^ v115 ^ 0x82EA7C1E) - ((1331804722 * (v129 ^ v115 ^ 0x82EA7C1E)) & 0x6C69C8BA) - 1238047651) >> 5);
  unsigned int v135 = ((2 * v134) & 0xAFF8BE1C ^ 0xB600E04) + (v134 ^ 0xD24DF82C);
  unsigned int v136 = ((876609536 * (v131 ^ 0x8B4329E0) - ((1753219072 * (v131 ^ 0x8B4329E0)) & 0xEC800000) - 162739603) ^ 0xF64CCA6D) & 0xFFC00000 | ((-1957866287 * (v131 ^ 0x8B4329E0) - ((379234722 * (v131 ^ 0x8B4329E0)) & 0x21635A54) + 280079658) >> 10);
  unsigned int v137 = ((2 * v136) & 0xFF37AFF6 ^ 0x8D6) + (v136 ^ 0xFF9FFB90);
  unsigned int v138 = ((714735616 * (v129 ^ 0x936BCE0E) - ((1429471232 * (v129 ^ 0x936BCE0E)) & 0x5F2C0000) - 1349066588) ^ 0xAF96E0A4) & 0xFFFE0000 | ((1818858829 * (v129 ^ 0x936BCE0E) - ((-657249638 * (v129 ^ 0x936BCE0E)) & 0xD03C0FA2) + 1746798545) >> 15);
  unsigned int v139 = (v138 ^ 0xDFB03FC7) + ((2 * v138) & 0xBF61DFF6 ^ 0x18070) + v135 + v133 - v137 - 1176531217;
  unsigned int v140 = -1985904479 * v135 - ((323158338 * v135 + 1776709732) & 0x473050C8) + 1485529238;
  unsigned int v141 = ((-1918894080 * v139 - ((457179136 * v139 + 889192448) & 0xDD000000) + 152924137) ^ 0xEE9D6FE9) & 0xFFE00000 | ((-742505363 * v139 - ((-1485010726 * v139 + 540385704) & 0xF1422E6E) - 2000951285) >> 11);
  int v142 = ((2 * v141) & 0x6F72DFFA ^ 0x120840) + (v141 ^ 0x37B67BDF);
  int v143 = 1107296256 * v135 - (((v135 << 26) + 1207959552) & 0x48000000) - 2003996090;
  unsigned int v144 = ((-116832896 * v133 - ((303205120 * v133 + 297298688) & 0x142AAE00) + 49384627) ^ 0xA155733) & 0xFFFFFF80 | ((-1007545717 * v133 - ((132392214 * v133 + 65237206) & 0x6CE5384) - 447159763) >> 25);
  int v145 = v144 ^ 0x7EFEFA0A;
  unsigned int v146 = (2 * v144) & 0xFDFDF496 ^ 0x82;
  unsigned int v147 = ((2 * ((v143 ^ 0x248D7246) & 0xFE000000 | (v140 >> 7))) & 0xC33E7AFE ^ 0x20E60A0)
       + (((v143 ^ 0x248D7246) & 0xFE000000 | (v140 >> 7)) ^ 0x60D80D2F);
  unsigned int v148 = -597694891 * v147 - ((952093866 * v147 + 494859690) & 0x487D3814) - 1291970849;
  unsigned int v149 = ((553648128 * v137 - ((1107296256 * v137 + 1241513984) & 0xA4000000) + 1998967821) ^ 0xD225D40D) & 0xFF000000 | ((1254474017 * v137 - ((-1786019262 * v137 - 1713644726) & 0xDC4925E6) - 1156415336) >> 8);
  unsigned int v150 = ((2 * v149) & 0xECBDFB3E ^ 0x9C4924) + (v149 ^ 0xF6B0D90D);
  LOBYTE(v149) = ((v69 & 1) - (v70 & 8) - 22) & 0x7B;
  unsigned int v151 = ((-80322113 * v142 - ((-160644226 * v142 - 172938630) & 0xE5AAC454) + 1840117607) ^ 0xF2D5622A) >> (v149 ^ 0x63);
  unsigned int v152 = ((v151 - ((2 * v151) & 0xBE565C96) + 1596665419) ^ 0x5F2B2E4B) >> (v149 ^ 0x6A);
  unsigned int v153 = ((2 * v152) & 0xEEF777FE) + (v152 ^ 0x777BBBFF);
  int v154 = -309554688 * v153 - 1940614656;
  unsigned int v155 = v153 - 545259520 * v142;
  int v156 = v145 + v146 - 2104948344 + v147 - v150 - v142 + 0x20000;
  unsigned int v157 = -351613019 * v150 - ((-703226038 * v150 + 284815114) & 0xD4577E86) - 223824184;
  int v158 = 1409286144 * v147 - ((671088640 * v147 + 671088640) & 0x48000000) - 113779217;
  unsigned int v159 = (1239945263 * v156 - 2 * ((1239945263 * v156 + 834519446) & 0x2A18E71D ^ (1239945263 * v156) & 1u) - 1680430926) >> 16;
  int v160 = ((2 * (v159 & 0x1ABD ^ 0x30360A18)) & 0x40082450) - (v159 & 0x1ABD ^ 0x30360A18) + 364522645;
  int v161 = 271515648 * v156 - ((6160384 * v156 + 53215232) & 0x18AE0000) - 840074116;
  unsigned int v162 = ((v159 & 0xE542 ^ 0xC102) + (v159 & 0x2402 ^ 0x984B2C05) - ((v159 & 0xE542 ^ 0xC102) & 0x3E3E3E3E)) ^ 0x98CA4D37;
  unsigned int v163 = ((2 * (v161 & 0xF66A0000 ^ 0xE6600000)) | 0x24783A06) - (v161 & 0xF66A0000 ^ 0xE6600000) + 1841554173;
  unsigned int v164 = 671088640 * v150 - ((1342177280 * v150 + 1342177280) & 0xE0000000) + 495407065;
  unsigned int v165 = v160 ^ 0x258C2C95 | (((2 * (v161 & 0x9950000 ^ 0x191D0204)) | 0xC8A0C1B4)
                            - (v161 & 0x9950000 ^ 0x191D0204)
                            + 464494374) ^ 0xF55862DE;
  unsigned int v166 = ((v162 | 0xD6662610) - (v162 | 0x2999D9EF) + 697948655) ^ 0xD6E7A622 | ((v163 & 0x9FC16E50 ^ 0xDC06251 | v163 & 0x603E91A8)
                                                                               - 1) ^ 0x7DDE7F50;
  unsigned int v167 = (v166 - ((2 * v166) & 0xBB8754D6) + 1573104235) ^ 0x5DC3AA6B | (v165 - ((2 * v165) & 0xCE8CC16C) - 414818122) ^ 0xE74660B6;
  unsigned int v168 = ((2 * v167) & 0xBE7BDFFC) + (v167 ^ 0x5F3DEFFE);
  unsigned int v169 = (v158 ^ 0xA537DDEF) & 0xFC000000 | (v148 >> 6);
  int v170 = v169 ^ 0x7B2F00DF;
  unsigned int v171 = (2 * v169) & 0xF77FF55E ^ 0x121F440;
  unsigned int v172 = -(v154 & 0xB8B47A00) - 154777344 * v155 - 1568373203;
  LODWORD(STACK[0x500]) = v130;
  LODWORD(STACK[0x480]) = v131;
  int v173 = v130 ^ v115 ^ v131;
  unsigned int v174 = (-1745435063 * v155 - ((804097170 * v155 - 1181985646) & 0xB44D8724) - 1225986597) >> 24;
  int v175 = v174 ^ 0x84;
  LODWORD(STACK[0x4A0]) = v173;
  if (v173 == -125478492) {
    int v175 = 33;
  }
  int v176 = (v175 & (v174 ^ 0x5A)) - ((2 * (v175 & (v174 ^ 0x5A))) & 0x1A);
  unsigned int v177 = ((2 * ((v164 ^ 0xF5874FD9) & 0xF8000000 | (v157 >> 5))) & 0x76F5FFDA ^ 0x6A0BBD0)
       + (((v164 ^ 0xF5874FD9) & 0xF8000000 | (v157 >> 5)) ^ 0xB82BA217);
  unsigned int v178 = ((v174 & 0x8E ^ 5) - (v174 & 0x50) - 230720400) ^ 0xF46F5E33;
  unsigned int v179 = 356336609 * v177 - ((712673218 * v177 + 920785766) & 0x3981B62A) + 942793928;
  unsigned int v180 = v172 & 0xDD1EDE00 ^ 0x241BCE91;
  unsigned int v181 = ((v172 & 0x610100 ^ 0x8949D6C3) + (v172 & 0x22802000) - 1) ^ 0x803D553;
  unsigned int v182 = (v176 + 984218637) ^ 0x3AA9FC0D | (v180 - 1) ^ 0xF801D290;
  int v183 = v170 + v171 + v177 - v155 - v168 + 228194072;
  int v184 = (((2 * v178) & 0x204C80) - v178 + 401443263) ^ 0x11BDABA3 | (((2 * v181) | 0x6CC4C1FE) - v181 + 1235066625) ^ 0x3768426E;
  unsigned int v185 = ((2 * v182) & 0x73BE693C) + (v182 ^ 0xB9DF349E) + (v184 ^ 0xFC9FF773) + ((2 * v184) & 0xF93FEEE6);
  int v186 = v185 - ((2 * v185 + 318875614) & 0x1AD27B2C) - 689303163;
  unsigned int v187 = (~(1374320446 * v183 + 615976110) | 0x6E98C1B) + 687160223 * v183 - 1897480118;
  int v188 = -1175453696 * v183 - ((870318080 * v183 + 182452224) & 0x28E00000) + 2044945369;
  unsigned int v189 = ((-585842332 * v168 - 2 * ((-585842332 * v168 + 336052936) & 0x7E4823A4 ^ (-585842332 * v168) & 4)) & 0xFFFFFFFC | ((-146460583 * v168 - ((1854562482 * v168 + 168026468) & 0x4FBC1CBE) - 1394606319) >> 30))
       + 307226216;
  unsigned int v190 = ((2 * v189) & 0xFF9E9F1E ^ 0xFC900700) + (v189 ^ 0x81876C2F);
  unsigned int v191 = (((260308992 * v177 - ((520617984 * v177 + 1301807104) & 0xCDE00000) + 230503192) ^ 0xE6F13318) & 0xFFFC0000 | (v179 >> 14)) ^ 0x27303;
  int v192 = v191 - 2 * (v191 & 0x4244CF5D ^ (v179 >> 14) & 0x10) - 1035677875;
  unsigned int v193 = ((2 * ((v188 ^ 0x147363D9) & 0xFFF00000 | (v187 >> 12))) & 0xA3CFFBAE ^ 0xF9126)
       + (((v188 ^ 0x147363D9) & 0xFFF00000 | (v187 >> 12)) ^ 0xD1E03564);
  unsigned int v194 = (((v186 ^ 0x8D693D96) - v190 - ((2 * ((v186 ^ 0x8D693D96) - v190) - 6381794) & 0xDF4FC908) - 277400557) ^ 0xC546335C)
       - v193
       - 773325353;
  int v195 = (v192 ^ 0x4F2DF2DB ^ v186) - (v190 + v193) + 1370967398;
  int v196 = v195 - ((2 * v195) & 0x597A221E) + 750588175;
  unsigned int v197 = (1298035837 * (((2 * v194) & 0xABFFFBD6) + (v194 ^ 0x55FFFDEB))
        - ((448588026 * (((2 * v194) & 0xABFFFBD6) + (v194 ^ 0x55FFFDEB)) + 256970882) & 0x12DAF9EE)
        - 1592392392) ^ v196;
  LODWORD(STACK[0x454]) = v197;
  unsigned int v198 = (v197 ^ 0xA5D06DF8) - ((2 * (v197 ^ 0xA5D06DF8) - 518696158) & 0xAC03FA7E) - 963860784;
  int v199 = v196 ^ 0x2CBD110F;
  LODWORD(STACK[0x558]) = v198;
  int v200 = v198 ^ 0x5601FD3F;
  unsigned int v201 = v193 + 773325353 + v200 - ((2 * (v193 + 773325353 + v200)) & 0xC3C9CBE2);
  int v202 = 2 * ((v200 & v199) - ((2 * (v200 & v199)) & 0x1675A92E)) + 376809774;
  unsigned int v203 = ((2 * (v190 - 2144292751 + v200)) & 0xB99EF1F8) + ((v190 - 2144292751 + v200) ^ 0xDCCF78FC);
  unsigned int v204 = ((v200 + v199) ^ 0x6FDF1F9D)
       + ((2 * (v200 + v199)) & 0xDFBE3F3A)
       + (v202 ^ 0xB6F5AE63)
       + ((2 * v202) & 0xBEFFF164 ^ 0xD314AFBB);
  int v205 = v204 + 1 - 2 * ((v204 + 799070487) & 0x2BC36939 ^ (v204 + 1) & 1) - 1687928242;
  unsigned int v206 = -1679190127 * v203 - ((936587042 * v203 + 965192328) & 0x57E99D86) + 146318343;
  unsigned int v207 = -(((v203 << 28) + 0x40000000) & 0xAAAAAAAA) - 2013265920 * v203 - 167381828;
  LODWORD(STACK[0x47C]) = v205;
  unsigned int v208 = v205 ^ 0xABC36938;
  unsigned int v209 = -835817011 * v200 - ((-1671634022 * v200) & 0xA78E03F8) - 741932548;
  LODWORD(STACK[0x4D8]) = v203;
  v203 += 590382852;
  LODWORD(STACK[0x478]) = v203;
  if (v203 >= 0xF510DE7C) {
    int v210 = 1118286080;
  }
  else {
    int v210 = 934842236;
  }
  LODWORD(STACK[0x4E0]) = v210;
  unsigned int v211 = v201 - 505092623;
  LODWORD(STACK[0x568]) = v211;
  unsigned int v212 = v211 ^ 0xE1E4E5F1;
  unsigned int v213 = (~(965091214 * (v211 ^ 0xE1E4E5F1)) | 0xDB24B71B) + 1019416519 * (v211 ^ 0xE1E4E5F1) - 1838308237;
  unsigned int v214 = v207 ^ 0xD605F4BC | (v206 >> 5);
  int v215 = 1558419968 * v200 - ((432485376 * v200) & 0x11BBE800);
  unsigned int v216 = ((1643700224 * v212 - ((66174976 * v212) & 0x29C00000) - 1797255233) ^ 0x94E00FBF) & 0xFFFFE000 | (v213 >> 19);
  unsigned int v217 = ((2 * v216) & 0xFBB7FDB6 ^ 0x2492) + (v216 ^ 0x7DDBEC96);
  int v218 = 2
       * ((v214 ^ 0x1C2C69E8)
        + (v214 ^ 0x9DF3E72)
        + ((2 * v214) & 0x6EFECFF6 ^ 0x7D41B31B)
        + ((2 * v214) & 0x3AE79F3C ^ 0x2A70C2C))
       - 1273548610;
  unsigned int v219 = ((2 * v214) & 0xD6F8D8DA ^ 0x2B848C8) + (v214 ^ 0xEA23CA1B) + (v218 ^ 0x7FF83FEF);
  unsigned int v220 = v219
       + ((2 * v218) & 0xFFF07FDC)
       - 2 * ((v219 + ((2 * v218) & 0xFFF07FDC) + 344675236) & 0x6D504D67 ^ v219 & 2)
       + 31170825;
  unsigned int v221 = (((v215 - 1998719919) ^ 0x88DDF451) & 0xFFFFFE00 | (v209 >> 23)) ^ 0x1A7;
  unsigned int v222 = ((581304320 * v208 - ((1162608640 * v208) & 0xDD140000) - 292844490) ^ 0xEE8B8C36) & 0xFFFE0000 | ((-1653501613 * v208 - ((987964070 * v208) & 0xA455E93C) - 768936802) >> 15);
  unsigned int v223 = ((2 * v222) & 0x1F9E7FF6 ^ 0x248A2) + (v222 ^ 0x8FCE9BAE);
  unsigned int v224 = v217 - 2111569627 + ((v221 - 2 * (v221 & 0x567BCD5B ^ (v209 >> 23) & 8) - 696529581) ^ 0xBB2B8036 ^ v220);
  unsigned int v225 = (v224 ^ 0xF3FF79AC) - v223 + ((2 * v224) & 0xE7FEF358);
  unsigned int v226 = -1797732091 * v225 - ((699503114 * v225 + 1490406678) & 0xEF45D14A) - 1542598864;
  unsigned int v227 = (((335544320 * v225 - ((671088640 * v225 + 1476395008) & 0x40000000) - 850167959) ^ 0xA1537769) & 0xFC000000 | (v226 >> 6)) ^ 0x1DE8BA2;
  unsigned int v228 = ((1501495296 * v217 - ((855506944 * v217 + 1555431424) & 0x5A200000) - 1687456902) ^ 0x2D10737A) & 0xFFFF0000 | ((-1067558529 * v217 - ((-2135117058 * v217 + 2142297270) & 0x8E955836) + 119741046) >> 16);
  unsigned int v229 = ((2 * v228) & 0xEEFFEC6A ^ 0x18C00) + (v228 ^ 0x777F317F);
  unsigned int v230 = ((1020903016 * (v220 ^ 0x6D504D65) - ((2041806032 * (v220 ^ 0x6D504D65)) & 0x8B72FAC0) - 977699482) ^ 0xC5B97D66) & 0xFFFFFFF8 | ((-2019870771 * (v220 ^ 0x6D504D65) - ((255225754 * (v220 ^ 0x6D504D65)) & 0x196F63F2) + 213365241) >> 29);
  int v231 = 2 * v229 + 285217686;
  int v232 = v231 ^ 0x150B0533;
  unsigned int v233 = (2 * v231) & 0xD5E9F598;
  unsigned int v234 = ((-2124698916 * v223 - ((45569464 * v223 + 543075480) & 0x4384E350)) & 0xFFFFFFFC | ((542567095 * v223
                                                                                             - ((1085134190 * v223
                                                                                               - 937972954) & 0xF67E21D8)
                                                                                             + 1598744191) >> 30))
       - 1309554700;
  unsigned int v235 = ((2 * v234) & 0xFE6FFFD6 ^ 0x4204E352) + (v234 ^ 0xDEF58E42);
  int v236 = v227 - 2 * (v227 & 0x68BE9B1C ^ (v226 >> 6) & 8) - 390161644;
  unsigned int v237 = v236 ^ 0xE8BE9B14;
  unsigned int v238 = 1896977585 * (v236 ^ 0xE8BE9B14) - ((-501012126 * (v236 ^ 0xE8BE9B14)) & 0xA81E26BA) - 737209507;
  unsigned int v239 = v229 - 2004874805 + ((v230 - ((2 * v230) & 0xF6934CF8) + 2068424316) ^ 0x93F73D68 ^ v236);
  unsigned int v240 = v239 ^ 0xEDFFB55F;
  unsigned int v241 = (2 * v239) & 0xDBFF6ABE;
  unsigned int v242 = -888650713 * v229 - ((34637902 * v229 + 48681946) & 0x3B053C0) + 390829005;
  int v243 = v232 - v233 - v235 + v240 + v241 + 1884436128;
  unsigned int v244 = (((573740576 * v237 - ((73739328 * v237) & 0x1EDFDA40) + 258993469) ^ 0xF6FED3D) & 0xFFFFFFE0 | (v238 >> 27)) ^ 0x1A;
  unsigned int v245 = (~(110100480 * v235 + 30408704) | 0xF9BFFFFF) + 457703424 * v235;
  unsigned int v246 = (740364444 * v229 - ((1480728888 * v229 - 1415884952) & 0xB2176DF8) + 785997489) ^ 0xD90BB6FD;
  unsigned int v247 = (v246 & 0xFFFFFFFC | (v242 >> 30))
       - 2 * ((v246 & 0x3519329C | (v242 >> 30) & 0x3519329D) ^ v246 & 0x10)
       + 890843789;
  unsigned int v248 = ((1634190592 * v243 - ((-1026586112 * v243 + 797358592) & 0xF46ED200) - 1845836219) ^ 0xFA376945) & 0xFFFFFF00 | ((123824069 * v243 - ((247648138 * v243 - 886077766) & 0x96F65B64) + 823324943) >> 24);
  unsigned int v249 = ((2 * v248) & 0x4EFEEEF2 ^ 0x92) + (v248 ^ 0xA77F77B2);
  int v250 = v244 - ((2 * v244) & 0x4F34E7EA) + 664433653;
  unsigned int v251 = -1510210467 * (v250 ^ 0x279A73F5) - ((1274546362 * (v250 ^ 0x279A73F5)) & 0x8BD9497A) + 1173136573;
  unsigned int v252 = ((1752761193 * v235 - ((1358038738 * v235 + 2011860794) & 0x56039722) - 420015314) >> 13) ^ 0x5580E;
  int v253 = (v252 | (v245 + 1074773267) ^ 0x327BD12)
       - 2 * ((v252 | (v245 + 1074773267) ^ 0x327BD12) & 0x634B525F ^ v252 & 0xA);
  char v254 = ((2 * ((v238 >> 27) & 0x1E ^ 0x5A)) | 0x54) - ((v238 >> 27) & 0x1E ^ 0x5A) + 86;
  unsigned int v255 = -805306368 * (v250 ^ 0x279A73F5) - ((-1610612736 * (v250 ^ 0x279A73F5)) & 0xBFFFFFFF);
  unsigned int v256 = (v253 + 1665880661) ^ 0xA27ACFF6 ^ ((v247 ^ 0x12834178 ^ v250)
                                           + 1484818567
                                           + v249
                                           - ((2 * ((v247 ^ 0x12834178 ^ v250) + 1484818567 + v249)) & 0x82633B46)
                                           - 1053712989);
  unsigned int v257 = ((-54826807 * v256 - ((-109653614 * v256) & 0xBFF19BDE) - 537342481) ^ 0xDFF8CDEF) >> (v254 ^ 0xEA);
  unsigned int v258 = v257 - ((2 * v257) & 0xF0012B72);
  unsigned int v259 = ((2 * ((v255 - 780566289) ^ 0xD17980EF | (v251 >> 4))) & 0xFAF6E9FE ^ 0x8B48096)
       + (((v255 - 780566289) ^ 0xD17980EF | (v251 >> 4)) ^ 0xF925BEB4);
  LOBYTE(v255) = v254 ^ 0xF4;
  unsigned int v260 = ((-869343120 * ((v253 + 1665880661) ^ 0x634B5255)
         - ((-1738686240 * ((v253 + 1665880661) ^ 0x634B5255)) & 0x8EAD9220)
         + 1196869909) ^ 0x4756C915) & 0xFFFFFFF0 | ((1287843335 * ((v253 + 1665880661) ^ 0x634B5255)
                                                    - ((-1719280626 * ((v253 + 1665880661) ^ 0x634B5255)) & 0x94CA466E)
                                                    + 1248142135) >> 28);
  unsigned int v261 = (((v258 - 134179399) ^ 0xF80095B9) >> v255) - ((2 * (((v258 - 134179399) ^ 0xF80095B9) >> v255)) & 0x32);
  unsigned int v262 = 44593339 * v249 - ((89186678 * v249 + 275617082) & 0xF04885CC) + 5967235;
  unsigned int v263 = ((1356953088 * v249 - ((-1581061120 * v249 - 617974784) & 0xE360B800) + 1598395918) ^ 0xF1B05C0E) & 0xFFFFFE00 | (v262 >> 23);
  int v264 = (v263 ^ 0xF0) - 2 * ((v263 ^ 0xF0) & 0x2822252E ^ (v262 >> 23) & 0xE);
  unsigned int v265 = ((2 * v260) & 0xFBBD7F74) + (v260 ^ 0x7DDEBFBE) - v259;
  int v266 = v265 - ((2 * v265 + 2134469258) & 0x6F495406) + 927031112;
  v264 -= 1474157280;
  unsigned int v267 = v264 ^ 0xA8222520;
  unsigned int v268 = 2
       * (((v264 ^ 0xA8222520) & (v266 ^ 0xB7A4AA03)) - ((2 * ((v264 ^ 0xA8222520) & (v266 ^ 0xB7A4AA03))) & 0x2A3120E6))
       - 1439620890;
  unsigned int v269 = ((2 * (v259 + 42240769 + (v264 ^ 0xA8222520))) & 0xD1FDFFFE)
       + ((v259 + 42240769 + (v264 ^ 0xA8222520)) ^ 0x68FEFFFF);
  unsigned int v270 = ((-219307228 * v256) ^ 0xEBFFE8CF)
       + ((-438614456 * v256) & 0xD7FFD198)
       + ((v261 + 25) ^ 0xAF7FD6E4)
       + ((2 * (v261 + 281)) & 0x1FA ^ 0x32);
  int v271 = v270 - ((2 * v270 + 1224769640) & 0x412FFDFC) - 2062008526;
  unsigned int v272 = (v266 ^ v264 ^ 0x1F868F23) + (v268 ^ 0x972E4759) - 1025468351 + ((2 * v268) & 0x7A3ECF7C ^ 0x5022414C);
  int v273 = (v272 ^ 0x36B7FB7D) + ((2 * v272) & 0x6D6FF6FA) - 918027133 + (v271 ^ 0x2097FEFE);
  int v274 = v273 - ((2 * v273) & 0x263A550E);
  int v275 = (v271 ^ 0x2097FEFE)
       + 1391156377 * v269
       - 293315431
       - ((2 * ((v271 ^ 0x2097FEFE) + 1391156377 * v269 - 293315431)) & 0x3BE87886)
       - 1644938173;
  v274 += 320678535;
  int v276 = (v275 ^ v274 ^ 0x42A11380) + 1;
  unsigned int v277 = v276 + v267 - 1658338315 + (~(2 * (v276 + v267)) | 0xC5B07815);
  int v278 = v275 ^ v274 ^ 0x6C691E6;
  LODWORD(STACK[0x488]) = v278 ^ v271;
  int v279 = v276 + (v274 ^ 0x131D2A87) - ((2 * (v276 + (v274 ^ 0x131D2A87))) & 0x2330F8EA) + 295206005;
  LODWORD(STACK[0x4A8]) = v279;
  HIDWORD(v280) = v275 ^ ~v274;
  LODWORD(v280) = (1810100545 * (v275 ^ v274 ^ 0xBD5EEC7F)
                 - ((1472717442 * (v275 ^ v274 ^ 0xBD5EEC7F)) & 0x718A7BF8)
                 - 1195033092) ^ 0xB8C53DFC;
  int v281 = (v280 >> 2) - ((2 * (v280 >> 2)) & 0x9B839268) + 1304545588;
  LODWORD(STACK[0x530]) = v277 + 1;
  unsigned int v282 = (((-(((v277 + 1) << 29) ^ 0x40000000) - 817267585) ^ 0xEF497C7F) & 0xE0000000 | ((1570816535
                                                                                         * ((v277 + 1) ^ 0x9D27C3F5)
                                                                                         - ((-1153334226
                                                                                           * ((v277 + 1) ^ 0x9D27C3F5)) & 0x8B991106)
                                                                                         + 1171032195) >> 3)) ^ 0x8B99110;
  LODWORD(STACK[0x464]) = v278;
  LODWORD(STACK[0x49C]) = v271;
  HIDWORD(v280) = v278 ^ ~v271;
  LODWORD(v280) = (-2094532911 * (v278 ^ v271 ^ 0x9B0F8367)
                 - 1377939456
                 - ((105901474 * (v278 ^ v271 ^ 0x9B0F8367)) & 0x5BBCA006)
                 + 3) ^ 0xADDE5000;
  unsigned int v283 = v282 - ((2 * v282) & 0xC0DC4BCA);
  int v284 = (v280 >> 3) - ((2 * (v280 >> 3)) & 0x2E9EF81C) + 391085070;
  int v285 = v284 ^ 0x174F7C0E;
  unsigned int v286 = -826717667 * (v284 ^ 0x174F7C0E) - ((-1653435334 * (v284 ^ 0x174F7C0E)) & 0x8727F72E) + 1133771671;
  unsigned int v287 = ((((~(-310030720 * (v279 ^ 0x11987C75)) | 0x7BC6F9FF) + 1992468288 * (v279 ^ 0x11987C75) + 1109164855) | 1) ^ 0x421C8337) & 0xFFFFFFC0 | ((1037765277 * (v279 ^ 0x11987C75) - ((2075530554 * (v279 ^ 0x11987C75)) & 0x442033CAu) + 571480549) >> 26);
  unsigned int v288 = ((2 * v287) & 0xC6B9FFEE) + (v287 ^ 0x635CFFFF);
  int v289 = v281 ^ v284 ^ 0x3AE090DF;
  v283 += 1617831397;
  int v290 = v283 ^ 0x606E25E5;
  unsigned int v291 = ((2 * ((v283 ^ v289) - v288 + 1667039223)) & 0xF7FF7166) + (((v283 ^ v289) - v288 + 1667039223) ^ 0xFBFFB8B3);
  unsigned int v292 = -652470813 * v291 - ((842542022 * v291 + 1191777422) & 0x5C93BD32) + 1372481760;
  int v293 = 59574554 * (v283 ^ 0x606E25E5);
  unsigned int v294 = (v293 & 0xF2269F76) - 29787277 * v290;
  int v295 = v293 - ((119149108 * v290) & 0x368D6374) - 1689865798;
  int v296 = v295 & 4;
  unsigned int v297 = (v295 & 0xFFFFFFFE | ((v294 + 116174916) >> 31)) ^ 0x9B46B1BA;
  int v298 = v297 - 2 * (v297 & 0x221A48C5 ^ v296) + 572147905;
  unsigned int v299 = (((1468792832 * v291 - ((-1357381632 * v291 + 1379401728) & 0xEA880000) + 509807486) ^ 0xF5470B7E) & 0xFFFC0000 | (v292 >> 14)) ^ 0x2B927;
  unsigned int v300 = v299 - ((2 * v299) & 0xE11C0CBC) - 259127714;
  unsigned int v301 = -1879532367 * (v300 ^ 0xF08E065E) - 1307093984 - ((535902562 * (v300 ^ 0xF08E065E)) & 0x642EA842);
  unsigned int v302 = ((-1525776384 * v285 - ((1243414528 * v285) & 0xB2000000) - 654297474) ^ 0xD900367E) & 0xFFFF8000 | (v286 >> 17);
  unsigned int v303 = ((2 * v302) & 0xFFBFF36C ^ 0x4300) + (v302 ^ 0x7FDFD87F);
  unsigned int v304 = ((1800536064 * v288 - ((-693895168 * v288 - 1950089216) & 0xE2500000) - 1223997908) ^ 0xF129462C) & 0xFFFE0000 | ((-2110409303 * v288 - ((74148690 * v288 + 1962722786) & 0xF044EB22) + 849401986) >> 15);
  unsigned int v305 = ((2 * v304) & 0xAFFF75B6 ^ 0x36080) + (v304 ^ 0x57FE4A9F);
  unsigned int v306 = 1843957469 * v305 - ((-607052358 * v305 + 842821090) & 0xF137444C) - 1850091241;
  unsigned int v307 = (v298 ^ 0xD2944E9F ^ v300) - (v305 + v303) - 673205103;
  unsigned int v308 = ((2 * v307) & 0xFEB37AFE) + (v307 ^ 0xFF59BD7F);
  unsigned int v309 = -1975125367 * v308 - ((344716562 * v308 + 1499537938) & 0xBE66C81A) - 1947994858;
  HIDWORD(v280) = ~(v292 >> 14);
  LODWORD(v280) = (v301 + 1) ^ 0xB2175420;
  unsigned int v310 = ((1327401336 * v303 - ((-1640164624 * v303 - 1978066592) & 0xA922D530) - 1717700786) ^ 0xD4916A9E) & 0xFFFFFFF8 | ((-1981558481 * v303 - ((331850334 * v303 - 1321000148) & 0x8922EF84) + 489883992) >> 29);
  int v311 = (v310 ^ 2) - ((2 * v310) & 0x50AE682);
  int v312 = (v280 >> 3) - ((2 * (v280 >> 3)) & 0x4EC864C) + 41304870;
  int v313 = v312 ^ 0x2764326;
  unsigned int v314 = -2097495347 * (v312 ^ 0x2764326) - ((99976602 * (v312 ^ 0x2764326)) & 0x40249168) - 1609414476;
  int v315 = v311 - 2105183423;
  unsigned int v316 = ((v312 ^ 0x2764326) & ((v311 - 2105183423) ^ 0x82857341))
       - ((2 * ((v312 ^ 0x2764326) & ((v311 - 2105183423) ^ 0x82857341))) & 0x53EDA0B6);
  unsigned int v317 = -1085202432 * v308 - ((2124562432 * v308 + 608321536) & 0xB8824000) - 295548856;
  int v318 = 498728960 * v305 - ((997457920 * v305 + 1539571712) & 0x46FC0000) + 291517934;
  unsigned int v319 = ((v317 ^ 0xDC412848) & 0xFFFFE000 | (v309 >> 19)) ^ 0xBE6;
  int v320 = v319 - 2 * (v319 & 0x6B0960F ^ (v309 >> 19) & 8) + 112236039;
  unsigned int v321 = ((v318 ^ 0xA37E35EE) & 0xFFFE0000 | (v306 >> 15)) ^ 0x1F137;
  unsigned int v322 = (v315 ^ 0x80F33067 ^ v312)
       + ((2 * v316 - 739401546) ^ 0xAC325B4C)
       - 2145385466
       + ((2 * (2 * v316 - 739401546)) & 0xFFBFF7F4 ^ 0xA79B4164);
  unsigned int v323 = v322 - ((2 * v322) & 0xD4FDE7CE) - 360778777;
  unsigned int v324 = v321 - ((2 * v321) & 0x9D96200A) + 1321930757;
  int v325 = v324 ^ 0x4ECB1005;
  unsigned int v326 = 901433759 * (v324 ^ 0x4ECB1005) - ((1802867518 * (v324 ^ 0x4ECB1005)) & 0x810F1252) - 1064859351;
  unsigned int v327 = v324 ^ v320 ^ 0xA20575E5 ^ v323;
  unsigned int v328 = -1895857437 * v327 - ((503252422 * v327) & 0x189BE4E6) + 206434931;
  int v329 = -1049526272 * v327 - ((48431104 * v327) & 0x238C0000);
  unsigned int v330 = ((-1757413376 * (v320 ^ 0x6B09607) - ((780140544 * (v320 ^ 0x6B09607)) & 0xC9800000) - 455774119) ^ 0xE4D57059) & 0xFFC00000 | ((-1046001059 * (v320 ^ 0x6B09607) - ((-2092002118 * (v320 ^ 0x6B09607)) & 0xE6297032) + 1930737689) >> 10);
  unsigned int v331 = ((2 * v330) & 0xDEFFE76E ^ 0x39824C) + (v330 ^ 0xEF633699);
  unsigned int v332 = (((v329 - 1849283673) ^ 0x91C62BA7) & 0xFFFF8000 | (v328 >> 17)) ^ 0x626;
  unsigned int v333 = ((-1218890784 * v325 - ((1857185728 * v325) & 0x8CAE8D40) + 1180124861) ^ 0x465746BD) & 0xFFFFFFE0 | (v326 >> 27);
  unsigned int v334 = (((-175793664 * v313 - ((-351587328 * v313) & 0x81B4CC00) + 1088055063) ^ 0x40DA6717) & 0xFFFFFE00 | (v314 >> 23)) ^ 0x140;
  int v335 = v334 - ((2 * v334) & 0x590F3CA) - 2100790811;
  unsigned int v336 = v331 + 276827209 + (v335 ^ 0x82C879E5);
  unsigned int v337 = v331 + 276827209 + (((v333 ^ 0x18) - ((2 * v333) & 0x634D064A) + 832996133) ^ 0xB36EFAC0 ^ v335);
  unsigned int v338 = v332 - ((2 * v332) & 0x83F09618) - 1040692468;
  unsigned int v339 = (v336 ^ 0xAFB19CBF) + ((2 * v336) & 0x5F63397E) + 1347314497 + (v338 ^ 0xC1F84B0C);
  unsigned int v340 = v338 ^ (v337 - ((2 * v337) & 0x69789306) + 884754819) ^ 0xAC29AA02 ^ (((2 * v339) & 0x67F63F8E)
                                                                             + (v339 ^ 0xB3FB1FC7)
                                                                             - ((2
                                                                               * (((2 * v339) & 0x67F63F8E)
                                                                                + (v339 ^ 0xB3FB1FC7))
                                                                               + 909056416) & 0xB2DB511A)
                                                                             + 1954887005);
  unsigned int v341 = v340 - ((2 * v340 - 1701039570) & 0xD5A89B9E);
  LODWORD(STACK[0x520]) = v341 - 1205704986;
  LODWORD(STACK[0x578]) = ((v341 - 1205704986) ^ 0x6AD44DCF)
                        + (v338 ^ 0xC1F84B0C)
                        - ((2 * (((v341 - 1205704986) ^ 0x6AD44DCF) + (v338 ^ 0xC1F84B0C))) & 0x69716264)
                        - 1262964430;
  LODWORD(STACK[0x548]) = ((v341 - 1205704986) ^ 0x952BB230)
                        + v331
                        - ((2 * (((v341 - 1205704986) ^ 0x952BB230) + v331) + 553654420) & 0xA84544DC)
                        + 1688383160;
  uint64_t v342 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v7 + 1706))(1032);
  STACK[0x9D0] = v342;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((27 * (v342 == 0)) ^ v7)))();
}

uint64_t sub_1001E3458@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v10 = STACK[0x560];
  int v11 = STACK[0x4F0];
  LODWORD(STACK[0x420]) = (STACK[0x4E8] & LODWORD(STACK[0x4F0]))
                        - ((2 * (STACK[0x4E8] & LODWORD(STACK[0x4F0]))) & 0xA24107DE)
                        - 786398225;
  LODWORD(STACK[0x418]) = (v11 | LODWORD(STACK[0x4F8])) - ((2 * (v11 | LODWORD(STACK[0x4F8]))) & 0xE2182546) - 250867037;
  unsigned int v12 = STACK[0x550];
  LODWORD(STACK[0x4E8]) = LODWORD(STACK[0x550]) >> 8;
  LODWORD(STACK[0x448]) = HIBYTE(v12) ^ 0xEF9384C4;
  LODWORD(STACK[0x438]) = HIWORD(v12) ^ 0xF3640A8A;
  int v13 = LODWORD(STACK[0x4D8]) + LODWORD(STACK[0x4E0]) + v4 - 344459384;
  LODWORD(STACK[0x4D8]) = v13 - ((2 * v13) & 0x2504FAB0) + 310541656;
  LODWORD(STACK[0x404]) = v3 - 1205704960;
  unsigned int v14 = STACK[0x520];
  int v15 = LODWORD(STACK[0x520]) ^ v6;
  int v16 = STACK[0x578];
  int v17 = LODWORD(STACK[0x548]) ^ (v7 | 0x6E);
  LODWORD(STACK[0x414]) = v17 - 449817616 + v8 + 1398804763 + (~(2 * (v17 - 449817616 + v8)) | 0x593FDDCB);
  unsigned int v18 = (((2 * (v15 & 0x684CEC41 ^ 0x4800CC00)) | 0x87B83528) - (v15 & 0x684CEC41 ^ 0x4800CC00) - 1138498196) ^ 0x3DC9AD4 | v15 & 0x97B313BE ^ 0x97900300;
  int v19 = v18 - ((2 * v18) & 0x5E896580) + 793031360;
  LODWORD(STACK[0x428]) = v19;
  int v20 = v19 ^ 0x2F44B2C0;
  unsigned int v21 = 1892111955 * (v19 ^ 0x2F44B2C0) - ((26127526 * (v19 ^ 0x2F44B2C0)) & 0x2F9DAF8) - 2122519172;
  int v22 = -1259183163 * v17 - ((1776600970 * v17) & 0x5485065C) + 709002030;
  unsigned int v23 = (((-1933756032 * (v16 ^ v5) - ((427455232 * (v16 ^ v5)) & 0xDB75EE00) + 1840969498) ^ 0x6DBAF71A) & 0xFFFFFF80 | ((119110259 * (v16 ^ v5) - ((238220518 * (v16 ^ v5)) & 0xED18EB58) + 1988916652) >> 25)) ^ 0x3B;
  unsigned int v24 = (1811939328 * v2 - ((-671088640 * v2) & 0xDFFFFFFF) + 1824568893) ^ 0x6CC0B63D | ((-292073701 * v2
                                                                                         - ((-584147402 * v2) & 0xB071846C)
                                                                                         + 1480114742) >> 6);
  int v25 = -228342528 * v17 - ((80185856 * v17) & 0x14226C00);
  unsigned int v26 = v23 - ((2 * v23) & 0xB9732648) + 1555665700;
  unsigned int v27 = ((-899678208 * v20 - ((348127232 * v20) & 0x4C800000) - 1505034311) ^ 0xA64AFFB9) & 0xFFE00000 | (v21 >> 11);
  unsigned int v28 = ((2 * v27) & 0xFFBDDBDC ^ 0x205B18) + (v27 ^ 0xFFCEC273);
  unsigned int v29 = ((v25 + 168900113) ^ 0xA113611) & 0xFFFFFF00 | HIBYTE(v22);
  unsigned int v30 = ((2 * v29) & 0xFB7EE7FE ^ 0x54) + (v29 ^ 0xFDBF73D5);
  unsigned int v31 = ((2 * v24) & 0xFDBF7BDE ^ 0x814210) + (v24 ^ 0xFFBF5EE7) - v30;
  int v32 = v31 - 731394840 + ~(2 * ((v31 + 2128590352) & 0x558816DF ^ v31 & 8));
  int v33 = v26 ^ 0x5CB99324;
  unsigned int v34 = 990449079 * (v26 ^ 0x5CB99324) - ((1980898158 * (v26 ^ 0x5CB99324)) & 0xA32550EC) - 778917770;
  unsigned int v35 = 2 * (((v32 ^ 0xD58816D7) & (v26 ^ 0x5CB99324)) - ((2 * ((v32 ^ 0xD58816D7) & (v26 ^ 0x5CB99324))) & 0x3DA41D3A))
      + 1034165562;
  unsigned int v36 = (v26 ^ 0x893185F3 ^ v32) + (v35 ^ 0xE859E6C5) + 704775169 + ((2 * v35) & 0xABFBF7FC ^ 0x2B483274);
  HIDWORD(v37) = v28 - 1711351195 + (v36 ^ 0xEEF9A5FD);
  LODWORD(v37) = (1772274431 * (HIDWORD(v37) + ((2 * v36) & 0xDDF34BFA))
                - ((1397065214 * (HIDWORD(v37) + ((2 * v36) & 0xDDF34BFA)) + 576781472) & 0x4E84B098)
                - 126691684) ^ 0x2742584C;
  int v38 = (v37 >> 1) - ((2 * (v37 >> 1)) & 0x162ED7BE) + 186084319;
  unsigned int v39 = ((-448640624 * v28 - ((1250202400 * v28 + 113940544) & 0x53A83560) + 1832478421) ^ 0x29D41AB5) & 0xFFFFFFF0 | ((-296475495 * v28 - ((-592950990 * v28 - 932402812) & 0xDC342872) - 766482181) >> 28);
  int v40 = ((2 * v39) & 0x79EAD5EE ^ 0xC) + (v39 ^ 0x3CF56AF1);
  unsigned int v41 = ((151893760 * v33 - ((303787520 * v33) & 0x87DF3600) - 1007707257) ^ 0xC3EF9B87) & 0xFFFFFF00 | HIBYTE(v34);
  unsigned int v42 = ((2 * v41) & 0xEFB377AE ^ 0x1A2) + (v41 ^ 0xF7D9BB06);
  unsigned int v43 = (((508559360 * v30 - ((480247808 * v30 + 480247808) & 0x17000000) + 1775975450) ^ 0x8B8B3C1A) & 0xFFF00000 | ((1757266405 * v30 - ((-780434486 * v30 - 468845622) & 0x8BA2A7AC) - 1210560069) >> 12)) ^ 0x45D15;
  unsigned int v44 = 513021603 * v40 - ((489172294 * v40 + 528438646) & 0x13EE31DE) + 1505149866;
  int v45 = 189890560 * v40 - ((379781120 * v40 + 716898304) & 0x4FC00000) - 46300920;
  unsigned int v46 = v42 + 136725545 + ((v43 - ((2 * v43) & 0x81459774) - 1063072838) ^ 0xCBB5A065 ^ v38);
  unsigned int v47 = -1293815639 * v42 - ((1707336018 * v42 + 1449451042) & 0x48932C38) + 1333527853;
  int v48 = STACK[0x558];
  int v49 = 1895322752 * v42 - ((32549120 * v42 + 40833280) & 0xB4FE800) + 517962991;
  int v50 = (v46 ^ 0x335DF57D) - v40 + ((2 * v46) & 0x66BBEAFA);
  unsigned int v51 = -1183072685 * v50 - ((49773734 * v50 + 30623004) & 0xCBE09E0) + 659072894;
  unsigned int v52 = 1275068416 * v50 - ((-1744830464 * v50 + 1879048192) & 0xA0000000) - 1985084938;
  unsigned int v53 = (((238747648 * (v38 ^ 0xB176BDF) - ((477495296 * (v38 ^ 0xB176BDF)) & 0xA5980000) - 758323832) ^ 0xD2CCE588) & 0xFFFF0000 | ((1225264699 * (v38 ^ 0xB176BDF) - ((-1844437898 * (v38 ^ 0xB176BDF)) & 0xBF6D221A) + 1605800205) >> 16)) ^ 0x5FB6;
  unsigned int v54 = v53 - ((2 * v53) & 0x94CAB38C) - 899327546;
  unsigned int v55 = v54 ^ 0xCA6559C6;
  unsigned int v56 = -1225981559 * (v54 ^ 0xCA6559C6) - ((1843004178 * (v54 ^ 0xCA6559C6)) & 0x5CC9B37A) + 778361277;
  unsigned int v57 = ((2 * ((v52 ^ 0x51AE01F6) & 0xFC000000 | (v51 >> 6))) & 0xDFCF59FE ^ 0x25826)
      + (((v52 ^ 0x51AE01F6) & 0xFC000000 | (v51 >> 6)) ^ 0xEFFED0EC);
  unsigned int v58 = ((v45 ^ 0x27E00108) & 0xFFFF8000 | (v44 >> 17)) ^ 0x4FB;
  unsigned int v59 = v58 - ((2 * v58) & 0x9A51F3D2) - 852952599;
  unsigned int v60 = ((v49 ^ 0x85A7F46F) & 0xFFFFFF80 | (v47 >> 25)) ^ 0x52;
  unsigned int v61 = ((v60 - ((2 * v60) & 0x793E58C) - 2083917114) ^ 0x49ACAB00 ^ v54) + 270029569 + v57;
  int v62 = v61 - ((2 * v61) & 0x79E92D4C) + 1022662310;
  unsigned int v63 = 2 * (((v62 ^ 0x3CF496A6) & (v59 ^ 0xCD28F9E9)) - ((2 * ((v62 ^ 0x3CF496A6) & (v59 ^ 0xCD28F9E9))) & 0x17612972))
      - 1755240078;
  unsigned int v64 = -551430355 * v57 - ((1044622938 * v57 + 674946138) & 0x77201FBE) - 1884455412;
  unsigned int v65 = (v59 ^ 0xF1DC6F4F ^ v62) + (v63 ^ 0x483E9591) + 547373115 + ((2 * v63) & 0xBEBF79C4 ^ 0x2E8250C4) + 738;
  unsigned int v66 = ((2 * v65) & 0xBFF791D8) + (v65 ^ 0x5FFBC8EC);
  LODWORD(STACK[0x4F8]) = HIWORD(LODWORD(STACK[0x558])) ^ 0x927E7AA6;
  unsigned int v67 = (((824180736 * v55 - ((1648361472 * v55) & 0xD6400000) + 1798560292) ^ 0x6B33DA24) & 0xFFE00000 | (v56 >> 11)) ^ 0x5CC9B;
  LODWORD(STACK[0x410]) = v16 & 0xFFFFFDFF;
  unsigned int v68 = (((-1978697760 * (v59 ^ 0xCD28F9E9) - ((2027456 * (v59 ^ 0xCD28F9E9)) & 0x23EDE00) + 18837277) ^ 0x11F6F1D) & 0xFFFFFFE0 | ((877689791 * (v59 ^ 0xCD28F9E9) - ((1755379582 * (v59 ^ 0xCD28F9E9)) & 0xCA5B6C66) + 1697494579) >> 27)) ^ 0xC;
  unsigned int v69 = v67 - ((2 * v67) & 0x8FB3FFC2) + 1205469153;
  unsigned int v70 = (((1896947712 * v66 - ((-501071872 * v66 + 107806720) & 0xD97DC000) - 269130505) ^ 0xECBEE4F7) & 0xFFFFE000 | ((1312000137 * v66 - 2 * ((1312000137 * v66 + 813701556) & 0x3AB706B9 ^ (1312000137 * v66) & 1) + 725033068) >> 19)) ^ 0x756;
  unsigned int v71 = ((((~(481558528 * v57 + 951320576) | 0xCCD3FFFF) - 1369833472 * v57 - 168729870) ^ 0x199762F1) & 0xFFFE0000 | (v64 >> 15)) ^ 0x17720;
  int v72 = v71 - 2 * (v71 & 0x39FC0FCF ^ (v64 >> 15) & 3) - 1174663220;
  unsigned int v73 = ((2 * ((v69 ^ 0x47D9FFE1) + (v72 ^ 0x4603F033) + 1)) & 0xFE9EFFFE)
      + (((v69 ^ 0x47D9FFE1) + (v72 ^ 0x4603F033) + 1) ^ 0x7F4F7FFF);
  LODWORD(STACK[0x434]) = HIWORD(v14);
  unsigned int v74 = v70 - ((2 * v70) & 0xFF8EE3BA) + 2143777245;
  unsigned int v75 = (v72 ^ 0xB9FC0FCC) + ((v68 - ((2 * v68) & 0xCD8224DC) + 1723929198) ^ 0x2118ED8F ^ v69);
  unsigned int v76 = ((2 * v75) & 0xB7FE577E) + (v75 ^ 0x5BFF2BBF) + (v74 ^ 0x80388E22);
  LODWORD(STACK[0x4E0]) = (v14 >> 8) ^ 0x21DCF3F3;
  unsigned int v77 = v76 - ((2 * v76 + 1208068228) & 0xC12D3806) - 2070450107;
  int v78 = v74 ^ (v73 - ((2 * v73 + 5804200) & 0x65B7FDE) + 56232003) ^ v77;
  LODWORD(STACK[0x450]) = v78 ^ 0xD0020F08;
  LODWORD(STACK[0x4F0]) = (v74 ^ 0x7FC771DD)
                        + (v78 ^ 0x610EBF58)
                        + 1
                        - ((2 * ((v74 ^ 0x7FC771DD) + (v78 ^ 0x610EBF58) + 1)) & 0x687F976)
                        + 54787259;
  unsigned int v79 = (v78 ^ 0x9EF140A7)
      + (v77 ^ 0xE0969C03)
      - ((2 * ((v78 ^ 0x9EF140A7) + (v77 ^ 0xE0969C03))) & 0xFA70B282)
      - 46638783;
  LODWORD(STACK[0x444]) = v72;
  int v80 = v72 ^ 0x47D4140 ^ v78;
  LODWORD(STACK[0x408]) = LODWORD(STACK[0x510]) - (STACK[0x508] & 0xE92A2692) - 177153301;
  LODWORD(STACK[0x44C]) = v79;
  unsigned int v81 = (((v79 ^ 0x15975740) - ((2 * (v79 ^ 0x15975740) - 2023407034) & 0xFA70B282) + 1089141348) ^ 0xFD385941)
      + (v10 ^ 0xE5B52EE9);
  unsigned int v82 = -992175073
      * ((((((2 * v81) & 0x96FFEDFC) + (v81 ^ 0xCB7FF6FE)) & 0xFFFFFFFE)
        - ((2 * (((2 * v81) & 0x96FFEDFC) + (v81 ^ 0xCB7FF6FE)) + 1761612292) & 0x9EE63614)
        + 66266125) ^ 0xD4DBAA66);
  int v83 = LODWORD(STACK[0x500]) ^ LODWORD(STACK[0x530]);
  LODWORD(STACK[0x510]) = v80;
  int v84 = ((v82 - ((v82 << ((v9 - 98) ^ 0x46)) & 0x36) + 27) ^ v48 ^ v12 ^ v14) ^ 0x489524C1;
  *(_DWORD *)(a1 + 4 * ((v82 - ((v82 << ((v9 - 98) ^ 0x46)) & 0x36) + 27) ^ a2)) = v83 ^ v80 ^ 0x200DC107 ^ dword_10026FEA0[(((2 * v84) | 0x6533AA82) - v84 - 848942401) ^ 0x7A0CF1DF];
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v9 + 28))();
}

void sub_1001E44CC()
{
}

uint64_t sub_1001E44D8()
{
  LODWORD(STACK[0x508]) = v1;
  uint64_t v2 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v0 + 780))(1028);
  STACK[0x9E0] = v2;
  STACK[0x560] = v2;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((28 * (((v2 == 0) ^ (v0 + 80)) & 1)) ^ v0)))();
}

uint64_t sub_1001E4540(uint64_t a1, uint64_t a2)
{
  LODWORD(STACK[0x430]) = v4;
  LODWORD(STACK[0x500]) = v3;
  LODWORD(STACK[0x40C]) = v5;
  LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x4F0]) ^ LODWORD(STACK[0x4D0]);
  return (*(uint64_t (**)(uint64_t))(a2 + 8 * ((1344 * (((v2 + 199448111) | 7) == 592)) ^ (v2 + 199448249))))(3350075232);
}

uint64_t sub_1001E4614(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((((a3 + v7 - a4 == v7) ^ (a2 - 90)) & 1) * ((a2 + 1369) ^ v8)) ^ a2)))();
}

uint64_t sub_1001E4650(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v6 = (a4 - 560467446) & 0xEF6FFA67;
  unsigned int v7 = ((2 * ((v4 ^ 0x52392EAA) + (LODWORD(STACK[0x4C8]) ^ 0xA3D88175))) & 0x7FA7F7FC)
     + (((v4 ^ 0x52392EAA) + (LODWORD(STACK[0x4C8]) ^ 0xA3D88175)) ^ 0xBFD3FBFE);
  int v8 = ((unsigned __int16)LODWORD(STACK[0x550]) >> 9) ^ 0x4A;
  unsigned int v9 = (v8 + ((LODWORD(STACK[0x550]) >> 9) & 0x63 ^ 0x7681E5A1) - (v8 & 0xFFFFFFE3)) ^ 0xFDA4656B;
  int v10 = ((LODWORD(STACK[0x4E8]) << 7) ^ 0x3092E780) - 52967782;
  LODWORD(STACK[0x550]) = v5;
  int v11 = ((unsigned __int16)LODWORD(STACK[0x558]) >> 9) ^ 0x2002864D;
  unsigned int v12 = (((2 * v9) & 0x20B01E4) - v9 - 299344115) ^ 0x650DDFA8 | v10 ^ 0xFCD7C69A;
  int v13 = v12 - ((2 * v12) & 0xA6) + 211;
  unsigned int v14 = ((v11 | 0xA85FDAB1) - (v11 | 0x57A0254E) + 1470113102) ^ 0x885D5C82 | (((v5 << 7) ^ 0x2B00FE80) - 939206021) ^ 0xC804DA7B;
  int v15 = v14 - ((2 * v14) & 0x56) + 171;
  unsigned int v16 = ((v7 & 0xFFFFFFFE) - (((v7 << ((a4 + 10) & 0x67 ^ 0x66)) + 5769220) & 0x5FF304CC) + 1881507432) ^ 0x1DBF6025;
  HIDWORD(v17) = v15 ^ 0x5C ^ v13;
  LODWORD(v17) = (v15 ^ ~v13) << 24;
  char v18 = -117 * v16 - 71;
  int v19 = (LOBYTE(STACK[0x4E0]) ^ ((((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFA) + 125) ^ 0x7D)
                                                - ((2 * (((v17 >> 31) - ((2 * (v17 >> 31)) & 0xFA) + 125) ^ 0x7D)) & 0x6E)
                                                + 55) ^ (v18 - ((22 * v16) & 0x72)));
  int v20 = dword_10026D950[((v19 ^ 0x22283305) - ((2 * (v19 ^ 0x22283305)) & 0x44102582) + 864788161) ^ 0x11A3AD39];
  unsigned int v21 = ((((2 * (v19 ^ 0x1200B018)) | 0x3E53284) - (v19 ^ 0x1200B018) - 32676162) ^ 0x13F22949)
      + (((v19 ^ 0xDA) - (((v6 + 838340999) ^ 0x192) & (2 * (v19 ^ 0xDA))) + 1947269438) ^ 0xA0F49F3E);
  *(_DWORD *)(STACK[0x560] + 4 * ((v18 - ((22 * v16) & 0x72)) ^ 0xB9u)) = LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x568]) ^ LODWORD(STACK[0x578]) ^ v20 ^ (v21 - ((2 * v21) & 0x2BEB38B8) + 368417884) ^ 0x8BCDCCA;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((71 * (((-838340760 - v6) | (v6 + 838340760)) >> 31)) ^ (v6 + 838341451))))();
}

void sub_1001E49CC()
{
}

uint64_t sub_1001E49E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(a2 + 8 * (v2 + 1637)))(1032);
  STACK[0x9E8] = v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)(((v3 != 0) * ((((v2 + 268153616) & 0xF0044FB3) - 311) ^ (v2 - 343))) ^ v2)))();
}

uint64_t sub_1001E4A4C(uint64_t a1)
{
  int v3 = v1 ^ LODWORD(STACK[0x510]) ^ 0x3165A916;
  int v4 = (2 * v3 + 111957800) & 0x5F04112;
  v3 -= 1102164963;
  unsigned int v5 = ((((v3 - v4) ^ 0x3165A916) - ((2 * ((v3 - v4) ^ 0x3165A916) + 111957800) & 0x5F04112) - 1102164963) ^ 0x82F82089)
     + LODWORD(STACK[0x4C0]);
  LOBYTE(v3) = ((v5 - ((2 * v5) & 0x1E) + 15) | v3 & 1) ^ 0x5A;
  LOBYTE(v3) = (v3 - ((2 * v3) & 0x2A) - 107) ^ 0x95;
  unsigned int v6 = (((2 * (STACK[0x4B8] & 0x90BF9B66 ^ 0x908C9926)) | 0x4C6AEACA)
      - (STACK[0x4B8] & 0x90BF9B66 ^ 0x908C9926)
      - 641037669) ^ 0xA23547F4;
  unsigned int v7 = 369967432 - v6 + ((2 * v6) | 0xD3E598B2) - 3489;
  LOBYTE(v6) = 30 - -45 * v3;
  char v8 = 90 * v3;
  int v9 = dword_100286470[(((2 * ((v2 + 280) ^ 0x4A111139 ^ ((v6 - (v8 & 0x3C)) ^ LODWORD(STACK[0x508])))) | 0xBE84BD0C)
                      - ((v2 + 280) ^ 0x4A111139 ^ ((v6 - (v8 & 0x3C)) ^ LODWORD(STACK[0x508])))
                      + 549298554) ^ 0x95534A04];
  *(_DWORD *)(a1 + 4 * ((v6 - (v8 & 0x3C)) ^ 0x1Eu)) = (((2 * (STACK[0x4B8] & 0x6F406499 ^ 0x21000411)) | 0x40BF64C6)
                                                                         - (STACK[0x4B8] & 0x6F406499 ^ 0x21000411)
                                                                         + 1604341149) ^ v7 ^ LODWORD(STACK[0x4D8]) ^ LODWORD(STACK[0x548]) ^ 0x2D3E694 ^ (v9 - ((2 * v9 + 288591482) & 0x39254930) + 623668181);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v2))();
}

void sub_1001E4CA8()
{
}

uint64_t sub_1001E4CB8()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0xD99)))(1028);
  STACK[0x9C0] = v1;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v1 == 0) * (((v0 ^ 0x5CF) + 991) ^ (203 * (v0 ^ 0x5CF)))) ^ v0)))();
}

uint64_t sub_1001E4D18()
{
  int v3 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x4D0]);
  char v4 = ((2 * v3) ^ 4) - 4 - ((2 * ((2 * v3) ^ 4)) & 0xF8) + (v0 ^ 0x1A) + 19;
  LOBYTE(v3) = (((v4 & 0x60 ^ 0x64) + (v4 & 0x40 ^ 0xB) - ((v4 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  char v5 = ((2 * v3) ^ 4) - ((2 * ((2 * v3) ^ 4)) & 0xF8) - 4;
  LOBYTE(v3) = (((v5 & 0x60 ^ 0x64) + (v5 & 0x40 ^ 0xB) - ((v5 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  char v6 = ((2 * v3) ^ 4) - ((2 * ((2 * v3) ^ 4)) & 0xF8) - 4;
  LOBYTE(v3) = (((v6 & 0x60 ^ 0x64) + (v6 & 0x40 ^ 0xB) - ((v6 & 0x60 ^ 0x64) & 0x40)) ^ 0xF) + (v3 ^ 0x9E);
  LOBYTE(v3) = v3 - ((2 * v3) & 4) + 2;
  int v7 = STACK[0x4B0];
  int v8 = LODWORD(STACK[0x4B0]) ^ 0x698633A8;
  LODWORD(STACK[0x578]) = v8;
  char v9 = 2 * (((v3 ^ 2) & v8) - ((2 * ((v3 ^ 2) & v8)) & 0xAC)) - 84;
  LOBYTE(v3) = (v7 ^ 0xAA ^ v3) + (v9 ^ 0x59) + 11 + ((2 * v9) & 0xE8 ^ 0x48);
  LOBYTE(v3) = (((((2 * v3) & 0xFC) + (v3 ^ 0xFE)) & 0xFE) - ((2 * (((2 * v3) & 0xFC) + (v3 ^ 0xFE)) + 4) & 0x5C) - 79) ^ 0x88;
  unsigned int v10 = LODWORD(STACK[0x4A0]) ^ 0xF88559A4;
  unsigned int v11 = v10
      + (((LODWORD(STACK[0x4A0]) ^ 0xA222B284) + 1) ^ 0x92F46FFE)
      + ((2 * ((LODWORD(STACK[0x4A0]) ^ 0xA222B284) + 1)) & 0x25E8DFFC)
      + 1829474306;
  unsigned int v12 = ((v11 - ((2 * v11) & 0x16F7F9BC) - 1954808610) ^ 0x74840320) + v10;
  int v13 = (63 * v3 + (((v0 ^ 0x1A) + 18) & 0xDF ^ 0xFC) - ((126 * v3) & 0x46));
  int v14 = dword_100281FC0[v1 ^ LODWORD(STACK[0x448]) ^ v2 ^ 0x86D0BC13 ^ ((v13 ^ 0xEE8680E8)
                                                                      - ((2 * (v13 ^ 0xEE8680E8)) & 0x9D0001BA)
                                                                      + 1336499933)];
  HIDWORD(v15) = v14 ^ 0xB7B36;
  LODWORD(v15) = v14 ^ 0x4DF00000;
  *(_DWORD *)(STACK[0x9C0] + 4 * (v13 ^ 0x23u)) = (v12 - ((2 * v12) & 0xABB98FA) - 2057450371) ^ LODWORD(STACK[0x530]) ^ LODWORD(STACK[0x49C]) ^ LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x444]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x4F0]) ^ 0x1C9E71CC ^ ((v15 >> 20) - ((2 * (v15 >> 20)) & 0x1FFF2674) + 268407610);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + v0))(4001792232, 2634023354, 1336499933, 2261826579, dword_100281FC0, 752438, 1307574272, 536815220);
}

void sub_1001E5110()
{
}

uint64_t sub_1001E5120(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((445 * ((((v2 - 231) | 0xC4u) ^ 0x1E6142051A3E1423) + v3 == 3081835211)) ^ v2)))();
}

uint64_t sub_1001E51A0@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>)
{
  BOOL v10 = v2 < a2;
  *(unsigned char *)(v5 + v9 - 0x543054E31D5E2E28) = *(unsigned char *)(v4 + v8 - 0x6B822E0319913C21);
  unint64_t v11 = v6 - 0x1C74F948877CCD6BLL + (v7 ^ 0x2Du);
  int v12 = v10 ^ (v11 < a2);
  BOOL v13 = v11 < v2;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((!v10 * v3) ^ v7)))();
}

uint64_t sub_1001E5238(uint64_t a1, uint64_t a2)
{
  strcpy((char *)(v4 + v5 + v3), "/Library/ProvenanceV2/psc.id");
  (*(void (**)(uint64_t))(a2 + 8 * (v6 + 1879)))(v2);
  uint64_t v7 = ((uint64_t (*)(uint64_t, void *))*(&off_1002E1F70 + v6 + 1816))(v4, &unk_1002945F0);
  uint64_t v8 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v6 ^ 0x8F9)))(v4);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((60 * ((((((v6 - 1860792952) & 0x6EE977BF) + 393) ^ (v7 == 0)) & 1) == 0)) ^ v6)))(v8);
}

uint64_t sub_1001E5338()
{
  uint64_t v3 = (v1 - 1439) | 3;
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 8 * (v1 ^ 0xE6B)))(v2, 0, 2);
  uint64_t v4 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v1 ^ 0xE29)))(v2);
  uint64_t v5 = (v3 + v4 - ((2 * v4) & 0x7FB63C92u) - 1076159034) ^ 0x15B7BF99;
  uint64_t v6 = (v5
      + ((v3 + v4 - ((2 * v4) & 0x7FB63C92) + 0x1BFDB1DC6) & 0x93390523 ^ 0x3C99598482080022)
      - (v5 & (((v1 + 233) | 0xA0) + 2469985659))) ^ 0x4D34924317585A3;
  unint64_t v7 = (v6 | 0x348BAD5A8E7DAE95) - (v6 | 0xCB7452A57182516ALL) - 0x348BAD5A8E7DAE96;
  ((void (*)(uint64_t, void, void))*(&off_1002E1F70 + (int)(v1 + 597)))(v2, 0, 0);
  uint64_t v8 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_1002E1F70 + (int)(v1 + 518)))(v7 ^ 0xCC1BDFA865D8FC5, 4205034404);
  STACK[0x6E0] = v8;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((46 * (v8 != 0)) ^ v1)))();
}

uint64_t sub_1001E54C4(uint64_t a1)
{
  LODWORD(STACK[0x568]) = 1715765038;
  LODWORD(STACK[0x560]) = 50950829;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 8 * (v5 + 2018)))(a1, 1, v3, v2);
  STACK[0x570] = 0;
  unint64_t v7 = (v6 + 12879382 - ((2 * v6) & 0x1890C2Cu)) ^ 0xA110028008D24702;
  uint64_t v8 = ((v7 << (v5 ^ 0x82u)) & 0x2000001246CDF7ALL) - v7 - 0xF21950E92366FBELL;
  STACK[0x558] = v8 ^ 0xFB78FB1BC823E46BLL;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((686 * ((v8 ^ 0xFB78FB1BC823E46BLL ^ v4) == 0xA6772E902BA13AF8)) ^ v5)))();
}

uint64_t sub_1001E55D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  return (*(uint64_t (**)(void))(a4 + 8 * (((*v4 == 1) * (((v5 - 1695891858) & 0x651547BE) - 1680)) | v5)))();
}

uint64_t sub_1001E5620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4
                                                     + 8
                                                     * (((((v5 + 1183) ^ 0x392) - 262)
                                                       * ((v4 ^ 0x51CE687165DF5156uLL) > 1)) ^ v5)))(a1, 0x1347C1F822F2880BLL);
}

uint64_t sub_1001E56B4(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((*(unsigned char *)(v4 + a2 + v2) != 2) * (((v3 - 1185) | 2) ^ 0x8A)) ^ v3)))();
}

uint64_t sub_1001E5718(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  uint64_t v11 = a3 + a2 + v7 + v10 + 0x66595E99473BD26ALL;
  __int16 v12 = (((*(unsigned __int8 *)v11 - ((2 * *(unsigned __int8 *)v11) & 0xE0) + (((_WORD)a1 + 13870) & 0xCFFE ^ 0xC9)) << 8)
       - 2304) ^ 0x7000;
  LOWORD(v11) = (v12 - ((2 * v12) & 0x2E00) - 26674) ^ 0x97CE | (*(unsigned __int8 *)(v11 + 1)
                                                               - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x15C)
                                                               - 6226) ^ 0xE7AE;
  LODWORD(v11) = (unsigned __int16)(v11 - ((2 * v11) & 0xD762) - 5199) ^ 0xEBB1;
  uint64_t v13 = v5 + (v11 ^ 0x7FD8FFB7) + ((v4 + 1904) & (2 * v11)) - 2144927668;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1450
                                * (v9 > (v13 | ((unint64_t)(v13 < v8) << 32))
                                      + 0x1347C1F7C354B36ALL
                                      + v6)) ^ a1)))();
}

uint64_t sub_1001E5850()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0x88C)))(1028);
  STACK[0xA00] = v1;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((((v1 == 0) ^ (v0 + 24)) & 1) * (v0 - 191)) | v0)))();
}

uint64_t sub_1001E58BC(uint64_t a1)
{
  unsigned int v3 = ((LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x510]) ^ 0xFC997A64)
      - ((2 * (LODWORD(STACK[0x498]) ^ LODWORD(STACK[0x510]) ^ 0xFC997A64) + 363524808) & 0x91D4C316)
      - 742401297) ^ 0xFC997A64;
  unsigned int v4 = ((v3 - ((2 * v3 + 363524808) & 0x91D4C316) - 742401297) ^ 0xC8EA618B) + LODWORD(STACK[0x4C0]);
  unsigned int v5 = (v4 ^ 0x7FDD7FEF) - 2145222639 + ((2 * v4) & 0xFFBAFFDE);
  unsigned int v6 = (v5 & 0xFFFFFFFE) - ((2 * v5) & 0xF6B1BE4C) - 78061786;
  int v7 = (2 * (v1 & 8)) ^ 0x10 | v1 & 8;
  char v8 = v7 + 72;
  int v9 = v7 - 8;
  char v10 = v7 ^ 0x58;
  unsigned int v11 = ((-448883050 * (v6 ^ 0x5ED1B3F1)) & 0xDFFFFFA6) + ((1923042123 * (v6 ^ 0x5ED1B3F1)) ^ 0xEFFFFFD3);
  if (((v11 + (((v2 + 193) | 0x44D) ^ 0x100005C0)) & v9)
     - 1361342885
     - ((2 * ((v11 + (((v2 + 193) | 0x44D) ^ 0x100005C0)) & v9)) & 0x5DB71C98) == -1361342885)
    char v12 = v8;
  else {
    char v12 = v10;
  }
  int v13 = (((v1 & 0xF7 ^ 0x27) - ((2 * (v1 & 0xF7 ^ 0x27)) & 0xFC) + 118) ^ LOBYTE(STACK[0x4E8]) ^ LOBYTE(STACK[0x4E0]) ^ (v12 + v11 - ((2 * (v12 + v11) + 58) & 0x5C) - 117));
  __int16 v14 = (v13 ^ 1) - ((2 * (v13 ^ 1)) & 0x5A) + 24621;
  unsigned int v15 = ((v14 & 0x1982 ^ 0x101D5083) + 0x7FFFFFFF) | v14 & 0x267D ^ 0x8300223D;
  *(_DWORD *)(a1 + 4 * (v11 + 45)) = LODWORD(STACK[0x494]) ^ 0x8D4000B3 ^ LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x4F0]) ^ dword_10026D550[v13 ^ 0x6C] ^ v15 ^ ((v15 ^ 0x931D5262) - ((2 * (v15 ^ 0x931D5262) + 963012762) & 0x2924B056) - 1857713032);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v2 + 899))();
}

void sub_1001E5B7C()
{
}

uint64_t sub_1001E5B8C()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0xDBE)))(1032);
  STACK[0x9B8] = v1;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((v1 == 0) ^ (v0 - 78)) & 1) * (((v0 - 388) | 0x210) ^ 0x67A)) ^ v0)))();
}

uint64_t sub_1001E5C08(uint64_t a1)
{
  int v2 = LODWORD(STACK[0x4B0]) ^ LODWORD(STACK[0x450]) ^ 0x5AF8DC2B;
  int v3 = (2 * v2 + 1383897270) & 0x4D5B58A0;
  v2 -= 806618965;
  int v4 = ((((v2 - v3) ^ 0x5B200C7C) - ((2 * ((v2 - v3) ^ 0x5B200C7C) + 1383897270) & 0x4D5B58A0) - 806618965) ^ 0x26ADAC50)
     + LODWORD(STACK[0x4C0]);
  unsigned int v5 = ((((v4 - ((2 * v4) & 0xE6DEE672) - 210799815) | ((v2 & 1) == 0)) ^ 0x8726146E) + 2005849984) ^ 0x778ED780;
  int v6 = LODWORD(STACK[0x434]) ^ 0x6AD4;
  unsigned int v7 = ((1648467110 * v5) & 0x767BFE56) + (((v1 - 1527) | 0x40) ^ (-1323250093 * v5) ^ 0xBB3DFFE9);
  int v8 = 2 * (((v7 + 213) & v6) - ((2 * ((v7 + 213) & v6)) & 0x1232A)) - 1846074582;
  unsigned int v9 = ((v6 + 1153564885 + v7) ^ 0xFFD3DD1F)
     + ((2 * (v6 + 1153564885 + v7)) & 0xFFA7BA3E)
     + (v8 ^ 0x1DD7F70B)
     + ((2 * v8) & 0xE7BE57BC ^ 0xDC51B9EB);
  int v10 = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x438]) ^ (v9
                                                       + 1
                                                       - 2 * ((v9 + 1946898113) & 0x6AF1E01A ^ (v9 + 1) & 0xA)
                                                       - 553832752);
  int v11 = (((32 * v10) ^ 0x7D74E300) + 323119979 - ((2 * ((32 * v10) ^ 0x7D74E300)) & 0x2684D6C0)) ^ 0x13426B6B | (v10 >> 3) ^ 3;
  int v12 = v11 - ((2 * v11) & 0x16);
  HIDWORD(v13) = (v12 + 43) ^ 0xF;
  LODWORD(v13) = (v12 << 24) - 1962934272;
  int v14 = dword_100295B40[((v13 >> 29) - 2 * ((v13 >> 29) & 3) - 125) ^ 0x7D];
  HIDWORD(v13) = v14 ^ 0xBB3DBE9;
  LODWORD(v13) = v14 ^ 0xC0000000;
  *(_DWORD *)(a1 + 4 * (((-90 * v5) & 0x56) + (((v1 + 9) | 0x40) ^ (83 * v5) ^ 0xE9) - 43)) = LODWORD(STACK[0x480]) ^ LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x44C]) ^ 0xC1FD272F ^ ((v13 >> 29) - ((2 * (v13 >> 29)) & 0x17559DC8) + 195743460);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v1))();
}

void sub_1001E5ED8()
{
}

uint64_t sub_1001E5EE8()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0x891)))(1028);
  STACK[0x9F0] = v1;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v1 != 0) * (((v0 - 60) | 0x11) - 137)) ^ v0)))();
}

uint64_t sub_1001E5F44(uint64_t a1)
{
  unsigned int v4 = (((LODWORD(STACK[0x3F8]) ^ 0x27F30014)
       - ((2 * (LODWORD(STACK[0x3F8]) ^ 0x27F30014) + 1225213828) & 0xA4725D54)
       - 155397524) ^ 0x52392EAA)
     + LODWORD(STACK[0x578]);
  LOBYTE(v4) = ((v4 & 0xFE) - ((2 * v4) & 0x24) - 109) ^ 0x2E;
  int v5 = (-5 * v4 + 40 + v1 + 44 - ((-10 * v4) & 0x2C));
  unsigned int v6 = dword_1002824C0[v2 ^ LODWORD(STACK[0x448]) ^ v3 ^ 0x27FF6279 ^ v5];
  unsigned int v7 = LODWORD(STACK[0x418]) ^ LODWORD(STACK[0x4B8]) ^ LODWORD(STACK[0x420]) ^ LODWORD(STACK[0x570]) ^ LODWORD(STACK[0x568]) ^ LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x410]) ^ LODWORD(STACK[0x428]) ^ LODWORD(STACK[0x414]) ^ v6 ^ (v6 >> 2) ^ (v6 >> 6) ^ 0x82D683AC;
  *(_DWORD *)(a1 + 4 * (v5 ^ 0x16u)) = LODWORD(STACK[0x558]) ^ LODWORD(STACK[0x47C]) ^ 0x374CAE5F ^ (v7 - ((2 * v7) & 0x4921F9F8) + 613481724);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v1 + 1603))();
}

void sub_1001E6134()
{
}

uint64_t sub_1001E6144()
{
  uint64_t v1 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0xCBD)))(1028);
  STACK[0x9F8] = v1;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v1 == 0) * (((v0 - 1111) ^ 0x51F) - 1398)) ^ v0)))();
}

uint64_t sub_1001E6198(uint64_t a1)
{
  unsigned int v2 = ((LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x450]) ^ 0x4D720263)
      - ((2 * (LODWORD(STACK[0x470]) ^ LODWORD(STACK[0x450]) ^ 0x4D720263) - 419084490) & 0xBD5EF148)
      - 768467905) ^ 0x4D720263;
  unsigned int v3 = ((v2 - ((2 * v2 - 419084490) & 0xBD5EF148) - 768467905) ^ 0x5EAF78A4) + LODWORD(STACK[0x4C0]);
  int v4 = (v3 ^ 0x3FEFFFEF) - 1072693231 + ((2 * v3) & 0x7FDFFFDE);
  unsigned int v5 = ((v4 & 0xFFFFFFFE) - ((2 * v4) & 0xC452C814) - 500603894) ^ 0xEC3E6D9F;
  int v6 = LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x438]) ^ LODWORD(STACK[0x434]);
  int v7 = 1226662033 * v5 + 1772470042;
  int v8 = -1841643230 * v5;
  unsigned int v9 = (((v6 ^ (v7 - (v8 & 0xD34B7E34))) & (v1 - 1161) ^ 0xBF)
      - ((2 * ((v6 ^ (v7 - (v8 & 0xD34B7E34))) & (v1 - 1161) ^ 0xBF)) & 0x13A)
      + 1455976861) ^ 0xA6C86184;
  *(_DWORD *)(a1 + 4 * ((v7 - (v8 & 0x34)) ^ 0x1Au)) = LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x47C]) ^ LODWORD(STACK[0x428]) ^ (((2 * v9) & 0x20001F60) - v9 + 1634947151) ^ 0x7259E8A0 ^ dword_100283F10[(((2 * v9) & 0x20001F60) - v9 + 1634947151) ^ 0x91734092];
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v1))();
}

void sub_1001E6374()
{
}

uint64_t sub_1001E6384()
{
  LODWORD(STACK[0x578]) = v0 - 43;
  int v1 = byte_100283BF0[(LOBYTE(STACK[0xA9D]) - ((2 * LOBYTE(STACK[0xA9D])) & 0xFC) - 100) ^ 0xCFLL];
  int v2 = v1 - (((v1 << ((v0 - 43) ^ 0x96)) + 90) & 0xEA) + 34;
  unsigned int v3 = ((((v2 ^ 0x41) - ((2 * v2) & 0x7C)) << 16) - 1690435584) ^ 0x9B3E0000;
  int v4 = byte_10028A0A0[(LOBYTE(STACK[0xA9F]) - ((2 * LOBYTE(STACK[0xA9F]) - 56) & 0xDD) - 46) ^ 0x54] ^ 0xB8;
  unsigned int v5 = (v4 - ((2 * v4) & 0xB4) - 90976422) ^ 0xFA93CF5A | (v3 - ((2 * v3) & 0x5A2A0000) + 756401757) ^ 0x2D15C65D;
  unsigned int v6 = v5 - ((2 * v5) & 0x6DBA9474);
  unsigned int v7 = byte_1002832D0[(LOBYTE(STACK[0xA9C]) - ((2 * LOBYTE(STACK[0xA9C]) + 66) & 0x92) + 106) ^ 0xB7] ^ (LOBYTE(STACK[0xA9C]) - ((2 * LOBYTE(STACK[0xA9C]) + 66) & 0xFFFFFF92) + 106);
  int v8 = (((v7 ^ 4) - ((2 * v7) & 0x62)) << 24) - 973078528;
  unsigned int v9 = (((v8 - 352321536) ^ 0xB1000000) - ((2 * ((v8 - 352321536) ^ 0xB1000000)) & 0x12000000) + 167455886) ^ 0x9FB2C8E | (v6 + 1994213946) ^ 0x76DD4A3A;
  LOBYTE(v8) = byte_1002834E0[(LOBYTE(STACK[0xA9E]) - ((2 * LOBYTE(STACK[0xA9E]) + 6) & 0x20) - 77) ^ 0x6ALL];
  LOBYTE(v8) = v8 ^ 0x17 ^ (((16 * v8) ^ 0x40) - 32 * (v8 & 1) - 103);
  unsigned int v10 = (v9 - ((2 * v9) & 0x99E9D10A) + 1291118725) ^ 0x4CF4E885 | ((v8 << 8)
                                                                  - ((v8 & 3) << 9)
                                                                  - 2034105455) ^ 0x86C20391;
  int v11 = (v10 - ((2 * v10) & 0x5D48BCA8) - 1364959660) ^ LODWORD(STACK[0x4B0]);
  unsigned int v12 = ((25 - LODWORD(STACK[0x404])) & 0x40000 ^ 0xFDCEF7C9) + 2 * ((25 - LODWORD(STACK[0x404])) & 0x40000);
  BOOL v13 = ((v11 ^ 0xC7200000) & (v12 + 36767799)) == ((2 * ((v11 ^ 0xC7200000) & (v12 + 36767799))) & 0x7C080000);
  int v14 = byte_100283BF0[(LOBYTE(STACK[0xA95]) - ((2 * LOBYTE(STACK[0xA95]) + 52) & 0x48) - 2) ^ 0xEALL];
  int v15 = byte_1002834E0[(LOBYTE(STACK[0xA96]) - ((2 * LOBYTE(STACK[0xA96]) + 54) & 0xC8) + 127) ^ 0x14];
  int v16 = v15 ^ 0x84 ^ (((16 * v15) ^ 0x46) - 3);
  unsigned int v17 = (((v16 - ((2 * v16) & 0x1B6)) << 8) - 1102652672) ^ 0xBE46DB00;
  int v18 = (v14 - ((2 * v14 + 10) & 0xA) + 50) ^ 0x96;
  unsigned int v19 = (((v18 - ((2 * v18) & 0x1B6)) << 16) - 1227161600) ^ 0xB6DB0000;
  unsigned int v20 = (v19 - ((2 * v19) & 0x6BD40000) - 169186274) ^ 0xF5EA6C1E | (v17 - ((2 * v17) & 0x4325E400) - 1584205128) ^ 0xA192F2B8;
  unsigned int v21 = byte_1002832D0[(LOBYTE(STACK[0xA94]) - ((2 * LOBYTE(STACK[0xA94]) + 50) & 0xDA) - 122) ^ 0xB3] ^ (LOBYTE(STACK[0xA94]) - ((2 * LOBYTE(STACK[0xA94]) + 50) & 0xFFFFFFDA) - 122) ^ 0xC7;
  unsigned int v22 = (((v21 - ((2 * v21) & 0x38)) << 24) - 1677721600) ^ 0x9C000000;
  int v23 = (v22 - ((2 * v22) & 0x77777777) + 999399551) ^ 0x3B91A07F | (v20 - ((2 * v20) & 0x35718116) + 1522057355) ^ 0x5AB8C08B;
  int v24 = byte_10028A0A0[(LOBYTE(STACK[0xA97]) - ((2 * LOBYTE(STACK[0xA97]) - 72) & 0x96) + 39) ^ 0x12];
  HIDWORD(v26) = v24 ^ 0x18;
  LODWORD(v26) = (v24 ^ 0xFFFFFFBF) << 24;
  int v25 = v26 >> 29;
  HIDWORD(v26) = v25 ^ 2;
  LODWORD(v26) = ((v25 - ((2 * v25) & 0xA0) - 48) ^ 0x68) << 24;
  int v27 = ((((v26 >> 27) - ((2 * (v26 >> 27)) & 0x4E) - 89) ^ 0xA7)
       - ((2 * (((v26 >> 27) - ((2 * (v26 >> 27)) & 0x4E) - 89) ^ 0xA7)) & 0x1CC)
       - 885280282) ^ 0xCB3BB1E6 | (v23 - ((2 * v23) & 0x4604100A) - 1560147963) ^ 0xA3020805;
  int v28 = STACK[0x520];
  int v29 = LODWORD(STACK[0x520]) ^ LODWORD(STACK[0x470]) ^ (v27 - ((2 * v27) & 0x2A136AF4) + 352957818);
  unsigned int v30 = v12 + 926781440;
  unsigned int v31 = 853245842 - v12;
  if (!v13) {
    unsigned int v30 = v31;
  }
  int v32 = STACK[0x558];
  unsigned int v33 = (LODWORD(STACK[0x558]) ^ 0xC67FCD9B ^ v29) + 1;
  int v34 = v29 ^ 0x6F81CF5B;
  unsigned int v35 = v34 + (v33 ^ 0xB2E77C37) + ((2 * v33) & 0x65CEF86E) + 1293452233;
  unsigned int v36 = (((LODWORD(STACK[0x454]) ^ 0x5A2F9207)
        - ((2 * (LODWORD(STACK[0x454]) ^ 0x5A2F9207) + 518696160) & 0xADF6D0F4)
        - 428818710) ^ LODWORD(STACK[0x558]) ^ 0xAB50001 ^ (v35 - ((2 * v35) & 0x149F2A88) + 172987716))
      + v34;
  int v37 = STACK[0x408];
  unsigned int v38 = (v36 - ((2 * v36) & 0x60BF475C) - 1335909458) ^ LODWORD(STACK[0x408]);
  unsigned int v39 = (v38 ^ 0x280A5C61) % 0x3A5E0577;
  LOBYTE(v36) = LOBYTE(STACK[0xA9B]) - ((2 * LOBYTE(STACK[0xA9B]) - 106) & 0xEF) + 66;
  char v40 = ((2 * v36) ^ 0xEE) - ((2 * ((2 * v36) ^ 0xEE)) & 0x18);
  LOBYTE(v36) = (v36 ^ 0xE2) + ((v40 + 45) & 0x2A ^ 0xD7) + ((2 * ((v40 + 45) & 0x2A)) ^ 0x50) + 1;
  unsigned int v41 = LOBYTE(STACK[0xA91]) - ((2 * LOBYTE(STACK[0xA91]) - 84) & 0xFFFFFFDF) + 69;
  int v42 = 1687718911 - (v41 ^ 0x6F);
  unsigned int v43 = ((2 * (v41 ^ 0x93)) & 0x1CE) + (v41 ^ 0x99DF7F74);
  unsigned int v44 = v42 ^ 0x19EB9152 ^ (-864038238 - v43 - ((868155846 - 2 * v43) & 0x6540A37E)) ^ ((v42 ^ 0x9B677400)
                                                                                      - ((2 * (v42 ^ 0x9B677400) + 2) & 0x9FA69624)
                                                                                      + 1339247379);
  unsigned int v45 = v44 - 963435576 - ((2 * v44 + 504) & 0x8D2647A6) + 263;
  LOWORD(v42) = ((v45 ^ 0x92) + (v45 & 0x42 ^ 0x2240) - ((v45 ^ 0x92) & 0x42)) ^ 0x2303;
  unsigned int v46 = v45 ^ 0xC69323C8;
  LOWORD(v45) = v45 ^ 0xCBD7 ^ (((2 * v42) | 0x6210) - v42 + 20216);
  unsigned int v47 = ((2 * (v45 & 0xAC ^ 0x9234320C)) | 0x893846AC) - (v45 & 0xAC ^ 0x9234320C) - 1151083350;
  LOWORD(v45) = (v45 & 0x53 ^ 0x40) - ((2 * v45) & 0x20) + 23216;
  unsigned int v48 = ((v45 & 0x152 ^ 0x94302943) + (v45 & 0x2A1) - 1) ^ 0x94302BB3 | v47 ^ 0xD6A8115E;
  unsigned int v49 = ((v48 - ((2 * v48) & 0x98) - 52) ^ 0xFFFFFFBF)
      + byte_100283BF0[v46]
      + ((2 * (v48 - ((2 * v48) & 0x98) - 52)) & 0xFFFFFFE7)
      - 128;
  unsigned int v50 = v49 - ((2 * v49 + 98) & 0xFFFFFFAA) + 6;
  LODWORD(STACK[0x570]) = v50;
  unsigned int v51 = ((((v50 ^ 1) - ((2 * (v50 ^ 1)) & 0x116)) << 16) - 1198850048) ^ 0xB88B0000;
  int v52 = LOBYTE(STACK[0xA90]) - ((2 * LOBYTE(STACK[0xA90]) + 42) & 0x24) - 89;
  int v53 = byte_1002832D0[(LOBYTE(STACK[0xA90]) - ((2 * LOBYTE(STACK[0xA90]) + 42) & 0x24) - 89) ^ 0x9ELL] ^ v52 ^ 0x97;
  unsigned int v54 = (((v53 - ((2 * v53) & 0xD6)) << 24) - 352321536) ^ 0xEB000000;
  unsigned __int8 v55 = byte_100283BF0[(LOBYTE(STACK[0xA99]) - ((2 * LOBYTE(STACK[0xA99]) + 60) & 0x66) + 17) ^ 0xD0];
  unsigned __int8 v56 = (v55 - ((2 * v55 + 2) & 4) + 47) ^ 0xE9;
  int v57 = (((v56 - 2 * (v56 & 3)) << 16) + 1594032128) ^ 0x5F030000;
  int v58 = byte_10028A0A0[(v36 - ((2 * v36) & 0x8A) - 59) ^ 0x7ALL];
  unsigned int v59 = (v57 - ((2 * v57) & 0x26200000) - 1827640003) ^ 0x93106D3D | ((v58 ^ 0xB8)
                                                                    - 711576507
                                                                    + (~(2 * v58) | 0xFFFFFF75)
                                                                    + 1) ^ 0xD5963445;
  int v60 = byte_1002834E0[(LOBYTE(STACK[0xA9A]) - ((2 * LOBYTE(STACK[0xA9A]) + 62) & 0xB0) + 119) ^ 0x17];
  int v61 = v60 ^ 0x62 ^ (((16 * v60) ^ 0x40) - 32 * (v60 & 1) + 25);
  unsigned int v62 = (((v61 - ((2 * v61) & 0x136)) << 8) - 825582848) ^ 0xCECA9B00;
  unsigned int v63 = (v59 - ((2 * v59) & 0x42058DA0) + 553830096) ^ 0x2102C6D0 | (v62 - ((2 * v62) & 0x5F1FFE00) - 1349517549) ^ 0xAF8FFF13;
  unsigned int v64 = byte_1002832D0[(LOBYTE(STACK[0xA98]) - ((2 * LOBYTE(STACK[0xA98]) + 58) & 0x8A) + 98) ^ 0x9ALL] ^ (LOBYTE(STACK[0xA98]) - ((2 * LOBYTE(STACK[0xA98]) + 58) & 0xFFFFFF8A) + 98) ^ 0xA5;
  unsigned int v65 = (((v64 - ((2 * v64) & 0x52)) << 24) - 1459617792) ^ 0xA9000000;
  unsigned int v66 = (v63 - ((2 * v63) & 0xA0619156) - 802109269) ^ 0xD030C8AB | (v65 - ((2 * v65) & 0xBFFFFFFF) + 1600755187) ^ 0x5F6995F3;
  int v67 = byte_1002834E0[(LOBYTE(STACK[0xA92]) - ((2 * LOBYTE(STACK[0xA92]) + 46) & 0x3C) - 75) ^ 0xE4];
  int v68 = (((16 * v67) ^ 0x90) + (~(32 * v67) | 0x3F) + 110) ^ v67;
  unsigned int v69 = (((v68 - ((2 * v68) & 0x54)) << 8) - 1171052032) ^ 0xBA332A00;
  int v70 = (v69 - ((2 * v69) & 0x239EFE00) + 298811275) ^ 0x11CF7F8B | (v54 - ((2 * v54) & 0x7C000000) + 1049848274) ^ 0x3E9369D2;
  int v71 = byte_10028A0A0[(LOBYTE(STACK[0xA93])
                                       - 2 * ((LOBYTE(STACK[0xA93]) + 24) & 0x35 ^ STACK[0xA93] & 4)
                                       - 119) ^ 0xEFLL] ^ 0xB8;
  unsigned int v72 = (v70 - ((2 * v70) & 0xC950EDD4) - 458721558) ^ 0xE4A876EA | (v71 - ((2 * v71) & 0x24) + 2042471954) ^ 0x79BDA612;
  unsigned int v73 = (v51 - ((2 * v51) & 0x5D6E0000) - 289966921) ^ 0xEEB774B7 | (v72 - ((2 * v72) & 0xBEFE5880) + 1602169920) ^ 0x5F7F2C40;
  unsigned int v74 = v37 ^ LODWORD(STACK[0x498]) ^ v32 ^ v28 ^ (v66 - ((2 * v66) & 0xAA95DA6C) - 716509898);
  unsigned int v75 = v37 ^ LODWORD(STACK[0x40C]) ^ v32 ^ v28 ^ (v73 - ((2 * v73) & 0x9B1ABEEC) - 846373002);
  unsigned int v76 = (((2 * (v28 & 0xFFFBFFFF ^ 0x5C00D9E9)) & 0xCA777112) - (v28 & 0xFFFBFFFF ^ 0x5C00D9E9) - 1698674826) ^ 0xAC80D750;
  unsigned int v77 = v32 ^ v37 ^ (((2 * v76) & 0xB10DD1B2) - v76 - 1485236442) ^ ((v11 ^ 0xC7226D4E)
                                                                   - 890013641
                                                                   + v30
                                                                   - ((2 * ((v11 ^ 0xC7226D4E) - 890013641 + v30)) & 0x13284D86)
                                                                   - 1986779453);
  unsigned int v78 = (v32 ^ v37 ^ (((2 * v76) & 0xB2) - v76 + 38) ^ ((v11 ^ 0x4E)
                                                                       + 55
                                                                       + v30
                                                                       - ((2 * ((v11 ^ 0x4E) + 55 + v30)) & 0x86)
                                                                       - 61)) ^ 0xE4;
  char v79 = (v39 ^ 0x2E) - 46 + ((2 * v39) & 0x5C);
  if (((2 * v39) & 0x75D9F7AE) + (v39 ^ 0xFAECFBD7) != -85132329) {
    char v79 = 0;
  }
  char v80 = (v38 ^ 0x61) - v79;
  unint64_t v81 = STACK[0x9F8];
  unint64_t v82 = STACK[0x9F0];
  unsigned int v83 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v38) ^ 0xAu)) ^ 0xABA47756 ^ *(_DWORD *)(STACK[0x9F0]
                                                                                       + 4 * (HIBYTE(v75) ^ 0x70));
  unint64_t v84 = STACK[0x9E0];
  unsigned int v85 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v74) ^ 0x39u)) ^ 0x86BF6D7C;
  int v86 = (v85 & v83) - ((2 * (v85 & v83)) & 0x3B817694);
  unsigned int v87 = ((2 * (v85 + v83)) & 0xBD77BDDE)
      + ((v85 + v83) ^ 0xDEBBDEEF)
      + ((2 * v86 - 1149143404) ^ 0x3BC16013)
      + ((2 * (2 * v86 - 1149143404)) & 0xFF7FD2F0 ^ 0x88FD3FDF);
  unsigned int v88 = (((2 * (BYTE2(v75) ^ 0xD1)) & 0x11A) - (BYTE2(v75) ^ 0xD1) + 1461222002) ^ 0x57187AB3;
  unsigned int v89 = BYTE1(v75) ^ 0x4D;
  unsigned int v90 = v75 ^ 0x80;
  unint64_t v91 = STACK[0x9E8];
  unsigned int v92 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v77) ^ 0xEEu)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v74) ^ 0x94u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v38) ^ 0x28)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * v90);
  unsigned int v93 = (v87 - ((2 * v87 + 1107825942) & 0x5BA3AE2E) - 824843870) ^ *(_DWORD *)(STACK[0x9E8] + 4 * v78);
  unsigned int v94 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v74) ^ 0xEA)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v77) ^ 0xBFu)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * v89) ^ *(_DWORD *)(STACK[0x9E8] + 4 * ((v80 ^ 0x7B) + ((2 * v80) & 0xF7) - 123));
  unsigned int v95 = *(_DWORD *)(STACK[0x9F8] + 4 * v88) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v38) ^ 0x5Cu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v77) ^ 0x68)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v74 ^ 0xA2u));
  unsigned int v96 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v92) ^ 0x8Cu)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v94) ^ 0xB0u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v95 ^ 0x7Bu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v93) ^ 0xFE));
  unsigned int v97 = HIBYTE(v95) ^ 0x39;
  int v98 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v95) ^ 0x6Eu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v94) ^ 0x18));
  unsigned int v99 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v94) ^ 0x31u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v92) ^ 0x80)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * ((((2 * (BYTE1(v95) ^ 0x4221A028)) & 0x44301D4) - (BYTE1(v95) ^ 0x4221A028) + 1632395797) ^ 0x236DC26Bu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (((v87 - ((2 * v87 + 22) & 0x2E) - 94) ^ *(unsigned char *)(STACK[0x9E8] + 4 * v78)) ^ 0xB1u));
  unsigned int v100 = v98 ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v92 ^ 0x2Eu)) ^ *(_DWORD *)(STACK[0x9E0]
                                                                                            + 4 * (BYTE1(v93) ^ 0x7Bu));
  unsigned int v101 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v93) ^ 9u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * v97) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v92) ^ 0xDEu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v94 ^ 0x60u));
  unsigned int v102 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v99) ^ 0x85)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v100) ^ 0x66u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v101) ^ 0x6Bu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v96 ^ 0xB3u));
  unsigned int v103 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v96) ^ 0x26)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v100) ^ 0x65u)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v99) ^ 2u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v101 ^ 0xA8u));
  int v104 = (v103 ^ 0x4472580F) + 61136;
  unsigned int v105 = v104 ^ 0xFFD76DD3;
  unsigned int v106 = (2 * v104) & 0xFFAEDBA6;
  int v107 = ((2 * v103) ^ 0x46AAB05C) + 204868 - 2 * (((2 * v103) ^ 0x46AAB05C) & 0x28EE ^ (2 * v103) & 2) + 2216;
  unsigned int v108 = v107 & 0x1DDA0 ^ 0xC021D9A9;
  unsigned int v109 = (2 * v107) & 0x21940 ^ 0xFFFDEEBF;
  unsigned int v110 = HIBYTE(v101) ^ 0xA4;
  unsigned int v111 = *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v96) ^ 0xBu)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                           + 4 * (v99 ^ 0xB3u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v100) ^ 0xBE)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v101) ^ 0x5Du));
  unsigned int v112 = v105 + v106 + v108 + v109 + 1074250021;
  unsigned int v113 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v96) ^ 0xDBu)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                            + 4 * (v100 ^ 0xFDu)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * v110) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v99) ^ 0x8Du));
  unsigned int v114 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v111) ^ 0x16u)) ^ *(_DWORD *)(STACK[0x9E0] + 4
                                                                                            * (BYTE1(v113) ^ 0x83u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v102) ^ 0xE2)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v103 ^ 0xFu));
  unsigned int v115 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v102) ^ 0x25u)) ^ *(_DWORD *)(STACK[0x9E8]
                                                                             + 4
                                                                             * ((*(unsigned char *)(STACK[0x9F8] + 4 * (BYTE2(v96) ^ 0xDBu)) ^ *(unsigned char *)(STACK[0x9E8] + 4 * (v100 ^ 0xFDu)) ^ *(unsigned char *)(STACK[0x9F0] + 4 * v110) ^ *(unsigned char *)(STACK[0x9E0] + 4 * (BYTE1(v99) ^ 0x8Du))) ^ 0xC7u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v111) ^ 0xB0u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v103) ^ 0x44));
  unsigned int v116 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v113) ^ 0x1Eu)) ^ *(_DWORD *)(STACK[0x9F0] + 4
                                                                                            * (HIBYTE(v111) ^ 0x7F)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v103) ^ 0x58u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v102 ^ 0x92u));
  unsigned int v117 = *(_DWORD *)(STACK[0x9F8] + 4 * ((BYTE2(v112) - ((v112 >> 15) & 0xA2) + 81) ^ 0x51u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v113) ^ 0xF8)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v102) ^ 0x8Du)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v111 ^ 0x41u));
  int v118 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v114) ^ 0x35u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v115) ^ 9)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v116) ^ 0xFBu)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v117 ^ 0xFEu));
  unsigned int v119 = ((2 * v118) & 0xC7FFEBF6 ^ 0x68C6AF4) + (v118 ^ 0x7CB9C885);
  unsigned int v120 = *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v116) ^ 0x76u)) ^ *(_DWORD *)(STACK[0x9F0] + 4
                                                                                            * (HIBYTE(v114) ^ 0xC8)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v115 ^ 0xC4u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v117) ^ 0x20u));
  unsigned int v121 = *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v116) ^ 0x94)) ^ *(_DWORD *)(STACK[0x9E0] + 4
                                                                                            * (BYTE1(v115) ^ 0xC6u)) ^ *(_DWORD *)(STACK[0x9E8] + 4 * (v114 ^ 0x78u)) ^ *(_DWORD *)(STACK[0x9F8] + 4 * (BYTE2(v117) ^ 0x3Du));
  unsigned int v122 = v119 + 469764613;
  unsigned int v123 = *(_DWORD *)(STACK[0x9E8] + 4 * (v116 ^ 0x17u)) ^ *(_DWORD *)(STACK[0x9F8]
                                                                                       + 4 * (BYTE2(v115) ^ 0x45u)) ^ *(_DWORD *)(STACK[0x9E0] + 4 * (BYTE1(v114) ^ 0x13u)) ^ *(_DWORD *)(STACK[0x9F0] + 4 * (HIBYTE(v117) ^ 0x4F));
  if (v119 + 2086889195 >= 0x9F9CA31A) {
    char v124 = 42;
  }
  else {
    char v124 = 68;
  }
  if (v122 >= 0x9F9CA31A) {
    char v125 = 36;
  }
  else {
    char v125 = 10;
  }
  if (v122 < 0x9F9CA31A) {
    char v124 = 94;
  }
  unsigned int v126 = ((((v121 ^ 0xC305D511) >> (BYTE2(v117) & 0x10 ^ 0x10))
         - ((2 * ((v121 ^ 0xC305D511) >> (BYTE2(v117) & 0x10 ^ 0x10))) & 0x8DB71696)
         - 958690485) ^ 0xC6DB8B4B) >> (BYTE2(v117) & 0x10);
  int v127 = *(_DWORD *)(v84 + 4 * (BYTE1(v123) ^ 0xADu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v120) ^ 0x74)) ^ *(_DWORD *)(v91 + 4 * (v119 + v125 + v124 - 99)) ^ *(_DWORD *)(v81 + 4 * ((v126 - ((2 * v126) & 0xC8) + 100) ^ 0x64u));
  unsigned int v128 = HIBYTE(v123) ^ 0xAF;
  unsigned int v129 = *(_DWORD *)(v81 + 4 * (BYTE2(v120) ^ 0x26u)) ^ *(_DWORD *)(v91 + 4 * (v123 ^ 0xC1u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v121) ^ 0xD5u)) ^ *(_DWORD *)(v82 + 4 * HIBYTE(v122));
  int v130 = *(_DWORD *)(v81 + 4 * (BYTE2(v123) ^ 0x6Du)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v121) ^ 0xC3)) ^ *(_DWORD *)(v91 + 4 * (v120 ^ 0x28u)) ^ *(_DWORD *)(v84 + 4 * ((BYTE1(v122) - ((v122 >> 7) & 0x5A) + 45) ^ 0x2Du));
  int v131 = (14 - (v127 | 0x1F)) & 0x20 | 0x3F5A9DD6;
  char v132 = (((v52 & 0x10) + (v52 & 0x18 ^ 0x71)) | 6) - ((v52 & 0x18 ^ 0x71) & 0x70);
  unsigned int v133 = ((2 * (v127 & 0xFFFFFFDF ^ 0x34BD800)) & 0xD824314) - (v127 & 0xFFFFFFDF ^ 0x34BD800) - 113320363;
  unsigned int v134 = ((v133 & 0x7DCBE49 ^ 0x6D02000) + (v133 & 0xF82341B6 ^ 0xF8224011) - 1) ^ v131;
  unsigned int v135 = *(_DWORD *)(v81 + 4 * ((((v119 + 2565) >> 16) + 0x80) ^ 0x80u)) ^ *(_DWORD *)(v82 + 4 * v128) ^ *(_DWORD *)(v91 + 4 * (v121 ^ 0x11u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v120) ^ 0x76u));
  unsigned int v136 = ((((v130 ^ 0x1D437685u) >> ((v132 ^ 0x11) & 0xF9))
         - ((2 * ((v130 ^ 0x1D437685u) >> ((v132 ^ 0x11) & 0xF9))) & 0x10054802)
         + 134390785) ^ 0x802A401) >> ((v132 ^ 0xF) & 0xF9);
  unsigned int v137 = *(_DWORD *)(v84 + 4 * (BYTE1(v130) ^ 0x76u)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v129) ^ 0xAA)) ^ *(_DWORD *)(v91 + 4 * (v135 ^ 0x6Au)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v134) ^ 0xCEu));
  unsigned int v138 = *(_DWORD *)(v81 + 4 * (BYTE2(v130) ^ 0x43u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v135) ^ 0x83u)) ^ *(_DWORD *)(v91 + 4 * (v129 ^ 0xBCu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v134) ^ 0xC6));
  unsigned int v139 = *(_DWORD *)(v91 + 4 * (v134 ^ 9u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v135) ^ 0x7Bu)) ^ *(_DWORD *)(v82 + 4 * ((v136 - ((2 * v136) & 0x1A) - 115) ^ 0x8Du)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v129) ^ 0xD5u));
  unsigned int v140 = *(_DWORD *)(v82 + 4 * (HIBYTE(v135) ^ 0x91)) ^ *(_DWORD *)(v91 + 4 * (v130 ^ 0x85u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v129) ^ 0x60u)) ^ *(_DWORD *)(v84 + 4 * BYTE1(v134));
  unsigned int v141 = ((2 * v139) & 0x30231824 ^ 0x30C65FC8)
       + (v139 & 0x9A958C13 ^ 0xE71CD01B)
       + (((v139 ^ 0xE492805A) + 1) ^ 0x3F7FDDFB)
       + ((2 * ((v139 ^ 0xE492805A) + 1)) & 0x7EFFBBF6);
  unsigned int v142 = (v141 - ((2 * v141 + 1343808542) & 0x66185C30) - 619143129) ^ ((v139 & 0x9A958C13 ^ 0xBF359820)
                                                                      + (v139 & 0x12118403 ^ 0x402507)
                                                                      - ((v139 & 0x9A958C13 ^ 0xBF359820) & 0x13118423));
  unsigned int v143 = BYTE2(v137) ^ 0x57;
  int v144 = *(_DWORD *)(v82 + 4 * (HIBYTE(v137) ^ 0x9E));
  int v145 = *(_DWORD *)(v84
                   + 4
                   * (((unsigned __int16)((v141 - ((2 * v141 - 7138) & 0x5C30) - 24537) ^ ((v139 & 0x8C13 ^ 0x9820) + (v139 & 0x8403 ^ 0x2507) - ((v139 & 0x8C13 ^ 0x9820) & 0x8423))) >> 8) ^ 0x1Fu));
  int v146 = *(_DWORD *)(v91 + 4 * (v140 ^ 0xDu));
  unsigned int v147 = *(_DWORD *)(v81 + 4 * (BYTE2(v138) ^ 0x11u)) ^ v144 ^ v146 ^ v145;
  unsigned int v148 = HIBYTE(v140) ^ 0xCC;
  unsigned int v149 = BYTE2(v140) ^ 0x29;
  int v150 = *(_DWORD *)(v84 + 4 * (BYTE1(v140) ^ 0xD7u));
  int v151 = *(_DWORD *)(v91 + 4 * (v137 ^ 0x76u));
  int v152 = *(_DWORD *)(v82 + 4 * (HIBYTE(v138) ^ 0x40)) ^ v150 ^ v151 ^ *(_DWORD *)(v81 + 4 * (BYTE2(v142) ^ 0x6Du));
  int v153 = *(_DWORD *)(v84 + 4 * (BYTE1(v137) ^ 0x81u));
  int v154 = *(_DWORD *)(v81 + 4 * v149);
  int v155 = v153 ^ *(_DWORD *)(v91 + 4 * (v138 ^ 0xE2u)) ^ v154 ^ *(_DWORD *)(v82
                                                                                            + 4 * (HIBYTE(v142) ^ 5));
  unsigned int v156 = ((((v155 & 0x6E4B94B6 ^ 0x69985647) - 1) & 0x2E4B9432 ^ 0xA5349933 | ((v155 & 0x6E4B94B6 ^ 0x69985647) - 1) & 0x40000084)
        - 1) ^ 0xEF7D9D12 | ((v155 & 0x91B46B49 ^ 0x91006949 | 0x94A6B557)
                           - (v155 & 0x91B46B49 ^ 0x91006949 | 0x6B594AA8)
                           + 1801013928) ^ 0x4B29416;
  int v157 = v156 - ((2 * v156) & 0x4AD6D17C) - 1519687490;
  int v158 = *(_DWORD *)(v82 + 4 * v148) ^ *(_DWORD *)(v81 + 4 * v143);
  unsigned int v159 = v158 ^ *(_DWORD *)(v84 + 4 * (BYTE1(v138) ^ 0x22u)) ^ *(_DWORD *)(v91 + 4 * (v142 ^ 0x1Eu));
  LODWORD(STACK[0x560]) = v157 ^ 0x83;
  unsigned int v160 = (v138 ^ 0xBFEEDD1D) + 1;
  v138 ^= 0x2355582Eu;
  int v161 = v138 + (v160 ^ 0x3FFFB96B) + ((2 * v160) & 0x7FFF72D6) - 1073723755;
  unsigned int v162 = ((v161 - ((2 * v161) & 0x9B0F16EA) + 1300728693) ^ 0xB278748D) + v138;
  unsigned int v163 = v162 - ((2 * v162) & 0xCDB0678E) + 1725445063;
  unsigned int v164 = v144 ^ v146 ^ *(_DWORD *)(v84 + 4 * (BYTE1(v139) ^ 0xCu)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v163) ^ 0xD8u));
  unsigned int v165 = v163 ^ 0xC7;
  unsigned int v166 = *(_DWORD *)(v81 + 4 * (BYTE2(v139) ^ 7u)) ^ v150 ^ v151 ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v163) ^ 0x66));
  unsigned int v167 = v158 ^ *(_DWORD *)(v91 + 4 * (v139 ^ 0x49u)) ^ *(_DWORD *)(v84 + 4 * (BYTE1(v163) ^ 0x33u));
  int v168 = *(_DWORD *)(v82 + 4 * (HIBYTE(v139) ^ 0x7E)) ^ v154 ^ *(_DWORD *)(v91 + 4 * v165);
  int v169 = v153 ^ 0x2355582E;
  int v170 = v168 ^ ~v153;
  int v171 = v168 ^ v169;
  if ((v170 & 0x40000 | 0x200) == 0x200) {
    int v172 = 0x40000;
  }
  else {
    int v172 = -262144;
  }
  unsigned int v173 = v172 + v171 - 2 * ((v172 + v171) & 0x22F7425F ^ v171 & 0x14) + 586629707;
  int v174 = *(_DWORD *)(v81 + 4 * (BYTE2(v152) ^ 0x7Bu));
  int v175 = *(_DWORD *)(v81 + 4 * (BYTE2(v157) ^ 0x17u));
  LODWORD(STACK[0x558]) = *(_DWORD *)(v81 + 4 * (BYTE2(v159) ^ 0x55u));
  LODWORD(STACK[0x550]) = *(_DWORD *)(v81 + 4 * (BYTE2(v147) ^ 0x3Fu));
  int v176 = *(_DWORD *)(v81 + 4 * (BYTE2(v173) ^ 0x8Fu));
  int v177 = *(_DWORD *)(v81 + 4 * (BYTE2(v167) ^ 0x55u));
  int v178 = *(_DWORD *)(v81 + 4 * (BYTE2(v164) ^ 0x3Fu));
  int v179 = *(_DWORD *)(v91 + 4 * (v167 ^ 0x30u)) ^ *(_DWORD *)(v81 + 4 * (BYTE2(v166) ^ 0x7Bu)) ^ *(_DWORD *)(v82 + 4 * (HIBYTE(v164) ^ 0x84));
  unsigned int v180 = v152;
  unsigned int v181 = BYTE1(v152) ^ 0x31;
  int v182 = *(_DWORD *)(v84 + 4 * (BYTE1(v159) ^ 0xEAu));
  unsigned int v183 = v157;
  LODWORD(STACK[0x568]) = v157;
  int v184 = *(_DWORD *)(v84 + 4 * (BYTE1(v157) ^ 0x55u));
  int v185 = *(_DWORD *)(v84 + 4 * (BYTE1(v147) ^ 0x4Bu));
  int v186 = *(_DWORD *)(v84 + 4 * v181);
  int v187 = *(_DWORD *)(v84 + 4 * (BYTE1(v167) ^ 0xEAu));
  int v188 = *(_DWORD *)(v84 + 4 * (BYTE1(v173) ^ 0x7Fu));
  int v189 = *(_DWORD *)(v84 + 4 * (BYTE1(v164) ^ 0x4Bu));
  int v190 = *(_DWORD *)(v84 + 4 * (BYTE1(v166) ^ 0x31u));
  int v191 = *(_DWORD *)(v82 + 4 * (HIBYTE(v147) ^ 0x84));
  int v192 = *(_DWORD *)(v82 + 4 * (HIBYTE(v180) ^ 0xE7));
  int v193 = *(_DWORD *)(v82 + 4 * (HIBYTE(v159) ^ 0x55));
  int v194 = *(_DWORD *)(v82 + 4 * (HIBYTE(v183) ^ 0x3C));
  int v195 = *(_DWORD *)(v82 + 4 * (HIBYTE(v166) ^ 0xE7));
  int v196 = *(_DWORD *)(v82 + 4 * (HIBYTE(v173) ^ 0xBB));
  int v197 = *(_DWORD *)(v82 + 4 * (HIBYTE(v167) ^ 0x55));
  int v198 = v179 ^ v188;
  int v199 = v147;
  int v200 = v191 ^ v174 ^ *(_DWORD *)(v91 + 4 * (v159 ^ 0x30u));
  int v201 = STACK[0x578];
  unsigned int v202 = ((2 * ((v200 ^ 0xB74FF3C8 ^ v184) - 1202274211)) & 0x7E4DBDFA)
       + (((v200 ^ 0xB74FF3C8 ^ v184) - 1202274211) ^ 0xBF26DEFD);
  int v203 = v189 ^ v177 ^ *(_DWORD *)(v91 + 4 * (v166 ^ 0x74u)) ^ v196;
  int v204 = *(_DWORD *)(v91 + 4 * (v180 ^ 0x74u));
  int v205 = v195 ^ v187 ^ *(_DWORD *)(v91 + 4 * (v164 ^ 0xB8u)) ^ v176;
  int v206 = *(_DWORD *)(v91 + 4 * LODWORD(STACK[0x560]));
  int v207 = v202 + (v198 ^ 0x48B00C37) - ((2 * (v202 + (v198 ^ 0x48B00C37)) + 28459528) & 0x7EE3CC62);
  int v208 = (v192 ^ v182 ^ *(_DWORD *)(v91 + 4 * (v199 ^ 0xB8u)) ^ 0x73619A92 ^ v175) + 758658806;
  int v209 = v190 ^ v178 ^ v197 ^ *(_DWORD *)(v91 + 4 * (v173 ^ 0x76u));
  unsigned int v210 = (v193 ^ LODWORD(STACK[0x550]) ^ v186 ^ 0x9C1D15B1 ^ v206) - 907041214;
  unsigned int v211 = ((2 * v210) & 0x9BF77F9C) + (v210 ^ 0x4DFBBFCE) + (v209 ^ 0x63E2EA4E);
  unsigned int v212 = (v204 ^ LODWORD(STACK[0x558]) ^ v185 ^ 0xEA1DA7AF ^ v194) + 1794750297;
  unsigned int v213 = ((2 * v212) & 0xFDCCFF9E) + (v212 ^ 0x7EE67FCF) + (v203 ^ 0x15E25850);
  unsigned int v214 = (v213 - ((2 * v213 + 36896868) & 0xE70BF7AA) - 190874617) ^ 0xC4FCB75E;
  int v215 = ((-1397497827 * v214) ^ 0x3CFF7D53) + ((1499971642 * v214) & 0x79FEFAA6);
  unsigned int v216 = (((2 * v208) & 0xCAFB7FDC)
        + (v208 ^ 0x657DBFEE)
        + (v205 ^ 0x8C9E656D)
        - ((2 * (((2 * v208) & 0xCAFB7FDC) + (v208 ^ 0x657DBFEE) + (v205 ^ 0x8C9E656D)) + 17072166) & 0x3650D60)
        - 1674262845) ^ 0x3D43A6E1;
  unsigned int v217 = ((1339632071 * v216) ^ 0xBF7FD7CF) + ((531780494 * v216) & 0x7EFFAF9E);
  unsigned int v218 = (v211 - ((2 * v211 + 1678278758) & 0xE5A8AF96) + 618174462) ^ 0xE485AD5C;
  unsigned int v219 = ((-193647233 * v218) ^ 0xFFDFFFBF) + ((-387294466 * v218) & 0xFFBFFF7E);
  unsigned int v220 = ((-619630751 * ((v207 + 4917045) ^ 0x799E9A03)) ^ 0x67FEFE1D)
       + ((-1239261502 * ((v207 + 4917045) ^ 0x799E9A03)) & 0xCFFDFC3A)
       + v217;
  int v221 = v219 - v220 - ((2 * (v219 - v220) + 255700058) & 0x1AE17752) - 1257270826;
  unsigned int v222 = v217
       + ((v215 - 1023376422 + (v221 ^ 0x8D70BBA9) - 301) ^ 0xAA242441)
       - ((2 * (v215 - 1023376422 + (v221 ^ 0x8D70BBA9) - 301)) & 0xABB7B77C)
       + 1;
  unsigned int v223 = v219 + v215 - ((2 * (v219 + v215) - 2042559012) & 0xE5B6D3A4) + 905702592;
  unsigned int v224 = (v223 ^ 0x8D24962D) + v220 - ((2 * ((v223 ^ 0x8D24962D) + v220) + 822236202) & 0x3D78C100) + 2000521877;
  unsigned int v225 = (v222 - ((2 * v222 + 750258142) & 0x9BB843F4) - 466082327) ^ v221;
  unsigned int v226 = (v198 ^ 0xB74FF3C8) + (v224 ^ 0xA1EF052C ^ v225) + 1;
  int v227 = v224 ^ v221;
  unsigned int v228 = ((2 * v226) & 0xB24EDEFE)
       + (v226 ^ 0xD9276F7F)
       - ((2 * (((2 * v226) & 0xB24EDEFE) + (v226 ^ 0xD9276F7F)) + 490115130) & 0x364C45B2)
       - 1983812874;
  unsigned int v229 = ((2 * ((v205 ^ 0x73619A92) + (v227 ^ 0xEC3324D6) + 1)) & 0xED0FA3FE)
       + (((v205 ^ 0x73619A92) + (v227 ^ 0xEC3324D6) + 1) ^ 0x7687D1FF);
  unsigned int v230 = v229 - ((2 * v229 - 766354110) & 0x9EA0BBFA) + 947489950;
  unsigned int v231 = (v227 ^ 0x13CCDB29)
       + (v223 ^ 0xEC670952 ^ v224)
       - ((2 * ((v227 ^ 0x13CCDB29) + (v223 ^ 0xEC670952 ^ v224))) & 0x12CE42FC)
       - 1989729922;
  unsigned int v232 = ((2 * ((v203 ^ 0xEA1DA7AF) + (v231 ^ 0x7698DE81) + 1)) & 0xFD6FDE9E)
       + (((v203 ^ 0xEA1DA7AF) + (v231 ^ 0x7698DE81) + 1) ^ 0x7EB7EF4F);
  unsigned int v233 = v225 ^ 0xC0AC9A53;
  unsigned int v234 = ((v231 ^ 0x8967217E) & (v225 ^ 0xC0AC9A53)) - ((2 * ((v231 ^ 0x8967217E) & (v225 ^ 0xC0AC9A53))) & 0x531DCC3C);
  unsigned int v235 = (v225 ^ 0xC0AC9A53) + (v225 ^ v231 ^ 0xB63444D2) + 1;
  int v236 = v235 - ((2 * v235) & 0x7ACFEECC) + 1030223718;
  unsigned int v237 = v232 - ((2 * v232 + 1814123742) & 0x656BA3BA) + 1757838412;
  unsigned int v238 = (v231 ^ ((v231 ^ 0x7698DE81) - ((2 * (v231 ^ 0x7698DE81) + 2) & 0xB057FB66) + 1479278004) ^ 0xEC2B2BAB ^ v236)
       + v233;
  unsigned int v239 = (v209 ^ 0x9C1D15B1)
       + ((2 * v234 - 753021892) ^ 0x333A4439)
       + (v238 ^ 0x80803088)
       + ((2 * (2 * v234 - 753021892)) & 0x3FB0EFF4 ^ 0xD9CF778F)
       - ((2 * v238) & 0xFEFF9EEE)
       - 1621604492;
  unsigned int v240 = ((2 * v239) & 0x5EEFFFC6)
       + (v239 ^ 0x2F77FFE3)
       - ((2 * (((2 * v239) & 0x5EEFFFC6) + (v239 ^ 0x2F77FFE3)) + 855968676) & 0x9A0DCF1A)
       + 1720282463;
  int v241 = *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v237) ^ 0xB2));
  int v242 = v241 ^ 0x7D93C5C3;
  int v243 = *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v240) ^ 6u));
  unsigned int v244 = (v241 ^ 0x7D93C5C3) + (v241 ^ 0x8544C05E ^ v243) + 1;
  unsigned int v245 = (v243 ^ ((v243 ^ 0xF8D7059D) + 1132172253 + (~(2 * (v243 ^ 0xF8D7059D) + 2) | 0x7908D849)) ^ 0x2BF24030 ^ (v244 - ((2 * v244) & 0xDF425312) + 1872832905))
       + v242;
  int v246 = *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v240) ^ 0xCD));
  int v247 = *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v228) ^ 0x26u));
  int v248 = *(_DWORD *)(STACK[0xA00] + 4 * (BYTE1(v240) ^ 0xE7u));
  int v249 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x464]);
  int v250 = v249 ^ LODWORD(STACK[0x468]);
  unsigned int v251 = v250 ^ *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v230) ^ 0x50u)) ^ *(_DWORD *)(STACK[0xA00]
                                                                                    + 4 * (BYTE1(v237) ^ 0xD1u)) ^ *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v228) ^ 0x1B)) ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v240 ^ 0x8Du));
  int v252 = v249 ^ *(_DWORD *)(STACK[0x9B8] + 4 * (BYTE2(v237) ^ 0xB5u)) ^ *(_DWORD *)(STACK[0x9D0]
                                                                                    + 4
                                                                                    * (v228 ^ 0xD9u)) ^ *(_DWORD *)(STACK[0x9C0] + 4 * (HIBYTE(v230) ^ 0xCF)) ^ v248;
  unsigned int v253 = v250 ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v230 ^ 0xFDu)) ^ *(_DWORD *)(STACK[0xA00]
                                                                                              + 4
                                                                                              * (BYTE1(v228) ^ 0x22u)) ^ (v245 - ((2 * v245) & 0x9AA76126) + 1297330323);
  unsigned int v254 = v250 ^ *(_DWORD *)(STACK[0x9D0] + 4 * (v237 ^ 0xDDu)) ^ v247 ^ *(_DWORD *)(STACK[0xA00] + 4 * (BYTE1(v230) ^ 0x5Du)) ^ v246;
  HIDWORD(v255) = LODWORD(STACK[0x468]) ^ 0x6BCE0E;
  LODWORD(v255) = LODWORD(STACK[0x468]) ^ 0x93000000;
  int v256 = (v255 >> 24) - ((2 * (v255 >> 24)) & 0x8553A4F0) + 1118425720;
  HIDWORD(v255) = v252 ^ 0x5B65DE;
  LODWORD(v255) = v252 ^ 0xD000000;
  int v257 = ((v255 >> 24) - ((2 * (v255 >> 24)) & 0xF783F8F8) - 71172996) ^ v256;
  HIDWORD(v255) = v257 ^ 0xFFFFFFFB;
  LODWORD(v255) = v257 ^ 0xE9D54A00;
  int v258 = (v255 >> 8) - ((2 * (v255 >> 8)) & 0x54AB2F02) + 710252417;
  if (LODWORD(STACK[0x570]) == 1) {
    int v259 = -1500974396;
  }
  else {
    int v259 = -1495767328;
  }
  unsigned int v260 = v258 ^ v259;
  unsigned int v261 = (((v258 ^ v259) & 0xFF0E6B48 ^ 0x860A6308 | 0x70A1E963)
        - ((v258 ^ v259) & 0xFF0E6B48 ^ 0x860A6308 | 0x8F5E169C)
        - 1889659236) ^ 0x85A7C26B | ((v258 & 0xF194B7 ^ 0x19A74AC9 | 0xC94931E6)
                                    - (v258 & 0xF194B7 ^ 0x19A74AC9 | 0x36B6CE19)
                                    + 917949977) ^ 0xD0EF7B8A;
  unsigned int v262 = v261 - ((2 * v261) & 0x81F1F8AC) + 1090059350;
  int v263 = byte_10026B6C0[(((v254 >> 8) & 0xB3 ^ 0x1FC11) + ((v254 >> 8) & 0x4C ^ 0x49) - 1) & 0x3FFFF ^ 0x1FC89];
  char v264 = 2 * v263;
  unsigned int v265 = v263 - ((2 * v263 + 36) & 0x34) - 52;
  LOBYTE(v265) = ((v265 | 0xBE) - (v264 & 2) - 3) ^ ((v265 & 0xA2 ^ 0x20) - (v265 | 0xE3)) ^ (((v265 >> 2) & 0x1D ^ 0xB1 | 0x78)
                                                                                            - ((v265 >> 2) & 0x1D ^ 0xB1 | 7)
                                                                                            + 7);
  int v266 = (v254 & 0xF2 ^ 3) - (v254 & 0xD) - 1162854644;
  LOBYTE(v266) = byte_10026FDA0[((v266 & 0x8287C37A ^ 0x101C122)
                               + (v266 ^ 0x9E8E3EDD)
                               - ((v266 ^ 0x9E8E3EDD) & 0x427C37A)) ^ 0xA399C266];
  LOBYTE(STACK[0xA9E]) = v265 ^ 0xEF;
  LOBYTE(STACK[0xA9F]) = v266 ^ 0xC6;
  uint64_t v267 = HIBYTE(v253);
  int v268 = 2 * (v267 ^ 0x54);
  unsigned int v269 = ((((v267 ^ 0x54) - (v268 & 0x7E)) << 24) - 1090519040) ^ 0xBF000000;
  char v270 = byte_100285340[HIBYTE(v254) ^ 0x25];
  LOBYTE(STACK[0xA9C]) = (v270 - ((2 * v270 + 90) & 0xD2) + 22) ^ 0x58;
  unsigned int v271 = ((((((v267 ^ 0x54) - (v268 & 0xFFFFFFFB)) << 24) + 2097152000) ^ 0x7D000000)
        - ((2 * (((((v267 ^ 0x54) - (v268 & 0xFFFFFFFB)) << 24) + 2097152000) ^ 0x7D000000)) & 0x2C000000)
        - 1775206282) ^ 0xAAAA48AF;
  int v272 = (v269 - ((2 * v269) & 0x46000000) - 1548354262) ^ 0x423A36EB;
  int v273 = (v271 & v272) - ((2 * (v271 & v272)) & 0x5854502E);
  unsigned int v274 = ((v272 + v271) ^ 0x373DAFF5)
       + ((2 * (v272 + v271)) & 0x6E7B5FEA)
       + ((2 * v273 - 665563090) ^ 0x801240A3)
       + 1887190911
       + ((2 * (2 * v273 - 665563090)) & 0x4F73DEE4 ^ 0xFFDF7FBB);
  unsigned int v275 = ((v274 >> 22) + 1275867968 - ((v274 >> 21) & 0x762) + 113) ^ 0x4C0C3340;
  unsigned int v276 = (((((v275 >> 2) - ((v275 >> 1) & 0x70) + 72) ^ 0xB) - 16) ^ 0xFFFFFFD6) + 1;
  LOBYTE(v276) = (v276 ^ 0xFB) + byte_100285340[v267 ^ 0x71] + ((2 * v276) & 0xF7);
  int v277 = (HIWORD(v253) ^ 0x89FE) + (HIWORD(v253) ^ 0x89E1);
  LOBYTE(STACK[0xA98]) = (v276 - ((2 * v276 + 90) & 0xFC) + 43) ^ 0x33;
  LOBYTE(v277) = ((2 * v277) & 0xEC) + (v277 ^ 0xF6) + 10;
  LOBYTE(v276) = byte_100283E10[((BYTE2(v253) ^ 0x202931A0 | 0xABD4BFD6)
                               - (BYTE2(v253) ^ 0x202931A0 | 0x542B4029)
                               + 1412120617) ^ 0x8BFD8E23]
               + ((2 * v277) & 4)
               + (v277 ^ 0x82)
               + 51;
  LOBYTE(v277) = byte_100285340[HIBYTE(v260) ^ 0xBALL];
  LOBYTE(STACK[0xA99]) = (v276 - ((2 * v276) & 0x87) + 67) ^ 0xF2;
  char v278 = v277 - ((2 * v277 + 90) & 0x4A) + 82;
  LOBYTE(v276) = ((-92 - v277 - ((-90 - 2 * v277) & 0xA2)) ^ v278 ^ 0xB4 ^ ((v278 ^ 0x38)
                                                                          + ((2 * (v278 ^ 0x38) - 58) & 0x80)
                                                                          - 93))
               + 98;
  LOBYTE(STACK[0xA94]) = (v276 ^ 0xFB) + ((2 * v276) & 0xF7) + 5;
  int v279 = ((2 * (BYTE2(v254) ^ 0x2C)) & 0xAE) - (BYTE2(v254) ^ 0x2C) - 860859736;
  int v280 = (HIWORD(v254) ^ 0x9ED4) + (HIWORD(v254) ^ 0x9ECB);
  LOBYTE(v280) = ((2 * v280) & 0xF6) + (v280 ^ 0x7B) - 123;
  LOBYTE(v279) = byte_100283E10[((v279 & 0x841041A1 ^ 0x134B2D01)
                               + (v279 ^ 0x841450B0)
                               - ((v279 ^ 0x841450B0) & 0x82001A1)) ^ 0xD7DF6FEALL]
               + (v280 ^ 0x7B)
               + ((2 * v280) & 0xF7);
  LOBYTE(STACK[0xA9D]) = (v279 - ((2 * v279 + 116) & 0xF7) - 75) ^ 0xD6;
  int v281 = (((2 * (v262 ^ 0x36)) | 0x5F193132) - (v262 ^ 0x36) - 797743257) ^ 0x2FCEC2F9;
  LOBYTE(STACK[0xA97]) = byte_10026FDA0[(v281 - ((2 * v281) & 0x61666CB2u) + 1890793049) ^ 0x70F16C98] ^ 0x91;
  unsigned int v282 = ((v251 ^ 0xB7) - ((2 * (v251 ^ 0xB7)) & 0x162) - 1830773583) ^ 0x98A49C94;
  int v283 = (BYTE1(v253) ^ 7) - ((2 * (BYTE1(v253) ^ 7)) & 0xB6) - 1379338149;
  LOBYTE(v283) = byte_10026B6C0[((v283 & 0x84C0D40A) + (v283 ^ 0x9FC8FE5B) - ((v283 ^ 0x9FC8FE5B) & 0x2200040A) + 3473408) ^ 0x94F5D2BELL];
  LOBYTE(STACK[0xA93]) = byte_10026FDA0[(((2 * v282) & 0x48806E8) - v282 - 1187316597) ^ 0xB37EFCDELL] ^ 0xCE;
  char v284 = v283 - ((2 * v283 + 100) & 0x6E) + 105;
  char v285 = v284 ^ 0xBF;
  if (!((LODWORD(STACK[0x568]) ^ 0x3C000000u) >> 24)) {
    char v285 = 116;
  }
  char v286 = v284 ^ ((((v285 & (v284 ^ 0x37)) - ((2 * (v285 & (v284 ^ 0x37))) & 0xF0) - 8) & 0xFC) >> 2) ^ 0xD8;
  char v287 = byte_10026FDA0[((v253 ^ 0x401EA)
                       + (v253 & 0x5D ^ 0x781A4A15)
                       - ((v253 ^ 0x401EA) & 0x4005D)) ^ 0x781A4BB9];
  LOBYTE(STACK[0xA9A]) = v286;
  LOBYTE(STACK[0xA9B]) = v287 ^ 0x60;
  int v288 = (HIWORD(v251) ^ 0xF793) + (HIWORD(v251) ^ 0xF78C);
  int v289 = (((2 * (BYTE2(v251) ^ 0x225BEB23)) & 0x3755BA) - (BYTE2(v251) ^ 0x225BEB23) + 801129762) ^ 0xD1B8F30;
  int v290 = ((2 * v288) & 0x46) + (v288 ^ 0xA3) + 93;
  unsigned int v291 = (v290 ^ 0x66)
       + ((2 * v290) & 0xFFFFFFCC)
       + byte_100283E10[(((2 * v289) & 0xFAC4E8u) - v289 - 1232953973) ^ 0xB602BC9DLL];
  HIDWORD(v292) = v291 - 1;
  LODWORD(v292) = (v291 << 24) + 1325400064;
  int v293 = (v292 >> 27) + (~(2 * (v292 >> 27)) | 0xFFFFFF9F) + 49;
  HIDWORD(v292) = v293 ^ 0x1B;
  LODWORD(v292) = (v293 ^ 0xFFFFFFBF) << 24;
  LOBYTE(STACK[0xA91]) = ((v292 >> 29) - ((2 * (v292 >> 29)) & 0x44) + 34) ^ 0x28;
  int v294 = byte_10026B6C0[((BYTE1(v251) ^ 0x1F) + ((v251 >> 8) & 0xE7 ^ 0x13E0) - ((BYTE1(v251) ^ 0x1F) & 0xFFFFFFE7)) ^ 0x130CLL];
  unsigned int v295 = v294 - 2 * ((v294 + 50) & 0x53 ^ v294 & 1) - 124;
  int v296 = (((v295 >> 2) & 0x1D ^ 0x11) - ((2 * ((v295 >> 2) & 0x1D ^ 0x11)) & 0x38) + 62) ^ 0x3C;
  LOBYTE(STACK[0xA92]) = v295 ^ 0x2A ^ (v296 - ((2 * v296) & 0x33) - 103);
  int v297 = byte_10026B6C0[BYTE1(v262) ^ 9];
  unsigned int v298 = v297 - ((2 * v297 + 100) & 0xFFFFFFDA) - 97;
  char v299 = ((v298 >> 2) & 0x1D ^ 8) - ((v298 >> 1) & 0x28) - 106;
  int v300 = (HIWORD(v262) ^ 0x402B) + (HIWORD(v262) ^ 0x4034);
  LOBYTE(STACK[0xA96]) = v298 ^ 0x14 ^ ((v299 & 0x8D ^ 8) + (v299 & 0x70 ^ 0x11) - 1);
  LOBYTE(v300) = 2 * (v300 & 0x1F) + (v300 ^ 0x9F) + 97;
  LOBYTE(v298) = ((2 * v300) & 0x3A)
               + (v300 ^ 0x9D)
               + byte_100283E10[(((2 * (BYTE2(v262) ^ 0x104024EA)) & 0x80000E) - (BYTE2(v262) ^ 0x104024EAu) + 856601848) ^ 0x234E908DLL];
  LOBYTE(STACK[0xA95]) = (v298 - 2 * ((v298 + 24) & 0x1F ^ v298 & 5) + 50) ^ 0x45;
  char v301 = byte_100285340[HIBYTE(v251) ^ 0xB4];
  LOBYTE(STACK[0xA90]) = (v301 + (~(2 * v301 + 90) | 0x89) - 23) ^ 0x38;
  LODWORD(STACK[0x9DC]) = 0;
  unsigned int v302 = (void (*)(unint64_t))*(&off_1002E1F70 + v201 + 1943);
  v302(STACK[0x9C0]);
  v302(STACK[0x9E8]);
  unsigned int v303 = (void (*)(unint64_t))*(&off_1002E1F70 + (v201 ^ 0x8B9));
  v303(STACK[0x9B8]);
  v303(STACK[0xA00]);
  v303(STACK[0x9D0]);
  v302(STACK[0x9E0]);
  v303(STACK[0x9F0]);
  v302(STACK[0x9F8]);
  if (LODWORD(STACK[0x9DC]) == v201 - 151) {
    int v304 = 0;
  }
  else {
    int v304 = -42885;
  }
  unint64_t v305 = STACK[0x938];
  STACK[0x9B0] -= 32;
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70
                                                    + (((v304 == ((v201 + 1809) ^ 0x7A8)) * (((v201 - 15) | 1) ^ 0x7BE)) ^ (v201 + 256))))(v305);
}

void sub_1001E971C(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W8>)
{
  a1[17] ^= LOBYTE(STACK[0xA90]) ^ 0xBD;
  a1[18] ^= (a7 + 99) & 0xBB ^ LOBYTE(STACK[0xA91]) ^ 0xD5;
  a1[19] ^= LOBYTE(STACK[0xA92]) ^ 0x1A;
  a1[20] ^= LOBYTE(STACK[0xA93]) ^ 0x25;
  unsigned int v7 = (_DWORD *)STACK[0x8F0];
  *unsigned int v7 = 2023518721;
  *(void *)STACK[0x518] = a1;
  *(_DWORD *)STACK[0x528] = LODWORD(STACK[0x858]) ^ 0xA823E962;
  *(void *)STACK[0x538] = v7;
  sub_1002359CC((uint64_t)a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_1001E97CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x570] = 0;
  uint64_t v8 = a3 + a2 + v7 - 345090756;
  int v9 = (((*(unsigned __int8 *)v8 - ((*(unsigned __int8 *)v8 << ((88 * (v6 ^ 0x81)) ^ 0xB1)) & 0xC0)) << 8) + 24576) ^ 0x6000;
  LODWORD(v8) = (v9 - ((2 * v9) & 0xFFFF9A00) - 13024) ^ 0xFFFFCD20 | (*(unsigned __int8 *)(v8 + 1)
                                                                     - ((2 * *(unsigned __int8 *)(v8 + 1)) & 0x18A)
                                                                     + 14277) ^ 0x37C5;
  LODWORD(v8) = (v8 - ((2 * v8) & 0x5E) + 47) ^ 0x2F;
  int v10 = ((unsigned __int16)v8 ^ 0x67767FFE) + ((2 * v8) & 0xFFFC) - 20054224;
  unint64_t v11 = ((v5 - 1180336884) | ((unint64_t)((v5 - 1180336884) < 0x194351A9) << 32))
      + v7
      - 423842217;
  LOWORD(v9) = (((*(unsigned __int8 *)v11 - ((2 * *(unsigned __int8 *)v11) & 0xA4)) << 8) - 11776) ^ 0xD200;
  LOWORD(v11) = (v9 - ((2 * v9) & 0x7200) - 18134) ^ 0xB92A | (*(unsigned __int8 *)(v11 + 1)
                                                             - ((2 * *(unsigned __int8 *)(v11 + 1)) & 0x152)
                                                             - 23383) ^ 0xA4A9;
  LODWORD(v11) = (unsigned __int16)(v11 - ((2 * v11) & 0x7A28) + 15636) ^ 0x3D14;
  LODWORD(STACK[0x560]) = (v11 ^ 0xA74DFABD) + 1539012592 + ((v4 - 644) & (2 * v11));
  LODWORD(STACK[0x568]) = v10;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1698
                                * (*(unsigned __int8 *)(v7 + (v5 - 1468586280 + v10 - 1851357857)) == 128)) ^ v6)))();
}

uint64_t sub_1001E99F4@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v8 = (v3 + 1421) | 0xA0;
  STACK[0x570] = v5 + (v8 ^ v4) + v2;
  uint64_t v10 = v6;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v8 + 473)))(v10);
  STACK[0x8A0] = v7;
  STACK[0x648] = STACK[0x570];
  LODWORD(STACK[0x784]) = STACK[0x568];
  LODWORD(STACK[0x930]) = STACK[0x560];
  return (*(uint64_t (**)(uint64_t))(a1
                                            + 8
                                            * (int)(((a2 != 0)
                                                   * (((4 * v8) ^ 0xFFFFE06A) + ((v8 + 910519998) & 0xC9BA8FF5))) ^ v8)))(v12);
}

void sub_1001E9A98()
{
  ((void (*)(uint64_t, void, uint64_t))*(&off_1002E1F70 + (v0 ^ 0x1AE8) + 2102))(v1, 0, 16);
  JUMPOUT(0x1001DA6E4);
}

uint64_t sub_1001E9B0C(int a1)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)(((((v1 + 486) ^ 0xFFFFF809) + v1 + 790) * (a1 == LODWORD(STACK[0x570]))) | v1)))();
}

uint64_t sub_1001E9B5C@<X0>(unsigned int a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 + v6)) = *(unsigned char *)(v5 + (a3 + v7))
                                           - ((2 * *(unsigned char *)(v5 + (a3 + v7))) & 0xF4)
                                           - 6;
  return (*(uint64_t (**)(void))(a2 + 8 * ((7 * ((v4 & 0xFFFFFFC0) != v8)) ^ a1)))();
}

uint64_t sub_1001E9BB8@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x5DC]) = a2;
  STACK[0x728] = *(void *)(a1 + 8 * v2);
  return sub_100239318();
}

uint64_t sub_1001E9BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = 7 * (STACK[0x578] ^ 0x721);
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  uint64_t v7 = 222 * (v5 ^ 0x3BDu);
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v9.i64[0] = 0x100000001;
  v9.i64[1] = 0x100000001;
  v4.i32[0] = *(_DWORD *)(v3 + 4);
  v4.i32[1] = *(_DWORD *)(v3 + 4 * (v7 - 442));
  v4.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v10 = vextq_s8(v6, v4, 0xCuLL);
  int8x16_t v11 = v4;
  v11.i32[3] = *(_DWORD *)(v3 + 16);
  int32x4_t v12 = (int32x4_t)veorq_s8(vorrq_s8(veorq_s8((int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v10, v8), vdupq_n_s32(0xCF9307E1)), (int8x16_t)vdupq_n_s32(0x7B45F037u)), vdupq_n_s32(0x2A29F587u)), (int8x16_t)vdupq_n_s32(0xDF00ED5E)), (int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x687B51B6u)), (int8x16_t)vdupq_n_s32(0x48024085u)), (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x1784AE48u)), (int8x16_t)vdupq_n_s32(0x17808E49u))), v9)),
                     (int8x16_t)vdupq_n_s32(0x555BC632u));
  v13.i32[0] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 4) & 1));
  v13.i32[1] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 4 * (v7 - 442)) & 1));
  v13.i32[2] = *((_DWORD *)&STACK[0x14A0] + (*(_DWORD *)(v3 + 12) & 1));
  v13.i32[3] = *((_DWORD *)&STACK[0x14A0] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v3 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + 1588), v13), (int8x16_t)vdupq_n_s32(0x3A70024Bu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v12, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v12, v12), (int8x16_t)vdupq_n_s32(0xB3DBB9B6))), vdupq_n_s32(0xD9EDDCDB)), 1uLL));
  return (*(uint64_t (**)(void))(a3 + 8 * (v5 ^ 0x57)))();
}

uint64_t sub_1001E9DAC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W8>)
{
  int8x16_t v8 = (unsigned int *)(v6 + 4 * (v4 + v7));
  int v9 = a3 + ((a4 + 1516 + (v5 | 0x7FFFFFFF) - 812449735) ^ 0x7B45F037) + 3253;
  uint64_t v10 = v4 + 1;
  int v11 = *(_DWORD *)(v6 + 4 * (v10 + v7));
  unsigned int v12 = (((v11 & 0x687B51B6 ^ 0x48024085) + (v11 & 0x1784AE48 ^ 0x17808E49) - 2) | v9 ^ 0xDF00ED5E) ^ 0x555BC632;
  *int8x16_t v8 = v8[397] ^ *((_DWORD *)&STACK[0x14A0] + (v11 & 1)) ^ ((v12 - ((2 * v12) & 0xB3DBB9B6) - 638722853) >> 1) ^ 0x3A70024B;
  return (*(uint64_t (**)(void))(a1 + 8 * ((102 * (v10 == a2 + 3)) ^ a4)))();
}

uint64_t sub_1001E9EAC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int8x16_t v15 = (int8x16_t)vld1q_dup_f32((const float *)v14);
  uint64_t v16 = (v12 - 921545803) & 0x36EDA6FE;
  v17.i64[0] = 0x8000000080000000;
  v17.i64[1] = 0x8000000080000000;
  a8.i32[0] = *(_DWORD *)(v14 + 4);
  a8.i32[1] = *(_DWORD *)(v13 + 4 * (v16 - 392) + 68);
  a8.i32[2] = *(_DWORD *)(v14 + 12);
  int8x16_t v18 = vextq_s8(v15, a8, 0xCuLL);
  int8x16_t v19 = a8;
  v19.i32[3] = *(_DWORD *)(v14 + 16);
  int32x4_t v20 = (int32x4_t)veorq_s8(vorrq_s8(vandq_s8(v19, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v18, v17)), (int8x16_t)vdupq_n_s32(0x8AD908FE));
  v21.i32[0] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v14 + 4) & 1));
  v21.i32[1] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v13 + 4 * (v16 - 392) + 68) & 1));
  v21.i32[2] = *(_DWORD *)(v11 + 4 * (*(_DWORD *)(v14 + 12) & 1));
  v21.i32[3] = *(_DWORD *)(v11 + 4 * (v19.i8[12] & 1));
  *(int8x16_t *)uint64_t v14 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v14 - 908), v21), (int8x16_t)vdupq_n_s32(0x29408E43u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), (int8x16_t)vdupq_n_s32(0xFF198994))), vdupq_n_s32(0xFF8CC4CA)), 1uLL));
  return (*(uint64_t (**)(void))(a11 + 8 * ((v12 - 408) | 6)))();
}

void sub_1001E9FCC()
{
}

uint64_t sub_1001E9FD8@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>)
{
  unsigned int v3 = ((*v2 & 0x7FFFFFFE ^ 0x22B03DFA) & 0x6BF0E0EA) - (*v2 & 0x7FFFFFFE ^ 0x22B03DFA | 0xEBF0E0EB);
  unsigned int v4 = (((v3 & 0x27A81992 ^ 0x3A01183 | v3 & 0x5857E66C) - 1) | ((a2 + 1356) ^ 0x800007A8) & v2[623]) ^ 0xBFC63B92;
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14A0] + (*v2 & 1)) ^ ((v4 + 835165102 + (~(2 * v4) | 0x9C70C8A5)) >> 1) ^ 0x4E6521F0;
  return (*(uint64_t (**)(void))(a1 + 8 * ((200 * (LODWORD(STACK[0x8B4]) > 0x26F)) ^ a2)))();
}

uint64_t sub_1001EA0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x8B4]) = 0;
  int v7 = LODWORD(STACK[0x8B4])++;
  *(_DWORD *)(v4 + 1624) = v7 + 340121380;
  uint64_t v8 = (*(_DWORD *)(v5 + 1632) + 455641086);
  unint64_t v9 = 516615401
     * ((0x8C41F14010420192 - ((v6 - 192) | 0x8C41F14010420192) + ((v6 - 192) | 0x73BE0EBFEFBDFE6DLL)) ^ 0xFB0286C49CDEF85FLL);
  *(_DWORD *)(v6 - 172) = (v3 + 2134297591) ^ v9;
  *(void *)(v6 - 168) = v9 ^ 0x7B7AF027;
  *(_DWORD *)(v6 - 160) = ((v3 + 2134297591) ^ 0x36) + v9;
  *(_DWORD *)(v6 - 156) = (v3 - 185257761) ^ v9;
  *(void *)(v6 - 184) = v8 - v9;
  *(_DWORD *)(v6 - 192) = v9;
  *(_DWORD *)(v6 - 152) = ((v3 + 2134297591) & 0xFF7EDBF9) + v9;
  (*(void (**)(uint64_t))(a3 + 8 * (v3 + 157)))(v6 - 192);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + *(int *)(v6 - 176)))();
}

void sub_1001EA1E4()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 1632) + 1;
  }
  else {
    int v3 = 1616013353;
  }
  *(_DWORD *)(v2 + 1632) = v3;
  JUMPOUT(0x1001EA370);
}

uint64_t sub_1001EA3E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8
                                   * (((v1 + 8 == ((v2 + 1632) ^ 0x316475B1)) * (((v2 + 704) | 0x96) - 1119)) ^ v2)))();
}

uint64_t sub_1001EA42C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(STACK[0x548]) = a4;
  unint64_t v9 = 1856021207
     * ((((2 * (v8 - 192)) | 0x7CACD15A334DE292) - (v8 - 192) - 0x3E5668AD19A6F149) ^ 0xD342FF3657CF27B7);
  STACK[0x14A0] = 0xCF8E5CF95686EC26;
  LODWORD(STACK[0x8B4]) = *(_DWORD *)(v6 + 1624) - 340121379;
  uint64_t v10 = *(unsigned int *)(v7 + 1632);
  *(_DWORD *)(v8 - 160) = v9 + v4 + 1123495617;
  *(_DWORD *)(v8 - 156) = v9;
  *(_DWORD *)(v8 - 180) = v4 + 1251605921 + v9;
  *(void *)(v8 - 176) = v10 - v9;
  *(void *)(v8 - 168) = v9 ^ v5;
  *(_DWORD *)(v8 - 188) = (v4 + 1251605851) ^ v9;
  *(_DWORD *)(v8 - 184) = (v4 + 1251605863) ^ v9;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v4 + 203)))(v8 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v8 - 192)))(v11);
}

uint64_t sub_1001EA530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = STACK[0x578];
  int v6 = (STACK[0x578] + 755294135) & 0xD2FB1FBF;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a3 + 8 * (int)(STACK[0x578] ^ 0xF8D)))(STACK[0x4F8], 3312658705);
  int v8 = (*(uint64_t (**)(void))(a3 + 8 * ((int)v5 + 187)))();
  unsigned int v9 = v8 - 1965487874 - ((v8 << (v6 - 30)) & 0x15B211FC);
  *(_DWORD *)(v4 + 3216) = v9;
  unsigned int v10 = v9 ^ 0x8AD908FC ^ (v9 >> 30);
  *(_DWORD *)(v3 + 4) = ((1812433253 * v10) ^ 0xF7F3CDFE)
                      + ((-670100790 * v10) & 0xEFE79BFC)
                      - 2
                      * ((((1812433253 * v10) ^ 0xF7F3CDFE) + ((-670100790 * v10) & 0xEFE79BFC) + 1208758787) & ((v6 ^ 0x42D) + 181994957) ^ (((101 * v10) ^ 0xFE) + ((-54 * (_BYTE)v10) & 0xFC) - 1) & 1)
                      - 1830470911;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (v6 ^ 0x75)))();
}

void sub_1001EA690()
{
}

uint64_t sub_1001EA6AC@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x8B4]) = a1 + 1;
  uint64_t v4 = ((uint64_t (*)(unint64_t, void))*(&off_1002E1F70 + v2 + 1344))(STACK[0x4F0], 0);
  int v5 = LODWORD(STACK[0xAC8]) - 1965487874 - ((2 * LODWORD(STACK[0xAC8])) & 0x15B211FC);
  LODWORD(STACK[0xAB8]) = LODWORD(STACK[0xAC0]) - 1965487874 - ((2 * LODWORD(STACK[0xAC0])) & 0x15B211FC);
  LODWORD(STACK[0xAB4]) = v5;
  int v6 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v2 + 1329))(v4);
  LODWORD(STACK[0xABC]) = v6 - 1965487874 - ((v6 << (v2 ^ 0x33)) & 0x15B211FC);
  int v7 = ((uint64_t (*)(void))*(&off_1002E1F70 + (v2 ^ 0xB51)))();
  LODWORD(STACK[0xAB0]) = v7 - 1965487874 - ((2 * v7) & 0x15B211FC);
  int v8 = ((2 * STACK[0x560]) & 0xCEDFCD5E) + (STACK[0x560] ^ 0xE76FE6AF);
  LODWORD(STACK[0x558]) = v8 - ((2 * v8 + 824193698) & 0x26FAD8E4) + 739083715;
  unint64_t v9 = STACK[0x578];
  LODWORD(STACK[0x568]) = (STACK[0x578] + 1643913169) ^ 0x17;
  LODWORD(STACK[0x550]) = v9 - 1403947069;
  int v10 = (DWORD1(xmmword_10031DC90) ^ 0x83A2201 ^ (1664525
                                                * (xmmword_10031DC90 ^ v1 ^ (xmmword_10031DC90 >> 30))
                                                - ((3329050
                                                  * (xmmword_10031DC90 ^ v1 ^ (xmmword_10031DC90 >> 30))) & 0x5C655FE)
                                                - 2099041537))
      + (*(_DWORD *)STACK[0x570] ^ 0x8AD908FE);
  unsigned int v11 = (v10 ^ 0xFBF6CFF7) + 474872998 + ((2 * v10) & 0xF7ED9FEE);
  DWORD1(xmmword_10031DC90) = v11 - ((2 * v11 + 259417798) & 0x15B211FC) + 1922317409;
  unint64_t v12 = 516615401
      * ((~((v3 - 192) | 0xAFE6AC81552A45E8) + ((v3 - 192) & 0xAFE6AC81552A45E8)) ^ 0xD8A5DB05D9B6BC25);
  int v13 = v12 + (v2 ^ 0x49A) + 798918314;
  *(void *)(v3 - 184) = 1805391306 - v12;
  *(_DWORD *)(v3 - 160) = v13 + 27;
  *(_DWORD *)(v3 - 156) = ((v2 ^ 0x49A) - 185257761) ^ v12;
  *(_DWORD *)(v3 - 172) = ((v2 ^ 0x49A) + 798918314) ^ v12;
  *(_DWORD *)(v3 - 192) = v12;
  *(void *)(v3 - 168) = v12 ^ 0x6B9C15C8;
  *(_DWORD *)(v3 - 152) = v13 - 26;
  uint64_t v14 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v2 ^ 0x49A) + 157))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v3 - 176)))(v14);
}

uint64_t sub_1001EAA14()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1711) ^ (510 * (v1 >= 0x6B9C15C8)))))();
}

uint64_t sub_1001EAA44()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1711) ^ (510 * (v1 <= 0x6B9C1837)))))();
}

uint64_t sub_1001EAA78()
{
  LODWORD(xmmword_10031DC90) = dword_10031E64C;
  *(_DWORD *)(v7 - 192) = v3;
  *(_DWORD *)(v7 - 160) = LODWORD(STACK[0x568]) + v3;
  *(_DWORD *)(v7 - 156) = (v1 - 185257761) ^ v3;
  *(_DWORD *)(v7 - 152) = v3 + v4 - 42;
  *(void *)(v7 - 184) = (v5 + 194106417) - v3;
  *(void *)(v7 - 168) = v6;
  *(_DWORD *)(v7 - 172) = v4 ^ v3;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v0 + 8 * v2))(v7 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v7 - 176)))(v8);
}

uint64_t sub_1001EAB08()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 - 831) ^ 0x438) * (v1 >= 0x27DFD0D6)) ^ (v2 - 1294))))();
}

uint64_t sub_1001EAB44@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x75B;
  LODWORD(STACK[0xAB0]) ^= LODWORD(STACK[0x558]) ^ (v3 + 326986048);
  return (*(uint64_t (**)(void))(v1 + 8 * ((115 * (v2 + ((v3 + 758) | 0x180) == 1510844739)) ^ v3)))();
}

uint64_t sub_1001EAC44()
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1 + 8 * ((1818 * (v3 - 1 == (v0 ^ 0x5523DB60))) ^ (v0 - 1127))))();
}

uint64_t sub_1001EAC9C()
{
  uint64_t v4 = 4 * (v2 - 1972446410);
  unsigned int v5 = *((_DWORD *)&xmmword_10031DC90 + (v2 - 1972446411));
  int v6 = (*(_DWORD *)((char *)&xmmword_10031DC90 + v4) ^ 0xC72B3C6D ^ (1566083941
                                                                   * (v5 ^ 0xA7E210F0 ^ ((v5 >> 30) | 0x2D3B180C))
                                                                   - ((-1162799414
                                                                     * (v5 ^ 0xA7E210F0 ^ ((v5 >> 30) | 0x2D3B180C))) & 0x9BE46926)
                                                                   + 1307718803))
     - v2;
  *(_DWORD *)((char *)&xmmword_10031DC90 + v4) = v6 - ((2 * v6 + 186796436) & 0x15B211FC) + 6958536;
  unint64_t v7 = 1606104089 * ((((v3 - 192) | 0x61C84BC974780156) - ((v3 - 192) & 0x61C84BC974780156)) ^ 0xA376B0FD016F4368);
  *(_DWORD *)(v3 - 180) = (v1 - 1937845642) ^ v7;
  *(_DWORD *)(v3 - 176) = v1 - 1937845560 + v7;
  *(_DWORD *)(v3 - 160) = -1231242342 - v7 + v1;
  *(void *)(v3 - 152) = 2529343070u - v7;
  *(_DWORD *)(v3 - 192) = v7 + 1;
  *(_DWORD *)(v3 - 184) = v7 ^ (v1 - 1937845560) ^ 0x21;
  *(void *)(v3 - 168) = (v2 + 556896661) ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 170)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v3 - 188)))(v8);
}

uint64_t sub_1001EAE38()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1224) | (27 * (v1 < 0x96C2B65E)))))();
}

uint64_t sub_1001EAE68()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((STACK[0x578] - 1224) ^ (27 * (v1 > 0x96C2B8CD)))))();
}

void sub_1001EAE9C(int a1@<W8>)
{
  LODWORD(xmmword_10031DC90) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (a1 - 1688338501)))(STACK[0x560]);
  JUMPOUT(0x1001E9BD8);
}

uint64_t sub_1001EAF10(uint64_t a1)
{
  STACK[0x788] = 32;
  STACK[0x720] = v1;
  STACK[0x620] = STACK[0x560];
  return sub_1002347B8(a1);
}

uint64_t sub_1001EAF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = v4 + 1335;
  unsigned int v6 = (v4 + 2030006010) & 0x870097FA;
  unsigned int v7 = (v4 + 2048544571) & 0x85E5B673;
  BOOL v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v4 + 1906)))(20, 2865462264) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)((v8 * (v7 ^ v6 ^ 0x234)) ^ v5)))();
}

uint64_t sub_1001EAFAC()
{
  LODWORD(STACK[0x568]) = v2;
  int v3 = dword_10031EC60;
  STACK[0x570] = qword_10031EE68;
  uint64_t v4 = (int)(((2 * v0) ^ 0xB2A98CCC) & v3);
  int v5 = *(unsigned __int8 **)(v1 + 8);
  int v6 = *v5;
  unint64_t v7 = 1755343967
     * ((1755343967 * ((v5 ^ *(_DWORD *)(STACK[0x570] + v4)) & 0x7FFFFFFF)) ^ ((1755343967
                                                                                            * ((v5 ^ *(_DWORD *)(STACK[0x570] + v4)) & 0x7FFFFFFF)) >> 16));
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((4042
                               * (v6 != (byte_10026ECA0[(v7 >> 24) + 3] ^ byte_1002828C0[v7 >> 24] ^ byte_100291410[(v7 >> 24) + 2] ^ v7 ^ (13 * BYTE3(v7))))) ^ (2 * v0) ^ 0xB0E)))();
}

uint64_t sub_1001EB110@<X0>(int a1@<W2>, int a2@<W8>)
{
  unint64_t v12 = (char *)(v10 + (int)(v2 + (a1 & 0xFDDCFFF4) + (v4 ^ 0x7EEE7FFA) + 29 * (a2 ^ 0xFC) + 1257));
  char v13 = *v12;
  unint64_t v14 = ((((v12 ^ v9) & 0x7FFFFFFF) * v3) ^ ((((v12 ^ v9) & 0x7FFFFFFF) * v3) >> 16)) * v3;
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((1974
                                * ((char)(*(unsigned char *)(v5 + (v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u))) ^ v13 ^ *(unsigned char *)((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) + v6 + 3) ^ *(unsigned char *)((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) + v7 + 2) ^ v14 ^ ((v14 >> (((a2 ^ 0xFC) - 90) ^ 0xB0u)) * v8)) > 47)) ^ a2)))();
}

uint64_t sub_1001EB1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (a6 ^ 0x394 ^ (1967
                                                                            * ((((v7 ^ ~(_BYTE)a6) & (v7 - a6) | a6 & ~v7) >> (((a6 - 125) & 0xEA) + 95)) & 1)))))(a1, a2, ((2 * v6) & 0x9FBFF7FE) + (v6 ^ 0xCFDFFBFF));
}

uint64_t sub_1001EB240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (unsigned char *)(v14
                + (int)(((a5 + v8 + v10 - 644) ^ v11)
                      + (((v10 - 1932) | 0x222) ^ 0x80001EBD)
                      + ((2 * (a5 + v8 + v10 - 644)) & 0xFFFFC6FA)));
  unint64_t v17 = ((((v16 ^ v13) & 0x7FFFFFFF) * v9) ^ ((((v16 ^ v13) & 0x7FFFFFFF) * v9) >> 16)) * v9;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((55
                                * ((char)(v17 ^ *v16 ^ *(unsigned char *)(v12 + (v17 >> 24)) ^ byte_100285640[(v17 >> 24) + 2] ^ *(unsigned char *)(a8 + (v17 >> 24)) ^ (-95 * ((((((v16 ^ v13) & 0x7FFFFFFF) * v9) ^ ((((v16 ^ v13) & 0x7FFFFFFF) * v9) >> 16)) * v9) >> 24))) > 47)) ^ (v10 - 21))))();
}

uint64_t sub_1001EB460(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (a3 | (16
                                     * ((char)(v6 ^ *(unsigned char *)(v8 + v7) ^ *(unsigned char *)(v9 + v7 + 3) ^ *(unsigned char *)(v10 + a6) ^ ((((a3 + 111) ^ 0xF6) + a3 - 124) * v7)) > 57)))))();
}

uint64_t sub_1001EB4B4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((88 * (v1 > (v0 - 85 + ((v0 + 44) & 0x7E) - 60))) ^ v0)))();
}

uint64_t sub_1001EB504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((((char)(v13 ^ v7 ^ (v8 * v12) ^ *(unsigned char *)(v9 + v8) ^ *(unsigned char *)(v11 + a6) ^ *(unsigned char *)(v10 + ((49 * (v6 ^ 0x239)) ^ 0x154u) + (unint64_t)v8)) < 71)
                                * (v6 ^ 0x45E)) ^ v6)))();
}

uint64_t sub_1001EB56C@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((30
                                     * ((((((v2 ^ 0x596) - 1499330793) & 0x595DF7F3 ^ 0x480C6134) + a2) & ((((v2 ^ 0x596) - 1256) ^ 0x3F492539u) + a1 + v3)) >> 31)) ^ ((v2 ^ 0x596) - 953))))();
}

uint64_t sub_1001EB6A0@<X0>(int a1@<W1>, char a2@<W2>, int a3@<W5>, uint64_t a4@<X7>, char a5@<W8>)
{
  char v10 = (((a3 + 23) ^ 0x9D) - ((32 * a5 - 32) & 0x40) + 16 * a5 - 60) ^ 0xAB | (a2 - 7);
  uint64_t v11 = (unsigned char *)(v7 + a1 - 1164587208);
  unint64_t v12 = ((((v11 ^ v8) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ v8) & 0x7FFFFFFF) * v5) >> 16)) * v5;
  unsigned char *v11 = v12 ^ (-95
              * ((((((v11 ^ v8) & 0x7FFFFFFF) * v5) ^ ((((v11 ^ v8) & 0x7FFFFFFF) * v5) >> 16))
                * v5) >> 24)) ^ *(unsigned char *)(v6 + (v12 >> 24)) ^ byte_100285640[(v12 >> 24) + 2] ^ *(unsigned char *)(a4 + (v12 >> 24)) ^ (v10 - ((2 * v10) & 0x33) - 103) ^ 0x99;
  return (*(uint64_t (**)(void))(v9 + 8 * (a3 ^ (119 * ((a1 - 1164587207) > 0x13)))))();
}

uint64_t sub_1001EB7A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 ^ 0x397) + 81) ^ 0x479) * (LODWORD(STACK[0x568]) == 0)) ^ v0)))();
}

uint64_t sub_1001EB7D4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 1268837138) & 0x4BA0EFA8) - 910205654) ^ (v0 - 910204470))
                                * (*(void *)(v1 + 8) == 0)) ^ v0)))();
}

uint64_t sub_1001EB828@<X0>(int a1@<W8>)
{
  int v6 = v2 + v1 + 1175;
  (*(void (**)(void))(v5 + 8 * (v1 ^ (a1 + 4043))))();
  *(void *)(v3 + 8) = v4;
  *(_DWORD *)(v3 + 16) = 1988559289;
  *(_DWORD *)uint64_t v3 = 65;
  STACK[0x7A0] = 1;
  BOOL v7 = ((uint64_t (*)(void, const char *, unint64_t *))*(&off_1002E1F70 + v6 + 205))(0, "systemgroup.com.apple.pisco.suinfo", &STACK[0x7A0]) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)((v7 * (((v6 + 931172437) & 0xC87F6B76) - 770)) ^ (v6 - 1270))))();
}

uint64_t sub_1001EB860()
{
  int v4 = v0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 ^ 0xAEE)))(v2);
  return sub_1002377D4(v5, v6, v7, (uint64_t)&off_1002E1F70, v8, v9, v4);
}

uint64_t sub_1001EB87C@<X0>(unsigned int a1@<W6>, int a2@<W8>)
{
  unint64_t v7 = a1 - 1764038811 + ((unint64_t)(a1 < (((v5 - 1865) | 0x209) ^ (v2 - 615))) << 32) + 185;
  *(void *)(v4 + 8 * v7) = *(void *)(v3 + 8 * v7) ^ 0xC9C9C9C9C9C9C9C9;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((a1 + a2 < STACK[0x568]) * v6) ^ v5)))();
}

uint64_t sub_1001EBE7C@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>)
{
  return sub_1001EB87C(a1 + a2, a3);
}

uint64_t sub_1001EBEB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4 = 49 * (a4 ^ 0x2BB);
  if (STACK[0x498]) {
    int v5 = STACK[0x374];
  }
  else {
    int v5 = STACK[0x370];
  }
  BOOL v6 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v7 = STACK[0x448];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v7 = STACK[0x444];
  }
  LODWORD(STACK[0x3A4]) = v7;
  int v8 = STACK[0x560];
  if (!v6) {
    int v8 = STACK[0x410];
  }
  LODWORD(STACK[0x498]) = v8;
  int v9 = STACK[0x47C];
  if (v6) {
    int v9 = STACK[0x478];
  }
  LODWORD(STACK[0x444]) = v9;
  int v10 = STACK[0x404];
  LODWORD(STACK[0x478]) = v5;
  if (!v6) {
    int v10 = v5;
  }
  LODWORD(STACK[0x448]) = v10;
  int v11 = STACK[0x470];
  if (!v6) {
    int v11 = STACK[0x468];
  }
  LODWORD(STACK[0x47C]) = v11;
  int v12 = STACK[0x458];
  if (!v6) {
    int v12 = STACK[0x454];
  }
  LODWORD(STACK[0x40C]) = v12;
  int v13 = STACK[0x450];
  if (!v6) {
    int v13 = STACK[0x44C];
  }
  LODWORD(STACK[0x410]) = v13;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x27C]) - LODWORD(STACK[0x268]);
  if (STACK[0x3C0]) {
    int v14 = STACK[0x29C];
  }
  else {
    int v14 = STACK[0x2A0];
  }
  BOOL v15 = (STACK[0x548] & 2) == 0;
  int v16 = STACK[0x3BC];
  if ((STACK[0x548] & 2) == 0) {
    int v16 = STACK[0x288];
  }
  LODWORD(STACK[0x2BC]) = v16;
  int v17 = STACK[0x3E0];
  if (!v15) {
    int v17 = STACK[0x3D4];
  }
  LODWORD(STACK[0x2A0]) = v17;
  int v18 = *(unsigned __int8 *)(STACK[0x570]
                           + ((*(unsigned char *)(STACK[0x570]
                                        + ((*(unsigned char *)(STACK[0x570] + ((*(unsigned char *)(STACK[0x570] + 1) + 10) & 0xF)) + 9) & 0xF))
                             + 6) & 0xF))
      + 11;
  int v19 = ((v18 & 0xF) - ((2 * v18) & 0xC) - 122) ^ 0x86;
  unsigned int v20 = ((2 * v19) & 0xBE) + (v19 ^ 0xA5FE695F);
  LODWORD(STACK[0x470]) = (v4 + 1993445453) & 0x892E6FBB;
  int v21 = STACK[0x434];
  LODWORD(STACK[0x468]) = v14;
  if (v15) {
    int v21 = v14;
  }
  LODWORD(STACK[0x264]) = v21;
  BOOL v22 = v20 < 0xA5FE695F;
  if (v20 >= 0xA5FE695F) {
    BOOL v22 = v20 + 407106552 > 0xBE425D58;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((14 * !v22) ^ v4)))();
}

uint64_t sub_1001ED058()
{
  int v1 = 529 * (LODWORD(STACK[0x470]) ^ 0x68F);
  BOOL v2 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v3 = STACK[0x4E0];
  if (LODWORD(STACK[0x4F0]) != 2089942522) {
    int v3 = STACK[0x414];
  }
  LODWORD(STACK[0x29C]) = v3;
  int v4 = STACK[0x480];
  if (v2) {
    int v4 = STACK[0x358];
  }
  LODWORD(STACK[0x450]) = v4;
  int v5 = STACK[0x550];
  if (v2) {
    int v5 = STACK[0x4F8];
  }
  LODWORD(STACK[0x414]) = v5;
  int v6 = STACK[0x4C8];
  if (v2) {
    int v6 = STACK[0x350];
  }
  LODWORD(STACK[0x480]) = v6;
  BOOL v7 = (STACK[0x548] & 2) == 0;
  int v8 = STACK[0x3B0];
  if ((STACK[0x548] & 2) == 0) {
    int v8 = STACK[0x3A8];
  }
  LODWORD(STACK[0x254]) = v8;
  int v9 = STACK[0x3F0];
  if (!v7) {
    int v9 = STACK[0x3E8];
  }
  LODWORD(STACK[0x268]) = v9;
  LODWORD(STACK[0x550]) = v1 ^ 0xB95;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((2 * ((v0 + 1) > 0xF)) | (8 * ((v0 + 1) > 0xF)) | v1)))();
}

uint64_t sub_1001ED4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = LODWORD(STACK[0x550]) + 813;
  unsigned int v9 = (((v7 + 1079042172) >> 8) ^ 0xFFEF8FF7) + v7 + (((v7 + 1079042172) >> 7) & 0x1DF1FEE);
  LODWORD(STACK[0x550]) = v8;
  unsigned int v10 = v9 - (((v9 + 1080119429) >> 4) & 0xBFDFB76) + (v8 ^ ((v9 + 1080119429) >> 5) ^ 0x320104BA);
  int v11 = v10 + 1 - 2 * ((v10 + 241192513) & 0x3BD264EB ^ (v10 + 1) & 2) - 902646999;
  unsigned int v12 = ((2 * ((v11 ^ 0xBBD264E9) - 1879573490)) & 0xFDEBE9DE) + (((v11 ^ 0xBBD264E9) - 1879573490) ^ 0xFEF5F4EF);
  unsigned int v13 = (((v12 + 17435409) >> 10) ^ 0x8CDEFF6F) + v12 + (((v12 + 17435409) >> 9) & 0x3DFEDE);
  unsigned int v14 = ((v13 + 1948978082) & 0x7FEAFFDE) + v13 + (((v13 + 1948978082) >> 1) ^ 0x3FF57FEF);
  unsigned int v15 = v14 - ((2 * v14 + 1751848806) & 0xCD5ECDDE) + 451211938;
  unsigned int v16 = ((2 * ((v15 ^ 0xE6AF66EF) + 1287124013)) & 0xEF1FEFFE) + (((v15 ^ 0xE6AF66EF) + 1287124013) ^ 0xF78FF7FF);
  unsigned int v17 = v16 + (((v16 + 141559809) >> 13) ^ 0x20B000) - (((v16 + 141559809) >> 12) & 0xE9FFE);
  unsigned int v18 = v17 + (((v17 + 139417601) >> 6) ^ 0x10400200) - (((v17 + 139417601) >> 5) & 0x77FFBFE) + 2;
  unsigned int v19 = v18 - ((2 * v18 - 266425346) & 0xF99F5C72) - 186710984;
  unsigned int v20 = ((2 * ((v19 ^ 0xFCCFAE39) - 1282870125)) & 0x97A9EF7E) + (((v19 ^ 0xFCCFAE39) - 1282870125) ^ 0xCBD4F7BF);
  unsigned int v21 = (((v20 + 875235393) >> 8) ^ 0x2F5B7F7F) + v20 + (((v20 + 875235393) >> 7) & 0xB6FEFE);
  unsigned int v22 = (((v21 + 80709826) >> 2) ^ 0x6F73AE7F) + v21 + (((v21 + 80709826) >> 1) & 0x5EE75CFE);
  int v23 = v22 - ((2 * v22 + 716682374) & 0x3D4D691C) - 1274900783;
  unsigned int v24 = ((2 * ((v23 ^ 0x1EA6B48E) + 707258702)) & 0xD6BBFFF6) + (((v23 ^ 0x1EA6B48E) + 707258702) ^ 0x6B5DFFFB);
  unsigned int v25 = (((v24 - 1801322491) >> 13) ^ 0x7DFFF4FE) + v24 + (((v24 - 1801322491) >> 12) & 0xFE9FC);
  unsigned int v26 = (((v25 + 379718407) >> 3) ^ 0xBDDFFD7E) + v25 + (((v25 + 379718407) >> 2) & 0x3BBFFAFC);
  unsigned int v27 = v26 - 1966765006 - ((2 * v26 + 830741266) & 0x64070A0A) + 1628;
  unsigned int v28 = (v27 ^ 0xB98CD38F) + ((v27 >> 11) ^ 0xE1917148) + ((v27 >> 10) & 0x337E5A ^ 0xFFDD9DEF) + 511295279;
  unsigned int v29 = (((((2 * v28) & 0xDB77F6D8) + (v28 ^ 0x6DBBFB6C) - 1841036140) >> 5) ^ 0xFC6BBDF7)
      + ((2 * v28) & 0xDB77F6D8)
      + (v28 ^ 0x6DBBFB6C)
      + (((((2 * v28) & 0xDB77F6D8) + (v28 ^ 0x6DBBFB6C) - 1841036140) >> 4) & 0x8D77BEE);
  unsigned int v30 = v29 - ((2 * v29 + 732990778) & 0xBCF78A94) - 195818521;
  unsigned int v31 = (v30 ^ 0x6A2711B2) + ((v30 >> 12) ^ 0x886E19D) + ((v30 >> 11) & 0x1F7826 ^ 0xFFF2BFDD) - 142623723;
  unsigned int v32 = (((((2 * v31) & 0x8D6F75DE) + (v31 ^ 0x46B7BAEF) - 1186446063) >> 7) ^ 0x75F7FFEF)
      + ((2 * v31) & 0x8D6F75DE)
      + (v31 ^ 0x46B7BAEF)
      + (((((2 * v31) & 0x8D6F75DE) + (v31 ^ 0x46B7BAEF) - 1186446063) >> 6) & 0x3EFFFDE);
  int v33 = v32 - ((2 * v32 + 111184452) & 0x1E40BF58) - 764369714;
  unsigned int v34 = ((2 * ((v33 ^ 0x8F205FAC) - 2045107421)) & 0xFFFFBAF6) + (((v33 ^ 0x8F205FAC) - 2045107421) ^ 0x7FFFDD7B);
  unsigned int v35 = (((v34 - 2147474811) >> 11) ^ 0xEBBCA7DE) + v34 + (((v34 - 2147474811) >> 10) & 0x394FBC);
  unsigned int v36 = v35 + (((v35 - 1807517017) >> 8) ^ 0x90028601) - (((v35 - 1807517017) >> 7) & 0x1FAF3FC) + 1;
  unsigned int v37 = v36 - ((2 * v36 + 142731594) & 0x81B44AAA) - 988079622;
  unsigned int v38 = (v37 ^ 0xFA4AAB06) + ((v37 >> 8) ^ 0xC8DA4A18) + ((v37 >> 7) & 0x1BFFE98 ^ 0xFE4B6BEF) + 937426766;
  unsigned int v39 = (((((2 * v38) & 0x75DDFBEE) + (v38 ^ 0x3AEEFDF7) - 988741111) >> 8) ^ 0xDFFF6DEA)
      + ((2 * v38) & 0x75DDFBEE)
      + (v38 ^ 0x3AEEFDF7)
      + ((2 * ((((2 * v38) & 0x75DDFBEE) + (v38 ^ 0x3AEEFDF7) - 988741111) >> 8)) & 0x1FEDBD4);
  unsigned int v40 = v19 ^ v6 ^ v30 ^ (v39 - ((2 * v39 - 903665602) & 0xDD1F4AEC) - 744408683);
  unsigned int v41 = (v40 & 6 | 0xDE7A4D79) - (v40 & 1 | 0x639DB296) + 1637724806;
  int v42 = (((v40 ^ 5) + 1) & 7) - ((2 * ((v40 ^ 5) + 1)) & 8) + 2081264396;
  LODWORD(STACK[0x3E8]) = v41;
  unsigned int v43 = v41 ^ 0x8C30BCE9;
  if ((v41 ^ 0x8C30BCE9) == 0x504AF182) {
    int v44 = 0;
  }
  else {
    int v44 = 255;
  }
  LODWORD(STACK[0x44C]) = v42;
  STACK[0x3B0] = v42 ^ 0x7C0D930Cu;
  LODWORD(STACK[0x3E0]) = v43;
  unsigned int v45 = (v44 << (v42 ^ 0xC)) - ((2 * (v44 << (v42 ^ 0xC))) & 0xDC70D3C4) + 1849190882;
  char v46 = (((_BYTE)v44 << (v42 ^ 0xC)) - ((2 * ((_BYTE)v44 << (v42 ^ 0xC))) & 0xC4) - 30) ^ 0x1D;
  if (v43 == 1347088770) {
    char v46 = 0;
  }
  BOOL v47 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v48 = STACK[0x404];
  if (LODWORD(STACK[0x4F0]) == 2089942522) {
    int v48 = STACK[0x478];
  }
  LODWORD(STACK[0x458]) = v48;
  int v49 = STACK[0x558];
  if (!v47) {
    int v49 = STACK[0x360];
  }
  LODWORD(STACK[0x470]) = v49;
  int v50 = STACK[0x434];
  if ((STACK[0x548] & 2) != 0) {
    int v50 = STACK[0x468];
  }
  LODWORD(STACK[0x434]) = v50;
  int v51 = v15 ^ v5 ^ v27;
  unsigned int v52 = v11 ^ a5 ^ v23 ^ v33;
  unsigned int v53 = v51 ^ v37;
  LODWORD(STACK[0x454]) = (v52 & 0xFFFFFF80 ^ 0x612D7980)
                        + (v52 & 0x96E1C780 ^ 0x96C08645)
                        - ((v52 & 0xFFFFFF80 ^ 0x612D7980) & 0x96E1C780);
  unsigned int v54 = ((v52 & 0x7F ^ 0xB10223C | 0xAA86E873) - (v52 & 0x7F ^ 0xB10223C | 0x5579178C) + 1433999244) ^ 0xA196CA6B;
  LODWORD(STACK[0x4F8]) = v40;
  unsigned int v55 = v40 & 0xFFFFFFF8 ^ 0x54697F30;
  int v56 = ((v45 & 0x48 ^ 0x9F41) + (v45 & 0xB7) - 1) ^ 0x9FA2;
  LODWORD(STACK[0x3BC]) = (33686018 * v56) & 0xE3B5AEF2;
  LODWORD(STACK[0x374]) = 16843009 * v56 + 1910167417;
  unsigned int v57 = ((1593835520 * v56 - ((-1107296256 * v56) & 0x9C000000) + 1324848903) ^ 0x4EF79707) & (v53 ^ 0x4EC33927);
  LODWORD(STACK[0x3F0]) = v57 - ((2 * v57) & 0x586A6328) + 741683604;
  LODWORD(STACK[0x468]) = v52 ^ 0x25E0E0AE;
  LOBYTE(v57) = (v46 & (v52 ^ 0xAE)) - ((2 * (v46 & (v52 ^ 0xAE))) & 0x9C) - 50;
  int v58 = (((2 * ((v52 ^ BYTE1(v52) ^ BYTE2(v52)) ^ 0x99)) | 0x5040FC88)
       - ((v52 ^ BYTE1(v52) ^ BYTE2(v52)) ^ 0x99)
       - 673218116) ^ 0x2C387C41;
  LODWORD(STACK[0x4E0]) = v52;
  unsigned int v59 = (v58 - ((2 * v58) & 0x6E0D5EE6) - 150556813) ^ HIBYTE(v52) ^ 0xF31EADF4;
  unsigned int v60 = 16843009 * v59 - ((33686018 * v59) & 0xCBA3C764) - 439229518;
  unsigned int v61 = 0xE668D621 % STACK[0x568];
  unsigned int v62 = (((v53 ^ BYTE1(v53) ^ BYTE2(v53)) ^ 0x7E)
       + ((v53 ^ (v53 >> 8) ^ HIWORD(v53) ^ 0x63F7A954) & 0x7A ^ 0xFEE2A350)
       - (((v53 ^ BYTE1(v53) ^ BYTE2(v53)) ^ 0x7E) & 0x7A)) ^ 0x36E2A3C2;
  LODWORD(STACK[0x4C8]) = v53;
  unsigned int v63 = (((2 * v62) & 0x10006942) - v62 + 1097714526) ^ HIBYTE(v53) ^ 0x896DCB9C;
  unsigned int v64 = 16843009 * v63 - ((33686018 * v63) & 0x9362D404) + 1236363778;
  unint64_t v65 = (*(void *)(STACK[0xA50] + 8 * v61) ^ 0xC9C9C9C9C9C9C9C9) + 2103980986;
  unint64_t v66 = (*(void *)(STACK[0xA50]
                   + 8
                   * (((v65 ^ 0xDFFD9FDBFBFFBF7FLL) + 0x2002602404004081 + ((2 * v65) & 0xBFFB3FB7F7FF7EFELL))
                    % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 815561086;
  unint64_t v67 = (*(void *)(STACK[0xA50]
                   + 8
                   * (((v66 ^ 0xD7F3EEE2657EDFFBLL) + 0x280C111D9A812005 + ((2 * v66) & 0xAFE7DDC4CAFDBFF6))
                    % STACK[0x4C0])) ^ 0xC9C9C9C9C9C9C9C9)
      + 925802721;
  uint64_t v68 = *(void *)(STACK[0xA50]
                  + 8
                  * (((v67 ^ 0x75FBFF7FFDEFF73FLL) - 0x75FBFF7FFDEFF73FLL + ((2 * v67) & 0xEBF7FEFFFBDFEE7ELL))
                   % STACK[0x4C0]));
  unint64_t v69 = 2 * v68 - ((4 * v68) & 0xDA82EB4209305E5CLL) + 0x6D4175A104982F2ELL;
  LODWORD(v68) = (v68
                + (v69 & 0x9393939393939392 ^ 0x9181112760DE5045)
                + ((2 * v69) & 0x627262327230120 ^ 0xFDFDDDFDFEDFFFFFLL)
                + 0x3949C923979583FFLL)
               % STACK[0x4C0];
  unsigned int v70 = ((v68 - ((2 * v68) & 0x351CBADC) - 1701946002) ^ 0x67752031)
      + 1042623779
      + ((2 * (v68 - ((2 * v68) & 0x351CBADC) - 1701946002)) & 0xFBF6FABE ^ 0x3114BA9C);
  LODWORD(STACK[0x2E0]) = 33686018 * v54;
  LODWORD(STACK[0x478]) = (33686018 * v54) & 0x89AA34BC;
  LODWORD(STACK[0x358]) = (v57 & 0x93 ^ 0x152E6C11) + (v57 & 0x6C ^ 0x2081004D) - 1;
  LODWORD(STACK[0x360]) = v54;
  LODWORD(STACK[0x3D4]) = 16843009 * v54 - 992667042;
  LODWORD(STACK[0x3A8]) = v55;
  LODWORD(STACK[0x350]) = 2 * v55;
  LODWORD(STACK[0x404]) = v60;
  LODWORD(STACK[0x370]) = v64;
  LODWORD(STACK[0x558]) = v64 ^ v60;
  BOOL v71 = v70 > 0x3C20AA83;
  if (v70 < 0x3C20AA82) {
    BOOL v71 = 1;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((504 * v71) ^ LODWORD(STACK[0x550]))))();
}

uint64_t sub_1001EE8A8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X7>, int a3@<W8>)
{
  int v4 = (a3 ^ 0x470) - 227;
  unsigned int v5 = *a2;
  if (LODWORD(STACK[0x714]) - 359584764 >= (a3 ^ 0x470u) - 1976) {
    int v6 = -42023;
  }
  else {
    int v6 = 0;
  }
  LODWORD(STACK[0x568]) = v5;
  if (v5 <= 1) {
    int v6 = 0;
  }
  LODWORD(STACK[0x570]) = v6;
  int v7 = *(unsigned __int8 *)(STACK[0x910] + 8) ^ 0x33;
  int v8 = (unsigned __int8 *)(a1 + (v3 - 2141259750));
  int v9 = (19 * (v4 ^ 0x6A2)) ^ 0x5F ^ ((v7 ^ *v8) + (~((v7 ^ *v8) << (((v4 - 27) | 1) + 86)) | 0xB) - 5) | *(unsigned __int8 *)(STACK[0x910] + 9) ^ 0x33 ^ v8[1];
  LOBYTE(v9) = (v9 + (~(2 * v9) | 0xB) - 5) ^ 0xFA | *(unsigned char *)(STACK[0x910] + 10) ^ 0x33 ^ v8[2];
  LOBYTE(v9) = (v9 + (~(2 * v9) | 0xB) - 5) ^ 0xFA | *(unsigned char *)(STACK[0x910] + 11) ^ 0x33 ^ v8[3];
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((35 * (~(v9 + (~(2 * v9) | 0xB)) == 0)) ^ v4)))();
}

uint64_t sub_1001EEA04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v9 = v4 > 0xA4;
  unsigned int v10 = (a4 + 74);
  int v11 = v9 ^ (v10 < 0x5B);
  BOOL v12 = v10 < v5;
  if (!v11) {
    BOOL v9 = v12;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v8 ^ (v9 * v7))))();
}

void sub_1001EEA4C()
{
}

uint64_t sub_1001EEA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * (int)((((((LODWORD(STACK[0x778]) | 0x7Fu) + 203) >> 7) & 1) * ((v7 - 216) ^ 0x6CF)) | v7)))(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1001EEAB8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x614]) = 1127998211;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (((*a1 == (((v7 + 68) | 0x88) ^ 0x98)) * (3 * (v7 ^ 0x606) - 593)) ^ v7)))();
}

uint64_t sub_1001EEB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v9 = (LODWORD(STACK[0x714]) | ((unint64_t)(LODWORD(STACK[0x714]) < ((v8 + 1856301141) & 0x915B17B9 ^ (v7 + 88))) << 32)) != 359584748;
  return (*(uint64_t (**)(void))(a7 + 8 * (((2 * v9) | (4 * v9)) ^ v8)))();
}

uint64_t sub_1001EEB7C()
{
  int v3 = (v2 - 1673) | 0x689;
  BOOL v4 = v1 < ((v2 - 716926140) ^ 0xFE269AF6uLL);
  *(unsigned char *)STACK[0x830] = 0;
  unint64_t v5 = ((v3 + 15) ^ 0xA8B6671460E0E0DALL) + 0x574998EBCA8118BALL;
  int v6 = v4 ^ (v5 < v0);
  BOOL v7 = v5 < v1;
  if (!v6) {
    BOOL v4 = v7;
  }
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70 + ((77 * v4) ^ v3)))(0xA8B6671460E0E0DALL);
}

void sub_1001EEC30()
{
}

uint64_t sub_1001EEC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(char *, uint64_t))(a7 + 8 * (v7 ^ 0xE6 ^ (131 * (LODWORD(STACK[0x568]) == 1)))))((char *)&STACK[0xA90] + ((7 * (v7 ^ 0x6B1) - 1203741602) & 0x47BFA7BD ^ 0x7B0), a1 + (LODWORD(STACK[0x550]) - 1715765038));
}

uint64_t sub_1001EECC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = (((a3 - 728) | 0x310) + 1898932033) ^ (16 * v7);
  uint64_t v10 = ((a3 - 361903508) ^ 0xF7933380) & (32 * v7) ^ 0x1DA02A40;
  unint64_t v11 = 0xFFFFFFFF00000000;
  if ((v9 + v10 + 389323981) >= 0x57341BEA) {
    unint64_t v11 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(a7
                                            + 8
                                            * ((248 * (STACK[0x560] + v8 + a1 + v9 + v10 - v11 - 1073708829 < 0x10)) ^ a3)))(0x7D488786B62193C1);
}

void sub_1001EEDC4()
{
  v2.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v2.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  v3.i64[0] = 0x7C7C7C7C7C7C7C7CLL;
  v3.i64[1] = 0x7C7C7C7C7C7C7C7CLL;
  int8x16_t v4 = vandq_s8(vaddq_s8(*v1, *v1), v3);
  v3.i64[0] = 0x7676767676767676;
  v3.i64[1] = 0x7676767676767676;
  *(int8x16_t *)&STACK[0xAC0] = vaddq_s8(vaddq_s8(veorq_s8(*v1, v2), v3), v4);
  LODWORD(STACK[0x614]) = v0 + 64;
  JUMPOUT(0x1001EEDFCLL);
}

void sub_1001EEE08(uint64_t a1)
{
  char v3 = 49 * (v1 ^ 0x49);
  int8x16_t v4 = (unsigned char *)STACK[0x830];
  uint64_t v5 = ((16 * v2) ^ 0x31278C2D) - 591744485 + ((v2 << (v3 ^ 0xAD)) & 0x9DEF33A0 ^ 0x9DA023A0);
  unint64_t v6 = 0xFFFFFFFF00000000;
  if (v5 >= 0x5CB24BE8) {
    unint64_t v6 = 0;
  }
  int v7 = (unsigned char *)(v6 - v5 + a1 + (LODWORD(STACK[0x550]) - 1715765038) + 1555188712);
  *int8x16_t v4 = *v7;
  v4[1] = v7[1];
  v4[2] = v7[2];
  v4[3] = v7[3];
  void v4[4] = v7[4];
  void v4[5] = v7[5];
  v4[6] = v7[6];
  v4[7] = v7[7];
  v4[8] = v7[8];
  v4[9] = v7[9];
  v4[10] = v7[10];
  v4[11] = v7[11];
  v4[12] = v7[12];
  v4[13] = v7[13];
  v4[14] = v7[14];
  v4[15] = v7[15];
  JUMPOUT(0x1001EEF14);
}

uint64_t sub_1001EEF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x714]) = v7;
  return (*(uint64_t (**)(void))(a7 + 8 * ((STACK[0x6A0] != 0) | (v8 - 462))))();
}

uint64_t sub_1001EEF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(v12 + v8 - 0x2339ABB92F50013FLL) = (*(unsigned char *)(v7 + v9 - 0x30A9B36E6810CFCFLL) ^ 0xBE)
                                              + ((2 * *(unsigned char *)(v7 + v9 - 0x30A9B36E6810CFCFLL)) & 0x7C)
                                              + 118;
  return (*(uint64_t (**)(void))(a7 + 8 * ((1193 * (a1 + 1 == v10 + 16)) ^ v11)))();
}

uint64_t sub_1001EEFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = STACK[0x8E8] + 16;
  unint64_t v6 = STACK[0x860];
  STACK[0x668] = *(void *)(a4 + 8 * (v4 - 1955));
  uint64_t v7 = (v4 - 1905);
  STACK[0x640] = v6;
  unint64_t v8 = STACK[0x788];
  uint64_t v9 = (char *)&STACK[0xA90] + STACK[0x788];
  STACK[0x5A8] = (unint64_t)v9;
  STACK[0x788] = v7 + v8 - 23;
  STACK[0x6B8] = v5;
  STACK[0x918] = *(void *)(a4 + 8 * (v4 - 1907));
  STACK[0x608] = v6;
  STACK[0x800] = (unint64_t)v9;
  unsigned int v10 = (*(_DWORD *)(v6 + 68) & 0x3F ^ 0xBF376D3A)
      + ((*(_DWORD *)(v6 + 68) << ((((v4 - 113) ^ 0x79) + 90) ^ 0xA9)) & 0x74);
  *(unsigned char *)(v6 + v10 + 1086886598) = 122;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((1198 * (v10 + 1086886542 < 0xFFFFFFC8)) ^ v7)))();
}

uint64_t sub_1001EF088(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v5 + a2 + 57 < (((v4 - 1804) | 0x280) ^ 0x282u)) * (((v4 - 1836) | 0x15) ^ 0xC0)) ^ v4)))();
}

uint64_t sub_1001EF0D4(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((44 * (v4 - v6 - v5 + 62 < ((((a1 + 446) | 0x328) - 818) ^ 0x471u))) ^ a1)))();
}

uint64_t sub_1001EF12C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((14 * (v4 >= ((a2 + 1718178629) & 0x9996AFEC ^ 0x7A7))) ^ a2)))();
}

uint64_t sub_1001EF178@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(void *)&long long v6 = 0xFAFAFAFAFAFAFAFALL;
  *((void *)&v6 + 1) = 0xFAFAFAFAFAFAFAFALL;
  *(_OWORD *)(v2 + (a2 + v3)) = v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((21 * ((((v5 - 1796) | 0x300u) ^ 0x3B4) != (v4 & 0x1FFFFFFF0))) ^ (v5 - 1049))))();
}

uint64_t sub_1001EF1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((((v4 == v5) ^ (13 * (v6 ^ 0xAB))) & 1) * (((v6 - 930) | 0x35) + 47)) ^ v6)))();
}

uint64_t sub_1001EF210(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((7 * (((3 * (a1 ^ 0x56u) - 439) & v4) != 0)) ^ a1)))();
}

uint64_t sub_1001EF24C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  *(void *)(v2 + (a2 + v3 + v5)) = 0xFAFAFAFAFAFAFAFALL;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1750 * (((v6 + 113634607) & 0xF93A13FF ^ 0x2E6) + v5 == (v4 & 0x1FFFFFFF8))) ^ v6)))();
}

void sub_1001EF2A8()
{
}

uint64_t sub_1001EF2B4(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(((((a2 + 1432532155) & 0xAA9D4FFE) - 520) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_1001EF2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x728] = *(void *)(a4 + 8 * v4);
  return sub_100239318();
}

uint64_t sub_1001EF304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v4 + (v7 + v5)) = -6;
  return (*(uint64_t (**)(void))(a4 + 8 * ((14 * ((v8 - 1905 + v6 + v7 + 1) < 0x40)) ^ (v8 - 1748))))();
}

uint64_t sub_1001EF344@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  unint64_t v3 = STACK[0x838];
  STACK[0x568] = STACK[0x838];
  return (*(uint64_t (**)(void))(a1 + 8 * (((v3 + 28 + ~v2 > 0xF) * (5 * (a2 ^ 0x627) - 443)) ^ a2)))();
}

uint64_t sub_1001EF3CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v6 = (a3 ^ 0x45B) - 432;
  v7.i64[0] = 0x9898989898989898;
  v7.i64[1] = 0x9898989898989898;
  v8.i64[0] = 0x4C4C4C4C4C4C4C4CLL;
  v8.i64[1] = 0x4C4C4C4C4C4C4C4CLL;
  int8x16_t *v3 = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v7)), v8);
  unsigned int v9 = (((v6 + 1662) ^ 0xFFFFF0A8)
      + ((*(unsigned __int8 *)(a2 + 65) - ((2 * *(unsigned __int8 *)(a2 + 65)) & 0xC8)) << 8)
      - 4864) ^ 0xFFFFE400;
  int v10 = (v9 - ((v9 << ((v6 ^ 0x9A) + 81)) & 0x1C00) + 3604) ^ 0xE14 | (*(unsigned __int8 *)(a2 + 66)
                                                                     - ((2 * *(unsigned __int8 *)(a2 + 66)) & 0x134)
                                                                     + 30874) ^ 0x789A;
  LOWORD(v10) = v10 - ((2 * v10) & 0x3C10) + 7688;
  LOWORD(STACK[0x75A]) = v10;
  unint64_t v11 = (unsigned __int16)v10 ^ 0x1E08u;
  STACK[0x570] = v11;
  LODWORD(STACK[0x560]) = 2 * v11;
  unsigned int v12 = ((unsigned __int16)v10 ^ 0xF4DFE9F7) + 1318072496 + ((2 * v11) & 0x1EFFE);
  BOOL v13 = v12 < 0x4370286C;
  BOOL v14 = v12 > v5 + 90386944;
  if ((v5 + 90386944) < 0x4370286C != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * (((8 * v14) | (16 * v14)) ^ v6)))();
}

void sub_1001EF59C(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  LODWORD(STACK[0x8CC]) = a2 + v3;
  STACK[0x728] = *(void *)(a1 + 8 * (a3 - 1943));
  JUMPOUT(0x1001EF5B8);
}

uint64_t sub_1001EF618@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((486 * (v2 >= (char)(((a2 + 49) & 0xFB) + 84))) ^ a2)))();
}

uint64_t sub_1001EF654@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v2 == (a2 - 127)) * (a2 - 33)) ^ (a2 - 211))))();
}

uint64_t sub_1001EF680@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v6 = a2 - 47;
  int v7 = v2[((v6 - 613) ^ 0xFFFFFFFF90930E49) + 1869410538] ^ v5;
  int v8 = (((v7 - ((2 * v7) & 0x7C)) << 24) + 1040187392) ^ 0x3E000000;
  int v9 = ((((v2[1] ^ v5) - ((2 * (v2[1] ^ v5)) & 0x14C)) << 16) + 2141585408) ^ 0x7FA60000;
  unsigned int v10 = (v9 - 1643161566 - ((2 * v9) & 0x3C1E0000)) ^ 0x9E0F5822 | (v8 - 1549879587 - ((2 * v8) & 0x46000000)) ^ 0xA39EB6DD;
  unsigned int v11 = ((((v2[2] ^ v5) - ((2 * (v2[2] ^ v5)) & 0x188)) << 8) - 1316109312) ^ 0xB18DC400;
  unsigned int v12 = (v10 + 1061707957 - ((2 * v10) & 0x7E90C16A)) ^ 0x3F4860B5 | (v11 - 1152875589 - ((2 * v11) & 0x76910600)) ^ 0xBB4883BB;
  unsigned int v13 = (v12 - 1609113254 - ((2 * v12) & 0x402DC2B4)) ^ 0xA016E15A | ((v2[3] ^ v5)
                                                                    - 1093991613
                                                                    - ((2 * (v2[3] ^ v5)) & 0x86)) ^ 0xBECB0343;
  *(_DWORD *)(a1 + ((v3 + 1869410538) & 0xFFFFFFFC)) = v13 + v4 - ((2 * v13) & 0x77C4E32A);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((2 * ((v3 + 1869410542) > 0x3F)) | (16
                                                                                 * ((v3 + 1869410542) > 0x3F))) ^ v6)))();
}

uint64_t sub_1001EF850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  HIDWORD(v12) = *(_DWORD *)(a7 + 4 * (v8 + v7 - 8)) ^ *(_DWORD *)(a7 + 4
                                                                                      * (v8 + v7 - 3)) ^ *(_DWORD *)(a7 + 4 * (v8 + v7 - 14)) ^ *(_DWORD *)(a7 + 4 * (v8 + v7 - 16));
  LODWORD(v12) = HIDWORD(v12);
  *(_DWORD *)(a7 + 4 * (v9 + v8)) = v10
                                                  + ((a6 + 1080801304) & 0xBF94479C)
                                                  + (v12 >> 31)
                                                  - ((2 * (v12 >> 31)) & 0x77C4E32A)
                                                  - 276;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1086 * ((v9 + 1 + v8) < 0x50)) ^ a6)))();
}

uint64_t sub_1001EF8F4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((75 * ((v3 + 1 + v0) < 0x14)) ^ v1)))();
}

uint64_t sub_1001EFA9C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((70 * ((v0 + 1 + v1) > 0x27)) ^ v2)))();
}

uint64_t sub_1001EFC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((665 * ((v10 + 1 + v8) < 0x3C)) ^ a8)))();
}

uint64_t sub_1001EFDD0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((62 * ((v1 + 1 + v2) < 0x50)) ^ a1)))();
}

uint64_t sub_1001EFF38(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x6D4]) = a6;
  LODWORD(STACK[0x69C]) = a8;
  LODWORD(STACK[0x5E8]) = v10;
  LODWORD(STACK[0x6EC]) = a3;
  int v12 = (v8[22] ^ a1) + (v9 ^ a1);
  v8[22] = v12 + a1 - ((v12 << (((v11 - 83) | 8) ^ 0xA9)) & a2);
  int v13 = (v8[18] ^ a1) + (LODWORD(STACK[0x6D4]) ^ a1);
  int v14 = (v8[19] ^ a1) + (LODWORD(STACK[0x69C]) ^ a1);
  v8[18] = v13 + a1 - (a2 & (2 * v13));
  v8[19] = v14 + a1 - (a2 & (2 * v14));
  int v15 = v8[21];
  int v16 = (v8[20] ^ a1) + (LODWORD(STACK[0x5E8]) ^ a1);
  v8[20] = v16 + a1 - (a2 & (2 * v16));
  v8[21] = (v15 ^ a1) + (LODWORD(STACK[0x6EC]) ^ a1) + a1 - (a2 & (2 * ((v15 ^ a1) + (LODWORD(STACK[0x6EC]) ^ a1))));
  STACK[0x788] -= 320;
  return ((uint64_t (*)(void))STACK[0x728])();
}

uint64_t sub_1001F09A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((53
                                * (LODWORD(STACK[0x8CC]) - 280610772 <= ((LODWORD(STACK[0x560])
                                                                                      + 1888466665) ^ LODWORD(STACK[0x77C])))) ^ (v4 - 1613))))();
}

uint64_t sub_1001F0C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v13 = (v8 + 872516349) & 0xCBFE74FD;
  unsigned int v14 = a7 + v7;
  *(unsigned char *)STACK[0x980] = *(unsigned char *)(STACK[0x5F8] + v14) ^ *(unsigned char *)(v9 + (v14 & 0xF)) ^ *(unsigned char *)(v10 + (v14 & 0xF) + 1) ^ *(unsigned char *)(v12 + (v14 & 0xF) + 1) ^ ((v14 & 0xF) * (((v13 - 75) & 0xF9) - 15)) ^ v11;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(v13 ^ 7)))();
}

uint64_t sub_1001F0CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, int a4@<W7>, int a5@<W8>, int8x16_t a6@<Q0>, int8x16_t a7@<Q1>)
{
  *int v7 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a5 + v9)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v8 + (a5 + v9)), *(int8x16_t *)(v8 + (a5 + v9))), a6)));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 8 * ((((a4 + v10) & v11) + 46) ^ (a4 - 1115))))(a1, a2, (a5 + 64));
}

uint64_t sub_1001F0D0C@<X0>(int a1@<W2>, uint64_t a2@<X3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((a3 - 436726134 < ((a1 - 463801450) & 0x1BA506DF ^ 0x226u))
                                     * (((a1 + 766601263) & 0xD24E927E) - 151)) ^ (a1 - 681))))();
}

uint64_t sub_1001F0D7C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((55 * (v2 + 1418 - a2 + 436724229 < 7)) ^ v2)))();
}

uint64_t sub_1001F0DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (v8 - 366) | 0x446u;
  *(void *)(v4 + ((((v10 - 726) | 9u) ^ (unint64_t)(v5 + 822)) & (v7 + v6))) = 0xFAFAFAFAFAFAFAFALL;
  return (*(uint64_t (**)(void))(a4 + 8 * (int)((572 * ((((v10 ^ 0x4F7) + v9) & 0x1FFFFFFF8) == 8)) ^ v10)))();
}

void sub_1001F0E2C()
{
}

uint64_t sub_1001F0E40(int a1)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((((a1 ^ 0x7F) + ((a1 + 1271) | 0x88) - 1222) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1001F0E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (int)(((((((v5 + 710768997) & 0xD5A2857F) - 304) | 0x100) ^ 0x10F)
                                     * ((char)((((v5 + 101) & 0x7F) + 71) ^ *(unsigned char *)(v4 + 96)) < -105)) | (v5 + 710768997) & 0xD5A2857F)))();
}

uint64_t sub_1001F0ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v5 == ((83 * (v4 ^ 0x1A)) ^ 0x17)) * ((v4 ^ 0x11A) + 76)) ^ v4)))();
}

uint64_t sub_1001F0F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (v5 - 1152) | 8;
  int v7 = *(_DWORD *)(v4 + 64);
  unsigned int v8 = *(_DWORD *)(v4 + 68);
  *(unsigned char *)(v4 + 56) = ((v6 ^ 0x24)
                       + ((v7 - 605314902) >> 21)
                       - (((v7 - 605314902) >> 20) & 0x58)
                       - 3) ^ 0xD6;
  *(unsigned char *)(v4 + 57) = (((v7 - 605314902) >> 13) - (((v7 - 605314902) >> 12) & 0x42) - 95) ^ 0x5B;
  *(unsigned char *)(v4 + 58) = (((v7 - 605314902) >> 5) - (((v7 - 605314902) >> 4) & 0x20) - 112) ^ 0x6A;
  HIDWORD(v9) = v7 + 468426922;
  LODWORD(v9) = v8 ^ 0xC0000000;
  *(unsigned char *)(v4 + 59) = ((v9 >> 29) - ((2 * (v9 >> 29)) & 0x2A) - 107) ^ 0x6F;
  *(unsigned char *)(v4 + 60) = (v8 >> 21) ^ 0xC;
  *(unsigned char *)(v4 + 61) = (v8 >> 13) ^ 0x62;
  *(unsigned char *)(v4 + 62) = (v8 >> 5) ^ 0xA8;
  *(unsigned char *)(v4 + 63) = ~(16 * v8) + 8 * v8 - 5;
  STACK[0x728] = *(void *)(a4 + 8 * (v6 - 264));
  return sub_100239318();
}

uint64_t sub_1001F1194@<X0>(uint64_t a1@<X3>, int a2@<W6>, int a3@<W8>)
{
  BOOL v4 = a3 - 1666527557 < (a2 - 1917455505);
  if (a2 - 1917455505 < ((2 * v3) ^ 0xF3FA7DCD) != (a3 - 1666527557) < 0xF3FA729D) {
    BOOL v4 = a2 - 1917455505 < ((2 * v3) ^ 0xF3FA7DCD);
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((23 * !v4) ^ (v3 - 965))))();
}

uint64_t sub_1001F11AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return sub_100239398(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1001F11C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = (char)(v5 ^ 0x71 ^ *(_DWORD *)(STACK[0x608] + 96));
  STACK[0x570] = v4;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((1001 * (((v6 < (char)(v5 ^ 0x67)) ^ ((v5 ^ 0x48) - 99)) & 1)) ^ v5 ^ 0x648)))();
}

uint64_t sub_1001F1224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((v4 - v5) | (v5 - v4)) & 0x80) == 0) * (v5 + 373 * (v5 ^ 0xCD) + 696)) ^ (v5 + 354))))();
}

uint64_t sub_1001F1268@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((443 * (((*(_DWORD *)(a1 + 92) == 1804694416) ^ ((v1 ^ 0x42) - 35)) & 1)) ^ v1)))();
}

uint64_t sub_1001F12BC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v3 = v2 + 1575705516;
  int v4 = (unsigned char *)STACK[0x800];
  uint64_t v5 = (v3 + 288196046) & 0xEED27FA8;
  int v6 = *(_DWORD *)(a2 + 72);
  v4[v5 - 1960] = *((unsigned char *)&unk_10026B460 + ((v5 - 1960) & 0xE)) ^ *((unsigned char *)&unk_10026F580 + ((v5 - 1960) & 0xE)) ^ HIBYTE(v6) ^ *((unsigned char *)&unk_10026F1F0 + ((v5 - 1960) & 0xE)) ^ (105 * ((v5 + 88) & 0xE)) ^ 0xFB;
  v4[1] = BYTE2(v6) ^ 0x2C;
  v4[2] = BYTE1(v6) ^ 0xD2 ^ unk_10026B462 ^ unk_10026F582 ^ unk_10026F1F2 ^ 0x1E;
  v4[3] = v6 ^ 0x3B ^ unk_10026B463 ^ unk_10026F583 ^ unk_10026F1F3 ^ 0xB8;
  unsigned int v7 = *(_DWORD *)(a2 + 92) - 1033055748;
  BOOL v8 = v7 < 0x2DFE458C;
  BOOL v9 = v7 > 0x2DFE4590;
  if (v8) {
    BOOL v9 = v8;
  }
  return ((uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((1606 * v9) ^ v3)))(0x866F51493560A1FLL, &unk_10026F580, 105, 79, 184, a1, 3460785470, 3261911548);
}

void sub_1001F1490()
{
}

uint64_t sub_1001F1498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (((v4 == (((v5 & 0xB3) + 46) & 0xFB ^ 0x97)) * (8 * (v5 & 0x25F6F6B3 ^ 0x2C4) - 1783)) ^ v5 & 0x25F6F6B3)))();
}

uint64_t sub_1001F14F4@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((7
                               * (*(_DWORD *)(a1 + 92) == ((v1 - 370560687) & 0x16164FFB)
                                                        + 1804694432
                                                        + 980 * (v1 ^ 0x659)
                                                        - 3936)) ^ v1)))();
}

uint64_t sub_1001F1558()
{
  return ((uint64_t (*)(void))STACK[0x918])();
}

uint64_t sub_1001F1564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FE750(a1, a2, a3, &off_1002E1F70);
}

uint64_t sub_1001F157C()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((38
                               * (((v0 + 95) ^ ((((v0 - 1800) | 0x710) ^ 0xF61CC372) + 165886782 < 0x10)) & 1)) ^ (v0 - 1694))))();
}

void sub_1001F15F0(char a1)
{
  *(unsigned char *)(STACK[0x600] + v3) ^= *(unsigned char *)(v2 + v3) ^ (40 * (a1 ^ v1) + 118);
  JUMPOUT(0x1001F15B4);
}

uint64_t sub_1001F1620()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((13
                               * (((v0 + 207899447) & 0xF39BAFFF)
                                + (unint64_t)*(unsigned int *)(STACK[0x640] + 92)
                                + ((unint64_t)(*(_DWORD *)(STACK[0x640] + 92) < 0x6B917390u) << 32) == 1804695151)) ^ (v0 + 61))))();
}

uint64_t sub_1001F16C0()
{
  STACK[0x788] = v0 - 352;
  return ((uint64_t (*)(void))STACK[0x668])();
}

uint64_t sub_1001F16D4()
{
  unint64_t v1 = STACK[0x730];
  unint64_t v2 = STACK[0x950] - 0x58405A597B241F58;
  STACK[0xA20] = v2;
  STACK[0xA28] = v1;
  STACK[0xA18] = v2;
  STACK[0xA30] = v2;
  if (v2) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  char v4 = v3;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((((((v0 ^ 0xC5) - 40) ^ v4) & 1)
                               * (5 * (v0 ^ 0x6C5) - 1823)) | (v0 + 37))))();
}

uint64_t sub_1001F1748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0xA10] = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v4 + 306)))(1032);
  STACK[0xA38] = v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v4 ^ 0xF72)))(1028);
  STACK[0xA10] = v6;
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v8 * ((((v4 - 1585) | 0x603) - 1246) ^ 0xD05)) ^ v4)))();
}

uint64_t sub_1001F17CC()
{
  HIDWORD(v2) = byte_100291310[v0[14] ^ 0xDELL];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  int v3 = (v2 >> 25) - ((2 * (v2 >> 25)) & 0xFFFFFFF4) + 122;
  unsigned int v4 = ((((v3 ^ 0x74) - ((2 * (v3 ^ 0x74)) & 0x26)) << 8) - 1843457280) ^ 0x921F1300;
  HIDWORD(v2) = byte_100291310[v0[10] ^ 0x9CLL];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  uint64_t v5 = v0[13] ^ 0xC8;
  unsigned int v6 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x74) + 58) ^ 0x92)
        - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x74) + 58) ^ 0x92)) & 0x132)) << 8)
      + 2101975296) ^ 0x7D499900;
  int v7 = v6 - ((2 * v6) & 0x3E308E00) - 552057055;
  unsigned int v8 = byte_100291210[v5] - ((2 * byte_100291210[v5] - 108) & 0xFFFFFFB8) + 38;
  unsigned int v9 = ((((2 * (v8 >> 4)) | 0xFFFFFFF6) - ((v8 >> 4) & 4) + 13) ^ 7) + 8;
  unsigned int v10 = ((v9 & 0xFFFFFFEF) - (v9 | 0xFFFFFFEF)) ^ v8;
  LOBYTE(v5) = v5
             - 11
             * ((((unsigned __int16)(117 * v5) >> 8)
                                + (((v5 - ((unsigned __int16)(117 * v5) >> 8)) & 0xFE) >> 1)) >> 3);
  int v11 = ((((v10 ^ 0x44) - ((2 * v10) & 0x102)) << 16) + 1904279552) ^ 0x71810000;
  unsigned int v12 = (v11 - ((2 * v11) & 0x7FF80000) + 1073504318) ^ 0x3FFC603E | (v4 - ((2 * v4) & 0x6EFB9200) - 1216493144) ^ 0xB77DC9A8;
  HIDWORD(v2) = byte_100291310[v0[5] ^ 0x50];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  unsigned int v13 = (unsigned __int8 *)STACK[0xA28];
  unsigned int v14 = ((((((v2 >> 25) - ((2 * (v2 >> 25)) & 0xB8) - 36) ^ 0x9C)
         - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0xB8) - 36) ^ 0x9C)) & 0x166)) << 16)
       - 88932352) ^ 0xFAB30000;
  int v15 = v14 - ((2 * v14) & 0x499C0000) - 1529992302;
  uint64_t v16 = *(unsigned __int8 *)(STACK[0xA28]
                           + (40 - (((2 * v5) & 0x1A) + (v5 ^ 0x1D)))
                           + (((2 * v5) & 0x1A) + (v5 ^ 0x1D) - 29)) ^ 0x12;
  int v17 = byte_1002879A0[*v0 ^ 0x3DLL] ^ 0x6F;
  unsigned int v18 = (((v17 - ((2 * v17) & 0xB6)) << 24) - 620756992) ^ 0xDB000000;
  LODWORD(v16) = byte_100291210[v16] - ((2 * byte_100291210[v16] + 20) & 0x2E) + 97;
  unint64_t v19 = *(unsigned __int8 *)(STACK[0xA28] + 6);
  STACK[0x548] = v19;
  unsigned int v20 = byte_100291210[v19 ^ 0x22] - ((2 * byte_100291210[v19 ^ 0x22] + 4) & 6) - 51;
  int v21 = (((v16 >> 4) & 4 ^ v16 ^ 0xFD)
       - ((2 * ((v16 >> 4) & 4 ^ v16 ^ 0xFD)) & 0x142)
       + 703156897) ^ 0x29E952A1 | v7 ^ 0xDF184721;
  LODWORD(v16) = v21 - ((2 * v21) & 0x3FDB24FE);
  int v22 = v20 ^ 0x23 ^ (((v20 >> 4) & 4 ^ 0xB5) - 1);
  unsigned int v23 = (((v22 + 12906792 - ((2 * v22) & 0x1D4)) << 8) + 901632) ^ 0xC4FEEA00;
  unint64_t v24 = v13[4];
  STACK[0x4F8] = v24;
  unsigned int v25 = (v23 - ((2 * v23) & 0x77215E00) - 74404057) ^ 0xFB90AF27 | v15 ^ 0xA4CE2B92;
  unsigned int v26 = byte_100291210[v24 ^ 0xB8] + (~(2 * byte_100291210[v24 ^ 0xB8] + 20) | 0xFFFFFFA1) + 122;
  unsigned int v27 = (((((v26 >> 4) & 4 ^ v26 ^ 0x4D) - ((2 * ((v26 >> 4) & 4 ^ v26 ^ 0x4D)) & 0xDA)) << 24) - 318767104) ^ 0xED000000;
  unint64_t v28 = v13[1];
  STACK[0x470] = v28;
  unsigned int v29 = (v25 - ((2 * v25) & 0x48F2B39A) + 1685674445) ^ 0x647959CD | (v27 - ((2 * v27) & 0xAAAAAAAA) + 1434816703) ^ 0x558590BF;
  int v30 = byte_100291310[v28 ^ 2];
  LODWORD(v28) = v29 - ((2 * v29) & 0x59C8CB6);
  HIDWORD(v2) = v30;
  LODWORD(v2) = ~v30 << 24;
  int v31 = ((((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x9D) - 78) ^ 0xA0)
         - 2 * ((((v2 >> 25) + (~(2 * (v2 >> 25)) | 0x9D) - 78) ^ 0xA0) & 0x7F)) << 16)
       + 830406656) ^ 0x317F0000;
  unint64_t v32 = v13[15];
  STACK[0x4C0] = v32;
  unsigned int v33 = (v31 - ((2 * v31) & 0x46B40000) - 480577106) ^ 0xE35AF9AE | (v18 - ((2 * v18) & 0x28000000) + 339316933) ^ 0x143990C5;
  unsigned int v34 = v33 - ((2 * v33) & 0x3E42AD9C);
  unsigned int v35 = byte_100291210[v32 ^ 0x3A] - ((2 * byte_100291210[v32 ^ 0x3A] - 108) & 0xFFFFFFC4) - 84;
  unint64_t v36 = v13[9];
  STACK[0x428] = v36;
  unsigned int v37 = v13;
  int v38 = (v35 >> 4) & 4 ^ v35;
  HIDWORD(v2) = byte_100291310[v36 ^ 0x2B];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  int v39 = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0x4A) - 91) ^ 0x5B;
  int v40 = ((((~(2 * v39) | 0xFE1B) + v39) << 16) + 2012413952) ^ 0x77F20000;
  LODWORD(v16) = (v40 - ((2 * v40) & 0xD700000) - 424115308) ^ 0xE6B88394 | (v16 - 538078593) ^ 0xDFED927F;
  int v41 = v16 - ((2 * v16) & 0x2AA5838A);
  unint64_t v42 = v13[3];
  STACK[0x468] = v42;
  HIDWORD(v2) = byte_100291310[v42 ^ 0x5B];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  LODWORD(v42) = (v34 + 522278606) ^ 0x1F2156CE | ((((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)
                                                 - ((2 * (((v2 >> 25) - ((2 * (v2 >> 25)) & 0x84) - 62) ^ 0xDF)) & 0x1C6)
                                                 - 1228194333) ^ 0xB6CB3DE3;
  unint64_t v43 = v13[7];
  STACK[0x458] = v43;
  unsigned int v44 = byte_100291210[v43 ^ 0xFB] - 2 * ((byte_100291210[v43 ^ 0xFB] + 10) & 9 ^ byte_100291210[v43 ^ 0xFB] & 1) + 82;
  unsigned int v45 = v44 ^ 0xE7 ^ (((((v44 >> 4) | 0xFFFFFFFB) + 23) ^ 0x39) - 1);
  LODWORD(v28) = (v28 + 47072859) ^ 0x2CE465B | (v45 - ((2 * v45) & 0x6A) - 1161211339) ^ 0xBAC95235;
  LODWORD(v13) = v28 - ((2 * v28) & 0x46F1A73A) - 1552362595;
  LODWORD(STACK[0x550]) = v13;
  unint64_t v46 = v37[8];
  STACK[0x420] = v46;
  HIDWORD(v2) = byte_100291310[v46 ^ 5];
  LODWORD(v2) = ~HIDWORD(v2) << 24;
  LODWORD(v28) = ((v2 >> 25) - ((2 * (v2 >> 25)) & 0xE2) - 15) ^ 0x95;
  LODWORD(v28) = (((v28 - ((2 * v28) & 0x33333333)) << 24) + 419430400) ^ 0x19000000;
  LODWORD(v28) = (v28 - ((2 * v28) & 0xD2000000) + 1769885423) ^ 0x697E4EEF | (v41 + 357745093) ^ 0x1552C1C5;
  unint64_t v47 = v37[2];
  STACK[0x480] = v47;
  STACK[0x568] = (unint64_t)v37;
  int v48 = byte_1002879A0[v47 ^ 0x7D];
  int v49 = v28 - ((2 * v28) & 0xC3C8B480) - 505128384;
  LODWORD(STACK[0x4E8]) = v49;
  LODWORD(v28) = ((((v48 ^ 0x72) - ((2 * (v48 ^ 0x72)) & 0x16A)) << 8) + 249607424) ^ 0xEE0B500;
  uint64_t v50 = byte_100285440[v37[12] ^ 0x5ALL];
  LODWORD(v47) = ((((v50 ^ 0xA4) - ((2 * v50) & 0x26)) << 24) - 1828716544) ^ 0x93000000;
  LODWORD(v32) = (v47 - ((2 * v47) & 0xE7FFFFFF) - 208432792) ^ 0xF3939168 | ((v38 ^ 0x62)
                                                                            - ((2 * (v38 ^ 0x62)) & 0x7C)
                                                                            + 397422654) ^ 0x17B0303E;
  int v51 = (v32 - ((2 * v32) & 0xF9182BE6) - 57928205) ^ 0xFC8C15F3 | (v12 - ((2 * v12) & 0x86D8B7CA) + 1131174885) ^ 0x436C5BE5;
  LODWORD(v37) = (v51 - ((2 * v51) & 0x9105D5C8) - 930944284) ^ 0xCD270489;
  LODWORD(STACK[0x4F0]) = v37;
  int v52 = (v42 - ((2 * v42) & 0x542F4082) + 706191425) ^ 0x2A17A041 | (v28 - ((2 * v28) & 0x55FA1200) - 352515667) ^ 0xEAFD09AD;
  unsigned int v53 = v52 - ((2 * v52) & 0x8FA1AD26) + 1204868755;
  LODWORD(STACK[0x558]) = v53;
  int v54 = dword_100284320[v10 ^ 1];
  HIDWORD(v2) = v54 ^ 0x2261;
  LODWORD(v2) = v54 ^ 0x9F280000;
  int v55 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xAEF895B6);
  int v56 = dword_100284320[v50 ^ 1];
  HIDWORD(v2) = v56 ^ 0x61;
  LODWORD(v2) = v56 ^ 0x9F282200;
  int v57 = dword_10026F9A0[v38 ^ 6] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x9FE091B4) + 1341147354);
  int v58 = dword_100284320[v3 ^ 0xFB];
  HIDWORD(v2) = v58 ^ 0x282261;
  LODWORD(v2) = v58 ^ 0x9FFFFFFF;
  int v59 = (v55 - 679720229) ^ v57 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x16807480) - 1958725056) ^ v53;
  LODWORD(v13) = v59 ^ v13;
  int v60 = v59;
  LODWORD(STACK[0x4E0]) = v59;
  LODWORD(STACK[0x560]) = v13 ^ v49;
  unsigned int v61 = v13 ^ v49 ^ 0x85026CC;
  unsigned int v62 = v37 ^ v61;
  LODWORD(STACK[0x4D8]) = v61;
  int v63 = ((v37 ^ v61) >> 16) ^ 0x26;
  int v64 = dword_100284320[(((2 * v63) | 0xF82EE8) - v63 + 2130962572) & 0xFFFFFF ^ 0xFC170E];
  HIDWORD(v2) = v64 ^ 0x2261;
  LODWORD(v2) = v64 ^ 0x9F280000;
  int v65 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x14143FBC);
  int v66 = dword_100281B90[HIBYTE(v62) ^ 0xC2];
  HIDWORD(v2) = v66 ^ 0x1F8;
  LODWORD(v2) = v66 ^ 0xF0A1D000;
  int v67 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5DA5D48) + 49098404;
  int v68 = (((2 * v67) ^ 0x5DA5D48) - 2 * (((2 * v67) ^ 0x5DA5D48) & 0xA134476 ^ (2 * v67) & 4) + 169034866) & 0x32119686 ^ 0x22108484;
  int v69 = (((2 * v68) | 0x3F0F607C) - v68 - 528986174) ^ 0x3685B1D8;
  unsigned int v70 = (v69 - ((2 * v69) & 0xD1549254) + 1755990314) ^ v67;
  HIDWORD(v2) = v70 ^ 0x6C;
  LODWORD(v2) = v70 ^ 0x62C07100;
  int v71 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xFF37155C) + 2140900014;
  int v72 = dword_100284320[(((2 * (BYTE1(v62) ^ 0x948020ED)) & 0x90041D6) - (BYTE1(v62) ^ 0x948020ED) - 1828238828) ^ 0x7876AE1];
  HIDWORD(v2) = v72 ^ 0x282261;
  LODWORD(v2) = v72 ^ 0x9FFFFFFF;
  int v73 = ((v2 >> 24) - ((2 * (v2 >> 24)) & 0xE18B3B0C) + 1891999110) ^ v60 ^ (v65 - 1979047970) ^ v71;
  unsigned int v74 = ((v62 ^ 0x3F) - 1202640297 + ((2 * (v62 ^ 0x3F) + 428) & 0x300 ^ 0x8EFDA7FF)) ^ dword_100284B40[(((2 * (v62 ^ 0x1F)) | 0xEBD103CA) - (v62 ^ 0x1F) - 1978171877) ^ 0x75E88122];
  unsigned int v75 = ((2 * v73) & 0x3FFFFFEA ^ 0x1B7CACA) + (v73 ^ 0x9F241A9A);
  unsigned int v76 = ((2 * ((v74 ^ 0x6D3F88DD ^ v73) + 1)) & 0xEDBE9F5E) + (((v74 ^ 0x6D3F88DD ^ v73) + 1) ^ 0xF6DF4FAF) + v75;
  unsigned int v77 = v75
      + 1610612734
      + (v74 ^ 0x6D1622FF ^ ((v74 ^ 0x6DE46DB2) - ((2 * (v74 ^ 0x6DE46DB2) + 2) & 0xC99985AA) - 456342826) ^ (v76 - 2065554749 - ((2 * v76 + 306274488) & 0x3782E4CE)))
      + 13;
  unsigned int v78 = v77 - ((2 * v77) & 0xC6C209EC) - 480181002;
  LODWORD(STACK[0x4D0]) = v62 ^ 0x464E7CF0;
  LODWORD(STACK[0x4C8]) = v78 ^ v13;
  unsigned int v79 = v78 ^ v13 ^ v13 ^ v49 ^ 0x85026CC;
  int v80 = v79 ^ v62 ^ 0x464E7CF0;
  LODWORD(STACK[0x4A0]) = v80;
  unsigned int v81 = v80 ^ 0x9283DD4F;
  unsigned int v82 = ((((unsigned __int16)(v80 ^ 0xDD4F) >> 8) ^ 0x44)
       + (((v80 ^ 0x9283DD4F) >> 8) & 0x5B ^ 0x4271091B)
       - ((((unsigned __int16)(v80 ^ 0xDD4F) >> 8) ^ 0x44) & 0x5B)) ^ 0xE2738859;
  int v83 = dword_10026F9A0[(v82 - ((2 * v82) & 0x13A0) + 324348368) ^ 0xB357A89C];
  HIDWORD(v2) = v83 ^ 0xD66DF5;
  LODWORD(v2) = v83 ^ 0x49000000;
  int v84 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x48C17030) + 610318360;
  unsigned int v85 = ((HIBYTE(v81) ^ 0xB8) + 507824944 + ((2 * (HIBYTE(v81) ^ 0xB8) + 172) & 0xB2 ^ 0xBEFDE7FF)) ^ dword_100284B40[HIBYTE(v81) ^ 0x5F];
  LODWORD(v32) = ((((v81 >> 1) ^ 0x161063 | 0x89790652)
                 - ((v81 >> 1) ^ 0x161063 | 0x7686F9AD)
                 + 1988557229) | (25279725 - ((v81 & 1) << 7)) ^ 0x181BCED) ^ 0x896F1654;
  LODWORD(v32) = v32
               - 2
               * (v32 & 0x2DE4CD1D ^ (((v81 >> 1) ^ 0x63 | 0x52)
                                    - ((v81 >> 1) ^ 0x63 | 0xAD)
                                    - 83) & 1)
               - 1377514212;
  HIDWORD(v2) = v85 ^ 0x70;
  LODWORD(v2) = v85 ^ 0x6BB06E00;
  int v86 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x8D9B9DAC) + 1187892950;
  LODWORD(v32) = (((((2 * v32) ^ 0xD6) - ((2 * ((2 * v32) ^ 0xD6)) & 0xD4) - 22) & 0xFE ^ 3)
                - 1) ^ 0xE8 | (v32 >> 7) ^ 0x15BC99B;
  LOWORD(v42) = ((2 * (BYTE2(v81) ^ 0x14)) & 0x1A4) - (BYTE2(v81) ^ 0x14) + 6445;
  LODWORD(v42) = dword_100281B90[((v42 & 0x654 ^ 0x9088251) + (v42 & 0x9AB) - 1) ^ 0x9088B22];
  HIDWORD(v2) = v42 ^ 0x1F8;
  LODWORD(v2) = v42 ^ 0xF0A1D000;
  LODWORD(v42) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x6602C9BC) + 855729374;
  LODWORD(v28) = (((2 * v42) ^ 0x6602C9BC) + 189122794 + (~(2 * ((2 * v42) ^ 0x6602C9BC)) | 0x29746E2F)) & 0x32119686 ^ 0x2427E4F4;
  LODWORD(v42) = (((2 * v28) & 0x4F25C8) - v28 - 1093112550) ^ v42;
  HIDWORD(v2) = v42 ^ 0xFA32;
  LODWORD(v2) = v42 ^ 0xAA7B0000;
  int v87 = v84 ^ dword_10026F9A0[(v32 - ((2 * v32) & 0x89CE32) + 1950672665) ^ 0x7444E7B4] ^ v86 ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xAE21366A) + 1460706101);
  LODWORD(v32) = v13 ^ 0x4D778808 ^ v87;
  int v88 = v79 ^ 0xA17F842A ^ v32;
  LODWORD(v47) = v32;
  LODWORD(STACK[0x4B0]) = v32;
  unsigned int v89 = v88 ^ v81;
  LODWORD(STACK[0x49C]) = v88;
  int v90 = dword_10026F9A0[HIBYTE(v89) ^ 0x9F];
  HIDWORD(v2) = v90 ^ 0xF5;
  LODWORD(v2) = v90 ^ 0x49D66D00;
  LODWORD(v32) = ((v89 ^ 0x71) + (v89 & 0xB1 ^ 0x1339880) - ((v89 ^ 0x71) & 0xB1)) ^ 0x35398BF5;
  LODWORD(v42) = ((BYTE2(v89) ^ 0x6D) - ((2 * (BYTE2(v89) ^ 0x6D)) & 0x12) - 210437111) ^ 0xE474F42B;
  int v91 = ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x3D7B5200) - 1631737600) ^ dword_10026F9A0[(v32
                                                                                   - ((2 * v32) & 0x680036BC)
                                                                                   - 1104848034) ^ 0x8A2F48BC];
  LODWORD(v50) = v89 ^ 0x358BFAC7;
  LODWORD(STACK[0x4A8]) = v89 ^ 0x358BFAC7;
  LODWORD(v32) = dword_10026F9A0[((v42 | 0x5B5A04AB) - (v42 | 0xA4A5FB54) - 1532626092) ^ 0x4C5A0C4D];
  HIDWORD(v2) = v32 ^ 0x6DF5;
  LODWORD(v2) = v32 ^ 0x49D60000;
  LODWORD(v32) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x78F192A0) + 1014548816;
  int v92 = dword_100284320[((BYTE1(v89) ^ 0x60012BD) - ((2 * (BYTE1(v89) ^ 0x60012BD)) & 0x40004D6) + 2051859307) ^ 0x7C4CF10E];
  HIDWORD(v2) = v92 ^ 0x282261;
  LODWORD(v2) = v92 ^ 0x9FFFFFFF;
  int v93 = v87 ^ v78;
  LODWORD(STACK[0x4B8]) = v93;
  int v94 = v91 ^ ((v2 >> 24) - ((2 * (v2 >> 24)) & 0x3CBDEA34) - 1637944038) ^ v93 ^ v32;
  LODWORD(STACK[0x494]) = v94 ^ v47;
  LODWORD(STACK[0x570]) = v94;
  int v95 = v94 ^ v47 ^ 0xFE05D15D;
  LODWORD(v32) = v95 ^ v88 ^ v50;
  int v96 = dword_100281B90[((v32 & 0x2E ^ 0x1CB8180F) + (v32 & 0xD1) - 1) ^ 0x1CB81885];
  HIDWORD(v2) = v96 ^ 0x1F8;
  LODWORD(v2) = v96 ^ 0xF0A1D000;
  int v97 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xED0300F6) - 159285125;
  unsigned int v98 = ((BYTE2(v32) ^ 0xA34FD17A) + 570562565 - ((2 * (BYTE2(v32) ^ 0xA34FD17A)) & 0x44042182) + 1212) ^ 0xD379CE6E;
  LODWORD(v42) = (((2 * v97) ^ 0xED0300F6) - 2 * (((2 * v97) ^ 0xED0300F6) & 0x19DF7DF8 ^ (2 * v97) & 8) + 970948080) & 0x32119686 ^ 0x10011606;
  int v99 = dword_100284320[(-393069138 - v98 + ((2 * v98) & 0x2C580238) + 309) ^ 0xBAA63DAF];
  HIDWORD(v2) = v99 ^ 0x2261;
  LODWORD(v2) = v99 ^ 0x9F280000;
  LODWORD(v28) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xF26C0C8E) - 113899961;
  LODWORD(v50) = dword_100281B90[((BYTE1(v32) ^ 0xE1 | 0xBDB1D54) - (BYTE1(v32) ^ 0xE1 | 0x424E2AB) + 69526187) ^ 0xBDB1DD0];
  HIDWORD(v2) = v50 ^ 0x1F8;
  LODWORD(v2) = v50 ^ 0xF0A1D000;
  LODWORD(v50) = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA33AEF54) + 1369274282;
  LODWORD(v47) = (((2 * v50) ^ 0xA33AEF54) - ((2 * ((2 * v50) ^ 0xA33AEF54)) & 0xA7BD934) + 87944347) & 0x32119686 ^ 0x73090E0A;
  LODWORD(v50) = (((2 * v47) | 0xF695EB7A) - v47 + 78973507) ^ v50;
  int v100 = v32 ^ 0xC9C14531;
  LODWORD(STACK[0x478]) = v32 ^ 0xC9C14531;
  HIDWORD(v2) = v50 ^ 0x4B9F1D;
  LODWORD(v2) = v50 ^ 0xD8000000;
  LODWORD(v50) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x2A5394) - 2146096694;
  LODWORD(v32) = ((BYTE3(v32) ^ 4) + 2094239616 + ((2 * (BYTE3(v32) ^ 4) + 428) & 0x152 ^ 0xFFF8BFFF)) ^ dword_100284B40[BYTE3(v32) ^ 0xE3];
  HIDWORD(v2) = v32 ^ 0x80;
  LODWORD(v2) = v32 ^ 0xCA3E9200;
  int v101 = v28 ^ v97 ^ (((((2 * v42) & 0xFFFE07FF) - v42 + 1221393768) & 0xA442CF26 ^ 0x840A0347)
                    + ((((2 * v42) & 0xFFFE07FF) - v42 + 1221393768) & 0x5A353098 ^ 0x8843089)
                    - 2) ^ v94 ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0xC18635D8) - 524084500) ^ v50;
  unsigned int v102 = v95 ^ v88 ^ 0xD7683F30;
  LODWORD(STACK[0x498]) = v102;
  LODWORD(v32) = v101 ^ 0x7C0E3050 ^ v95;
  LODWORD(STACK[0x47C]) = v32;
  LODWORD(v32) = v32 ^ 0x50AC5171;
  int v103 = v32 ^ v102;
  int v104 = v32;
  LODWORD(STACK[0x464]) = v32;
  unsigned int v105 = v32 ^ v102 ^ v100;
  LODWORD(v47) = v103;
  unsigned int v106 = ((HIBYTE(v105) ^ 0xA9) + 543402010 + ((2 * (HIBYTE(v105) ^ 0xA9) + 428) & 0x286 ^ 0xBEF8AFFF)) ^ dword_100284B40[HIBYTE(v105) ^ 0x4E];
  HIDWORD(v2) = v106 ^ 0x6A;
  LODWORD(v2) = v106 ^ 0x69AE8B00;
  int v107 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0xE87EDFD6) - 197169173;
  LODWORD(v32) = (((2 * (BYTE1(v105) ^ 0x56)) | 0x325AA922) - (BYTE1(v105) ^ 0x56) + 1188211567) & 0x3FFFFFFF ^ 0x392D5440;
  LODWORD(v32) = (v32 - ((2 * v32 + 1896307116) & 0x6211AA48) + 1808564730) ^ dword_100284B40[((BYTE1(v105) ^ 0x70E545)
                                                                                             - ((2
                                                                                               * (BYTE1(v105) ^ 0x70E545)) & 0xC00B22)
                                                                                             - 613612143) ^ 0xDB1DE0B4];
  HIDWORD(v2) = v32 ^ 0x39A50D;
  LODWORD(v2) = v32 ^ 0xBD000000;
  LODWORD(v32) = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xE7A474EA) + 1943157365;
  int v108 = (v105 & 0xE1 ^ 0x62ED88C1) + (v105 & 0x1E ^ 9) - 1;
  int v109 = v105 ^ 0x6FF2E6A0;
  LODWORD(STACK[0x450]) = v105 ^ 0x6FF2E6A0;
  LODWORD(STACK[0x454]) = v47;
  unsigned int v110 = (v62 ^ 0x90F0B4F7)
       + (((v62 ^ 0x96E44B08) + 1) ^ 0xBFEF7FDF)
       + ((2 * ((v62 ^ 0x96E44B08) + 1)) & 0x7FDEFFBE)
       + 1074823201;
  int v111 = dword_10026F9A0[(((2 * (BYTE2(v105) ^ 0x57)) & 0xFFFFFF0F) - (BYTE2(v105) ^ 0x57) + 632) ^ 0x295];
  unsigned int v112 = ((v110 ^ 0x77C1B37F) - 2009183103 + ((2 * v110) & 0xEF8366FE)) | v111 ^ 0x49D66DF5;
  HIDWORD(v2) = (v112 - ((2 * v112) & 0x38AE) + 7255) ^ 0x1C57;
  LODWORD(v2) = v111 ^ 0x49D60000;
  int v113 = dword_10026F9A0[((v108 & 0x818A6A ^ 0x810426A) + (v108 ^ 0xF68D8811) - ((v108 ^ 0xF68D8811) & 0x10400A6A)) ^ 0x8CB1CAD0] ^ v101 ^ 0x7C0E3050 ^ v107 ^ v32 ^ 0xDD4A123B ^ ((v2 >> 16) - ((2 * (v2 >> 16)) & 0xAFE0794E) + 1475361959);
  LODWORD(STACK[0x3F8]) = v113;
  int v114 = v113 ^ v104;
  HIDWORD(v2) = v113 ^ v104 ^ 0x2C252;
  LODWORD(v2) = v113 ^ v104 ^ 0x7A880000;
  int v115 = ((v2 >> 18) - ((2 * (v2 >> 18)) & 0x35C1245E) + 450925103) ^ (((v47 << 14) ^ 0x54DD8000)
                                                                     - ((2 * ((v47 << 14) ^ 0x54DD8000)) & 0xA080000)
                                                                     + 84159885);
  HIDWORD(v2) = v115 ^ (v47 >> 18) ^ 0x3C9B;
  LODWORD(v2) = v115 ^ 0xE8C14000;
  int v116 = (v2 >> 14) - ((2 * (v2 >> 14)) & 0xE3184DC4) - 242473246;
  LODWORD(v50) = v116;
  LODWORD(STACK[0x3DC]) = v116;
  unsigned int v117 = v109 ^ 0x624A635 ^ v116;
  int v118 = dword_100281B90[(((((2 * (BYTE2(v117) ^ 0xCA8CC0C1)) | 0x2E17CFBC) - (BYTE2(v117) ^ 0xCA8CC0C1) + 1760827426) & 0x1C002373 ^ 0x100DD021)
                        + ((((2 * (BYTE2(v117) ^ 0xCA8CC0C1)) | 0x2E17CFBC) - (BYTE2(v117) ^ 0xCA8CC0C1) + 1760827426) & 0x41800C8C ^ 0x41A00801)
                        - 1) ^ 0xC2DFF24];
  LODWORD(STACK[0x358]) = v1;
  HIDWORD(v2) = v118 ^ 0x1F8;
  LODWORD(v2) = v118 ^ 0xF0A1D000;
  unint64_t v119 = *(unsigned __int8 *)(STACK[0x568] + 13);
  STACK[0x380] = v119;
  LODWORD(STACK[0x3C0]) = (v119 ^ 0x3F) - 12 * ((171 * (v119 ^ 0x3F)) >> 11);
  int v120 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x30275AE4) - 1743540878;
  LODWORD(v119) = ((2 * v120) ^ 0x30275AE4) - ((2 * ((2 * v120) ^ 0x30275AE4)) & 0x1D9F45B4) + 1322230491;
  LODWORD(v119) = ((v119 & 0x20019084 ^ 0x40C1B86D | v119 & 0x12100602) - 1) ^ 0x6C172EE;
  LODWORD(v119) = (v119 - ((2 * v119) & 0x4029800) - 2098369216) ^ v120;
  HIDWORD(v2) = v119 ^ 0x1FB0;
  LODWORD(v2) = v119 ^ 0x5F7B0000;
  LODWORD(v119) = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x6ABE0ACA) - 1252063899;
  unsigned int v121 = ((BYTE1(v117) ^ 7) - ((2 * (BYTE1(v117) ^ 7)) & 0x24) - 344697838) ^ 0xEFE62CB0;
  unsigned int v122 = (((2 * v121) & 0x8202AFC) - v121 - 2083624319) ^ 0x875C1277;
  int v123 = (((2 * (BYTE1(v117) ^ 0x6B)) & 0x13C) - (BYTE1(v117) ^ 0x6B) + 1985381217) ^ 0x7714A3E1;
  int v124 = (v122 - ((2 * v122 + 1896307116) & 0x43C6FC90) + 1516710686) ^ dword_100284B40[(v123
                                                                                       - ((2 * v123) & 0x20042B6)
                                                                                       + 565191003) ^ 0x20F20104];
  unsigned int v125 = (v124 ^ ((v124 ^ 0x33CA6E7A) - ((2 * (v124 ^ 0x33CA6E7A) + 2) & 0xAE88F8A8) + 1464106069) ^ ((v124 ^ 0x506DF19E) - ((2 * (v124 ^ 0x506DF19E) + 122634186) & 0x28BC3C8A) - 133841366) ^ 0xF2FF394)
       + 1671929828;
  HIDWORD(v2) = (v125 ^ 0xFFFF32DF) + 52513 + ((2 * v125) & 0xFFFE65BE);
  LODWORD(v2) = HIDWORD(v2);
  LODWORD(v119) = dword_100284320[(((2 * (v117 ^ 0x42)) | 0x39FDF754)
                                 - (v117 ^ 0x42)
                                 + 1124140118) & 0x3FFFFFFF ^ 0x3CFEFB3A] ^ v113 ^ ((v2 >> 24)
                                                                                  - ((2 * (v2 >> 24)) & 0xE71CE00C)
                                                                                  - 208769018) ^ 0xBEBE2F2 ^ v119;
  int v126 = (((2 * (v119 & 0x2387EEED ^ 0x210406C5)) & 0x7001CD8) - (v119 & 0x2387EEED ^ 0x210406C5) + 806346881) ^ 0x3A0941C0;
  LODWORD(v119) = (((2 * v126) | 0x2B0D3812) - v126 - 361143305) ^ 0x1D069101 | ((v119 & 0xDC781112 ^ 0x494CA6F) - 1) ^ 0xCBCCA6C;
  LODWORD(STACK[0x430]) = v117;
  LODWORD(STACK[0x3BC]) = HIBYTE(v117);
  int v127 = dword_100284320[HIBYTE(v117) ^ 0xD3];
  HIDWORD(v2) = v127 ^ 0x61;
  LODWORD(v2) = v127 ^ 0x9F282200;
  int v128 = (v119 - ((2 * v119) & 0x8F853ADA) - 943547027) ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x4F5C5B8A) - 1481757243);
  LODWORD(STACK[0x3E8]) = v113 ^ v104;
  LODWORD(v119) = v113 ^ v104 ^ 0x550C652C ^ v128;
  int v129 = v128;
  LODWORD(STACK[0x3F0]) = v119;
  int v130 = v119 ^ v50;
  LODWORD(v119) = v119 ^ v50 ^ 0xBD6CF7F2;
  unsigned int v131 = v119 ^ v117;
  int v132 = v119;
  LODWORD(STACK[0x378]) = v119;
  LODWORD(v119) = (((v119 ^ v117) ^ 0x92)
                 + ((v119 ^ v117) & 0x8B ^ 0xAB854209)
                 - (((v119 ^ v117) ^ 0x92) & 0x8B)) ^ 0xAB85421F;
  int v133 = dword_100281B90[((HIWORD(v131) & 0x89) + (BYTE2(v131) ^ 0xFFFFFF8D) + (BYTE2(v131) | 0x323C0D76) + 1) ^ 0x323C0DFD];
  HIDWORD(v2) = v133 ^ 0x1F8;
  LODWORD(v2) = v133 ^ 0xF0A1D000;
  int v134 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xA039B632) + 1344068377;
  unsigned int v135 = (((2 * v134) ^ 0xA039B632) - ((2 * ((2 * v134) ^ 0xA039B632)) & 0x18165B38) + 738930076) & 0x32119686 ^ 0x100682;
  unsigned int v136 = ((v135 | 0xFBCC5C9E) - (v135 | 0x433A361) + 70493025) ^ 0xF3FC5FD8;
  unsigned int v137 = ((v136 | 0x2084DBA5) - (v136 | 0xDF7B245A) - 545577894) ^ v134;
  HIDWORD(v2) = v137 ^ 0x967E;
  LODWORD(v2) = v137 ^ 0x593D0000;
  int v138 = dword_100284320[(((v131 >> 8) & 3) + 539561983 + ((v131 >> 8) & 0xFC ^ 0x18448BF5)) ^ 0x386D9BD1];
  int v139 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x7BE70440) - 1108114912;
  HIDWORD(v2) = v138 ^ 0x282261;
  LODWORD(v2) = v138 ^ 0x9FFFFFFF;
  LODWORD(v32) = dword_10026F9A0[HIBYTE(v131) ^ 0xB1];
  int v140 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xC677E7D6) - 482610197;
  HIDWORD(v2) = v32 ^ 0xF5;
  LODWORD(v2) = v32 ^ 0x49D66D00;
  LODWORD(v119) = v140 ^ dword_100284B40[((v131 & 0x29 ^ 0xAB992620) + (v131 & 0xD6 ^ 0xD3) - 1) ^ 0xAB992613] ^ ((v2 >> 8) - ((2 * (v2 >> 8)) & 0x38D8869A) - 1670626483) ^ (v119 - ((2 * v119 + 822565292) & 0x28D974AE) + 1290823469) ^ v139;
  int v141 = v114 ^ 0xF37692D1 ^ v119;
  int v142 = v130 ^ 0x25CFBBD7 ^ v141;
  LODWORD(STACK[0x370]) = v141;
  unsigned int v143 = v142 ^ v131;
  int v144 = v142;
  LODWORD(STACK[0x374]) = v142;
  int v145 = ((v142 ^ v131) >> 16);
  unsigned int v146 = (-736306729 - (v145 ^ 0xB4) + ((2 * (v145 ^ 0xB4)) & 0x3A) + 11) ^ 0xD41CD9D7;
  int v147 = ((v145 ^ 0x9D) + (HIWORD(v143) & 0xBE ^ 0x222) - ((v145 ^ 0x9D) & 0xBE)) ^ 0x245;
  int v148 = (v147 - ((2 * v147 + 822565292) & 0x3C128796) - 695406431) ^ dword_100284B40[v146];
  HIDWORD(v2) = v148 ^ 0x33E2;
  LODWORD(v2) = v148 ^ 0x10780000;
  int v149 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0x8A4A773C) + 1160067998;
  unsigned int v150 = ((BYTE1(v143) ^ 0x34) - ((2 * (BYTE1(v143) ^ 0x34)) & 0x172) - 706234183) ^ 0x97F18A8B;
  int v151 = dword_10026F9A0[((v150 | 0x6291D17D) - (v150 | 0x9D6E2E82) - 1653723518) ^ 0x2087E346];
  HIDWORD(v2) = v151 ^ 0xD66DF5;
  LODWORD(v2) = v151 ^ 0x49000000;
  int v152 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0xE7215B4A) + 1938861477;
  LODWORD(v32) = ((v143 ^ 0x7C) - ((2 * (v143 ^ 0x7C)) & 0x5C) + 1156527662) ^ 0xF0E7662A;
  unsigned int v153 = ((v143 ^ 0xB2A1047A) - ((2 * (v143 ^ 0xB2A1047A)) & 0x65020822) + 1938525969) ^ 0xC12A8B64;
  LODWORD(v32) = ((v32 | 0x69438041) - (v32 | 0x96BC7FBE) - 1766031426) ^ 0xDD4BD0D1;
  LODWORD(v50) = v143 ^ 0xC404A5C8;
  LODWORD(STACK[0x3A8]) = v143 ^ 0xC404A5C8;
  int v154 = dword_100281B90[HIBYTE(v143) ^ 0x57];
  HIDWORD(v2) = v154 ^ 0x1F8;
  LODWORD(v2) = v154 ^ 0xF0A1D000;
  int v155 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x84508958) - 1037548372;
  LODWORD(v42) = ((2 * v155) ^ 0x84508958) - ((2 * ((2 * v155) ^ 0x84508958)) & 0x156167C8) + 1253094373;
  LODWORD(v42) = ((v42 & 0x32108004 ^ 0xD8F2A051 | v42 & 0x11682) - 1) ^ 0xFB00D654;
  int v156 = (v42 - ((2 * v42) & 0x2323E508) + 361888741) ^ v155;
  HIDWORD(v2) = v156 ^ 0x4B;
  LODWORD(v2) = v156 ^ 0xF7DFCC00;
  int v157 = v152 ^ dword_100284B40[v153];
  LODWORD(v47) = v129;
  LODWORD(STACK[0x438]) = v129;
  int v158 = v119 ^ v129;
  int v159 = v157 ^ v158 ^ (v32 - ((2 * v32 + 1896307116) & 0x593DCB9E) - 1524460891) ^ v149 ^ ((v2 >> 8)
                                                                                          - ((2 * (v2 >> 8)) & 0xEE1BEAE4)
                                                                                          + 1997403506);
  LODWORD(v42) = v159 ^ v132 ^ v50;
  int v160 = dword_100281B90[BYTE3(v42) ^ 0x14];
  HIDWORD(v2) = v160 ^ 0x1F8;
  LODWORD(v2) = v160 ^ 0xF0A1D000;
  int v161 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x44E37CB4) + 577879642;
  int v162 = (((2 * v161) ^ 0x44E37CB4) - ((2 * ((2 * v161) ^ 0x44E37CB4)) & 0x2CE7C4D8) + 376693356) & 0x32119686 ^ 0x10110406;
  unsigned int v163 = ((v162 | 0x53AFC413) - (v162 | 0xAC503BEC) - 1404027924) ^ 0x53ADC001;
  unsigned int v164 = ((v163 | 0x17EF00A4) - (v163 | 0xE810FF5B) - 401539237) ^ v161;
  HIDWORD(v2) = v164 ^ 0x6C;
  LODWORD(v2) = v164 ^ 0x3618AB00;
  int v165 = (v2 >> 8) - ((2 * (v2 >> 8)) & 0x3457DE52) - 1708396759;
  int v166 = dword_100281B90[((BYTE1(v42) ^ 0x2032678 | 0x2B6F5C1E) - (BYTE1(v42) ^ 0x2032678 | 0xD490A3E1) - 728718367) ^ 0x296C7A24];
  HIDWORD(v2) = v166 ^ 0x1F8;
  LODWORD(v2) = v166 ^ 0xF0A1D000;
  int v167 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0xCF0CA1AA) - 410627883;
  unsigned int v168 = (((2 * v167) ^ 0xCF0CA1AA) - ((2 * ((2 * v167) ^ 0xCF0CA1AA)) & 0x29510C70) + 883459641) & 0x32119686 ^ 0x118204;
  unsigned int v169 = (((2 * v168) | 0xDAA5AF46) - v168 + 313337949) ^ 0xFC63F7F7;
  unsigned int v170 = ((v169 | 0x44B121F0) - (v169 | 0xBB4EDE0F) - 1152459249) ^ v167;
  HIDWORD(v2) = v170 ^ 0x93C2F7;
  LODWORD(v2) = v170 ^ 0x83FFFFFF;
  int v171 = (v2 >> 24) - ((2 * (v2 >> 24)) & 0x5AF784E4) + 763085426;
  int v172 = dword_100281B90[(((2 * (BYTE2(v42) ^ 0x49A33BAE)) & 0x9342200A) - (BYTE2(v42) ^ 0x49A33BAE) + 907161594) ^ 0x7FB114CE];
  HIDWORD(v2) = v172 ^ 0x1F8;
  LODWORD(v2) = v172 ^ 0xF0A1D000;
  int v173 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x5CDDD016) + 779020299;
  int v174 = ((2 * v173) ^ 0x5CDDD016) - ((2 * ((2 * v173) ^ 0x5CDDD016)) & 0x1C430264) + 1847689522;
  unsigned int v175 = (v174 & 0x2111486 ^ 0x80DC215B) + (v174 & 0x30008200 ^ 0x20008001) - 2;
  unsigned int v176 = ((v175 & 0x3000940E ^ 0xB860AC01) + (v175 & 0x21102B0 ^ 0x2130091) - 2) ^ v173;
  HIDWORD(v2) = v176 ^ 0xD301;
  LODWORD(v2) = v176 ^ 0x97880000;
  int v177 = v42;
  LODWORD(STACK[0x368]) = v42;
  int v178 = ((v159 ^ v132 ^ v50) ^ 0x66)
       - ((2 * ((v159 ^ v132 ^ v50) ^ 0x66)) & 0xC)
       - 14732538;
  int v179 = dword_100281B90[((v178 & 0xE0042DF8 ^ 0x20CCE8) + (v178 ^ 0xFD962311) - ((v178 ^ 0xFD962311) & 0x10DF8)) ^ 0xE2ACFD23];
  int v180 = (v2 >> 16) - ((2 * (v2 >> 16)) & 0xCA153D46) + 1695194787;
  HIDWORD(v2) = v179 ^ 0x1F8;
  LODWORD(v2) = v179 ^ 0xF0A1D000;
  int v181 = (v2 >> 9) - ((2 * (v2 >> 9)) & 0x254CF72A) + 312900501;
  unsigned int v182 = v181 ^ (((2 * v181) ^ 0x254CF72A) - 2 * (((2 * v181) ^ 0x254CF72A) & 0x774222E ^ (2 * v181) & 4) + 125051435) & 0x32119686 ^ v165 ^ v180 ^ v171 ^ v159 ^ 0xA1A9E458;
  LODWORD(STACK[0x36C]) = v182;
  LODWORD(v32) = v159 ^ v132 ^ 0xB04B9B72;
  LODWORD(STACK[0x3D8]) = v32;
  LODWORD(STACK[0x414]) = v79;
  LODWORD(STACK[0x40C]) = (v79 ^ 0x5D53C8A ^ v144)
                        - ((2 * (v79 ^ 0x5D53C8A ^ v144) + 534755402) & 0x2755CAD0)
                        - 2087009907;
  int v183 = v159 ^ v114 ^ 0xF37692D1 ^ v119;
  int v184 = v182 ^ v183 ^ v32 ^ 0x492AC31;
  LODWORD(STACK[0x3C8]) = v184;
  LODWORD(v50) = v13;
  LODWORD(v19) = v13 ^ 0xBBDABDB5;
  int v185 = ((2 * ((v182 ^ v183 ^ v32 ^ 0x438823A5) + (v13 ^ 0xBBDABDB5))) & 0x9F35EDDE)
       + (((v182 ^ v183 ^ v32 ^ 0x438823A5) + (v13 ^ 0xBBDABDB5)) ^ 0xCF9AF6EF);
  LODWORD(STACK[0x448]) = v185 - ((2 * v185 + 133227276) & 0x2954811E) - 1734168043;
  int v186 = STACK[0x494];
  LODWORD(v119) = STACK[0x4A0];
  unsigned int v187 = (LODWORD(STACK[0x4A0]) ^ 0x742B99AC) + (LODWORD(STACK[0x494]) ^ 0xA469BB30) + 1;
  LODWORD(STACK[0x418]) = v187 - ((2 * v187) & 0x6E220ED2) + 923862889;
  LODWORD(v42) = STACK[0x550];
  unsigned int v188 = (LODWORD(STACK[0x550]) ^ 0xCB7A0ECD) + 1299289891;
  LODWORD(v43) = v188 ^ 0x637FF1FF;
  unsigned int v189 = (2 * v188) & 0xC6FFE3FE;
  LODWORD(v13) = v101;
  unsigned int v190 = ((2 * ((v79 ^ 0xA29551AB) + (v101 ^ 0x5A890D92) + 1)) & 0xFF5EFB7E)
       + (((v79 ^ 0xA29551AB) + (v101 ^ 0x5A890D92) + 1) ^ 0x7FAF7DBF);
  LODWORD(v32) = v78;
  int v191 = ((2 * ((v78 ^ 0xF89CC5E6) + (v47 ^ 0x6A88F55F) + 1)) & 0x5F6EDFFE)
       + (((v78 ^ 0xF89CC5E6) + (v47 ^ 0x6A88F55F) + 1) ^ 0x2FB76FFF);
  unsigned int v192 = v190 - ((2 * v190 - 726434902) & 0xA7F7747C) + 1045788691;
  int v193 = v158 ^ 0x2A123CD3;
  LODWORD(STACK[0x434]) = (LODWORD(STACK[0x570]) ^ 0x1ABE282B ^ v158 ^ 0x2A123CD3)
                        - ((2 * (LODWORD(STACK[0x570]) ^ 0x1ABE282B ^ v158 ^ 0x2A123CD3) + 301399612) & 0x22C2E67E)
                        + 2052911709;
  int v194 = v43 + v189 - 1669329407 + (v186 ^ 0xA469BB30);
  LODWORD(STACK[0x364]) = v182 ^ v183 ^ 0xCDFDA880;
  unsigned int v195 = v191 - ((2 * v191 - 1997703592) & 0x8FB9ADAC) - 1940680190;
  LODWORD(STACK[0x488]) = (LODWORD(STACK[0x560]) ^ 0x50DFD573 ^ v182 ^ v183 ^ 0xCDFDA880)
                        - ((2 * (LODWORD(STACK[0x560]) ^ 0x50DFD573 ^ v182 ^ v183 ^ 0xCDFDA880) + 148052344) & 0x2BF08AC0)
                        + 1516360220;
  LODWORD(v28) = v119;
  LODWORD(STACK[0x464]) = (v119 ^ 0x74588F34 ^ LODWORD(STACK[0x464]))
                        - ((2 * (v119 ^ 0x74588F34 ^ LODWORD(STACK[0x464])) + 843590444) & 0x72544060)
                        - 766626362;
  unsigned int v196 = v177 ^ 0xD91396AA ^ v184;
  unsigned int v197 = (v183 ^ 0x58D24E44 ^ v196) - ((2 * (v183 ^ 0x58D24E44 ^ v196) - 1181361762) & 0xDF49DA90) + 1282398743;
  LODWORD(v119) = ((2 * ((v47 ^ 0x6A88F55F) + (v101 ^ 0x5A890D92))) & 0xDBFF53DE)
                + (((v47 ^ 0x6A88F55F) + (v101 ^ 0x5A890D92)) ^ 0x6DFFA9EF);
  LODWORD(v43) = ((2 * ((v159 ^ 0x9DA91006) + (v183 ^ 0x80134782) + 1)) & 0xB5ADFDD6)
               + (((v159 ^ 0x9DA91006) + (v183 ^ 0x80134782) + 1) ^ 0xDAD6FEEB);
  int v198 = v119 - ((2 * v119 + 772928260) & 0xFC639174) + 356172348;
  LODWORD(STACK[0x444]) = v43 - ((2 * v43 + 1697688276) & 0x71A877DC) - 345206440;
  LODWORD(v119) = ((2 * ((v158 ^ 0x5393B5C0) + (LODWORD(STACK[0x4C8]) ^ 0xC1D6D7E8))) & 0xE78EE7FC)
                + (((v158 ^ 0x5393B5C0) + (LODWORD(STACK[0x4C8]) ^ 0xC1D6D7E8)) ^ 0xF3C773FE);
  int v199 = 1070637563 - v119 - ((835626112 - 2 * v119) & 0x4DD29F76);
  int v200 = v50;
  int v201 = STACK[0x478];
  LODWORD(v47) = (v50 ^ 0x921ADF1B ^ v201)
               - 2 * (((v50 ^ 0x921ADF1B ^ v201) + 346385642) & 0x3BF7139F ^ (v50 ^ 0x921ADF1B ^ v201) & 1)
               - 1868791672;
  LODWORD(v119) = ((v19 + 813040745) ^ 0x7DBA1FCB) + ((2 * (v19 + 813040745)) & 0xFB743F96) - 2109349835;
  LODWORD(v19) = STACK[0x47C];
  LODWORD(v119) = v119
                + (LODWORD(STACK[0x47C]) ^ 0xAF20B816)
                - ((2 * (v119 + (LODWORD(STACK[0x47C]) ^ 0xAF20B816))) & 0x1C1E85E0);
  LODWORD(v50) = v159 ^ 0x19BBF4DF ^ v42;
  int v202 = v42 ^ v47 ^ v199 ^ 0xABF400E7;
  int v203 = v200 ^ 0x638E071B;
  LODWORD(v43) = LODWORD(STACK[0x414]) ^ 0xF0C0A300;
  int v204 = LODWORD(STACK[0x4C8]) ^ 0x6C7CDABC;
  LODWORD(STACK[0x2F0]) = v198;
  LODWORD(STACK[0x2E8]) = v197;
  int v205 = v197 ^ v198;
  LODWORD(STACK[0x550]) = v28 ^ 0x267E6B07 ^ v205;
  LODWORD(STACK[0x4A0]) = v43 ^ v205;
  LODWORD(STACK[0x408]) = v204 ^ v205;
  LODWORD(STACK[0x404]) = v32 ^ 0xAAC9374D ^ v205;
  LODWORD(STACK[0x3D4]) = LODWORD(STACK[0x438]) ^ 0x9CAC928C;
  LODWORD(STACK[0x410]) = v194;
  LODWORD(v32) = v194 - ((2 * v194) & 0x43F4F276) - 1577420485;
  LODWORD(v119) = v119 + 235881200;
  LODWORD(STACK[0x438]) = v119;
  int v206 = v119 ^ v32;
  unsigned int v207 = v119 ^ v32 ^ 0x7B4CF780 ^ v193;
  LODWORD(STACK[0x3D0]) = v159 ^ 0x77D3143E;
  LODWORD(STACK[0x3CC]) = v183 ^ 0x9596BC45;
  int v208 = v32;
  LODWORD(STACK[0x494]) = v32;
  LODWORD(STACK[0x3E0]) = v32 ^ v199;
  LODWORD(v119) = v32 ^ v199 ^ 0xC009B914 ^ LODWORD(STACK[0x3C8]);
  int v209 = LODWORD(STACK[0x418]) ^ 0xC057284;
  LODWORD(v28) = LODWORD(STACK[0x418]) ^ 0xF68793FE;
  LODWORD(STACK[0x414]) = v28;
  int v210 = (v119 + v28) ^ 0x36FEFFBC;
  int v211 = (2 * (v119 + v28)) & 0x6DFDFF78;
  LODWORD(v119) = 2 * ((v119 & v28) - ((2 * (v119 & v28)) & 0x4555B038)) + 1163243576;
  unsigned int v212 = 2 * &unk_100280840;
  LODWORD(STACK[0x418]) = v212;
  LODWORD(v119) = v211 + v210 + (v119 ^ 0x25D5F26D) + ((2 * v119) & 0x3EFF7B54 ^ 0xF5549FAF);
  unsigned int v213 = v119 - ((2 * v119 - 788431904) & 0xCC95F4EC) - 825509786;
  int v214 = LODWORD(STACK[0x3E8]) ^ v206;
  LODWORD(STACK[0x338]) = v209;
  int v215 = v32 ^ v199 ^ v209;
  int v216 = v196 ^ v215;
  unsigned int v217 = (((&unk_100280840 ^ 0x5BB5EBFF) - 1538649087 + (v212 & 0xB76BD7E0)) ^ 0x3E3D5FEE)
       - 1044209646
       + (v214 ^ 0x482C0343 ^ v216);
  int v218 = LODWORD(STACK[0x4E0]) ^ 0x755F55AE;
  unsigned int v219 = LODWORD(STACK[0x450]) ^ 0x932C0643;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x3D8]) ^ 0x4B7B9DFC;
  LODWORD(v32) = (v217 ^ 0x66DFF6D9) + 729929899 + ((2 * v217) & 0xCDBFEDB2);
  unsigned int v220 = v216 ^ 0xC31A244A;
  unsigned int v221 = LODWORD(STACK[0x454]) ^ 0xF92A920B;
  LODWORD(STACK[0x330]) = v195;
  LODWORD(STACK[0x3D8]) = v13 ^ 0xAF12F045 ^ v195 ^ v192;
  LODWORD(STACK[0x3C8]) = v19 ^ 0x5ABB45C1 ^ v195 ^ v192;
  LODWORD(STACK[0x3B0]) = v219 ^ v195 ^ v192;
  LODWORD(STACK[0x3AC]) = v221 ^ v195 ^ v192;
  int v222 = LODWORD(STACK[0x3F8]) ^ v206;
  int v223 = v32 ^ v222;
  unsigned int v224 = v222 ^ 0x982CDDA9;
  unsigned int v225 = v206 ^ 0x92223FB4 ^ LODWORD(STACK[0x3A8]);
  LODWORD(v19) = LODWORD(STACK[0x4E8]) ^ v199 ^ 0xE4161F0D;
  LODWORD(STACK[0x39C]) = (v223 & 2 | 0xD1B7B285) - 2 * (v223 & 2);
  unsigned int v226 = LODWORD(STACK[0x498]) ^ 0xA255FA9D;
  int v227 = LODWORD(STACK[0x558]) ^ v199 ^ 0x3D31477C;
  LODWORD(STACK[0x44C]) = v199;
  unsigned int v228 = LODWORD(STACK[0x4F0]) ^ v199 ^ 0xBA0360C7;
  int v229 = v50 ^ 0xB6AFFDE;
  LODWORD(STACK[0x2D8]) = v47;
  int v230 = v50 ^ 0xB6AFFDE ^ v47;
  int v231 = v19 ^ v230;
  int v232 = v227 ^ v230;
  int v233 = v228 ^ v230;
  LODWORD(STACK[0x2F8]) = v50;
  int v234 = v202 ^ v50;
  LODWORD(STACK[0x348]) = v223;
  BOOL v235 = (v223 & 1) == 0;
  if (v223) {
    int v236 = v231;
  }
  else {
    int v236 = v234;
  }
  LODWORD(STACK[0x3F8]) = v236;
  if ((v223 & 1) == 0) {
    int v234 = v232;
  }
  LODWORD(STACK[0x558]) = v234;
  if (v223) {
    int v237 = v233;
  }
  else {
    int v237 = v231;
  }
  LODWORD(STACK[0x4F0]) = v237;
  if (v223) {
    int v238 = v232;
  }
  else {
    int v238 = v233;
  }
  LODWORD(STACK[0x3E8]) = v238;
  int v239 = LODWORD(STACK[0x4D8]) ^ 0x39879356;
  int v240 = LODWORD(STACK[0x4D0]) ^ 0x738522ED;
  LODWORD(STACK[0x300]) = v192;
  int v241 = LODWORD(STACK[0x40C]) ^ v192;
  LODWORD(STACK[0x390]) = v241;
  int v242 = v203 ^ v241;
  int v243 = v218 ^ v241;
  int v244 = v239 ^ v241;
  if (v223) {
    int v245 = v242;
  }
  else {
    int v245 = v243;
  }
  LODWORD(STACK[0x4E0]) = v245;
  if (v223) {
    int v246 = v244;
  }
  else {
    int v246 = v242;
  }
  LODWORD(STACK[0x3A8]) = v246;
  int v247 = v240 ^ v241;
  if ((v223 & 1) == 0) {
    int v243 = v247;
  }
  LODWORD(STACK[0x3A4]) = v243;
  if (v223) {
    int v244 = v247;
  }
  LODWORD(STACK[0x4C8]) = v244;
  unsigned int v248 = LODWORD(STACK[0x49C]) ^ 0xA633C62D;
  int v249 = LODWORD(STACK[0x4B0]) ^ 0x33681F85;
  unsigned int v250 = LODWORD(STACK[0x4B8]) ^ 0xD687B3B3;
  unsigned int v251 = LODWORD(STACK[0x4A8]) ^ 0xE3A17420;
  LODWORD(STACK[0x2E0]) = v229;
  int v252 = v229 ^ LODWORD(STACK[0x464]);
  LODWORD(STACK[0x388]) = v252;
  int v253 = v248 ^ v252;
  int v254 = v249 ^ v252;
  int v255 = v250 ^ v252;
  if (v223) {
    int v256 = v253;
  }
  else {
    int v256 = v254;
  }
  LODWORD(STACK[0x4A8]) = v256;
  if ((v223 & 1) == 0) {
    int v254 = v255;
  }
  LODWORD(STACK[0x4E8]) = v254;
  int v257 = v251 ^ v252;
  if (v223) {
    int v258 = v255;
  }
  else {
    int v258 = v251 ^ v252;
  }
  LODWORD(STACK[0x47C]) = v258;
  if (v223) {
    int v253 = v257;
  }
  LODWORD(STACK[0x4D0]) = v253;
  int v259 = LODWORD(STACK[0x434]) ^ v208;
  int v260 = v201 ^ 0x549C0ECE ^ v259;
  int v261 = LODWORD(STACK[0x570]) ^ 0x1E63CD58 ^ v259;
  if (v223) {
    int v262 = v201 ^ 0x549C0ECE ^ v259;
  }
  else {
    int v262 = v226 ^ v259;
  }
  LODWORD(STACK[0x454]) = v262;
  if (v223) {
    int v260 = v261;
  }
  LODWORD(STACK[0x570]) = v260;
  if (v223) {
    int v263 = v186 ^ 0x26CA28AF ^ v259;
  }
  else {
    int v263 = v261;
  }
  LODWORD(STACK[0x450]) = v263;
  if (v223) {
    int v264 = v226 ^ v259;
  }
  else {
    int v264 = v186 ^ 0x26CA28AF ^ v259;
  }
  LODWORD(STACK[0x398]) = v264;
  int v265 = v214 ^ 0xF1D66DA;
  LODWORD(STACK[0x3C4]) = v206;
  unsigned int v266 = v206 ^ 0xE4DF3FF6 ^ LODWORD(STACK[0x430]);
  unsigned int v267 = v206 ^ 0xECF13043 ^ LODWORD(STACK[0x3DC]);
  LODWORD(STACK[0x37C]) = v131 ^ 0xE868CDB5;
  if (v223) {
    unsigned int v268 = v265;
  }
  else {
    unsigned int v268 = v224;
  }
  LODWORD(STACK[0x394]) = v268;
  if ((v223 & 1) == 0) {
    unsigned int v224 = v266;
  }
  LODWORD(STACK[0x4B8]) = v224;
  if (v223) {
    unsigned int v269 = v266;
  }
  else {
    unsigned int v269 = v267;
  }
  LODWORD(STACK[0x38C]) = v269;
  if (v223) {
    unsigned int v270 = v267;
  }
  else {
    unsigned int v270 = v265;
  }
  LODWORD(STACK[0x4B0]) = v270;
  LODWORD(STACK[0x378]) ^= 0x972056CB;
  unsigned int v271 = v206 ^ 0xA58D13B2 ^ LODWORD(STACK[0x374]);
  unsigned int v272 = v206 ^ 0xB1CD4D27 ^ LODWORD(STACK[0x370]);
  if (v223) {
    unsigned int v273 = v207;
  }
  else {
    unsigned int v273 = v225;
  }
  if (v223) {
    unsigned int v274 = v225;
  }
  else {
    unsigned int v274 = v206 ^ 0xA58D13B2 ^ LODWORD(STACK[0x374]);
  }
  LODWORD(STACK[0x4D8]) = v274;
  if (v223) {
    unsigned int v275 = v271;
  }
  else {
    unsigned int v275 = v272;
  }
  if (v223) {
    unsigned int v276 = v272;
  }
  else {
    unsigned int v276 = v207;
  }
  LODWORD(STACK[0x478]) = v276;
  LODWORD(STACK[0x374]) = LODWORD(STACK[0x368]) ^ 0x3A9ADC66;
  LODWORD(STACK[0x560]) = v215;
  unsigned int v277 = v215 ^ 0xA287F7CB ^ LODWORD(STACK[0x364]);
  unsigned int v278 = v215 ^ 0x86BE2F90 ^ LODWORD(STACK[0x36C]);
  if (v223) {
    unsigned int v279 = v213;
  }
  else {
    unsigned int v279 = v215 ^ 0xA287F7CB ^ LODWORD(STACK[0x364]);
  }
  LODWORD(STACK[0x430]) = v279;
  if (v223) {
    unsigned int v280 = v277;
  }
  else {
    unsigned int v280 = v278;
  }
  LODWORD(STACK[0x49C]) = v280;
  if (v223) {
    unsigned int v213 = v220;
  }
  LODWORD(STACK[0x498]) = v213;
  if (v223) {
    unsigned int v281 = v278;
  }
  else {
    unsigned int v281 = v220;
  }
  LODWORD(STACK[0x3DC]) = v281;
  int v282 = byte_100291210[STACK[0x420] ^ 0x1D];
  unsigned int v283 = v282 - ((2 * v282 - 108) & 0xFFFFFFD6) - 75;
  unsigned int v284 = ((((v283 ^ 0x17 ^ (v283 >> 4) & 4) - ((2 * (v283 ^ 0x17 ^ (v283 >> 4) & 4)) & 0xAC)) << 24) - 704643072) ^ 0xD6000000;
  unsigned int v285 = (2 * v284) & 0xA8000000;
  v284 -= 731403315;
  HIDWORD(v286) = byte_100291310[STACK[0x428] ^ 0x15];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  unsigned int v287 = ((((((v286 >> 25) - ((2 * (v286 >> 25)) & 0x56) + 43) ^ 0xB8)
          - ((2 * (((v286 >> 25) - ((2 * (v286 >> 25)) & 0x56) + 43) ^ 0xB8)) & 0x34)) << 16)
        + 1528430592) ^ 0x5B1A0000;
  int v288 = v287 - ((2 * v287) & 0x68820000) - 197043787;
  unsigned int v289 = ((v288 & 0x4A0000 ^ 0xF3E2F919) + 2054212238) ^ 0x946D14FE;
  unsigned int v290 = v284 - v285;
  unsigned int v291 = (((2 * (v290 & 0xE9000000 ^ 0x9CB3CE6C)) & 0x782790C8) - (v290 & 0xE9000000 ^ 0x9CB3CE6C) + 1101272969) ^ 0x3F3599B4;
  unsigned int v292 = ((v288 & 0xB50000 ^ 0x50000) - ((2 * (v288 & 0xB50000 ^ 0x50000)) & 0x4A0000) + 237471709) ^ 0xCD671EDD;
  unsigned int v293 = ((v291 | 0xF3F32D79) - (v291 | 0xC0CD286) + 202166918) ^ 0xD1D16D28 | (v289 - 1) ^ 0xFA7ED758;
  unsigned int v294 = (((2 * v284) & 0x8000000) - 1687759596 + (v290 & 0x16000000 ^ 0xEDFFFFFF)) ^ 0xFDCFD553;
  unsigned int v295 = (((2 * v292) | 0x5FFCCE0E) - v292 + 1342281977) ^ 0x6CBAFE07 | (v294 - ((2 * v294) & 0x70400000) - 1184863336) ^ 0xD9C96BD8;
  unsigned int v296 = (v293 - ((2 * v293) & 0x5AB3584) - 2099930430) ^ 0x82D59AC2 | (v295 - ((2 * v295) & 0xD6261268) - 351073996) ^ 0xEB130934;
  unsigned int v297 = v296 - ((2 * v296) & 0x8E5EC1D2);
  int v298 = byte_1002879A0[STACK[0x470] ^ 0xD8] ^ 0x68;
  int v299 = (((v298 - ((2 * v298) & 0xF2)) << 16) + 964231168) ^ 0x39790000;
  int v300 = byte_100285440[STACK[0x468] ^ 0x79] ^ 0x17;
  int v301 = (v299 - ((2 * v299) & 0x47680000) + 1672740882) ^ 0x63B40012 | (v300 - ((2 * v300) & 0x168) + 1740646068) ^ 0x67C026B4;
  int v302 = byte_100291210[STACK[0x458] ^ 0x68];
  int v303 = v301 - ((2 * v301) & 0x22ABD57A);
  int v304 = v302 - ((2 * v302 + 20) & 0x56);
  int v305 = byte_100291210[*(unsigned __int8 *)(STACK[0x568] + 11) ^ 0x88];
  unsigned int v306 = v305 - 2 * ((v305 + 10) & 0x1D ^ v305 & 1) + 102;
  int v307 = v306 ^ 0x4E ^ ((v306 >> 4) & 4 | 0x52);
  unsigned int v308 = (v297 + 1194287337) ^ 0x472F60E9 | (v307 - ((2 * v307) & 0x34) - 1652147430) ^ 0x9D863B1A;
  HIDWORD(v286) = byte_100291310[STACK[0x380] ^ 0xBE];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  unsigned int v309 = ((((((v286 >> 25) - ((2 * (v286 >> 25)) & 0x60) - 80) ^ 0xAA)
          - ((2 * (((v286 >> 25) - ((2 * (v286 >> 25)) & 0x60) - 80) ^ 0xAA)) & 0x186)) << 16)
        + 2026045440) ^ 0x78C30000;
  unsigned int v310 = v309 - ((2 * v309) & 0x7C7A0000);
  int v311 = byte_1002879A0[STACK[0x548] ^ 0x16] ^ 0x3B;
  unsigned int v312 = (((v311 - ((2 * v311) & 0x178)) << 8) - 753288192) ^ 0xD319BC00;
  unsigned int v313 = (v304 + 117) ^ (((v304 + 117) >> 4) & 4 | 0xB0);
  unsigned int v314 = (v312 - ((2 * v312) & 0x33EA7E00) - 638238727) ^ 0xD9F53FF9 | ((v313 ^ 0x9B)
                                                                      - ((2 * v313) & 0x88)
                                                                      + 548141892) ^ 0x20ABFB44;
  int v315 = byte_100291210[*(unsigned __int8 *)STACK[0x568] ^ 0x13];
  unsigned int v316 = v315 - 2 * ((v315 + 10) & 0xB ^ v315 & 1) - 44;
  unsigned int v317 = v316 ^ (((v316 >> 4) & 4 | 0xFFFFFFE2) + 25);
  int v318 = ((((v317 ^ 0x9A) - ((2 * v317) & 0x48)) << 24) + 603979776) ^ 0x24000000;
  unsigned int v319 = (v318 - ((2 * v318) & 0xCA000000) + 1697309709) ^ 0x652AE40D | (v303 - 1856640323) ^ 0x9155EABD;
  int v320 = byte_1002879A0[STACK[0x4F8] ^ 0x3F] ^ 0xD4;
  unsigned int v321 = (((v320 - ((2 * v320) & 0xFFFFFFEF)) << 24) - 150994944) ^ 0xF7000000;
  unsigned int v322 = (v314 - ((2 * v314) & 0x4186F0CE) - 524060569) ^ 0xE0C37867 | (v321 - ((2 * v321) & 0x12000000) - 1993243542) ^ 0x8931846A;
  unsigned int v323 = v322 - ((2 * v322) & 0x34A67946);
  int v324 = byte_1002879A0[*(unsigned __int8 *)(STACK[0x568] + 10) ^ 0x7BLL] ^ 6;
  int v325 = (((v324 - ((2 * v324) & 0x6A)) << 8) + 497890560) ^ 0x1DAD3500;
  int v326 = (v308 - ((2 * v308) & 0x4CE47726) + 645020563) ^ 0x26723B93 | (v325 - ((2 * v325) & 0x4903EA00) + 612496842) ^ 0x2481F5CA;
  unsigned int v327 = v326 - ((2 * v326) & 0x8C9AAE2A) + 1179473685;
  LOBYTE(v326) = (LODWORD(STACK[0x3C0]) ^ 0x6F) + 2 * LOBYTE(STACK[0x3C0]);
  uint64_t v328 = byte_100285440[*(unsigned __int8 *)(STACK[0x568] + 14) ^ 0x57];
  unsigned int v329 = ((((v328 ^ 0x8D) + 12515030 + (~(2 * (v328 ^ 0x8D)) | 0xFFFE5F)) << 8) + 981760) ^ 0xBF05D000;
  uint64_t v330 = *(unsigned __int8 *)(STACK[0x568] + (123 - v326) + (v326 - 111));
  int v331 = byte_1002879A0[*(unsigned __int8 *)(STACK[0x568] + 5) ^ 0x6BLL] ^ 0xF1;
  unsigned int v332 = (((v331 - ((2 * v331) & 0xE6)) << 16) - 1955397632) ^ 0x8B730000;
  unsigned int v333 = (v332 - ((2 * v332) & 0x11300000) - 2003290950) ^ 0x889834BA | (v323 + 441662627) ^ 0x1A533CA3;
  int v334 = v333 - ((2 * v333) & 0x2838FF00) + 337411968;
  int v335 = (v329 - ((2 * v329) & 0x5D200) + 1638590891) ^ 0x61AAE9AB | (v310 + 2117927029) ^ 0x7E3D0075;
  uint64_t v336 = byte_1002879A0[v330 ^ 0xA4];
  int v337 = v335 - ((2 * v335) & 0x452307F2);
  unsigned int v338 = ((((v336 ^ 0xA3) - ((2 * (v336 ^ 0xA3)) & 0x12)) << 24) - 1996488704) ^ 0x89000000;
  unsigned int v339 = v338 - ((2 * v338) & 0xD6000000);
  HIDWORD(v286) = byte_100291310[STACK[0x4C0] ^ 0xF1];
  LODWORD(v286) = ~HIDWORD(v286) << 24;
  int v340 = (v286 >> 25) - ((2 * (v286 >> 25)) & 0xFFFFFFE3) + 113;
  unsigned int v341 = (v339 - 336401922) ^ 0xEBF2E9FE | (v337 - 1567521799) ^ 0xA29183F9;
  unsigned int v342 = (v341 - ((2 * v341) & 0x10145B9E) + 134884815) ^ 0x80A2DCF | ((v340 ^ 0xE4)
                                                                     - ((2 * (v340 ^ 0xE4)) & 0xF8)
                                                                     - 1149984900) ^ 0xBB749F7C;
  int v343 = v342 - ((2 * v342) & 0x2DA6F382) - 1764525631;
  LOBYTE(v339) = ((2 * (STACK[0x3BC] & 0x10 ^ 0x14)) | 0xA) - (STACK[0x3BC] & 0x10 ^ 0x14) + 123;
  LODWORD(v330) = byte_100285440[STACK[0x480] ^ 0x5B] ^ 0xA5;
  LODWORD(v330) = (((v330 - ((2 * v330) & 0x2A) + 5228056) << 8) - 768) ^ 0x4FC61500;
  int v344 = (v330 - ((2 * v330) & 0x463C4A00) - 1558305380) ^ 0xA31E259C | (v319 - ((2 * v319) & 0xD8D83E2) + 113689073) ^ 0x6C6C1F1;
  LODWORD(v330) = v344 - ((2 * v344) & 0xE4BD42) - 2139988319;
  unsigned int v345 = ((((v343 ^ 0x9F3A5AE7) >> (v339 ^ 0x81))
         - ((2 * ((v343 ^ 0x9F3A5AE7) >> (v339 ^ 0x81))) & 0xE3369C98)
         + 1906003532) ^ 0x719B4E4C) >> (v339 ^ 0x91);
  int v346 = (v345 - ((2 * v345) & 0x7C) - 66);
  unsigned int v347 = ((v346 ^ 0x33 | 0xB1CBF6B2) - (v346 ^ 0x33 | 0x4E34094D) + 1312033101) ^ 0xB1CBF6F7;
  int v348 = (v347 - 2 * ((v347 + 948153558) & 0x2C905D3F ^ v347 & 1) + 1695812116) ^ dword_100284B40[v346 ^ 0x91];
  HIDWORD(v286) = v348 ^ 0x2D17;
  LODWORD(v286) = v348 ^ 0xA2E10000;
  LODWORD(v336) = dword_100284320[v336 ^ 6];
  int v349 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0xA2EC4B22) - 780786287;
  HIDWORD(v286) = v336 ^ 0x61;
  LODWORD(v286) = v336 ^ 0x9F282200;
  LODWORD(v336) = (v286 >> 8) - ((2 * (v286 >> 8)) & 0x758C1DA2) - 1161425199;
  LODWORD(v328) = dword_10026F9A0[v328 ^ 0xEC];
  HIDWORD(v286) = v328 ^ 0xD66DF5;
  LODWORD(v286) = v328 ^ 0x49000000;
  unsigned int v350 = ((2 * (v340 ^ 0xA)) & 0x19E) + (v340 ^ 0xFCEFB9C5);
  int v351 = v336 ^ dword_100284B40[v340 ^ 0xED] ^ ((v286 >> 24)
                                                               - ((2 * (v286 >> 24)) & 0xB7612CF2)
                                                               - 609184135) ^ (v350
                                                                             - 1237668363
                                                                             + ((2 * v350 + 1550) & 0x5DA ^ 0x8EFAAFFF)) ^ v330 ^ v349;
  unsigned int v352 = v334 ^ 0xB9B746BD ^ v351;
  LODWORD(STACK[0x4C0]) = v352;
  unsigned int v353 = v327 ^ 0xA513B55F ^ v352;
  unsigned int v354 = v353 ^ v343;
  LODWORD(STACK[0x480]) = v353;
  LODWORD(v328) = ((v353 ^ v343) & 1) + ((v353 ^ v343) & 0xFE ^ 0x36C1B2F9) - 1;
  LODWORD(v328) = dword_100281B90[((v328 & 0x228120BC ^ 0x2002C)
                                 + (v328 ^ 0x7AA9BED2)
                                 - ((v328 ^ 0x7AA9BED2) & 0x48000CBC)) ^ 0x26EB204B];
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x3F0]) ^ 0x5D2A35F2;
  HIDWORD(v286) = v328 ^ 0x1F8;
  LODWORD(v286) = v328 ^ 0xF0A1D000;
  LODWORD(v328) = (v286 >> 9) - ((2 * (v286 >> 9)) & 0xDCDC9286) - 294762173;
  LODWORD(v336) = dword_10026F9A0[(((2 * (BYTE1(v354) ^ 0xA02A35F4)) | 0x5FBC54EE)
                                 - (BYTE1(v354) ^ 0xA02A35F4)
                                 - 803089015) ^ 0x8FF41F3C];
  HIDWORD(v286) = v336 ^ 0xD66DF5;
  LODWORD(v286) = v336 ^ 0x49000000;
  LODWORD(v336) = (v286 >> 24) - ((2 * (v286 >> 24)) & 0xE1664242);
  unsigned int v355 = ((HIWORD(v354) & 0xCC) + (BYTE2(v354) ^ 0xFFFFFFEF) + (BYTE2(v354) | 0x2622B333) + 1) ^ 0x36273923;
  int v356 = dword_100281B90[(v355 - ((2 * v355) & 0x5FD0DD4E) - 1343721817) ^ 0xBFEDE425];
  HIDWORD(v286) = v356 ^ 0x1F8;
  LODWORD(v286) = v356 ^ 0xF0A1D000;
  int v357 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x961711D8) + 1259047148;
  LODWORD(v330) = (((2 * v357) ^ 0x961711D8) - ((2 * ((2 * v357) ^ 0x961711D8)) & 0xBA969BC) + 97826014) & 0x32119686 ^ 0x32018204;
  int v358 = ((v330 | 0xEDD60413) - (v330 | 0x1229FBEC) + 304741356) ^ v357;
  HIDWORD(v286) = v358 ^ 0xDFF;
  LODWORD(v286) = v358 ^ 0x95480000;
  int v359 = (v286 >> 16) + 1246092075 + (~(2 * (v286 >> 16)) | 0x6B7449AB);
  int v360 = v353 ^ v343 ^ 0x675AB6CD;
  int v361 = dword_10026F9A0[((v353 ^ v343) >> 24) ^ 0x9C];
  HIDWORD(v286) = v361 ^ 0xF5;
  LODWORD(v286) = v361 ^ 0x49D66D00;
  int v362 = v328 ^ (v336 - 256696031) ^ ((v286 >> 8) - ((2 * (v286 >> 8)) & 0xC59CFB02) - 489783935) ^ (((2 * v328) ^ 0xDCDC9286) - 2 * (((2 * v328) ^ 0xDCDC9286) & 0x183A7C1E ^ (2 * v328) & 0x10) + 406486030) & 0x32119686 ^ 0xB3B03983 ^ v359;
  int v363 = v362 ^ v334;
  unsigned int v364 = v360 ^ v353 ^ v363;
  int v365 = v360;
  LODWORD(STACK[0x468]) = v360;
  LODWORD(v336) = v364 ^ 0x51D1F988;
  int v366 = ((v364 ^ 0x51D1F988) >> 16);
  LODWORD(v330) = (((2 * (v366 ^ 0x2D)) & 0x1E8) - (v366 ^ 0x2D) + 8971) ^ 0x2398;
  unsigned int v367 = ((v366 ^ 0x26 | 0x30CC997) - (v366 ^ 0x26 | 0xFCF33668) - 51169688) ^ 0x829C7F7;
  int v368 = (v330 - ((2 * v330 + 1896307116) & 0x41061542) + 1617868663) ^ dword_100284B40[(((2 * v367) | 0x64C4000C)
                                                                                       - v367
                                                                                       - 845283334) ^ 0x39470E19];
  HIDWORD(v286) = v368 ^ 0x7A88;
  LODWORD(v286) = v368 ^ 0xA99A0000;
  int v369 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0xEFAE390A) - 136897403;
  LOWORD(v330) = (v364 & 7 ^ 0xC607) - (v364 & 7) + (v364 ^ 0xE8);
  unsigned int v370 = (((2 * (BYTE1(v336) ^ 0x42022841)) & 0x40041B2) - (BYTE1(v336) ^ 0x42022841) - 36484826) ^ 0xBFD16130;
  int v371 = dword_10026F9A0[HIBYTE(v364) ^ 0xB4];
  HIDWORD(v286) = v371 ^ 0xF5;
  LODWORD(v286) = v371 ^ 0x49D66D00;
  int v372 = (v286 >> 8) - ((2 * (v286 >> 8)) & 0xD93D0B02);
  LODWORD(v336) = (((((v336 >> 8) & 0x19) + (BYTE1(v336) ^ 0xB9)) | 0xB5353E00)
                 - ((BYTE1(v336) ^ 0xB9) & 0x19)) ^ 0xA255B62B;
  LODWORD(v336) = (v370 - ((2 * v370 + 1896307116) & 0x410BF4F0) + 476161870) ^ dword_100284B40[(((2 * v336) | 0x408D5500)
                                                                                               - v336
                                                                                               - 541502080) ^ 0x372622BB];
  HIDWORD(v286) = v336 ^ 0xAC8A51;
  LODWORD(v286) = v336 ^ 0x6D000000;
  int v373 = (v372 - 325155455) ^ dword_100284320[((v330 & 0x2B5 ^ 0x24403091) + (v330 & 0x14A ^ 0x1008040B) - 1) ^ 0x344836C1];
  LODWORD(STACK[0x320]) = v351;
  int v374 = v373 ^ v362 ^ v351 ^ v369 ^ ((v286 >> 24) - ((2 * (v286 >> 24)) & 0x3735B9F6) - 1684349701);
  int v375 = v374 ^ v363;
  unsigned int v376 = v374 ^ 0xCD5B5AB5;
  LODWORD(STACK[0x428]) = v374 ^ 0xCD5B5AB5;
  unsigned int v377 = v374 ^ v363 ^ 0xC6C82B2E;
  int v378 = ((unsigned __int16)(v377 ^ v360) >> 8);
  LODWORD(v330) = ((2 * (v378 ^ 0xD)) & 0x14A) - (v378 ^ 0xD) + 260455002;
  unsigned int v379 = ((2 * ((v377 ^ v365) >> 8)) ^ 0xE0FD8)
       - 2 * (((2 * ((v377 ^ v365) >> 8)) ^ 0xE0FD8) & 0x76 ^ (2 * ((v377 ^ v365) >> 8)) & 4)
       + 882;
  unsigned int v380 = (((v379 & 0x88888888 ^ 0x4B) + (v379 & 0x124 ^ 0x121) + 510) & 0x1AC ^ 0x188) + (v378 ^ 0x3883ACF2);
  unsigned int v381 = (v380 - 1071038318 + ((2 * v380) & 0x122 ^ 0xFFFDFFFF)) ^ dword_100284B40[((v330 & 0x1863110 ^ 0xE068C100)
                                                                                  + (v330 ^ 0xB863A3B)
                                                                                  - ((v330 ^ 0xB863A3B) & 0x110)) ^ 0xE5EEF1BF];
  HIDWORD(v286) = v381 ^ 0x5830B8;
  LODWORD(v286) = v381 ^ 0x4E000000;
  int v382 = dword_100281B90[((v377 ^ v365) >> 24) ^ 0x55];
  int v383 = (v286 >> 24) - ((2 * (v286 >> 24)) & 0x6D8AB1C6) - 1228580637;
  HIDWORD(v286) = v382 ^ 0x1F8;
  LODWORD(v286) = v382 ^ 0xF0A1D000;
  int v384 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x7AED1A6C) - 1116304074;
  LODWORD(v330) = (((2 * v384) ^ 0x7AED1A6C) - ((2 * ((2 * v384) ^ 0x7AED1A6C)) & 0x8D75444) + 611035683) & 0x32119686 ^ 0x12119484;
  LODWORD(v330) = ((v330 | 0xD117EFF7) - (v330 | 0x2EE81008) + 786960392) ^ 0xE585DF79;
  int v385 = (v330 - ((2 * v330) & 0x2DAA823C) + 383074590) ^ v384;
  HIDWORD(v286) = v385 ^ 0xA2;
  LODWORD(v286) = v385 ^ 0xACA57D00;
  int v386 = (v286 >> 8) - ((2 * (v286 >> 8)) & 0x11F4DDE8) - 1996853516;
  int v387 = v377 ^ v365 ^ 0xE5139EF;
  unsigned int v388 = (((v377 ^ v365) ^ 0xE4)
        + ((v377 ^ v365) & 0x41 ^ 0xEB905901)
        - (((v377 ^ v365) ^ 0xE4) & 0x41)) ^ 0x7AB04959;
  LODWORD(v336) = dword_100284320[((v377 ^ v365) >> 16) ^ 0xAB];
  HIDWORD(v286) = v336 ^ 0x2261;
  LODWORD(v286) = v336 ^ 0x9F280000;
  int v389 = dword_10026F9A0[((v388 | 0x82CD633D) - (v388 | 0x7D329CC2) + 2100468930) ^ 0x13ED73B3] ^ ((v286 >> 16)
                                                                                                 - ((2 * (v286 >> 16)) & 0x34B5C6BE)
                                                                                                 - 1705319585) ^ v376 ^ v383 ^ 0x8452D4E4 ^ v386;
  unsigned int v390 = v353 ^ v363 ^ 0xC4779593 ^ v377;
  LODWORD(STACK[0x380]) = v390;
  LODWORD(STACK[0x3BC]) = v375 ^ 0x945F48FB;
  unsigned int v391 = v390 ^ v375 ^ 0x945F48FB ^ v389;
  int v392 = (v390 ^ v375 ^ 0xFB ^ v389 ^ v387) ^ 0x77;
  unsigned int v393 = ((v392 | 0xE51FCE22) - (v392 | 0x1AE031DD) + 450900445) ^ 0xC955C206;
  int v394 = dword_100281B90[((v393 | 0x6918E8C9) - (v393 | 0x96E71736) - 1763240138) ^ 0x4552E489];
  HIDWORD(v286) = v394 ^ 0x1F8;
  LODWORD(v286) = v394 ^ 0xF0A1D000;
  LODWORD(v328) = (v286 >> 9) - ((2 * (v286 >> 9)) & 0xF5DFAF6E) - 84944969;
  int v395 = (((2 * v328) ^ 0xF5DFAF6E) - 2 * (((2 * v328) ^ 0xF5DFAF6E) & 0x1CB6787A ^ (2 * v328) & 0x10) + 1018591339) & 0x32119686 ^ 0x110606;
  int v396 = dword_100281B90[((((v391 ^ v387) >> 8) & 0x56 ^ 0x545) + (((v391 ^ v387) >> 8) & 0xA9) - 1) ^ 0x528];
  unsigned int v397 = (v395 - ((2 * v395) & 0x40030800) + 1745480801) & 0xF21FFEC6;
  HIDWORD(v286) = v396 ^ 0x1F8;
  LODWORD(v286) = v396 ^ 0xF0A1D000;
  int v398 = (v286 >> 9) - ((2 * (v286 >> 9)) & 0x50FD3674) + 679385914;
  int v399 = (((2 * v398) ^ 0x50FD3674) - 2 * (((2 * v398) ^ 0x50FD3674) & 0x5C5549E ^ (2 * v398) & 2) + 96818332) & 0x32119686 ^ 0x22100206;
  int v400 = (((((2 * v399) & 0x240C) - v399 + 2052689400) & 0x32088A28 ^ 0x21200001 | (((2 * v399) & 0x240C)
                                                                                  - v399
                                                                                  + 2052689400) & 0x1775D6)
        - 1) ^ v398;
  HIDWORD(v286) = v400 ^ 0xD297C2;
  LODWORD(v286) = v400 ^ 0x18000000;
  int v401 = (v286 >> 24) - ((2 * (v286 >> 24)) & 0xE2BE673C) + 1902064542;
  __int16 v402 = (((v391 ^ v387) >> 16) & 0x79 ^ 0x648) + (((v391 ^ v387) >> 16) & 0x86 ^ 7) - 1;
  int v403 = ((v402 & 0x575 ^ 0x26EC100) + (v402 & 0x28A ^ 0x20012089) - 1) ^ 0x226FE7AD;
  int v404 = (v403 - ((2 * v403 + 285694380) & 0x19025374) + 84203152) ^ dword_100284B40[((((v391 ^ v387) >> 16) & 0xE6 ^ 0x245)
                                                                                    - (((v391 ^ v387) >> 16) | 0x3E6)
                                                                                    + 1022) & 0x3FF ^ 0x2D1];
  HIDWORD(v286) = v404 ^ 0x5993;
  LODWORD(v286) = v404 ^ 0x42F00000;
  int v405 = (v286 >> 16) - ((2 * (v286 >> 16)) & 0x5FAF12AE) + 802654551;
  int v406 = dword_100284320[((v391 ^ v387) >> 24) ^ 0x49];
  HIDWORD(v286) = v406 ^ 0x61;
  LODWORD(v286) = v406 ^ 0x9F282200;
  int v407 = v328 ^ ((v286 >> 8) - ((2 * (v286 >> 8)) & 0xCBEDB924) - 436806510) ^ v397 ^ v405 ^ 0x755FCD16 ^ v401;
  int v408 = v375 ^ 0x1069B46 ^ v407;
  LODWORD(STACK[0x310]) = v387;
  unsigned int v409 = v408 ^ v387;
  unsigned int v410 = v408 ^ v387 ^ 0xA4BF9D33;
  int v411 = LODWORD(STACK[0x448]) ^ LODWORD(STACK[0x444]);
  int v412 = LODWORD(STACK[0x3D4]) ^ v411;
  int v413 = STACK[0x464];
  int v414 = LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x464]);
  LODWORD(STACK[0x368]) = v414;
  int v415 = LODWORD(STACK[0x3D0]) ^ v414;
  int v416 = LODWORD(STACK[0x3CC]) ^ v414;
  int v417 = LODWORD(STACK[0x3A0]) ^ v414;
  int v418 = LODWORD(STACK[0x39C]) + 2;
  int v419 = LODWORD(STACK[0x37C]) ^ v411;
  int v420 = LODWORD(STACK[0x378]) ^ v411;
  LODWORD(STACK[0x2D0]) = v412;
  if (v235) {
    int v421 = v419;
  }
  else {
    int v421 = v412;
  }
  LODWORD(STACK[0x3D4]) = v421;
  LODWORD(STACK[0x2BC]) = v420;
  if (v235) {
    int v422 = v420;
  }
  else {
    int v422 = v419;
  }
  LODWORD(STACK[0x308]) = v422;
  int v423 = LODWORD(STACK[0x374]) ^ v414;
  int v424 = STACK[0x550];
  if (!v235) {
    int v424 = STACK[0x404];
  }
  LODWORD(STACK[0x568]) = v424;
  int v425 = STACK[0x4A0];
  if (v235) {
    int v425 = STACK[0x408];
  }
  LODWORD(STACK[0x374]) = v425;
  int v426 = STACK[0x3AC];
  if (v235) {
    int v426 = STACK[0x3C8];
  }
  LODWORD(STACK[0x458]) = v426;
  int v427 = STACK[0x3D8];
  if (v235) {
    int v427 = STACK[0x3B0];
  }
  LODWORD(STACK[0x3C0]) = v427;
  LODWORD(STACK[0x2B8]) = v415;
  LODWORD(STACK[0x2B4]) = v416;
  if (v235) {
    int v416 = v415;
  }
  LODWORD(STACK[0x3D0]) = v416;
  LODWORD(STACK[0x2B0]) = v417;
  LODWORD(STACK[0x2A8]) = v423;
  if (v235) {
    int v428 = v417;
  }
  else {
    int v428 = v423;
  }
  LODWORD(STACK[0x3CC]) = v428;
  LODWORD(STACK[0x548]) = v418;
  BOOL v429 = v418 == -776490363;
  int v430 = dword_100284320[(((v410 >> 8) & 0xF4 ^ 0x21) - ((v410 >> 8) & 0xB) - 995961078) ^ 0xC4A2D7C9];
  if (v418 == -776490363) {
    unsigned int v431 = v275;
  }
  else {
    unsigned int v431 = v273;
  }
  LODWORD(STACK[0x470]) = v431;
  if (v418 == -776490363) {
    unsigned int v432 = v273;
  }
  else {
    unsigned int v432 = v275;
  }
  LODWORD(STACK[0x36C]) = v432;
  HIDWORD(v433) = v430 ^ 0x282261;
  LODWORD(v433) = v430 ^ 0x9FFFFFFF;
  int v434 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x580FAA7E) + 738710847;
  unsigned int v435 = (((2 * (BYTE2(v410) ^ 0x442001AB)) | 0xCD113030) - (BYTE2(v410) ^ 0x442001AB) - 1720227864) ^ 0x22A89993;
  int v436 = (v435 - ((2 * v435 + 17258924) & 0x3893860) - 95926010) ^ dword_100284B40[(((BYTE2(v410) ^ 0x328AD711) & 0x36F ^ 0x10086F)
                                                                                  + ((BYTE2(v410) ^ 0x328AD711) & 0x10020490 ^ 0xC0450011)
                                                                                  - 1) ^ 0xD0570FA9];
  int v437 = v409 ^ 0x3EB0AF43;
  HIDWORD(v433) = v436 ^ 0xEC19;
  LODWORD(v433) = v436 ^ 0x4FB50000;
  int v438 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x72E0F360) + 963672496;
  int v439 = dword_10026F9A0[HIBYTE(v409) ^ 0xA0];
  HIDWORD(v433) = v439 ^ 0xF5;
  LODWORD(v433) = v439 ^ 0x49D66D00;
  unsigned int v440 = (((2 * (v410 ^ 0xF6)) & 0xC2) - (v410 ^ 0xF6) - 666580322) ^ 0xD065C89C;
  int v441 = dword_100281B90[(((2 * v440) & 0x6AA) - v440 - 1385841494) ^ 0xA544BEC6];
  int v442 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xA8DCC41A);
  HIDWORD(v433) = v441 ^ 0x1F8;
  LODWORD(v433) = v441 ^ 0xF0A1D000;
  int v443 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x91925C9C) - 926339506;
  unsigned int v444 = v434 ^ (v442 - 730963443) ^ v443 ^ v389 ^ v407 ^ v438 ^ 0xD2B04256 ^ (((((2 * v443) ^ 0x91925C9C)
                                                                               - ((2 * ((2 * v443) ^ 0x91925C9C)) & 0x32811E80)
                                                                               + 423661376) & 0x32119686 ^ 0x19E206CF)
                                                                             - 1);
  unsigned int v445 = v444 ^ v391 ^ 0xD4079423;
  LODWORD(STACK[0x3A0]) = v445;
  unsigned int v446 = v445 ^ v437;
  unsigned int v447 = ((HIBYTE(v446) ^ 0x51) + 2026814576 + ((2 * (HIBYTE(v446) ^ 0x51) + 428) & 0x33333333 ^ 0xFFF9E7FF)) ^ dword_100284B40[HIBYTE(v446) ^ 0xB6];
  HIDWORD(v433) = v447 ^ 0xB0;
  LODWORD(v433) = v447 ^ 0xCE3A7F00;
  int v448 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0x9E8C3120) - 817489776;
  int v449 = ((HIWORD(v446) & 0xB7 ^ 0x1CD33390) + (HIWORD(v446) & 0x48 ^ 9) - 1) ^ 0x3DD233F7;
  int v450 = ((v446 & 0xD3 ^ 0x3895B8D2) + (v446 & 0x2C ^ 0xD) - 1) ^ 0x5E753B92;
  int v451 = dword_10026F9A0[(v449 - ((2 * v449) & 0x2098C) - 859353914) ^ 0xEDC64C82];
  HIDWORD(v433) = v451 ^ 0x6DF5;
  LODWORD(v433) = v451 ^ 0x49D60000;
  int v452 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x9C1EE9A6) + 1309635795;
  int v453 = dword_100284320[(((2 * (BYTE1(v446) ^ 0x202400A3)) | 0xA9A967C2) - (BYTE1(v446) ^ 0x202400A3) - 1423225825) ^ 0x74F0B379];
  HIDWORD(v433) = v453 ^ 0x282261;
  LODWORD(v433) = v453 ^ 0x9FFFFFFF;
  int v454 = v452 ^ dword_100284B40[(v450 - ((2 * v450) & 0x48011FE4) + 1025220594) ^ 0x5BFB1CFF] ^ ((v433 >> 24)
                                                                                               - ((2 * (v433 >> 24)) & 0x8345BEB8)
                                                                                               - 1046290596) ^ (((v445 ^ v437) ^ 0xA6) - ((2 * ((v445 ^ v437) ^ 0xA6) + 285694380) & 0x110000B8) + 1097314098) ^ v448;
  int v455 = v454 ^ v408;
  int v456 = v454 ^ v408 ^ 0x1644779A ^ v444 ^ v391;
  LODWORD(STACK[0x350]) = v456;
  unsigned int v457 = v454 ^ v408 ^ 0x1644779A ^ v437;
  int v458 = dword_100281B90[HIBYTE(v457) ^ 0xA8];
  HIDWORD(v433) = v458 ^ 0x1F8;
  LODWORD(v433) = v458 ^ 0xF0A1D000;
  int v459 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x2E1FA1FC) - 1760571138;
  unsigned int v460 = (((((2 * v459) ^ 0x2E1FA1FC) - ((2 * ((2 * v459) ^ 0x2E1FA1FC)) & 0x3DDBECB0) + 1055782489) & 0x32119686 ^ 0xE16F59AF)
        - 1) & 0xB25397A6 ^ v459;
  unsigned int v461 = ((v457 ^ 0x2D215A01 | 0xF379C55B)
        - (v457 ^ 0x2D215A01 | 0xC863AA4)
        + 210123428) ^ 0xDE589FFE;
  unsigned int v462 = (((2 * (v457 ^ 0xC3BCE4C3)) | 0x82E624F0) - (v457 ^ 0xC3BCE4C3) + 1049423240) ^ 0x2CFF6F8;
  HIDWORD(v433) = v460 ^ 0xDA;
  LODWORD(v433) = v460 ^ 0x4C9C000;
  int v463 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0x47FFCC32) + 603973145;
  unsigned int v464 = (((2 * (BYTE2(v457) ^ 0xF7)) & 0x1D6) - (BYTE2(v457) ^ 0xF7) - 50143212) ^ 0xCF12A01D;
  int v465 = dword_100281B90[(((2 * v464) | 0x7DCECAC) - v464 + 2081524138) ^ 0xB1FE3626];
  HIDWORD(v433) = v465 ^ 0x1F8;
  LODWORD(v433) = v465 ^ 0xF0A1D000;
  int v466 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0xB91AC308) - 594714236;
  unsigned int v467 = (((2 * v466) ^ 0xB91AC308) - 2 * (((2 * v466) ^ 0xB91AC308) & 0x14904B7E ^ (2 * v466) & 4) + 345000826) & 0x32119686 ^ 0x2A71E702;
  unsigned int v468 = ((v467 | 0xD622F6A9) - (v467 | 0x29DD0956) + 702351702) ^ v466;
  int v469 = v457 ^ 0x19EA2CCC;
  LODWORD(STACK[0x39C]) = v457 ^ 0x19EA2CCC;
  int v470 = BYTE1(v457);
  unsigned int v471 = ((v470 ^ 0xCC) - ((2 * (v470 ^ 0xCC)) & 0x194) + 660592074) ^ 0xA78AD1AC;
  int v472 = (v471 - ((2 * v471) & 0x2A00EC) - 130213770) ^ 0x78E81CD8;
  HIDWORD(v433) = v468 ^ 0xE5AF;
  LODWORD(v433) = v468 ^ 0x314A0000;
  int v473 = (v433 >> 16) - ((2 * (v433 >> 16)) & 0x12DAD50) - 2137598296;
  unsigned int v474 = ((v470 ^ 0x7F | 0xC4A086B0) - (v470 ^ 0x7F | 0x3B5F794F) + 996112719) ^ 0xCCA0DA7C;
  int v475 = (v472 - ((2 * v472 + 285694380) & 0x12057402) - 2121898281) ^ dword_100284B40[(v474
                                                                                      - ((2 * v474) & 0x3AC12814)
                                                                                      + 1566610442) ^ 0x5560C85A];
  HIDWORD(v433) = v475 ^ 0x73CA28;
  LODWORD(v433) = v475 ^ 0xC7FFFFFF;
  int v476 = v463 ^ dword_100284B40[v462];
  int v477 = v454 ^ v444;
  int v478 = v476 ^ v454 ^ v444 ^ (v461 - ((2 * v461 + 822565292) & 0x2651C0A8) + 195857706) ^ ((v433 >> 24)
                                                                                          - ((2 * (v433 >> 24)) & 0x7E273F48)
                                                                                          - 1089232988) ^ v473;
  int v479 = v454 ^ v408 ^ 0x79F99472 ^ v478;
  LODWORD(STACK[0x378]) = v479;
  int v480 = v479 ^ v456;
  unsigned int v481 = v479 ^ v456 ^ 0xBA8F1620;
  LODWORD(STACK[0x340]) = v481;
  unsigned int v482 = v481 ^ v469;
  unsigned int v483 = ((2 * ((v481 ^ v469) ^ 0x4C)) | 0xB1B907CE)
       - ((v481 ^ v469) ^ 0x4C)
       + 656636953;
  unsigned int v484 = ((((v481 ^ v469) >> 8) & 0x49 ^ 0xE71B5001) + (((v481 ^ v469) >> 8) & 0xB6 ^ 0x93) - 1) ^ 0x8F3BD249;
  int v485 = dword_10026F9A0[((v484 | 0x72E3508A) - (v484 | 0x8D1CAF75) - 1927499915) ^ 0x1AC3D212];
  HIDWORD(v433) = v485 ^ 0xD66DF5;
  LODWORD(v433) = v485 ^ 0x49000000;
  int v486 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0xE883936C) - 197015114;
  unsigned int v487 = v482 ^ 0x97202FCF;
  LODWORD(STACK[0x328]) = v482 ^ 0x97202FCF;
  unsigned int v488 = HIBYTE(v482) ^ 0xDF;
  LOWORD(v482) = (BYTE2(v482) ^ 0x43) + 22620 - ((2 * (BYTE2(v482) ^ 0x43)) & 0x1DA) + 3217;
  int v489 = dword_10026F9A0[v488];
  HIDWORD(v433) = v489 ^ 0xF5;
  LODWORD(v433) = v489 ^ 0x49D66D00;
  int v490 = dword_100281B90[((v482 & 0x7F9 ^ 0x8498618) + (v482 & 6 ^ 0x22021805) - 1) ^ 0x2A4B9A4C];
  int v491 = v486 ^ dword_10026F9A0[v483 ^ 0xD8DC831D] ^ ((v433 >> 8) - ((2 * (v433 >> 8)) & 0xFAA454E8) - 44946828);
  HIDWORD(v433) = v490 ^ 0x1F8;
  LODWORD(v433) = v490 ^ 0xF0A1D000;
  int v492 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0x75CC1820) + 988154896;
  int v493 = (((2 * v492) ^ 0x75CC1820) - ((2 * ((2 * v492) ^ 0x75CC1820)) & 0x385F505C) + 1009756207) & 0x32119686 ^ 0x32238042;
  unsigned int v494 = ((v493 | 0x458E86CF) - (v493 | 0xBA717930) - 1166968528) ^ v492;
  HIDWORD(v433) = v494 ^ 0x1D19;
  LODWORD(v433) = v494 ^ 0x7CCE0000;
  int v495 = v491 ^ ((v433 >> 16) - ((2 * (v433 >> 16)) & 0xDB352FDE) - 308635665);
  unsigned int v496 = v495 ^ v478 ^ 0x95C97A2E;
  int v497 = v495 ^ v455 ^ 0x1C18024E;
  unsigned int v498 = v497 ^ v480 ^ 0xA4B9E383;
  LODWORD(STACK[0x2D4]) = v498;
  int v499 = v497;
  LODWORD(STACK[0x2AC]) = v497;
  unsigned int v500 = v487 ^ v498;
  int v501 = dword_100281B90[(((2 * v500) & 0x10A) - v500 + 1402) ^ 0x53E];
  HIDWORD(v433) = v501 ^ 0x1F8;
  LODWORD(v433) = v501 ^ 0xF0A1D000;
  int v502 = (v433 >> 9) - ((2 * (v433 >> 9)) & 0xC4AA5524) - 497735022;
  int v503 = dword_10026F9A0[HIBYTE(v500) ^ 3];
  unsigned int v504 = (((2 * v502) ^ 0xC4AA5524) - ((2 * ((2 * v502) ^ 0xC4AA5524)) & 0x149D23FC) + 709792255) & 0x32119686 ^ 0x2318508F;
  int v505 = ((2 * v504) & 0x4220211A) - v504 - 1840517342;
  unsigned int v506 = (((2 * (BYTE1(v500) ^ 0xB2)) | 0xB965B718) - (BYTE1(v500) ^ 0xB2) - 1555225484) ^ 0xC9B5996;
  HIDWORD(v433) = v503 ^ 0xF5;
  LODWORD(v433) = v503 ^ 0x49D66D00;
  int v507 = dword_100284320[(v506 - ((2 * v506) & 0xD0523846) + 1747524643) ^ 0x38009EC1];
  int v508 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xFC8B7E5A);
  HIDWORD(v433) = v507 ^ 0x282261;
  LODWORD(v433) = v507 ^ 0x9FFFFFFF;
  int v509 = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x33951520);
  int v510 = v500 ^ 0xB45E713;
  LODWORD(STACK[0x290]) = v500 ^ 0xB45E713;
  int v511 = BYTE2(v500);
  unsigned int v512 = ((BYTE2(v500) ^ 0xA1) - ((v500 >> 15) & 4) - 2077658110) ^ 0x872A74B3;
  unsigned int v513 = (((2 * (v511 ^ 5)) | 0xDCD34D18) - (v511 ^ 5) + 295065972) ^ 0xC6CCCC90;
  unsigned int v514 = (((2 * v513) | 0xA6541CDA) - v513 - 1395265133) ^ 0x7B8F64A4;
  int v515 = (v514 - ((2 * v514 + 17258924) & 0xBF2F642) - 1099094025) ^ dword_100284B40[(((2 * v512) & 0x60407D8)
                                                                                    - v512
                                                                                    + 1215671315) ^ 0x4B76AC34];
  HIDWORD(v433) = v515 ^ 0xB08;
  LODWORD(v433) = v515 ^ 0xB880000;
  int v516 = v502 ^ (v508 + 2118500141) ^ (v509 + 432704144) ^ v496 ^ ((v433 >> 16)
                                                                 - ((2 * (v433 >> 16)) & 0x4E1F1446)
                                                                 - 1492153821) ^ 0x911A9642 ^ v505;
  HIDWORD(v433) = STACK[0x410];
  LODWORD(v433) = LODWORD(STACK[0x494]) ^ 0xA1FA793A;
  int v517 = (v433 >> 1) - ((2 * (v433 >> 1)) & 0xD80459BA) - 335401763;
  HIDWORD(v433) = v478 ^ ~LODWORD(STACK[0x438]);
  LODWORD(v433) = v478 ^ LODWORD(STACK[0x438]) ^ 0xA2E289A;
  int v518 = ((v433 >> 1) - ((2 * (v433 >> 1)) & 0x1684D0EA) - 1958582155) ^ v517;
  HIDWORD(v433) = v518 ^ 0x674044A8;
  LODWORD(v433) = v518;
  int v519 = (v433 >> 31) - ((2 * (v433 >> 31)) & 0xF82D0F68) - 65632332;
  HIDWORD(v433) = LODWORD(STACK[0x488]) ^ 0x60;
  LODWORD(v433) = LODWORD(STACK[0x488]) ^ 0x95F84500;
  int v520 = (v433 >> 8) - ((2 * (v433 >> 8)) & 0xC509958A) + 1652869829;
  int v521 = v499 ^ 0x28976EA0 ^ v516;
  LODWORD(STACK[0x2C0]) = v516;
  int v522 = STACK[0x414];
  int v523 = 2 * ((v521 & STACK[0x414]) - ((2 * (v521 & STACK[0x414])) & 0xB8954D6)) - 1953934122;
  int v524 = v496 ^ v413;
  HIDWORD(v433) = v524 ^ 0x13;
  LODWORD(v433) = v524 ^ 0x1DD84700;
  int v525 = ((v433 >> 8) - ((2 * (v433 >> 8)) & 0x6F1B96B4) - 1215444134) ^ v520;
  HIDWORD(v433) = v525 ^ 0x9065C3;
  LODWORD(v433) = v525 ^ 0x58000000;
  LODWORD(STACK[0x294]) = (v433 >> 24) - ((2 * (v433 >> 24)) & 0x2206E8D4);
  unsigned int v526 = ((v521 + v522) ^ 0xD9BB7AFF)
       + ((2 * (v521 + v522)) & 0xB376F5FE)
       + (v523 ^ 0xAB8A7597)
       + ((2 * v523) & 0xBFF9BD7C ^ 0xE8EF56D3);
  LODWORD(STACK[0x2A0]) = v526 + 1 - 2 * ((v526 + 104948673) & 0x5A51B09F ^ (v526 + 1) & 6) + 1620251737;
  unsigned int v527 = (&unk_100280840 ^ 0xFF1FDDB9) + 14688839 + (STACK[0x418] & 0xFE3FBB60);
  int v528 = v480 ^ LODWORD(STACK[0x560]) ^ v516;
  int v529 = STACK[0x3C4];
  int v530 = LODWORD(STACK[0x3C4]) ^ v408 ^ v444;
  int v531 = v528 ^ v510;
  unsigned int v532 = (v527 ^ 0xDD63CF5D) + ((2 * v527) & 0xBAC79EBA) + 580661411 + (v528 ^ v510 ^ v530 ^ 0x61D87C9A);
  unsigned int v533 = (&unk_100280840 ^ 0xDF79E5F8) + 545659400 + (STACK[0x418] & 0xBEF3CBE0);
  unsigned int v534 = ((2 * (v531 ^ v530 ^ 0x442EF06D)) & 0xDF7DE4FE ^ 0x4B6D00EE) + (v531 ^ v530 ^ 0x8E668EE5);
  unsigned int v535 = (&unk_100280840 ^ 0xFEB4CFB3) + 21704781 + (STACK[0x418] & 0xFD699F60);
  unsigned int v536 = ((2 * v533) & 0xF477ACFA) + (v533 ^ 0xFA3BD67D) + v534;
  int v537 = v536 - 2 * ((v536 + 596400550) & 0x2099CED1 ^ v536 & 1) + 69609590;
  int v538 = v444 ^ LODWORD(STACK[0x3C4]);
  unsigned int v539 = ((2 * v535) & 0xAFFEC5DE) + (v535 ^ 0xD7FF62EF) + v534;
  LODWORD(STACK[0x318]) = (2 * v539 + 194091624) & 0x62786FB4;
  LODWORD(STACK[0x244]) = v539 - 1224407794;
  LODWORD(STACK[0x298]) = (v538 ^ ((v538 ^ 0xFB7574BB) - ((2 * (v538 ^ 0xFB7574BB) + 2) & 0x91C29D6E) + 1222725304) ^ 0x3D6320A7 ^ ((v538 ^ 0xDBECBA6B ^ v537) + (v537 ^ 0x2099CED0) + 1 - ((2 * ((v538 ^ 0xDBECBA6B ^ v537) + (v537 ^ 0x2099CED0) + 1)) & 0xE211CAA8) + 1896408404))
                        + (v537 ^ 0x2099CED0);
  LODWORD(STACK[0x2CC]) = LODWORD(STACK[0x4C0]) ^ 0xE3ADF147;
  unsigned int v540 = (((2 * v532) & 0x7FB7BECA)
        + (v532 ^ 0xBFDBDF65)
        - ((2 * (((2 * v532) & 0x7FB7BECA) + (v532 ^ 0xBFDBDF65)) + 458655354) & 0xAA986FC4)
        + 1660386079) ^ v538;
  int v541 = STACK[0x390];
  int v542 = LODWORD(STACK[0x468]) ^ 0x4B2E177A ^ LODWORD(STACK[0x390]);
  unsigned int v543 = LODWORD(STACK[0x480]) ^ 0xB34EFB50 ^ LODWORD(STACK[0x390]);
  if (v429) {
    int v544 = STACK[0x4F0];
  }
  else {
    int v544 = STACK[0x558];
  }
  LODWORD(STACK[0x414]) = v544;
  if (v429) {
    int v545 = STACK[0x3E8];
  }
  else {
    int v545 = STACK[0x3F8];
  }
  LODWORD(STACK[0x418]) = v545;
  int v546 = STACK[0x4C8];
  if (v429) {
    int v546 = STACK[0x4E0];
  }
  LODWORD(STACK[0x370]) = v546;
  int v547 = STACK[0x3A4];
  if (v429) {
    int v547 = STACK[0x3A8];
  }
  LODWORD(STACK[0x254]) = v547;
  if (v429) {
    int v548 = STACK[0x568];
  }
  else {
    int v548 = STACK[0x374];
  }
  if (v429) {
    int v549 = STACK[0x47C];
  }
  else {
    int v549 = STACK[0x4A8];
  }
  LODWORD(STACK[0x420]) = v549;
  int v550 = STACK[0x398];
  if (v429) {
    int v550 = STACK[0x570];
  }
  LODWORD(STACK[0x364]) = v550;
  if (v429) {
    int v551 = STACK[0x450];
  }
  else {
    int v551 = STACK[0x454];
  }
  if (v429) {
    int v552 = STACK[0x458];
  }
  else {
    int v552 = STACK[0x3C0];
  }
  if (v429) {
    int v553 = STACK[0x38C];
  }
  else {
    int v553 = STACK[0x394];
  }
  if (v429) {
    int v554 = STACK[0x4B8];
  }
  else {
    int v554 = STACK[0x4B0];
  }
  if (v429) {
    int v555 = STACK[0x478];
  }
  else {
    int v555 = STACK[0x4D8];
  }
  int v556 = STACK[0x3CC];
  if (!v429) {
    int v556 = STACK[0x3D0];
  }
  LODWORD(STACK[0x360]) = v556;
  if (v429) {
    int v557 = STACK[0x430];
  }
  else {
    int v557 = STACK[0x3DC];
  }
  if (v429) {
    int v558 = STACK[0x498];
  }
  else {
    int v558 = STACK[0x49C];
  }
  LODWORD(STACK[0x3F0]) = v558;
  if ((v540 & 1) == 0) {
    int v542 = v543;
  }
  LODWORD(STACK[0x274]) = v542;
  LODWORD(STACK[0x280]) = LODWORD(STACK[0x380]) ^ 0x8F08CF62;
  int v559 = STACK[0x388];
  int v560 = LODWORD(STACK[0x3BC]) ^ 0x56C5147F ^ LODWORD(STACK[0x388]);
  if ((v540 & 1) == 0) {
    int v560 = LODWORD(STACK[0x428]) ^ 0x1068C02 ^ LODWORD(STACK[0x388]);
  }
  LODWORD(STACK[0x2A4]) = v560;
  LODWORD(STACK[0x37C]) = v529 ^ 0x2D1CFA53 ^ v446;
  unsigned int v561 = v529 ^ 0xF1FB86E9 ^ LODWORD(STACK[0x3A0]);
  unsigned int v562 = v530 ^ 0x2208FF72;
  int v563 = v411 ^ 0x7FCEFFFB ^ v477;
  int v564 = v411 ^ 0x3AFA4A58 ^ LODWORD(STACK[0x39C]);
  unsigned int v565 = v411 ^ 0xE9B36DB4 ^ v455;
  LODWORD(STACK[0x29C]) = LODWORD(STACK[0x4F8]) ^ v411;
  int v566 = v411 ^ 0x6E7E65D9 ^ LODWORD(STACK[0x350]);
  unsigned int v567 = v529 ^ 0x899A5813 ^ LODWORD(STACK[0x328]);
  unsigned int v568 = v519 ^ 0xEEF5CB57;
  unsigned int v569 = v529 ^ 0xFD8C977C ^ LODWORD(STACK[0x340]);
  unsigned int v570 = v529 ^ 0xF0B14E7D ^ LODWORD(STACK[0x378]);
  if (v540) {
    int v571 = v563;
  }
  else {
    int v571 = v564;
  }
  if (v540) {
    int v563 = v565;
  }
  LODWORD(STACK[0x3A0]) = v563;
  if (v540) {
    unsigned int v572 = v566;
  }
  else {
    unsigned int v572 = v565;
  }
  if (v540) {
    int v573 = v564;
  }
  else {
    int v573 = v566;
  }
  LODWORD(STACK[0x39C]) = v573;
  int v574 = LODWORD(STACK[0x368]) ^ 0x7CC727E1 ^ LODWORD(STACK[0x2D4]);
  unsigned int v575 = LODWORD(STACK[0x3E0]) ^ 0x8AE6C4CF ^ LODWORD(STACK[0x2A0]);
  unsigned int v576 = v528 ^ 0xED8FD122;
  int v577 = STACK[0x368];
  int v578 = LODWORD(STACK[0x368]) ^ 0x7D0EEFC9 ^ LODWORD(STACK[0x290]);
  unsigned int v579 = v531 ^ 0xA7D2D027;
  int v580 = LODWORD(STACK[0x560]) ^ 0x299A2756 ^ LODWORD(STACK[0x2C0]);
  if (v540) {
    unsigned int v581 = v576;
  }
  else {
    unsigned int v581 = LODWORD(STACK[0x3E0]) ^ 0x8AE6C4CF ^ LODWORD(STACK[0x2A0]);
  }
  LODWORD(STACK[0x380]) = v581;
  if (v540) {
    unsigned int v582 = v531 ^ 0xA7D2D027;
  }
  else {
    unsigned int v582 = v576;
  }
  if (v540) {
    unsigned int v583 = v575;
  }
  else {
    unsigned int v583 = v580;
  }
  if (v540) {
    unsigned int v579 = v580;
  }
  LODWORD(STACK[0x328]) = v538;
  LODWORD(STACK[0x2A0]) = v561;
  if (v540) {
    unsigned int v584 = v561;
  }
  else {
    unsigned int v584 = v562;
  }
  LODWORD(STACK[0x3C4]) = v584;
  LODWORD(STACK[0x28C]) = v538 ^ 0xC909F954;
  if ((v540 & 1) == 0) {
    unsigned int v562 = v538 ^ 0xC909F954;
  }
  LODWORD(STACK[0x24C]) = v562;
  if (v540) {
    unsigned int v585 = v568;
  }
  else {
    unsigned int v585 = v567;
  }
  LODWORD(STACK[0x480]) = v585;
  LODWORD(STACK[0x270]) = v570;
  if (v540) {
    unsigned int v586 = v570;
  }
  else {
    unsigned int v586 = v568;
  }
  LODWORD(STACK[0x278]) = v569;
  if (v540) {
    unsigned int v587 = v567;
  }
  else {
    unsigned int v587 = v569;
  }
  LODWORD(STACK[0x26C]) = v574;
  LODWORD(STACK[0x250]) = v578;
  if (v540) {
    int v588 = v578;
  }
  else {
    int v588 = v574;
  }
  LODWORD(STACK[0x378]) = v588;
  LODWORD(STACK[0x4C0]) = v540;
  if ((v540 & 2) != 0) {
    unsigned int v589 = v586;
  }
  else {
    unsigned int v589 = v587;
  }
  LODWORD(STACK[0x2D4]) = v589;
  if ((v540 & 2) != 0) {
    unsigned int v586 = v587;
  }
  LODWORD(STACK[0x2C0]) = v586;
  LODWORD(STACK[0x248]) = v577 ^ 0x1C6B3216 ^ LODWORD(STACK[0x2AC]);
  LODWORD(STACK[0x240]) = (LODWORD(STACK[0x294]) + 285439082) ^ 0x9FA3CDC5;
  LODWORD(STACK[0x3E0]) = v557;
  LODWORD(STACK[0x468]) = v553;
  LODWORD(STACK[0x2AC]) = v553 ^ 0xE261BBA5;
  LODWORD(STACK[0x428]) = v548;
  LODWORD(STACK[0x290]) = v548 ^ 0x3C3F28A6;
  unsigned int v590 = (((v557 ^ 0x664AFA76) - ((2 * (v557 ^ 0x664AFA76) - 1059470582) & 0x92E897DE) + 702623092) ^ 0xDDD1284F)
       + (v548 ^ 0x3C3F28A6);
  LODWORD(STACK[0x340]) = v551;
  unsigned int v591 = ((v590 - ((2 * v590) & 0x6DE8979C) - 1225503794) ^ 0x6D9675D8) + (v554 ^ 0xE261BBA5);
  LODWORD(STACK[0x410]) = v552;
  LODWORD(STACK[0x350]) = v555;
  unsigned int v592 = (v591 ^ 0x6DFBEA7B) - 1845226107 + ((2 * v591) & 0xDBF7D4F6);
  LODWORD(STACK[0x368]) = v554;
  unsigned int v593 = (LODWORD(STACK[0x470]) ^ 0x52C7BAA7)
       + (v554 ^ 0x6C848DDD ^ ((v553 ^ 0xE261BBA5) - ((2 * (v553 ^ 0xE261BBA5) + 400437652) & 0x1DCA6CF0) - 1428926654))
       + 1;
  int v594 = 2 * (((2 * v593) & 0x77BF7FFA) + (v593 ^ 0x7BDFBFFD)) + 138444806;
  int v595 = ((2 * v594) & 0x25FFFBD4)
       + (v594 ^ 0x12FFFDEB)
       - ((2 * (((2 * v594) & 0x25FFFBD4) + (v594 ^ 0x12FFFDEB)) + 465397550) & 0x299A80EC)
       + 44823565;
  unsigned int v596 = ((v555 ^ v552 ^ ((v551 ^ 0x3238999B) - ((2 * (v551 ^ 0x3238999B) + 99801830) & 0x8CA74958) - 917695969)) >> 1) ^ 0x77F97B6A;
  int v597 = ((v592 >> 1) ^ 0x2F72F5BB)
       + (v592 & 0x5EE5EB76)
       - 2
       * ((((v592 >> 1) ^ 0x2F72F5BB) + (v592 & 0x5EE5EB76) + 407258144) & 0x1F49AD2F ^ (((v592 >> 1) ^ 0x2F72F5BB)
                                                                                       + (v592 & 0x5EE5EB76)) & 7)
       + 932180296;
  int v598 = (void *)STACK[0xA18];
  int v599 = 1980530059
       - (*(void *)(STACK[0xA18]
                    + 8
                    * ((*(void *)(STACK[0xA18]
                                  + 8 * (*(void *)(STACK[0xA18] + 8 * ((*(_DWORD *)STACK[0xA18] & 1) == 0)) & 1)) & 1) == 0)) & 1);
  unsigned int v600 = (v599 ^ 0x49FBC254) - 1021761605 + ((2 * v599) & 0x6C087B3E ^ 0x6C087B16);
  int v601 = STACK[0x358];
  int v602 = STACK[0x298];
  LODWORD(STACK[0x288]) = (2 * LODWORD(STACK[0x298])) & 0x18AE1F0A;
  LODWORD(STACK[0x284]) = v602 + 207032197;
  LODWORD(STACK[0x264]) = LODWORD(STACK[0x2CC]) ^ v541;
  LODWORD(STACK[0x23C]) = LODWORD(STACK[0x280]) ^ v559;
  LODWORD(STACK[0x3BC]) = v595;
  LODWORD(STACK[0x4F8]) = v596 - ((2 * v596 + 1015697154) & 0xF3980564) + 403778099;
  LODWORD(STACK[0x560]) = v597;
  LODWORD(STACK[0x298]) = v571;
  LODWORD(STACK[0x294]) = v572;
  if ((v540 & 2) != 0) {
    unsigned int v603 = v572;
  }
  else {
    unsigned int v603 = v571;
  }
  LODWORD(STACK[0x2CC]) = v603;
  LODWORD(STACK[0x260]) = v579;
  unsigned int v604 = STACK[0x380];
  if ((v540 & 2) == 0) {
    unsigned int v604 = v579;
  }
  LODWORD(STACK[0x27C]) = v604;
  LODWORD(STACK[0x268]) = v582;
  LODWORD(STACK[0x258]) = v583;
  if ((v540 & 2) != 0) {
    unsigned int v605 = v583;
  }
  else {
    unsigned int v605 = v582;
  }
  LODWORD(STACK[0x280]) = v605;
  BOOL v606 = v600 < 0x310E79A;
  *(void *)STACK[0xA30] = *v598 ^ 0x9696969696969696;
  if (v600 >= 0x310E79A) {
    BOOL v606 = v600 > 0x310E79B;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((51 * !v606) ^ v601)))();
}

void sub_1001F8490()
{
}

uint64_t sub_1001F849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8
                                   * (((((((2 * v4) ^ 0x832) - 1840) | 0x518) ^ 0x558) * (STACK[0x768] == 0)) ^ v4)))();
}

uint64_t sub_1001F84E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x84C]) = v5;
  return (*(uint64_t (**)(void))(a4
                              + 8 * (((STACK[0x678] == 0) * (((v4 - 558) | 0x1B) + ((v4 - 714) | 0x320) - 3297)) ^ v4)))();
}

uint64_t sub_1001F8528@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unint64_t v2 = STACK[0x600];
  unint64_t v3 = STACK[0x600] + 16;
  BOOL v5 = STACK[0x600] < (unint64_t)&unk_10026B3E0 && v3 > (unint64_t)&unk_10026B3D0;
  if (v2 < (unint64_t)&unk_10026B470 && v3 > (unint64_t)&unk_10026B460) {
    BOOL v5 = 1;
  }
  if (v2 < (unint64_t)&unk_10026F590 && v3 > (unint64_t)&unk_10026F580) {
    BOOL v5 = 1;
  }
  int v9 = v2 < (unint64_t)&unk_10026F200 && v3 > (unint64_t)&unk_10026F1F0 || v5;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v9 * (((a2 - 722715972) & 0x2B13C63F) - 1524)) ^ a2)))();
}

uint64_t sub_1001F85D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *int v7 = veorq_s8(*v7, (int8x16_t)xmmword_10026B310);
  unint64_t v9 = STACK[0x820];
  *(void *)(v9 + 64) = 0xDED30A4024145F56;
  *(void *)(v9 + 72) = 0x1482B5319C0A3DB9;
  *(void *)(v9 + 80) = 0xEB7D4ACE63F5C246;
  *(_DWORD *)(v9 + 96) = -932955627;
  *(_DWORD *)(v9 + 92) = 1804694432;
  STACK[0x888] = *(void *)(a4 + 24 * (v8 ^ 0x628));
  return sub_100238FA4(a1, a2, a3, a4, a5, a6, a7, 1888467959);
}

uint64_t sub_1001F8670@<X0>(unint64_t a1@<X8>)
{
  int v6 = (v2 - 479) | 0x410;
  BOOL v7 = v1 < a1;
  *(unsigned char *)(STACK[0x6B8] - 0x58405A597B241F58) = *v3 ^ *(unsigned char *)STACK[0x5A8] ^ *(unsigned char *)(v4 + 1) ^ *(unsigned char *)(v5 + 1);
  if (v7 == a1 > 0xD3FEEFE9) {
    BOOL v7 = v1 > 0xD3FEEFE9;
  }
  return ((uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))*(&off_1002E1F70 + ((51 * v7) ^ v6)))(0x95B79991C92078D1, 4294967193, 0xA84B5B97106DEECALL, 1961, 0xEFB5148194DE5178);
}

void sub_1001F8784()
{
}

uint64_t sub_1001F87A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = STACK[0x600];
  STACK[0xA08] = v5;
  return (*(uint64_t (**)(void))(a4 + 8 * ((114 * (((v6 == 0) ^ (5 * (v4 ^ 0xD3))) & 1)) ^ v4)))();
}

uint64_t sub_1001F87DC@<X0>(__int16 a1@<W7>, unsigned __int8 *a2@<X8>)
{
  unsigned int v4 = (v2 + 1773459653) & 0x964B268D;
  LODWORD(STACK[0x568]) = v4;
  unsigned __int8 v5 = byte_100283AF0[a2[9] ^ 0xF3];
  char v6 = 32 * v5;
  char v7 = (v6 & 0x40 ^ 0xE9) + 2 * (v6 & 0x40);
  char v8 = v4 + v7 - 46;
  char v9 = (v7 + 23) & ~v5;
  char v10 = 49 - v7;
  if ((v9 & 0xC0) != 0) {
    char v11 = v10;
  }
  else {
    char v11 = v8;
  }
  unint64_t v12 = byte_100296450[a2[3] ^ 0xAELL];
  STACK[0x560] = v12;
  STACK[0x570] = v3;
  int v13 = *a2;
  HIDWORD(v14) = ((v13 ^ 1) + 2) ^ 2;
  LODWORD(v14) = ((v13 ^ 0x99) + 1642155452 - ((2 * (v13 ^ 0x99)) & 0xFFFFFF7F) + 3) ^ 0x61E14DBC;
  int v15 = (v14 >> 2) - ((2 * (v14 >> 2)) & 0x92261702);
  LOBYTE(v13) = (v13 ^ 0xE)
              + ((31 - ((2 * v13) ^ 0x32)) & 0x2E ^ 0xF1)
              + ((2 * ((31 - ((2 * v13) ^ 0x32)) & 0x2E)) ^ 0x1C)
              + 1;
  HIDWORD(v14) = (v15 - 1995240575) ^ 0x227406B5;
  LODWORD(v14) = -1225984898 - v15;
  int v16 = byte_100286B20[((v14 >> 30) - ((2 * (v14 >> 30)) & 0x69BAD64) - 2092050766) ^ 0x2ED1E287] ^ (v13 - ((2 * v13) & 0xE0) - 16) ^ 0x15;
  unsigned int v17 = (((v16 - ((2 * v16) & 0x88888888)) << 24) + 1140850688) ^ 0x44000000;
  LODWORD(v12) = (v17 - ((2 * v17) & 0x1A000000) - 1922976028) ^ 0x8D61B6E4 | ((v12 ^ 0x37)
                                                                             - ((2 * (v12 ^ 0x37)) & 0xD8)
                                                                             + 865305964) ^ 0x3393856C;
  int v18 = byte_10026F480[a2[2] ^ 0x4CLL];
  int v19 = (105 * v18 - ((82 * v18 + 58) & 0x6C) + 19) ^ 0x2F;
  unsigned int v20 = (((v19 - ((2 * v19) & 0xC)) << 8) - 1079900672) ^ 0xBFA20600;
  int v21 = byte_100283AF0[a2[1] ^ 0xA5];
  int v22 = (32 * v21 - ((v21 & 1) << 6) + 38) ^ v21;
  LODWORD(STACK[0x558]) = v22;
  int v23 = ((((v22 ^ 6) - ((2 * (v22 ^ 6)) & 0x136)) << 16) + 647692288) ^ 0x269B0000;
  LODWORD(v12) = (v12 - ((2 * v12) & 0xD51ACBBC) - 359832098) ^ 0xEA8D65DE | (v20 - ((2 * v20) & 0x18764E00) - 868538524) ^ 0xCC3B2764;
  LODWORD(v12) = (v12 - ((2 * v12) & 0xBFDE3D7C) - 537977154) ^ 0xDFEF1EBE | (v23 - ((2 * v23) & 0x30F80000) + 410790180) ^ 0x187C2924;
  unsigned int v24 = v12 - ((2 * v12) & 0x5E276A2E) + 789820695;
  int v25 = ((v24 >> 8) & 0x3A ^ 0x484D6103) + ((v24 >> 8) & 0xC5) - 1;
  unsigned int v26 = ((v25 ^ 0xA80) & 0x3FF ^ 0xB71DB444)
      + ((v25 ^ 0xA80) & 0x3FF ^ 0x88B10B3A)
      + ((2 * ((v25 ^ 0xA80) & 0x3FF)) ^ 0xFFFFE98B)
      + ((2 * (v25 ^ 0xA80)) & 0x6FC ^ 0x1674);
  unsigned __int8 v27 = ((v5 ^ 0xEC) + v11 - 72 - ((2 * ((v5 ^ 0xEC) + v11 - 72)) & 0x5C) - 82) ^ (((2 * (v6 & 0xBF ^ 0xB9)) | 0x82)
                                                                                 - (v6 & 0xBF ^ 0xB9)
                                                                                 + 63);
  LOWORD(v20) = byte_10026F480[a2[10] ^ 0xCCLL];
  LOWORD(v20) = ((~(82 * v20 + 58) | 0x87) + 105 * v20 - 102) ^ 0x85;
  LOWORD(v20) = (((v20 - ((2 * (_WORD)v20) & 0x7A)) << 8) + 15616) ^ 0x3D00;
  LOWORD(v12) = (v20 - ((2 * v20) & 0x5200) - 22151) ^ 0xA979;
  uint64_t v28 = a2[8];
  uint64_t v29 = byte_100296450[a2[7] ^ 0x56];
  uint64_t v30 = byte_100296450[a2[15] ^ 0x2BLL];
  __int16 v31 = byte_100296450[a2[11] ^ 0xA1] ^ 0x37;
  __int16 v32 = (v31 - (a1 & (2 * v31)) + 7737) ^ 0x1E39;
  LOWORD(v12) = (v32 - ((2 * v32) & 0x20C) - 26362) ^ 0x9906 | (v12 - ((2 * v12) & 0xBB18) + 23948) ^ 0x5D8C;
  int v33 = byte_10026F480[a2[14] ^ 0x8BLL];
  __int16 v34 = v12 - ((2 * v12) & 0x40DE) - 24465;
  LODWORD(v12) = ((~(82 * v33 + 58) | 0x9B) + 105 * v33 + 16) ^ 0xB6;
  LODWORD(v12) = (((v12 - ((2 * v12) & 0x10E)) << 8) + 724862720) ^ 0x2B348700;
  LODWORD(v12) = (v12 - ((2 * v12) & 0x5C5E0800) + 774833375) ^ 0x2E2F04DF | ((v30 ^ 0x37)
                                                                            - ((2 * (v30 ^ 0x37)) & 0xFFFFFF8F)
                                                                            + 197462983) ^ 0xBC50BC7;
  int v35 = ((a2[12] ^ 0x49) + (~(2 * (a2[12] ^ 0x49) + 46) | 0x6D) + 97) ^ byte_100286B20[a2[12] ^ 0xAELL];
  int v36 = ((((v35 ^ 0x1D) - ((2 * (v35 ^ 0x1D)) & 0x6E)) << 24) + 922746880) ^ 0x37000000;
  int v37 = byte_100283AF0[a2[13] ^ 0x2FLL];
  unsigned int v38 = (((2 * v37) ^ 0x50) - ((2 * ((2 * v37) ^ 0x50)) & 0xFFFFFFA4) + 82) & 0xFFFFFF88;
  unsigned int v39 = (((v37 ^ 0xFFFFFFA8) + 68) ^ 0x7F) + 2 * ((v37 ^ 0xFFFFFFA8) + 68);
  int v40 = (-32 * v39 - 62) ^ 0xBF ^ (v39 - v38 - 127 - ((2 * (v39 - v38 - 127)) & 0xCE) + 103);
  unsigned int v41 = (((v40 - ((2 * v40) & 0x1C0)) << 16) - 1327497216) ^ 0xB0E00000;
  int v42 = (v41 - ((2 * v41) & 0x2B240000) + 361945438) ^ 0x1592D95E | (v36 - ((2 * v36) & 0x68000000) + 879746769) ^ 0x346FDED1;
  LODWORD(v12) = (v42 - ((2 * v42) & 0x3024CB34) + 403858842) ^ 0x1812659A | (v12 - ((2 * v12) & 0x36192318) + 1527550348) ^ 0x5B0C918C;
  int v43 = (2 * v12) & 0xD9859710;
  LODWORD(v12) = v12 - 322778232;
  LODWORD(STACK[0x550]) = v12;
  int v44 = v12 - v43;
  LODWORD(v12) = ((((v44 ^ 0x8C4A7C47) >> (v34 & 0x10 ^ 0x10))
                 - ((2 * ((v44 ^ 0x8C4A7C47) >> (v34 & 0x10 ^ 0x10))) & 0xD1247B5C)
                 - 393069138) ^ 0xE8923DAE) >> (v34 & 0x10);
  LODWORD(v12) = (v12 - ((2 * v12) & 0x6A) - 75) ^ 0x60B0D5;
  unsigned __int8 v45 = byte_100286B20[v28 ^ 4] ^ ((v28 ^ 0xE3) - ((2 * (v28 ^ 0xE3) + 46) & 0xA4) + 105);
  int v46 = dword_100288680[((v12 | 0xF09F1DC7) - (v12 | 0xF60E238) + 258007608) ^ 0xF0FFADBF];
  unsigned int v47 = ((32 * v46) ^ 0x6B1C9380) - ((2 * ((32 * v46) ^ 0x6B1C9380)) & 0x8114C680) + 1082811207;
  unsigned int v48 = v26 + 1879321235;
  if (((v26 - 1070514045) & 0xCC591789) != ((2 * (v26 - 1070514045)) & 0x10300C02)) {
    unsigned int v48 = -274617971 - v26;
  }
  int v49 = dword_1002875A0[v29 ^ 0xCA];
  HIDWORD(v50) = v49 ^ 0x91;
  LODWORD(v50) = v49 ^ 0x2E359800;
  unsigned int v51 = dword_100292E80[v45 ^ 0xA1] ^ v46 ^ v47 ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x9D036CDA) + 1317123693) ^ dword_10028BAF0[v25 ^ 0x8E5AFB75 ^ (v48 - ((2 * v48 + 420240114) & 0x149D1A6C) + 651475631)];
  unsigned int v52 = v25 ^ v51;
  unsigned int v53 = (((v25 ^ LOBYTE(dword_100292E80[v45 ^ 0xA1]) ^ v46 ^ v47 ^ (BYTE1(v50)
                                                                                   - ((2 * BYTE1(v50)) & 0xDA)
                                                                                   + 109) ^ LOBYTE(dword_10028BAF0[v25 ^ 0x8E5AFB75 ^ (v48 - ((2 * v48 + 420240114) & 0x149D1A6C) + 651475631)])) ^ 0x76FBFF95)
       - 1996226495
       + ((2 * (v25 ^ v51 ^ 0x947F1A0D)) & 0x17E ^ 0x4E))
      % 0x62;
  int v54 = byte_100286B20[a2[4] ^ 0x5BLL] ^ 0xC1 ^ ((a2[4] ^ 0xBC)
                                                                + (~(2 * (a2[4] ^ 0xBC) + 46) | 0x4D)
                                                                + 113);
  int v55 = ((v54 - ((2 * v54) & 0x42)) << 24) + 553648128;
  int v56 = ((v55 ^ 0x21000000) - ((2 * v55) & 0x18000000) - 1939955474) ^ 0x8C5EA0EE | ((v29 ^ 0x37)
                                                                                   - ((2 * (v29 ^ 0x37)) & 0x20)
                                                                                   - 1816148464) ^ 0x93BFC610;
  int v57 = byte_10026F480[a2[6] ^ 0xBBLL];
  int v58 = (105 * v57 - ((-46 * v57 - 70) & 0xA6) - 80) ^ 0x9D;
  unsigned int v59 = (((v58 - ((2 * v58) & 0x22)) << 8) - 607186688) ^ 0xDBCF1100;
  int v60 = byte_100283AF0[a2[5] ^ 0xF0];
  unsigned int v61 = ((~(v60 << 6) | 0xFFFFFFBF) + 32 * v60 + 35) ^ v60;
  unsigned int v62 = ((((v61 ^ 0xE2) - ((2 * (v61 ^ 0xE2)) & 0x16A)) << 16) - 290127872) ^ 0xEEB50000;
  unsigned int v63 = (v62 - ((2 * v62) & 0x13BC0000) + 165553529) ^ 0x9DE2579 | (v59 - ((2 * v59) & 0xBC6C000) - 974954428) ^ 0xC5E36044;
  unsigned int v64 = (v63 - ((2 * v63) & 0x1F339C28) - 812003820) ^ 0xCF99CE14 | (v56 - ((2 * v56) & 0x40041698) + 537004876) ^ 0x20020B4C;
  unsigned int v65 = v64 - ((2 * v64) & 0x9865B004) + 1278400514;
  unsigned int v66 = HIBYTE(v24);
  unsigned int v67 = HIBYTE(v24) & 0xA4 ^ 0x8C4DF6E4 ^ ((((HIBYTE(v24) & 0xA4 ^ 0xDE03F2F9) - 1) & 0xA0 ^ 0xD66C1 | ((HIBYTE(v24) & 0xA4 ^ 0xDE03F2F9) - 1) & 4)
                                         - 1) | HIBYTE(v24) & 0x5B ^ 0x57BF2467 ^ (((2
                                                                                   * (HIBYTE(v24) & 0x5B ^ 0x62413B2A)) | 0x6ADE2A28)
                                                                                 - (HIBYTE(v24) & 0x5B ^ 0x62413B2A)
                                                                                 - 896472340);
  int v68 = dword_100288680[v61 ^ 0x93];
  unsigned int v69 = (HIBYTE(v34) ^ 0xBF | 0xC4B11377) - (HIBYTE(v34) ^ 0xBF | 0x3B4EEC88) + 995028104;
  int v70 = ((v69 & 0x4480014F ^ 0x1606880E) + (v69 ^ 0x49B057F1) - ((v69 ^ 0x49B057F1) & 0x5686894F)) ^ 0x247832F0;
  unsigned int v71 = (HIBYTE(v34) ^ 0x9E | 0x5AA41FF2) - (HIBYTE(v34) ^ 0x9E | 0xA55BE00D) - 1520705523;
  int v72 = dword_1002875A0[v30 ^ 0x4B];
  HIDWORD(v50) = v72 ^ 0x91;
  LODWORD(v50) = v72 ^ 0x2E359800;
  int v73 = v68 ^ dword_100292E80[v66 ^ 0x23] ^ (((32 * v68) ^ 0x6B1C9380)
                                           - ((2 * ((32 * v68) ^ 0x6B1C9380)) & 0x5B4F5A40)
                                           + 765963581) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0xB1734C8C) + 1488561734) ^ dword_10028BAF0[(v71 ^ ((v71 ^ 0xA55BE09A) - ((2 * (v71 ^ 0xA55BE09A) + 2) & 0x1AD868F0) - 1922288519) ^ 0xC3E6F823 ^ (v70 - ((2 * v70 + 226) & 0x285DA67C) + 338613167)) + 112] ^ (v67 - ((2 * v67) & 0x6064E45C) + 808612398);
  int v74 = dword_100288680[v27 ^ 0xE6];
  int v75 = BYTE1(v44);
  unsigned int v76 = (BYTE1(v44) ^ 0x40081CEC | 0xFDE4BF57) - (BYTE1(v44) ^ 0x40081CEC | 0x21B40A8) + 35340456;
  int v77 = dword_1002875A0[STACK[0x560] ^ 0xA1];
  HIDWORD(v50) = v77 ^ 0x91;
  LODWORD(v50) = v77 ^ 0x2E359800;
  unsigned int v78 = v74 ^ dword_100292E80[HIBYTE(v65) ^ 0x95] ^ (((32 * v74) ^ 0x6B1C9380)
                                                   - ((2 * ((32 * v74) ^ 0x6B1C9380)) & 0x1031F280)
                                                   + 135854405) ^ ((v50 >> 8)
                                                                 - ((2 * (v50 >> 8)) & 0x77AECE36)
                                                                 + 1003972379) ^ v76 ^ dword_10028BAF0[v75 ^ 0xC];
  int v79 = dword_100288680[LODWORD(STACK[0x558]) ^ 0xAA];
  unsigned int v80 = ((v34 ^ 0xC5) - ((2 * (v34 ^ 0xC5)) & 0x156) - 1611241813) ^ 0x85E633AA;
  unsigned int v81 = (BYTE1(v65) ^ 0x5D | 0x50E9CB0E) - (BYTE1(v65) ^ 0x5D | 0xAF1634F1) - 1357499151;
  unsigned int v82 = ((BYTE1(v65) ^ 0xB8) + ((v65 >> 8) & 0xB7 ^ 0x97FAFE07) - ((BYTE1(v65) ^ 0xB8) & 0xB7)) ^ 0x97BEFBAF;
  int v83 = dword_1002875A0[((v80 | 0xFEB6C469) - (v80 | 0x1493B96) + 21576598) ^ 0xE4A6914A];
  HIDWORD(v50) = v83 ^ 0x91;
  LODWORD(v50) = v83 ^ 0x2E359800;
  unsigned int v84 = dword_100292E80[v35 ^ 0x50] ^ v79 ^ (((32 * v79) ^ 0x6B1C9380)
                                                            - ((2 * ((32 * v79) ^ 0x6B1C9380)) & 0xE20EF180)
                                                            - 251168547) ^ dword_10028BAF0[(((2 * v82) | 0x76CB795C)
                                                                                          - v82
                                                                                          + 1150960466) ^ 0xBB21B9DD] ^ ((v81 & 0x50C14C14 ^ 0x47024C05) + (v81 & 0x2883EB) - 1) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x636EDCBC) + 834104926);
  int v85 = ((BYTE2(v78) ^ 0x95) - ((2 * (BYTE2(v78) ^ 0x95)) & 0xEC) - 824050570) ^ 0x42EAFE74;
  int v86 = dword_100288680[(((2 * v85) & 0x140E40) - v85 + 1022439647) ^ 0xB0FA32F2];
  int v87 = (BYTE1(v52) ^ 0xC8) + (((v52 >> 8) ^ 0xD9FBF5) & 0x33 ^ 0x202) - ((BYTE1(v52) ^ 0xC8) & 0x33333333);
  unsigned int v88 = ((BYTE1(v52) ^ 0xBB | 0xB6ED5C2A) - (BYTE1(v52) ^ 0xBB | 0x4912A3D5) + 1225958357) ^ 0xB4FE9E2E;
  unsigned int v89 = (((2 * v88) & 0x30B98C88) - v88 + 665008571) ^ 0x25B0FB1A;
  int v90 = dword_1002875A0[((v84 ^ 0x130290)
                       - ((2 * (v84 ^ 0x130290)) & 0x405CC)
                       - 1096141850) ^ 0xBEB93101];
  HIDWORD(v50) = v90 ^ 0x91;
  LODWORD(v50) = v90 ^ 0x2E359800;
  unsigned int v91 = v73 ^ v71 ^ 0xA80CE5F3;
  unsigned int v92 = dword_100292E80[((v73 ^ v71) >> 24) ^ 0x7C] ^ v86 ^ (((32 * v86) ^ 0x6B1C9380)
                                                           - ((2 * ((32 * v86) ^ 0x6B1C9380)) & 0xD3A78DC0)
                                                           + 1775486716) ^ ((v50 >> 8)
                                                                          - ((2 * (v50 >> 8)) & 0x5B84EC96)
                                                                          - 1379764661) ^ dword_10028BAF0[v89];
  unsigned int v93 = ((((v84 ^ 0x28B38A) >> 8) & 0x8D ^ 0x7F86720C) + (((v84 ^ 0x28B38A) >> 8) & 0x72 ^ 0x41) - 1) ^ 0xFF86609F;
  int v94 = dword_100288680[(((2 * (BYTE2(v51) ^ 0x3C)) & 0x178) - (BYTE2(v51) ^ 0x3C) + 579) ^ 0x2E0];
  unsigned int v95 = (v73 ^ ((HIBYTE(v34) ^ 0x9E | 0xF2) - (HIBYTE(v34) ^ 0x9E | 0xD) + 13)) ^ 0x2D;
  unsigned int v96 = ((((v84 ^ 0x28B38A) >> 16) & 0x72 ^ 0xE5C2823 | ((v84 ^ 0x28B38A) >> 16) & 0x8C) - 1) ^ 0x8E7021B0;
  unsigned int v97 = (((2 * v96) | 0x7C05088A) - v96 - 1040352325) ^ 0xBE2E8D6D | (((int)(v84 << 15) >> 31) + 1121465849) ^ 0x42D835F9;
  int v98 = dword_1002875A0[v95];
  HIDWORD(v50) = v98 ^ 0x91;
  LODWORD(v50) = v98 ^ 0x2E359800;
  unsigned int v99 = dword_100292E80[HIBYTE(v78) ^ 0x55] ^ dword_10028BAF0[((v93 | 0xCFBC8172) - (v93 | 0x30437E8D) + 809729677) ^ 0x4FBC93E2] ^ v94 ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0x588B4E30) - 1404721384) ^ ((((unsigned __int16)(v84 ^ 0xB38A) >> 8) ^ 9) - ((2 * (((unsigned __int16)(v84 ^ 0xB38A) >> 8) ^ 9)) & 0x3A) + 8733) ^ (((32 * v94) ^ 0xCF62A900) - ((2 * ((32 * v94) ^ 0xCF62A900)) & 0xCFB6D40) + 108902067);
  int v100 = dword_100288680[(v97 + 1717714272 - ((2 * v97) & 0x4CC47AF0) + 24) ^ 0x66623D60];
  unsigned int v101 = v100 ^ ((v100 ^ 0xC984EAB7) - ((2 * (v100 ^ 0xC984EAB7) + 2) & 0xF0792572) - 130248006) ^ ((v100 ^ 0xCCA71B63)
                                                                                                  - ((2 * (v100 ^ 0xCCA71B63) + 172483498) & 0xE165AA9E)
                                                                                                  + 1977009956) ^ 0xBEF552BE;
  int v102 = v101 - ((2 * v101 + 172483496) & 0x5DF72A72) + 874481421;
  unsigned int v103 = HIBYTE(v51) ^ 0x97;
  unsigned int v104 = ((v91 >> 8) & 0x9B ^ 0xDB66E0F6) - ((v91 >> 8) & 0x64);
  unsigned int v105 = ((BYTE1(v91) ^ 0xFC | 0x84A1E046) - (BYTE1(v91) ^ 0xFC | 0x7B5E1FB9) + 2069766073) ^ 0x8C21E047;
  unsigned int v106 = (((((((v84 ^ 0x28B38A) << 6) ^ 0xAE8CD380)
           - ((2 * (((v84 ^ 0x28B38A) << 6) ^ 0xAE8CD380)) & 0x555F8B00)
           - 1431321179) & 0xC0000000 ^ 0x6F7F3000)
         - 33558528) & 0xC0000000 | (v84 >> 26)) ^ 0xC0000027;
  unsigned int v107 = v106 - ((2 * v106) & 0x8000000E) - 933267769;
  HIDWORD(v50) = v107 ^ 0x2678F391;
  LODWORD(v50) = v107;
  int v108 = dword_1002875A0[v78 & 0xFD ^ 0x7E67A574 ^ (2120721715 - (v78 & 2))];
  int v109 = (v50 >> 30) - ((2 * (v50 >> 30)) & 0x251919F2);
  HIDWORD(v50) = v108 ^ 0x91;
  LODWORD(v50) = v108 ^ 0x2E359800;
  int v110 = v109 + 311201017;
  unsigned int v111 = dword_10028BAF0[((v105 | 0xA3F18AD6) - (v105 | 0x5C0E7529) + 1544451369) ^ 0xAB718A02] ^ ((v50 >> 8)
                                                                                                 - ((2 * (v50 >> 8)) & 0x217D1A50)
                                                                                                 + 280923432) ^ dword_100292E80[v103] ^ v104 ^ v102 ^ (((32 * v102) ^ 0xDF72A720) - ((2 * ((32 * v102) ^ 0xDF72A720)) & 0x30156800) + 403354631);
  unsigned int v112 = (BYTE2(v73) ^ 0x2E | 0x5EAAD6EC) - (BYTE2(v73) ^ 0x2E | 0xA1552913) - 1588254445;
  int v113 = dword_100288680[((v112 & 0x50809692 ^ 0xA0500013) + (v112 & 0xE2A416D) - 1) ^ 0xFEFAD6AA];
  unsigned int v114 = v110 ^ 0xAA12998F;
  unsigned int v115 = ((BYTE1(v78) ^ 0xE1) + ((v78 >> 8) & 0xB1 ^ 0xC8E74B10) - ((BYTE1(v78) ^ 0xE1) & 0xB1)) ^ 0xFBD44BB2;
  unsigned int v116 = v53 ^ 0xAFEDBBDE;
  unsigned int v117 = v53 + (v52 ^ 0xF2CA6E2A);
  v53 *= 2;
  int v118 = ((v117 - v53) ^ 0xBF) + 2 * ((v117 - v53) & 0x3F) + 65;
  int v119 = (v53 & 0xBC) + v116 + ((2 * v118) & 0x1AC) + (v118 ^ 0x7BDFBFD6);
  unsigned int v120 = dword_1002875A0[(v119 - 2 * ((v119 + 70419532) & 0x66686AE ^ v119 & 2) + 1519979256) ^ 0x8666861F];
  unsigned int v121 = ((v120 << 25) & 0xFC000000 ^ 0x20000000) + ((v120 << 24) ^ 0xEFDFDE97);
  int v122 = v113 ^ dword_10028BAF0[(v115 - ((2 * v115) & 0x2400B6A) - 1994086987) ^ 0xBA17A501] ^ (((32 * v113) ^ 0x6B1C9380)
                                                                                              - ((2
                                                                                                * ((32 * v113) ^ 0x6B1C9380)) & 0x6EED4E40)
                                                                                              - 1216960720) ^ (((2 * (BYTE1(v78) ^ 0x51)) & 0x2A) - (BYTE1(v78) ^ 0x51) + 2341866) & 0x200FFF ^ dword_100292E80[v114];
  unsigned int v123 = (((v121 - 2128600727) & 0xFF000000 | (v120 >> 8)) ^ 0x1AF0798)
       + v121
       + ((2 * ((v121 - 2128600727) & 0xFF000000 | (v120 >> 8))) & 0xFCFD9BFE ^ 0xFFA3F4CF);
  unsigned int v124 = (((v120 >> 8) ^ 0xFFD1CA67) + 2041765489 - ((2 * ((v120 >> 8) ^ 0xFFD1CA67) + 2) & 0xF365CE20) + 2208) ^ (v120 >> 8) ^ (v123 - ((2 * v123 - 12722476) & 0xBE4C5056) + 1589974933);
  HIDWORD(v50) = v122 ^ 0x9EC;
  LODWORD(v50) = v122 ^ 0x1AC71000;
  int v125 = (v50 >> 12) - ((2 * (v50 >> 12)) & 0x473BCC40) + 597550624;
  HIDWORD(v50) = v124 ^ 0xAA3;
  LODWORD(v50) = (((v124 ^ 0xA6BAFAA3) + v121 - 2128600727) ^ 0xBFEBFDDF)
               + 1075053089
               + ((2 * ((v124 ^ 0xA6BAFAA3) + v121 - 2128600727)) & 0x7FD7FBBE);
  int v126 = ((v50 >> 12) - ((2 * (v50 >> 12)) & 0x23605CA2) - 1850724783) ^ v125;
  HIDWORD(v50) = v126 ^ 0x9719D;
  LODWORD(v50) = v126 ^ 0x4FD00000;
  unsigned int v127 = (v50 >> 20) - ((2 * (v50 >> 20)) & 0x95655336) - 894260837;
  LOBYTE(v126) = (STACK[0x550] & 8 ^ 0xA) + 64;
  LOBYTE(v126) = (v126 & 0xA) + (v126 ^ 0x4A) + 76 - ((v126 ^ 0x4A) & 8) + 68;
  unsigned int v128 = ((((v127 ^ 0x245AA9C9) >> (v126 ^ 0x9A))
         - ((2 * ((v127 ^ 0x245AA9C9) >> (v126 ^ 0x9A))) & 0x8BE53394)
         - 973956662) ^ 0xC5F299CA) >> (v126 ^ 0x92);
  int v129 = dword_100288680[BYTE2(v99) ^ 0xFC];
  int v130 = ((v50 >> 20) - ((2 * (v50 >> 20)) & 0x36) - 101) ^ 0x4804BC;
  int v131 = dword_1002875A0[(v130 + (v127 & 0xE8 ^ 0xBBA0AA40) - (v130 & 0x4000E8)) ^ 0xBBA8AE2E];
  HIDWORD(v50) = v131 ^ 0x91;
  LODWORD(v50) = v131 ^ 0x2E359800;
  unsigned int v132 = dword_100292E80[HIBYTE(v92) ^ 0x88] ^ v129 ^ (((32 * v129) ^ 0x6B1C9380)
                                                     + 924224033
                                                     + (~(2 * ((32 * v129) ^ 0x6B1C9380)) | 0x91D2EBBF)) ^ dword_10028BAF0[(((2 * (BYTE1(v111) ^ 0xD8)) | 0xA2B730F6) - (BYTE1(v111) ^ 0xD8) + 782526341) ^ 0xD15B980E] ^ ((BYTE1(v111) ^ 0x88044159 | 0xCA6DC25F) - (BYTE1(v111) ^ 0x88044159 | 0x35923DA0) + 898776480) ^ ((v50 >> 8) - ((2 * (v50 >> 8)) & 0xA9F43AE2) - 721805967);
  int v133 = dword_100288680[BYTE2(v111) ^ 0xFA];
  int v134 = (v128 - ((2 * v128) & 0x8C) - 58);
  int v135 = ((2 * (v134 ^ 0x2838164)) & 0x50100BA) - (v134 ^ 0x2838164) + 1007364514;
  unsigned __int8 v136 = BYTE1(v92) ^ BYTE1(v87);
  unsigned int v137 = (((2 * (v134 ^ 0x7C)) & 0xA2) - (v134 ^ 0x7C) - 1086559826) ^ 0x9D78E9A6;
  int v138 = dword_1002875A0[(((v92 ^ v87) ^ 0xC952289)
                        - ((2 * ((v92 ^ v87) ^ 0xC952289)) & 0x92045A8)
                        + 349862868) ^ 0x184F596A];
  HIDWORD(v50) = v138 ^ 0x91;
  LODWORD(v50) = v138 ^ 0x2E359800;
  unsigned int v139 = dword_100292E80[HIBYTE(v99) ^ 0xD6] ^ v133 ^ (((32 * v133) ^ 0x6B1C9380)
                                                     - ((2 * ((32 * v133) ^ 0x6B1C9380)) & 0x8363C540)
                                                     + 1102176931) ^ ((v50 >> 8)
                                                                    - ((2 * (v50 >> 8)) & 0xB757F2E0)
                                                                    + 1537997168) ^ v135 ^ dword_10028BAF0[(((2 * v137) | 0x390EEEFA) - v137 + 1668843651) ^ 0xBEC3F7BF];
  unsigned int v140 = ((BYTE2(v127) ^ 0x7E) - ((2 * (BYTE2(v127) ^ 0x7E)) & 0x174) - 1832983878) ^ 0xB03FF0BA;
  int v141 = dword_100288680[(v140 - ((2 * v140) & 0x40002614) - 1458539766) ^ 0x8B916136];
  int v142 = v141 ^ 0x367B1548;
  if ((v141 & 0x1000000) != 0) {
    int v143 = -16777216;
  }
  else {
    int v143 = 0x1000000;
  }
  int v144 = v143 + v142 - 2 * ((v143 + v142) & 0x70D853F ^ v142 & 0xB) + 118326580;
  int v145 = (((2 * (v136 ^ 0x38)) & 0x122) - (v136 ^ 0x38) + 1539369070) & 0x41000FFF;
  unsigned int v146 = ((v136 ^ 0x5C) - ((2 * (v136 ^ 0x5C)) & 0xFFFFFFC3) + 475741153) ^ 0x9B8BBDE8;
  int v147 = dword_1002875A0[v99 ^ 0x7A];
  HIDWORD(v148) = v147 ^ 0x91;
  LODWORD(v148) = v147 ^ 0x2E359800;
  unsigned int v149 = dword_100292E80[HIBYTE(v111) ^ 0xC0] ^ v145 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xA3ADAF9E) + 1373034447) ^ dword_10028BAF0[(((2 * v146) | 0x91C89564) - v146 + 924562766) ^ 0x4F34CC91] ^ v144 ^ (((32 * v144) ^ 0x65CE9C00) - ((2 * ((32 * v144) ^ 0x65CE9C00)) & 0x8A8A4700) - 985324646);
  unsigned int v150 = ((BYTE2(v92) ^ 0x5F | 0x27BB7A1) - (BYTE2(v92) ^ 0x5F | 0xFD84485E) - 41662370) ^ 0x60BBDC35;
  int v151 = dword_100288680[(v150 - ((2 * v150) & 0x4CE7248C) + 645108294) ^ 0x44B3F91A];
  unsigned int v152 = (BYTE1(v99) ^ 0x2E | 0xA8567AA5) - (BYTE1(v99) ^ 0x2E | 0x57A9855A) + 1470727514;
  int v153 = (((((v99 >> 8) & 0x34) + (BYTE1(v99) ^ 0xB7)) | 0x19148E00) - ((BYTE1(v99) ^ 0xB7) & 0x34)) ^ 0x90DDE37;
  int v154 = dword_1002875A0[v111 ^ 0xE7];
  HIDWORD(v148) = v154 ^ 0x91;
  LODWORD(v148) = v154 ^ 0x2E359800;
  char v155 = ((((BYTE1(v148) - ((2 * BYTE1(v148)) & 0x66) + 51) | 0xEF) + 85) ^ 0xED) - 7;
  int v156 = dword_100292E80[HIBYTE(v127) ^ 9] ^ v151 ^ dword_10028BAF0[((v153 | 0xF54EAE0A) - (v153 | 0xAB151F5) + 179393013) ^ 0xE557FE76] ^ (((32 * v151) ^ 0x6B1C9380) - ((2 * ((32 * v151) ^ 0x6B1C9380)) & 0x9928C480) - 862690730) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x6BDB7866) - 1242710989) ^ ((v152 & 0xA8161890 ^ 0x3B90411) + (v152 & 0x40636F) - 1);
  unsigned int v157 = (v132 ^ (((((v127 >> 15) | 0xFFFFFFFD) - (HIWORD(v127) & 1) + 1014852301) ^ 0x145C6B41) + 235353976) ^ 0x38C0C9D5) >> (v155 ^ 0xB2);
  HIDWORD(v148) = v156 ^ 0x107;
  LODWORD(v148) = v156 ^ 0x7F071400;
  int v158 = (v148 >> 10) - ((2 * (v148 >> 10)) & 0xCC28864A) - 434879707;
  unsigned int v159 = ((v157 - ((2 * v157) & 0x2EF01A14) + 393743626) ^ 0x17780D0A) >> (v155 & 0x10);
  HIDWORD(v148) = v158 ^ 0x395CED;
  LODWORD(v148) = v158 ^ 0x20400000;
  unsigned int v160 = (v148 >> 22) - ((2 * (v148 >> 22)) & 0xAC5AA560) + 1445810864;
  int v161 = dword_100288680[(((2 * (BYTE2(v139) ^ 0x2200003B)) | 0xCF6D553E) - (BYTE2(v139) ^ 0x2200003B) + 407459169) ^ 0xC5B6AA5C];
  int v162 = ((v148 >> 22) - ((2 * (v148 >> 22)) & 0x60) - 80) ^ 0x5F;
  unsigned int v163 = ((v162 | 0x79E4D473) - (v162 | 0x861B2B8C) - 2045039732) ^ 0xB9ECF6B4;
  unsigned int v164 = ((2 * (BYTE1(v149) ^ 0xA)) | 0xE3C51246) - (BYTE1(v149) ^ 0xA) + 236811997;
  unsigned int v165 = ((BYTE1(v149) ^ 0xF68FA124) - ((2 * (BYTE1(v149) ^ 0xF68FA124)) & 0x6C020076) + 1047594043) ^ 0xEDEFE2DB;
  int v166 = dword_1002875A0[((v163 | 0xBACF222) - (v163 | 0xF4530DDD) - 195883555) ^ 0xCBA4D0CB];
  HIDWORD(v148) = v166 ^ 0x91;
  LODWORD(v148) = v166 ^ 0x2E359800;
  unsigned int v167 = dword_100292E80[HIBYTE(v132) ^ 0x23] ^ v161 ^ (((32 * v161) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v161) ^ 0x6B1C9380)) & 0x31295280)
                                                      + 412395861) ^ dword_10028BAF0[(((2 * v165) | 0x67CBB33C)
                                                                                    - v165
                                                                                    - 870701470) ^ 0x16F49E66] ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xF68A367C) + 2068126526) ^ ((v164 & 0x416008A8 ^ 0x1392089) + (v164 & 0xB0828757) - 1);
  int v168 = ((BYTE2(v149) ^ 0x17) + (HIWORD(v149) & 0x9D ^ 0x35290888) - ((BYTE2(v149) ^ 0x17) & 0x9D)) ^ 0x352B10CC;
  int v169 = dword_100288680[(v168 - ((2 * v168) & 0x43EF8) - 2036686980) ^ 0x8698879B];
  unsigned int v170 = (((2 * (BYTE1(v160) ^ 0x5B)) & 0x92) - (BYTE1(v160) ^ 0x5B) - 463976266) ^ 0xAD074877;
  int v171 = (BYTE1(v160) ^ 0xFD) - ((2 * (BYTE1(v160) ^ 0xFD)) & 0x1F4) + 915884794;
  int v172 = dword_1002875A0[(((2 * (v132 ^ 0x1A00A4E4)) | 0x374C173C)
                        - (v132 ^ 0x1A00A4E4)
                        + 1683616866) ^ 0x81A6AF1F];
  HIDWORD(v148) = v172 ^ 0x91;
  LODWORD(v148) = v172 ^ 0x2E359800;
  unsigned int v173 = dword_100292E80[HIBYTE(v139) ^ 0x31] ^ dword_10028BAF0[((v171 & 0x2160271 ^ 0x281050)
                                                               + (v171 ^ 0xAE17C6AF)
                                                               - ((v171 ^ 0xAE17C6AF) & 0x10808A71)) ^ 0x8A3E1629] ^ v169 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x608852E4) + 809773426) ^ (((2 * v170) & 0x90101408) - v170 + 58172923) ^ (((32 * v169) ^ 0x6B1C9380) - ((2 * ((32 * v169) ^ 0x6B1C9380)) & 0x445F6000) + 573550617);
  unsigned int v174 = ((BYTE2(v160) ^ 0x88) + (HIWORD(v160) & 0xFB ^ 0x59E6BE73) - ((BYTE2(v160) ^ 0x88) & 0xFFFFFFFB)) ^ 0x3BFFBCDE;
  int v175 = dword_100288680[(((2 * v174) | 0x256DF570) - v174 - 313981624) ^ 0x70AFF8C8];
  int v176 = (33 * (v175 ^ 0x3358E49C)) ^ 0x7DFFFF6B;
  unsigned int v177 = (66 * (v175 ^ 0x3358E49C)) & 0xFBFFFED6;
  unsigned int v178 = ((((v175 << 6) ^ 0xD6392700) - ((2 * ((v175 << 6) ^ 0xD6392700)) & 0x70597780) + 942455756) ^ 0x382CBBCC) & ((((2 * v175) ^ 0x66B1C938) - ((2 * ((2 * v175) ^ 0x66B1C938)) & 0x3409AA58) + 436524332) ^ 0x1A04D52C);
  int v179 = (((v132 >> 8) & 0x6F ^ 0x5DFA924F) + ((v132 >> 8) & 0x90 ^ 0x11) - 1) ^ 0x2FFCB26F;
  unsigned int v180 = v177 + v176 + (v178 ^ 0xA0448020) - ((2 * v178) & 0xBF76FFBE) + 1;
  unsigned int v181 = (v139 ^ 0x44 | 0x13F97163) - (v139 ^ 0x44 | 0xEC068E9C) - 335114596;
  int v182 = dword_1002875A0[((v181 & 0x11C8030A ^ 0xC880E09) + (v181 & 0x23170F5 ^ 0xA2302060) - 1) ^ 0xBD415FB8];
  HIDWORD(v148) = v182 ^ 0x91;
  LODWORD(v148) = v182 ^ 0x2E359800;
  unsigned int v183 = dword_10028BAF0[(((2 * v179) & 0x44004076) - v179 + 1501454276) ^ 0x2B787F74] ^ ((BYTE1(v132) ^ 0x15)
                                                                                        - ((2 * (BYTE1(v132) ^ 0x15)) & 0xCCCCCCCC)
                                                                                        + 614) ^ dword_100292E80[HIBYTE(v149) ^ 0xB1] ^ ((v148 >> 8) - 1077153913 + (~(2 * (v148 >> 8)) | 0x806820F3)) ^ (v180 - ((2 * v180 - 1015611160) & 0x85913EE6) - 1534844953);
  unsigned int v184 = (((v159 - ((2 * v159) & 0xB6) + 347) & 0x47) + ((v159 - ((2 * v159) & 0xB6) + 347) & 0xB8 ^ 0xBB0F1309) - 1) ^ 0x9A17129B;
  int v185 = dword_100288680[(((2 * v184) & 0x420007C0) - v184 + 1075649567) ^ 0x61051DCF];
  int v186 = v185 ^ dword_100292E80[HIBYTE(v160) ^ 0x71] ^ (((32 * v185) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v185) ^ 0x6B1C9380)) & 0x2DBA8600)
                                                      - 1763884268);
  unsigned int v187 = v139 >> 8;
  int v188 = dword_10028BAF0[(((v139 >> 8) & 0xC9) + ((v139 >> 8) & 0x36 ^ 0x221) - 1) ^ 0x2A8];
  unsigned int v189 = v188 ^ 0xB5E66342;
  unsigned int v190 = (v188 ^ 0xB5E66342) + (v188 ^ 0x5D566A88 ^ v186) + 1;
  int v191 = ((v149 & 0xA1) + 1317375 + (v149 & 0x5E ^ 0x72026011)) ^ 0x7E4E3C94;
  unsigned int v192 = (v186 ^ ((v186 ^ 0xE8B009CA) - ((2 * (v186 ^ 0xE8B009CA) + 2) & 0x2D79007C) + 381452351) ^ (v190 - ((2 * v190) & 0xE683BA36) + 1933696283) ^ 0x72B2AB10)
       + v189;
  int v193 = dword_1002875A0[(((2 * v191) & 0x18200982) - v191 + 1097524030) ^ 0x4D32A598];
  HIDWORD(v148) = v193 ^ 0x91;
  LODWORD(v148) = v193 ^ 0x2E359800;
  int v194 = dword_100288680[BYTE2(v173) ^ 0xD1];
  unsigned int v195 = (v192 - ((2 * v192) & 0x6E8AFB70) - 1220182600) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x7061C114) - 1204756342);
  unsigned int v196 = (BYTE1(v183) ^ 0xD8) + ((v183 >> 8) & 0xE4 ^ 0xB2DAF424) - ((BYTE1(v183) ^ 0xD8) & 0xE4);
  int v197 = dword_1002875A0[(((v195 ^ v187) ^ 0x602060)
                        - ((2 * ((v195 ^ v187) ^ 0x602060)) & 0x400122)
                        - 491485295) ^ 0xE2D4A730];
  HIDWORD(v148) = v197 ^ 0x91;
  LODWORD(v148) = v197 ^ 0x2E359800;
  unsigned int v198 = v167 ^ 0xB4820147;
  unsigned int v199 = v194 ^ dword_100292E80[HIBYTE(v167) ^ 0x22] ^ (((32 * v194) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v194) ^ 0x6B1C9380)) & 0xA0810B40)
                                                      + 1346405821) ^ dword_10028BAF0[((v196 & 0xA010116C ^ 0x40040128)
                                                                                     + (v196 ^ 0xA4DB74C6)
                                                                                     - ((v196 ^ 0xA4DB74C6) & 0x1200016C)) ^ 0xE4159109] ^ ((BYTE1(v183) ^ 0x61AC0B6D) - ((2 * (BYTE1(v183) ^ 0x61AC0B6D)) & 0x3181140) - 2116278112) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x3BBA723A) + 501037341);
  unsigned int v200 = ((2 * (BYTE1(v195) ^ 0x48)) & 0xFFFFFF9F) - (BYTE1(v195) ^ 0x48) - 969747408;
  int v201 = dword_100288680[((BYTE2(v183) ^ 0x28001FA) - ((2 * (BYTE2(v183) ^ 0x28001FA)) & 0x10002A6) - 1516615341) ^ 0xA71A4881];
  unsigned int v202 = ((BYTE1(v195) ^ 0xDFD7FF97) + 194178454 + ((2 * BYTE1(v195)) | 0xE8DA24D6)) ^ 0xD445121B;
  unsigned int v203 = (((2 * (v198 ^ 0x7F)) | 0x111FD88C) - (v198 ^ 0x7F) + 2003833786) ^ 0xF9DFE858;
  unsigned int v204 = dword_1002875A0[(((2 * v203) | 0x391319D4) - v203 - 478776554) ^ 0x6DD98879];
  unsigned int v205 = ((v204 >> 8) & 0x8404 ^ 0xD2C43355) + ((v204 >> 8) & 0x12088B) - 1;
  unsigned int v206 = ((v204 >> 7) & 0x41114 ^ 0x115EC5F0)
       + ((v204 >> 8) & 0x128C8F ^ 0x77401D02)
       + ((((v204 >> 8) ^ 0x163CB917) + 1) ^ 0xDC7E7E79)
       + ((2 * (((v204 >> 8) ^ 0x163CB917) + 1)) & 0x28FCFCF2);
  unsigned int v207 = ((v205 & 0x823D41 ^ 0x220801) + (v205 ^ 0x93DCB7D6) - ((v205 ^ 0x93DCB7D6) & 0x10A0C01)) ^ 0xD2861671 ^ (v206 - ((2 * v206 + 161754394) & 0x246D5674) + 386449863);
  unsigned int v208 = ((v204 << 24) ^ 0x2A7FB7A7) + ((v204 << 25) & 0x77777777 ^ 0x22000000) + 1149257817 + v207;
  int v209 = v208 - 2 * (v208 & 0x3C6F513D ^ v207 & 1) - 1133555396;
  unsigned int v210 = HIBYTE(v195) ^ 0xBA;
  int v211 = dword_100288680[BYTE2(v195) ^ 0xC9];
  unsigned int v212 = dword_100292E80[HIBYTE(v173) ^ 0xB3] ^ v201 ^ (((32 * v201) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v201) ^ 0x6B1C9380)) & 0x446C9000)
                                                      - 1573500918) ^ dword_10028BAF0[v202] ^ ((v200 & 0x11EC ^ 0x110009CC)
                                                                                             + (v200 ^ 0xE88DD430)
                                                                                             - ((v200 ^ 0xE88DD430) & 0x223201EC)) ^ v209;
  unsigned int v213 = ((v173 ^ 0xD) + (v173 & 0xAD ^ 0x144FE0A0) - ((v173 ^ 0xD) & 0xAD)) ^ 0xF004A095;
  int v214 = dword_1002875A0[(v213 - ((2 * v213) & 0x8806D746) - 677123165) ^ 0x33E8ABB6];
  HIDWORD(v148) = v214 ^ 0x91;
  LODWORD(v148) = v214 ^ 0x2E359800;
  unsigned int v215 = dword_100292E80[HIBYTE(v183) ^ 0xBE] ^ dword_10028BAF0[BYTE1(v198) ^ 0x78] ^ ((BYTE1(v198) ^ 0x55)
                                                                                     - ((2 * (BYTE1(v198) ^ 0x55)) & 0x3A)
                                                                                     + 22045) & 0x43FF ^ v211 ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xA36288F8) - 776911748) ^ (((32 * v211) ^ 0x6B1C9380) - ((2 * ((32 * v211) ^ 0x6B1C9380)) & 0xF93D4980) - 56711979);
  int v216 = dword_100292E80[v210];
  int v217 = (v216 ^ 0x4D35AE42) + 1;
  v216 ^= 0x3E1BCB60u;
  int v218 = v216 + (v217 ^ 0x2FFFFFFF) + ((2 * v217) & 0x5FFFFFFE) - 805306367;
  int v219 = dword_100288680[BYTE2(v198) ^ 0xD5];
  int v220 = ((v218 - ((2 * v218) & 0x830D397E) - 1048142657) ^ 0x3E796341) + v216;
  unsigned int v221 = BYTE1(v173) ^ 0xCDDFEF84;
  int v222 = (2 * BYTE1(v173)) ^ 0xF6;
  v173 >>= 8;
  int v223 = ((2 * v173) ^ 0x167A2F6) - ((2 * ((2 * v173) ^ 0x167A2F6)) & 0x5C) + 431;
  unsigned int v224 = v221 + v222 + (v223 & 0xE0 ^ 0x82C8021) + ((2 * v223) & 0xC0 ^ 0xFFFFFFBF) + 703827953;
  int v225 = dword_1002875A0[v183 ^ 0xA6];
  HIDWORD(v148) = v225 ^ 0x91;
  LODWORD(v148) = v225 ^ 0x2E359800;
  unsigned int v226 = dword_10028BAF0[v224] ^ v219 ^ (((32 * v219) ^ 0x6B1C9380)
                                       - ((2 * ((32 * v219) ^ 0x6B1C9380)) & 0xE4210940)
                                       - 233798493) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xED3EC150) + 1990156456) ^ (v220 - ((2 * v220) & 0x15E1FDE2) - 1963917583);
  int v227 = dword_100288680[BYTE2(v212) ^ 0xB2];
  unsigned int v228 = ((BYTE1(v215) ^ 0x2C | 0x2BDE0994) - (BYTE1(v215) ^ 0x2C | 0xD421F66B) - 735971733) ^ 0xBEDE5914;
  unsigned int v229 = ((v173 ^ 0xA ^ v226 ^ 0xE)
        + ((v173 ^ 0xA ^ v226) & 0x38 ^ 0x87E02D30)
        - ((v173 ^ 0xA ^ v226 ^ 0xE) & 0x38)) ^ 0xA1C14D6B;
  int v230 = dword_1002875A0[((v229 | 0xB1C29E39) - (v229 | 0x4E3D61C6) + 1312645574) ^ 0x97E3FE8B];
  HIDWORD(v148) = v230 ^ 0x91;
  LODWORD(v148) = v230 ^ 0x2E359800;
  unsigned int v231 = dword_100292E80[HIBYTE(v199) ^ 0x5B] ^ v227 ^ dword_10028BAF0[(v228 - ((2 * v228) & 0x8C2D9C9E) + 1175899727) ^ 0xD3169E43] ^ (((32 * v227) ^ 0x6B1C9380) - ((2 * ((32 * v227) ^ 0x6B1C9380)) & 0x60C06E00) - 1335871737) ^ ((BYTE1(v215) ^ 0xD7D1C82C) + ((v215 >> 8) & 0x7E ^ 0x28083652) - ((BYTE1(v215) ^ 0xD7D1C82C) & 0x93C0087E)) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x871C8F58) + 1133397932);
  int v232 = dword_100288680[BYTE2(v215) ^ 0x9F];
  unsigned int v233 = (((2 * (BYTE1(v226) ^ 0xE8)) & 0xFFFFFFE3) - (BYTE1(v226) ^ 0xE8) + 2100007182) ^ 0x799BBFA2;
  int v234 = dword_1002875A0[v199 ^ 0x68];
  HIDWORD(v148) = v234 ^ 0x91;
  LODWORD(v148) = v234 ^ 0x2E359800;
  unsigned int v235 = dword_100292E80[HIBYTE(v212) ^ 0x51] ^ v232 ^ (((32 * v232) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v232) ^ 0x6B1C9380)) & 0x65995340)
                                                      - 1295210050) ^ ((v148 >> 8)
                                                                     - ((2 * (v148 >> 8)) & 0xEF96D47C)
                                                                     + 2009819710) ^ (((2 * (BYTE1(v226) ^ 0x22)) | 0x3CF56A30)
                                                                                    - (BYTE1(v226) ^ 0x22)
                                                                                    + 1636125416) ^ dword_10028BAF0[(v233 - ((2 * v233) & 0x9400908) - 320076668) ^ 0xE85C2AB4];
  int v236 = dword_100288680[((BYTE2(v226) ^ 0xB64144E3) - ((2 * (BYTE2(v226) ^ 0xB64144E3)) & 0x4002093A) + 1611894685) ^ 0xD652CB16];
  unsigned int v237 = (((2 * (BYTE1(v199) ^ 0x3B)) | 0xAAB4B1EC) - (BYTE1(v199) ^ 0x3B) + 715499274) ^ 0x8540599E;
  unsigned int v238 = v236 ^ (((2 * (BYTE1(v199) ^ 0x703089F3)) | 0x9EAC5D94) - (BYTE1(v199) ^ 0x703089F3) - 1331048138) ^ dword_100292E80[HIBYTE(v215) ^ 0xC0] ^ dword_10028BAF0[((v237 | 0x3EF5F6C6) - (v237 | 0xC10A0939) - 1056306887) ^ 0x6EEFF736] ^ (((32 * v236) ^ 0x6B1C9380) - ((2 * ((32 * v236) ^ 0x6B1C9380)) & 0x51A29340) + 684804514);
  HIDWORD(v148) = v238 ^ 9;
  LODWORD(v148) = v238 ^ 0xBA265B00;
  int v239 = (v148 >> 6) - ((2 * (v148 >> 6)) & 0xA837DCDA);
  int v240 = dword_1002875A0[v212 ^ 7];
  HIDWORD(v148) = v240 ^ 0x91;
  LODWORD(v148) = v240 ^ 0x2E359800;
  int v241 = (v148 >> 8) + 235352320 - ((2 * (v148 >> 8)) & 0x1C0E623E) + 31;
  HIDWORD(v148) = v241 ^ 0x1F;
  LODWORD(v148) = v241 ^ 0xE073100;
  v239 -= 736366995;
  int v242 = (v148 >> 6) - ((2 * (v148 >> 6)) & 0xB4BC2DB8) - 631367972;
  HIDWORD(v148) = v242 ^ 0x3EAC78C ^ v239;
  LODWORD(v148) = v242 ^ ~v239;
  unsigned int v243 = (v148 >> 26) - ((2 * (v148 >> 26)) & 0x6EA9D20) + 58019472;
  int v244 = dword_100288680[(((2 * (BYTE2(v199) ^ 0xED)) | 0xACA06A94) - (BYTE2(v199) ^ 0xED) - 1448097098) ^ 0x5650351B];
  unsigned int v245 = ((v215 ^ 0xFFFFFFE3) + 700767140 + ((2 * v215) | 0xAC7648BA)) ^ 0x923A2D15;
  int v246 = (BYTE1(v212) ^ 0xCD) + ((v212 >> 8) & 0x6E ^ 0x2120D422) - ((BYTE1(v212) ^ 0xCD) & 0x6E);
  int v247 = dword_1002875A0[(((2 * v245) | 0x7544511E) - v245 + 1163777905) ^ 0xFEA3213E];
  HIDWORD(v148) = v247 ^ 0x91;
  LODWORD(v148) = v247 ^ 0x2E359800;
  unsigned int v248 = v244 ^ dword_100292E80[HIBYTE(v226) ^ 0x9F] ^ dword_10028BAF0[(((((v212 >> 8) & 4) + (BYTE1(v212) ^ 0x7110015)) | 0xB8883E00)
                                                                      - ((BYTE1(v212) ^ 0x7110015) & 0x10004)) ^ 0xBF983E74] ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0xF1ECFEEE) + 2029420407) ^ ((v246 & 0x1004514 ^ 0x462D00) + (v246 ^ 0x9101C03E) - ((v246 ^ 0x9101C03E) & 0xA0010514)) ^ (((32 * v244) ^ 0x6B1C9380) - ((2 * ((32 * v244) ^ 0x6B1C9380)) & 0x1C287200) - 1911277302);
  int v249 = dword_100288680[BYTE2(v231) ^ 0x13];
  unsigned int v250 = dword_100292E80[HIBYTE(v248) ^ 0x7B] ^ v249 ^ (((32 * v249) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v249) ^ 0x6B1C9380)) & 0x9C38BD40)
                                                      - 837001566);
  unsigned int v251 = ((v250 ^ 0x602A931F) & 0xDDE3163B ^ 0xD9631628)
       + ((v250 ^ 0x602A931F) & 0xCDE01610 ^ 0x69C4014)
       - (((v250 ^ 0x602A931F) & 0xDDE3163B ^ 0xD9631628) & 0xCDE01610);
  unsigned int v252 = (((2 * ((v250 ^ 0x602A931F) & 0x22082904 ^ 0x22002004)) & 0x44101000)
        - ((v250 ^ 0x602A931F) & 0x22082904 ^ 0x22002004)
        - 1847233611) ^ 0x95C06B95;
  unsigned int v253 = (((2 * v252) & 0xE4232208) - v252 - 1934726934) ^ 0x888B78CA;
  int v254 = v253 | (((v250 ^ 0x602A931F) & 0x14C0C0 ^ 0x8080) - ((2 * v250) & 0x280080) + 20906855) & 0x1FDFFC0 ^ 0x139C340;
  unsigned int v255 = (v254 - 2 * (v254 & 0x5C952087 ^ v253 & 7) + 1553277056) ^ 0x5C952080 | ((v251 & 0xB3F468DB ^ 0x20C028CB)
                                                                                + (v251 ^ 0x9F3FD434)
                                                                                - ((v251 ^ 0x9F3FD434) & 0xB3E0E8DB)) ^ 0x37F46CCB;
  unsigned int v256 = ((2 * v243) & 0x10A) + (v243 ^ 0xFFFFFFA5) - 1759622533;
  int v257 = dword_1002875A0[((v256 & 0x141A09AF ^ 0x6020218D) + (v256 & 0x250 ^ 0x800651) - 1) ^ 0x74BA2D1A];
  HIDWORD(v148) = v257 ^ 0x91;
  LODWORD(v148) = v257 ^ 0x2E359800;
  unsigned int v258 = dword_10028BAF0[((BYTE1(v235) ^ 0xC1) - ((2 * (BYTE1(v235) ^ 0xC1)) & 0xE2) + 1871788913) ^ 0x6F913B9F] ^ ((BYTE1(v235) ^ 0x400D1817) - ((2 * (BYTE1(v235) ^ 0x400D1817)) & 0x8000208E) - 601706425) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x17084014) + 193208330) ^ (v255 - ((2 * v255) & 0x20ED6604) + 276214530);
  unsigned int v259 = (((LOBYTE(dword_10028BAF0[((BYTE1(v235) ^ 0xC1)
                                                   - ((2 * (BYTE1(v235) ^ 0xC1)) & 0xE2)
                                                   + 1871788913) ^ 0x6F913B9F]) ^ ((BYTE1(v235) ^ 0x17)
                                                                                 - ((2 * (BYTE1(v235) ^ 0x17)) & 0x8E)
                                                                                 + 71) ^ (BYTE1(v148)
                                                                                        - ((2 * BYTE1(v148)) & 0x14)
                                                                                        + 10) ^ (v255
                                                                                               - ((2 * v255) & 4)
                                                                                               + 2)) ^ 0x57977F82)
        - 1469546430
        + ((2 * v258) & 0x17C ^ 0x78))
       % 0x72;
  int v260 = dword_100288680[BYTE2(v235) ^ 0x5A];
  unsigned int v261 = ((BYTE1(v243) ^ 0x2E | 0xA3601F78) - (BYTE1(v243) ^ 0x2E | 0x5C9FE087) + 1553981575) ^ 0xA3041D62;
  unsigned int v262 = (((2 * (BYTE1(v243) ^ 0x8D)) & 0xE6) - (BYTE1(v243) ^ 0x8D) - 1131204212) ^ 0xB8B71984;
  int v263 = dword_1002875A0[v248 ^ 0xCF];
  HIDWORD(v148) = v263 ^ 0x91;
  LODWORD(v148) = v263 ^ 0x2E359800;
  int v264 = v260 ^ dword_100292E80[HIBYTE(v231) ^ 0xD0] ^ (((32 * v260) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v260) ^ 0x6B1C9380)) & 0x66F78380)
                                                      - 1283735099) ^ ((v148 >> 8)
                                                                     - ((2 * (v148 >> 8)) & 0xA47A9DEE)
                                                                     - 767734025) ^ ((v261 | 0x3D0DEAF8)
                                                                                   - (v261 | 0xC2F21507)
                                                                                   - 1024322297);
  int v265 = dword_100288680[BYTE2(v243) ^ 0x19];
  int v266 = (((32 * v265) ^ 0x6B1C9380) - ((2 * ((32 * v265) ^ 0x6B1C9380)) & 0x3C4A23C0) - 1641737749) ^ v265;
  HIDWORD(v148) = v266 ^ 0x1973C29;
  LODWORD(v148) = v266 ^ 0x8A000000;
  unsigned int v267 = v264 ^ dword_10028BAF0[(((2 * v262) & 0x84032D4) - v262 + 1078322837) ^ 0x4461CE11];
  int v268 = (v148 >> 25) - ((2 * (v148 >> 25)) & 0x86E1502C) - 1016027114;
  unsigned int v269 = ((v231 ^ 0x7D) - ((2 * (v231 ^ 0x7D)) & 0x14) - 72085238) ^ 0x91D674B5;
  unsigned int v270 = ((2 * (BYTE1(v248) ^ 0xF3)) | 0x80EEEED6) - (BYTE1(v248) ^ 0xF3) + 1065912469;
  HIDWORD(v148) = v268 ^ 5;
  LODWORD(v148) = v268 ^ 0xB6140700;
  unsigned int v271 = dword_1002875A0[(v269 - ((2 * v269) & 0x9404D528) + 1326967444) ^ 0x25758FC4];
  unsigned int v272 = dword_10028BAF0[((BYTE1(v248) ^ 0xCE) + ((v248 >> 8) & 0xC7 ^ 0x201) - ((BYTE1(v248) ^ 0xCE) & 0xFFFFFFC7)) ^ 0x252] ^ dword_100292E80[HIBYTE(v235) ^ 9] ^ (((v271 << 24) ^ 0x91000000) - ((2 * ((v271 << 24) ^ 0x91000000)) & 0xEFFFFFFF) + 2008364344) ^ ((v270 & 0xC0714075 ^ 0x8C80014) + (v270 & 0x63F8A ^ 0x402338B) - 1) ^ ((v148 >> 7) - ((2 * (v148 >> 7)) & 0x4C9A84A6) - 1504886189);
  int v273 = dword_100288680[((HIWORD(v248) & 0xA3 ^ 0x8406B302) + (HIWORD(v248) & 0x5C ^ 0x60084041) - 1) ^ 0xE40EF38C];
  int v274 = dword_1002875A0[v235 ^ 0x45];
  HIDWORD(v148) = v274 ^ 0x91;
  LODWORD(v148) = v274 ^ 0x2E359800;
  unsigned int v275 = v273 ^ ((BYTE1(v231) ^ 0x8200A3E) + ((v231 >> 8) & 0xC3 ^ 0x230981C1) - ((BYTE1(v231) ^ 0x8200A3E) & 0xC3)) ^ dword_10028BAF0[((BYTE1(v231) ^ 0xFFFFFFBA) + 1687710252 + ((2 * BYTE1(v231)) | 0x36CF2BAA)) ^ 0x9B679544] ^ (((32 * v273) ^ 0x6B1C9380) - ((2 * ((32 * v273) ^ 0x6B1C9380)) & 0x84CB9AC0) + 1113967976) ^ ((v148 >> 8) - ((2 * (v148 >> 8)) & 0x11C6DB02) - 1998361215) ^ dword_100292E80[HIBYTE(v243) ^ 0x35];
  unsigned int v276 = v272 ^ (v271 >> 8);
  char v279 = (v259 ^ 0xE3) + 29 + ((2 * v259) & 0xC6);
  if ((v259 ^ 0xEEFEBFFF) + 2 * v259 != -285294593) {
    char v279 = 0;
  }
  unsigned __int8 v280 = (((v258 ^ 0x3C) - v279) ^ 0x7F) + 2 * ((v258 ^ 0x3C) - v279) - 127;
  int v281 = dword_1002875A0[(v280 - 2 * (v280 & 1) + 1798969857) ^ 0x6B3A1AB2];
  HIDWORD(v282) = v281 ^ 0x91;
  LODWORD(v282) = v281 ^ 0x2E359800;
  int v283 = dword_100288680[BYTE2(v275) ^ 0x2B];
  int v278 = ((2 * (BYTE1(v275) ^ 0x2822329F)) | 0x18A127C2) - (BYTE1(v275) ^ 0x2822329F) - 206607329;
  int v277 = dword_100288680[((HIWORD(v276) & 0xD ^ 0x92844005) + (HIWORD(v276) & 0xF2 ^ 0x20671) - 1) ^ 0x92864655];
  unsigned int v284 = v277 ^ dword_100292E80[HIBYTE(v267) ^ 6] ^ dword_10028BAF0[v278 ^ 0x2472A1D1] ^ (((32 * v277) ^ 0x6B1C9380)
                                                                                        - ((2
                                                                                          * ((32 * v277) ^ 0x6B1C9380)) & 0x7CEDC700)
                                                                                        + 1047978900) ^ v278 ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0xC0409D24) - 534753646);
  unsigned int v285 = (BYTE1(v258) ^ 0xEB045B2E) - ((2 * (BYTE1(v258) ^ 0xEB045B2E)) & 0x4000357A) + 611359421;
  int v286 = ((BYTE1(v258) ^ 0x88) - ((2 * (BYTE1(v258) ^ 0x88)) & 0x1EA) + 913739509) ^ 0x6364F5D;
  int v287 = dword_1002875A0[(((2 * (v267 ^ 0xB7)) & 0x1E0) - (v267 ^ 0xB7) + 29455) ^ 0x73BC];
  HIDWORD(v282) = v287 ^ 0x91;
  LODWORD(v282) = v287 ^ 0x2E359800;
  unsigned int v288 = HIBYTE(v258) ^ 0x2D;
  int v289 = ((2 * (BYTE2(v258) ^ 0xC5)) | 0x5F77467C) - (BYTE2(v258) ^ 0xC5) - 800826174;
  unsigned int v290 = dword_100292E80[HIBYTE(v272) ^ 0x69] ^ v283 ^ (((32 * v283) ^ 0x6B1C9380)
                                                      - ((2 * ((32 * v283) ^ 0x6B1C9380)) & 0x6175B340)
                                                      + 817551788) ^ ((v282 >> 8)
                                                                    - ((2 * (v282 >> 8)) & 0x1673E49C)
                                                                    - 1959136690) ^ v285 ^ dword_10028BAF0[((v286 | 0xD80ADDC0) - (v286 | 0x27F5223F) + 670376511) ^ 0xE84A1CE0];
  int v291 = dword_100288680[((v289 & 0x1A1A529 ^ 0x10C44521) + (v289 & 0x2E1A02D6 ^ 0x2E1A0295) - 1) ^ 0x1165E46A];
  int v292 = dword_1002875A0[v276 ^ 0x8F];
  HIDWORD(v282) = v292 ^ 0x91;
  LODWORD(v282) = v292 ^ 0x2E359800;
  unsigned int v293 = v291 ^ dword_100292E80[HIBYTE(v275) ^ 0x19] ^ dword_10028BAF0[BYTE1(v267) ^ 0x8F] ^ (((2
                                                                                              * (BYTE1(v267) ^ 0x700258AB)) & 0x200081A0)
                                                                                            - (BYTE1(v267) ^ 0x700258AB)
                                                                                            - 347889873) ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0x97A3C31E) - 875437681) ^ (((32 * v291) ^ 0x6B1C9380) - ((2 * ((32 * v291) ^ 0x6B1C9380)) & 0xB3674A80) + 1504945481);
  int v294 = dword_100288680[(((v267 >> 15) & 0x152) + (BYTE2(v267) ^ 0xFFFFFFE9) + 1304516695) ^ 0x4DC158FE];
  unsigned int v295 = ((v276 >> 8) & 0xD ^ 0xE8A3BF07) + ((v276 >> 8) & 0xD0 ^ 0x51) - 1;
  int v296 = ((2 * (BYTE1(v276) ^ 0x5C)) | 0x15648B42) - (BYTE1(v276) ^ 0x5C) + 1968028255;
  LOWORD(v295) = (v295 & 0xB5 ^ 0x684) + (v295 & 0x4A ^ 0xB) + 4095;
  int v297 = dword_1002875A0[(((2 * (v275 ^ 0x1008202A)) | 0x57363316)
                        - (v275 ^ 0x1008202A)
                        + 1415898741) ^ 0xBB93392B];
  HIDWORD(v282) = v297 ^ 0x91;
  LODWORD(v282) = v297 ^ 0x2E359800;
  unsigned int v298 = dword_100292E80[v288] ^ v294 ^ (((32 * v294) ^ 0x6B1C9380)
                                       - ((2 * ((32 * v294) ^ 0x6B1C9380)) & 0x7712C780)
                                       - 1148623912) ^ ((((2 * ((v276 >> 8) & 0x22 ^ 0x945D3236)) & 0x3A6040)
                                                       - ((v276 >> 8) & 0x22 ^ 0x945D3236)
                                                       - 691878057) & 0x9FE1E2 | 0x8320021C) ^ ((v282 >> 8)
                                                                                              - ((2 * (v282 >> 8)) & 0xEC223040)
                                                                                              + 1980831776) ^ dword_10028BAF0[((v296 & 0x2300658 ^ 0x6340BA59) + (v296 & 0x88241A7) - 1) ^ 0x69F2FF98] ^ ((v295 & 0x4DD ^ 0x99E567B6) + 1067996247 + ((2 * ((v295 & 0x4DD ^ 0x99E567B6) & 0x5C ^ (v295 | 0xFFFFFFF7))) ^ 0x33408015));
  int v299 = dword_100288680[BYTE2(v290) ^ 0xFC];
  unsigned int v300 = ((BYTE1(v293) ^ 0xD3 | 0xC19C053A) - (BYTE1(v293) ^ 0xD3 | 0x3E63FAC5) + 1046739653) ^ 0xC7BC053A;
  int v301 = dword_1002875A0[((v298 ^ 0x42) - ((2 * (v298 ^ 0x42)) & 0x1BC) + 2526) ^ 0x98A];
  HIDWORD(v282) = v301 ^ 0x91;
  LODWORD(v282) = v301 ^ 0x2E359800;
  unsigned int v302 = dword_100292E80[HIBYTE(v284) ^ 0xB6] ^ v299 ^ dword_10028BAF0[((BYTE1(v293) ^ 0x2A54D087)
                                                                      + ((v293 >> 8) & 0x2C ^ 0x15200128)
                                                                      - ((BYTE1(v293) ^ 0x2A54D087) & 0x2A44502C)) ^ 0x1530815D] ^ (((32 * v299) ^ 0x6B1C9380) - ((2 * ((32 * v299) ^ 0x6B1C9380)) & 0x1792DBC0) + 197750271) ^ ((v282 >> 8) - ((2 * (v282 >> 8)) & 0x65B0CBB0) + 853042648) ^ (v300 - ((2 * v300) & 0x1AF91498) - 847476148);
  int v303 = (HIWORD(v293) & 0xFE ^ 0x566095D1) - (HIWORD(v293) & 1);
  int v304 = dword_100288680[((v303 & 0x12200510 ^ 0x281A4810) + (v303 ^ 0x57648743) - ((v303 ^ 0x57648743) & 0x40210)) ^ 0x3B3A5D8B];
  unsigned int v305 = dword_1002875A0[(((2 * (v284 ^ 0x2804A519)) & 0x90188)
                        - (v284 ^ 0x2804A519)
                        + 768111931) ^ 0x5CCD080];
  int v306 = dword_100292E80[HIBYTE(v290) ^ 0x30] ^ dword_10028BAF0[(((v298 >> 8) & 0x31 ^ 0x4B471C10)
                                                               + ((v298 >> 8) & 0xCE ^ 7)
                                                               - 1) ^ 0x4B471C2C] ^ v304 ^ (v305 >> 8) ^ (((32 * v304) ^ 0x6B1C9380) - ((2 * ((32 * v304) ^ 0x6B1C9380)) & 0x285A3C0) + 21156329);
  int v307 = dword_100288680[BYTE2(v298) ^ 0x8E];
  int v308 = v306 ^ BYTE1(v298);
  unsigned int v309 = (((v305 << 24) ^ 0x91000000) - ((2 * ((v305 << 24) ^ 0x91000000)) & 0xAE000000) + 1470564818) ^ v308 ^ 0x61C21882;
  unsigned int v310 = dword_1002875A0[v290 ^ 0x74];
  int v311 = dword_100288680[BYTE2(v284) ^ 0x99];
  unsigned int v312 = v307 ^ dword_100292E80[HIBYTE(v293) ^ 0xFA] ^ (((2 * (BYTE1(v284) ^ 0xE823A7D4)) & 0x100500C4)
                                                      - (BYTE1(v284) ^ 0xE823A7D4)
                                                      + 2002878365) ^ dword_10028BAF0[((BYTE1(v284) ^ 0x48290006 | 0x2C5087AC)
                                                                                     - (BYTE1(v284) ^ 0x48290006 | 0xD3AF7853)
                                                                                     - 743475117) ^ 0x64798788] ^ (v310 >> 8) ^ (((32 * v307) ^ 0x6B1C9380) - ((2 * ((32 * v307) ^ 0x6B1C9380)) & 0x28D81300) + 342624642) ^ (((v310 << 24) ^ 0x91000000) - ((2 * ((v310 << 24) ^ 0x91000000)) & 0x4A000000) + 624497110);
  unsigned int v313 = ((BYTE1(v290) ^ 0xDD | 0x53367355) - (BYTE1(v290) ^ 0xDD | 0xACC98CAA) - 1396077398) ^ 0x43367AC5;
  unsigned int v314 = ((v293 & 0xE ^ 0xFF369D05) + (v293 & 0xF1) - 1) ^ 0xB91A1D8F;
  int v315 = dword_1002875A0[(((2 * v314) | 0xEC7E9E98) - v314 + 163623092) ^ 0xB013CF88];
  HIDWORD(v282) = v315 ^ 0x91;
  LODWORD(v282) = v315 ^ 0x2E359800;
  unsigned int v316 = dword_100292E80[HIBYTE(v298) ^ 0x7F] ^ dword_10028BAF0[(((2 * (BYTE1(v290) ^ 0xA)) & 0x1B6)
                                                               - (BYTE1(v290) ^ 0xA)
                                                               + 5924) ^ 0x175B] ^ v311 ^ ((v282 >> 8)
                                                                                         - ((2 * (v282 >> 8)) & 0x47CAAB52)
                                                                                         - 1545251415) ^ (v313 - ((2 * v313) & 0x6F7F086E) - 138443721) ^ (((32 * v311) ^ 0x6B1C9380) - ((2 * ((32 * v311) ^ 0x6B1C9380)) & 0x6340B480) + 832592479);
  unsigned int v317 = ((BYTE2(v306) ^ 0xC6 | 0xF72E6087) - (BYTE2(v306) ^ 0xC6 | 0x8D19F78) + 147955576) ^ 0xAF2C2085;
  int v318 = dword_100281290[(((2 * v317) & 0x21F850FC) - v317 - 284960895) ^ 0xB7019790];
  HIDWORD(v282) = v318 ^ 0x1EC;
  LODWORD(v282) = v318 ^ 0x4C235C00;
  int v319 = (v316 ^ 0x12B1D9E3)
       + (v316 & 0x6D ^ 0x410E260C)
       - ((v316 ^ 0x12B1D9E3) & 0x1210C86D);
  int v320 = HIBYTE(v302) ^ dword_100295740[HIBYTE(v302) ^ 0xB0] ^ dword_100288F80[((BYTE1(v312) ^ 0xD4)
                                                                              - ((2 * (BYTE1(v312) ^ 0xD4)) & 0xA2)
                                                                              + 1361) ^ 0x525] ^ 0x1C1EAC65 ^ ((v282 >> 10) + 256456930 - ((2 * (v282 >> 10)) & 0x1E927220) + 46);
  unsigned int v321 = ((2 * (v320 & 0xA1A9E454 ^ 0xA0A88054)) | 0x35A5B442) - (v320 & 0xA1A9E454 ^ 0xA0A88054) + 1697457631;
  unsigned int v322 = ((v321 & 0x3158090C ^ 0x31480905 | v321 & 0xCEA7F6F0) - 1) ^ 0xAB3AF330 | ((v320 & 0x5E561BAB ^ 0x100207AB)
                                                                                  - ((2
                                                                                    * (v320 & 0x5E561BAB ^ 0x100207AB)) & 0x90800354)
                                                                                  - 915889666) ^ 0xC378A5F4;
  int v323 = dword_100288B80[((v319 & 0x5FFEB1 ^ 0xC537801) + (v319 & 0xA0014E ^ 0x10A0010D) - 1) ^ 0x1C5C4EB7];
  HIDWORD(v282) = v323 ^ 0x189E7;
  LODWORD(v282) = v323 ^ 0xDC00000;
  unsigned int v324 = (v282 >> 18) - ((2 * (v282 >> 18)) & 0x3914C0F0) - 1668652936;
  unsigned int v325 = ((v324 >> 2) & 0x21D899CA ^ 0x1089182 | 0xC89725B0)
       - ((v324 >> 2) & 0x21D899CA ^ 0x1089182 | 0x3768DA4F)
       + 929618511;
  unsigned int v326 = v324 ^ ((BYTE1(v312) ^ 0x14A022ED | 0x64680870) - (BYTE1(v312) ^ 0x14A022ED | 0x9B97F78F) - 1684539505) ^ ((v325 & 0xC61B5DB2 ^ 0x16081193 | v325 & 0x29E4A248) - 1) ^ (v322 - ((2 * v322) & 0x733CB426) + 966679059);
  unsigned int v327 = HIBYTE(v309) ^ 0x9FD654DF;
  int v328 = dword_100295740[HIBYTE(v309) ^ 0x7E] ^ 0x68B0356A;
  int v329 = (v328 & v327) + 1291989934 - ((2 * (v328 & v327)) & 0x1A042950);
  unsigned int v330 = v328 + v327;
  unsigned int v331 = ((2 * v330) & 0xFEEFFFE4)
       + (v330 ^ 0x7F77FFF2)
       + ((2 * v329 + 1012) ^ 0x8A046B19)
       + ((2 * (2 * v329 + 1012)) & 0xDFFFFF6C ^ 0xEBF729DF);
  int v332 = dword_100281290[BYTE2(v312) ^ 0xF];
  unsigned int v333 = v331 - 2 * ((v331 + 814219206) & 0x2480641F ^ v330 & 1);
  HIDWORD(v282) = v332 ^ 0x1EC;
  LODWORD(v282) = v332 ^ 0x4C235C00;
  int v334 = (v282 >> 10) - ((2 * (v282 >> 10)) & 0xD748F04) + 112871298;
  unsigned int v335 = ((BYTE1(v316) ^ 0xFD | 0x88BD08DF) - (BYTE1(v316) ^ 0xFD | 0x7742F720) + 2000877344) ^ 0x35248C94;
  int v336 = ((2 * v335) & 0x77D5791C) - v335 - 1005239439;
  int v337 = (v302 & 0xE2 ^ 3) - (v302 & 0x1D) + 1081648924;
  int v338 = dword_100288B80[((v337 & 0x280B6B ^ 0x8014960) + (v337 ^ 0x413AA69F) - ((v337 ^ 0x413AA69F) & 0x1420B6B)) ^ 0x8294AB4];
  HIDWORD(v282) = v338 ^ 0x189E7;
  LODWORD(v282) = v338 ^ 0xDC00000;
  unsigned int v339 = (v282 >> 18) - ((2 * (v282 >> 18)) & 0x6777225E) + 867930415;
  int v340 = v334 ^ dword_100288F80[(((2 * (BYTE1(v316) ^ 0x8285162)) | 0xD7BBEE6) - (BYTE1(v316) ^ 0x8285162) + 2034376845) ^ 0x8E958E3D] ^ v339 ^ (v339 >> 2) & 0x21D899CA ^ v336;
  int v341 = dword_100281290[BYTE2(v316) ^ 0x8D];
  unsigned int v342 = v340 ^ (v333 - 1794612252);
  HIDWORD(v282) = v341 ^ 0x1EC;
  LODWORD(v282) = v341 ^ 0x4C235C00;
  unsigned int v343 = ((2 * (BYTE1(v302) ^ 0xC8)) & 0xFFFFFFF7) - (BYTE1(v302) ^ 0xC8) - 918247164;
  unsigned int v344 = ((v343 & 0x804AF45 ^ 0x36000641) + (v343 ^ 0xC967F904) - ((v343 ^ 0xC967F904) & 0x35F45)) ^ 0x3E24AFB0;
  LOBYTE(v343) = ((2 * (((v342 & 0x12 ^ 2) - ((2 * (v342 & 0x12 ^ 2)) & 4) - 89) ^ 0xB4)) | 0x76)
               - (((v342 & 0x12 ^ 2) - ((2 * (v342 & 0x12 ^ 2)) & 4) - 89) ^ 0xB4)
               + 69;
  int v345 = (v308 & 0x1E ^ 0x5B219711) + (v308 & 0xE1) - 1;
  int v346 = dword_100288B80[((v345 & 0x42000258 ^ 0x24440048) + (v345 ^ 0x52AA6AB7) - ((v345 ^ 0x52AA6AB7) & 0x189F858)) ^ 0x6E46076D];
  unsigned int v347 = ((((v346 ^ 0xDC189E7u) >> (v343 ^ 0xB8))
         - ((2 * ((v346 ^ 0xDC189E7u) >> (v343 ^ 0xB8))) & 0x2C1FFD82)
         - 1777336639) ^ 0x960FFEC1) >> (v343 ^ 0xAA);
  unsigned int v348 = (v347 - ((2 * v347) & 0x675D3F24) + 867082130) ^ 0x33AE9F92 | (((v346 << 14) ^ 0x6279C000)
                                                                      - ((2 * ((v346 << 14) ^ 0x6279C000)) & 0x64910000)
                                                                      - 1303869637) ^ 0xB248873B;
  unsigned int v349 = v348 - ((2 * v348) & 0x1B4E3E2A) + 229056277;
  unsigned int v350 = dword_100281290[((((BYTE2(v302) ^ 0xB6) + (HIWORD(v302) & 0x69 ^ 0x6088E449) - ((BYTE2(v302) ^ 0xB6) & 0x69)) & 0x43E ^ 0x18D2C03)
                        + (((BYTE2(v302) ^ 0xB6) + (HIWORD(v302) & 0x69 ^ 0x6088E449) - ((BYTE2(v302) ^ 0xB6) & 0x69)) & 0x3C1)
                        - 1) ^ 0x18D2887];
  unsigned int v351 = ((HIBYTE(v312) ^ 0x8000007E) - 1951391687 + (~(2 * (HIBYTE(v312) ^ 0x8000007E)) | 0xFFFFFF8F)) ^ (1226963448 - (BYTE1(v302) ^ 0xC6) + ((2 * (BYTE1(v302) ^ 0xC6)) | 0x6DBBF05C) + 3546) & 0x7FFFFFFF ^ dword_100295740[HIBYTE(v312) ^ 0x5B] ^ dword_100288F80[v344] ^ ((v282 >> 10) - ((2 * (v282 >> 10)) & 0x83315FF2) - 1046958087) ^ v349 ^ (((v349 >> 2) & 0x21D899CA ^ 0x219080C0 | 0x8214981C) - ((v349 >> 2) & 0x21D899CA ^ 0x219080C0 | 0x7DEB67E3) + 2112579555);
  int v352 = BYTE1(v309);
  int v353 = STACK[0x568];
  unsigned int v354 = ((v352 ^ 0x6C | 0x6321ABB4) - (v352 ^ 0x6C | 0x9CDE544B) - 1663151029) ^ 0x7383BA24;
  int v355 = dword_100288F80[((v352 ^ 0x14B30D4) - ((2 * (v352 ^ 0x14B30D4)) & 0x2142022) - 247819503) ^ 0xF071A37E];
  int v356 = dword_100295740[HIBYTE(v316) ^ 0x58] ^ (v350 >> 10) ^ HIBYTE(v316) ^ (((v350 << 22) ^ 0x7B000000)
                                                                             - 1105428950
                                                                             - ((2 * ((v350 << 22) ^ 0x7B000000)) & 0x7C000000)
                                                                             + 2139);
  unsigned int v357 = (v355 ^ 0x5E2B57EF) + (v355 ^ v356 ^ 0xE8BD47D1) + 1;
  unsigned int v358 = (v356 ^ ((v356 ^ 0xB696103E) + 495852841 + (~(2 * (v356 ^ 0xB696103E) + 2) | 0xC4E3C5B1)) ^ 0x7E2D3201 ^ (v357 - ((2 * v357) & 0x559581CE) + 717930727))
       + (v355 ^ 0x5E2B57EF);
  unsigned int v359 = v358 - ((2 * v358) & 0xFDF20A4C) + 2130248998;
  unsigned int v360 = dword_100288B80[v312 ^ 0x31];
  unsigned int v361 = (v360 << 8) ^ 0xC189E700;
  unsigned int v362 = (v361 - ((2 * v361) & 0x4E830C00) - 1488877837) & 0xFC000000 ^ 0xA4860504;
  int v363 = (v361 - ((2 * v361) & 0x1F69C00) + 50023983) & 0x3FFFF00;
  unsigned int v364 = ((v363 ^ 0xFCBFF5FF) + 1748730223 + ((2 * v363) | 0x2F88FD24)) ^ 0x1FF57EF3;
  v360 >>= 24;
  int v365 = (((2 * v362) & 0x69040008) - v362 + 1230800251) ^ 0x49DA807F | v360 ^ 0xD;
  unsigned int v366 = (v365 - 2 * (v365 & 0x54006007 ^ v360 & 2) - 725458939) ^ 0xD4C26005 | (((2 * v364) & 0x1517A202)
                                                                               - v364
                                                                               + 896806642) ^ 0xBCFE6A93;
  int v367 = v366 - ((2 * v366) & 0x1C11136C) - 1912043082;
  HIDWORD(v282) = v367 ^ 0x37B27AC;
  LODWORD(v282) = v367 ^ 0x5C000000;
  unsigned int v368 = (v282 >> 26) - ((2 * (v282 >> 26)) & 0x850FA2CE) - 1031286425;
  unsigned int v369 = v359 ^ ((v354 | 0x86032236) - (v354 | 0x79FCDDC9) + 2046614985) ^ v368 ^ (((v368 >> 2) & 0x21D899CA ^ 0x200009C8)
                                                                                 - ((2
                                                                                   * ((v368 >> 2) & 0x21D899CA ^ 0x200009C8)) & 0x43300100)
                                                                                 - 509721456) & 0xFFFC9FDA;
  unsigned int v370 = (unsigned char *)STACK[0xA08];
  int v371 = (unsigned char *)STACK[0xA08];
  v370[10] = byte_100295620[(((2 * (BYTE1(v351) ^ 0x242445DD)) | 0x81CDECAA) - (BYTE1(v351) ^ 0x242445DD) - 1088878165) ^ 0x64C2B38DLL] ^ 0xD0;
  int v372 = (BYTE1(v369) ^ 0x94) - ((v369 >> 7) & 0xD4) + 1069443178;
  v370[14] = byte_100295620[((v372 & 0xA7D ^ 0xA702A15) + (v372 & 0x582 ^ 0x21000003u) - 1) ^ 0x2B70223ELL] ^ 0x43;
  v370[1] = byte_1002936C0[((BYTE2(v326) ^ 0x2809005B)
                          + (HIWORD(v326) & 0x67 ^ 0x83220124)
                          - ((BYTE2(v326) ^ 0x2809005B) & 0x10067)) ^ 0xAB2A01A3] ^ 0x86;
  unsigned int v373 = (((2 * (BYTE2(v369) ^ 0xDF)) | 0x9DFE1A9C) - (BYTE2(v369) ^ 0xDF) + 822145714) ^ 0x548D0525;
  v370[13] = byte_1002936C0[(-1726053798 - v373 + ((2 * v373) | 0xCDC2F26A) + 1137) ^ 0xFC9371CELL] ^ 0x86;
  unsigned int v374 = ((v351 ^ 0xD640BBC5)
        + (v351 & 0xF2 ^ 0x82B4032)
        - ((v351 ^ 0xD640BBC5) & 0xC040ABF2)) ^ 0x8E495D6A;
  LOBYTE(v365) = ((2 * (v351 ^ 0xA5)) & 0x48) - (v351 ^ 0xA5) + 91;
  LOBYTE(v365) = (v365 & 0xFB ^ 0xE0) + (v365 ^ 0x1B) - ((v365 ^ 0x1B) & 0xFB);
  LOBYTE(v374) = byte_100284840[((v374 | 0xA61E5B0D) - (v374 | 0x59E1A4F2) + 1507960050) ^ 0x367C56E7];
  LOBYTE(v357) = v365 ^ v374;
  LOBYTE(v374) = 2 * (((v365 ^ 0x6F) & (v374 ^ 0x6F)) - ((2 * ((v365 ^ 0x6F) & (v374 ^ 0x6F))) & 0x18)) + 24;
  LOBYTE(v374) = v357 + (v374 ^ 0x47) + ((2 * v374) & 0xBF ^ 0x30) - 95;
  v371[11] = (v374 - ((2 * v374) & 0x58) + 44) ^ 0xA;
  LOBYTE(v374) = byte_10026C9B0[HIBYTE(v326) ^ 0x76];
  int v375 = ((2 * (BYTE2(v342) ^ 0xDC)) & 0x1E0) - (BYTE2(v342) ^ 0xDC) + 939267343;
  *int v371 = (v374 - 2 * ((v374 + 78) ^ v374 & 1) + 76) ^ 0x7B;
  unsigned int v376 = ((BYTE2(v342) ^ 0x40) + (HIWORD(v342) & 0x5B ^ 0x21B) - ((BYTE2(v342) ^ 0x40) & 0x5B)) ^ 0xFFFFFDA1;
  unsigned int v377 = (v375 & 0x16201001 | 0x2C252) + (v375 ^ 0xD7A51787) - ((v375 ^ 0xD7A51787) & 0x20490001) + 1454;
  unsigned int v378 = (v376 - 2 * ((v376 + 38) & 0xB975471 ^ v376 & 1) - 1953016682) ^ v377 ^ 0x93B5FEC6 ^ ((v377 ^ 0x29CD25CA)
                                                                                             - ((2 * (v377 ^ 0x29CD25CA)
                                                                                               + 2) & 0x9C20E106)
                                                                                             - 837783420);
  v371[5] = byte_1002936C0[(v378 - ((2 * v378 + 74) & 0xE1FF065A) + 1895793490) ^ 0x70FF8391] ^ 0x3D;
  unsigned int v379 = ((BYTE1(v326) ^ 0x69) + ((v326 >> 8) & 0x91 ^ 0x50354590) - ((BYTE1(v326) ^ 0x69) & 0x91)) ^ 0xB13FEEBC;
  v371[2] = byte_100295620[(((2 * v379) | 0x7201ACBC) - v379 - 956356190) ^ 0xD80A7D4ELL] ^ 0x1A;
  v371[9] = byte_1002936C0[(((2 * (BYTE2(v351) ^ 0x2200250D)) & 0x40000310) - (BYTE2(v351) ^ 0x2200250Du) - 1706384265) ^ 0xB84A811FLL] ^ 0x20;
  LOBYTE(v372) = byte_10026C9B0[HIBYTE(v369) ^ 0xA0];
  v371[12] = (v372 + ((2 * v372 - 100) & 0x80) - 114) ^ 0x29;
  int v380 = HIBYTE(v351) ^ 0xE9;
  unsigned int v381 = v380
       + (((HIBYTE(v351) ^ 0xFFFFFFA5) + 1) ^ 0x25DFBBCF)
       + ((2 * ((HIBYTE(v351) ^ 0xFFFFFFA5) + 1)) & 0x4BBF779E)
       - 635419599;
  unsigned int v382 = ((v381 - ((2 * v381) & 0x2528C1E6) - 1835769613) ^ 0x6D6B9F0D) + v380;
  LOBYTE(v382) = byte_10026C9B0[(v382 - ((2 * v382) & 0x6C6A605C) - 1238028242) ^ 0xB63530DD];
  v371[8] = (v382 - 2 * ((v382 + 78) & 0xF7 ^ v382 & 1) + 68) ^ 0xD0;
  LOBYTE(v382) = (byte_100284840[(((2 * (v342 ^ 0x98)) & 0xFFFFFFDF)
                                - (v342 ^ 0x98)
                                + 16656) ^ 0x410FLL] ^ 0x6F)
               + (v342 ^ 0x41);
  v371[7] = (v382 - ((2 * v382) & 0x55) + 42) ^ 0x88;
  unsigned int v383 = (((2 * (BYTE1(v342) ^ 0xE9)) | 0xF2046E2A) - (BYTE1(v342) ^ 0xE9) + 117295339) ^ 0x59041F56;
  unint64_t v384 = STACK[0x570];
  v371[6] = byte_100295620[((v383 | 0x5BA7E472) - (v383 | 0xA4581B8D) - 1537729651) ^ 0xFBA1CC64] ^ 0xEA;
  LOBYTE(v383) = (byte_100284840[((v326 & 0x52 ^ 0x8C9DE42)
                                + (v326 ^ 0x400420B9)
                                - ((v326 ^ 0x400420B9) & 0x40040052)) ^ 0x8C9FE76] ^ 0x6F)
               + (v326 ^ 0x5B);
  v371[3] = (v383 - ((2 * v383) & 0x4A) - 91) ^ 0x6F;
  unsigned int v385 = ((v369 & 0x87 ^ 0xFFD34206) + (v369 & 0x78 ^ 0x21) - 1) ^ 0x6A7894B7;
  LOBYTE(v385) = (v369 ^ 0x96) + (byte_100284840[(((2 * v385) & 0x522946) - v385 - 1753037988) ^ 0x229159DLL] ^ 0x6F);
  v371[15] = (v385 - ((2 * v385) & 0x4C) - 90) ^ 0xD5;
  LOBYTE(v385) = byte_10026C9B0[HIBYTE(v342) ^ 0x8FLL];
  v371[4] = ((2 * v385 - 100) & 0xF4) - v385 + 55;
  unint64_t v386 = (v353 - 295160460) ^ 0xFFFFFFFF173B6C39;
  unsigned int v387 = 1755343967
       * (((v386 + v384 + 111978952) ^ *(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & 0x561E13BC))) & 0x7FFFFFFF);
  *(unsigned char *)(v384 + 111978952 + v386) ^= byte_100291660[((_BYTE)v386 - 56) & 0xF | (16
                                                                                  * ((1755343967 * (v387 ^ HIWORD(v387))) >> 24))] ^ (95 * (v387 ^ BYTE2(v387)));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v353))();
}

void sub_1001FE6AC()
{
}

uint64_t sub_1001FE6B4()
{
  if (v1 + (((v2 ^ 0xEE683D53) - 268535426) & v0) == 1723752819) {
    int v4 = v3;
  }
  else {
    int v4 = 387111794;
  }
  LODWORD(STACK[0x84C]) = v4;
  BOOL v6 = v4 != v3 || STACK[0x678] == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((v6
                                    * ((((v2 ^ 0xEE683D53) - 558) | 0x1B) + (((v2 ^ 0xEE683D53) - 714) | 0x320) - 3297)) ^ v2 ^ 0xEE683D53)))();
}

uint64_t sub_1001FE750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x788] = (((v7 ^ 0x26Bu) + 569) ^ 0xFFFFFFFFFFFFFFE8) + a6;
  return (*(uint64_t (**)(void))(a4 + 8 * ((v6 == 387156805) | ((v6 == 387156805) << 10) | v7)))();
}

void sub_1001FE79C(int a1@<W8>)
{
  int v1 = (void *)STACK[0x718];
  STACK[0x590] = STACK[0x718] + 40;
  v1[13] = 0xDED30A4024145F56;
  v1[14] = 0x1482B5319C0A3DB9;
  v1[15] = 0xEB7D4ACE63F5C246;
  *(void *)((char *)v1 + 132) = 0xC8643A156B9173A0;
  uint64_t v2 = (a1 + 892 + LODWORD(STACK[0x774]) - 629594508);
  LODWORD(STACK[0x754]) = v2;
  STACK[0x808] = (v2 | ((unint64_t)(v2 < 0x5675B644) << 32)) + 0x2BC116DF365F1015;
  JUMPOUT(0x1001FE864);
}

uint64_t sub_1001FE99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v9 = (*(_DWORD *)(v7 + 68) ^ 0xDED30A40) + a7 - 1715765038;
  unsigned int v10 = v9 - ((v9 << ((((v8 - 6) | 8) + 17) ^ (v8 + 84) & 0xBD)) & 0xBDA61480) - 556594624;
  *(_DWORD *)(v7 + 68) = v10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((14 * ((v10 ^ 0xDED30A40) >= a7 - 1715765038)) ^ v8)))();
}

uint64_t sub_1001FEA30@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v1 + 64) += (196 * (a1 ^ 0x292)) ^ 0x7A9;
  return ((uint64_t (*)(void))STACK[0x7F8])();
}

void sub_1001FEA60()
{
}

uint64_t sub_1001FEA78@<X0>(int a1@<W8>)
{
  int v8 = a1 + 1;
  char v9 = *(unsigned char *)(STACK[0x880] + (a1 - 1464837090));
  *(unsigned char *)(v1 + (v4 ^ 0xF6ADAFD7) + v3) = v9 - ((2 * v9) & 0xF4) - 6;
  BOOL v10 = v8 + v5 < v6;
  if (v6 < v7 != v8 + v5 < v2) {
    BOOL v10 = v6 < v7;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((1117 * v10) ^ (v4 - 948))))(2830130206);
}

void sub_1001FEB0C()
{
}

void sub_1001FEB18()
{
  STACK[0x6C0] = STACK[0x630] + 16;
  JUMPOUT(0x1001EEFCCLL);
}

void sub_1001FEB34()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 315)))(v2);
  ((void (*)(unint64_t))*(&off_1002E1F70 + (v1 ^ 0xEDD)))(STACK[0xA10]);
  JUMPOUT(0x10021D4B0);
}

uint64_t sub_1001FEB3C(uint64_t a1, unsigned int a2)
{
  if (STACK[0x348]) {
    int v3 = STACK[0x550];
  }
  else {
    int v3 = STACK[0x4A0];
  }
  if (STACK[0x348]) {
    int v4 = STACK[0x408];
  }
  else {
    int v4 = STACK[0x404];
  }
  if (STACK[0x348]) {
    int v5 = STACK[0x3C8];
  }
  else {
    int v5 = STACK[0x3D8];
  }
  if (STACK[0x348]) {
    int v6 = STACK[0x3B0];
  }
  else {
    int v6 = STACK[0x3AC];
  }
  int v7 = STACK[0x2B4];
  if (STACK[0x348]) {
    int v7 = STACK[0x2B0];
  }
  int v8 = STACK[0x2B8];
  if ((STACK[0x348] & 1) == 0) {
    int v8 = STACK[0x2A8];
  }
  int v9 = LODWORD(STACK[0x320]) ^ LODWORD(STACK[0x390]);
  int v10 = LODWORD(STACK[0x388]) ^ LODWORD(STACK[0x310]);
  unsigned int v11 = (v2 + 1309598121) & 0xBB00BEEB;
  int v12 = STACK[0x2D0];
  if (STACK[0x348])
  {
    int v12 = STACK[0x29C];
    int v13 = STACK[0x2BC];
  }
  else
  {
    int v13 = STACK[0x29C];
  }
  BOOL v14 = LODWORD(STACK[0x548]) == -776490363;
  int v15 = STACK[0x3F8];
  if (LODWORD(STACK[0x548]) != -776490363) {
    int v15 = STACK[0x3E8];
  }
  LODWORD(STACK[0x390]) = v15;
  int v16 = STACK[0x3A8];
  if (v14) {
    int v16 = STACK[0x3A4];
  }
  LODWORD(STACK[0x404]) = v16;
  int v17 = STACK[0x568];
  if (v14) {
    int v17 = STACK[0x374];
  }
  LODWORD(STACK[0x4A0]) = v17;
  int v18 = STACK[0x570];
  if (v14) {
    int v18 = STACK[0x398];
  }
  LODWORD(STACK[0x2D0]) = v18;
  int v19 = STACK[0x394];
  if (!v14) {
    int v19 = STACK[0x38C];
  }
  LODWORD(STACK[0x38C]) = v19;
  int v20 = STACK[0x308];
  if (v14) {
    int v21 = v12;
  }
  else {
    int v21 = STACK[0x308];
  }
  LODWORD(STACK[0x3AC]) = v21;
  if (v14) {
    int v12 = v20;
  }
  LODWORD(STACK[0x3A8]) = v12;
  if (v14) {
    int v22 = v8;
  }
  else {
    int v22 = v7;
  }
  LODWORD(STACK[0x3A4]) = v22;
  if (!v14) {
    int v7 = v8;
  }
  LODWORD(STACK[0x3F8]) = v7;
  unsigned int v23 = v9 ^ 0xFBAF4907;
  LODWORD(STACK[0x3C8]) = v3;
  LODWORD(STACK[0x3B0]) = v4;
  if (v14) {
    int v24 = v3;
  }
  else {
    int v24 = v4;
  }
  LODWORD(STACK[0x394]) = v24;
  int v25 = STACK[0x4E8];
  if (v14) {
    int v25 = STACK[0x4D0];
  }
  LODWORD(STACK[0x408]) = v25;
  LODWORD(STACK[0x348]) = v5;
  LODWORD(STACK[0x320]) = v6;
  if (v14) {
    int v26 = v5;
  }
  else {
    int v26 = v6;
  }
  LODWORD(STACK[0x388]) = v26;
  int v27 = STACK[0x3D4];
  LODWORD(STACK[0x29C]) = v13;
  if (v14) {
    int v27 = v13;
  }
  LODWORD(STACK[0x398]) = v27;
  int v28 = STACK[0x4C0];
  if (STACK[0x4C0]) {
    unsigned int v23 = STACK[0x264];
  }
  LODWORD(STACK[0x264]) = v23;
  int v29 = v10 ^ (v11 - 1282867164);
  if (v28)
  {
    int v30 = STACK[0x278];
  }
  else
  {
    int v29 = STACK[0x23C];
    int v30 = STACK[0x270];
  }
  if (v28) {
    int v31 = STACK[0x26C];
  }
  else {
    int v31 = STACK[0x248];
  }
  int v32 = STACK[0x240];
  if (v28) {
    int v33 = STACK[0x248];
  }
  else {
    int v33 = STACK[0x240];
  }
  if ((v28 & 1) == 0) {
    int v32 = STACK[0x250];
  }
  int v34 = STACK[0x37C];
  if ((v28 & 1) == 0) {
    int v34 = STACK[0x2A0];
  }
  BOOL v35 = (v28 & 2) == 0;
  if ((v28 & 2) != 0) {
    int v29 = STACK[0x2A4];
  }
  LODWORD(STACK[0x2BC]) = v29;
  int v36 = STACK[0x24C];
  if (v35) {
    int v37 = STACK[0x24C];
  }
  else {
    int v37 = v34;
  }
  LODWORD(STACK[0x2B4]) = v37;
  if (v35) {
    int v38 = v34;
  }
  else {
    int v38 = v36;
  }
  LODWORD(STACK[0x2B8]) = v38;
  int v39 = STACK[0x298];
  if (v35) {
    int v39 = STACK[0x294];
  }
  LODWORD(STACK[0x2B0]) = v39;
  int v40 = STACK[0x268];
  if (v35) {
    int v40 = STACK[0x258];
  }
  LODWORD(STACK[0x26C]) = v40;
  int v41 = STACK[0x480];
  LODWORD(STACK[0x310]) = v30;
  if (v35) {
    int v41 = v30;
  }
  LODWORD(STACK[0x2A8]) = v41;
  LODWORD(STACK[0x278]) = v31;
  LODWORD(STACK[0x250]) = v32;
  if (v35) {
    int v42 = v31;
  }
  else {
    int v42 = v32;
  }
  LODWORD(STACK[0x2A0]) = v42;
  int v43 = STACK[0x378];
  LODWORD(STACK[0x258]) = v33;
  if (v35) {
    int v43 = v33;
  }
  LODWORD(STACK[0x2A4]) = v43;
  unint64_t v44 = v11 + 38 - 2072664713 + a2 + ((unint64_t)(a2 < 0x7B8A5580) << 32);
  *(void *)(STACK[0xA30] + 8 * v44) = *(void *)(STACK[0xA18] + 8 * v44) ^ 0x9696969696969696;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)((27 * (a2 - 2072663423 > 1)) ^ v11)))();
}

void sub_1001FF4A8()
{
}

uint64_t sub_1001FF4B8@<X0>(int a1@<W0>, uint64_t a2@<X3>, int a3@<W8>)
{
  unint64_t v5 = (a1 - 1670360394) & 0x638FAF6B;
  STACK[0x570] = v5;
  unint64_t v6 = a2 ^ v5 ^ 0xE1A5DB7216E45FB9;
  unint64_t v7 = (((v6 >> (a2 & 0x1B ^ 0x18)) - ((2 * (v6 >> (a2 & 0x1B ^ 0x18))) & 0x53CD490A0C583730) + 0x29E6A485062C1B98) ^ 0x29E6A485062C1B98) >> (a2 & 0x1B ^ 3);
  unint64_t v8 = v6 + (v7 ^ 0xA1851088460A8305) - ((2 * v7) & 0xBCF5DEEF73EAF9F4) + 0x5E7AEF77B9F57CFBLL;
  unint64_t v9 = ((2 * v8) & 0xEDFFDFF9FFFDBFB4)
     + (v8 ^ 0xF6FFEFFCFFFEDFDALL)
     + (((((2 * v8) & 0xEDFFDFF9FFFDBFB4) + (v8 ^ 0xF6FFEFFCFFFEDFDALL) + 0x900100300012026) >> 14) ^ 0xCA10880800030005)
     - (((((2 * v8) & 0xEDFFDFF9FFFDBFB4) + (v8 ^ 0xF6FFEFFCFFFEDFDALL) + 0x900100300012026) >> 13) & 0x6EFEFFFF9FFF4);
  unint64_t v10 = v9
      + (((v9 + 0x3EEF87FAFFFE2021) >> 6) ^ 0x40044C436002408CLL)
      - (((v9 + 0x3EEF87FAFFFE2021) >> 5) & 0x7F767793FFB7EE6)
      + 2;
  uint64_t v11 = v10 - ((2 * v10 + 0x3DD6776F3FF7BF26) & 0x217DE5309423B2DCLL) - 0x7055D1B015F246FFLL;
  unint64_t v12 = ((2 * ((v11 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55)) & 0x527FF7FF6C86EDDELL)
      + (((v11 ^ 0x90BEF2984A11D96ELL) + 0x301F1AB817992D55) ^ 0xA93FFBFFB64376EFLL);
  unint64_t v13 = v12
      + (((v12 + 0x56C0040049BC8911) >> 24) ^ 0x8514005D1886068)
      - (((v12 + 0x56C0040049BC8911) >> 23) & 0x1F45CEF3F2ELL);
  unint64_t v14 = v13
      + (((v13 + 0x4E6EC3FA783428A9) >> 14) ^ 0x2181A08408064FCLL)
      - (((v13 + 0x4E6EC3FA783428A9) >> 13) & 0x7CBEF7EFF3606);
  unint64_t v15 = v14
      + (((v14 + 0x4C56A9F237B3C3ADLL) >> 6) ^ 0xAC7BA0ECF7ED2CFELL)
      + (((v14 + 0x4C56A9F237B3C3ADLL) >> 5) & 0xF741D9EFDA59FCLL)
      + 2;
  unint64_t v16 = v15 - ((2 * v15 + 0x3FB6120A7F8D2D5ALL) & 0xEAE86454B4804144) + 0x154F3B2F9A06B74FLL;
  unint64_t v17 = ((2 * ((v16 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13)) & 0xFF3FBBDFFD51B8EALL)
      + (((v16 ^ 0x7574322A5A4020A2) - 0x5C4C23E8A21DDE13) ^ 0x7F9FDDEFFEA8DC75);
  unint64_t v18 = (((v17 - 0x7F9FDDEFFEA8DC75) >> 27) ^ 0xE367F2FE7F499FDFLL)
      + v17
      + (((v17 - 0x7F9FDDEFFEA8DC75) >> 26) & 0x3CFE933FBELL);
  unint64_t v19 = (((v18 - 0x6307D0EE7DF27C54) >> 12) ^ 0x7BFFBEFF7FEFFFDBLL)
      + v18
      + (((v18 - 0x6307D0EE7DF27C54) >> 11) & 0x1F7DFEFFDFFFB6);
  unint64_t v20 = v19
      + (((v19 + 0x20F87012021D83D1) >> 2) ^ 0x88C8D50028C44042)
      - (((v19 + 0x20F87012021D83D1) >> 1) & 0x6E6E55FFAE777F7ALL);
  LODWORD(v6) = v20 + 1311975575 + (~(2 * (v20 + 1) - 1296922852) | 0x164C35F1);
  unint64_t v21 = v20
      + 1
      + (((v20 - 0x544BE01A667A9023) >> 30) ^ 0x40804084304080CLL)
      - (((v20 - 0x544BE01A667A9023) >> 29) & 0x779F7EFE6);
  unint64_t v22 = v21
      + (((v21 - 0x5853E422A97E9830) >> 12) ^ 0x3826A0B224040980)
      - (((v21 - 0x5853E422A97E9830) >> 11) & 0x12BE9BB7F7ECFELL);
  unint64_t v23 = v22
      + (((v22 + 0x6F857B2B327D5E50) >> 7) ^ 0x540D102B300036)
      - (((v22 + 0x6F857B2B327D5E50) >> 6) & 0x357E5DFA99FFF92)
      + 3;
  uint64_t v24 = v23 - ((2 * v23 + 0x5E62DC360E9ABC2ELL) & 0x7A50F41BFA2E2E8CLL) - 0x53A617D6FB9B8AA3;
  unint64_t v25 = ((2 * ((v24 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL)) & 0xEF6EFD9BDE2AE7DELL)
      + (((v24 ^ 0x3D287A0DFD171746) + 0x3DEAA251E4C860FCLL) ^ 0xF7B77ECDEF1573EFLL);
  unint64_t v26 = (((v25 + 0x848813210EA8C11) >> 31) ^ 0xFA3FDF7F5B5F59EFLL)
      + v25
      + (((v25 + 0x848813210EA8C11) >> 30) & 0x2B6BEB3DELL);
  unint64_t v27 = (((v26 + 0xE08A1B2B58B3222) >> 8) ^ 0x6F66F7FFFEE835EDLL)
      + v26
      + (((v26 + 0xE08A1B2B58B3222) >> 7) & 0xCDEFFFFDD06BDALL);
  unint64_t v28 = (((v27 - 0x615E564D495D03CBLL) >> 7) ^ 0x7FFCEFFEDFD5BF71)
      + v27
      + (((v27 - 0x615E564D495D03CBLL) >> 6) & 0x3F9DFFDBFAB7EE2);
  unint64_t v29 = v28 - ((2 * v28 + 0x3D497367AD9A7988) & 0x68F62DF03D80F4D6) - 0x2CE02F540A7248D1;
  unint64_t v30 = (v29 ^ 0x8A37D526F36D0EA4)
      + ((v29 >> 30) ^ 0xC015002A4DA1E3BLL)
      + ((v29 >> 29) & 0x6E7F56ABELL ^ 0xFFFFFFFBBE4BD7C9)
      - 0xC0150008C054A9FLL;
  unint64_t v31 = (((((2 * v30) & 0x7BBBBFCD3CFFDE66) + (v30 ^ 0x3DDDDFE69E7FEF33) - 0x3DDDDFE69E7FEF33) >> 13) ^ 0x5FFFF9D75FDFCD7FLL)
      + ((2 * v30) & 0x7BBBBFCD3CFFDE66)
      + (v30 ^ 0x3DDDDFE69E7FEF33)
      + (((((2 * v30) & 0x7BBBBFCD3CFFDE66) + (v30 ^ 0x3DDDDFE69E7FEF33) - 0x3DDDDFE69E7FEF33) >> 12) & 0xFF3AEBFBF9AFELL);
  unint64_t v32 = v31
      + (((v31 + 0x6222264201A0434ELL) >> 2) ^ 0x3001002202380)
      - (((v31 + 0x6222264201A0434ELL) >> 1) & 0x7FF9FFDFFBBFB8FELL);
  LODWORD(v6) = v6 ^ v3 ^ (v32 + 1 - ((2 * (v32 + 1) - 16760934) & 0xAEE80918) + 1458840665);
  int v33 = (v6 & 0x34EEE5CD ^ 0x142884C8) - ((2 * (v6 & 0x34EEE5CD ^ 0x142884C8)) & 0x2889099A) - 1638556433;
  LODWORD(v6) = ((v6 & 0xCB111A32 ^ 0xC0011032) - ((2 * (v6 & 0xCB111A32 ^ 0xC0011032)) & 0x221424) + 609970903) ^ 0x27586A23;
  unint64_t v34 = v32
      + 1
      + (((v32 + 0x309D26821377148ALL) >> 25) ^ 0x589834008C143440)
      - (((v32 + 0x309D26821377148ALL) >> 24) & 0xFEE7D7977ELL);
  LODWORD(v6) = ((v6 | 0x242DC32C) - (v6 | 0xDBD23CD3) - 606978861) ^ 0x243FD3E8 | v33 ^ 0x8A1F1CE2;
  unint64_t v35 = v34
      + (((v34 - 0x27FB0D7E789D1FB7) >> 9) ^ 0x7BF77D797FFDFE39)
      + (((v34 - 0x27FB0D7E789D1FB7) >> 8) & 0xEEFAF2FFFBFC72);
  unint64_t v36 = v35
      + ((v35 + 0x5C0D75080764E210) & 0xFBFAB7EF5F96E7FELL)
      + (((v35 + 0x5C0D75080764E210) >> 1) ^ 0xFDFD5BF7AFCB73FFLL)
      + 1;
  unint64_t v37 = v36 - ((2 * v36 - 0x43DFCDDF50CD23E0) & 0xE899B830513D3928) - 0x2DA30AD77FC7F55CLL;
  unint64_t v38 = ((2 * ((v37 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL)) & 0xFFEFD3FFFEEFFDBELL)
      + (((v37 ^ 0x744CDC18289E9C94) + 0x38FC44A9709D19CALL) ^ 0x7FF7E9FFFF77FEDFLL);
  unint64_t v39 = v38
      + (((v38 - 0x7FF7E9FFFF77FEDFLL) >> 24) ^ 0xC38C399177920040)
      - (((v38 - 0x7FF7E9FFFF77FEDFLL) >> 23) & 0xDD10DBFF7ELL);
  unint64_t v40 = v39
      + (((v39 - 0x438423917709FF1FLL) >> 15) ^ 0xC4020900000302DLL)
      - (((v39 - 0x438423917709FF1FLL) >> 14) & 0x3BEDFFFFF9FA4);
  unint64_t v41 = v40
      + (((v40 - 0x4FC44421770A2F4CLL) >> 8) ^ 0xBDCCFFBCADDFDACBLL)
      + (((v40 - 0x4FC44421770A2F4CLL) >> 7) & 0x199FF795BBFB596)
      + 2;
  uint64_t v42 = v41 - ((2 * v41 + 0x24DD7843B62BEBCELL) & 0x2A6CFD59271E04C0) + 0x7A53ACE6EA4F847;
  unint64_t v43 = ((2 * ((v42 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7)) & 0xBEF7EF5AED75FFFELL)
      + (((v42 ^ 0x15367EAC938F0260) + 0x627FE9C2823FDEE7) ^ 0xDF7BF7AD76BAFFFFLL);
  unint64_t v44 = (((v43 + 0x2084085289450001) >> 29) ^ 0xFFF6EB75739F7778)
      + v43
      + (((v43 + 0x2084085289450001) >> 28) & 0xAE73EEEF0);
  unint64_t v45 = v44
      + (((v44 + 0x208D1CDD15A58889) >> 9) ^ 0x8250978028201040)
      - (((v44 + 0x208D1CDD15A58889) >> 8) & 0x5ED0FFAFBFDF7ELL);
  int v46 = ((v45 - 0x61C37AA3127A87B7) >> 5) - (((v45 - 0x61C37AA3127A87B7) >> 4) & 0x7FBC4066);
  LODWORD(v45) = ((2 * (v45 - 310020023)) & 0x766DFE26)
               + ((v45 - 310020023) ^ 0xBB36FF13)
               + ((v46 + 1071521843) ^ 0xC823DF84)
               + ((2 * (v46 + 1071521843)) & 0xEFFBFF6E ^ 0x6FB84066);
  int v47 = (v45 - ((2 * v45 - 1718222228) & 0xD4A96278) - 1222659470) ^ (v6 - ((2 * v6) & 0x56212718) - 1424977012);
  LODWORD(v6) = (((2 * (v47 & 7 ^ 2)) & 4) - (v47 & 7 ^ 2) + 222521261) ^ 0xD43712F;
  LODWORD(STACK[0x550]) = v47;
  LOBYTE(v45) = (v47 ^ 0x4F) + 1;
  LOBYTE(v47) = v45 ^ 6;
  LOBYTE(v45) = 2 * v45;
  int v48 = ((2 * v6) | 0xDCB8F832) - v6 + 295928807;
  LODWORD(v6) = ((_BYTE)v47 + (v45 & 4) + 2) & 7;
  LODWORD(v45) = v45 & 2;
  LODWORD(STACK[0x308]) = v6;
  LODWORD(STACK[0x268]) = v45;
  int v49 = v6 - v45 + 1435045793;
  if (v48 == -295933287) {
    int v50 = 0;
  }
  else {
    int v50 = 255;
  }
  LODWORD(STACK[0x374]) = v49;
  LODWORD(STACK[0x568]) = v49 ^ 0x55890FA1;
  int v51 = ((v50 << (v49 ^ 0xA1)) - ((2 * (v50 << (v49 ^ 0xA1))) & 0xFB) + 125);
  unsigned int v52 = (((-(v51 ^ 0xD6) - 1645525761) ^ 0xB10BD0F5 | 0x66A28745)
       - ((-(v51 ^ 0xD6) - 1645525761) ^ 0xB10BD0F5 | 0x995D78BA)
       - 1721927494) ^ 0x981AC209;
  LODWORD(STACK[0x3D8]) = v48;
  if (v48 == -295933287) {
    unsigned int v52 = -765931246;
  }
  BOOL v53 = LODWORD(STACK[0x548]) == -776490363;
  int v54 = STACK[0x4E0];
  if (LODWORD(STACK[0x548]) == -776490363) {
    int v54 = STACK[0x4C8];
  }
  LODWORD(STACK[0x248]) = v54;
  int v55 = STACK[0x4A8];
  if (!v53) {
    int v55 = STACK[0x47C];
  }
  LODWORD(STACK[0x3E8]) = v55;
  int v56 = STACK[0x454];
  if (!v53) {
    int v56 = STACK[0x450];
  }
  LODWORD(STACK[0x358]) = v56;
  int v57 = STACK[0x348];
  if (v53) {
    int v57 = STACK[0x320];
  }
  LODWORD(STACK[0x298]) = v57;
  int v58 = STACK[0x3D4];
  if (!v53) {
    int v58 = STACK[0x29C];
  }
  LODWORD(STACK[0x294]) = v58;
  int v59 = STACK[0x3D0];
  if (!v53) {
    int v59 = STACK[0x3CC];
  }
  LODWORD(STACK[0x29C]) = v59;
  int v60 = STACK[0x430];
  if (v53) {
    int v60 = STACK[0x3DC];
  }
  LODWORD(STACK[0x270]) = v60;
  LODWORD(STACK[0x320]) = LODWORD(STACK[0x284]) - LODWORD(STACK[0x288]);
  if (STACK[0x4C0]) {
    int v61 = STACK[0x28C];
  }
  else {
    int v61 = STACK[0x37C];
  }
  BOOL v62 = (STACK[0x4C0] & 2) == 0;
  int v63 = STACK[0x378];
  if ((STACK[0x4C0] & 2) != 0) {
    int v63 = STACK[0x258];
  }
  LODWORD(STACK[0x284]) = v63;
  int v64 = STACK[0x278];
  if (v62) {
    int v64 = STACK[0x250];
  }
  LODWORD(STACK[0x278]) = v64;
  int v65 = v29 ^ v16;
  unsigned int v66 = v24 ^ v11 ^ v4 ^ v37;
  unsigned int v67 = v65 ^ a3 ^ v42;
  LODWORD(STACK[0x450]) = ((2 * (v66 & 0xFFFFFF80 ^ 0xCC8A1D84)) | 0x9973EE06) - (v66 & 0xFFFFFF80 ^ 0xCC8A1D84);
  int v68 = ((v51 ^ 0x5F) - ((2 * (v51 ^ 0x5F)) & 0x30) + 4888) ^ 0x133A;
  LODWORD(STACK[0x3CC]) = (33686018 * v68) & 0x32B68E26;
  LODWORD(STACK[0x378]) = 16843009 * v68 + 425412371;
  int v69 = ((452984832 * v68 - ((905969664 * v68) & 0x6C000000) + 913300291) ^ 0x366FDB43) & (v67 ^ 0x2D8241C1);
  LODWORD(STACK[0x240]) = v69 - ((2 * v69) & 0xE000000) - 2016149605;
  LODWORD(STACK[0x24C]) = (~(2
                           * ((((v66 ^ 0xC8D0C49F ^ v52) + 1) ^ 0xB3)
                            + ((v52 ^ 0xD258D112 | v66 ^ 0xD90E0472) ^ 0xBE)
                            + ((2 * ((v66 ^ 0xC8D0C49F ^ v52) + 1)) & 0x66)
                            + ((2 * (v52 ^ 0xD258D112 | v66 ^ 0xD90E0472)) & 0x7C)
                            + 143)) | 0xFFFFFEAD)
                        + ((((v66 ^ 0x9F ^ v52) + 1) ^ 0xB3)
                                          + ((v52 ^ 0x12 | v66 ^ 0x72) ^ 0xBE)
                                          + ((2 * ((v66 ^ 0x9F ^ v52) + 1)) & 0x66)
                                          + ((2 * (v52 ^ 0x12 | v66 ^ 0x72)) & 0x7C)
                                          - 113)
                        + 2022818218;
  unsigned int v70 = BYTE2(v66) ^ HIBYTE(v66) ^ (v66 | 0x37CD500) ^ 0xD26CDD36 ^ (((v66 >> 8) & 0xC6 ^ 0xD1100885)
                                                                                    + ((v66 >> 8) & 0x39)
                                                                                    - 1);
  unsigned int v71 = 16843009 * v70 - ((33686018 * v70) & 0xE8977E04) + 1951121154;
  LODWORD(STACK[0x454]) = v67;
  int v72 = HIBYTE(v67) ^ 0x401015C1 ^ (((v67 ^ (v67 >> 8) ^ HIWORD(v67)) & 0x6E ^ 0x40101541)
                                  + ((v67 ^ (v67 >> 8) ^ HIWORD(v67)) & 0x91)
                                  - 1);
  int v73 = 16843009 * v72 - ((33686018 * v72) & 0x244BC178) - 1843011396;
  int v74 = *(void *)(STACK[0xA30]
                  + 8
                  * ((*(void *)(STACK[0xA30]
                                + 8
                                * ((*(void *)(STACK[0xA30] + 8 * ((*(_DWORD *)STACK[0xA30] & 1) == 0)) & 1) == 0)) & 1) == 0)) & 1;
  unsigned int v75 = ((~(2 * v74) + v74 - 1526184742) ^ 0xFF97CF36)
      - 815712825
      + ((2 * (~(2 * v74) + v74 - 1526184742)) & 0x10019E ^ 0x100192);
  LODWORD(STACK[0x4E0]) = v66;
  int v76 = v66 & 0x7F ^ 2;
  LODWORD(STACK[0x4C8]) = 33686018 * v76;
  LODWORD(STACK[0x47C]) = (33686018 * v76) & 0xC4E0A262;
  int v77 = STACK[0x3C4];
  LODWORD(STACK[0x348]) = v61;
  if (!v62) {
    int v77 = v61;
  }
  LODWORD(STACK[0x28C]) = v77;
  int v78 = STACK[0x3A0];
  if (v62) {
    int v78 = STACK[0x39C];
  }
  LODWORD(STACK[0x288]) = v78;
  LODWORD(STACK[0x430]) = v76;
  LODWORD(STACK[0x23C]) = 16843009 * v76 - 495955663;
  LODWORD(STACK[0x3D4]) = v71;
  LODWORD(STACK[0x3D0]) = v73;
  LODWORD(STACK[0x4A8]) = v73 ^ v71;
  BOOL v79 = v75 > 0x2A00C1B7;
  if (v75 < 0x2A00C1B6) {
    BOOL v79 = 1;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((118 * v79) ^ STACK[0x570])))();
}

uint64_t sub_100200D68()
{
  unsigned int v2 = v1 - 839;
  BOOL v3 = LODWORD(STACK[0x548]) == -776490363;
  int v4 = STACK[0x558];
  if (LODWORD(STACK[0x548]) != -776490363) {
    int v4 = STACK[0x4F0];
  }
  LODWORD(STACK[0x3DC]) = v4;
  int v5 = STACK[0x4E8];
  if (!v3) {
    int v5 = STACK[0x4D0];
  }
  LODWORD(STACK[0x258]) = v5;
  int v6 = STACK[0x4B8];
  if (v3) {
    int v6 = STACK[0x4B0];
  }
  LODWORD(STACK[0x37C]) = v6;
  int v7 = STACK[0x49C];
  if (!v3) {
    int v7 = STACK[0x498];
  }
  LODWORD(STACK[0x250]) = v7;
  BOOL v8 = (STACK[0x4C0] & 2) == 0;
  int v9 = STACK[0x274];
  if ((STACK[0x4C0] & 2) != 0) {
    int v9 = STACK[0x264];
  }
  LODWORD(STACK[0x274]) = v9;
  int v10 = STACK[0x3A0];
  if (!v8) {
    int v10 = STACK[0x39C];
  }
  LODWORD(STACK[0x264]) = v10;
  int v11 = STACK[0x380];
  if (!v8) {
    int v11 = STACK[0x260];
  }
  LODWORD(STACK[0x260]) = v11;
  int v12 = STACK[0x4E0];
  LODWORD(STACK[0x498]) = LODWORD(STACK[0x4E0]) ^ 0x864A9377;
  LODWORD(STACK[0x47C]) = LODWORD(STACK[0x23C]) - LODWORD(STACK[0x47C]);
  int v13 = LODWORD(STACK[0x378]) - LODWORD(STACK[0x3CC]);
  LODWORD(STACK[0x380]) = v13;
  LODWORD(STACK[0x49C]) = LODWORD(STACK[0x240]) ^ v13;
  LODWORD(STACK[0x218]) = (v1 - 1428680142) ^ LODWORD(STACK[0x4A8]);
  LODWORD(STACK[0x3A0]) = v12 ^ 0x3A801845;
  STACK[0x570] = v2 ^ 0x68A;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(v2 ^ 0x33A ^ (113 * ((v0 + (unint64_t)v2) >> 32)))))();
}

void sub_100201580()
{
}

#error "100206DC4: call analysis failed (funcsize=3576)"

uint64_t sub_100206DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,uint64_t a56,uint64_t a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  LODWORD(STACK[0x3BC]) = a76 - LODWORD(STACK[0x36C]);
  int v77 = LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x370]) ^ LODWORD(STACK[0x498]) ^ a75;
  LODWORD(STACK[0x370]) = a52 ^ LODWORD(STACK[0x480]);
  LODWORD(STACK[0x3C4]) = v77 ^ a74 ^ a73 ^ a72 ^ a70 ^ a68 ^ a65 ^ a66 ^ a51 ^ a50 ^ a60 ^ a59 & 0xDF03F2AC;
  unsigned int v78 = a53 ^ LODWORD(STACK[0x550]) ^ a54 ^ a67 ^ LODWORD(STACK[0x24C]) ^ a62 ^ a61 ^ a55 ^ a49 & 0xDF1BF6BC;
  LODWORD(STACK[0x24C]) = v78;
  LODWORD(STACK[0x36C]) = v78 ^ 0xD8424A6D;
  STACK[0x570] = v76 ^ 0x415u;
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((((a8 - 1816423545) > 1) | (16
                                                                                      * ((a8 - 1816423545) > 1))) ^ v76)))(213616);
}

void sub_1002079B4()
{
}

uint64_t sub_1002079BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,int a63)
{
  int v67 = LODWORD(STACK[0x478]) ^ LODWORD(STACK[0x204]);
  LODWORD(STACK[0x204]) = a64 - a65;
  unint64_t v68 = (v66 ^ 0xC4B876F2AEE1A5ECLL)
      + ((v66 >> 27) ^ 0x140B21885F0EBFD4)
      + ((v66 >> 26) & 0x1E6FFF3CFCLL ^ 0xFFFFFFEFD1E2C357)
      - 0x140B2190C8006180;
  unint64_t v69 = ((2 * v68) & 0x5EB78F5D7FD5D7FCLL)
      + (v68 ^ 0x2F5BC7AEBFEAEBFELL)
      + (((((2 * v68) & 0x5EB78F5D7FD5D7FCLL) + (v68 ^ 0x2F5BC7AEBFEAEBFELL) - 0x2F5BC7AEBFEAEBFELL) >> 14) ^ 0xCEA18405C50A000ALL)
      - (((((2 * v68) & 0x5EB78F5D7FD5D7FCLL) + (v68 ^ 0x2F5BC7AEBFEAEBFELL) - 0x2F5BC7AEBFEAEBFELL) >> 13) & 0x4F7F475EBFFEALL);
  unint64_t v70 = v69
      + (((v69 + 0x202B44B7B0B13F8) >> 6) ^ 0xCAA0233001D02AB0)
      - (((v69 + 0x202B44B7B0B13F8) >> 5) & 0x2BFB99FFC5FAA9ELL)
      + 2;
  uint64_t v71 = v70 - ((2 * v70 + 0x2EC52236F275D28CLL) & 0x321180D0336A34EELL) + 0x506B518392F003BDLL;
  unint64_t v72 = ((2 * ((v71 ^ 0x1908C06819B51A77) + 0x301F1AB817992D55)) & 0xFFFEBFFCDF7BEFF2)
      + (((v71 ^ 0x1908C06819B51A77) + 0x301F1AB817992D55) ^ 0xFFFF5FFE6FBDF7F9);
  unint64_t v73 = v72
      + (((v72 + 0xA00190420807) >> 24) ^ 0x8590A0082044610ELL)
      - (((v72 + 0xA00190420807) >> 23) & 0x1EFBF773DE2);
  unint64_t v74 = v73
      + (((v73 + 0x7A6FFFF96FFDA6F9) >> 14) ^ 0x1412800820078808)
      - (((v73 + 0x7A6FFFF96FFDA6F9) >> 13) & 0x2FFEFBFF0EFEELL);
  unint64_t v75 = v74
      + (((v74 + 0x665D7FF14FF61EF1) >> 6) ^ 0xEEFBBB7BFB5477EFLL)
      + (((v74 + 0x665D7FF14FF61EF1) >> 5) & 0x5F776F7F6A8EFDELL);
  unint64_t v76 = (((v75 + 0x1B15A08CB283C8EFLL) >> 27) ^ 0x7EB41FCF7ADD75DELL)
      + v75
      + 2
      + (((v75 + 0x1B15A08CB283C8EFLL) >> 26) & 0x1EF5BAEBBCLL);
  unint64_t v77 = (((v76 - 0x639E7F42C859ACF1) >> 12) ^ 0x4AB3BFB27AD5CFE9)
      + v76
      + (((v76 - 0x639E7F42C859ACF1) >> 11) & 0x77F64F5AB9FD2);
  unint64_t v78 = v77
      + (((v77 + 0x51ADC10ABCD08326) >> 2) ^ 0x98100A1000440070)
      - (((v77 + 0x51ADC10ABCD08326) >> 1) & 0x4FDFEBDFFF77FF1ELL);
  int v79 = 2 * (v78 + 1);
  int v80 = 4 * (v78 + 1 - ((v79 + 18417002) & 0x4356372));
  unsigned int v81 = (((v80 - 90385992) ^ 0x86AC6E4)
       - 2 * (((v80 - 90385992) ^ 0x86AC6E4) & 0x44F88638 ^ ((_BYTE)v80 + 56) & 8)
       - 990345678) & 0x9A6FB9D0 ^ 0x887A80F2;
  int v82 = v81 - ((2 * v81) & 0x402300) + 606098305;
  int v83 = v78 + 1 - ((v79 + 957941098) & 0x25214DF4) - 820172369;
  unint64_t v84 = v78
      + 1
      + (((v78 - 0x32DDC431834750FCLL) >> 30) ^ 0x41071E04812193)
      - (((v78 - 0x32DDC431834750FCLL) >> 29) & 0x3F6FDBCD8);
  unint64_t v85 = v84
      + (((v84 - 0x331ECB4F87C87290) >> 12) ^ 0x18C020502005210)
      - (((v84 - 0x331ECB4F87C87290) >> 11) & 0x7FBF5FBFF5BDELL);
  unint64_t v86 = v85
      + (((v85 - 0x34AACD5489C8C4A0) >> 7) ^ 0x42B8C80AA2902820)
      - (((v85 - 0x34AACD5489C8C4A0) >> 6) & 0x28E6FEABADFAFBELL)
      + 3;
  unint64_t v87 = v86 - ((2 * v86 + 0x1138D541A74E267ALL) & 0xD0BFBD32A427A0DELL) + 0x70FC493A25BAE3ACLL;
  unint64_t v88 = ((2 * ((v87 ^ 0xE85FDE995213D06FLL) + 0x3DEAA251E4C860FCLL)) & 0x77FAB8E66FE8FFFELL)
      + (((v87 ^ 0xE85FDE995213D06FLL) + 0x3DEAA251E4C860FCLL) ^ 0x3BFD5C7337F47FFFLL);
  unint64_t v89 = (((v88 - 0x3BFD5C7337F47FFFLL) >> 31) ^ 0x6F77F9CBB7FDF7DBLL)
      + v88
      + (((v88 - 0x3BFD5C7337F47FFFLL) >> 30) & 0x36FFBEFB6);
  unint64_t v90 = (((v89 + 0x548AA9C1100D8826) >> 8) ^ 0xEFDFDFF77EFBDC7BLL)
      + v89
      + (((v89 + 0x548AA9C1100D8826) >> 7) & 0x1BFBFEEFDF7B8F6);
  unint64_t v91 = (((v90 + 0x64AAC9C99111ABABLL) >> 7) ^ 0x768B9AE756DCF7F7)
      + v90
      + (((v90 + 0x64AAC9C99111ABABLL) >> 6) & 0x11735CEADB9EFEELL);
  unint64_t v92 = v91 - ((2 * v91 + 0x5C3E5DC474696768) & 0x7148E65BB7D120E2) - 0x593C5DEFE9E2BBDBLL;
  unint64_t v93 = (v92 ^ 0x86E8B0F33645E4BELL)
      + ((v92 >> 30) ^ 0x49D945B1AE6E254)
      + ((v92 >> 29) & 0x5FD77BCCELL ^ 0xFFFFFFFBCABA7B77)
      - 0x49D945901442197;
  unint64_t v94 = (((((2 * v93) & 0x7DEBF9D37AECFDEALL) + (v93 ^ 0x3EF5FCE9BD767EF5) - 0x3EF5FCE9BD767EF5) >> 13) ^ 0xE79FF75FEB7FBFF8)
      + ((2 * v93) & 0x7DEBF9D37AECFDEALL)
      + (v93 ^ 0x3EF5FCE9BD767EF5)
      + (((((2 * v93) & 0x7DEBF9D37AECFDEALL) + (v93 ^ 0x3EF5FCE9BD767EF5) - 0x3EF5FCE9BD767EF5) >> 12) & 0xFEEBFD6FF7FF0);
  unint64_t v95 = v94
      + (((v94 - 0x2695F449A8F63EEDLL) >> 2) ^ 0x28C2443280004E34)
      - (((v94 - 0x2695F449A8F63EEDLL) >> 1) & 0x2E7B779AFFFF6396)
      + 1;
  uint64_t v96 = v95 - ((2 * v95 + 0x614F8F07AE12E5BCLL) & 0x532F0CEC3CB27762) - 0x25C0B2060A9D5171;
  int v97 = ((4 * v96) ^ 0x7964EEC4) - ((2 * ((4 * v96) ^ 0x7964EEC4)) & 0x50792F88) + 675059654;
  unsigned int v98 = ((v97 & 0x22938D0 ^ 0x26A95EB5 | v97 & 0x98468100) - 1) ^ 0x2AF76F7D;
  int v99 = (((2 * v98) | 0x41485962) - v98 + 1599853391) ^ v96;
  unint64_t v100 = ((2 * ((v96 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44)) & 0xF57B4766CFFF9EF6)
       + (((v96 ^ 0x299786761E593BB1) - 0x3181FFAFEC090B44) ^ 0x7ABDA3B367FFCF7BLL);
  unint64_t v101 = v100
       + (((v100 - 0x7ABDA3B367FFCF7BLL) >> 25) ^ 0x865CE00280400240)
       - (((v100 - 0x7ABDA3B367FFCF7BLL) >> 24) & 0xFAFF7FFB7ELL);
  unint64_t v102 = v101
       + (((v101 - 0x11A83B5E83FD1BBLL) >> 9) ^ 0x777EBDDEDAFDFFFFLL)
       + (((v101 - 0x11A83B5E83FD1BBLL) >> 8) & 0xFD7BBDB5FBFFFELL);
  int v103 = LODWORD(STACK[0x550]) ^ LODWORD(STACK[0x248]) ^ LODWORD(STACK[0x458]);
  unsigned int v104 = ((v103 & 0x6A46EBBD ^ 0x4246E091)
        + (v103 & 0x60406B14 ^ 0x20991B44)
        - ((v103 & 0x6A46EBBD ^ 0x4246E091) & 0x60406B14)) ^ 0x84593A06;
  unsigned int v105 = ((v104 | 0x69841C73) - (v104 | 0x967BE38C) - 1770265716) ^ 0xE7041C31 | (((2 * (v103 & 0x95B91442 ^ 0x422C7E5E)) | 0x69C36830)
                                                                                - (v103 & 0x95B91442 ^ 0x422C7E5E)
                                                                                + 1260276712) ^ 0x76D5DA44;
  unsigned int v106 = v105 - ((2 * v105) & 0xC890CBF4) - 465017350;
  unint64_t v107 = v102
       + ((v102 - 0x78994194C33DD1BALL) & 0xE60BFD53CFD2D3EELL)
       + (((v102 - 0x78994194C33DD1BALL) >> 1) ^ 0x7305FEA9E7E969F7)
       + 1;
  LODWORD(v102) = ((4 * v106) ^ 0x912197E8)
                + 657943968
                - 2 * (((4 * v106) ^ 0x912197E8) & 0x27376DB4 ^ (4 * v106) & 0x10)
                + 4;
  int v108 = (v103 & 0x10 | (32 * (((v103 & 0x10) >> 4) & 1))) ^ 0x7FDF6CDA;
  BOOL v109 = ((v102 ^ 0x27376DA0) & (v108 - 2145348826)) == ((2
                                                                      * ((v102 ^ 0x27376DA0) & (v108 - 2145348826))) & 0x80590FA0);
  uint64_t v110 = v107 - ((2 * v107 + 0x28C17F82A9B1889CLL) & 0x70AC0240598F734ELL) - 0x33493F1E7E5F820BLL;
  uint64_t v111 = ((2 * v110) ^ 0x70AC0240598F734ELL)
       - ((2 * ((2 * v110) ^ 0x70AC0240598F734ELL)) & 0x4C268AF1CE9FC8E8)
       - 0x19ECBA8718B01B8BLL;
  unint64_t v112 = (v110 ^ 0x80AA45895C5AA06DLL)
       + (v111 & 0x71F88952E13A3394 ^ 0x7EB8EEF9DE11A22)
       + ((2 * v111) & 0xC3F11224C0546428 ^ 0xC0200220C0144028)
       - 0x67FB8FBF7CEB3A36;
  unint64_t v113 = ((2 * v112) & 0xBDFBA7F1FAFBFE7CLL)
       + (v112 ^ 0x5EFDD3F8FD7DFF3ELL)
       + (((((2 * v112) & 0xBDFBA7F1FAFBFE7CLL) + (v112 ^ 0x5EFDD3F8FD7DFF3ELL) - 0x5EFDD3F8FD7DFF3ELL) >> 24) ^ 0x803C201A81020011)
       - (((((2 * v112) & 0xBDFBA7F1FAFBFE7CLL) + (v112 ^ 0x5EFDD3F8FD7DFF3ELL) - 0x5EFDD3F8FD7DFF3ELL) >> 23) & 0x1CAFDFBFFDCLL);
  unint64_t v114 = v113
       + (((v113 + 0x20C60BEC818000B1) >> 15) ^ 0x10224972A08C4A18)
       - (((v113 + 0x20C60BEC818000B1) >> 14) & 0x36D1ABEE76BCELL);
  unint64_t v115 = v114
       + (((v114 + 0x10A3C279E0F3B699) >> 8) ^ 0xF5AF9A9FFBAC53BDLL)
       + (((v114 + 0x10A3C279E0F3B699) >> 7) & 0x15F353FF758A77ALL);
  int v116 = v115 + 2;
  LODWORD(v107) = 2 * (v115 + 2);
  unint64_t v117 = (((v115 + 0x7D74119C678741C3) >> 29) ^ 0x7BBB73B7F92FAE2CLL)
       + v115
       + 2
       + (((v115 + 0x7D74119C678741C3) >> 28) & 0xFF25F5C58);
  unint64_t v118 = v117
       + (((v117 + 0x1B89DE46E579395) >> 9) ^ 0xD4D106E808E05C8DLL)
       - (((v117 + 0x1B89DE46E579395) >> 8) & 0x5DF22FEE3F46E4);
  LODWORD(v118) = v118
                + (((v118 + 0x2CE796FC65773708) >> 5) ^ 0xFD7F7FFF)
                + (((v118 + 0x2CE796FC65773708) >> 4) & 0xFAFEFFFE);
  LODWORD(v110) = v118 + 1;
  int v119 = v118 - 231143930 + ~(2 * ((v118 + 133674761) & 0xA414EFE ^ (v118 + 1) & 2));
  int v120 = 4 * (v116 + (~(v107 + 177128884) | 0x5A42B9F)) - 1982516180;
  unsigned int v121 = ((((v120 ^ 0xF4B7A8C0) - 2 * ((v120 ^ 0xF4B7A8C0) & 0x7D820E7C ^ v120 & 4) + 2105675385) & 0x9A6FB9D0 ^ 0x3A5FA747)
        - 1) ^ 0xB3BBEF3A;
  unsigned int v122 = (4 * (LODWORD(STACK[0x560]) ^ LODWORD(STACK[0x468]) ^ LODWORD(STACK[0x498]))) ^ 0x89B20620;
  unsigned int v123 = v122 - ((2 * v122) & 0xA4339970) - 770061125;
  LODWORD(v107) = (4 * (v110 - ((2 * v110 + 133131792) & 0x4801E3E)) - 1461774180) ^ 0x9003C7C;
  int v124 = (v107 - ((2 * v107) & 0xE9B32A18) - 187067124) & 0x98043800 ^ 0xFD147629 | (v107
                                                                                   - ((2 * v107) & 0xE9B32A18)
                                                                                   - 187067124) & 0x26B81D0;
  int v125 = (4 * (LODWORD(STACK[0x4F8]) ^ LODWORD(STACK[0x3E0]) ^ LODWORD(STACK[0x4D8]))) ^ 0x67496394;
  unsigned int v126 = ((v125 - ((2 * v125) & 0x79D56418) + 1022013967) & 0xA6110D0 ^ 0x66E100DD)
       + ((v125 - ((2 * v125) & 0x79D56418) + 1022013967) & 0x900EA900 ^ 0x1002A801)
       - 2;
  unsigned int v127 = v126 & 0x92251140 ^ 0x90A4430B | v126 & 0x84AA890;
  int v128 = ((2 * v102) & 0x344F5380 ^ 0x44E5300) + (v102 & 0x9A6FB9D0 ^ 0xF990C26F);
  unsigned int v129 = (v106 & 0xFFFFFFEF ^ 0x596AAF6F)
       + (v106 & 0xDF4C10E1 ^ 0x86041080)
       - ((v106 & 0xFFFFFFEF ^ 0x596AAF6F) & 0xDF4C10E1);
  int v130 = v108 - 286351432;
  int v131 = -290621076 - v108;
  if (v109) {
    int v131 = v130;
  }
  LODWORD(a56) = v123 & 0x9A6FB9D0;
  unsigned int v132 = (((4 * LODWORD(STACK[0x454])) ^ 0xA3489610)
        - 2 * (((4 * LODWORD(STACK[0x454])) ^ 0xA3489610) & 0xBCB2F44 ^ (4 * LODWORD(STACK[0x454])) & 4)
        - 1949618367) & 0x9A6FB9D0 ^ 0x8EEA394A;
  int v133 = LODWORD(STACK[0x458]) ^ LODWORD(STACK[0x248]) ^ (((2 * v132) | 0x700F6100) - v132 + 1207455616) ^ v129 ^ LODWORD(STACK[0x3BC]) ^ (v128 + v131 - ((2 * (v128 + v131) + 720637694) & 0x6063545A) + 1168880044) ^ v65;
  LODWORD(STACK[0x350]) = LODWORD(STACK[0x3B0]) ^ 0xD72CF292;
  LODWORD(STACK[0x358]) = LODWORD(STACK[0x3C4]) ^ 0x50EE4D89;
  HIDWORD(a55) = v127 - 1;
  int v134 = v133 ^ v83 ^ v82 ^ v99 ^ v119 ^ (v124 - 1);
  LODWORD(STACK[0x248]) = v134;
  LODWORD(STACK[0x348]) = v134 ^ 0xD3694FAB;
  LODWORD(STACK[0x550]) = LODWORD(STACK[0x4B0]) ^ 0xDDAD66E9;
  unsigned int v135 = LODWORD(STACK[0x3D8]) ^ 0xFFFFFF99;
  int v136 = LODWORD(STACK[0x340]) ^ 0xF4;
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x4A8]) ^ 0x61CA86BA;
  int v137 = LODWORD(STACK[0x450]) ^ LODWORD(STACK[0x244]) ^ 0x7E2C1B0D;
  LODWORD(STACK[0x478]) = v67;
  LODWORD(STACK[0x560]) = v67 ^ 0x80E1024D;
  LODWORD(STACK[0x450]) = v121;
  LODWORD(STACK[0x3BC]) = 2 * v121;
  unint64_t v138 = STACK[0xA38];
  unint64_t v139 = STACK[0x570];
  int v140 = ((((723531132 << (STACK[0x570] - 115)) - 32) ^ 0x56406AD8) - 160602496) ^ 0x203178C7;
  unsigned __int8 v141 = ((v140 ^ 0x47) & LOBYTE(STACK[0x550])) - ((2 * ((v140 ^ 0x47) & LOBYTE(STACK[0x550]))) & 0xDA) + 109;
  unsigned int v142 = ((1434178613 - (v141 ^ 0xC) + ((2 * (v141 ^ 0xC)) & 0x194)) ^ 0x557BD454u) >> STACK[0x558];
  unsigned int v143 = (v142 - ((2 * v142) & 0x40) + 32) ^ 0x20 | (((v140 ^ 0x47) << v135) - ((v140 ^ 0x47u) << v135 >> 5 << 6) + 96) ^ 0x60;
  char v144 = v143 + (~(2 * v143) | 0xDB);
  int v145 = (2 * ((STACK[0x4F0] & 0x1AB4AEAE) - ((2 * (STACK[0x4F0] & 0x1AB4AEAE)) & 0xD906F74)) + 227569524) ^ 0xD906F74;
  unsigned int v146 = (v145 - ((2 * v145) & 0xCDD10898) + 1726514252) ^ 0x7C5C2AE2;
  unsigned int v147 = (((v146 & STACK[0x4F8]) + 863603758 - ((2 * (v146 & STACK[0x4F8])) & 0x66F3185C)) ^ 0x33798C2E) >> LODWORD(STACK[0x568]);
  unsigned int v148 = (((v146 & STACK[0x560]) - 91681788 - ((2 * (v146 & STACK[0x560])) & 0xF5121808)) ^ 0xFA890C04) << LODWORD(STACK[0x548]);
  unsigned int v149 = LODWORD(STACK[0x4E0]) ^ LODWORD(STACK[0x4D8]) ^ (v148 - ((2 * v148) & 0x274A0176) + 329580731) ^ (v147 - ((2 * v147) & 0xA644EEBA) + 1394767709) ^ 0xDC88C624;
  unint64_t v150 = STACK[0xA10];
  uint64_t v151 = 4 * (v136 ^ (v144 - 109));
  *(_DWORD *)(STACK[0xA10] + v151) = v149;
  *(_DWORD *)(v138 + v151) = v137 ^ 0x9F288C61;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + (int)v139))(v150, v151, 1394767709, v138, 2191054492, 4203285508, v139, 4269169638, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_100209374()
{
}

#error "10020937C: too big function (funcsize=0)"

uint64_t sub_10021D518@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a1 + 8 * a2))(0x5F5D9DFCE6EFFCF6, 0xD05131018C880185);
}

void sub_10021D5E0()
{
}

uint64_t sub_10021D5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1978 * (v5 == ((v4 ^ 0x2C) - 73))) ^ v4)))();
}

uint64_t sub_10021D624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] += 16;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((83 * (((v5 + (_BYTE)v4 + 13 - 115) & 0xF) != 2 * ((v5 + (_BYTE)v4 + 13 - 115) & 7))) ^ (v4 + 158))))();
}

uint64_t sub_10021D6A4()
{
  STACK[0x570] = (unint64_t)&STACK[0xA90] + v2;
  *(_OWORD *)((char *)&STACK[0xA90] + v2) = xmmword_10026B340;
  unsigned int v3 = 1755343967 * ((v1 ^ *(_DWORD *)(qword_10031EE68 + (dword_10031EC60 & 0x561E13BC))) & 0x7FFFFFFF);
  *((unsigned char *)&STACK[0x14E0] + STACK[0x9B0]) = byte_100291660[16
                                                           * ((1755343967 * ((v3 >> ((23 * (v0 ^ 0x46)) ^ 0x85)) ^ v3)) >> 24)] ^ *v1 ^ (95 * ((v3 >> ((23 * (v0 ^ 0x46)) ^ 0x85)) ^ v3));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v0))();
}

void sub_10021D7B0()
{
}

uint64_t sub_10021D7B8@<X0>(int a1@<W0>, unint64_t a2@<X8>)
{
  STACK[0x9B0] = v2 + ((8 * a1) ^ 0x2380u) - 1800;
  STACK[0xA40] = a2;
  STACK[0xA48] = v3;
  STACK[0xA60] = a2;
  STACK[0xA50] = a2;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (a1 | (8 * (STACK[0x570] == a2)) | ((STACK[0x570] == a2) << 9))))();
}

uint64_t sub_10021D810@<X0>(int a1@<W0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  int v4 = (char *)&STACK[0x14E0] + v3;
  *int v4 = *a3;
  v4[1] = a3[1];
  v4[2] = a3[2];
  v4[3] = a3[3];
  void v4[4] = a3[4];
  void v4[5] = a3[5];
  v4[6] = a3[6];
  v4[7] = a3[7];
  v4[8] = a3[8];
  v4[9] = a3[9];
  v4[10] = a3[10];
  v4[11] = a3[11];
  v4[12] = a3[12];
  v4[13] = a3[13];
  v4[14] = a3[14];
  char v5 = a3[15];
  STACK[0x570] = (unint64_t)v4;
  v4[15] = v5;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((171 * (((a3 == 0) ^ (((a1 - 89) & 0xEB) + 65)) & 1)) ^ (a1 - 585196889) & 0x22E167EB)))();
}

uint64_t sub_10021D8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = (v4 - 1147573553) & 0x44668F6E;
  BOOL v9 = v6 == -1146572414
    || (v6 & 0xE) + (v6 & 0xF ^ 0xFFFFFFFE) + ((v5 + (v7 ^ 0x5EE) + 672) ^ 0x1A25D718 | v6 & 0xF) != 1161137265;
  return (*(uint64_t (**)(void))(a4 + 8 * ((195 * v9) ^ v7)))();
}

uint64_t sub_10021D970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x568]) = v5;
  LODWORD(STACK[0x3D0]) = v4;
  int v7 = (v6 - 1569220777) & 0x5D886765;
  STACK[0xA58] = 0;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v6 + 971)))(1032);
  STACK[0xA68] = v8;
  uint64_t v9 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v6 ^ 0xCDBu)))(1032);
  STACK[0xA58] = v9;
  if (v8) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = !v12;
  LODWORD(STACK[0x560]) = v7;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + ((v13 * ((v6 ^ 0x52D) + v7 - 955)) ^ v6)))(v9, v10, v11);
}

#error "10021DA14: too big function (funcsize=0)"

void sub_10022DAD0()
{
}

uint64_t sub_10022DADC()
{
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)((58
                                                  * ((*(unsigned int *)(STACK[0x580] + 112) ^ 0x6C7F9FF1A4CE3DC5)
                                                   - 0x6C7F9FF10517CCB0
                                                   + ((v0 ^ 0x1FBBDD91ELL) & (2
                                                                            * (*(_DWORD *)(STACK[0x580] + 112) ^ 0x5910D29Eu))) != 4173800107)) ^ (v0 - 725))))(0x7CE71BA66064733FLL);
}

uint64_t sub_10022DBAC(uint64_t a1)
{
  BOOL v9 = v4 < v1;
  *(unsigned char *)(v7 + v8 - 0x22DCFC8A43EDC37) = *(unsigned char *)(v6 + v3 - 0x7CA649BC926593ABLL) - 66;
  uint64_t v10 = a1 + 392 * (v2 ^ 0x4D6u);
  unint64_t v11 = a1 - 0x7CE71BA5679D5093;
  uint64_t v12 = v10 - 1959;
  int v13 = v9 ^ (v11 < v1);
  BOOL v14 = v11 < v4;
  if (!v13) {
    BOOL v9 = v14;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((v9 * v5) ^ v2)))(v12);
}

uint64_t sub_10022DC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * (int)((v8 + 1381727937) ^ 0x525B8159 ^ (((((dword_10031E65C - (v8 + 1381727937)) | (v8 + 1381727937 - dword_10031E65C)) >> ((13 * (v8 ^ 0xE1)) ^ 0xAA)) & 1)
                                                                      * ((v8 - 1402) ^ 0x258)))))();
}

uint64_t sub_10022DE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = (*(uint64_t (**)(void, unint64_t *))(a8 + 8 * (v8 + 1250)))(0, &STACK[0x854]);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((v9 << (v8 ^ 0xB4)) & 0x8F37BBFE) + (v9 ^ 0xC79BDDFF) == -946086401) * (v8 - 829)) ^ v8)))();
}

uint64_t sub_10022DED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 + 486;
  BOOL v10 = (*(uint64_t (**)(unint64_t *))(a8 + 8 * (v9 + 759)))(&STACK[0x14C1]) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v10 * ((v9 + 464) ^ (v9 + 427))) ^ v9)))();
}

uint64_t sub_10022DF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 + 27;
  int v10 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(a8 + 8 * (v9 ^ 0xDDE)))(LODWORD(STACK[0x854]), a1, &STACK[0x61C]);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((674 * (((2 * v10) & 0xFBFF6FF6) + (v10 ^ 0xFDFFB7FB) == ((v9 - 948) | 0x544) - 33574731)) ^ v9)))();
}

uint64_t sub_10022DFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = (*(uint64_t (**)(void))(a8 + 8 * (v8 + 694)))(LODWORD(STACK[0x61C]));
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((2 * v9) & 0x3F1DFFDE) + ((v8 - 1286) ^ 0x1F8EFF5F ^ v9) == 529465327)
                               * ((v8 - 1431176697) & 0x554E07EA ^ 0x60D)) ^ (v8 - 1286))))();
}

uint64_t sub_10022E08C()
{
  uint64_t v3 = v2 ^ (v0 + 1260);
  STACK[0x9B0] = v1 + (v3 ^ 0xFFFFFFFFFFFFFDA4);
  return sub_1001D7474(v3);
}

uint64_t sub_10022E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v8 = (v7 + 1103) | 0x2D1;
  LODWORD(STACK[0x28C]) = LODWORD(STACK[0x398]) + 612144827;
  int v9 = LODWORD(STACK[0x39C]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x230]) ^ 0x5E69A1B;
  unsigned int v10 = LODWORD(STACK[0x404]) ^ LODWORD(STACK[0x3D8]) ^ LODWORD(STACK[0x230]) ^ 0xBD33F489;
  BOOL v11 = (STACK[0x498] & 1) == 0;
  if (STACK[0x498]) {
    int v12 = STACK[0x358];
  }
  else {
    int v12 = STACK[0x2CC];
  }
  int v13 = STACK[0x2E0];
  if ((STACK[0x498] & 1) == 0) {
    int v13 = STACK[0x2B0];
  }
  LODWORD(STACK[0x404]) = v13;
  if (v11) {
    int v14 = v9;
  }
  else {
    int v14 = STACK[0x350];
  }
  if (v11) {
    unsigned int v15 = STACK[0x360];
  }
  else {
    unsigned int v15 = v10;
  }
  if (v11) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v11) {
    int v17 = STACK[0x2BC];
  }
  else {
    int v17 = STACK[0x2D0];
  }
  if (v11) {
    int v18 = STACK[0x378];
  }
  else {
    int v18 = STACK[0x37C];
  }
  BOOL v19 = LODWORD(STACK[0x4F0]) == 2089942522;
  int v20 = STACK[0x4B8];
  if (LODWORD(STACK[0x4F0]) == 2089942522) {
    int v20 = STACK[0x49C];
  }
  LODWORD(STACK[0x250]) = v20;
  int v21 = STACK[0x40C];
  if (v19) {
    int v21 = STACK[0x408];
  }
  LODWORD(STACK[0x378]) = v21;
  int v22 = STACK[0x494];
  if (v19) {
    int v22 = STACK[0x464];
  }
  LODWORD(STACK[0x2A8]) = v22;
  int v23 = STACK[0x434];
  if (!v19) {
    int v23 = STACK[0x430];
  }
  LODWORD(STACK[0x37C]) = v23;
  int v24 = STACK[0x428];
  if (!v19) {
    int v24 = STACK[0x420];
  }
  LODWORD(STACK[0x464]) = v24;
  int v25 = STACK[0x414];
  if (!v19) {
    int v25 = STACK[0x410];
  }
  LODWORD(STACK[0x408]) = v25;
  int v26 = STACK[0x4E0];
  LODWORD(STACK[0x414]) = v12;
  if (v19) {
    int v26 = v12;
  }
  LODWORD(STACK[0x2D0]) = v26;
  LODWORD(STACK[0x560]) = v14;
  LODWORD(STACK[0x410]) = v15;
  if (v19) {
    unsigned int v27 = v15;
  }
  else {
    unsigned int v27 = v14;
  }
  LODWORD(STACK[0x49C]) = v27;
  unsigned int v28 = STACK[0x480];
  LODWORD(STACK[0x358]) = v16;
  if (!v19) {
    unsigned int v28 = v16;
  }
  LODWORD(STACK[0x4B8]) = v28;
  int v29 = STACK[0x558];
  LODWORD(STACK[0x360]) = v17;
  if (v19) {
    int v29 = v17;
  }
  LODWORD(STACK[0x39C]) = v29;
  int v30 = STACK[0x4C8];
  LODWORD(STACK[0x350]) = v18;
  if (!v19) {
    int v30 = v18;
  }
  LODWORD(STACK[0x398]) = v30;
  if (STACK[0x3C0]) {
    int v31 = STACK[0x26C];
  }
  else {
    int v31 = STACK[0x264];
  }
  if (STACK[0x3C0]) {
    int v32 = STACK[0x258];
  }
  else {
    int v32 = STACK[0x254];
  }
  if (STACK[0x3C0]) {
    int v33 = STACK[0x280];
  }
  else {
    int v33 = STACK[0x260];
  }
  int v34 = STACK[0x244];
  if ((STACK[0x3C0] & 1) == 0) {
    int v34 = STACK[0x240];
  }
  LODWORD(STACK[0x434]) = v34;
  BOOL v35 = (STACK[0x548] & 2) == 0;
  int v36 = STACK[0x3B0];
  if ((STACK[0x548] & 2) != 0) {
    int v36 = STACK[0x3AC];
  }
  LODWORD(STACK[0x260]) = v36;
  int v37 = STACK[0x234];
  if (!v35) {
    int v37 = STACK[0x214];
  }
  LODWORD(STACK[0x26C]) = v37;
  int v38 = STACK[0x218];
  if (!v35) {
    int v38 = STACK[0x208];
  }
  LODWORD(STACK[0x428]) = v38;
  int v39 = STACK[0x3A8];
  if (v35) {
    int v39 = STACK[0x3A4];
  }
  LODWORD(STACK[0x430]) = v39;
  int v40 = STACK[0x23C];
  if (!v35) {
    int v40 = STACK[0x238];
  }
  LODWORD(STACK[0x2B0]) = v40;
  LODWORD(STACK[0x494]) = LODWORD(STACK[0x4D0]) ^ 0x7F66E918 ^ v8;
  int v41 = STACK[0x3F8];
  LODWORD(STACK[0x3AC]) = v31;
  if (v35) {
    int v41 = v31;
  }
  LODWORD(STACK[0x2CC]) = v41;
  LODWORD(STACK[0x3B0]) = v32;
  LODWORD(STACK[0x3A8]) = v33;
  if (v35) {
    int v42 = v32;
  }
  else {
    int v42 = v33;
  }
  LODWORD(STACK[0x420]) = v42;
  return sub_1001EB87C(a7, -1764038625);
}

uint64_t sub_10022E35C@<X0>(int a1@<W8>)
{
  int v2 = a1 - 529465327;
  uint64_t v3 = (uint64_t (*)(void))*(&off_1002E1F70 + v1 + 671);
  LODWORD(STACK[0x568]) = v2;
  int v4 = v3();
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((3575
                               * ((v4 ^ (196 * ((v1 - 313218) & 0xE5EEF3EB ^ 0xE5EA3222)) ^ 0x5FDAB910)
                                + ((2 * v4) & 0xBFB57D70) == 1608171192)) ^ v1)))();
}

uint64_t sub_10022E410()
{
  *(_DWORD *)(v1 + 1628) = (LODWORD(STACK[0x5EC]) ^ 0xD3DFD67B)
                         + 2122035182
                         + ((2 * LODWORD(STACK[0x5EC])) & 0xA7BFACF6);
  uint64_t v2 = ((uint64_t (*)(void))*(&off_1002E1F70 + ((v0 + 286989703) & 0x8FAB7F8) + 213))(LODWORD(STACK[0x568]));
  return sub_10022E478(v2);
}

uint64_t sub_10022E478()
{
  uint64_t v3 = ((uint64_t (*)(void))*(&off_1002E1F70 + v2 + 213))(LODWORD(STACK[0x61C]));
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + ((((186 * ((((v2 ^ 0xEE) - 1830) | 0x788) ^ 0x7AB)) ^ 0x209)
                                             * (*(_DWORD *)(v1 + 1628) == v0 + 1135)) ^ v2 ^ 0xEE)))(v3);
}

uint64_t sub_10022E4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)((char *)&STACK[0xA90] + v9) = 0;
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((118
                                * ((unint64_t)&STACK[0xA90] + v11 - v10 + 0x58405A597B241DFCLL >= ((v8 + 42) ^ 0x248uLL))) ^ v8)))();
}

uint64_t sub_10022E5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_OWORD *)(v10 + v8) = *(_OWORD *)(v11 + v8);
  return (*(uint64_t (**)(void))(a8 + 8 * ((1318 * (v8 + 16 == (v9 + 236) - 804)) | v9)))();
}

uint64_t sub_10022E5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v10 + v9) = *(_DWORD *)(v11 + v9);
  return (*(uint64_t (**)(void))(a8 + 8 * (((v9 == 32) * ((v8 - 163) ^ 0x2BD)) ^ v8)))();
}

uint64_t sub_10022E610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v11 + v13 - 0x16217BCF538BB6BBLL) = *(unsigned char *)(v10 + v14 - 0x5FBC7429D31443F3);
  return (*(uint64_t (**)(void))(a8 + 8 * ((1270 * (v12 + (v8 ^ 0x8Fu) - 672 == v9 + 36)) ^ v8)))();
}

uint64_t sub_10022E67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v9 + 68) = 36;
  return (*(uint64_t (**)(uint64_t))(a8
                                            + 8
                                            * ((447
                                              * (((2 * (v10 ^ 0x5910D29Eu)) & 0x1FFA757F0)
                                               - 0x6BF6F7D356B591A8
                                               + (((v8 - 287) + 0x6BF6F7D3FFD3AA76) ^ v10 ^ 0x5910D29Eu) == 2837322320)) ^ v8)))(0x77E6F300326269E4);
}

uint64_t sub_10022E734(uint64_t a1)
{
  BOOL v9 = v4 < v2;
  *(unsigned char *)(v7 + v3 - 0x2FB812D95698A023) = *(unsigned char *)(v6 + v8 - 0x31AD9354BCD330F2);
  uint64_t v10 = a1 + ((v1 - 415) | 0x80u);
  unint64_t v11 = a1 - 0x77E6F2FF89444F93;
  uint64_t v12 = v10 - 385;
  int v13 = v9 ^ (v11 < v2);
  BOOL v14 = v11 < v4;
  if (!v13) {
    BOOL v9 = v14;
  }
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((!v9 * v5) ^ v1)))(v12);
}

uint64_t sub_10022E7D8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  *(_DWORD *)(v3 + 136) = v2;
  STACK[0x748] = 140;
  BOOL v5 = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(a1 + 8 * (v4 + 1747)))((a2 - 1381729897), 35, v3, 140, v3, &STACK[0x748]) == ((v4 + 1406) | 0xA8) - 1960;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((112 * v5) | v4)))();
}

uint64_t sub_10022E854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                                  + 8 * (((*(_DWORD *)(v8 + 68) == v9 - 350) * (((v9 + 673) ^ 0x38B) - 1390)) ^ (v9 + 673))))(a1, a2, a3, a4, a5, a6, 4294925247);
}

uint64_t sub_10022E88C@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((51
                                * (v2
                                 - ((void)&STACK[0xA90]
                                  + v3)
                                 + ((a2 + 133) ^ 0xA7BFA5A684DBE400)
                                 + 348 > 0xF)) ^ (a2 + 120))))();
}

uint64_t sub_10022E920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_OWORD *)(v11 + v8) = *(_OWORD *)(v10 + v8);
  return (*(uint64_t (**)(void))(a8 + 8 * ((931 * (v8 + 16 == ((v9 - 156) ^ 0x42CLL))) ^ v9)))();
}

uint64_t sub_10022E95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(_DWORD *)(v10 + v8) = *(_DWORD *)(v9 + v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * (((v8 == 32) * (((a8 - 33367123) & 0x1FD27EE) - 1913)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10022E9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(unsigned char *)(v10 + v13 - 0x2AF974615BD18CC1) = *(unsigned char *)(v12 + v9 + ((a8 + 781) ^ 0xC35586ED80AC41FCLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a7
                                                                                                 + 8
                                                                                                 * ((782 * (v11 + 1 == v8 + 36)) ^ a8)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10022EA10()
{
  return v0();
}

uint64_t sub_10022EA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((((v8 ^ 0x67D) + 89) * (a7 == 0)) ^ (v8 - 1735))))();
}

uint64_t sub_10022EA44@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1002E1F70 + a1))(0x22804801300080BLL, 4294967189, 42);
}

void sub_10022EB04()
{
}

uint64_t sub_10022EB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((v8 ^ 0x7AD) * (a7 != 0)) ^ (v8 - 559))))();
}

uint64_t sub_10022EB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = v8 ^ 0x19D;
  BOOL v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8 * ((v8 ^ 0x19D) + 496)))(32, 1912147195) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((113 * ((v10 ^ (-93 * ((v9 - 55) & 0xA9 ^ 0xA5))) & 1)) ^ v9)))();
}

uint64_t sub_10022EBBC(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *a1 = STACK[0xA90];
  a1[1] = STACK[0xA91];
  a1[2] = STACK[0xA92];
  a1[3] = STACK[0xA93];
  a1[4] = STACK[0xA94];
  a1[5] = STACK[0xA95];
  a1[6] = STACK[0xA96];
  a1[7] = STACK[0xA97];
  a1[8] = STACK[0xA98];
  a1[9] = STACK[0xA99];
  a1[10] = STACK[0xA9A];
  a1[11] = STACK[0xA9B];
  a1[12] = STACK[0xA9C];
  a1[13] = STACK[0xA9D];
  a1[14] = STACK[0xA9E];
  a1[15] = STACK[0xA9F];
  return (*(uint64_t (**)(void))(a8
                              + 8
                              * ((((unint64_t)&a1[-STACK[0x6C0] + 0x58405A597B241F68] > 0xF)
                                * (3 * ((v8 - 1210191912) & 0x7D3FFFED ^ 0x351DFA4F) - 1703)) ^ v8)))();
}

void sub_10022ED00(unint64_t a1)
{
  v5.i64[0] = 0xD2D2D2D2D2D2D2D2;
  v5.i64[1] = 0xD2D2D2D2D2D2D2D2;
  v6.i64[0] = 0xE9E9E9E9E9E9E9E9;
  v6.i64[1] = 0xE9E9E9E9E9E9E9E9;
  int8x16_t *v1 = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v5)), v6);
  STACK[0x658] = a1;
  LODWORD(STACK[0x7BC]) = 2050949191;
  STACK[0x788] = ((v3 - v2 - 1960) ^ 0xFFFFFFFFFFFFFDC0) + STACK[0x570];
  JUMPOUT(0x10022EDD8);
}

void sub_10022EE30()
{
}

uint64_t sub_10022EE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((((((v8 + 946) ^ (STACK[0x948] == 0)) & 1) == 0) * (v8 ^ 0x1CD)) ^ v8)))();
}

uint64_t sub_10022EE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(uint64_t))(a8 + 8 * (v9 ^ 0x980)))(v8);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)(((STACK[0x818] != 0)
                                    * ((((v9 + 654534059) & 0xD8FC9DFE ^ 0x6DD) + 502) ^ (((v9 + 654534059) & 0xD8FC9DFE)
                                                                                        - 18))) ^ (v9 + 654534059) & 0xD8FC9DFE)))();
}

uint64_t sub_10022EEF0@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2 = a2 - 449;
  (*(void (**)(void))(a1 + 8 * (a2 + 744)))();
  LODWORD(STACK[0x904]) = 652248715;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((((v2 + 1384331258) & 0xAD7CC6EE ^ (v2 - 2019323271) & 0x785C6BA9 ^ 0x383)
                                    * (STACK[0x798] == 0)) ^ v2)))();
}

uint64_t sub_10022EF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((14 * (v8 ^ 0x124) - 1886) * (STACK[0x658] != 0)) ^ v8)))();
}

uint64_t sub_10022EFB0@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((102 * (STACK[0x958] == 0)) ^ (a2 - 1678))))();
}

uint64_t sub_10022EFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return ((uint64_t (*)(unint64_t))*(&off_1002E1F70
                                                    + (((((2 * v8) ^ 0xEDA) + ((v8 - 933) ^ 0x411)) * (v9 != 0)) ^ (v8 - 1773))))(STACK[0x8B8]);
}

uint64_t sub_10022F034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((a3 + 933 + ((4 * a3) ^ 0x17A4) - 3911) * (a1 == 0)) ^ a3)))();
}

uint64_t sub_10022F064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * ((172 * (STACK[0x688] != 0)) | (v8 - 1637))))();
}

uint64_t sub_10022F090@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  int v2 = a2 ^ 0x3C6;
  (*(void (**)(void))(a1 + 8 * (a2 ^ 0xA40)))();
  LODWORD(STACK[0x994]) = 76943988;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((14 * (v2 ^ 0x124) - 1886) * (STACK[0x658] != 0)) ^ v2)))();
}

uint64_t sub_10022F0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((102 * (STACK[0x958] == 0)) ^ (v8 - 1678))))();
}

uint64_t sub_10022F138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8 + 8 * (((((2 * v8) ^ 0xEDA) + ((v8 - 933) ^ 0x411)) * (v9 != 0)) ^ (v8 - 1773))))(STACK[0x8B8], a2, a3, a4, a5, a6, v9);
}

void sub_10022F178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(_DWORD **)(STACK[0x540] + 48);
  *(void *)STACK[0x530] = a1;
  *(_DWORD *)STACK[0x520] = (LOWORD(STACK[0x816]) | ((LOWORD(STACK[0x816]) < ((unsigned __int16)(v6 + 1566) ^ 0x734u)) << 16))
                          - 156;
  *(void *)STACK[0x510] = STACK[0x688];
  *uint64_t v7 = (LOWORD(STACK[0x656]) | ((LOWORD(STACK[0x656]) < 0x79B7u) << 16)) - 31159;
  sub_1002359CC(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10022F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  (*(void (**)(void))(a8 + 8 * (v8 + 134)))();
  return (*(uint64_t (**)(void))(a8 + 8 * ((172 * (STACK[0x688] != 0)) | (v8 - 1637))))();
}

void sub_10022F22C()
{
}

void sub_10022F248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v8 = ((v7 & 0xF0) >> 4) ^ 9 | v7 ^ 0xFFFFFF95;
  unsigned int v9 = ((v8 - ((2 * v8) & 0x6A) - 75) >> (((40 * (v6 ^ 0xD0)) ^ 0xAA) & 0xFE)) ^ 0x2D | (v8 - ((2 * v8) & 0x6A) - 75) ^ 0xFFFFFFB5;
  int v10 = v9 & 1 | ((v9 & 2) != 0);
  sub_1002359CC(a1, a2, a3, a4, a5, a6, -42022 * (((2 * (((v10 ^ 0x17) + 2 * v10 - 1) ^ 0x12)) & 0xFFFFFFF7) + (((v10 ^ 0x17) + 2 * v10 - 1) ^ 0xA5BFF0AD))- 1867151422);
}

uint64_t sub_10022F2F0@<X0>(uint64_t a1@<X6>, int a2@<W8>, int8x16_t a3@<Q0>, int8x8_t a4@<D1>, int8x8_t a5@<D2>)
{
  v13.val[0].i64[0] = v9 & 8;
  v13.val[0].i64[1] = v11 & v9 | 1;
  v13.val[1].i64[0] = v13.val[0].i64[0] | 2;
  v13.val[1].i64[1] = v13.val[0].i64[0] | 3;
  v13.val[2].i64[0] = v13.val[0].i64[0] | 4;
  v13.val[2].i64[1] = v13.val[0].i64[0] | v5;
  v13.val[3].i64[0] = v13.val[0].i64[0] | 6;
  v13.val[3].i64[1] = v13.val[0].i64[0] | 7;
  *(int8x8_t *)(v7 + v9) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v8 + v13.val[0].i64[0]), *(int8x8_t *)(a1 + v13.val[0].i64[0])), *(int8x8_t *)(v6 + v13.val[0].i64[0] + 4)), a5), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v13, a3), a4));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((120 * (v10 != v9)) ^ a2)))();
}

uint64_t sub_10022F398@<X0>(uint64_t a1@<X6>, int a2@<W8>, int8x16_t a3@<Q0>, int8x8_t a4@<D1>, int8x8_t a5@<D2>)
{
  return sub_10022F2F0(a1, a2, a3, a4, a5);
}

uint64_t sub_10022F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((v5 - 218) | 0x21) ^ ((v5 - 1508) | 0x440) ^ 0x32E) * (a5 == v6)) ^ v5)))();
}

uint64_t sub_10022F44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v12 = v8 < v9 || a5 + (unint64_t)((a8 + 990) ^ 0xC5Du) + 11044235 < v8;
  return (*(uint64_t (**)(void))(v10 + 8 * (v12 | a8)))();
}

void sub_10022F484()
{
}

uint64_t sub_10022F510@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v5 = a2 + v2 - 1044660243 + v4 - 536;
  STACK[0x568] = (unint64_t)&STACK[0xA90] + a1;
  int v6 = (char *)&STACK[0xA90] + a1 + 383;
  unint64_t v7 = STACK[0x570] + 1088;
  STACK[0x558] = v7;
  STACK[0x788] = v7;
  unint64_t v8 = *(void (**)(void *))(v3 + 8 * (v4 + 1348));
  STACK[0x570] = (unint64_t)&STACK[0xA90] + a1 + 319;
  v8(&unk_100286AD2);
  STACK[0x560] = (unint64_t)v6;
  uint64_t v9 = ((uint64_t (*)(void *, char *, uint64_t))v8)(&unk_100291517, v6, 64);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1253 * ((v4 + 1270918663 + v5) < 0xF8)) ^ v4)))(v9);
}

uint64_t sub_10022F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x670]) = 1888467959;
  *(unsigned char *)(STACK[0x568] + 269827420 + (v6 + 63) - 269827758) = *(unsigned char *)(v5 + 0u % (v4 + v7 + 66));
  return (*(uint64_t (**)(void))(a4 + 8 * v6))();
}

uint64_t sub_10022F660@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v7 = (unsigned __int16)(v5
                        + 22455
                        - 319
                        * ((unsigned __int16)(((39651 * (unsigned __int16)(v5 + 22455)) >> 16)
                                                             + ((unsigned __int16)((v5
                                                                                  + 22455
                                                                                  - ((39651
                                                                                    * (unsigned __int16)(v5 + 22455)) >> 16)) & 0xFFFE) >> 1)) >> 8));
  int v8 = *(unsigned __int8 *)(a3 + ((v6 ^ (a2 - 306)) + v5 + 467901379) % 0x13F);
  HIDWORD(v9) = v8 ^ 6;
  LODWORD(v9) = (v8 ^ 0x20) << 24;
  int v10 = *(unsigned __int8 *)(a3 + (v5 + a4 + 98) % 0x13Fu);
  int v11 = (v9 >> 29) - ((2 * (v9 >> 29)) & 0x30) + 24;
  HIDWORD(v9) = v10 ^ 6;
  LODWORD(v9) = (v10 ^ 0x20) << 24;
  int v12 = ((v9 >> 27) ^ 0xFFFFFFEF) + ((2 * (v9 >> 27)) & 0xFFFFFFDF) + (*(unsigned __int8 *)(a3 + v7) ^ v11 ^ 0x3E) + 17;
  HIDWORD(v9) = *(unsigned __int8 *)(a3 + (v5 + a4) % 0x13Fu);
  LODWORD(v9) = (HIDWORD(v9) ^ 0x26) << 24;
  int v13 = ((v9 >> 25) ^ 0xFFFFFFC1) - ((2 * (v9 >> 25)) & 0x7C) + (v12 ^ 0x6D) + ((2 * v12) & 0xFFFFFFDA) + 1;
  BOOL v14 = *(uint64_t (**)(void))(a1 + 8 * ((1421 * (v5 + 1 == v4 + 1276)) ^ v6));
  *(unsigned char *)(a3 + v7) = v13 + (~(2 * v13 + 34) | 0xB3) - 8;
  return v14();
}

uint64_t sub_10022F7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unsigned __int8 *a7)
{
  int v12 = v7 ^ (a5 + 737);
  LODWORD(STACK[0x4D0]) = 0;
  unsigned int v13 = a7[109] ^ v8;
  LODWORD(STACK[0x49C]) = v12 + 185;
  unsigned int v14 = v13 + ((v12 + 185) ^ 0x9562D704) - ((2 * v13) & 0x1D8);
  unsigned int v15 = (a7[21] ^ v8) - ((2 * (a7[21] ^ v8)) & 0x136) - 851535717;
  unsigned int v16 = ((v15 ^ 0xCD3E989B | v14 ^ 0x9562D2EC) - ((2 * (v15 ^ 0xCD3E989B | v14 ^ 0x9562D2EC)) & 0x24) + 18) & 0x73;
  unsigned int v17 = (((v15 ^ 0x8522809B) & (v14 ^ 0x12EC)) - ((2 * ((v15 ^ 0x8522809B) & (v14 ^ 0x12EC))) & 0x649FB9AC) + 1917836502) ^ 0x724FDCD6;
  unsigned int v18 = ((v16 ^ 0x12 | v17) - 2 * ((v16 ^ 0x12 | v17) & 0x73B5D79D ^ v17 & 0xC) - 206186607) ^ 0xF3B5D791;
  unsigned int v19 = ((v18 * v18 - ((2 * v18 * v18) & 0x80143E62) - 1073078479) ^ 0xC00A1F31) * v18;
  int v20 = ((2 * v19) & 0x5FFE73B8) + (v19 ^ 0x2FFF39DC);
  LOBYTE(v19) = ((a7[352] & 2 | a7[352] & 0x88 ^ 0xA1) - 1) ^ 0x2A;
  LOBYTE(v15) = v19 | *(unsigned char *)(v11 + (a7[40] & 0x3F ^ v8)) & 0x75 ^ 0x74;
  LOBYTE(v15) = v15 + ~(2 * (v15 & 0x78 ^ v19 & 8)) - 15;
  LOBYTE(v19) = a7[355];
  unint64_t v21 = STACK[0x560];
  char v22 = (*(unsigned char *)(STACK[0x560] + (a7[52] & 0x3F ^ v8)) ^ 0xFE) & (v19 ^ 0xFE);
  char v23 = (v22 + (~(2 * v22) | 0xCF) - 103) ^ 0x98 | (((((2 * v19) & 0x50) + (v19 & 0xB8 ^ 0xEE) + 83) ^ 0x52) - 1) ^ 0x12;
  LOBYTE(v15) = v15 ^ 0xF0;
  char v24 = (v23 - ((2 * v23) & 0x62) - 79) ^ 0xB1;
  char v25 = ((v24 | v15) - ((2 * (v24 | v15)) & 0x3C) + 30) & 0x2B ^ 0xA;
  char v26 = (v25 - ((2 * v25) & 0xCF) - 29) ^ 0xE3 | ((v24 & v15) - ((2 * (v24 & v15)) & 0x6A) - 75) ^ 0xB5;
  char v27 = (a7[94] ^ v8) + (v26 ^ 2) - ((2 * v26) & 0xFB) - 2;
  a7[94] = v27 - ((2 * v27) & 0x4C) + 38;
  char v28 = ((a7[139] & 0x36 ^ 0x8A) + (a7[139] & 0x10 ^ 0x51) - ((a7[139] & 0x36 ^ 0x8A) & 0x98)) ^ 0x75 | ~byte_10026CFC4[a7[85] & 0x3F ^ v8] & 0x40;
  int v29 = *(unsigned __int8 *)(v11 + (a7[157] & 0x3F ^ v8));
  a7[64] ^= 0x39 ^ (((v28 - ((2 * v28) & 0xA4) + 82) & 0xF7 ^ 0x5A)
                                   + ((2
                                     * (((v28 - ((2 * v28) & 0xA4) + 82) & 0xF7 ^ 0x5A) & 0x35 ^ ((v28
                                                                                                 - ((2 * v28) & 0xA4)
                                                                                                 + 82) | 0x7B))) ^ 0x19)
                                   + 58);
  LODWORD(STACK[0x4F0]) = (v29 ^ 1) - ((2 * (_BYTE)v29 + 12) & 8);
  unsigned int v30 = ((a7[125] & 0xC9) - 92) & 0xFFFFFFC9 ^ 0xFFFFFF82;
  LODWORD(STACK[0x4E8]) = v30 - 2 * (v30 & 3);
  unsigned int v31 = *(unsigned __int8 *)(v11 + (a7[104] & 0x3F ^ v8)) ^ 0xFFFFFFFE;
  unsigned __int8 v32 = a7[387];
  unsigned int v33 = ((v32 & 0xA ^ 0xFFFFFF83 | v32 & 0x34) - 1) ^ 0xFFFFFFDC;
  int v34 = (v33 - ((2 * v33) & 0x10) + 9) ^ 0x57;
  unsigned int v35 = v34 | ((v32 & 0xA1) - 36) & 0xFFFFFFA1 ^ 0x20;
  unsigned int v36 = ((v35 - 2 * (v35 & 0x27 ^ v34 & 6) + 33) ^ 0x21) & ((v31 * v31 - ((2 * v31 * v31) & 0xFFFFFFEA) - 11) ^ 0xFFFFFFF5);
  LODWORD(STACK[0x558]) = v36 - ((2 * v36) & 0x20);
  LOBYTE(v35) = (a7[52] ^ 0xD9) + (a7[175] ^ v8) + 1;
  a7[175] = v35 - ((2 * v35) & 0x4C) + 38;
  unsigned int v37 = 205 * (*(unsigned __int8 *)(v21 + (a7[44] & 0x3F ^ v8)) ^ 0xFE);
  LODWORD(STACK[0x4D8]) = (v37 >> 10) - ((v37 >> 9) & 0x44444444);
  a7[100] = (a7[100] ^ v8) - ((2 * (a7[100] ^ v8) + 122) & 0x4C) + 35;
  a7[327] = 2;
  LOBYTE(v37) = (a7[386] ^ 0xFE) + (*(unsigned char *)(v11 + (a7[17] & 0x3F ^ v8)) ^ 0xFE);
  a7[386] = v37 - ((2 * v37) & 0xFC) - 2;
  LOBYTE(v37) = byte_10026CFC4[a7[57] & 0x3F ^ v8];
  LOBYTE(v37) = ((v37 & 0x22 ^ 0x29) + (v37 & 0x51) - 1) ^ 0x7D;
  LOBYTE(v34) = ((2 * v37) & 0x6C) - v37;
  LOBYTE(v37) = a7[415];
  char v38 = ((((v37 & 4 ^ 0x44) - (v37 & 4) + (v37 & 0x8C ^ 8)) & 0xDF ^ 0x67)
       - (((v37 & 4 ^ 0x44) - (v37 & 4) + (v37 & 0x8C ^ 8)) | 0xDC)
       - 36) ^ 0xA7;
  LOBYTE(v34) = (v38 - ((2 * v38) & 0x24) - 110) ^ 0x92 | (v34 - 55) ^ 0xDF;
  unsigned __int8 v39 = (v34 - ((2 * v34) & 0xC6) - 29) ^ 0xE3;
  unsigned int v40 = (a7[101] ^ v8) + ((v39 / 3u) ^ 0x42) - (((171 * v39) >> 8) & 0x7A) - 66;
  unsigned __int8 v41 = byte_10026CFC4[a7[217] & 0x3F ^ v8];
  a7[101] = v40 - ((2 * v40) & 0x4C) + 38;
  unsigned int v42 = (((v41 & 0x75 ^ 0xFFFFFFCB) - ((2 * (v41 & 0x75 ^ 0xFFFFFFCB)) & 0xFFFFFFBF) - 33) ^ 0xFFFFFFDF) & (a7[398] ^ 0xFFFFFFFE);
  unsigned int v43 = (v42 + (~(2 * v42) | 0xFFFFFF81) - 64) ^ 0xFFFFFFBF | (-93
                                                             - ((((v41 & 0x8A ^ 0xFFFFFFFD) - 17) & 0xFFFFFFA0)
                                                              + (((v41 & 0x8A ^ 0xFFFFFFFD) - 17) | 0xFFFFFFB5))) ^ 0xFFFFFF84;
  unsigned int v44 = (v43 - ((2 * v43) & 0x7A) - 67) ^ 0xFFFFFFBD | (a7[7] >> 1) ^ 0x13;
  LOBYTE(v44) = (a7[249] ^ v8) + (v44 ^ 0x40) - 2 * (v44 & 0x3F) - 64;
  a7[249] = v44 - ((2 * v44) & 0x4C) + 38;
  a7[30] ^= 0x58u;
  LOBYTE(v44) = (*(unsigned char *)(STACK[0x570] + (a7[241] & 0x3F ^ v8)) & 0xFC ^ 0xE7) - 1;
  LOBYTE(v44) = ((v44 & 0x9F ^ 5) + (v44 ^ 0x9A) - ((v44 ^ 0x9A) & 0x9F)) ^ 0x1F | *(unsigned char *)(STACK[0x568] + 383) & 3 ^ 2;
  LOBYTE(v44) = (v44 - ((2 * v44) & 0x3C) + 30) ^ 0x1E;
  LOBYTE(v44) = ((v44 * v44 - (v8 & (2 * v44 * v44)) - 109) ^ 0x93) * v44;
  *(unsigned char *)(STACK[0x568] + 215) = v44 + (v10 | ~(2 * v44)) + 39;
  LODWORD(STACK[0x550]) = v20;
  *(unsigned char *)(STACK[0x568] + 446) = *(unsigned char *)(STACK[0x570] + ((28 - (_BYTE)v20) & 0x3F));
  char v45 = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 13) & 0x3F ^ v8));
  unsigned int v46 = (((2 * v45) & 8) + (v45 & 0x2C ^ 0x74) + 44) & 0x7C ^ 0xFFFFFF8F;
  int v47 = (v46 - 2 * (v46 & 0x1F) - 97) ^ 0x9F;
  LOBYTE(v44) = (*(unsigned char *)(STACK[0x568] + 146) ^ 0xD8) + 2 + ((2 * (*(unsigned char *)(STACK[0x568] + 146) ^ v8)) & 0xFC);
  char v48 = (((v44 * v44) ^ 0xED) + 19 + ((2 * v44 * v44) & 0xDA)) * v44;
  char v49 = ((2 * v48) & 0x9E) + (v48 ^ 0xCF);
  unsigned int v50 = (v47 - ((2 * v47) & 0x102) - 1849324159) ^ 0x91C58D81;
  *(unsigned char *)(STACK[0x568] + 381) = ((v50 << ((v49 + 1) & 7)) - ((2 * (v50 << ((v49 + 1) & 7))) & 0xE0) - 16) ^ ((v50 >> ((7 - v49) & 7)) - ((2 * (v50 >> ((7 - v49) & 7))) & 0xD8) + 108) ^ 0x62;
  int v51 = *(unsigned __int8 *)(STACK[0x568] + 400) ^ 0xFE;
  unsigned int v52 = *(unsigned __int8 *)(STACK[0x568] + 131) ^ v8;
  int v53 = *(unsigned __int8 *)(STACK[0x568] + 393) ^ 0xFE;
  unsigned int v54 = v52 - ((2 * v52) & 0xFFFFFF9F) + 1400492751;
  int v55 = v53 - ((2 * v53) & 0x126) + 615286931;
  int v56 = (((v55 ^ 0x24AC8893 | v54 ^ 0x5379D2CF) - ((2 * (v55 ^ 0x24AC8893 | v54 ^ 0x5379D2CF)) & 0xB68) + 1460) ^ 0x5B4) & ((v51 - ((2 * v51) & 0x15A) + 1646354861) ^ 0x622161AD);
  int v57 = (v56 - ((2 * v56) & 0x2453D1B2) + 304736473) ^ 0x1229E8D9 | (((v55 ^ 0x280093) & (v54 ^ 0xD2CF))
                                                                   - ((2 * ((v55 ^ 0x280093) & (v54 ^ 0xD2CF))) & 0x41D298AA)
                                                                   + 1625902165) ^ 0x60E94C55;
  LOBYTE(v54) = ((*(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 220) & 0x3F ^ v8)) & 3 ^ 0xFD) - 28) ^ 0xE7;
  LOBYTE(v54) = (v54 - 2 * (v54 & 1) - 79) ^ 0xB1;
  LOBYTE(v54) = ((2 * v54) & 0x36) + (v54 ^ 0x9B);
  unsigned int v58 = (v57 - ((2 * v57) & 0x3ED17D38) + 526958236) ^ 0x1F68BE9C;
  unsigned int v59 = ((v58 >> (v54 + 101)) + (~(2 * (v58 >> (v54 + 101))) | 0xFFFFFF81) + 64) ^ ((v58 << (-93 - v54))
                                                                                  - ((2 * (v58 << (-93 - v54))) & 0x4C)
                                                                                  + 38);
  LOBYTE(v59) = (*(unsigned char *)(STACK[0x568] + 330) ^ 0xFE) + (v59 ^ 0xE6) + ((2 * v59) ^ 0x32) + 1;
  *(unsigned char *)(STACK[0x568] + 330) = v59 - ((2 * v59) & 0xFC) - 2;
  int v60 = (*(unsigned __int8 *)(STACK[0x568] + 10) >> 1) ^ 0x13;
  LOBYTE(v54) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 27) & 0x3F ^ v8));
  LOBYTE(v54) = ((2 * ~(_BYTE)v54) & 0xFC) + v54 + 2;
  unsigned int v61 = (v60 - ((2 * v60) & 0x16) + 307826571) ^ 0x12590F8B;
  int v62 = ((v61 >> ((((v54 * v54) ^ 0xF4) + 4) & 7)) - ((2 * (v61 >> ((((v54 * v54) ^ 0xF4) + 4) & 7))) & 0x44) + 34) ^ ((v61 << ((4 - ((v54 * v54) ^ 0xF4)) & 7)) - ((2 * (v61 << ((4 - ((v54 * v54) ^ 0xF4)) & 7))) & 0x30) + 152);
  LOBYTE(v62) = (*(unsigned char *)(STACK[0x568] + 67) ^ v8) + (v62 ^ 0x19) + ((2 * v62) & 0xB8 ^ 0xCF) + 94;
  *(unsigned char *)(STACK[0x568] + 67) = v62 - ((2 * v62) & 0x4C) + 38;
  LOBYTE(v62) = byte_10026CFC4[*(unsigned char *)(STACK[0x568] + 136) & 0x3F ^ v8] & 0xAC ^ 0x84;
  LOBYTE(v37) = (((v62 | 0x47) - (v62 | 0xB8) - 72) ^ 0x43 | 0x75)
              - (((v62 | 0x47) - (v62 | 0xB8) - 72) ^ 0x43 | 0x8A)
              - 118;
  LOBYTE(v37) = (*(unsigned char *)(STACK[0x568] + 195) ^ v8) + (v37 & 0xED ^ 0xA8) + ((2 * v37) & 0x9A ^ 0xAE) + 33;
  char v63 = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 196) & 0x3F ^ v8));
  LOBYTE(v55) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 21) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 195) = v37 - ((2 * v37) & 0x4C) + 38;
  LOBYTE(v20) = ((v55 ^ 0xFE | v63 ^ 0xFE) + (~(2 * (v55 ^ 0xFE | v63 ^ 0xFE)) | 0xF1) + 72) & 0x49 ^ 0x41 | (((v55 ^ 0xFE) & (v63 ^ 0xFE)) - ((2 * ((v55 ^ 0xFE) & (v63 ^ 0xFE))) & 0xA) - 123) ^ 0x85;
  LOBYTE(v20) = (*(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 127) & 0x3F ^ v8)) ^ 0xFE)
              + (v20 ^ 0xA2)
              - ((2 * v20) & 0xBA)
              + 94;
  LOBYTE(v20) = (*(unsigned char *)(STACK[0x568] + 423) ^ 0xFE) + (v20 ^ 0x72) + ((2 * v20) & 0xE4) - 114;
  *(unsigned char *)(STACK[0x568] + 423) = v20 + (~(2 * v20) | 3) - 1;
  LOBYTE(v20) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 65) & 0x3F ^ v8)) & 2;
  LOBYTE(v20) = (((v20 ^ 0x9E) + 2 * v20 - 6) ^ 0x92) & (*(unsigned char *)(STACK[0x568] + 140) ^ v8);
  int v64 = *(unsigned __int8 *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 182) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 369) = v20 - ((2 * v20) & 0x7C) - 2;
  LOBYTE(v20) = ((*(unsigned char *)(STACK[0x568] + 134) & 0x89)
               - (*(unsigned char *)(STACK[0x568] + 134) & 0x88)
               + (*(unsigned char *)(STACK[0x568] + 134) & 0x88 ^ 0xD8)) ^ 0xFC;
  unsigned __int8 v65 = ((((((v20 | 0x15) - (v20 | 0xEA)) ^ 1) - 22) | 0x74)
       + ((2 * (((((v20 | 0x15) - (v20 | 0xEA)) ^ 1) - 22) & 0xB ^ (((v20 | 0x15) - (v20 | 0xEA)) ^ 1 | 0x7E))) ^ 0x4B)
       + 47) ^ 0x2E;
  *(unsigned char *)(STACK[0x568] + 321) = v65 / 5u - (((205 * v65) >> 9) & 0x7C) - 2;
  unsigned int v66 = 171 * (*(unsigned __int8 *)(STACK[0x568] + 339) ^ 0xFE);
  unsigned int v67 = (~(v66 >> 8) | 0xFFFFFFC5) + (v66 >> 9) + 94;
  LOBYTE(v37) = (*(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 39) & 0x3F ^ v8)) ^ 0xFE) + 50;
  LOBYTE(v67) = ((((v67 & 0xC ^ 5) - (v67 | 0xBE) - 2) ^ 0x5E) - 2) ^ 0x54 | ((((v37 ^ 0x1F) + 2 * v37 + 33) & 0x32)
                                                                            - ((2 * ((v37 ^ 0x1F) + 2 * v37 + 33)) & 0x20)
                                                                            - 44) ^ 0xD4;
  LOBYTE(v67) = (*(unsigned char *)(STACK[0x568] + 330) ^ 0xFE) + (v67 ^ 0xAF) + ((2 * v67) & 0x5E) + 81;
  *(unsigned char *)(STACK[0x568] + 330) = v67 - ((2 * v67) & 0xFC) - 2;
  int v68 = *(unsigned __int8 *)(STACK[0x568] + 401) ^ 0xFE;
  LOBYTE(v37) = 2 * (*(unsigned char *)(STACK[0x568] + 322) & 1) + (*(unsigned char *)(STACK[0x568] + 322) & 7 ^ 0xCF);
  unsigned int v69 = ((0x37u >> ((1 - v37) & 7)) - ((0x6Eu >> ((1 - v37) & 7)) & 0x7C) - 1651082498) ^ ((55 << (v37 + 55))
                                                                                         - ((110 << (v37 + 55)) & 0x25A0C36)
                                                                                         + 19727899);
  unsigned int v70 = (((v69 & 0xFFFFFFD2 ^ 0x9CBB7CED) - ((2 * (v69 & 0xFFFFFFD2 ^ 0x9CBB7CED)) & 0x2A4) + 806) ^ 0x37E) & ((v68 - ((2 * v68) & 0xC6) - 1695866269) ^ 0x9AEB2263);
  int v71 = ((v69 & 0x2D ^ 8) - ((2 * v69) & 0x4A) + 277480997) ^ 0x53A70424;
  unsigned int v72 = (v70 - ((2 * v70) & 0x392116A8) + 1552976724) ^ 0x5C908B54 | ((v71 | 0x59990F37)
                                                                    - (v71 | 0xA666F0C8)
                                                                    - 1503203128) ^ 0x1AB40D1B;
  unsigned int v73 = ((LODWORD(STACK[0x558]) + 16) ^ 0x5B)
      + ((v72 - ((2 * v72) & 0xB0) - 40) ^ 0xFFFFFFA7)
      + ((2 * (v72 - ((2 * v72) & 0xB0) - 40)) ^ 0xFFFFFFB0)
      - 127;
  LODWORD(STACK[0x4C8]) = v73 ^ 0x55;
  LODWORD(STACK[0x4C0]) = (2 * v73) & 0xFFFFFFAA;
  LOBYTE(v73) = (*(unsigned char *)(STACK[0x568] + 237) ^ v8)
              + (byte_10026CFC4[*(unsigned char *)(STACK[0x568] + 201) & 0x3F ^ v8] ^ 0x3C);
  *(unsigned char *)(STACK[0x568] + 237) = v73 - ((2 * v73) & 0x4C) + 38;
  int v74 = *(unsigned __int8 *)(STACK[0x568] + 436) ^ 0xFE;
  int v75 = *(unsigned __int8 *)(STACK[0x568] + 392) ^ 0xFE;
  int v76 = *(unsigned __int8 *)(STACK[0x568] + 400) ^ 0xFE;
  int v77 = *(unsigned __int8 *)(v21 + (*(unsigned char *)(STACK[0x568] + 120) & 0x3F ^ v8)) ^ 0xFE;
  int v78 = v76 - ((2 * v76) & 0x5E) + 2002810415;
  int v79 = v77 - ((2 * v77) & 0x72) - 596292295;
  unsigned int v80 = (((v79 ^ 0xDC754D39 | v78 ^ 0x7760762F) - ((2 * (v79 ^ 0xDC754D39 | v78 ^ 0x7760762F)) & 0x124) + 146) ^ 0x92) & ((v75 - ((2 * v75) & 0x33333333) + 1959879833) ^ 0x74D16499);
  unsigned int v81 = (v80 - ((2 * v80) & 0x26E26ECC) - 1821296794) ^ 0x93713766 | (((v79 ^ 0x54604139) & (v78 ^ 0x62F))
                                                                    - ((2 * ((v79 ^ 0x54604139) & (v78 ^ 0x62F))) & 0x264E6FBC)
                                                                    + 1395079134) ^ 0x532737DE;
  unsigned int v82 = (v74 - ((2 * v74) & 0x1A6) - 1287248685) ^ 0xB34624D3;
  int v83 = v81 - ((2 * v81) & 0x5038B77A) - 1474536515;
  LOBYTE(v78) = (v83 ^ 0xBD | v82) - ((2 * (v83 ^ 0xBD | v82)) & 0x30) - 40;
  int v84 = ((v78 & 0x43) + (v78 & 0x4F ^ 0x3C02CA5B) - ((v78 & 0x4F ^ 0x3C02CA5B) & 0x4000A53) + 23856160) ^ 0x396EC460 | (((v83 ^ 0x3BD) & v82) - ((2 * ((v83 ^ 0x3BD) & v82)) & 0x2CB29A94) + 374951242) ^ 0x16594D4A;
  LODWORD(STACK[0x4A0]) = v84 - ((2 * v84) & 0xF6);
  STACK[0x558] = (v64 ^ 0xFFFFFFFE) + 13;
  int v85 = *(unsigned __int8 *)(STACK[0x568] + 327);
  unsigned int v86 = (v85 ^ 0x7E) & ((~*(unsigned __int8 *)(STACK[0x570] + (((v64 ^ 0xFE) + 13) & 0x3F)) & 0xFEu) >> 1);
  LOBYTE(v78) = (*(unsigned char *)(STACK[0x568] + 208) ^ v8) + 43;
  LOBYTE(v85) = ((v78 ^ 0xDF) + ((2 * v78) & 0xBF) + 33) & (v85 ^ 1);
  LOBYTE(v86) = (v85 - ((2 * v85) & 0xFB) + 125) ^ 0x7D | (v86 - ((2 * v86) & 0xB0) - 40) ^ 0xD8;
  LOBYTE(v86) = (*(unsigned char *)(STACK[0x568] + 335) ^ 0xFE) + (v86 ^ 0x77) + ((2 * v86) & 0xEF) - 119;
  *(unsigned char *)(STACK[0x568] + 335) = v86 - ((2 * v86) & 0xFC) - 2;
  LOBYTE(v86) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 162) & 0x3F ^ v8));
  LOBYTE(v78) = (((v86 & 0x81 ^ 0xFE) - 2 * (v86 & 0x81) + 43) ^ 0xD7) & (*(unsigned char *)(STACK[0x568] + 323) ^ 0xFE);
  LOBYTE(v86) = (v78 - ((2 * v78) & 0x94) - 54) ^ 0xCA | ~(_BYTE)v86 & 0x7E;
  LOBYTE(v78) = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 65) & 0x3F ^ v8));
  *(unsigned char *)(STACK[0x568] + 394) ^= (((v86 - ((2 * v86) & 0x10) + 8) & 0xFE) >> 1) ^ 4;
  *(unsigned char *)(STACK[0x568] + 356) ^= ((v78 ^ 0xFE) - ((2 * (v78 ^ 0xFE) + 98) & 0xBC) + 15) ^ 0xF0;
  LOBYTE(v86) = (*(unsigned char *)(STACK[0x568] + 103) ^ 0xD9) + (*(unsigned char *)(STACK[0x568] + 436) ^ 0xFE) + 1;
  *(unsigned char *)(STACK[0x568] + 436) = v86 - ((2 * v86) & 0xFC) - 2;
  LOBYTE(v86) = *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 173) & 0x3F ^ v8));
  LOBYTE(v86) = ((2 * v86) ^ 0x3D) + (*(unsigned char *)(STACK[0x568] + 227) ^ v8) + ((4 * (v86 & 0x1F)) ^ 0x87) + 64;
  *(unsigned char *)(STACK[0x568] + 227) = v86 - ((2 * v86) & 0x4C) + 38;
  unsigned int v87 = 171 * (byte_10026CFC4[*(unsigned char *)(STACK[0x568] + 56) & 0x3F ^ v8] ^ 0x25);
  unint64_t v88 = ((v87 >> 9) ^ 0xFFFFFFF5) + ((v87 >> 8) & 0xEA) + 11;
  STACK[0x4F8] = v88;
  *(unsigned char *)(STACK[0x568] + 383) ^= *(unsigned char *)(v21 + (v88 & 0x3F)) ^ 0xFE;
  LOBYTE(v88) = (*(unsigned char *)(STACK[0x568] + 350) ^ 0xFE)
              + (((*(unsigned char *)(STACK[0x568] + 26) ^ v8) * (*(unsigned char *)(STACK[0x568] + 26) ^ v8)) ^ 0x18)
              - ((2 * (*(unsigned char *)(STACK[0x568] + 26) ^ v8) * (*(unsigned char *)(STACK[0x568] + 26) ^ v8)) & 0xCF)
              - 24;
  *(unsigned char *)(STACK[0x568] + 350) = v88 - ((2 * v88) & 0xFC) - 2;
  LOBYTE(v55) = *(unsigned char *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 136) & 0x3F ^ v8)) ^ 0xFE;
  char v89 = (*(unsigned char *)(STACK[0x568] + 385) ^ 0xFE) - ((2 * (*(unsigned char *)(STACK[0x568] + 385) ^ 0xFE)) & 0x16) + 11;
  LOBYTE(v55) = v55 - ((2 * v55) & 0x8A) - 59;
  LOBYTE(v88) = (((v55 ^ 0xC5 | v89 ^ 0xB) - ((2 * (v55 ^ 0xC5 | v89 ^ 0xB)) & 0x10) + 8) ^ 8) & (((*(unsigned char *)(STACK[0x568] + 378) ^ 0xFE)
                                                                                                 - ((2 * (*(unsigned char *)(STACK[0x568] + 378) ^ 0xFE)) & 0xAA)
                                                                                                 - 43) ^ 0xD5);
  LOBYTE(v88) = (v88 - ((2 * v88) & 2) + 1) ^ 1 | (((v55 ^ 0xC5) & (v89 ^ 0xB))
                                                 - ((2 * ((v55 ^ 0xC5) & (v89 ^ 0xB))) & 0x94)
                                                 + 74) ^ 0x4A;
  char v90 = v88 - ((2 * v88) & 0x42) + 33;
  LOBYTE(v88) = (((v90 | 0x3D) - ((2 * v90) & 4) - 7) ^ 0xB) & (((~*(unsigned char *)(STACK[0x568] + 374) >> 1)
                                                               - (~*(unsigned char *)(STACK[0x568] + 374) & 0xA8)
                                                               - 44) ^ 0xD4);
  char v91 = (v88 - ((2 * v88) & 0x20) - 112) ^ 0x90 | v90 & 0xBD ^ 0x21;
  *(unsigned char *)(STACK[0x568] + 358) = (v91 - ((2 * v91) & 0x48) + 36) ^ 0xDA;
  int v92 = *(unsigned __int8 *)(STACK[0x568] + 422) ^ 0xFE;
  int v93 = v92 - ((2 * v92) & 0xC8) - 1649306524;
  LOWORD(v55) = (v93 & 0x8A ^ 0x82) - ((2 * (v93 & 0x8A ^ 0x82)) & 0xFF0F);
  unsigned int v94 = *(unsigned __int8 *)(STACK[0x568] + 92) ^ v8;
  int v95 = ((v94 - ((2 * v94) & 0x1A4) + 1204136914) ^ 0x581ABD2) & (v93 ^ 0x2B9B);
  int v96 = ((_WORD)v55 + 1159) & 0x7FE ^ 0x404 | (v95 - ((2 * v95) & 0x14771BA4) + 1245416914) ^ 0x4A3B8DD2;
  unsigned int v97 = ((205 * (*(unsigned __int8 *)(STACK[0x568] + 155) ^ v8)) >> 10) & 7 ^ 0xFFFFFFDE;
  LOBYTE(v29) = ((v97 | 0xB1) - (v97 | 0x4E) + 78) ^ 0xC9;
  LOBYTE(v29) = ((v29 | 0x53) - (v29 | 0xAC) - 84) ^ 0xF5;
  LOBYTE(v29) = ((2 * v29) & 0xEE) + (v29 ^ 0x77);
  unsigned int v98 = (v96 - ((2 * v96) & 0x7F6068BE) - 1078971297) ^ 0xBFB0345F;
  int v99 = ((v98 >> ((7 - v29) & 7)) - ((2 * (v98 >> ((7 - v29) & 7))) & 0x9E) + 79) ^ ((v98 << (v29 - 119))
                                                                                   - ((2 * (v98 << (v29 - 119))) & 0xC4)
                                                                                   + 226);
  LOBYTE(v99) = ~(((2 * v99) ^ 0x5A) + (v99 ^ 0x52)) + (*(unsigned char *)(STACK[0x568] + 395) ^ 0xFE);
  *(unsigned char *)(STACK[0x568] + 395) = v99 + (~(2 * v99) | 3) - 1;
  *(unsigned char *)(STACK[0x568] + 345) ^= 0xFDu;
  LOBYTE(v99) = ((*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE) * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE)
               - ((2 * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE) * (*(unsigned char *)(STACK[0x568] + 366) ^ 0xFE)) & 0xBF)
               - 33) ^ 0xDF;
  LOBYTE(v99) = (*(unsigned char *)(STACK[0x568] + 343) ^ 0xFE) + ((-90 * v99) & 0xEF) + ((-45 * v99) ^ 0x77) - 119;
  *(unsigned char *)(STACK[0x568] + 343) = v99 + (~(2 * v99) | 3) - 1;
  unsigned int v100 = ((((*(unsigned char *)(STACK[0x568] + 69) & 0xAC ^ 0xFFFFFF80) & 0xFFFFFF80)
         + (*(unsigned char *)(STACK[0x568] + 69) & 0x80)
         + (*(unsigned char *)(STACK[0x568] + 69) & 0xAC ^ 0xFFFFFF80)) | 0x12) ^ 0x18;
  unsigned int v101 = ((v100 | 9) - (v100 | 0xFFFFFFF6) - 10) & 0xFFFFFFBD ^ 0x67;
  unsigned int v102 = ((v101 + ((2 * v101) & 0x38 ^ 0xFFFFFFFB) + 31) ^ 0x1E)
       * (*(unsigned __int8 *)(STACK[0x570] + (*(unsigned char *)(STACK[0x568] + 116) & 0x3F ^ v8)) ^ 1);
  LODWORD(STACK[0x4A8]) = v102 ^ 0x3D;
  LODWORD(STACK[0x4B0]) = (2 * v102) & 0x7A;
  LOBYTE(v102) = (2 * *(unsigned char *)(v21 + (*(unsigned char *)(STACK[0x568] + 85) & 0x3F ^ v8))) ^ 0xFC;
  LOBYTE(v98) = (v102 - ((2 * v102) & 0x66) + 51) ^ 0xEA;
  unsigned int v103 = (*(unsigned char *)(STACK[0x568] + 39) & 0x58)
       + ((*(unsigned __int8 *)(STACK[0x568] + 39) >> 1) & 0x6C ^ 0xFFFFFFBF)
       - 89;
  LODWORD(STACK[0x4B8]) = v103;
  unsigned int v104 = (v103 & 0xFE) - ((2 * v103) & 0x18C) - 145745978;
  LOBYTE(v97) = byte_10026CFC4[*(unsigned char *)(STACK[0x568] + 33) & 0x3F ^ v8];
  LOBYTE(v64) = *(unsigned char *)(STACK[0x570] + (v104 & 0x3C ^ 6));
  *(unsigned char *)(STACK[0x568] + 96) = v98;
  *(unsigned char *)(STACK[0x568] + 373) ^= (((v64 ^ 0xFE) & (v97 ^ 0xC3))
                                                    - ((2 * ((v64 ^ 0xFE) & (v97 ^ 0xC3))) & 0xAA)
                                                    + 85) ^ 0x55;
  unint64_t v105 = *(unsigned char *)(STACK[0x568] + 239) & 0x3F ^ v8;
  unsigned int v106 = *(unsigned __int8 *)(v21 + v105) ^ 0xFFFFFFFE | *(unsigned __int8 *)(STACK[0x568] + 148) ^ v8;
  unsigned int v107 = ((*(unsigned __int8 *)(v21 + (*(unsigned char *)(STACK[0x568] + 105) & 0x3F ^ v8)) | 0xFFFFFFE7) - 67) ^ 0xFFFFFFBC;
  unsigned int v108 = (((v106 - ((2 * v106) & 0x1C) + 14) & 0xFFFFFFC6 | v107) ^ 6) - ((2 * v107) & 0x20);
  LOBYTE(v107) = *(unsigned char *)(STACK[0x568] + 354);
  LOBYTE(v106) = (*(unsigned char *)(STACK[0x568] + 221) ^ v8) & (v107 ^ 0xFE);
  LOBYTE(v107) = (*(unsigned char *)(STACK[0x568] + 339) ^ 0xFE) & (v107 ^ 1);
  LOBYTE(v106) = (v107 - ((2 * v107) & 0x56) - 85) ^ 0xAB | (v106 + (~(2 * v106) | 0x99) + 52) ^ 0x33;
  unint64_t v109 = STACK[0x570];
  *(unsigned char *)(STACK[0x568] + 441) = (((v106 - ((2 * v106) & 0x48) - 28) & 0x68 ^ 0x89)
                                  + ((v106 - ((2 * v106) & 0x48) - 28) & 0x17)
                                  - 1) ^ 0x12;
  unsigned int v110 = 205 * (*(unsigned __int8 *)(v109 + (*(unsigned char *)(STACK[0x568] + 171) & 0x3F ^ v8)) ^ 0xFE);
  unsigned int v111 = (*(unsigned __int8 *)(STACK[0x568] + 24) ^ v8)
       + ((v110 >> 10) ^ 0xFFFFFFCE)
       + ((v110 >> 9) & 0x1C)
       + 50;
  *(unsigned char *)(STACK[0x568] + 44) ^= 0xD7 ^ (v111 + (~(2 * v111) | 0x51) - 40);
  int v112 = (((~((*(unsigned __int8 *)(STACK[0x568] + 137) >> 1) & 0x24) | 0x22)
         + ((*(unsigned __int8 *)(STACK[0x568] + 137) >> 1) & 0x20 | 0x1D)) ^ 0x1C | *(unsigned char *)(STACK[0x568] + 329) & 0x53) ^ 0x52;
  *(unsigned char *)(STACK[0x568] + 423) ^= 0xD8 ^ (v112 - ((2 * v112) & 0xB0) - 40);
  *(unsigned char *)(STACK[0x568] + 344) ^= 0xCE ^ (3
                                                           * (((*(unsigned char *)(STACK[0x568] + 67) | 0x2F)
                                                             - ((2 * *(unsigned char *)(STACK[0x568] + 67)) & 0xA0)
                                                             - 54) ^ 0xD6)
                                                           + (~(6
                                                              * (((*(unsigned char *)(STACK[0x568] + 67) | 0x2F)
                                                                - ((2 * *(unsigned char *)(STACK[0x568] + 67)) & 0xA0)
                                                                - 54) ^ 0xD6)) | 0x67)
                                                           - 49);
  *(unsigned char *)(STACK[0x568] + 370) = 75;
  *(unsigned char *)(STACK[0x568] + 419) ^= 0xBDu;
  LOBYTE(v20) = *(unsigned char *)(v109 + (*(unsigned char *)(STACK[0x568] + 37) & 0x3F ^ v8)) & 0x5E ^ 0x1C;
  LOBYTE(v88) = ((((v20 - ((2 * v20) & 0x18) - 116) & 0xD8 ^ 0xD1) + ((v20 - ((2 * v20) & 0x18) - 116) & v8 ^ 5) - 2) | ((((*(unsigned char *)(STACK[0x568] + 400) & 0xA1 ^ 0x7E) + 52) ^ 0xD4) - 122) & 0xA1) ^ 0x1A;
  LOBYTE(v88) = ((v88 - ((2 * v88) & 0xA8) - 44) ^ v9) + (*(unsigned char *)(STACK[0x568] + 188) ^ v8);
  LOBYTE(v107) = v88 - ((2 * v88) & 0x4C);
  LODWORD(STACK[0x4E0]) = byte_10026CFC4[v105];
  char v113 = *(unsigned char *)(STACK[0x568] + 61) ^ v8;
  LOBYTE(v88) = byte_10026CFC4[*(unsigned char *)(STACK[0x568] + 193) & 0x3F ^ v8] ^ 0xC3;
  LOBYTE(v20) = (((v88 | v113) - ((2 * (v88 | v113)) & 0xE8) - 12) ^ 0xF4) & (*(unsigned char *)(STACK[0x568] + 403) ^ 0xFE);
  LOBYTE(v88) = (v20 - ((2 * v20) & 0xEA) - 11) ^ 0xF5 | ((v88 & v113) - ((2 * (v88 & v113)) & 0x28) - 108) ^ 0x94;
  LOBYTE(v88) = (*(unsigned char *)(STACK[0x568] + 357) ^ 0xFE) + (v88 ^ 0x22) - ((2 * v88) & 0xBA) - 34;
  *(unsigned char *)(STACK[0x568] + 357) = v88 + (~(2 * v88) | 3) - 1;
  unsigned int v114 = v108 - 79;
  unint64_t v115 = (unsigned char *)STACK[0x568];
  LOBYTE(v88) = *(unsigned char *)(v109 + (*(unsigned char *)(STACK[0x568] + 159) & 0x3F ^ v8)) ^ 0xFE;
  LODWORD(STACK[0x548]) = v114;
  LOBYTE(v88) = (v88 & (v114 ^ 0x4E)) - ((2 * (v88 & (v114 ^ 0x4E))) & 0x58) + 44;
  LOBYTE(v88) = ((v88 & 0x9D ^ 0xF3) + ((2 * v88) & 0x20) - 112) & 0xDD ^ 0xAF;
  v115[371] ^= (v88 + ((2 * v88) & 0x18 ^ 0xFB) + 15) ^ 0xE;
  LOBYTE(v112) = (v115[116] ^ v8) - ((2 * (v115[116] ^ v8)) & 0xC2) + 97;
  LOBYTE(v79) = (v115[416] ^ 0xFE) - ((2 * (v115[416] ^ 0xFE)) & 0x1A) - 115;
  LOBYTE(v114) = (((v79 ^ 0x8D | v112 ^ 0x61) - ((2 * (v79 ^ 0x8D | v112 ^ 0x61)) & 0xE4) - 14) ^ 0xF2) & (((v115[349] ^ 0xFE) - ((2 * (v115[349] ^ 0xFE)) & 0xA2) + 81) ^ 0x51);
  LOBYTE(v114) = (v114 - ((2 * v114) & 0x4C) - 90) ^ 0xA6 | (((v79 ^ 0x8D) & (v112 ^ 0x61))
                                                           - ((2 * ((v79 ^ 0x8D) & (v112 ^ 0x61))) & 0xC6)
                                                           - 29) ^ 0xE3;
  int v116 = (v104 >> 1) ^ 0x7BA80BE3;
  LOBYTE(v114) = v114 - ((2 * v114) & 0x60) - 80;
  LOBYTE(v88) = (((v114 ^ 0xB0 | v116) - ((2 * (v114 ^ 0xB0 | v116)) & 0x7C) - 66) ^ 0xBE) & (((v115[321] ^ 0xFE)
                                                                                             - ((2 * (v115[321] ^ 0xFE)) & 0xBC)
                                                                                             - 34) ^ 0xDE);
  LOBYTE(v88) = (v88 - ((2 * v88) & 0x34) + 26) ^ 0x1A | (((v114 ^ 0xB0) & v116)
                                                        - ((2 * ((v114 ^ 0xB0) & v116)) & 0x8C)
                                                        + 70) ^ 0x46;
  v115[347] = (v88 - ((2 * v88) & 0xE8) + 116) ^ 0x8A;
  v115[188] = v107 + 38;
  LODWORD(v88) = *(unsigned __int8 *)(v21 + (((_BYTE)v107 + 38) & 0x3F ^ v8));
  HIDWORD(v117) = v88 ^ 2;
  LODWORD(v117) = ~v88 << 24;
  LOBYTE(v88) = (v115[381] ^ 0xFE) - ((2 * (v115[381] ^ 0xFE)) & 0xE7);
  LOBYTE(v112) = ((2 * ~v115[4]) & 0xC) + (v115[4] & 7);
  unsigned int v118 = ((v115[430] ^ 0xFE) - ((2 * (v115[430] ^ 0xFE)) & 0x24) - 682251758) ^ 0xD755AA12;
  int v119 = (v118 << (v112 - 6)) - ((2 * (v118 << (v112 - 6))) & 0xD4A7B96) + 111492555;
  int v120 = (v118 >> ((46 - v112) & 7)) - ((2 * (v118 >> ((46 - v112) & 7))) & 0x10CCA16) - 2138675957;
  LOBYTE(v112) = (v115[415] ^ 0xFE) - ((2 * (v115[415] ^ 0xFE)) & 0x50);
  char v121 = (v115[247] ^ v8) - ((2 * (v115[247] ^ v8)) & 0xA);
  v115[151] = v8;
  v121 += 5;
  char v122 = (*(unsigned char *)(v21 + (v115[41] & 0x3F ^ v8)) ^ 0xFE) + 0x80;
  LOBYTE(v112) = (((v122 ^ 0x80 | v121 ^ 5) - ((2 * (v122 ^ 0x80 | v121 ^ 5)) & 0xF6) - 5) ^ 0xFB) & ((v112 + 40) ^ 0x28);
  char v123 = (v112 - ((2 * v112) & 0x28) + 20) ^ 0x14 | (((v122 ^ 0x80) & (v121 ^ 5))
                                                   - ((2 * ((v122 ^ 0x80) & (v121 ^ 5))) & 0xC0)
                                                   - 32) ^ 0xE0;
  LOBYTE(v120) = v119 ^ v120 ^ 0xC0;
  char v124 = (v123 - ((2 * v123) & 0xB2) - 39) ^ 0xD9;
  LOBYTE(v88) = (((v124 | v120) - ((2 * (v124 | v120)) & 0xE4) + 114) ^ 0x72) & ((v88 - 13) ^ 0xF3);
  LOBYTE(v88) = (v88 - ((2 * v88) & 0xE6) - 13) ^ 0xF3 | ((v124 & v120) - ((2 * (v124 & v120)) & 0x46) - 93) ^ 0xA3;
  LOBYTE(v88) = (v115[354] ^ 0xFE)
              + ((v88 - ((2 * v88) & 4) - 126) ^ 0xFC)
              + ((2 * (v88 - ((2 * v88) & 4) - 126)) & 0xFC ^ 4)
              - 126;
  v115[354] = v88 - ((2 * v88) & 0xFC) - 2;
  LOBYTE(v88) = (v115[442] ^ 0xFE) - ((2 * (v115[442] ^ 0xFE)) & 0x1F) - 113;
  char v125 = ((v88 & 0x23 ^ 1) - ((2 * v88) & 4) - 62) ^ 0xC4;
  LOBYTE(v88) = (((v115[372] ^ 0xFE) - ((2 * (v115[372] ^ 0xFE)) & 0xE0) + 112) ^ 0x70) & (v88 ^ 0x70);
  LOBYTE(v88) = (v125 - ((2 * v125) & 0xA2) - 47) ^ 0xD5 | (v88 - ((2 * v88) & 0x6C) - 74) ^ 0xB6;
  LOBYTE(v88) = (v88 - ((2 * v88) & 0xC8) + 100) ^ 0x64;
  v115[339] = (v88 * v88) ^ 0xFE;
  LOBYTE(v88) = (((v115[444] & 0x20) + (v115[444] & 0x25 ^ 0xA6)) | 0x10) - ((v115[444] & 0x25 ^ 0xA6) & 0x20);
  LOBYTE(v88) = (v115[322] ^ 0xFE) + (v88 & 0xE5 ^ 0x6F) + ((2 * v88) & 0x40) - 25;
  LOBYTE(v88) = (v115[361] ^ 0xFE) + (v88 ^ 0xF9) + ((2 * v88) & 0xF3) + 7;
  v115[361] = v88 - ((2 * v88) & 0xFC) - 2;
  LODWORD(v88) = v7 ^ 0x708FBFBE ^ (45 * (((LODWORD(STACK[0x670]) - v7) | (v7 - LODWORD(STACK[0x670]))) >= 0));
  LODWORD(STACK[0x4E8]) = LODWORD(STACK[0x4D8]) + 34;
  LODWORD(STACK[0x4F0]) = (v117 >> 26) - ((2 * (v117 >> 26)) & 0x76) + 59;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (int)v88))();
}

uint64_t sub_100231DDC@<X0>(char a1@<W1>, int a2@<W2>, unsigned char *a3@<X6>, int a4@<W8>)
{
  int v13 = LODWORD(STACK[0x4A8]) + LODWORD(STACK[0x4B0]);
  int v14 = LODWORD(STACK[0x4C8]) + LODWORD(STACK[0x4C0]);
  LODWORD(STACK[0x570]) = v4 ^ v8;
  char v15 = (((*v9 ^ 0x99) + 127) ^ 0x17) + ((2 * ((*v9 ^ 0x99) + 127)) & 0x2E) - 2;
  unsigned char *v9 = ((v15 ^ 3) + 2 * (v15 & 3) - 24) ^ 0x99;
  if (v5 == a2 - 1) {
    unsigned int v16 = v11;
  }
  else {
    unsigned int v16 = v11 + 1;
  }
  char v17 = *v16;
  if (v5 == a2 - 1) {
    char v18 = 0;
  }
  else {
    char v18 = 89;
  }
  char v19 = v17 ^ v18;
  if (v5 == a2 - 1) {
    uint64_t v20 = 4;
  }
  else {
    uint64_t v20 = 5;
  }
  char v21 = v19 ^ *(unsigned char *)(v6 + v20);
  if (v5 == a2 - 1) {
    char v22 = a3;
  }
  else {
    char v22 = a3 + 1;
  }
  char v23 = v21 ^ *v22;
  if (v5 == a2 - 1) {
    char v24 = v9;
  }
  else {
    char v24 = v9 + 1;
  }
  char v25 = (((v23 ^ *v24) - 20) ^ 0x7F) + 2 * ((v23 ^ *v24) - 20) - 1;
  *char v24 = v23 ^ ((v25 ^ 0x22) + ((2 * v25) & 0x44) + 96);
  uint64_t v26 = 2 % v7;
  char v27 = (89 * v26) ^ v11[v26] ^ *(unsigned char *)(v6 + v26 + 4) ^ a3[v26];
  char v28 = (((v27 ^ v9[v26]) + 111) ^ 0xC7) + ((2 * ((v27 ^ v9[v26]) + 111)) & 0x8F) + 125;
  v9[v26] = v27 ^ ((v28 ^ 0xA8) + (v10 & (2 * v28)) + 20);
  uint64_t v29 = 3 % v7;
  int v30 = (byte_10026B480[v29] ^ v9[v29] ^ (-79 * v29) ^ byte_100287BA0[v29] ^ byte_100292660[v29 | 4])
      + LODWORD(STACK[0x4B8]);
  v9[v29] = v11[v29] ^ (89 * v29) ^ *(unsigned char *)(v6 + (v29 | 4)) ^ a3[v29] ^ (((2 * (v30 & 0x1F) + (v30 ^ 0x9F) + 121) ^ 0x5E)
                                                                          + ((2 * (2 * (v30 & 0x1F) + (v30 ^ 0x9F)) - 14) & 0xBC)
                                                                          - 118);
  int v31 = STACK[0x670];
  unsigned int v32 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v33 = 4 % v32;
  int v34 = (89 * v33) ^ v11[v33] ^ *(unsigned __int8 *)(v33 + v6 + 4) ^ a3[v33];
  unsigned int v35 = (v34 ^ v9[v33]) - 3;
  unsigned int v36 = (v35 ^ 0xFFFFFFFE) + 4 * (v35 >> 1) + 82;
  v9[v33] = v34 ^ ((v36 ^ 0x26) + ((2 * v36) & 0x4C) - 118);
  uint64_t v37 = 5 % v32;
  LOBYTE(v34) = (89 * v37) ^ v11[v37] ^ *(unsigned char *)(v37 + v6 + 4) ^ a3[v37];
  v9[v37] = v34 ^ (((((2 * ((v34 ^ v9[v37]) + 17)) & 0xF7) + (((v34 ^ v9[v37]) + 17) ^ 0xFB)) ^ 0xE1)
                 + ((2 * (((2 * ((v34 ^ v9[v37]) + 17)) & 0xF7) + (((v34 ^ v9[v37]) + 17) ^ 0xFB))) & 0xC3)
                 + 36);
  uint64_t v38 = 6 % v32;
  int v39 = (byte_10026B480[v38] ^ v9[v38] ^ (-79 * v38) ^ byte_100287BA0[v38] ^ byte_100292660[v38 + 4])
      + (LODWORD(STACK[0x4E8]) ^ 0x52);
  v9[v38] = v11[v38] ^ (89 * v38) ^ *(unsigned char *)(v6 + v38 + 4) ^ a3[v38] ^ ((v39 ^ 0x7F) + 2 * v39 - 127);
  uint64_t v40 = 7 % v32;
  LOBYTE(v39) = (89 * v40) ^ v11[v40] ^ *(unsigned char *)(v40 + v6 + 4) ^ a3[v40];
  v9[v40] = v39 ^ ((((v39 ^ v9[v40]) + 47) ^ 0x4D) + ((2 * ((v39 ^ v9[v40]) + 47)) & 0x9A) - 77);
  uint64_t v41 = 8 % v32;
  LOBYTE(v39) = v13 + (byte_10026B480[v41] ^ v9[v41] ^ (-79 * v41) ^ byte_100287BA0[v41] ^ byte_100292660[v41 + 4]) + 36;
  v9[v41] = v11[v41] ^ (89 * v41) ^ *(unsigned char *)(v6 + v41 + 4) ^ a3[v41] ^ (((((2 * v39) & 0xDA) + (v39 ^ 0xED)) ^ 0x19)
                                                                        + ((2 * (((2 * v39) & 0xDA) + (v39 ^ 0xED))) & 0x33)
                                                                        - 6);
  uint64_t v42 = 9 % v32;
  LOBYTE(v39) = (v11[v42] ^ v9[v42] ^ (89 * v42) ^ *(unsigned char *)(v42 + v6 + 4) ^ a3[v42]) - 118;
  v9[v42] = byte_10026B3C0[v42] ^ (63 * v42) ^ byte_10026BF30[v42 + 1] ^ byte_1002706A0[v42 + 7] ^ ((v39 | 0xFD)
                                                                                                  + ((((2 * v39) & 0xB8) + (v39 ^ 0x5C)) & 0xFD)
                                                                                                  - 89);
  uint64_t v43 = 0xA % (v31 ^ 0x708FBBE7u);
  int v44 = (63 * v43) ^ byte_10026B3C0[v43] ^ byte_10026BF30[v43 + 1] ^ byte_1002706A0[v43 + 7];
  unsigned int v45 = ((LODWORD(STACK[0x550]) + 36) ^ 0xFFFFFFC0)
      - 2 * ((LODWORD(STACK[0x550]) + 36) & 0x3F)
      + (v44 ^ v9[v43])
      + 64;
  v9[v43] = v44 ^ (((((2 * v45) & 0xBC) + (v45 ^ 0xDE) + 116) ^ 0xF4)
                 + ((2 * (((2 * v45) & 0xBC) + (v45 ^ 0xDE)) - 24) & 0xE8)
                 - 70);
  uint64_t v46 = 0xB % (v31 ^ 0x708FBBE7u);
  LOBYTE(v44) = (63 * v46) ^ byte_10026B3C0[v46] ^ byte_10026BF30[v46 + 1] ^ byte_1002706A0[v46 + 7];
  v9[v46] = v44 ^ ((((v44 ^ v9[v46]) - 44) ^ 0x37) + ((2 * ((v44 ^ v9[v46]) - 44)) & 0x6E) - 55);
  uint64_t v47 = 0xC % (v31 ^ 0x708FBBE7u);
  LOBYTE(v46) = (a1 - 19) ^ 0xBD;
  LOBYTE(v44) = (36 - 2 * a1) & 0x72;
  char v48 = (63 * v47) ^ byte_10026B3C0[v47] ^ byte_10026BF30[v47 + 1] ^ byte_1002706A0[v47 + 7];
  LOBYTE(v46) = v46 - v44 + (v48 ^ v9[v47]) + 58;
  v9[v47] = v48 ^ (((((2 * v46) & 0x4E) + (v46 ^ 0x27) + 113) ^ 0xA9)
                 + ((2 * (((2 * v46) & 0x4E) + (v46 ^ 0x27)) + 98) & 0x52)
                 + 31);
  LODWORD(v46) = STACK[0x670];
  unsigned int v49 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v50 = 0xD % v49;
  int v51 = (byte_10026B480[v50] ^ v9[v50] ^ (-79 * v50) ^ byte_100287BA0[v50] ^ byte_100292660[v50 + 4])
      + (LODWORD(STACK[0x4E0]) ^ 0xFFFFFFC3);
  v9[v50] = byte_10026B3C0[v50] ^ (63 * v50) ^ byte_10026BF30[v50 + 1] ^ byte_1002706A0[v50 + 7] ^ (((((2 * v51) & 0xEA) + (v51 ^ 0x75)) ^ 0x73)
                                                                                                  + ((2 * (((2 * v51) & 0xEA) + (v51 ^ 0x75))) & 0xE7)
                                                                                                  + 24);
  uint64_t v52 = 0xE % v49;
  LOBYTE(v45) = (63 * v52) ^ byte_10026B3C0[v52] ^ byte_10026BF30[v52 + 1] ^ byte_1002706A0[v52 + 7];
  char v53 = (v45 ^ v9[v52]) + 42;
  v9[v52] = v45 ^ (((((2 * v53) & 0xDA) + (v53 ^ 0x6D) - 41) | 0x3A)
                 - ((40 - (((2 * v53) & 0xDA) + (v53 ^ 0x6D))) & 0x3A)
                 - 68);
  uint64_t v54 = 0xF % v49;
  LOBYTE(v45) = (63 * v54) ^ byte_10026B3C0[v54] ^ byte_10026BF30[v54 + 1] ^ byte_1002706A0[v54 + 7];
  char v55 = (((v45 ^ v9[v54]) - 75) ^ 0xF7) + ((2 * ((v45 ^ v9[v54]) - 75)) & 0xEF) + 76;
  v9[v54] = v45 ^ ((v55 ^ 0x4D) + ((2 * v55) & 0x9A) + 112);
  LODWORD(v46) = v46 ^ 0x708FBBE7;
  uint64_t v56 = 0x10 % v46;
  char v57 = v14
      + (byte_10026B480[v56 & 0xF] ^ v9[v56] ^ byte_100287BA0[v56 & 0xF] ^ byte_100292660[(v56 & 0xF) + 4] ^ (-79 * (v56 & 0xF)))
      - 85;
  v9[v56] = byte_10026B3C0[v56 & 0xF] ^ (63 * (v56 & 0xF)) ^ byte_10026BF30[(v56 & 0xF) + 1] ^ byte_1002706A0[(v56 & 0xF) + 7] ^ (((~v57 + 2 * v57 + 127) ^ 0xA1) + ((2 * (~v57 + 2 * v57) + 126) & 0x42) - 31);
  uint64_t v58 = 0x11 % v46;
  char v59 = byte_10026BF30[(v58 & 0xF) + 1] ^ byte_10026B3C0[v58 & 0xF];
  LOBYTE(v45) = 63 * (v58 & 0xF);
  unsigned __int8 v60 = byte_1002706A0[(v58 & 0xF) + 7];
  char v61 = (v59 ^ v9[v58] ^ v60 ^ v45) + 35;
  v9[v58] = v59 ^ v45 ^ v60 ^ (((2 * v61) & 0xFB)
                             + (v61 ^ 0xFD)
                             + ((15 - (((2 * v61) & 0xFB) + (v61 ^ 0xFD))) | 0xCD)
                             + ((((2 * v61) & 0xFB) + (v61 ^ 0xFD) + 48) | 0xCD)
                             + 55);
  uint64_t v62 = 0x12 % v46;
  int v63 = (v11[v62 & 0xF] ^ v9[v62] ^ *(unsigned __int8 *)((v62 & 0xF) + v6 + 4) ^ (89 * (v62 & 0xF)) ^ a3[v62 & 0xF])
      + (LODWORD(STACK[0x4F0]) ^ 0xFFFFFF86);
  v9[v62] = byte_10026B3C0[v62 & 0xF] ^ (63 * (v62 & 0xF)) ^ byte_10026BF30[(v62 & 0xF) + 1] ^ byte_1002706A0[(v62 & 0xF) + 7] ^ ((v63 ^ 0x6B) + ((2 * v63) & 0xD6) - 107);
  LODWORD(v62) = STACK[0x670];
  unsigned int v64 = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v65 = 0x13 % v64;
  LOBYTE(v58) = (byte_10026B480[v65 & 0xF] ^ v9[v65] ^ byte_100287BA0[v65 & 0xF] ^ byte_100292660[(v65 & 0xF) + 4] ^ (-79 * (v65 & 0xF)))
              + STACK[0x4F8];
  LOBYTE(v58) = (v58 ^ 0xBF) + 2 * (v58 & 0x3F) + 84;
  v9[v65] = byte_10026B440[v65 & 0xF] ^ (-59 * (v65 & 0xF)) ^ byte_10026BF00[(v65 & 0xF) + 1] ^ byte_1002910B0[(v65 & 0xF) + 1] ^ ((v58 ^ 0xF3) + ((2 * v58) & 0xE7) - 6);
  uint64_t v66 = 0x14 % v64;
  uint64_t v67 = (v66 & 0xF) + 1;
  char v68 = byte_10026BF00[v67];
  LOBYTE(v67) = byte_1002910B0[v67];
  char v69 = v68 ^ byte_10026B440[v66 & 0xF];
  LOBYTE(v32) = -59 * (v66 & 0xF);
  char v70 = (v69 ^ v9[v66] ^ v67 ^ v32) - 64;
  v9[v66] = v69 ^ v32 ^ v67 ^ ((v70 ^ 0xDF) + ((2 * v70) & 0xBF) + 33);
  uint64_t v71 = 0x15 % v64;
  uint64_t v72 = (v71 & 0xF) + 1;
  LOBYTE(v32) = byte_10026BF00[v72] ^ byte_10026B440[v71 & 0xF];
  LOBYTE(v72) = byte_1002910B0[v72];
  LOBYTE(v66) = -59 * (v71 & 0xF);
  char v73 = (v32 ^ v9[v71] ^ v72 ^ v66) - 26;
  v9[v71] = v32 ^ v66 ^ v72 ^ ((v73 ^ 0x56) + ((2 * v73) & 0xAC) - 86);
  LODWORD(v62) = v62 ^ 0x708FBBE7;
  uint64_t v74 = 0x16 % v62;
  uint64_t v75 = (v74 & 0xF) + 1;
  LOBYTE(v32) = byte_10026BF00[v75] ^ byte_10026B440[v74 & 0xF];
  LOBYTE(v75) = byte_1002910B0[v75];
  LOBYTE(v66) = -59 * (v74 & 0xF);
  char v76 = (v32 ^ v9[v74] ^ v75 ^ v66) - 95;
  v9[v74] = v32 ^ v66 ^ v75 ^ ((v76 ^ 0xF7) + ((2 * v76) & 0xEF) + 9);
  uint64_t v77 = 0x17 % v62;
  int v78 = (byte_10026B480[v77 & 0xF] ^ v9[v77] ^ byte_100287BA0[v77 & 0xF] ^ byte_100292660[(v77 & 0xF) + 4] ^ (-79 * (v77 & 0xF)))
      + (LODWORD(STACK[0x570]) ^ 0x4D);
  v9[v77] = byte_10026B440[v77 & 0xF] ^ (-59 * (v77 & 0xF)) ^ byte_10026BF00[(v77 & 0xF) + 1] ^ byte_1002910B0[(v77 & 0xF) + 1] ^ ((v78 ^ 0xF7) + ((2 * v78) & 0xEF) + 9);
  uint64_t v79 = 0x18 % v62;
  uint64_t v80 = (v79 & 0xF) + 1;
  char v81 = byte_10026BF00[v80] ^ byte_10026B440[v79 & 0xF];
  LOBYTE(v80) = byte_1002910B0[v80];
  LOBYTE(v32) = -59 * (v79 & 0xF);
  LOBYTE(v75) = (v81 ^ v9[v79] ^ v80 ^ v32) - 118;
  v9[v79] = v81 ^ v32 ^ v80 ^ ((v75 ^ 0x1B) + ((2 * v75) & 0x36) - 27);
  uint64_t v82 = 0x19 % v62;
  uint64_t v83 = (v82 & 0xF) + 1;
  LOBYTE(v75) = byte_10026BF00[v83];
  LOBYTE(v83) = byte_1002910B0[v83];
  char v84 = -59 * (v82 & 0xF);
  LOBYTE(v80) = v75 ^ byte_10026B440[v82 & 0xF];
  LOBYTE(v79) = (v80 ^ v9[v82] ^ v83 ^ v84) - 125;
  v9[v82] = v80 ^ v84 ^ v83 ^ ((v79 ^ 0x6D) + ((2 * v79) & 0xDA) - 109);
  LODWORD(v82) = STACK[0x670];
  LODWORD(v80) = LODWORD(STACK[0x670]) ^ 0x708FBBE7;
  uint64_t v85 = 0x1A % v80;
  uint64_t v86 = (v85 & 0xF) + 1;
  LOBYTE(v83) = byte_10026BF00[v86] ^ byte_10026B440[v85 & 0xF];
  LOBYTE(v86) = byte_1002910B0[v86];
  LOBYTE(v50) = -59 * (v85 & 0xF);
  char v87 = (v83 ^ v9[v85] ^ v86 ^ v50) + 118;
  v9[v85] = v83 ^ v50 ^ v86 ^ ((v87 ^ 0x7B) + ((2 * v87) & 0xF7) - 123);
  uint64_t v88 = 0x1B % v80;
  LOBYTE(v58) = byte_10026BF00[(v88 & 0xF) + 1] ^ byte_10026B440[v88 & 0xF] ^ (-59 * (v88 & 0xF)) ^ byte_1002910B0[(v88 & 0xF) + 1];
  v9[v88] = v58 ^ ((((v58 ^ v9[v88]) - 122) ^ 0xAB) + ((2 * (v58 ^ v9[v88]) + 12) & 0x56) + 6);
  uint64_t v89 = 0x1C % v80;
  uint64_t v90 = (v89 & 0xF) + 2;
  LOBYTE(v45) = byte_10026B6A0[v90];
  LOBYTE(v90) = byte_100288240[v90];
  LOBYTE(v83) = 87 * (v89 & 0xF);
  LOBYTE(v86) = v45 ^ byte_10026B380[v89 & 0xF];
  char v91 = (v86 ^ v9[v89] ^ v90 ^ v83) + 115;
  v9[v89] = v86 ^ v83 ^ v90 ^ ((v91 ^ 0x7D) + ((2 * v91) & 0xFB) - 125);
  uint64_t v92 = 0x1D % v80;
  char v93 = (byte_10026B480[v92 & 0xF] ^ v9[v92] ^ byte_100287BA0[v92 & 0xF] ^ byte_100292660[(v92 & 0xF) + 4] ^ (-79 * (v92 & 0xF)))
      + STACK[0x558];
  v9[v92] = byte_10026B380[v92 & 0xF] ^ (87 * (v92 & 0xF)) ^ byte_10026B6A0[(v92 & 0xF) + 2] ^ byte_100288240[(v92 & 0xF) + 2] ^ ((v93 ^ 0x9F) + 2 * (v93 & 0x1F) + 97);
  unsigned int v94 = v82 ^ 0x708FBBE7;
  uint64_t v95 = 0x1E % (v82 ^ 0x708FBBE7);
  uint64_t v96 = (v95 & 0xF) + 2;
  LOBYTE(v45) = byte_10026B6A0[v96];
  LOBYTE(v96) = byte_100288240[v96];
  LOBYTE(v80) = 87 * (v95 & 0xF);
  LOBYTE(v83) = v45 ^ byte_10026B380[v95 & 0xF];
  LOBYTE(v92) = (v83 ^ v9[v95] ^ v96 ^ v80) + 81;
  v9[v95] = v83 ^ v80 ^ v96 ^ (((((2 * v92) & 0xD6) + (v92 ^ 0xEB) + 62) ^ 0x2B)
                             + ((2 * (((2 * v92) & 0xD6) + (v92 ^ 0xEB)) + 124) & 0x56)
                             - 84);
  uint64_t v97 = 0x1F % v94;
  LODWORD(v26) = (byte_10026B480[v97 & 0xF] ^ v9[v97] ^ byte_100287BA0[v97 & 0xF] ^ byte_100292660[(v97 & 0xF) + 4] ^ (-79 * (v97 & 0xF)))
               + (LODWORD(STACK[0x548]) ^ 0xFFFFFFB1);
  LOBYTE(v26) = (v26 ^ 0xE9) + ((2 * v26) & 0xD2) + 64;
  v9[v97] = byte_10026B380[v97 & 0xF] ^ (87 * (v97 & 0xF)) ^ byte_10026B6A0[(v97 & 0xF) + 2] ^ byte_100288240[(v97 & 0xF) + 2] ^ ((v26 ^ 0xDF) + ((2 * v26) & 0xBF) - 8);
  v9[0 % v94] ^= *v12 ^ 0xFE;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((106 * (a4 == 1390)) ^ a4)))();
}

uint64_t sub_100232E30(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v8 + ((int)v7 - 1544884126) % a3) ^= *(unsigned char *)(v7 + v9 - 1544884126) ^ 0xFE;
  return (*(uint64_t (**)(void))(a4 + 8 * ((83 * (v7 + 1 != a6 + 64)) ^ v6)))();
}

uint64_t sub_100232E94(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(unsigned char *)(v10 + ((int)v8 + a7) % a3) ^= *(unsigned char *)(v8 + v11 - 2139391791) ^ 0x26;
  return (*(uint64_t (**)(void))(a4 + 8 * (((v8 + 1 == v9 + 319) * (((v7 - 112) | 0x100) ^ 0x5E3)) ^ v7)))();
}

uint64_t sub_100232EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W4>, int a5@<W8>)
{
  uint64_t v7 = (a4 - 1775133580) % a3;
  uint64_t v8 = (a4 - 1775133587) % a3;
  int v9 = *(unsigned __int8 *)(v6 + v8);
  uint64_t v10 = v8 & 0xF;
  uint64_t v11 = (a4 - 1775133617) % a3;
  unsigned int v12 = *(unsigned __int8 *)(v6 + v11);
  int v13 = *(unsigned __int8 *)(v5 + v10) ^ v9 ^ *(unsigned __int8 *)(a1 + v10 + 2);
  uint64_t v14 = (a4 - 1775133757) % a3;
  HIDWORD(v15) = -(int)v11 ^ v12 ^ *(unsigned __int8 *)(v5 + (v11 & 0xF)) ^ *(unsigned __int8 *)(a1 + (v11 & 0xF) + 2) ^ *(unsigned __int8 *)(a2 + (v11 & 0xF) + 2);
  LODWORD(v15) = ((105 * (v11 & 0xF)) ^ v12 ^ *((unsigned __int8 *)&unk_10026B460 + (v11 & 0xF)) ^ *((unsigned __int8 *)&unk_10026F580 + (v11 & 0xF)) ^ *((unsigned __int8 *)&unk_10026F1F0 + (v11 & 0xF))) << 24;
  int v16 = __PAIR64__(v13 ^ (v10 * (a5 ^ 0x296)) ^ *(unsigned __int8 *)(a2 + v10 + 2), (v13 ^ (v10 * (a5 ^ 0x296)) ^ *(unsigned __int8 *)(a2 + v10 + 2)) << 24) >> 31;
  int v17 = *((unsigned __int8 *)&unk_10026B460 + (v14 & 0xF)) ^ *(unsigned __int8 *)(v6 + v14) ^ *((unsigned __int8 *)&unk_10026F580
                                                                                              + (v14 & 0xF));
  int v18 = *((unsigned __int8 *)&unk_10026F1F0 + (v14 & 0xF));
  int v19 = (v15 >> 26) - ((2 * (v15 >> 26)) & 0x12);
  HIDWORD(v15) = v17 ^ v14 ^ v18;
  LODWORD(v15) = (v17 ^ (105 * (((a4 - 1775133757) % a3) & 0xF)) ^ v18) << 24;
  uint64_t v20 = (uint64_t (*)(void))*(&off_1002E1F70 + (((a4 != 1775133835) | (2 * (a4 != 1775133835))) ^ a5));
  *(unsigned char *)(v6 + v7) ^= (105 * (v7 & 0xF)) ^ (87 * (v7 & 0xF)) ^ *(unsigned char *)(v5 + (v7 & 0xF)) ^ *(unsigned char *)(a1 + (v7 & 0xF) + 2) ^ *(unsigned char *)(a2 + (v7 & 0xF) + 2) ^ (v19 + 9) ^ (v16 - ((2 * v16) & 0x98) + 76) ^ *((unsigned char *)&unk_10026B460 + (v7 & 0xF)) ^ *((unsigned char *)&unk_10026F580 + (v7 & 0xF)) ^ *((unsigned char *)&unk_10026F1F0 + (v7 & 0xF)) ^ ((v15 >> 27) - ((2 * (v15 >> 27)) & 0x90) - 56) ^ 0x8D;
  return v20();
}

uint64_t sub_1002330E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  uint64_t v8 = (void *)STACK[0x820];
  int v9 = STACK[0x670];
  STACK[0x788] = 263 * (a8 ^ 0x1C3u) + STACK[0x788] - 974;
  v8[8] = 0xDED30A4024145F56;
  v8[9] = 0x1482B5319C0A3DB9;
  v8[10] = 0xEB7D4ACE63F5C246;
  *(void *)((char *)v8 + 92) = 0xC8643A156B9173A0;
  STACK[0x888] = *(void *)(a4 + 8 * (a8 ^ 0x1FB));
  return sub_100238FA4(a1, a2, a3, a4, a5, a6, a7, v9);
}

uint64_t sub_100233188(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if ((v4 ^ a3) <= 1) {
    int v5 = 1;
  }
  else {
    int v5 = v4 ^ a3;
  }
  return (*(uint64_t (**)(uint64_t))(a4
                                            + 8
                                            * (((8 * ((v5 - 17) > 0xFFFFFFF6)) | (16
                                                                                              * ((v5 - 17) > 0xFFFFFFF6))) ^ LODWORD(STACK[0x49C]))))(1731199255);
}

uint64_t sub_1002331E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((LODWORD(STACK[0x49C]) - 35) ^ 0x26D) - 1610) ^ (LODWORD(STACK[0x49C]) - 1186))
                                * (a5 < 0x10)) ^ (LODWORD(STACK[0x49C]) - 35))))();
}

uint64_t sub_100233220@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  return sub_10022F2F0(a1, 53 * (a2 ^ 0x140u), (int8x16_t)xmmword_10026B2F0, (int8x8_t)0x5959595959595959, (int8x8_t)0x1818181818181818);
}

uint64_t sub_100233268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  _OWORD *v6 = xmmword_10026B2E0;
  return (*(uint64_t (**)(__n128))(a4
                                           + 8
                                           * ((((a5 & 0xFFFFFFF0) == 16) * ((a6 - 2036705333) & 0x7965A7FF ^ 0x78D)) ^ (a6 - 49))))((__n128)xmmword_10026B2E0);
}

void sub_1002332C0()
{
}

uint64_t sub_1002332C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((a5 == v6) ^ (v5 + 106)) & 1) * (v5 ^ 0x7B8)) ^ v5)))();
}

uint64_t sub_100233300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((566 * ((((v5 - 1175) ^ 0x50A ^ ((v5 - 413) | 4)) & a5) == 0)) ^ v5)))();
}

uint64_t sub_10023333C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  *(unsigned char *)(v9 + (a6 - 1731199255)) = *(unsigned char *)(v10 + ((a6 - 1731199255) & 0xFLL)) ^ *(unsigned char *)((((_BYTE)a6 - 23) & 0xF) + v8 + 4) ^ *(unsigned char *)(a7 + ((a6 - 1731199255) & 0xFLL)) ^ (89 * ((a6 - 23) & 0xF)) ^ 0x18;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((109 * (((a6 == a1 + a5 + (v7 ^ 0x6D) - 1066) ^ ((v7 ^ 0x6D) + 6)) & 1)) ^ v7 ^ 0x6D)))();
}

void sub_1002333BC()
{
}

uint64_t sub_1002333C4@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  uint64_t v7 = (a2 - 869) ^ 0x2DLL;
  v8.i64[0] = 0x8000000080000000;
  v8.i64[1] = 0x8000000080000000;
  v5.i64[0] = *(void *)(v4 + 4);
  v5.i32[2] = *(_DWORD *)(v3 + 4 * v7);
  int8x16_t v9 = vextq_s8(v6, v5, 0xCuLL);
  int8x16_t v10 = v5;
  v10.i32[3] = *(_DWORD *)(v4 + 16);
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v10, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x64254C8Au));
  int8x16_t v12 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x804EB5B4)), v11), vdupq_n_s32(0x3FD8A524u));
  int32x4_t v13 = (int32x4_t)veorq_s8(v12, (int8x16_t)vdupq_n_s32(0x1758A545u));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0xC4492C3A)), (int8x16_t)vdupq_n_s32(0xC001083A)), v13), (int32x4_t)vandq_s8((int8x16_t)v13, (int8x16_t)vdupq_n_s32(0xC4492C3B))), (int8x16_t)vdupq_n_s32(0x8235682E));
  v13.i32[0] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 4) & 1));
  v13.i32[1] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v4 + 8) & 1));
  v13.i32[2] = *(_DWORD *)(v2 + 4 * (*(_DWORD *)(v3 + 4 * v7) & 1));
  v13.i32[3] = *(_DWORD *)(v2 + 4 * (v10.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 - 908), (int8x16_t)v13), (int8x16_t)vdupq_n_s32(0x3607A655u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v14, vbicq_s8(v8, v9)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x34B771FCu))), vdupq_n_s32(0x9A5BB8FE)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * (a2 - 869)))();
}

void sub_100233554()
{
}

uint64_t sub_100233560@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v3 = (*v2 & 0x7FFFFFFE ^ 0x7DE71258)
     - (((a2 + 1085146367) & 0xBF51FFFF ^ 0x7BD7D594) & (2 * (*v2 & 0x7FFFFFFE ^ 0x7DE71258)))
     + 1038870815;
  unsigned int v4 = (v3 & 0xBCB31936 ^ 0x90201024) + (v3 ^ 0x2FDFEB9A) - ((v3 ^ 0x2FDFEB9A) & 0xBCB31936);
  v2[623] = v2[396] ^ *((_DWORD *)&STACK[0x14B8] + (*v2 & 1)) ^ (((v4 ^ 0xD9B90115 | ~v2[623] & 0x80000000)
                                                                  - 2 * ((v4 ^ 0xD9B90115) & 0x6AFFA17E ^ v4 & 2)
                                                                  - 352345732) >> 1) ^ 0xE55AA94;
  return (*(uint64_t (**)(void))(a1 + 8 * ((1465 * (LODWORD(STACK[0x934]) > 0x26F)) ^ a2)))();
}

uint64_t sub_100233668@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x934]) = 0;
  int v5 = LODWORD(STACK[0x934])++;
  *(_DWORD *)(v2 + 1624) = v5 + 340121380;
  unint64_t v6 = 516615401
     * ((0x83ACD9DE97B2E20CLL - ((v4 - 192) | 0x83ACD9DE97B2E20CLL) + ((v4 - 192) | 0x7C532621684D1DF3)) ^ 0xF4EFAE5A1B2E1BC1);
  int v7 = v6 + a2 + 761498074;
  *(void *)(v4 - 184) = (*(_DWORD *)(v3 + 1632) - 143219350) - v6;
  *(_DWORD *)(v4 - 192) = v6;
  *(_DWORD *)(v4 - 160) = v7 + 81;
  *(_DWORD *)(v4 - 156) = (a2 - 185256482) ^ v6;
  *(_DWORD *)(v4 - 152) = v7 + 31;
  *(void *)(v4 - 168) = v6 ^ 0x57C90D93;
  *(_DWORD *)(v4 - 172) = (a2 + 761498074) ^ v6;
  (*(void (**)(uint64_t))(a1 + 8 * (a2 + 1436)))(v4 - 192);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + *(int *)(v4 - 176)))();
}

void sub_100233778()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)(v2 + 1632) + 1;
  }
  else {
    int v3 = 1616013353;
  }
  *(_DWORD *)(v2 + 1632) = v3;
  JUMPOUT(0x1002338D4);
}

uint64_t sub_10023394C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((v3 + 8 == a3) * ((((v4 ^ 0x35D) + 1958) ^ 0xFFFFF807) + 857 * (v4 ^ 0x35D))) ^ v4)))();
}

uint64_t sub_100233988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  LODWORD(STACK[0x4F8]) = a6;
  STACK[0x14B8] = 0xE222CAF57B2A7A2ALL;
  LODWORD(STACK[0x934]) = *(_DWORD *)(v7 + 1624) - 340121379;
  uint64_t v10 = *(unsigned int *)(v8 + 1632);
  unint64_t v11 = 1856021207
      * ((((v9 - 192) | 0x7795070DA2BE965CLL) - ((v9 - 192) & 0x7795070DA2BE965CLL)) ^ 0x9A819096ECD740A2);
  *(_DWORD *)(v9 - 188) = v11 ^ (v6 + 640448582) ^ 0xEC;
  *(_DWORD *)(v9 - 184) = (v6 + 640448482) ^ v11;
  *(_DWORD *)(v9 - 160) = v11 + v6 + 1123495617;
  *(_DWORD *)(v9 - 156) = v11;
  *(_DWORD *)(v9 - 180) = v6 + 640448582 + v11;
  *(void *)(v9 - 176) = a2 - v11;
  *(void *)(v9 - 168) = v10 ^ v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (v6 ^ 0xFDB)))(v9 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v9 - 192)))(v12);
}

uint64_t sub_100233A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = STACK[0x578];
  int v7 = (STACK[0x578] - 1448260593) & 0x5652AF7F;
  STACK[0x558] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (int)(STACK[0x578] + 125)))(STACK[0x4F0], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (int)(v6 ^ 0xFCB)))();
  unsigned int v10 = v7 - 1965487874 + v9 - ((2 * v9) & 0x15B211FC) - 823;
  *(_DWORD *)(v5 + 3216) = v10;
  *(_DWORD *)(v4 + 4) = (v7 ^ 0x7FFF3EAC ^ (1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))))
                      + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xFFFE7B36)
                      + 182045540
                      - ((2
                        * ((v7 ^ 0x7FFF3EAC ^ (1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))))
                         + ((-670100790 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) & 0xFFFE7B36))
                        - 536771380) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v7 ^ 0xB1u)))(1723915817);
}

void sub_100233BC8()
{
}

uint64_t sub_100233BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = 536 * (STACK[0x578] ^ 0x7AA);
  int8x16_t v7 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  int8x16_t v8 = (int8x16_t)vdupq_n_s32(0x3944F7A8u);
  v9.i64[0] = 0x8000000080000000;
  v9.i64[1] = 0x8000000080000000;
  v5.i64[0] = *(void *)(v4 + 4);
  v5.i32[2] = *(_DWORD *)(v4 + 12);
  int8x16_t v10 = vextq_s8(v7, v5, 0xCuLL);
  int8x16_t v11 = v5;
  v11.i32[3] = *(_DWORD *)(v4 + 16);
  int8x16_t v12 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v10, v9), (int8x16_t)vdupq_n_s32(0xC20E1A00)), vdupq_n_s32(0x4C847444u));
  int32x4_t v13 = (int32x4_t)veorq_s8(vandq_s8(v11, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x106C6A00u));
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vsubq_s32(vaddq_s32(v13, (int32x4_t)veorq_s8(vandq_s8(v11, v8), (int8x16_t)vdupq_n_s32(0xA90095A8))), (int32x4_t)vandq_s8((int8x16_t)v13, v8)), (int8x16_t)vdupq_n_s32(0xA3F19556));
  v15.i32[0] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 4) & 1));
  v15.i32[1] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 8) & 1));
  v15.i32[2] = *((_DWORD *)&STACK[0x14B8] + (*(_DWORD *)(v4 + 12) & 1));
  v15.i32[3] = *((_DWORD *)&STACK[0x14B8] + (v11.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v4 + 1588), v15), (int8x16_t)vdupq_n_s32(0x79E3C826u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v14, veorq_s8(v12, (int8x16_t)vdupq_n_s32(0x8E928E44))), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0xB26C832u))), vdupq_n_s32(0x5936419u)), 1uLL));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 8 * (v6 ^ 0x57)))(1779453764, 2750515926, 960821160);
}

uint64_t sub_1002346C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W8>)
{
  int8x16_t v9 = (unsigned int *)(v7 + 4 * (v6 + v8));
  unsigned int v10 = (v5 & 0x80000000 ^ 0xC20E1A00) + 1283748932;
  uint64_t v11 = v6 + 1;
  int v12 = *(_DWORD *)(v7 + 4 * (v11 + v8));
  unsigned int v13 = ((v12 & 0x7FFFFFFE ^ (a5 + 275539408)) + (v12 & a3 ^ 0xA90095A8) - ((v12 & 0x7FFFFFFE ^ (a5 + 275539408)) & a3)) ^ (a2 + 2688);
  unsigned int *v9 = v9[397] ^ *((_DWORD *)&STACK[0x14B8] + (v12 & 1)) ^ (((v13 | v10 ^ 0x8E928E44)
                                                            - ((2 * v13) & 0xB26C832)
                                                            + 93545497) >> 1) ^ 0x79E3C826;
  return (*(uint64_t (**)(void))(a4 + 8 * ((754 * (v11 == a1 + 3)) ^ a5)))();
}

uint64_t sub_1002347A4()
{
  STACK[0x788] = 0;
  STACK[0x868] = v0;
  STACK[0x8F8] = STACK[0x558];
  return sub_1002347B8();
}

uint64_t sub_1002347B8(uint64_t a1)
{
  int v3 = *(uint64_t (**)(void))(a1 + 8 * v1);
  if (!qword_10031EE68)
  {
    unint64_t v4 = 0;
    qword_10031EE68 = v2;
    dword_10031EC60 = 255;
    do
    {
      *(_DWORD *)(v2 + 4 * v4) |= ~*(_DWORD *)(v2 + 4 * (*(_DWORD *)(v2 + 4 * v4) & 0x3ELL)) << 16;
      BOOL v5 = v4 >= 0x3B;
      v4 += 4;
    }
    while (!v5);
  }
  return v3();
}

uint64_t sub_100234810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((v2 - 710) ^ (7 * (a2 == 0)))))();
}

uint64_t sub_10023483C(uint64_t a1)
{
  byte_10031EC64 = 1;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((((*(char *)(STACK[0x538] + 1) < 2) ^ (((v1 + 79) & 0x7F ^ 0x75) + 1)) & 1)
                                * ((((v1 - 241420721) & 0xE63C77F) + 38314096) & 0x1DB75EB9 ^ 0x4AD)) ^ (v1 - 241420721) & 0xE63C77Fu)))();
}

uint64_t sub_1002348C4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((1899 * ((v3 ^ (((v2 - a2) | (a2 - v2)) >> 7)) & 1)) ^ (a2 | 0x130u))))();
}

uint64_t sub_1002348FC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  if (*(unsigned __int8 *)(STACK[0x538] + 2) == ((a2 + 41) ^ 0x56 ^ ((_BYTE)a2 - 24) & 0xBD ^ 0xD4)) {
    int v3 = v2;
  }
  else {
    int v3 = -42018;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((1540 * (v3 == 0)) ^ (a2 + 553))))();
}

uint64_t sub_100234964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W8>)
{
  int v8 = (a7 + 27) ^ 0x6798 ^ (((a7 - 117) | 0x3A0)
                           + ((*(unsigned __int8 *)(STACK[0x538] + 3)
                             - ((2 * *(unsigned __int8 *)(STACK[0x538] + 3)) & 0xC6)) << 8)
                           + 23384);
  unsigned int v9 = (v8 - 27904 + (~(2 * v8) | 0xFFFFDBFF)) ^ 0xFFFF92FF | (*(unsigned __int8 *)(STACK[0x538] + 4)
                                                             + (~(2 * *(unsigned __int8 *)(STACK[0x538] + 4)) | 0xFFFFFE63)
                                                             - 3377) ^ 0xFFFFF2CE;
  int v10 = (v9 - ((2 * v9) & 0x3076) - 26565) ^ 0x983B;
  unsigned int v11 = ((2 * v10) & 0x1AF6A) + ((unsigned __int16)v10 ^ 0xFFEBD7B5) + 776186655;
  unsigned int v12 = LODWORD(STACK[0x704]) - 1104274682;
  int v13 = (v12 < 0x2E2F82D4) ^ (v11 < 0x2E2F82D4);
  BOOL v14 = v11 < v12;
  if (v13) {
    BOOL v14 = v12 < 0x2E2F82D4;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((479 * v14) ^ a7)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_100234A80()
{
  unint64_t v4 = STACK[0x538] + 5;
  int v5 = 1189216979 * (((v3 - 192) & 0x97A295A5 | ~((v3 - 192) | 0x97A295A5)) ^ 0x46B6669C);
  *(_DWORD *)(v3 - 192) = (v0 + 420) ^ v5;
  *(_DWORD *)(v3 - 184) = v1 + v5 + ((280 * (v0 ^ 0x49F)) ^ 0x407C7946);
  *(void *)(v3 - 176) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1021)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((930 * (*(_DWORD *)(v3 - 188) == 0)) ^ v0)))(v6);
}

uint64_t sub_100234B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((*(unsigned __int8 *)(STACK[0x538] + (v6 + 1321040)) == (((v7 ^ 0x22) + 30) ^ 0xAA)) * (((v7 ^ 0x622) + 763) ^ 0x325)) ^ v7 ^ 0x622)))(a1, a2, a3, a4, a5, a6, 4294925278);
}

uint64_t sub_100234B88@<X0>(int a1@<W8>)
{
  unint64_t v4 = ((v1 + 1766622586) | ((unint64_t)((v1 + 1766622586) < 0x69385D29) << 32))
     + STACK[0x538]
     - 1765301545;
  unsigned int v5 = (((((a1 + 803) ^ 0xC9) + *(unsigned __int8 *)v4 - ((*(unsigned __int8 *)v4 << (a1 ^ 0x84)) & 0xB8)) << 8) - 1280) ^ 0x5C00;
  LODWORD(v4) = (v5 - (v5 >> 11 << 12) + 30973) ^ 0x78FD | (*(unsigned __int8 *)(v4 + 1)
                                                          - ((2 * *(unsigned __int8 *)(v4 + 1)) & 0xB2)
                                                          - 24743) ^ 0xFFFF9F59;
  LODWORD(v4) = (v4 - ((2 * v4) & 0x702) - 31871) ^ 0x8381;
  LODWORD(v4) = ((2 * v4) & 0x1BEBC) + ((unsigned __int16)v4 ^ 0x7FDDDF5E) - 429163034;
  int v6 = ((v2 - 163056266) < 0x66495D44) ^ (v4 < 0x66495D44);
  BOOL v7 = v4 < v2 - 163056266;
  if (v6) {
    BOOL v7 = (v2 - 163056266) < 0x66495D44;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((494 * v7) ^ a1)))();
}

uint64_t sub_100234CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  int v10 = a7 ^ 0x532;
  unint64_t v11 = STACK[0x538] + ((v10 + 1521) ^ 0x142FFBu) + v8;
  BOOL v13 = v7 - 1771061764 != ((v10 + 1709825504) & 0x9A16237D) + 374184517 && v11 != 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((99 * v13) ^ v10)))(a1, a2, a3, a4, a5, a6, 4294925273);
}

uint64_t sub_100234D60()
{
  unsigned int v3 = (((v1 ^ 0x802223B7) + v0) & 0xFFFFFFF0 ^ 0x7EFBF3FF) + ((2 * ((v1 ^ 0x802223B7) + v0)) & 0xFDF7E7E0);
  LODWORD(STACK[0x8B0]) = v3 - 894238099;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t))(v2 + 8 * (v1 + 1296)))(((v1 - 2125185822) & 0x7EABC5FF) - 2130442703 + v3, 3996565863);
  STACK[0x8A8] = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v4 != 0) | (32 * (v4 != 0))) ^ v1)))();
}

uint64_t sub_100234E08(uint64_t a1)
{
  *(_WORD *)a1 = 513;
  __int16 v7 = v2 - ((2 * v2 + 6178) & 0xFF40) - 29771;
  *(unsigned char *)(a1 + 2) = HIBYTE(v7) ^ 0x7F;
  *(unsigned char *)(a1 + 3) = (v3 - 83) ^ v7;
  *(unsigned char *)(a1 + 4) = ((unsigned __int16)(v2 - v1 - ((2 * (v2 - v1) + 5854) & 0x2718) + 32507) >> 8) ^ 0x93;
  *(unsigned char *)(a1 + 5) = (v2 - v1 - ((2 * (v2 - v1) - 34) & 0x18) - 5) ^ 0x8C;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (v3 ^ (8
                                     * (((v1 + 1341028784) | ((unint64_t)(v4 < v5 + 789) << 32)) != 3486275854)))))();
}

uint64_t sub_100234EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = v5 < v4;
  *(unsigned char *)(v7 + a1 - 0x15B1AFD711AB82B6) = *(unsigned char *)(v6 + v9 - 0x513F94EB6E173DBALL);
  if (v11 == v8 - 0x2242D5E3F9160B8ALL < v4) {
    BOOL v11 = v8 - 0x2242D5E3F9160B8ALL < v5;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * (v10 | (8 * v11))))();
}

uint64_t sub_100234F9C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x550]) = v4 + a2;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((493
                                * (((2 * (v3 + 14805871)) & 0xFFDA7AEE75EE6A2ALL)
                                 - 0x7FED3D772B43D7B4
                                 + ((v3 + 14805871) ^ 0x7FED3D773AF73093 ^ ((v2 ^ 0x6E8u) + 1405)) == 263413089)) ^ v2)))();
}

void sub_10023502C(int a1@<W8>)
{
  LODWORD(STACK[0x5D8]) = (a1 ^ 0xB2DA22AC) + v1;
  JUMPOUT(0x1001DA0C4);
}

uint64_t sub_100235054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 1521) ^ 0x186) * (a2 == 0)) | (v2 - 932))))();
}

uint64_t sub_100235080(uint64_t a1)
{
  STACK[0x570] = v2;
  byte_10031EC64 = 1;
  return (*(uint64_t (**)(void))(a1 + 8 * ((28 * (LODWORD(STACK[0x8C0]) != (v1 ^ 0x261) + 68413165)) | (v1 - 869))))();
}

uint64_t sub_1002350D8()
{
  int v2 = (*(uint64_t (**)(const char *, void))(v1 + 8 * (v0 ^ 0xDAE)))("mobactivationd", __progname);
  BOOL v3 = ((2 * v2) & 0xBFFCFBE6) + ((v0 + 21) ^ 0xDFFE782D ^ v2) == (v0 ^ 0xD6A47CAC) + 156894350;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v3 | (16 * v3)) ^ v0)))();
}

uint64_t sub_100235168()
{
  int v4 = (*(uint64_t (**)(const char *, void))(v3 + 8 * (v2 ^ v1)))("mobileactivationd", *v0);
  unsigned int v5 = ((v4 << (v2 - v1 - 98)) & ((v2 - v1 - 645) ^ 0xAD48F714)) + (v4 ^ (v1 + 2147));
  return (*(uint64_t (**)(void))(v3 + 8 * (v2 ^ (v1 + 3723) ^ (31 * ((((v5 - v2) | (v2 - v5)) & 0x80000000) == 0)))))();
}

uint64_t sub_1002351E4()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 4)))("findmydeviced", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((508
                                * (((v3 << ((((v1 - 101) & 0xDF) - 48) ^ 0xAF)) & 0xEFCDFBC2) + (v3 ^ 0xF7E6FDE1) == -135856671)) ^ (v1 - 366))))();
}

uint64_t sub_100235274()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 697)))("findmydeviced-nano-support", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v1 ^ 0x5A0) + 1488) ^ (((2 * v3) & 0xBFF9F3CA) + (v3 ^ 0x5FFCF9E5) == 1610414565)) & 1) == 0)
                                * ((23 * (v1 ^ 0x5A0)) ^ 0x12C)) ^ v1)))();
}

uint64_t sub_1002352F0()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0x925)))("identityservicesd", *v0);
  BOOL v4 = ((((v1 - 65) | 0x2C2) ^ 0xADFAF30D) & (2 * v3)) + (v3 ^ 0xD6FD7867) == -688031641;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (8 * v4)) ^ v1)))();
}

uint64_t sub_10023536C()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 1188)))("amsaccountsd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1926
                                * (((2 * v3) & 0xAD4AF4EE) + (v3 ^ (((v1 + 69) | 0x45) + 1453684266)) == (((v1 - 933) | 0x5C0) ^ 0x56A57FA9))) ^ v1)))();
}

uint64_t sub_1002353E8()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 1050)))("AppStore", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((37
                                * (((687 * ((v1 + 810619826) & 0xCFAEEDDE ^ 0x5DD) - 1107693615) & (2 * v3))
                                 + (v3 ^ 0xDEFCFBEF) != -553845777)) ^ v1)))();
}

uint64_t sub_100235470()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 90)))("itunesstored", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((79
                                * ((((v1 - 559) ^ (((2 * v3) & 0xFD6BFDD2) + (v3 ^ 0xFEB5FEE9) == (((v1 - 866) | 0x10) ^ 0xFEB5FA52))) & 1) == 0)) ^ v1)))();
}

uint64_t sub_1002354E8()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0xCDC)))("StoreKitUIService", *v0);
  BOOL v4 = ((2 * v3) & 0xBDE9F3DA) + (v3 ^ 0x5EF4F9ED) == (((v1 ^ 0x165) + 561) ^ 0x5EF4F1E2);
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (4 * v4)) ^ v1)))();
}

uint64_t sub_100235558()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 88)))("appstored", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((28
                                * (((v3 << (((v1 + 113) | 0x51) + 48)) & ((751 * (v1 ^ 0x80D)) ^ 0xBDECF224))
                                 + (v3 ^ 0x5EF67BFD) == 1593211901)) ^ v1)))();
}

uint64_t sub_1002355D8()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 150)))("Fitness", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4076
                                * (((v3 << (((v1 - 75) | 0x58) + ((v1 + 48) ^ 0x22))) & 0xED4BFCE6) + (v3 ^ 0xF6A5FE73) != -156893581)) ^ v1)))();
}

uint64_t sub_100235650()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 + 614)))("appinstallationmetricsd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((11
                                * (((v3 << (((v1 - 2) & 0xDE) + 35)) & 0xAD69F4E2) + (v3 ^ 0xD6B4FA71) != ((v1 - 1700422212) & 0x655A5FFA ^ 0xD6B4F9C9))) ^ v1)))();
}

uint64_t sub_1002356E4()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (int)(v1 + 1199)))("attributionkitd", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((125
                                * (((((v1 ^ 0x666) - 1116014900) ^ (v1 + 908)) & (2 * v3)) + (v3 ^ 0x5EBD7DF7) == 1589476855)) ^ v1)))();
}

uint64_t sub_100235750()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (v1 ^ 0xF23)))("test", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((62
                                * (((2 * v3) & 0xBFDAFFE6) + ((751 * (v1 ^ 0x746)) ^ 0xDFED7A2D ^ v3) == ((v1 - 1226001993) & 0x491347E5 ^ 0xDFED7F12))) ^ v1)))();
}

uint64_t sub_1002357EC()
{
  int v3 = (*(uint64_t (**)(const char *, void))(v2 + 8 * (int)(v1 + 1926)))("ProvenanceCombo", *v0);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((2 * v3) & 0xBDEDF4FE) + (v3 ^ 0x5EF6FA7F) == ((v1 + 1735) ^ 0x5EF6FDD7))
                                * ((v1 - 1339013858) & 0x4FCFBFDE ^ 0x146)) ^ v1)))();
}

uint64_t sub_100235878()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xDFB)))(152, 0x10300401EA5018FLL);
  STACK[0x8F0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (((4 * (v0 ^ 0x434)) ^ 0x413) + ((2 * v0) ^ 0xBB4))) ^ v0)))();
}

uint64_t sub_1002358E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 396) ^ 0x161) * (v1 == 1)) ^ v2)))();
}

void sub_10023590C(uint64_t a1@<X0>, int a2@<W8>)
{
  int v3 = 1189216979 * ((1484279903 - ((v2 - 192) | 0x5878505F) + ((v2 - 192) | 0xA787AFA0)) ^ 0x896CA366);
  int v4 = a2 + LODWORD(STACK[0x704]) - 798561344 + v3;
  *(void *)(v2 - 176) = STACK[0x538];
  *(_DWORD *)(v2 - 184) = v4;
  *(_DWORD *)(v2 - 192) = (a2 + 807) ^ v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 ^ 0xB80)))(v2 - 192);
  sub_1002359CC(v5, v6, v7, v8, v9, v10, *(_DWORD *)(v2 - 188));
}

uint64_t sub_1002359A0(uint64_t a1)
{
  return sub_1002359CC(a1);
}

void sub_1002359CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v7 + 56) = a7;
}

uint64_t sub_100235A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = v4 < v5;
  *(unsigned char *)(a1
           + ((v7 - 1497249851) | ((unint64_t)((v7 - 1497249851) < 0x269FA71D) << 32))
           - 647997213) = 0;
  unint64_t v9 = ((v6 - 1405) ^ 0xE3EF2F4A14FB9C5ALL) + 0x1C10D0B5FAB7C10FLL;
  int v10 = v8 ^ (v9 < v5);
  BOOL v11 = v9 < v4;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((106 * !v8) ^ v6)))();
}

void sub_100235AB8()
{
}

uint64_t sub_100235AC4()
{
  uint64_t v7 = 4 * (v1 - 1836454634);
  unsigned int v8 = *((_DWORD *)&xmmword_10031DC90 + (v1 - 1836454635)) ^ 0x57F38384 ^ ((*((_DWORD *)&xmmword_10031DC90
                                                                                          + (v1 - 1836454635)) >> 30) | 0xDD2A8B78);
  unsigned int v9 = (*(_DWORD *)((char *)&xmmword_10031DC90 + v7) ^ 0x2350A8ED ^ (1664525 * v8
                                                                   - ((3329050 * v8) & 0x53134026)
                                                                   - 1450598381))
     + (*(_DWORD *)(STACK[0x570] + 4 * (v5 - 681142906)) ^ 0x8AD908FE);
  unsigned int v10 = (v9 ^ 0x79F7F6FB) + v5 + ((2 * v9) & 0xF3EFEDF6);
  *(_DWORD *)((char *)&xmmword_10031DC90 + v7) = v10 - ((2 * v10 + 450706710) & 0x15B211FC) - 397957239;
  *(_DWORD *)(v6 - 160) = ((v4 - 1110431544) ^ 0x53) + v3;
  *(_DWORD *)(v6 - 156) = (v4 - 185257761) ^ v3;
  *(_DWORD *)(v6 - 152) = v3 + v4 - 1110431544 + 14;
  *(void *)(v6 - 184) = (v1 + 776223007) - v3;
  *(_DWORD *)(v6 - 172) = (v4 - 1110431544) ^ v3;
  *(void *)(v6 - 168) = v2;
  *(_DWORD *)(v6 - 192) = v3;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 ^ 0xFED)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v6 - 176)))(v11);
}

uint64_t sub_100235C4C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] - 1680) | 1) ^ 0x109) * (v1 >= 0x9BBA4C08)) ^ (STACK[0x578] - 1695))))();
}

uint64_t sub_100235C8C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((STACK[0x578] - 1695) | (16 * (v1 <= STACK[0x578] - 1682290993)))))();
}

uint64_t sub_100235CC4@<X0>(int a1@<W8>)
{
  LODWORD(xmmword_10031DC90) = dword_10031E64C;
  *(void *)(v5 - 152) = v2;
  *(_DWORD *)(v5 - 184) = ((a1 ^ 0x6B1) - 742914327) ^ v3;
  *(_DWORD *)(v5 - 192) = v3 | 1;
  *(void *)(v5 - 168) = (v4 - 1142824270) ^ v3;
  *(_DWORD *)(v5 - 160) = -1231242342 - v3 + (a1 ^ 0x6B1);
  *(_DWORD *)(v5 - 180) = (((a1 ^ 0x6B1) - 742914336) | 0x45) ^ v3;
  *(_DWORD *)(v5 - 176) = (a1 ^ 0x6B1) - 742914336 + v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x94B)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v5 - 188)))(v6);
}

uint64_t sub_100235D7C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] - 1431) | 8) - 533) * (v1 < 0xE47B4D2B)) ^ (STACK[0x578] - 389))))();
}

uint64_t sub_100235DD8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 > ((STACK[0x578] - 1943) | 0x208) - 461681899)
                                     * (((STACK[0x578] - 919) | 0xC0) - 1229)) ^ (STACK[0x578] - 389))))();
}

uint64_t sub_100235E3C@<X0>(int a1@<W8>)
{
  int v4 = 3 * (a1 ^ 0x462);
  *(_DWORD *)(STACK[0x570] + 4 * ((v4 ^ 0xD766979E) + v2)) ^= 0x833E66AD ^ *(_DWORD *)(STACK[0x560]
                                                                                       + 4 * ((v4 ^ 0xD766979E) + v2));
  return (*(uint64_t (**)(void))(v1 + 8 * ((1297 * (v3 + ((v4 + 119363025) & 0xF8E2AFBD) == 1058833062)) ^ v4)))();
}

uint64_t sub_100235EE4()
{
  return sub_100235AC4();
}

uint64_t sub_100235EF0@<X0>(int a1@<W8>)
{
  *int v2 = v2[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((((a1 ^ 0x7A9) - 308) | 0x600) ^ 0xFFFFF857) + v4 != v3)
                                * ((8 * (a1 ^ 0x7A9)) ^ 0x16C6)) ^ a1 ^ 0x7A9)))();
}

uint64_t sub_100235F44@<X0>(int a1@<W8>)
{
  uint64_t v5 = 4 * (v2 - 1836454634);
  unsigned int v6 = *((_DWORD *)&xmmword_10031DC90 + (v2 - 1836454635));
  int v7 = (*(_DWORD *)((char *)&xmmword_10031DC90 + v5) ^ 0xEB4022E5 ^ (1566083941 * (v6 ^ v3 ^ (v6 >> 30))
                                                                   - ((-1162799414 * (v6 ^ v3 ^ (v6 >> 30))) & 0xC3325436)
                                                                   + 1637427739))
     - v2;
  *(_DWORD *)((char *)&xmmword_10031DC90 + v5) = v7 - ((2 * v7 + 451683796) & 0x15B211FC) - 129033240;
  unint64_t v8 = 516615401
     * ((~((v4 - 192) ^ 0xD0F2459FE8D34947 | 0xD7C1FE4EC6377693)
       + (((v4 - 192) ^ 0xD0F2459FE8D34947) & 0xD7C1FE4EC6377693)) ^ 0x7070CC55A278C619);
  *(_DWORD *)(v4 - 192) = v8;
  *(_DWORD *)(v4 - 172) = (a1 - 758943632) ^ v8;
  *(_DWORD *)(v4 - 152) = ((a1 - 758943632) ^ 0xF) + v8;
  *(void *)(v4 - 168) = v8 ^ 0xCE359D0B;
  *(void *)(v4 - 184) = (v2 + 1623165474) - v8;
  *(_DWORD *)(v4 - 160) = v8 + a1 - 758943632 + 125;
  *(_DWORD *)(v4 - 156) = (a1 - 185257761) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 157)))(v4 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v4 - 176)))(v9);
}

uint64_t sub_1002360D4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((v1 < ((STACK[0x578] - 1228) ^ 0xCE359FD7))
                                     * ((STACK[0x578] + 1671998925) & 0x9C574FFF ^ 0x5BF)) ^ (STACK[0x578] - 563))))();
}

uint64_t sub_10023612C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((STACK[0x578] ^ 0x574) + 739) ^ (STACK[0x578] - 563)) * (v1 > 0xCE359F7A)) ^ (STACK[0x578] - 563))))();
}

uint64_t sub_100236168()
{
  int v2 = (v0 ^ 0x1688) + 1856;
  LODWORD(xmmword_10031DC90) = 181995774;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x1ECE)))(STACK[0x560]);
  int v3 = (v2 - 1960) | 0x356;
  int8x16_t v4 = (int8x16_t)vld1q_dup_f32((const float *)&xmmword_10031DC90);
  int8x16_t v5 = (int8x16_t)vdupq_n_s32(0x7FFFFFFEu);
  int32x4_t v6 = vdupq_n_s32(0x22267D4u);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  v8.i64[0] = *(void *)((char *)&xmmword_10031DC90 + 4);
  v8.i32[2] = *((_DWORD *)&xmmword_10031DC90 + (v3 ^ 0x7D9u) - 1164);
  int8x16_t v9 = vextq_s8(v4, v8, 0xCuLL);
  int8x16_t v10 = v8;
  v10.i32[3] = dword_10031DCA0[0];
  int8x16_t v11 = (int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v9, v5), vdupq_n_s32(0xFBF00F3A));
  int8x16_t v12 = veorq_s8(vandq_s8(v10, v5), (int8x16_t)vdupq_n_s32(0x1E1F2A76u));
  int32x4_t v13 = (int32x4_t)veorq_s8((int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8(v12, (int8x16_t)vdupq_n_s32(0xFDDD982B)), (int32x4_t)vorrq_s8(v12, (int8x16_t)v6)), v6), (int8x16_t)vdupq_n_s32(0xE91BBAA3));
  v14.i32[0] = *((_DWORD *)&STACK[0x14B0] + (BYTE4(xmmword_10031DC90) & 1));
  v14.i32[1] = *((_DWORD *)&STACK[0x14B0] + (BYTE8(xmmword_10031DC90) & 1));
  v14.i32[2] = *((_DWORD *)&STACK[0x14B0] + (*((_DWORD *)&xmmword_10031DC90 + (v3 ^ 0x7D9u) - 1164) & 1));
  v14.i32[3] = *((_DWORD *)&STACK[0x14B0] + (dword_10031DCA0[0] & 1));
  xmmword_10031DC90 = (__int128)veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031E2C4, v14), (int8x16_t)vdupq_n_s32(0x63C78C9Cu)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32((int32x4_t)vorrq_s8((int8x16_t)v13, vbicq_s8(v7, v11)), (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0x25D24BFAu))), vdupq_n_s32(0x12E925FDu)), 1uLL));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + v3))();
}

uint64_t sub_1002361D8()
{
  uint64_t v4 = ((176 * (v1 ^ 0x150)) ^ (v2 + 576)) + v3;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x971)))(v4, 54355340);
  STACK[0x6A0] = v5;
  uint64_t v6 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + v1 + 1745))(v4, 691708531);
  STACK[0x5A0] = v6;
  if (v5) {
    BOOL v7 = v6 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((16 * v8) | (32 * v8)) ^ v1)))();
}

uint64_t sub_100236274()
{
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8 * (v1 + 1809)))(v3, 1, v5, v2);
  LODWORD(STACK[0x550]) = v4 + 144146311;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((1790
                               * (v5 == ((v6
                                                - ((2 * v6) & 0x1890C2C)
                                                + ((v1 + 1727635054) & 0x990662FD ^ 0xFFFFFD0F)
                                                + 12879431) ^ 0xC48616))) ^ v1)))();
}

uint64_t sub_10023631C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((234
                                * (((v3 + v2 + ((v1 - 1051552399) & 0x3EAD6BFA)) & 0xF) == ((2
                                                                                           * (v3
                                                                                            + v2
                                                                                            + ((v1 - 1051552399) & 0x3EAD6BFA))) & 0x1A))) ^ v1)))();
}

uint64_t sub_10023636C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((v1 + 891) | (32
                                             * ((v2 | ((unint64_t)(v2 < 0x1824E994) << 32))
                                              + ((17 * ((v1 + 891) ^ 0x4DBu)) ^ 0x293F9A41) == 1097106601)))))();
}

void sub_1002363F0()
{
  ((void (*)(uint64_t))*(&off_1002E1F70 + (v0 ^ 0x97A)))(v1);
  STACK[0x6A0] = 0;
  sub_100236A9C();
}

uint64_t sub_10023642C@<X0>(int a1@<W8>)
{
  BOOL v8 = v2 < v1;
  *(unsigned char *)(v4 + v7 - 0x578940B1185EA4AFLL) = *(unsigned char *)(v3 + v6 - 0x2AB5E19A4E6BBB14);
  unint64_t v9 = ((a1 - 891) ^ 0xC318495B0C59FA5ELL) + v5;
  int v10 = v8 ^ (v9 < v1);
  BOOL v11 = v9 < v2;
  if (!v10) {
    BOOL v8 = v11;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (a1 ^ (32 * !v8))))();
}

uint64_t sub_1002364C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (((((v6 - 1331) | 0x41) ^ 0xFA) * (a6 == 4)) ^ (v6 - 1354))))(a1, a2, v7, a3, a4, a5, 4294925295);
}

uint64_t sub_100236500@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  uint64_t v13 = (int)(v7 - 1);
  int8x16_t v14 = (char *)(*(void *)(v11 + 8) + v13);
  char v15 = *v14;
  int v16 = *(_DWORD *)(v5 + v6);
  unint64_t v17 = ((((v14 ^ v16) & v8) * a4) ^ ((((v14 ^ v16) & v8) * a4) >> 16)) * a4;
  int v18 = (unsigned char *)(v12 + v13);
  unint64_t v19 = ((((v18 ^ v16) & 0x7FFFFFFF) * a4) ^ ((((v18 ^ v16) & 0x7FFFFFFF) * a4) >> 16)) * a4;
  *int v18 = *(unsigned char *)(v9 + (v17 >> 24)) ^ v15 ^ *(unsigned char *)((v17 >> 24) + v10 + 2) ^ *(unsigned char *)(a1 + (v17 >> 24)) ^ *(unsigned char *)(v9 + (v19 >> 24)) ^ *(unsigned char *)((v19 >> 24) + v10 + 2) ^ *(unsigned char *)(a1 + (v19 >> 24)) ^ v17 ^ v19 ^ (BYTE3(v17) * a2) ^ (BYTE3(v19) * a2);
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((v7 > 0x18) * a3) ^ v4)))();
}

uint64_t sub_1002365C4@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  return sub_100236500(a1, a2, a3, a4);
}

uint64_t sub_1002365CC()
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (int)((((((v0 + 62) | 0x128) ^ 0xFFFFFF1D) + ((v0 + 2001639837) & 0x88B1677C)) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_100236620@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((56 * (((((a1 ^ 0xF4) - 1873780082) ^ (*(void *)(v1 + 8) == 0)) & 1) == 0)) ^ a1)))();
}

void sub_100236664()
{
  (*(void (**)(void))(v3 + 8 * (int)(v0 ^ 0x90506218)))();
  *(void *)(v1 + 8) = v2;
  JUMPOUT(0x10023669CLL);
}

uint64_t sub_100236718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1135 * (STACK[0x7A0] == ((v4 - 180) ^ 0x2C1))) ^ v4)))();
}

uint64_t sub_100236750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 + 1277)))(v4);
  BOOL v7 = ((uint64_t (*)(unint64_t, uint64_t))*(&off_1002E1F70 + (v5 ^ 0xB51)))(((2 * v6) & 0x7F3F37FF3FEDFA0ELL) + (v6 ^ 0xBF9F9BFF9FF6FD07) + 0x4060640060090317, 2921436063) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((((3 * (v5 ^ 0x49)) ^ v7) & 1) * (((v5 - 692) | 0x200) - 696)) ^ v5)))();
}

uint64_t sub_100236814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((((v5 ^ 0xB8) - 697) * (v4 == 0xBF9F9BFF9FF6FD07)) ^ v5)))();
}

uint64_t sub_10023688C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v5 + v4 + v8;
  qmemcpy((void *)(v9 + 1406), "/Library/ProvenanceV2", 21);
  *(void *)(v9 + ((v6 - 397) | 0x411u)) = 0x6975732E6373702FLL;
  *(unsigned char *)(v8 + ((v6 - 1505061671) & 0x59B56FBF ^ (unint64_t)(v4 + 1859)) + v5) = 0;
  (*(void (**)(uint64_t))(a4 + 8 * (v6 ^ 0xB21)))(v7);
  uint64_t v10 = ((uint64_t (*)(uint64_t, void *))*(&off_1002E1F70 + (v6 ^ 0x4E0)))(v8, &unk_1002945F0);
  uint64_t v11 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v6 + 1311))(v8);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + ((43 * (v10 == 0)) ^ v6)))(v11);
}

uint64_t sub_1002369B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = *(void (**)(uint64_t, void, uint64_t))(a4 + 8 * (v5 + 737));
  v6(v4, 0, 2);
  int v7 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v5 + 675))(v4);
  unsigned int v8 = ((2 * (v7 - ((2 * v7) & 0x7FB63C92) - 1076158903)) & 0xBB59FF2A ^ ((v5 ^ 0x4C7) + 990919342))
     + ((v7 - ((2 * v7) & 0x7FB63C92) - 1076158903) ^ 0xE277E1DC);
  LODWORD(STACK[0x674]) = v8 - 1166546433;
  uint64_t v9 = ((uint64_t (*)(uint64_t, void, void))v6)(v4, 0, 0);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((2 * (v8 - 1571618709 < 0x32)) | ((v8 - 1571618709 < 0x32) << 6)) ^ v5)))(v9);
}

void sub_100236A9C()
{
  (*(void (**)(uint64_t))(v0 + 8 * (v1 + 1481)))(v2);
  JUMPOUT(0x100236B18);
}

uint64_t sub_100236AC4()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 134)))(v1);
  return sub_1002377D4(v4, v5, v6, (uint64_t)&off_1002E1F70, v7, v8, v2);
}

void sub_100236AE8()
{
}

uint64_t sub_100236B28@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  BOOL v9 = v2 < a2;
  *(unsigned char *)(v4 + v7 + ((v8 - 439) | 0x10Fu) - 0x3282A4E3768D033ALL) = *(unsigned char *)(v3 + v6 - 0x3B9580D58ACC9C7FLL);
  if (v9 == v5 - 0x13D4C79F74588464 < a2) {
    BOOL v9 = v5 - 0x13D4C79F74588464 < v2;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((86 * !v9) ^ v8)))();
}

uint64_t sub_100236BC8(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  v19.val[1].i64[0] = ((_BYTE)a7 + 14) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)a7 - 1) & 0xF;
  v19.val[2].i64[0] = a7 & 0xF;
  v19.val[2].i64[1] = ((_BYTE)a7 + 1) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)a7 + 2) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)a7 + 3) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)a7 + 4) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)a7 + 5) & 0xF;
  v20.val[1].i64[0] = ((_BYTE)a7 + 6) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)a7 + 7) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)a7 + 8) & 0xF;
  v20.val[2].i64[1] = (a7 + 9) & 0xF;
  v20.val[3].i64[0] = (a7 + 10) & 0xF;
  v20.val[3].i64[1] = (a7 + 11) & 0xF;
  v14.i64[0] = 0x9999999999999999;
  v14.i64[1] = 0x9999999999999999;
  v15.i64[0] = 0xFAFAFAFAFAFAFAFALL;
  v15.i64[1] = 0xFAFAFAFAFAFAFAFALL;
  uint64_t v16 = v8 + a7 - 843 + ((a3 - 557) | 0x10Bu);
  v19.val[0].i64[0] = ((_BYTE)v8 + (_BYTE)a7 - 75 + ((a3 - 45) | 0xB)) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)a7 + 13) & 0xF;
  v17.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_10026B320).u64[0];
  v17.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_10026B320).u64[0];
  *(int8x16_t *)(v13 + (v7 - 156426912)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 + v16), *(int8x16_t *)(v10 + (v16 & 0xF))), veorq_s8(*(int8x16_t *)(v11 + (v16 & 0xF) + 1), *(int8x16_t *)(v12 + (v16 & 0xF) + 1))), v15), vmulq_s8(v17, v14));
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((307 * ((a1 & 0xFFFFFFF0) == 16)) ^ a3)))();
}

void sub_100236D2C()
{
}

uint64_t sub_100236D3C(int a1, int a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((31 * (a1 != a2)) ^ a4)))();
}

uint64_t sub_100236D70(uint64_t a1)
{
  LODWORD(STACK[0x778]) = *(unsigned __int8 *)(a1 + 1)
                        - ((*(unsigned __int8 *)(a1 + 1) << (((v1 + 127) | 0x88) + 41)) & 0x1D6)
                        - 1842144021;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((52 * (*(unsigned __int8 *)(a1 + 6) != ((v1 - 22) ^ 0xBB))) ^ v1)))();
}

uint64_t sub_100236DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(a2 + 8 * ((56 * (v3 <= (char)((-93 * (a3 ^ 0xDB)) ^ 0x16))) ^ a3));
  STACK[0x560] = -a1;
  return v4();
}

uint64_t sub_100236E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * (v4 ^ (((unint64_t)&STACK[0xA90]
                                      + v5
                                      - ((v4 + 1431581206) & 0xAAABCE64 ^ 0x263) < 0x10) << 10))))();
}

uint64_t sub_100236EC4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a4 + v8 - 0x72F073B601281E39) = (*(unsigned char *)(a3 + v7 - 0x4E03C0E584F213FDLL) ^ 0x76)
                                             + ((2 * *(unsigned char *)(a3 + v7 - 0x4E03C0E584F213FDLL)) & 0xEC)
                                             - 66;
  return (*(uint64_t (**)(void))(a7 + 8 * ((1933 * (a5 + 1 != v9 + 48)) ^ a2)))();
}

uint64_t sub_100236F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int8x16_t v11 = *(int8x16_t *)(v7 + v10);
  v12.i64[0] = 0x7676767676767676;
  v12.i64[1] = 0x7676767676767676;
  int8x16_t v13 = veorq_s8(v11, v12);
  v14.i64[0] = 0xECECECECECECECECLL;
  v14.i64[1] = 0xECECECECECECECECLL;
  int8x16_t v15 = vandq_s8(vaddq_s8(v11, v11), v14);
  v14.i64[0] = 0xBEBEBEBEBEBEBEBELL;
  v14.i64[1] = 0xBEBEBEBEBEBEBEBELL;
  *(int8x16_t *)(v9 + v10) = vaddq_s8(vaddq_s8(v13, v14), v15);
  return (*(uint64_t (**)(void))(a7 + 8 * (((v10 == 32) * ((v8 ^ 0x641) - 1051)) ^ v8)))();
}

void sub_100236FB0()
{
}

uint64_t sub_100236FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (LODWORD(STACK[0x614]) | ((unint64_t)(LODWORD(STACK[0x614]) < 0x433BE303uLL) << 32)) == 1127998211;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v4 + 68) ^ v5) & 1 | (4 * (((v4 + 68) ^ v5) & 1))) ^ v4)))();
}

uint64_t sub_100237040@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x614]) = v2;
  BOOL v3 = (LODWORD(STACK[0x714]) | ((unint64_t)(LODWORD(STACK[0x714]) < 0x156ED3ECuLL) << 32)) == 359584748;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((4 * ((((a2 + 25) ^ (a2 + 64)) ^ v3) & 1)) & 0xEF | (16 * (((a2 + 521728281) ^ (a2 + 713762368) ^ v3) & 1))) ^ a2)))();
}

uint64_t sub_1002370CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DD098(a4, (v4 | 0xC0C20502) + 539298277);
}

uint64_t sub_100237128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = v6 < v4;
  *((unsigned char *)&STACK[0xA90] + v7 - 0x10D613B284EBC003) = 52;
  if (v8 == v7 - 0x10D613B1B75E2B42 < v4) {
    BOOL v8 = v7 - 0x10D613B1B75E2B42 < v6;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((v8 * (((v5 - 1854) | 0x105) ^ 0x4EC)) ^ (v5 - 1261))))();
}

uint64_t sub_1002371B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x714]) = v4;
  return (*(uint64_t (**)(void))(a4 + 8 * ((STACK[0x6A0] != 0) | (v5 - 462))))();
}

uint64_t sub_1002371C0()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 1659)))(v2);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (int)(((*(_DWORD *)(STACK[0x7C0] + 16) < (int)(v3
                                                                                          + ((v1 + 185441538) & 0xF4F263E3)
                                                                                          - 559
                                                                                          - 138))
                                                  * (134 * ((((v1 + 185441538) & 0xF4F263E3) + 1018) ^ 0x6DA) - 417)) ^ (((v1 + 185441538) & 0xF4F263E3) + 1018))))(v4);
}

uint64_t sub_1002371F4()
{
  int v2 = (v1 - 1704) | 0x20B;
  int v3 = (v2 - 11) | 0xD9;
  (*(void (**)(void))(v0 + 8 * (v2 + 1315)))();
  STACK[0x6A0] = 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((62 * (((STACK[0x5A0] == 0) ^ v3) & 1)) ^ v3)))();
}

uint64_t sub_10023725C()
{
  (*(void (**)(void))(v0 + 8 * (v1 ^ 0xBF7)))();
  STACK[0x5A0] = 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((*(void *)(STACK[0x7C0] + 8) != 0) * (((v1 + 975) ^ 0x7D2) - 14)) ^ (v1 + 738))))();
}

uint64_t sub_1002372B4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 1972)))();
  *(void *)(v2 + 8) = 0;
  *(_DWORD *)(v2 + 16) = 1988559269;
  STACK[0x788] -= 144;
  return ((uint64_t (*)(uint64_t))STACK[0x6F0])(v3);
}

uint64_t sub_1002372F4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((980 * (((v1 == 0) ^ (STACK[0x578] + 19)) & 1)) ^ (STACK[0x578] - 1571))))();
}

void sub_100237328()
{
  LODWORD(STACK[0x770]) = 178495898;
  (*(void (**)(void))(v0 + 8 * (v1 + 190)))();
  JUMPOUT(0x1002373D4);
}

uint64_t sub_100237480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5 = off_10031E650;
  LOBYTE(STACK[0xA79]) = *off_10031E650 - 12;
  LOBYTE(STACK[0xA7A]) = v5[1] - 12;
  LOBYTE(STACK[0xA7B]) = v5[2] - 12;
  LOBYTE(STACK[0xA7C]) = v5[3] - 12;
  LOBYTE(STACK[0xA7D]) = v5[4] - 12;
  LOBYTE(STACK[0xA7E]) = v5[5] - 12;
  LOBYTE(STACK[0xA7F]) = (v4 ^ 0x16) - 127 + v5[6] - 111;
  LOBYTE(STACK[0xA80]) = v5[7] - 12;
  LOBYTE(STACK[0xA81]) = v5[8] - 12;
  LOBYTE(STACK[0xA82]) = v5[9] - 12;
  LOBYTE(STACK[0xA83]) = v5[10] - 12;
  LOBYTE(STACK[0xA84]) = v5[11] - 12;
  LOBYTE(STACK[0xA85]) = v5[12] - 12;
  LOBYTE(STACK[0xA86]) = v5[13] - 12;
  LOBYTE(STACK[0xA87]) = v5[14] - 12;
  LOBYTE(STACK[0xA88]) = v5[15] - 12;
  LOBYTE(STACK[0xA89]) = v5[16] - 12;
  LOBYTE(STACK[0xA8A]) = v5[17] - 12;
  LOBYTE(STACK[0xA8B]) = v5[18] - 12;
  LOBYTE(STACK[0xA8C]) = v5[19] - 12;
  LOBYTE(STACK[0xA8D]) = v5[20] - 12;
  LOBYTE(STACK[0xA8E]) = v5[21] - 12;
  LOBYTE(STACK[0xA8F]) = off_10031E650[22] - 12;
  uint64_t v6 = (*(uint64_t (**)(void))(a4 + 8 * (v4 ^ 0x99D)))();
  BOOL v7 = ((uint64_t (*)(void, unint64_t *, uint64_t))*(&off_1002E1F70 + (v4 ^ 0x962)))(0, &STACK[0xA79], v6) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (v4 ^ (8 * v7))))();
}

uint64_t sub_100237660@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((1796 * (a2 == ((41 * (v2 ^ 0x305)) ^ (v3 + 849)))) ^ v2)))();
}

uint64_t sub_1002376A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8 * (v4 ^ 0xD6C)))(25, 4244850056) != 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((v5 * ((v4 + 1388667183) ^ 0x52C566F3)) ^ v4)))();
}

uint64_t sub_100237718()
{
  return sub_100236500((uint64_t)&unk_10026B590, -95, 887, 1755343967);
}

uint64_t sub_100237790@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((7 * (a2 == v3 + ((v2 + 1985656586) & 0x89A54FEA) - 1919)) ^ v2)))();
}

uint64_t sub_1002377D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x75C]) = STACK[0x550];
  return (*(uint64_t (**)(void))(a4 + 8 * ((1612 * (a7 == (v7 ^ 0x7A8))) ^ (v7 - 1817))))();
}

uint64_t sub_10023780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((((*(unsigned __int8 *)STACK[0x5A0] - (v4 ^ 0x7A9)) | ((v4 ^ 0x7A9)
                                                                                        - *(unsigned __int8 *)STACK[0x5A0])) & 0x80) == 0)
                                * ((49 * ((((v4 ^ 0x7A9) + 1105) | 0x200) ^ 0x67A)) ^ 0xF3D)) ^ ((v4 ^ 0x7A9) + 142))))();
}

uint64_t sub_100237870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7 = (char *)&STACK[0xA90] + STACK[0x788];
  int v8 = 230600693 * (((v6 - 192) & 0xB0AAFE3F | ~((v6 - 192) | 0xB0AAFE3F)) ^ 0x9D6987EB);
  *(_DWORD *)(v6 - 164) = LODWORD(STACK[0x674]) - v8 + 1521612428;
  *(_DWORD *)(v6 - 192) = (v5 - 1419) ^ v8;
  *(void *)(v6 - 184) = v7;
  *(void *)(v6 - 176) = v4;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 + 511)))(v6 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70
                                           + (((*(_DWORD *)(v6 - 168) == 0) * (((v5 ^ 0x3FD08687) - 1070627117) ^ 0x79C)) ^ v5)))(v9);
}

uint64_t sub_100237964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x788] = v6;
  return sub_100237970(a1, a2, a3, a4, a5, a6, 4294924393);
}

uint64_t sub_100237970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((71 * (a7 == (v7 ^ 0x503) - 683)) ^ (v7 - 1277))))();
}

uint64_t sub_1002379A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(unsigned __int8 *))(v1
                                                      + 8
                                                      * (((*v2 - 1 < 2) * (((a1 + 1277) ^ 0x579) - 623)) ^ a1)))(v2);
}

uint64_t sub_100237A0C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((62 * (((STACK[0x5A0] == 0) ^ ((_BYTE)v1 + 81) & 0xDF) & 1)) ^ (v1 + 1625515089) & 0x9F1C97DF)))();
}

uint64_t sub_100237A58@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*(void *)(STACK[0x7C0] + 8) != 0) * (((a1 + 237) ^ 0x7D2) - 14)) ^ a1)))();
}

uint64_t sub_100237A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (int)(v6 ^ (v5 + 44) ^ (3661 * (((v4 + 1 - v6) | (v6 - (v4 + 1))) >= 0)))))();
}

uint64_t sub_100237B3C@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  unsigned int v4 = (v2 >> ((a2 + 109) & 0xCF ^ 0x8B)) ^ 0xFB7B80F1;
  unsigned int v5 = (v4 - ((2 * v4) & 0x6B997B6) - 2091070509) ^ 0x835CCBD3 | v2 ^ v3;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((204
                                * (((((v5 - ((2 * v5) & 8) + 4) >> 2) ^ 1 | v5) & 3) == 0)) ^ a2)))();
}

uint64_t sub_100237BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] = v5;
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v4 + 1817) ^ 0x518) * ((LODWORD(STACK[0x550]) - 1715765038) < 0x7D1)) ^ v4)))();
}

void sub_100237C18()
{
}

uint64_t sub_100237C2C(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, void))(v1 + 8 * (v2 ^ 0xE01)))(a1, 0) == 0;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((((((4 * v2) ^ 0x1870) - 432) | 0x682) ^ 0x6D6) * v3) | v2)))();
}

uint64_t sub_100237C88@<X0>(int a1@<W8>)
{
  int v2 = 7 * (a1 ^ 0x16E);
  int v3 = *(unsigned __int8 *)STACK[0x518];
  LODWORD(STACK[0x578]) = v3 - 1223708077 - ((v3 << (v2 ^ 0xD2)) & 0xAE) + 4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((((char)v3 >= (char)(v2 + 49)) * (v2 ^ 0x5E7)) ^ v2)))();
}

uint64_t sub_100237CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * ((((a6 - 1) <= (((v6 ^ 0xD6) - 93) ^ 0xA9u)) * (45 * (v6 ^ 0x5D6) - 198)) ^ v6 ^ 0x55A)))(a1, a2, v7, a3, a4, a5, 4294925295);
}

uint64_t sub_100237D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * ((25 * (v3 + 1440 + LODWORD(STACK[0x58C]) - 1041038573 >= (v3 ^ 0x749u) - 1893)) ^ v3)))();
}

uint64_t sub_100237DA4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (unsigned int *)(v8 + 4 * (v5 + v7));
  unsigned int v11 = ((v4 - 1521788060) & 0x5AB4A3BD) - (((v6 | 0x7FFFFFFE) - 68153542) & 0xE8200110);
  uint64_t v12 = v5 + 1;
  int v13 = *(_DWORD *)(v8 + 4 * (v12 + v7));
  unsigned int v14 = (a2 - (v13 & 0x7FFFFFFE ^ 0x1E1F2A76 | a2) + (v13 & 0x7FFFFFFE ^ 0x1E1F2A76 | 0xFDDD982B)) ^ 0xE91BBAA3;
  *uint64_t v10 = v10[397] ^ *((_DWORD *)&STACK[0x14B0] + (v13 & 1)) ^ (((v14 | (v11 - 17611777) & 0x80000000)
                                                              - ((2 * v14) & 0x25D24BFA)
                                                              + 317269501) >> 1) ^ 0x63C78C9C;
  return (*(uint64_t (**)(void))(a4 + 8 * ((965 * (v12 == v9 + 3)) ^ v4)))();
}

uint64_t sub_100237EA4@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v4 = (const float *)&unk_10031E01C;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32(v4);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  v7.i64[0] = 0x100000001;
  v7.i64[1] = 0x100000001;
  v3.i64[0] = *(void *)&dword_10031E020;
  v3.i32[2] = dword_10031E028;
  int8x16_t v8 = vextq_s8(v5, v3, 0xCuLL);
  int8x16_t v9 = v3;
  v9.i32[3] = dword_10031E02C;
  int8x16_t v10 = (int8x16_t)vaddq_s32((int32x4_t)veorq_s8((int8x16_t)vaddq_s32((int32x4_t)vorrq_s8(v8, v6), vdupq_n_s32(0xEC87F6Au)), (int8x16_t)vdupq_n_s32(0xA5230B16)), vdupq_n_s32(0x1FF29AB4u));
  int32x4_t v11 = (int32x4_t)veorq_s8(vandq_s8(v9, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), (int8x16_t)vdupq_n_s32(0x6AD6896Cu));
  int8x16_t v12 = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v11, v11), (int8x16_t)vdupq_n_s32(0x96CA0A00)), v11), vdupq_n_s32(0x349AFAFEu));
  int32x4_t v13 = (int32x4_t)veorq_s8(vorrq_s8((int8x16_t)vaddq_s32(vaddq_s32((int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0x3ECE1838u)), (int8x16_t)vdupq_n_s32(0x2A460001u)), (int32x4_t)veorq_s8(vandq_s8(v12, (int8x16_t)vdupq_n_s32(0xC131E7C6)), (int8x16_t)vdupq_n_s32(0x10E245u))), v7), veorq_s8(v10, (int8x16_t)vdupq_n_s32(0xCBDE0F33))), (int8x16_t)vdupq_n_s32(0x7EC39928u));
  v14.i32[0] = *(_DWORD *)(v2 + 4 * (dword_10031E020 & 1));
  v14.i32[1] = *(_DWORD *)(v2 + 4 * (unk_10031E024 & (((a2 - 929) | 0x20C) - 539)));
  v14.i32[2] = *(_DWORD *)(v2 + 4 * (dword_10031E028 & 1));
  v14.i32[3] = *(_DWORD *)(v2 + 4 * (dword_10031E02C & 1));
  unk_10031E01C = veorq_s8(veorq_s8(veorq_s8((int8x16_t)xmmword_10031DC90, v14), (int8x16_t)vdupq_n_s32(0x42E2C256u)), (int8x16_t)vshrq_n_u32((uint32x4_t)vaddq_s32(vsubq_s32(v13, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v13, v13), (int8x16_t)vdupq_n_s32(0xA14770D0))), vdupq_n_s32(0x50A3B868u)), 1uLL));
  return (*(uint64_t (**)(void))(a1 + 8 * a2))();
}

void sub_100238074()
{
}

uint64_t sub_100238080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = ((*v5 & 0x52780AFC ^ 0x42480A9D) + (((((v4 + 908) | 0x200) + 763882242) ^ (v4 + 1420)) & *v5 ^ 0x4857503) - 2) ^ 0x4A741B60;
  v5[623] = v5[396] ^ *((_DWORD *)&STACK[0x14B0] + (*v5 & 1)) ^ (((((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) ^ 0x3871AC90 | ~v5[623] & 0x80000000)
                                                                  - 2
                                                                  * ((((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) ^ 0x3871AC90) & 0x13E1515C ^ ((v6 | 0x3E11C090) - (v6 | 0xC1EE3F6F) - 1041350801) & 8)
                                                                  - 1813950124) >> 1) ^ 0x2343B6C8;
  return (*(uint64_t (**)(void))(a4 + 8 * ((LODWORD(STACK[0x924]) > 0x26F) ^ v4)))();
}

uint64_t sub_100238184@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  LODWORD(STACK[0x924]) = 0;
  int v4 = LODWORD(STACK[0x924])++;
  *(_DWORD *)(v2 + 1624) = v4 + 340121380;
  uint64_t v5 = (*(_DWORD *)aHr + 1304497375);
  uint64_t v6 = 516615401
     * ((2 * ((v3 - 192) & 0x48D57A0D0CC69FA0) - (v3 - 192) - 0x48D57A0D0CC69FA4) ^ 0x3F960D89805A666ELL);
  *(void *)(v3 - 168) = v6 ^ 0xAE137508;
  *(_DWORD *)(v3 - 192) = v6;
  *(_DWORD *)(v3 - 172) = (a2 - 1765426025) ^ v6;
  *(_DWORD *)(v3 - 160) = ((a2 - 1765426025) ^ 0x63) + v6;
  *(_DWORD *)(v3 - 156) = (a2 - 185257761) ^ v6;
  *(void *)(v3 - 184) = v5 - v6;
  *(_DWORD *)(v3 - 152) = ((a2 - 1765426025) ^ 0x2B) + v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a2 + 157)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v3 - 176)))(v7);
}

uint64_t sub_1002382A4()
{
  if (v0 >= v1) {
    int v3 = *(_DWORD *)aHr + 1;
  }
  else {
    int v3 = v2;
  }
  *(_DWORD *)aHr = v3;
  return sub_100238400();
}

uint64_t sub_100238400@<X0>(uint64_t a1@<X3>, int a2@<W4>, unsigned int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  uint64_t v8 = (a4 - 296018884 + a5 - 397);
  *(unsigned char *)(v7 + v8) = (((v6 ^ a3) >> (v5 + 51)) - ((((a5 + 101) | 0xD) - 115) & (2 * ((v6 ^ a3) >> (v5 + 51)))) + 14) ^ 0x68;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((38
                                * (a4
                                 - (((105 * (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_10026B460
                                                                           + (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_10026F580
                                                                                           + (v8 & 0xF)) ^ *((unsigned __int8 *)&unk_10026F1F0 + (v8 & 0xF))) != ((((v6 ^ a3) >> (v5 + 51)) - ((((a5 + 101) | 0xD) - 115) & (2 * ((v6 ^ a3) >> (v5 + 51)))) + 14) ^ 0x68)) != a2)) ^ a5)))();
}

uint64_t sub_1002384BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * ((1636 * (v4 + 8 == ((196 * (v5 ^ 0x29A)) ^ a3) + v5 + 397)) ^ v5)))();
}

uint64_t sub_1002384FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x558]) = a7;
  STACK[0x14B0] = 0xF3BBAEBD6AB31E62;
  LODWORD(STACK[0x924]) = dword_10031E658 - 340121379;
  uint64_t v10 = *(unsigned int *)aHr;
  unint64_t v11 = 1856021207 * ((v9 - 192) ^ 0xED14979B4E69D6FELL);
  int v12 = v11 ^ (v7 - 188580821);
  *(_DWORD *)(v9 - 184) = v12 ^ 0x44;
  *(_DWORD *)(v9 - 180) = v7 - 188580821 + v11;
  *(_DWORD *)(v9 - 188) = v12 ^ 0x2C;
  *(_DWORD *)(v9 - 160) = v11 + v7 + 1123495617;
  *(_DWORD *)(v9 - 156) = v11;
  *(void *)(v9 - 176) = v8 - v11;
  *(void *)(v9 - 168) = v10 ^ v11;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v7 ^ 0xFDB)))(v9 - 192);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + *(int *)(v9 - 192)))(v13);
}

uint64_t sub_1002385D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v6 = v4 - 1262;
  int v8 = v4;
  STACK[0x560] = (*(uint64_t (**)(unint64_t, uint64_t))(a4 + 8 * (v4 ^ 0xF8D)))(STACK[0x4F0], 3312658705);
  int v9 = (*(uint64_t (**)(void))(a4 + 8 * (v8 + 187)))();
  unsigned int v10 = v9 - 1965487874 - ((v6 + 363990850) & (2 * v9));
  LODWORD(xmmword_10031DC90) = v10;
  *(_DWORD *)(v5 + 4) = ((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ 0xFDFF6DAF)
                      + (((v10 ^ 0x8AD908FC ^ (v10 >> 30)) * (((v6 - 2137780906) | 0x2040404C) + 926597742)) & 0xFBFEDB5E)
                      - 1931895984
                      - ((2
                        * (((1812433253 * (v10 ^ 0x8AD908FC ^ (v10 >> 30))) ^ 0xFDFF6DAF)
                         + (((v10 ^ 0x8AD908FC ^ (v10 >> 30)) * (((v6 - 2137780906) | 0x2040404C) + 926597742)) & 0xFBFEDB5E))
                        - 1543428956) & 0x15B211FC);
  return ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + (v6 ^ 0x76)))(1250631515);
}

void sub_100238724()
{
}

uint64_t sub_1002388D0@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x924]) = a1 + 1;
  uint64_t v2 = ((uint64_t (*)(unint64_t, void))*(&off_1002E1F70 + (int)(v1 ^ 0xA0D4582E)))(STACK[0x4E8], 0);
  int v3 = (_DWORD *)STACK[0x570];
  int v4 = *(_DWORD *)(STACK[0x570] + 16)
     - 1965487874
     - ((*(_DWORD *)(STACK[0x570] + 16) << (((v1 - 84) | 0xA0) ^ 0xA9)) & 0x15B211FC);
  v3[1] = *(_DWORD *)(STACK[0x570] + 24) - 1965487874 - ((2 * *(_DWORD *)(STACK[0x570] + 24)) & 0x15B211FC);
  v3[2] = v4;
  int v5 = ((uint64_t (*)(uint64_t))*(&off_1002E1F70 + v1 + 1596700679))(v2);
  v3[3] = v5 - 1965487874 - ((2 * v5) & 0x15B211FC);
  int v6 = ((uint64_t (*)(void))*(&off_1002E1F70 + (int)(v1 ^ 0xA0D4583F)))();
  _DWORD *v3 = v6 - 1965487874 - ((2 * v6) & 0x15B211FC);
  int v7 = ((2 * STACK[0x560]) & 0xF617F6CC) + (STACK[0x560] ^ 0xFB0BFB66);
  LODWORD(STACK[0x568]) = v7 - ((2 * v7 + 166201652) & 0x7367D5A2) - 1096290453;
  return sub_100235AC4();
}

uint64_t sub_100238AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x788] = STACK[0x4E0];
  STACK[0x828] = v4;
  STACK[0x7D0] = STACK[0x560];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v5 ^ 0x8A1)))(v6);
  return sub_100237970(v7, v8, v9, (uint64_t)&off_1002E1F70, v10, v11, STACK[0x4D8]);
}

uint64_t sub_100238B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((v7 - a7 + 280610836 >= ((v8 + 2) | 0x110u) - 872) * (((v8 - 556) | 0x34C) ^ 0x34B)) ^ v8)))();
}

uint64_t sub_100238B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, int a4@<W7>, uint64_t a5@<X8>)
{
  unsigned int v9 = v8 + v6 + v7 + (a4 ^ 0x5DE) - 1711;
  BOOL v12 = v9 > ((a4 - 1676084082) & 0x63E7037Fu) - 879
     || ((3 - (_BYTE)a3) & 0xFu) < (((_BYTE)v8 + (_BYTE)v6 + (_BYTE)v7 + (a4 ^ 0xDE) + 81) & 0xFu)
     || 156426911 - (int)v5 < v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8 * (((2 * v12) | (4 * v12)) ^ a4)))(a1, a2, v5, a3);
}

uint64_t sub_100238C18(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char a7)
{
  uint64_t v14 = (v7 + v13) + v12;
  unint64_t v15 = v14 - a2 - v8;
  uint64_t v16 = (a7 + 12) & 0xF;
  BOOL v18 = (unint64_t)(v14 - (v9 + v16)) >= 0x10
     && v15 >= (unint64_t)(268 * (a5 ^ 0x6A8u)) - 1592
     && (((a5 - 816) - 895) ^ (v16 | v10)) + v14 >= 0x10;
  unint64_t v19 = v14 + ~(v16 | v11);
  int v21 = !v18 || v19 < 0x10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((22 * v21) ^ a5)))();
}

uint64_t sub_100238CA8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v14 = 5 * (a6 ^ 0x327);
  uint64_t v15 = (a4 + v7);
  *(unsigned char *)(v12 + (v14 ^ 0x513 ^ (v13 - 914)) + a3) = *(unsigned char *)(v8 + v15) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF) + 1) ^ *(unsigned char *)(v11 + (v15 & 0xF) + 1) ^ (-103 * (v15 & 0xF)) ^ 0xFA;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70 + ((1080 * (a4 + 1 + v7 < v6)) ^ v14)))(1299, 4294967193);
}

void sub_100238D38()
{
}

uint64_t sub_100238D44(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + (((8 * (((a8 - 71) ^ (a1 < ((103 * (a8 ^ 0x643)) ^ 0x47Du))) & 1)) & 0xEF | (16 * (((a8 - 71) ^ (a1 < ((103 * (a8 ^ 0x643)) ^ 0x47Du))) & 1))) ^ a8)))();
}

uint64_t sub_100238D94(int a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x570]) = a1 & 0xFFFFFFF8;
  v16.val[0].i64[0] = ((_BYTE)a7 + (_BYTE)v8 + (_BYTE)a2) & 0xF;
  v16.val[0].i64[1] = ((_BYTE)a7 + (_BYTE)a2 + 13) & 0xF;
  v16.val[1].i64[0] = ((_BYTE)a7 + (_BYTE)a2 + 14) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)a7 + (_BYTE)a2 - 1) & 0xF;
  v16.val[2].i64[0] = (a7 + a2) & 0xFLL;
  v16.val[2].i64[1] = (a7 - 407 + a2 + (a5 ^ 0x299u)) & 0xFLL;
  v16.val[3].i64[0] = ((_BYTE)a7 + (_BYTE)a2 + 2) & 0xF;
  v16.val[3].i64[1] = (a7 + a2 + 3) & 0xFLL;
  *(int8x8_t *)(v13 + (v7 + v14 + a2)) = veor_s8(veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v9 + (a7 + v8 + a2)), *(int8x8_t *)(v10 + v16.val[0].i64[0])), veor_s8(*(int8x8_t *)(v11 + v16.val[0].i64[0] + 1), *(int8x8_t *)(v12 + v16.val[0].i64[0] + 1))), (int8x8_t)0xFAFAFAFAFAFAFAFALL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v16, (int8x16_t)xmmword_10026B2F0), (int8x8_t)0x9999999999999999));
  return ((uint64_t (*)(__n128))*(&off_1002E1F70 + ((1210 * ((a1 & 0xFFFFFFF8) - 8 == a2)) | a5)))((__n128)xmmword_10026B2F0);
}

void sub_100238E9C()
{
}

uint64_t sub_100238EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v7 = (*(_DWORD *)(v6 + 68) ^ 0xDED30A40)
     + v5
     - ((((*(_DWORD *)(v6 + 68) ^ 0xDED30A40) + v5) << (a5 + 83)) & 0xBDA61480)
     - 556594624;
  *(_DWORD *)(v6 + 68) = v7;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((966 * ((v7 ^ 0xDED30A40) < v5)) ^ a5)))();
}

uint64_t sub_100238F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 + 64) += (a5 + 762) ^ 0x7A9;
  return ((uint64_t (*)(void))STACK[0x888])();
}

void sub_100238F28()
{
}

uint64_t sub_100238F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x888] = *(void *)(a4 + 8 * (v8 - 1919));
  return sub_100238FA4(a1, a2, a3, a4, a5, a6, a7, v7 + 16);
}

uint64_t sub_100238F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x888] = *(void *)(a4 + 8 * (v4 - 1900));
  return sub_100238FA4();
}

uint64_t sub_100238FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x980] = v10;
  LODWORD(STACK[0x77C]) = a8;
  STACK[0x5F8] = v9;
  unsigned int v11 = ((((4 * v8) ^ 0xF90) + 1888465983) ^ a8)
      + 42207235
      + (*(_DWORD *)(v10 + 68) & 0x3F ^ 0xFD7BF7FD)
      + ((2 * *(_DWORD *)(v10 + 68)) & 0x7A);
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((30 * ((v11 ^ 0x54FE6BFF) - 1425959999 + ((2 * v11) & 0xA9FCD7FE) < 0xFFFFFFC0)) ^ v8)))();
}

uint64_t sub_10023905C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  int v8 = v4 ^ 0x5F2;
  int v9 = v5 + v6;
  if ((v9 + 1) > 0x40) {
    int v10 = v9 + 1;
  }
  else {
    int v10 = 64;
  }
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((((v7 - a3 - a2 + v10) < 0xF) ^ v8 ^ 0x95) & 1 ^ v8)))();
}

uint64_t sub_1002390D4(uint64_t a1, int a2, int a3, int a4, unsigned int a5, int a6)
{
  int v8 = a2 + a3;
  unsigned int v9 = v6 + ((a4 - 1904522235) ^ 0x8E7B4DE5) + ((a4 - 1904522235) & 0x7184B7FF) + v8 - 1528;
  if (v9 <= 0x40) {
    unsigned int v9 = a5;
  }
  unsigned int v10 = a6 + v9;
  BOOL v12 = v7 - v8 >= v10 && v10 < 0x10;
  return ((uint64_t (*)(void))*(&off_1002E1F70 + ((27 * v12) ^ a4)))();
}

uint64_t sub_100239148(unsigned int a1, int a2)
{
  uint64_t v5 = (a2 + v2) + v4;
  unint64_t v6 = v5 - (void)&unk_10026B410;
  BOOL v7 = (unint64_t)(v5 - (void)&unk_10026B410) < 0x10;
  unint64_t v8 = ~(unint64_t)&unk_100287DC0 + v5;
  if (v8 < ((a1 + 5) ^ 0x563uLL)) {
    BOOL v7 = 1;
  }
  unint64_t v9 = ~(unint64_t)&unk_1002911F0 + v5;
  if (v9 < 0x10) {
    BOOL v7 = 1;
  }
  char v10 = v5 - v3 < (unint64_t)((a1 - 957982143) & 0x3919A0DB) - 123 || v7;
  if (v6 < 0x10) {
    char v10 = 1;
  }
  if (v8 < 0x10) {
    char v10 = 1;
  }
  if (v9 < 0x10) {
    char v10 = 1;
  }
  return ((uint64_t (*)(void))*(&off_1002E1F70 + (((8 * (v10 & 1)) & 0xEF | (16 * (v10 & 1))) ^ a1)))();
}

uint64_t sub_100239208@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(int8x16_t *)(v7 + (v2 + a1 + a2)) = veorq_s8(*v6, (int8x16_t)xmmword_10026B330);
  return ((uint64_t (*)(void))*(&off_1002E1F70
                             + ((49 * ((((v5 - 49) ^ 0x1FFFFFAB2) & ((v3 ^ 0x8A) + v4)) != 16)) | (v5 - 49))))();
}

uint64_t sub_100239288(int a1, uint64_t a2, int8x16_t a3, uint64_t a4, uint64_t a5)
{
  *(int8x16_t *)(v9 + (v7 + a2)) = veorq_s8(*(int8x16_t *)(v8 + a2), a3);
  return (*(uint64_t (**)(void))(a5 + 8 * (((v6 != a2) * a1) | v5)))();
}

uint64_t sub_1002392B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8 * (((((v4 - 1419645383) & 0x549E0C5E) + 557) * (v5 == v6)) ^ v4)))();
}

void sub_1002392F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x618]) = a7;
  JUMPOUT(0x100239314);
}

uint64_t sub_100239318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x570]) = -202377345;
  LODWORD(STACK[0x560]) = (2 * v8) ^ 0xBAE;
  uint64_t v4 = (((v7 - 490) | 0x20) - 1653277242) & 0x628B04DF;
  STACK[0x788] += v4 ^ 0x586;
  LODWORD(STACK[0x6D4]) = v6[18];
  LODWORD(STACK[0x69C]) = v6[19];
  LODWORD(STACK[0x5E8]) = v6[20];
  LODWORD(STACK[0x6EC]) = v6[21];
  return sub_1001EF618(a4, v4);
}

uint64_t sub_100239398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(a4
                              + 8
                              * ((772 * (a7 + (((v8 ^ 0x5F6) + 592) ^ 0xEF463342) < (a8 ^ 0x708FBBE7u))) ^ (v8 - 1515))))();
}

uint64_t sub_1002393E8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v7 = (v4 + 1005) | 0x105;
  uint64_t v8 = a1 - 280610836;
  *(unsigned char *)(v6 + (a2 + v3 + 1390)) = *(unsigned char *)(v5 + v8) ^ byte_10026B410[v8 & 0xF] ^ (-103 * (v8 & 0xF)) ^ byte_100287DC0[((v7 - 1403) | 0xCu) - 13 + (unint64_t)(v8 & 0xF)] ^ byte_1002911F0[((v7 - 1403) | 0xCu) - 13 + (unint64_t)(v8 & 0xF)] ^ 0xFA;
  return ((uint64_t (*)(uint64_t, uint64_t))*(&off_1002E1F70
                                                    + ((237 * ((v2 + v3 + 1) > 0x3F)) ^ v7)))(4294967193, 250);
}

void sub_10023949C()
{
}

void sub_1002394A4()
{
}

uint64_t sub_1002394BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (((v3 + 8 != v5) * ((490 * (v4 ^ 0x471)) ^ 0x75C)) ^ v4)))();
}

uint64_t sub_100239594()
{
  STACK[0x8D0] = v0;
  STACK[0x988] = STACK[0x548];
  return ((uint64_t (*)(void))STACK[0x4A0])();
}

uint64_t sub_1002395AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(unint64_t))(a3 + 8 * (v3 ^ 0xF86)))(STACK[0x4A8]);
  return (*(uint64_t (**)(unint64_t))(a3
                                                     + 8
                                                     * (int)(((LODWORD(STACK[0x5CC]) == ((((v3 - 1820533305) & 0x6C831BBF)
                                                                                        + 1284) | 0x48)
                                                                                      - 1659)
                                                            * ((((v3 - 1820533305) & 0x6C831BBF) - 1364260857) ^ 0xAEAF0952)) ^ (v3 - 1820533305) & 0x6C831BBF)))(STACK[0x4B8]);
}

void sub_10023968C(int a1@<W8>)
{
  int v4 = 79 * (v1 ^ (a1 + 284));
  unint64_t v5 = STACK[0x4C0];
  *(_DWORD *)(v5 + 16) = STACK[0x7AC];
  *(void *)(v5 + 8) = STACK[0x4B0];
  STACK[0x788] = v2;
  (*(void (**)(void))(v3 + 8 * (v4 + 508)))();
  JUMPOUT(0x1002371C4);
}

uint64_t sub_1002396E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  qword_10031E690 = 431200057 * (((unint64_t)&v4[10] + qword_10031E690 + qword_10031E668) ^ 0xA5F8A63A3EE64495);
  qword_10031E668 = qword_10031E690;
  v4[0] = &loc_10023A07C;
  v4[1] = a1;
  v4[2] = a2;
  v4[3] = a3;
  unsigned int v5 = (230600693 * ((&vars0 + 1575738355 - 2 * ((&vars0 - 32) & 0x5DEBDC13)) ^ 0x8FD75A38)) ^ 0x54F58F50;
  uint64_t v6 = v4;
  ((void (*)(unsigned int *))*(&off_1002E1F70 + (unk_100296E9D ^ 0x2Du) + 1961))(&v5);
  return v7;
}

void sub_100239814(uint64_t a1)
{
  if (*(void *)(a1 + 32)) {
    BOOL v2 = *(void *)(a1 + 8) == 0;
  }
  else {
    BOOL v2 = 1;
  }
  char v4 = v2 || *(void *)(a1 + 16) == 0;
  int v1 = *(_DWORD *)a1 - 941074649 * ((-2 - ((a1 | 0xC1705FEE) + (~a1 | 0x3E8FA011))) ^ 0x3E476F75);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1002398CC@<X0>(uint64_t a1@<X8>)
{
  int v6 = v4 - 501;
  unsigned int v7 = 562267567
     * (((v10 ^ 0x5A23AF60 | 0xAF18922F)
       - (v10 ^ 0x5A23AF60)
       + ((v10 ^ 0x5A23AF60) & 0x50E76DD0)) ^ 0xE6A1C10C);
  uint64_t v17 = 0x3242838E4E8EDB12;
  v10[0] = 0;
  v10[1] = &v9;
  uint64_t v12 = v2;
  uint64_t v13 = 0;
  v10[3] = 0;
  uint64_t v11 = v1;
  unsigned int v15 = v7 ^ 0xCC933444;
  int v16 = (v6 + 764) ^ v7;
  _DWORD v10[2] = a1;
  uint64_t result = (*(uint64_t (**)(void *))(v3 + 8 * (v6 ^ 0xC80)))(v10);
  *(_DWORD *)(v5 + 4) = v14;
  return result;
}

void sub_1002399AC(uint64_t a1)
{
  __asm { BRAA            X12, X17 }
}

uint64_t sub_100239A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11 = v10 + v7;
  if (v6) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * ((((v10 - v8 + 692) ^ 0x791) * v13) ^ v11)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100239AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11 = v10 + v7;
  if (v6) {
    BOOL v12 = v9 == 0;
  }
  else {
    BOOL v12 = 1;
  }
  int v13 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8
                                                                                * ((((4 * (v10 ^ (v8 + 886))) ^ 0x791)
                                                                                  * v13) ^ v11)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100239AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, uint64_t a7, int a8, int a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6
                                                                                + 8 * (((a9 != 1) * (v9 - 1866)) ^ v9)))(a1, a2, a3, a4, a5);
}

uint64_t sub_100239B40@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((2 * ((v2 ^ (v3 + v1)) & 1)) & 0xEF | (16
                                                                                        * ((v2 ^ (v3 + v1)) & 1))) ^ v3)))();
}

uint64_t sub_100239B64@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = 562267567 * (((&v9 | 0xBF346368) - (&v9 & 0xBF346368)) ^ 0xACAE9F2B);
  uint64_t v14 = v1;
  uint64_t v15 = 0;
  int v17 = v5 ^ 0x3C8333C8;
  int v18 = ((v3 ^ 0x16) + 724) ^ v5;
  uint64_t v19 = 0x3242838E4E8EDB12;
  uint64_t v12 = 0;
  int v13 = &v8;
  uint64_t v10 = v2;
  int v11 = &v7;
  int v9 = (char *)&v7 + 4;
  uint64_t result = (*(uint64_t (**)(char **))(a1 + 8 * (v3 ^ 0xCEE)))(&v9);
  *(_DWORD *)(v4 + 28) = v16;
  return result;
}

uint64_t sub_100239D08(uint64_t result)
{
  uint64_t v1 = 1856021207 * ((((2 * result) | 0x4840409B3328D17ELL) - result + 0x5BDFDFB2666B9741) ^ 0x4934B7D6D7FDBE41);
  int v2 = *(_DWORD *)(result + 12) - v1;
  unint64_t v3 = *(void *)(result + 24) ^ v1;
  unint64_t v4 = *(void *)(result + 16) + v1;
  int v5 = *(_DWORD *)(result + 36) ^ v1;
  int v6 = *(_DWORD *)(result + 4) ^ v1;
  int v7 = *(_DWORD *)(result + 8) ^ v1;
  BOOL v8 = v4 == v3;
  BOOL v9 = v4 > v3;
  int v10 = v8;
  if ((v5 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v2 = v6;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

uint64_t sub_100239DA4(uint64_t result)
{
  unint64_t v1 = 516615401 * (result ^ 0x88BC887B73630632);
  int v2 = *(_DWORD *)(result + 20) ^ v1;
  unint64_t v3 = *(void *)(result + 24) ^ v1;
  int v4 = *(_DWORD *)result - v1;
  int v5 = *(_DWORD *)(result + 32) - v1;
  unint64_t v6 = *(void *)(result + 8) + v1;
  int v7 = *(_DWORD *)(result + 40) - v1;
  BOOL v8 = v6 >= v3;
  BOOL v9 = (uint64_t)v6 < (uint64_t)v3;
  int v10 = !v8;
  if ((v4 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 16) = v7 ^ v5;
  return result;
}

void sub_100239E1C(uint64_t a1)
{
  __asm { BRAA            X11, X17 }
}

void sub_100239EA0(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v10 = *(void *)(v9 + 24);
  unsigned int v11 = 941074649 * (((&a5 | 0xB3A4DD8A) - (&a5 & 0xB3A4DD8A)) ^ 0xB36C12EE);
  a6 = *(void *)(v9 + 16);
  a7 = v10;
  int v12 = v8 - 1425377192;
  a5 = v12 + v11 - 263;
  a8 = a1 - v11;
  ((void (*)(int *))*(&off_1002E1F70 + v12 + 210))(&a5);
  JUMPOUT(0x10023A2BCLL);
}

void sub_100239F28(int a1@<W8>, int a2, int a3, uint64_t a4, uint64_t a5, long long a6, long long a7, uint64_t a8, int *a9, uint64_t a10, int a11, unsigned int a12, int a13, uint64_t a14)
{
  a3 = a1;
  int v15 = v14 - 1425377192;
  unsigned int v16 = 562267567 * ((&a6 - 978615212 - 2 * (&a6 & 0xC5AB8454)) ^ 0xD6317817);
  a14 = 0x3242838E4E8EDB12;
  a6 = 0u;
  a7 = 0u;
  a9 = &a3;
  a12 = v16 ^ 0xF65764A4;
  a13 = v15 ^ v16;
  a10 = 0;
  JUMPOUT(0x10023A05CLL);
}

uint64_t sub_100239FB8()
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  int v8 = *(_DWORD *)(v1 + 32);
  uint64_t v13 = *(void *)(v1 + 8);
  int v12 = v8;
  int v9 = v0 - 1425377192;
  unsigned int v10 = 562267567 * (((v14 | 0x916BB34E) - (v14 & 0x916BB34E)) ^ 0x82F14F0D);
  v14[5] = v7;
  v14[6] = v3;
  v14[2] = &v12;
  v14[3] = v4;
  v14[0] = v5;
  v14[1] = v6;
  uint64_t v18 = 0x3242838E4E8EDB12;
  void v14[4] = &v13;
  unsigned int v16 = v10 ^ 0x8304D27D;
  int v17 = v9 ^ v10;
  uint64_t result = ((uint64_t (*)(void *))*(&off_1002E1F70 + v9 + 132))(v14);
  *(_DWORD *)(v2 + 16) = v15;
  return result;
}

uint64_t sub_10023A2F4(uint64_t result)
{
  unint64_t v1 = 1606104089 * ((((2 * result) | 0x3ADB71A5212363FCLL) - result - 0x1D6DB8D29091B1FELL) ^ 0xDFD343E6E586F3C0);
  unint64_t v2 = *(void *)(result + 24) ^ v1;
  unint64_t v3 = *(void *)(result + 40) + v1;
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 > v2;
  int v6 = v4;
  if (((*(_DWORD *)result
       - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) & 1) == 0)
    BOOL v5 = v6;
  if (v5) {
    int v7 = *(_DWORD *)(result + 16) - 1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0);
  }
  else {
    int v7 = *(_DWORD *)(result + 8) ^ (1606104089 * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0));
  }
  *(_DWORD *)(result + 4) = *(_DWORD *)(result + 12) ^ (1606104089
                                                      * ((((2 * result) | 0x212363FC) - result + 1869499906) ^ 0xE586F3C0)) ^ v7;
  return result;
}

char *sub_10023A394(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

unsigned char *sub_10023A5F0(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10023A758()
{
  if (qword_10031EE78 != -1) {
    dispatch_once(&qword_10031EE78, &stru_1002E64E8);
  }
  dispatch_sync((dispatch_queue_t)qword_10031EE80, &stru_1002E64A8);
  uint64_t result = dword_10031EE70;
  if (!dword_10031EE70)
  {
    syslog(3, "failed to open connection to %s\n", "AppleKeyStore");
    return dword_10031EE70;
  }
  return result;
}

void sub_10023A7E4(id a1)
{
  if (!dword_10031EE70) {
    dword_10031EE70 = sub_10023A850("IOService:/IOResources/AppleKeyStore", "AppleKeyStore");
  }
}

void sub_10023A824(id a1)
{
  qword_10031EE80 = (uint64_t)dispatch_queue_create("aks-client-queue", 0);
}

uint64_t sub_10023A850(char *path, const char *a2)
{
  kern_return_t v5;
  CFDictionaryRef v6;
  io_service_t MatchingService;
  io_object_t v8;
  uint64_t result;
  kern_return_t v10;
  io_connect_t connect;

  connect = 0;
  io_service_t v3 = IORegistryEntryFromPath(kIOMasterPortDefault, path);
  if (!v3 || (io_object_t v4 = v3, v5 = IOServiceOpen(v3, mach_task_self_, 0, &connect), IOObjectRelease(v4), v5))
  {
    unint64_t v6 = IOServiceMatching(a2);
    MatchingService = IOServiceGetMatchingService(kIOMasterPortDefault, v6);
    if (MatchingService)
    {
      char v8 = MatchingService;
      IOServiceOpen(MatchingService, mach_task_self_, 0, &connect);
      IOObjectRelease(v8);
    }
  }
  uint64_t result = connect;
  if (connect)
  {
    char v10 = IOConnectCallMethod(connect, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    uint64_t result = connect;
    if (v10)
    {
      IOServiceClose(connect);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10023A948(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, size_t *a7)
{
  char v21 = 0;
  uint64_t input = a1;
  int v20 = 0;
  uint64_t v7 = 3758097090;
  if (a2 && a6 && a7)
  {
    mach_port_t v11 = sub_10023A758();
    if (v11)
    {
      mach_port_t v17 = v11;
      sub_10023AB5C(&v21, (unsigned int *)&v20, 2, v12, v13, v14, v15, v16, a2);
      size_t v19 = *a7;
      uint64_t v7 = IOConnectCallMethod(v17, 0x51u, &input, 1u, v21, v20, 0, 0, a6, &v19);
      if (!v7) {
        *a7 = (int)v19;
      }
    }
    else
    {
      fprintf(__stdoutp, "%s%s:%s%s%s%s%u:%s%u:%s aks connection failed%s\n", "aks", "", "", "", "aks_absinthe_generate", ":", 3253, "", 0, "", "");
      uint64_t v7 = 3758097084;
    }
  }
  free(v21);
  return v7;
}

char *sub_10023AAD4(_DWORD *a1, const void *a2, int a3)
{
  io_service_t v3 = (char *)(a1 + 1);
  if (a2)
  {
    *a1 = a3;
    memcpy(a1 + 1, a2, a3);
    v3 += a3;
    int v5 = -a3;
    size_t v6 = -a3 & 3;
    if ((v5 & 3) != 0)
    {
      int __s = 0;
      memset_s(&__s, 4uLL, 0, 4uLL);
      memcpy(v3, &__s, v6);
      v3 += v6;
    }
  }
  else
  {
    *a1 = 0;
  }
  return v3;
}

char *sub_10023AB5C(char **a1, unsigned int *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v21 = &a9;
  unsigned int v12 = 4;
  if (a3)
  {
    int v13 = a3;
    do
    {
      uint64_t v14 = v21;
      v21 += 2;
      v12 += *((_DWORD *)v14 + 2) + (-*((_DWORD *)v14 + 2) & 3) + 4;
      --v13;
    }
    while (v13);
  }
  uint64_t result = (char *)calloc(1uLL, v12);
  uint64_t v16 = result;
  char v22 = (const void **)&a9;
  int v17 = 0;
  if (a3)
  {
    uint64_t v18 = 4;
    do
    {
      size_t v19 = v22;
      int v20 = *v22;
      v22 += 2;
      uint64_t result = sub_10023AAD4(&v16[v18], v20, *((_DWORD *)v19 + 2));
      uint64_t v18 = result - v16;
      ++v17;
    }
    while (a3 != v17);
  }
  *(_DWORD *)uint64_t v16 = v17;
  *a1 = v16;
  *a2 = v12;
  return result;
}

void sub_10023AC3C(int a1, id a2)
{
  id v8 = objc_retainBlock(a2);
  sub_100004A18((void *)&_mh_execute_header, v2, v3, "%@ newRequest completionHandler: %@", v4, v5, v6, v7, 2u);
}

void sub_10023ACE0(uint64_t a1)
{
  unint64_t v1 = [*(id *)(a1 + 32) request];
  sub_100004A38();
  sub_100004A18((void *)&_mh_execute_header, v2, v3, "%@ completed request.completionHandler: %@", v4, v5, v6, v7, v8);
}

void sub_10023AD74(uint64_t a1)
{
  unint64_t v1 = [*(id *)(a1 + 32) request];
  sub_100004A38();
  sub_100004A18((void *)&_mh_execute_header, v2, v3, "%@ run old request completionHandler: %@", v4, v5, v6, v7, v8);
}

void sub_10023AE08(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error occured while encoding array: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023AE80(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error occured while decoding array: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023AEF8(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDMessageMgr_iOS", v1, 2u);
}

void sub_10023AF3C(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDMessageMgr_iOS. Use 'sharedInstance'", v1, 2u);
}

void sub_10023AF80(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDMessageMgr_iOS: initialize", v1, 2u);
}

void sub_10023AFC4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 fm_logID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ deallocating...", (uint8_t *)&v4, 0xCu);
}

void sub_10023B05C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023B0CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023B138(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023B1A4()
{
  sub_10000CB44();
  int v0 = objc_opt_class();
  id v1 = sub_10000CAD0(v0);
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "%@ (0x%lX) Serializing error for request body : %@", v4, v5, v6, v7, v8);
}

void sub_10023B22C()
{
  sub_10000CB44();
  int v0 = objc_opt_class();
  id v1 = sub_10000CAD0(v0);
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "%@ (0x%lX) Error serializing into JSON : %@", v4, v5, v6, v7, v8);
}

void sub_10023B2B4(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = objc_opt_class();
  id v4 = sub_10000CB00(v3);
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ (0x%lX) serialization yielded NULL body data", v5, 0x16u);
}

void sub_10023B348()
{
  int v0 = objc_opt_class();
  id v1 = sub_10000CB00(v0);
  sub_100004A18((void *)&_mh_execute_header, v2, v3, "%@ (0x%lX) cancelled before it could be sent", v4, v5, v6, v7, v8);
}

void sub_10023B3CC()
{
  int v0 = objc_opt_class();
  id v1 = sub_10000CB00(v0);
  sub_100004A18((void *)&_mh_execute_header, v2, v3, "serverInteractionController completionHandler request - %@(0x%lX)", v4, v5, v6, v7, v8);
}

void sub_10023B454()
{
  sub_10000CB44();
  int v0 = objc_opt_class();
  id v1 = sub_10000CAD0(v0);
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "%@ (0x%lX) Error trying to deserialize JSON response into dictionary: %@", v4, v5, v6, v7, v8);
}

void sub_10023B4E0(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Provider not found, cancelling AL falire reporting request", v1, 2u);
}

void sub_10023B524(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Account not found, cancelling AL falire reporting request", v1, 2u);
}

void sub_10023B568(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Could not obtain the PCRT Token %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023B5E0(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 fm_logID];
  uint64_t v5 = [a1 alertFromServerResponse];
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  char v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ V3Signing Session Found alert but cannot present it : %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023B6A4(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "LAContext already evaluating.", v1, 2u);
}

void sub_10023B6E8(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 localizedDescription];
  uint64_t v5 = [a1 underlyingErrors];
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  char v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failure to evaluate policy %@, %@.", (uint8_t *)&v6, 0x16u);
}

void sub_10023B7AC(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDLostModeManager", v1, 2u);
}

void sub_10023B7F0(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDLostModeManager. Use 'sharedInstance'", v1, 2u);
}

void sub_10023B834(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDLostModeManager: initialize", v1, 2u);
}

void sub_10023B878(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDLostModeManager unable to obtain iCloud account credential %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_10023B900(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error disabling biometric ID : %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023B978(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error opening URL - %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023B9F0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDSupportedAccessoryTypesRequest does not support %@ account", (uint8_t *)&v2, 0xCu);
}

void sub_10023BA68(os_log_t log)
{
  *(_WORD *)id v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDBAStatusUtil", v1, 2u);
}

void sub_10023BAAC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Connected External Accessories : %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023BB24(NSObject *a1)
{
  int v2 = +[NSProcessInfo processInfo];
  uint64_t v3 = [v2 environment];
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, a1, OS_LOG_TYPE_DEBUG, "Environment:\n%@", v4, 0xCu);
}

void sub_10023BBD8()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Bug in findmydeviced configuration. Please raise a radar with this message - %@", v2, v3, v4, v5, v6);
}

void sub_10023BC40(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Verifiying launch events", v1, 2u);
}

void sub_10023BC84(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "A nil environment was received in apsHandlerForEnvironment", v1, 2u);
}

void sub_10023BCC8()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Error from MAEGetActivationStateWithError: %@", v2, v3, v4, v5, v6);
}

void sub_10023BD30()
{
  sub_10001B9EC();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "BUG: oldVersion: [%@] and newVersion: [%@] are the same!", v2, 0x16u);
}

void sub_10023BDB4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023BE20(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Reading configurations from disk failed with error %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_10023BEA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023BF18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023BF88(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not find class %@ in the automation bundle", (uint8_t *)&v2, 0xCu);
}

void sub_10023C000(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 contextKey];
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDProtectedContext could not generate file path for key %@", v4, 0xCu);
}

void sub_10023C094()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Root context directory URL %@", v2, v3, v4, v5, v6);
}

void sub_10023C0FC()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Constructed protected context file url %@", v2, v3, v4, v5, v6);
}

void sub_10023C164()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Attempt to read protected context from file %@", v2, v3, v4, v5, v6);
}

void sub_10023C1CC(void *a1, NSObject *a2)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  id v6 = [a1 code];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unable to save protected context file %@ %li", (uint8_t *)&v3, 0x16u);
}

void sub_10023C268(void *a1, NSObject *a2)
{
  int v3 = [a1 contextKey];
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Creating protected context file for key %@", v4, 0xCu);
}

void sub_10023C2FC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Digest: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023C374(void *a1, uint64_t a2, NSObject *a3)
{
  __int16 v5 = [a1 fm_logID];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error serializing volatile accessory info into JSON for %@ : %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023C424(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "File download completed without file location.", v1, 2u);
}

void sub_10023C468(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMIPConfig", v1, 2u);
}

void sub_10023C4AC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMIPConfig: initialize", v1, 2u);
}

void sub_10023C4F0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not set new passcode - unknown error", v1, 2u);
}

void sub_10023C534(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not set new passcode - error received:  %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023C5AC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not update CDP with new passcode: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023C624(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Found activation lock status key with invalid value %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023C69C(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412802;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2080;
  *(void *)(buf + 14) = "IOPMUBootLPMCtrl";
  *((_WORD *)buf + 11) = 2048;
  *((void *)buf + 3) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%@ _readIODeviceSupportsFindMy: Failed to fetch property: %s. dict=%p", buf, 0x20u);
}

void sub_10023C718(void *a1, uint64_t a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(void *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(void *)(buf + 14) = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%@ _readIODeviceSupportsFindMy: Failed to decode PMU data %@", buf, 0x16u);
}

void sub_10023C780(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDTrackedLocationPublisher must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_10023C7C4()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDAccessoryPlaySoundAction (0x%lX) discovery could not initialize", v2, v3, v4, v5, v6);
}

void sub_10023C82C()
{
  sub_10002E894();
  sub_10002E85C(v0, v1);
  sub_10002E838();
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "Error while stopping a sound on accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
}

void sub_10023C8A8()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "statusController stopDiscovery return with error %@", v2, v3, v4, v5, v6);
}

void sub_10023C910()
{
  sub_10001B9EC();
  __int16 v3 = 2112;
  uint64_t v4 = v0;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "play sound not supported accessory connectionFlavor = %@ can soundflavor %@", v2, 0x16u);
}

void sub_10023C994()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "Error while stopping a sound not able to get the sound controller", v2, v3, v4, v5, v6);
}

void sub_10023C9C8(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "unable to get connectionController for accessory %@", buf, 0xCu);
}

void sub_10023CA20()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "Error while playing a sound not able to get the sound controller", v2, v3, v4, v5, v6);
}

void sub_10023CA54(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "unable to get safetyCheckController for accessoory %@", buf, 0xCu);
}

void sub_10023CAAC()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "failed to wait for safety check %ld", v2, v3, v4, v5, v6);
}

void sub_10023CB14()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Waiting for connection timeout with error %ld", v2, v3, v4, v5, v6);
}

void sub_10023CB7C()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "Unable to connect to accessory", v2, v3, v4, v5, v6);
}

void sub_10023CBB0()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "Play sound failed retrying", v2, v3, v4, v5, v6);
}

void sub_10023CBE4()
{
  sub_10002E894();
  sub_10002E85C(v0, v1);
  sub_10002E838();
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "Error while playing a sound on accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
}

void sub_10023CC60()
{
  sub_10002E894();
  sub_10002E85C(v0, v1);
  sub_10002E838();
  sub_10000CB24((void *)&_mh_execute_header, v2, v3, "Error while picking audio route accessory: %@ [%@], %li", v4, v5, v6, v7, v8);
}

void sub_10023CCDC()
{
  sub_10002E894();
  uint64_t v2 = [*(id *)(v1 + 32) accessory];
  [v0 code];
  sub_10002E838();
  sub_10000CB24((void *)&_mh_execute_header, v3, v4, "Error while stopping a sound on accessory: %@ [%@], %li", v5, v6, v7, v8, v9);
}

void sub_10023CD74(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unhandled ADIOTPRequest error: %u", (uint8_t *)v2, 8u);
}

void sub_10023CDEC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "IDS identifier not available.", v1, 2u);
}

void sub_10023CE30(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error occured while decoding dictionary: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023CEA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error encoding NSNull: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023CF20(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while decoding NSNull: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023CF98(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDXPCManager", v1, 2u);
}

void sub_10023CFDC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "*** Trying to explicitly init FMDXPCManager. Use 'sharedInstance'", v1, 2u);
}

void sub_10023D020(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDXPCManager: initialize", v1, 2u);
}

void sub_10023D064(uint64_t a1, NSObject *a2)
{
  int v5 = 138412546;
  id v6 = (id)objc_opt_class();
  __int16 v7 = 2048;
  uint64_t v8 = a1;
  id v4 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ (0x%lX) deallocating...", (uint8_t *)&v5, 0x16u);
}

void sub_10023D10C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error reading server context %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023D184(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "unencodedAuthString is:  %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023D1FC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Hex strings should have an even number of digits (%@)", (uint8_t *)&v2, 0xCu);
}

void sub_10023D274(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "MAC address should be 6 bytes (%@)", (uint8_t *)&v2, 0xCu);
}

void sub_10023D2EC(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) ratchetIdentifier];
  sub_100035770((void *)&_mh_execute_header, v2, v3, "Failure to arm ratchet %@ with no error and no result.", v4, v5, v6, v7, 2u);
}

void sub_10023D378(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) ratchetIdentifier];
  sub_100035770((void *)&_mh_execute_header, v2, v3, "Failure to arm ratchet %@, no context found.", v4, v5, v6, v7, 2u);
}

void sub_10023D404(void *a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a1 ratchetIdentifier];
  uint64_t v6 = [a2 localizedDescription];
  uint64_t v7 = [a2 underlyingErrors];
  int v8 = 138412802;
  uint8_t v9 = v5;
  __int16 v10 = 2112;
  mach_port_t v11 = v6;
  __int16 v12 = 2112;
  int v13 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Failed to arm ratchet %@ no stateInfo, error: %@, %@.", (uint8_t *)&v8, 0x20u);
}

void sub_10023D4E4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDLocator didUpdateLocations before setting locatorPublisher.", v1, 2u);
}

void sub_10023D528(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Creating shared instance of ServerDeviceInfo", v1, 2u);
}

void sub_10023D56C(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v6 = objc_opt_class();
  id v7 = v6;
  int v8 = [a2 nextRetryTime];
  int v9 = 138412802;
  __int16 v10 = v6;
  __int16 v11 = 2048;
  uint64_t v12 = a1;
  __int16 v13 = 2112;
  uint64_t v14 = v8;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%@ (0x%lX) An earlier retry is already scheduled for %@", (uint8_t *)&v9, 0x20u);
}

void sub_10023D64C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023D6B8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023D724(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023D790(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 fm_logID];
  uint64_t v5 = [a1 commandID];
  int v6 = 138412546;
  id v7 = v4;
  __int16 v8 = 2112;
  int v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Handling %@ with command id %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023D854(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDEventLoggerFacilityOnDiskStats Unable to write %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023D8CC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDEventLoggerFacilityOnDiskStats Wrinting events to disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023D944(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 cachedLogFileURL];
  int v6 = 138412546;
  id v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not delete logs %@ %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023D9F4(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#nvram - Error clearing out nvram property - result code %d", (uint8_t *)v2, 8u);
}

void sub_10023DA6C(uint64_t a1, void *a2, NSObject *a3)
{
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 2048;
  id v7 = [a2 length];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "#nvram - Error saving data property to NVRAM key %@ datalen %ld", (uint8_t *)&v4, 0x16u);
}

void sub_10023DB0C(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#nvram - Error retrieving data value from nvrm. result code %d", (uint8_t *)v2, 8u);
}

void sub_10023DB84(void *a1)
{
  [a1 pscSessionRef];
  sub_100042470((void *)&_mh_execute_header, v1, v2, "AbsintheV3 Request created psc session ref %p", v3, v4, v5, v6, 0);
}

void sub_10023DC00(int a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Error generating data for sessionCreationRequest body: %ld", (uint8_t *)&v2, 0xCu);
}

void sub_10023DC7C()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Absinth V3 Signaling sync", v2, v3, v4, v5, v6);
}

void sub_10023DCB0(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 fm_logID];
  id v5 = [a1 httpResponseStatus];
  uint8_t v6 = [a1 httpResponseError];
  int v7 = 138412802;
  __int16 v8 = v4;
  __int16 v9 = 2048;
  id v10 = v5;
  __int16 v11 = 2112;
  uint64_t v12 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@: Error (%ld) %@", (uint8_t *)&v7, 0x20u);
}

void sub_10023DD8C()
{
  sub_10002E8A0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "nil response for sessionCreationRequest", v1, 2u);
}

void sub_10023DDCC(char a1, char a2, os_log_t log)
{
  CFStringRef v3 = @"none";
  if (a1) {
    CFStringRef v4 = @"found";
  }
  else {
    CFStringRef v4 = @"none";
  }
  if (a2) {
    CFStringRef v3 = @"found";
  }
  int v5 = 138412546;
  CFStringRef v6 = v4;
  __int16 v7 = 2112;
  CFStringRef v8 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "sessionCreationRequest did not return all the data. message1: %@, message2 : %@", (uint8_t *)&v5, 0x16u);
}

void sub_10023DE74(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Error in establising the key: %d", (uint8_t *)v2, 8u);
}

void sub_10023DEEC(uint64_t a1)
{
  [*(id *)(a1 + 32) pscSessionRef];
  sub_100042470((void *)&_mh_execute_header, v1, v2, "AbsinthV3 PSCSessionref %p", v3, v4, v5, v6, 0);
}

void sub_10023DF6C()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Initialized session, establishing key...", v2, v3, v4, v5, v6);
}

void sub_10023DFA0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "sessionCreationRequest response body : %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023E018(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "Error in signing the data: %d", (uint8_t *)v2, 8u);
}

void sub_10023E090()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "AbsinthV3 attempt to invalidate session", v2, v3, v4, v5, v6);
}

void sub_10023E0C4()
{
  sub_10002E8A0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Creating shared instance of FMDAppleAccountManager", v1, 2u);
}

void sub_10023E104()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "*** Trying to explicitly init FMDAppleAccountManager. Use 'sharedInstance'", v2, v3, v4, v5, v6);
}

void sub_10023E138(char a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1 & 1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Sync FMIP Account deviceLocator provisioned: %i", (uint8_t *)v2, 8u);
}

void sub_10023E1B4()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "iCloud account disappeared without turning FMIP off", v2, v3, v4, v5, v6);
}

void sub_10023E1E8()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "iCloud account is different from the previously configured FMIP account", v2, v3, v4, v5, v6);
}

void sub_10023E21C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Attempting to set new passcode: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023E294()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "SaveDataProperty called with NULL property name or value.", v2, v3, v4, v5, v6);
}

void sub_10023E2C8()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "IORegistryEntryFromPath returned MACH_PORT_NULL", v2, v3, v4, v5, v6);
}

void sub_10023E2FC()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "copyPropertyAsCFString called with NULL variableNameRef or value.", v2, v3, v4, v5, v6);
}

void sub_10023E330(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Inconsistent state: FMIP is not enabled but the paired device is asking for a signature. Sending back an error", v1, 2u);
}

void sub_10023E374(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 dsid];
  int v6 = 138412546;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Inconsistent state: FMIP is enabled for dsid %@ but the paired device is asking for a signature for dsid %@. Sending back an error", (uint8_t *)&v6, 0x16u);
}

void sub_10023E424(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Request DSID is null!", v1, 2u);
}

void sub_10023E468(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error deserializing the json from the v5 signature request : %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023E4E0(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error while initiating lost mode exit request %@ for watch %@", (uint8_t *)&v4, 0x16u);
}

void sub_10023E56C(void *a1, NSObject *a2)
{
  int v3 = 134217984;
  id v4 = [a1 length];
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Signing data of length %lu", (uint8_t *)&v3, 0xCu);
}

void sub_10023E5FC(void *a1, NSObject *a2)
{
  int v3 = [a1 account];
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMIP account %@ known by findmydeviced has gone missing from Accounts. Removing findmydeviced's record of this account", v4, 0xCu);
}

void sub_10023E690()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read not-backedup persistance accounts file from disk %@", v2, v3, v4, v5, v6);
}

void sub_10023E6F8()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Attempting read of persistance accounts file (notbackedup)", v2, v3, v4, v5, v6);
}

void sub_10023E72C()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read backedup persistance accounts file from disk %@", v2, v3, v4, v5, v6);
}

void sub_10023E794()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Attempting read of persistance accounts file", v2, v3, v4, v5, v6);
}

void sub_10023E7C8(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 fmipStateChangeCriteria];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "Old stateChangeCriteria:%@, New stateChangeCriteria:%@", (uint8_t *)&v6, 0x16u);
}

void sub_10023E878()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account notbackedup file (persistance) %@", v2, v3, v4, v5, v6);
}

void sub_10023E8E0()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account backedup file (persistance) %@", v2, v3, v4, v5, v6);
}

void sub_10023E948()
{
  sub_10004918C();
  sub_1000491A4((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account notbackedup file (%@): %@");
}

void sub_10023E9B0()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Removing old FMIP accounts notbackedup file", v2, v3, v4, v5, v6);
}

void sub_10023E9E4()
{
  sub_10004918C();
  sub_1000491A4((void *)&_mh_execute_header, v0, v1, "Could not delete FMIP account backedup file (%@): %@");
}

void sub_10023EA4C()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Removing old FMIP accounts backedup file", v2, v3, v4, v5, v6);
}

void sub_10023EA80()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Unable to save data %@", v2, v3, v4, v5, v6);
}

void sub_10023EAE8(void *a1)
{
  uint64_t v1 = [a1 description];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "Storing not-backedup FMIP account dict to file: %@", v4, v5, v6, v7, v8);
}

void sub_10023EB6C(void *a1)
{
  uint64_t v1 = [a1 description];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "Storing backedup FMIP account dict to file: %@", v4, v5, v6, v7, v8);
}

void sub_10023EBF0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "No error evaluating the trust policies, but pinning was not successful either.", v1, 2u);
}

void sub_10023EC34(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Configuring IDS Manager", v1, 2u);
}

void sub_10023EC78()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "UCRT upgrade check failed because: %@", v2, v3, v4, v5, v6);
}

void sub_10023ECE0()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "%@", v2, v3, v4, v5, v6);
}

void sub_10023ED48()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not get ephemeral token for repair device: %@.", v2, v3, v4, v5, v6);
}

void sub_10023EDB0()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not find paired device with UDID %@", v2, v3, v4, v5, v6);
}

void sub_10023EE18(void *a1, NSObject *a2)
{
  id v4 = [a1 httpResponseStatus];
  uint64_t v5 = [a1 httpResponseError];
  int v6 = 134218242;
  id v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error %ld trying to turn off Find My iPhone: %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023EED4(char a1, NSObject *a2)
{
  CFStringRef v2 = @"NO";
  if (a1) {
    CFStringRef v2 = @"YES";
  }
  int v3 = 138412290;
  CFStringRef v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "prefsAppBackgrounded = %@", (uint8_t *)&v3, 0xCu);
}

void sub_10023EF64(void *a1)
{
  uint64_t v1 = [a1 fm_logID];
  sub_1000558D4();
  sub_1000558EC((void *)&_mh_execute_header, v2, v3, "%@ Serializing error for request body : %@", v4, v5, v6, v7, v8);
}

void sub_10023EFF8(void *a1)
{
  uint64_t v1 = [a1 fm_logID];
  sub_1000558D4();
  sub_1000558EC((void *)&_mh_execute_header, v2, v3, "%@ Error serializing into JSON : %@", v4, v5, v6, v7, v8);
}

void sub_10023F08C(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 fm_logID];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%@ serialization yielded NULL body data", (uint8_t *)&v4, 0xCu);
}

void sub_10023F128()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Nil object for key: %@", v2, v3, v4, v5, v6);
}

void sub_10023F190()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "encodeObject:%@ forKey:%@");
}

void sub_10023F1F8()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "encodeObjects:%@ forKey:%@");
}

void sub_10023F260(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "object is a codable collection", v1, 2u);
}

void sub_10023F2A4(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "object is a codable", v1, 2u);
}

void sub_10023F2E8(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 container];
  uint64_t v5 = [a1 stack];
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "processObject container:%@ stack:%@", (uint8_t *)&v6, 0x16u);
}

void sub_10023F3AC()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "encodeCollectionObject:%@", v2, v3, v4, v5, v6);
}

void sub_10023F414()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "encodeArrayCollectionObject:%@", v2, v3, v4, v5, v6);
}

void sub_10023F47C()
{
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Error while encoding: %@", v1, 0xCu);
}

void sub_10023F4F0(void *a1, NSObject *a2)
{
  id v4 = [a1 httpResponseStatus];
  uint64_t v5 = [a1 httpResponseError];
  int v6 = 134218242;
  id v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error %ld trying to unregister accessories : %@", (uint8_t *)&v6, 0x16u);
}

void sub_10023F5AC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "No command handler found for commandType: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023F624(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023F690()
{
  sub_10005CC94();
  __int16 v4 = v0;
  uint64_t v5 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "remoteObjectProxy on connection %p for extension id %@ failed with CFErrorRef error = %@", v3, 0x20u);
}

void sub_10023F714(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10023F780(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100008A30((void *)&_mh_execute_header, a2, a3, "#ext Extension with id = %@ not found", a5, a6, a7, a8, 2u);
}

void sub_10023F7EC()
{
  sub_10005CC94();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "XPC connection interrupted for identifier %@ and  connection = %@", v1, 0x16u);
}

void sub_10023F864()
{
  sub_10005CC94();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "XPC connection invalidated for identifier %@ and conection = %@", v1, 0x16u);
}

void sub_10023F8DC()
{
  sub_10004918C();
  sub_1000491A4((void *)&_mh_execute_header, v0, v1, "Unsupported feature flavor combination %@__%@");
}

void sub_10023F944()
{
  sub_10004918C();
  sub_1000491A4((void *)&_mh_execute_header, v0, v1, "Unable to get remoteObjectProxy for %@ %@");
}

void sub_10023F9AC(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "There was no error evaluating the trust policies, but pinning was not successful either.", v1, 2u);
}

void sub_10023F9F0()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "FMDBluetoothManager the BluetoothManager is not available.", v2, v3, v4, v5, v6);
}

void sub_10023FA24(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "BluetoothManager.pairedDevices unexpected object type %@", (uint8_t *)&v2, 0xCu);
}

void sub_10023FA9C()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "BluetoothMagicPairedDeviceNameChangedNotification unexpected object type", v2, v3, v4, v5, v6);
}

void sub_10023FAD0()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "BluetoothDeviceConnectSuccessNotification unexpected object type", v2, v3, v4, v5, v6);
}

void sub_10023FB04()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "BluetoothDeviceDisconnectSuccessNotification unexpected object type", v2, v3, v4, v5, v6);
}

void sub_10023FB38(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 audioChannelInfo];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDBluetoothAccessory setting channels %@", (uint8_t *)&v4, 0xCu);
}

void sub_10023FBD0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "For devices with extension this method is not fully supported", v1, 2u);
}

void sub_10023FC14(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Comparing two different accessories", v1, 2u);
}

void sub_10023FC58(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAccessoryRegistry initialized", v1, 2u);
}

void sub_10023FC9C(uint64_t a1, NSObject *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDAccessoryRegistry registerDelegate %@", (uint8_t *)&v3, 0xCu);
}

void sub_10023FD18(void *a1, NSObject *a2)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  id v6 = [a1 code];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not delete accessory registry %@ %li", (uint8_t *)&v3, 0x16u);
}

void sub_10023FDB4(uint64_t a1, NSObject *a2, double a3)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  int v4 = 134218242;
  double v5 = a3;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDAccessoryRegistry timeout / error waiting for dataSources. Retrying in %f %@", (uint8_t *)&v4, 0x16u);
}

void sub_10023FE40(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDAccessoryRegistry no identifier given", v1, 2u);
}

void sub_10023FE84()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDAccessoryRegistry no identifier for accessory %@", v2, v3, v4, v5, v6);
}

void sub_10023FEEC()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read accessory registry from disk %@", v2, v3, v4, v5, v6);
}

void sub_10023FF54()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "setting lastStatusUpdateTime to %@", v1, 0xCu);
}

void sub_10023FFC8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "got lostModeInfoVersion = %@ accessoriesInLostMode = %@", (uint8_t *)&v3, 0x16u);
}

void sub_100240050(void *a1, NSObject *a2)
{
  int v3 = [a1 commandParams];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "got commandParams = %@", (uint8_t *)&v4, 0xCu);
}

void sub_1002400E8(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*(void *)(*(void *)a2 + 8) + 40);
  int v5 = 138412546;
  uint64_t v6 = v3;
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Fetching protected context %@ : %@", (uint8_t *)&v5, 0x16u);
}

void sub_100240180(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Removing all protected contexts for key %@", (uint8_t *)&v3, 0xCu);
}

void sub_1002401FC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Deleted protected context file %@", (uint8_t *)&v2, 0xCu);
}

void sub_100240274(uint64_t a1, int a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 1024;
  int v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error fetching %@: %d", (uint8_t *)&v3, 0x12u);
}

void sub_1002402FC(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Unlock state is %i", (uint8_t *)v2, 8u);
}

void sub_100240374(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Unlock since boot state is %i", (uint8_t *)v2, 8u);
}

void sub_1002403EC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Could not obtain the last modified date of PSC.sui %@ %@", (uint8_t *)&v3, 0x16u);
}

void sub_100240474(void *a1, void *a2, NSObject *a3)
{
  __int16 v5 = [a1 url];
  int v6 = 138412802;
  __int16 v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  __int16 v10 = 2048;
  id v11 = [a2 code];
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could Not read file %@ %@ %li", (uint8_t *)&v6, 0x20u);
}

void sub_100240538(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error creating OTControl object: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002405B0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "OT status does not have a self", v1, 2u);
}

void sub_1002405F4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "OTStatus: success", v1, 2u);
}

void sub_100240638(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 objectForKeyedSubscript:@"contextDump"];
  __int16 v5 = [v4 objectForKeyedSubscript:@"self"];
  int v6 = [v5 objectForKeyedSubscript:@"peerID"];
  __int16 v7 = [a1 objectForKeyedSubscript:@"contextDump"];
  __int16 v8 = [v7 objectForKeyedSubscript:@"self"];
  uint64_t v9 = [v8 objectForKeyedSubscript:@"dynamicInfo"];
  __int16 v10 = [v9 objectForKeyedSubscript:@"included"];
  id v11 = [v10 componentsJoinedByString:@","];
  int v12 = 138412546;
  __int16 v13 = v6;
  __int16 v14 = 2112;
  uint64_t v15 = v11;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "OT status self is not included in the peer list - selfID : %@, peerIDs: %@", (uint8_t *)&v12, 0x16u);
}

void sub_1002407B4(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 objectForKeyedSubscript:@"state"];
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "OT status is not 'ready': %@", (uint8_t *)&v4, 0xCu);
}

void sub_100240854(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "OTControl status fetch error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002408CC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100240944(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002409BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100240A34()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "disableLostMode called even though the keybag is still locked. Ignoring this command. Lost mode stays active", v2, v3, v4, v5, v6);
}

void sub_100240A68()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "disableLostMode called while device is in managed lost mode. Ignoring this command. Lost mode stays active", v2, v3, v4, v5, v6);
}

void sub_100240A9C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100240B14(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100240B8C()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Faild to serialize device identifiers %@", v2, v3, v4, v5, v6);
}

void sub_100240BF4()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "signatureHeadersWithData : Absinth signing failed", v2, v3, v4, v5, v6);
}

void sub_100240C28(void *a1)
{
  uint64_t v1 = [a1 name];
  sub_10001B9EC();
  sub_100035770((void *)&_mh_execute_header, v2, v3, "Accessory %@ does not support setPhoneNumber operation", v4, v5, v6, v7, v8);
}

void sub_100240CAC()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "scd flavor = %@", v1, 0xCu);
}

void sub_100240D20()
{
  sub_10002E8A0();
  sub_10002E878((void *)&_mh_execute_header, v0, v1, "requireDisableLocationWithCompletion could not find provider.", v2, v3, v4, v5, v6);
}

void sub_100240D54(void *a1)
{
  uint64_t v1 = [a1 localizedDescription];
  sub_10001B9EC();
  sub_100035770((void *)&_mh_execute_header, v2, v3, "requireDisableLocationWithCompletion finished with error %@.", v4, v5, v6, v7, v8);
}

void sub_100240DD8(char a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1 & 1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "retry XPC activity triggered. Updating to done so that it can be cleaned. success : %d", (uint8_t *)v2, 8u);
}

void sub_100240E54(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 134218240;
  uint64_t v4 = a2;
  __int16 v5 = 2048;
  uint64_t v6 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "retry XPC activity XPC activity changed to state %ld with criteria %p", (uint8_t *)&v3, 0x16u);
}

void sub_100240EDC(void *a1)
{
  uint64_t v1 = [a1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "%@ deallocating...", v4, v5, v6, v7, v8);
}

void sub_100240F60()
{
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Unable to save data %@", v1, 0xCu);
}

void sub_100240FD4()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Tracked locations cache URL %@", v1, 0xCu);
}

void sub_100241048()
{
  sub_10002E8A0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "Could not find a Library directory", v1, 2u);
}

void sub_100241088(void *a1)
{
  uint64_t v1 = [a1 description];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "Read the following tracked locations from persistent cache:  %@", v4, v5, v6, v7, v8);
}

void sub_10024110C(void *a1)
{
  [a1 count];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v1, v2, "Read %ld tracked locations from persistent cache", v3, v4, v5, v6, v7);
}

void sub_100241184()
{
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Could not read tracked locations from disk %@", v1, 0xCu);
}

void sub_1002411F8(void *a1)
{
  uint64_t v1 = [a1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "Removing tracked locations file for %@", v4, v5, v6, v7, v8);
}

void sub_10024127C()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "No tracked locations. Not setting up a location purge timer now", v2, v3, v4, v5, v6);
}

void sub_1002412B0()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "There seem to be some locations already eligible for purge. Scheduling a purge onto the queue", v2, v3, v4, v5, v6);
}

void sub_1002412E4()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Scheduling the location purge timer to next fire at %@", v1, 0xCu);
}

void sub_100241358()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Rescheduling location purge timer", v2, v3, v4, v5, v6);
}

void sub_10024138C()
{
  sub_10002E8A0();
  sub_100042454((void *)&_mh_execute_header, v0, v1, "Checking for old tracked locations", v2, v3, v4, v5, v6);
}

void sub_1002413C0(void *a1)
{
  uint64_t v1 = [a1 fileURL];
  uint64_t v2 = [v1 lastPathComponent];
  sub_10001B9EC();
  sub_1000558EC((void *)&_mh_execute_header, v3, v4, "Error excluding %@ from backup %@", v5, v6, v7, v8, v9);
}

void sub_10024146C(void *a1, char a2, NSObject *a3)
{
  int v5 = 138412802;
  uint64_t v6 = a1;
  __int16 v7 = 2048;
  id v8 = [a1 code];
  __int16 v9 = 1024;
  int v10 = a2 & 1;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Could not copy the downloaded file %@ %li (%i)", (uint8_t *)&v5, 0x1Cu);
}

void sub_100241524(void *a1)
{
  [a1 code];
  sub_1000558EC((void *)&_mh_execute_header, v1, v2, "Could not delete asset registry %@ %li", v3, v4, v5, v6, 2u);
}

void sub_1002415B0()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read asset from disk %@", v2, v3, v4, v5, v6);
}

void sub_100241618(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to fetch accessory from %@ with error %@", (uint8_t *)&v4, 0x16u);
}

void sub_1002416A4(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Counld not get the color, timeout error %ld", (uint8_t *)&v2, 0xCu);
}

void sub_10024171C(void *a1, NSObject *a2)
{
  int v3 = 138412546;
  int v4 = a1;
  __int16 v5 = 2048;
  id v6 = [a1 code];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not delete accessory location store %@ %li", (uint8_t *)&v3, 0x16u);
}

void sub_1002417B8()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "AccessoryLocationStore ERROR : deleting orphaned record %@", v2, v3, v4, v5, v6);
}

void sub_100241820()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read accessory locations from disk %@", v2, v3, v4, v5, v6);
}

void sub_100241888(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAccessoryLocationStore deactivating janitor", v1, 2u);
}

void sub_1002418CC()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "FMDAccessoryLocationStore scheduling janitor %@", v1, 0xCu);
}

void sub_100241940(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDAccessoryLocationStore invalid cleanup date specified.", v1, 2u);
}

void sub_100241984(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 nextScheduledJanitorDate];
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDAccessoryLocationStore janitor already scheduled %@", v4, 0xCu);
}

void sub_100241A18(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDEventLoggerFacilityOnDisk Unable to write %@", (uint8_t *)&v2, 0xCu);
}

void sub_100241A90(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Wrinting events to disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_100241B08(os_log_t log)
{
  v1[0] = 67109120;
  v1[1] = byte_10031EB68;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDAutomationDeviceIdentity: isAutomationActive: %d", (uint8_t *)v1, 8u);
}

void sub_100241B8C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Mock device identity class found. Try to create the mock device identity proxy.", v1, 2u);
}

void sub_100241BD0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Mock device identity not enabled. Getting real device identity proxy.", v1, 2u);
}

void sub_100241C14(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = +[FMDSecureLocationInfo stringFromPublishReason:a1];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "SecureLocationMonitor - didUpdateLocations from %@", (uint8_t *)&v4, 0xCu);
}

void sub_100241CB8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "locationManager didFailWithError %@", (uint8_t *)&v2, 0xCu);
}

void sub_100241D30(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "SecureLocationMonitor: Tried to defer activity, but failed", v1, 2u);
}

void sub_100241D74()
{
  sub_100098A84();
  sub_100098A98((void *)&_mh_execute_header, v0, v1, "%@ Error reading config data %@", v2, v3, v4, v5, 2u);
}

void sub_100241DE8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100241E60()
{
  sub_100098A84();
  sub_100098A98((void *)&_mh_execute_header, v0, v1, "%@ Error saving config data err %@", v2, v3, v4, v5, 2u);
}

void sub_100241ED4()
{
  sub_100098A84();
  sub_100098A98((void *)&_mh_execute_header, v0, v1, "%@ Error parsing config JSON %@", v2, v3, v4, v5, 2u);
}

void sub_100241F48(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100241FC0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100242038(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002420B0(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to open %@", buf, 0xCu);
}

void sub_100242108(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 directoryURL];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error while trying to read the contents of directory %@: %@", (uint8_t *)&v6, 0x16u);
}

void sub_1002421B8(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 standardLocator];
  uint64_t v4 = [v3 fm_logID];
  int v5 = 138412290;
  int v6 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Removing standard locator %@", (uint8_t *)&v5, 0xCu);
}

void sub_10024226C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Publishing location now", v1, 2u);
}

void sub_1002422B0(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDBluetoothDiscovery Scanning timer fired.", v1, 2u);
}

void sub_1002422F4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDBluetoothDiscoveryCoordinator discovery terminating - no active tokens", v1, 2u);
}

void sub_100242338(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not load notification manager from disk %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002423B0(void *a1, NSObject *a2)
{
  int v4 = 134218242;
  id v5 = [a1 count];
  __int16 v6 = 2112;
  uint64_t v7 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDAccessorySerialNumbers invalid info. Count: %lu, Values: %@", (uint8_t *)&v4, 0x16u);
}

void sub_10024244C()
{
  sub_1000A4B84();
  sub_1000A4B9C((void *)&_mh_execute_header, v0, v1, "Now disabling the old assertion %@ with ID 0x%x");
}

void sub_1002424B4(uint64_t a1, _DWORD *a2, NSObject *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&void v3[4] = a1;
  *(_WORD *)&v3[12] = 1024;
  *(_DWORD *)&v3[14] = *a2;
  sub_1000A4B9C((void *)&_mh_execute_header, (uint64_t)a2, a3, "Successfully created assertion %@ with ID 0x%x", *(void *)v3, *(void *)&v3[8], *(_WORD *)&v3[16]);
}

void sub_100242530()
{
  sub_1000A4B84();
  sub_1000A4B9C((void *)&_mh_execute_header, v0, v1, "Found existing assertion named %@ with ID 0x%x - will disable it after getting the new one");
}

void sub_100242598()
{
  sub_1000A4B84();
  sub_1000A4B9C((void *)&_mh_execute_header, v0, v1, "Successfully released power assertion %@ with ID 0x%x");
}

void sub_100242600()
{
  sub_1000A4B84();
  sub_1000A4B9C((void *)&_mh_execute_header, v0, v1, "Disable power assertion with name: %@ and ID 0x%x");
}

void sub_100242668(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 fm_logID];
  int v4 = 138412290;
  id v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@: successful - wiping now!", (uint8_t *)&v4, 0xCu);
}

void sub_100242700(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#PARSING invalid or no pattern in maskInfo %@", (uint8_t *)&v2, 0xCu);
}

void sub_100242778(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#PARSING invalid or no mask in maskInfo %@", (uint8_t *)&v2, 0xCu);
}

void sub_1002427F0(void *a1, void *a2)
{
  uint64_t v3 = [a1 username];
  int v4 = [a2 username];
  sub_1000AEEF8();
  sub_1000558EC((void *)&_mh_execute_header, v5, v6, "Account %@ being switched with account %@ using updateAccount without an unregister", v7, v8, v9, v10, v11);
}

void sub_100242894(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 username];
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Trying to remove account %@ when findmydeviced has no previous record of it", v4, 0xCu);
}

void sub_100242928(uint64_t a1)
{
  os_log_t v1 = [*(id *)(a1 + 40) username];
  sub_1000558EC((void *)&_mh_execute_header, v2, v3, "Error removing account: %@ with error: %@", v4, v5, v6, v7, 2u);
}

void sub_1002429CC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100242A04(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100242A3C()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Showing alert : %@", v2, v3, v4, v5, v6);
}

void sub_100242AA4(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 fm_logID];
  uint64_t v5 = [a1 alertFromServerResponse];
  sub_1000AEEF8();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%@ Found alert : %@", v6, 0x16u);
}

void sub_100242B58()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "accessoryDidUpdate: %@", v2, v3, v4, v5, v6);
}

void sub_100242BC0()
{
  sub_10001B9EC();
  sub_10001FE14((void *)&_mh_execute_header, v0, v1, "Asking the supportedAccessoryRegistry whether we support %@.", v2, v3, v4, v5, v6);
}

void sub_100242C28(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100242C60()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "Ignoring duplicate old style intent of type %@ with command id %@");
}

void sub_100242CC8(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CLLocation+FMGeoLocatable unhandled location type %i", (uint8_t *)v2, 8u);
}

void sub_100242D40(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDCipherKeychainItemAdaptor failed to read data. Error - %@", (uint8_t *)&v2, 0xCu);
}

void sub_100242DB8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDCipherKeychainItemAdaptor failed to archive data. Error - %@", (uint8_t *)&v2, 0xCu);
}

void sub_100242E30(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Logger Session became invalid %@", (uint8_t *)&v2, 0xCu);
}

void sub_100242EA8(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: shouldPublish is false. lastPublished %@", (uint8_t *)&v2, 0xCu);
}

void sub_100242F20(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "SecureLocationPublisher: new location does not meet publish criteria", v1, 2u);
}

void sub_100242F64(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "SecureLocationPublisher: must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_100242FA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100243014(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "CKKSControl status - No Manatee status found", v1, 2u);
}

void sub_100243058(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002430C4(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 objectAtIndexedSubscript:1];
  uint64_t v5 = [v4 objectForKeyedSubscript:@"keystate"];
  uint8_t v6 = [a1 objectAtIndexedSubscript:1];
  uint64_t v7 = [v6 objectForKeyedSubscript:@"keyStateError"];
  int v8 = 138412546;
  uint64_t v9 = v5;
  __int16 v10 = 2112;
  uint8_t v11 = v7;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CKKSStatus bad key state. KeyState: %@. Error: %@", (uint8_t *)&v8, 0x16u);
}

void sub_1002431C8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100243234(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDBluetoothDiscoveryXPCProxy service terminated with error : %li", (uint8_t *)&v2, 0xCu);
}

void sub_1002432AC(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "FMDBluetoothDiscoveryXPCProxy didEndDiscoveryWithError : %@", (uint8_t *)&v2, 0xCu);
}

void sub_100243324(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot disable biometry - (Missing Framework)", v1, 2u);
}

void sub_100243368(void *a1, uint8_t *buf, os_log_t log, void *a4)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Started SLC refinement using %@", buf, 0xCu);
}

void sub_1002433C8(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "SLC location had a very bad accuracy. Starting off a regular location cycle to refine the SLC location...", v1, 2u);
}

void sub_10024340C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Received SLC, but already have a previous locate cycle for tracked locations in-progress. So, ignoring this SLC", v1, 2u);
}

void sub_100243450(void *a1)
{
  os_log_t v1 = [a1 description];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v2, v3, "Received SLC location %@", v4, v5, v6, v7, v8);
}

void sub_1002434D8()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "BUG: Received SLC location for %@ tracking when locator was not supposed to be running. Stopping locator now", v1, 0xCu);
}

void sub_10024354C(void *a1)
{
  os_log_t v1 = [a1 locator];
  uint64_t v2 = [v1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v3, v4, "Obtained final location for SLC refinement using %@", v5, v6, v7, v8, v9);
}

void sub_1002435E8(void *a1)
{
  os_log_t v1 = [a1 locator];
  uint64_t v2 = [v1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v3, v4, "Stopped SLC refinement using %@", v5, v6, v7, v8, v9);
}

void sub_100243684()
{
  sub_10001B9EC();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "SLC Location update failed with error: %@.", v1, 0xCu);
}

void sub_1002436F8(void *a1, uint8_t *buf, os_log_t log, void *a4)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Started SLC fallback using %@", buf, 0xCu);
}

void sub_100243758(void *a1)
{
  os_log_t v1 = [a1 locator];
  uint64_t v2 = [v1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v3, v4, "Obtained final location for SLC fallback using %@", v5, v6, v7, v8, v9);
}

void sub_1002437F4(void *a1)
{
  os_log_t v1 = [a1 locator];
  uint64_t v2 = [v1 fm_logID];
  sub_10001B9EC();
  sub_100042470((void *)&_mh_execute_header, v3, v4, "Stopped SLC fallback using %@", v5, v6, v7, v8, v9);
}

void sub_100243890(uint64_t a1, NSObject *a2)
{
  uint64_t v3 = [(id)objc_opt_class() defaultStorageLocation];
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "read magSafe data store from %@", v4, 0xCu);
}

void sub_100243928()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read magSafe accessories list from disk %@", v2, v3, v4, v5, v6);
}

void sub_100243990(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100243A00(id *a1, NSObject *a2)
{
  uint64_t v3 = [*a1 audioChannelInfo];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "FMDBluetoothAccessory setting channels %@", (uint8_t *)&v4, 0xCu);
}

void sub_100243A9C(void *a1, void *a2, NSObject *a3)
{
  uint64_t v5 = [a1 fm_logID];
  id v6 = [a2 locationType];
  uint64_t v7 = [a2 horizontalAccuracy];
  uint64_t v8 = [a2 latitude];
  uint8_t v9 = [a2 longitude];
  __int16 v10 = [a2 timestamp];
  int v11 = 138413571;
  int v12 = v5;
  __int16 v13 = 2048;
  id v14 = v6;
  __int16 v15 = 2113;
  uint64_t v16 = v7;
  __int16 v17 = 2113;
  uint64_t v18 = v8;
  __int16 v19 = 2113;
  int v20 = v9;
  __int16 v21 = 2112;
  char v22 = v10;
  _os_log_debug_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_DEBUG, "%@ Received location with Position Type = (%ld), Accuracy = %{private}@, Latitude = %{private}@, Longitude = %{private}@, Timestamp = %@", (uint8_t *)&v11, 0x3Eu);
}

void sub_100243BE4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDConservativeLocatorPublisher must call startPublishingWithBlock: before updating locations", v1, 2u);
}

void sub_100243C28(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Encountered a serializing error for the volatile device info : %@", (uint8_t *)&v2, 0xCu);
}

void sub_100243CA0(void *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = [a1 fm_logID];
  int v6 = 138412546;
  uint64_t v7 = v5;
  __int16 v8 = 2112;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "Error serializing volatile device info into JSON for %@ : %@", (uint8_t *)&v6, 0x16u);
}

void sub_100243D50()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "decodeObjectOfClass:%@ forKey:%@");
}

void sub_100243DB8()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "decodeObjectOfProtocols:%@ forKey:%@");
}

void sub_100243E20()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "decodeObjectUsingFactories:%@ forKey:%@");
}

void sub_100243E88()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "isValidObject:%@ usingProtocols:%@");
}

void sub_100243EF0(void *a1, NSObject *a2)
{
  int v4 = [a1 container];
  uint64_t v5 = [a1 stack];
  int v6 = 138412546;
  uint64_t v7 = v4;
  __int16 v8 = 2112;
  uint64_t v9 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "container:%@ stack:%@ ", (uint8_t *)&v6, 0x16u);
}

void sub_100243FB4()
{
  sub_10004918C();
  sub_100057628((void *)&_mh_execute_header, v0, v1, "decodeArrayCollection:%@ usingFactory:%@");
}

void sub_10024401C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error while encoding: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100244094(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Background requests cannot be cancelled by ID.", v1, 2u);
}

void sub_1002440D8()
{
  sub_10001B9EC();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "FMDUnregisterTokenStore no unregister token: %@", v1, 0xCu);
}

void sub_10024414C()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore failed to convert string to data %@", v2, v3, v4, v5, v6);
}

void sub_1002441B4()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore timeout decrypting unregister token %@", v2, v3, v4, v5, v6);
}

void sub_10024421C()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore failed to decrypt token %@", v2, v3, v4, v5, v6);
}

void sub_100244284(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002442F4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "FMDUnregisterTokenStore reading expiry date failed (device locked).", v1, 2u);
}

void sub_100244338(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDUnregisterTokenStore Invalid token. No expiry date found.", v1, 2u);
}

void sub_10024437C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "FMDUnregisterTokenStore removeKeychainItemForKey : nil key given", v1, 2u);
}

void sub_1002443C0()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "FMDUnregisterTokenStore could not delete keychain item for key %@", v2, v3, v4, v5, v6);
}

void sub_100244428(void *a1, NSObject *a2)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  id v6 = [a1 code];
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Could not delete supported accessory registry %@ %li", (uint8_t *)&v3, 0x16u);
}

void sub_1002444C4(void *a1, NSObject *a2)
{
  uint64_t v4 = [a1 supportedAccessory];
  int v5 = 138412546;
  id v6 = a1;
  __int16 v7 = 2112;
  __int16 v8 = v4;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "supportedAccessory %@ %@", (uint8_t *)&v5, 0x16u);
}

void sub_100244574()
{
  sub_10001B9EC();
  sub_100008A30((void *)&_mh_execute_header, v0, v1, "Could not read supported accessories registry from disk %@", v2, v3, v4, v5, v6);
}

void sub_1002445DC()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV4 writeTo:]", "FMDNanoSupportProtoNeedSignatureV4.m", 87, "nil != self->_requestJsonData");
}

void sub_100244608()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV5 writeTo:]", "FMDNanoSupportProtoNeedSignatureV5.m", 87, "nil != self->_requestJsonData");
}

void sub_100244634()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 105, "nil != self->_dsid");
}

void sub_100244660()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 110, "nil != self->_udid");
}

void sub_10024468C()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 115, "nil != self->_serialNumber");
}

void sub_1002446B8()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignature writeTo:]", "FMDNanoSupportProtoNeedSignature.m", 120, "nil != self->_productType");
}

void sub_1002446E4()
{
  __assert_rtn("-[FMDNanoSupportProtoNeedSignatureV3 writeTo:]", "FMDNanoSupportProtoNeedSignatureV3.m", 87, "nil != self->_requestJsonData");
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for ClientOrigin()
{
  return type metadata accessor for ClientOrigin();
}

uint64_t type metadata accessor for RequestOrigin()
{
  return type metadata accessor for RequestOrigin();
}

uint64_t RequestOrigin.init(_:)()
{
  return RequestOrigin.init(_:)();
}

uint64_t type metadata accessor for Session()
{
  return type metadata accessor for Session();
}

uint64_t Session.init(_:)()
{
  return Session.init(_:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t ADClientAddValueForScalarKey()
{
  return _ADClientAddValueForScalarKey();
}

uint64_t ADClientPushValueForDistributionKey()
{
  return _ADClientPushValueForDistributionKey();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return _BYSetupAssistantNeedsToRun();
}

uint64_t CCCryptorGCMOneshotDecrypt()
{
  return _CCCryptorGCMOneshotDecrypt();
}

uint64_t CCCryptorGCMOneshotEncrypt()
{
  return _CCCryptorGCMOneshotEncrypt();
}

CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
{
  return _CCRandomGenerateBytes(bytes, count);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA1(data, len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return _CFDataCreate(allocator, bytes, length);
}

CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef theData)
{
  return _CFDataCreateCopy(allocator, theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return _CFDataGetTypeID();
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return _CFDateFormatterCreate(allocator, locale, dateStyle, timeStyle);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return _CFDateFormatterCreateStringWithDate(allocator, formatter, date);
}

void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString)
{
}

void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value)
{
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return _CFDictionaryGetTypeID();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

uint64_t CFHTTPCookieStorageCreateFromFile()
{
  return _CFHTTPCookieStorageCreateFromFile();
}

uint64_t CFHTTPCookieStorageScheduleWithRunLoop()
{
  return _CFHTTPCookieStorageScheduleWithRunLoop();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return _CFNumberGetValue(number, theType, valuePtr);
}

CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyKeyList(applicationID, userName, hostName);
}

CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyMultiple(keysToFetch, applicationID, userName, hostName);
}

Boolean CFPropertyListIsValid(CFPropertyListRef plist, CFPropertyListFormat format)
{
  return _CFPropertyListIsValid(plist, format);
}

void CFRelease(CFTypeRef cf)
{
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

CFTimeZoneRef CFTimeZoneCreateWithTimeIntervalFromGMT(CFAllocatorRef allocator, CFTimeInterval ti)
{
  return _CFTimeZoneCreateWithTimeIntervalFromGMT(allocator, ti);
}

CFStringRef CFURLCopyPath(CFURLRef anURL)
{
  return _CFURLCopyPath(anURL);
}

CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory)
{
  return _CFURLCreateFromFileSystemRepresentation(allocator, buffer, bufLen, isDirectory);
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return _CFUserNotificationCancel(userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return _CFUserNotificationCreateRunLoopSource(allocator, userNotification, callout, order);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  CLLocationCoordinate2D v4 = _CLLocationCoordinate2DMake(latitude, longitude);
  double v3 = v4.longitude;
  double v2 = v4.latitude;
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

kern_return_t IOConnectCallMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, const void *inputStruct, size_t inputStructCnt, uint64_t *output, uint32_t *outputCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallMethod(connection, selector, input, inputCnt, inputStruct, inputStructCnt, output, outputCnt, outputStruct, outputStructCnt);
}

kern_return_t IOMasterPort(mach_port_t bootstrapPort, mach_port_t *mainPort)
{
  return _IOMasterPort(bootstrapPort, mainPort);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

IOReturn IOPMAssertionCreateWithProperties(CFDictionaryRef AssertionProperties, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithProperties(AssertionProperties, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return _IORegistryEntryCreateCFProperty(entry, key, allocator, options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return _IORegistryEntryFromPath(mainPort, path);
}

kern_return_t IORegistryEntrySetCFProperty(io_registry_entry_t entry, CFStringRef propertyName, CFTypeRef property)
{
  return _IORegistryEntrySetCFProperty(entry, propertyName, property);
}

kern_return_t IOServiceClose(io_connect_t connect)
{
  return _IOServiceClose(connect);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

CFMutableDictionaryRef IOServiceNameMatching(const char *name)
{
  return _IOServiceNameMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t MAECopyPCRTToken()
{
  return _MAECopyPCRTToken();
}

uint64_t MAEGetActivationStateWithError()
{
  return _MAEGetActivationStateWithError();
}

uint64_t MAEPerformCollectionWithCompletion()
{
  return _MAEPerformCollectionWithCompletion();
}

uint64_t MAEReissueUCRTWithError()
{
  return _MAEReissueUCRTWithError();
}

uint64_t MAEUCRTUpgradeRequired()
{
  return _MAEUCRTUpgradeRequired();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGCopyAnswerWithError()
{
  return _MGCopyAnswerWithError();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t NRRawVersionFromString()
{
  return _NRRawVersionFromString();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t SBLockDevice()
{
  return _SBLockDevice();
}

uint64_t SBSSpringBoardServerPort()
{
  return _SBSSpringBoardServerPort();
}

const char *__cdecl SCErrorString(int status)
{
  return _SCErrorString(status);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return _SecKeyCreateSignature(key, algorithm, dataToSign, error);
}

uint64_t SecPolicyCreateAppleFMiPService()
{
  return _SecPolicyCreateAppleFMiPService();
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return _SecTrustEvaluateWithError(trust, error);
}

OSStatus SecTrustSetPolicies(SecTrustRef trust, CFTypeRef policies)
{
  return _SecTrustSetPolicies(trust, policies);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFPreferencesSetDaemonCacheEnabled()
{
  return __CFPreferencesSetDaemonCacheEnabled();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return ___error();
}

void _os_activity_initiate(void *dso, const char *description, os_activity_flag_t flags, os_block_t activity_block)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void *__cdecl calloc(size_t __count, size_t __size)
{
  return _calloc(__count, __size);
}

int close(int a1)
{
  return _close(a1);
}

uint64_t container_system_group_path_for_identifier()
{
  return _container_system_group_path_for_identifier();
}

uint64_t ct_green_tea_logger_create_static()
{
  return _ct_green_tea_logger_create_static();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return _dispatch_get_specific(key);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_release(dispatch_object_t object)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

long double exp(long double __x)
{
  return _exp(__x);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

void free(void *a1)
{
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return _getCTGreenTeaOsLogHandle();
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return _mach_msg(msg, option, send_size, rcv_size, rcv_name, timeout, notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return _memset_s(__s, __smax, __c, __n);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
}

mach_port_t mig_get_reply_port(void)
{
  return _mig_get_reply_port();
}

void mig_put_reply_port(mach_port_t reply_port)
{
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

int sem_close(sem_t *a1)
{
  return _sem_close(a1);
}

sem_t *sem_open(const char *a1, int a2, ...)
{
  return _sem_open(a1, a2);
}

unsigned int sleep(unsigned int a1)
{
  return _sleep(a1);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return _strtol(__str, __endptr, __base);
}

unint64_t strtouq(const char *__str, char **__endptr, int __base)
{
  return _strtouq(__str, __endptr, __base);
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

void syslog(int a1, const char *a2, ...)
{
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return _voucher_mach_msg_set(msg);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return _xpc_activity_copy_criteria(activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return _xpc_activity_get_state(activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return _xpc_activity_set_state(activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return _xpc_activity_should_defer(activity);
}

void xpc_activity_unregister(const char *identifier)
{
}

uint64_t xpc_copy_code_signing_identity_for_token()
{
  return _xpc_copy_code_signing_identity_for_token();
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return [a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return [a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return [a1 UUIDString];
}

id objc_msgSend__abortWipe(void *a1, const char *a2, ...)
{
  return [a1 _abortWipe];
}

id objc_msgSend__accessoryConfigurationDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 _accessoryConfigurationDeviceInfo];
}

id objc_msgSend__accountSecurityLevel(void *a1, const char *a2, ...)
{
  return [a1 _accountSecurityLevel];
}

id objc_msgSend__actionStateString(void *a1, const char *a2, ...)
{
  return [a1 _actionStateString];
}

id objc_msgSend__allAccessories(void *a1, const char *a2, ...)
{
  return [a1 _allAccessories];
}

id objc_msgSend__allowedExtensionsIDForDataSource(void *a1, const char *a2, ...)
{
  return [a1 _allowedExtensionsIDForDataSource];
}

id objc_msgSend__auxiliaryConnection(void *a1, const char *a2, ...)
{
  return [a1 _auxiliaryConnection];
}

id objc_msgSend__cacheLocalState(void *a1, const char *a2, ...)
{
  return [a1 _cacheLocalState];
}

id objc_msgSend__canSendDeviceIdentityNow(void *a1, const char *a2, ...)
{
  return [a1 _canSendDeviceIdentityNow];
}

id objc_msgSend__cancelPublishTimer(void *a1, const char *a2, ...)
{
  return [a1 _cancelPublishTimer];
}

id objc_msgSend__cleanupFMIPPreferences(void *a1, const char *a2, ...)
{
  return [a1 _cleanupFMIPPreferences];
}

id objc_msgSend__clearAllInfo(void *a1, const char *a2, ...)
{
  return [a1 _clearAllInfo];
}

id objc_msgSend__clearQCPendingEpoch(void *a1, const char *a2, ...)
{
  return [a1 _clearQCPendingEpoch];
}

id objc_msgSend__commandHandlers(void *a1, const char *a2, ...)
{
  return [a1 _commandHandlers];
}

id objc_msgSend__completeLocate(void *a1, const char *a2, ...)
{
  return [a1 _completeLocate];
}

id objc_msgSend__constructPairedDevicesInfo(void *a1, const char *a2, ...)
{
  return [a1 _constructPairedDevicesInfo];
}

id objc_msgSend__createLocationManager(void *a1, const char *a2, ...)
{
  return [a1 _createLocationManager];
}

id objc_msgSend__createLocationManagerForStewie(void *a1, const char *a2, ...)
{
  return [a1 _createLocationManagerForStewie];
}

id objc_msgSend__currentFMDFMIPAccount(void *a1, const char *a2, ...)
{
  return [a1 _currentFMDFMIPAccount];
}

id objc_msgSend__defaultClassTypeMap(void *a1, const char *a2, ...)
{
  return [a1 _defaultClassTypeMap];
}

id objc_msgSend__defaultObjectTypeKeys(void *a1, const char *a2, ...)
{
  return [a1 _defaultObjectTypeKeys];
}

id objc_msgSend__destroySession(void *a1, const char *a2, ...)
{
  return [a1 _destroySession];
}

id objc_msgSend__deviceIdentifiersForSignature(void *a1, const char *a2, ...)
{
  return [a1 _deviceIdentifiersForSignature];
}

id objc_msgSend__emptyFolderURLs(void *a1, const char *a2, ...)
{
  return [a1 _emptyFolderURLs];
}

id objc_msgSend__enqueueQCAction(void *a1, const char *a2, ...)
{
  return [a1 _enqueueQCAction];
}

id objc_msgSend__executePlaySoundUsingExtensions(void *a1, const char *a2, ...)
{
  return [a1 _executePlaySoundUsingExtensions];
}

id objc_msgSend__extraRegistrationInformation(void *a1, const char *a2, ...)
{
  return [a1 _extraRegistrationInformation];
}

id objc_msgSend__fetchOfflineFindingInfoInternal(void *a1, const char *a2, ...)
{
  return [a1 _fetchOfflineFindingInfoInternal];
}

id objc_msgSend__finishAction(void *a1, const char *a2, ...)
{
  return [a1 _finishAction];
}

id objc_msgSend__fmDataProtectionClass(void *a1, const char *a2, ...)
{
  return [a1 _fmDataProtectionClass];
}

id objc_msgSend__hasAuthAccessEntitlement(void *a1, const char *a2, ...)
{
  return [a1 _hasAuthAccessEntitlement];
}

id objc_msgSend__hasClientAccessEntitlement(void *a1, const char *a2, ...)
{
  return [a1 _hasClientAccessEntitlement];
}

id objc_msgSend__hasRepairDeviceAccessEntitlement(void *a1, const char *a2, ...)
{
  return [a1 _hasRepairDeviceAccessEntitlement];
}

id objc_msgSend__hasUCRTHealingAccessEntitlement(void *a1, const char *a2, ...)
{
  return [a1 _hasUCRTHealingAccessEntitlement];
}

id objc_msgSend__initWithDefaults(void *a1, const char *a2, ...)
{
  return [a1 _initWithDefaults];
}

id objc_msgSend__isBeneficiaryAccount(void *a1, const char *a2, ...)
{
  return [a1 _isBeneficiaryAccount];
}

id objc_msgSend__isFeatureEnabled(void *a1, const char *a2, ...)
{
  return [a1 _isFeatureEnabled];
}

id objc_msgSend__isWithinDaemonStartupThreshold(void *a1, const char *a2, ...)
{
  return [a1 _isWithinDaemonStartupThreshold];
}

id objc_msgSend__loadFromDisk(void *a1, const char *a2, ...)
{
  return [a1 _loadFromDisk];
}

id objc_msgSend__loadLostModeInfo(void *a1, const char *a2, ...)
{
  return [a1 _loadLostModeInfo];
}

id objc_msgSend__loadTestAccount(void *a1, const char *a2, ...)
{
  return [a1 _loadTestAccount];
}

id objc_msgSend__loadTrackingInfo(void *a1, const char *a2, ...)
{
  return [a1 _loadTrackingInfo];
}

id objc_msgSend__locKeyForALEnabled(void *a1, const char *a2, ...)
{
  return [a1 _locKeyForALEnabled];
}

id objc_msgSend__locKeyForOfflineFindingEnabled(void *a1, const char *a2, ...)
{
  return [a1 _locKeyForOfflineFindingEnabled];
}

id objc_msgSend__locationCacheFileName(void *a1, const char *a2, ...)
{
  return [a1 _locationCacheFileName];
}

id objc_msgSend__monitorWatchBLEStatus(void *a1, const char *a2, ...)
{
  return [a1 _monitorWatchBLEStatus];
}

id objc_msgSend__networkCameUp(void *a1, const char *a2, ...)
{
  return [a1 _networkCameUp];
}

id objc_msgSend__newCLLocationManager(void *a1, const char *a2, ...)
{
  return [a1 _newCLLocationManager];
}

id objc_msgSend__notifyAboutLocatingState(void *a1, const char *a2, ...)
{
  return [a1 _notifyAboutLocatingState];
}

id objc_msgSend__performPostStartupTasks(void *a1, const char *a2, ...)
{
  return [a1 _performPostStartupTasks];
}

id objc_msgSend__persistedLastPublishedTimestamp(void *a1, const char *a2, ...)
{
  return [a1 _persistedLastPublishedTimestamp];
}

id objc_msgSend__postLocalActivationLockInfoChangedNotification(void *a1, const char *a2, ...)
{
  return [a1 _postLocalActivationLockInfoChangedNotification];
}

id objc_msgSend__publishHeartbeatIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 _publishHeartbeatIfNeeded];
}

id objc_msgSend__readExistingConfigFile(void *a1, const char *a2, ...)
{
  return [a1 _readExistingConfigFile];
}

id objc_msgSend__readIODeviceSupportsFindMy(void *a1, const char *a2, ...)
{
  return [a1 _readIODeviceSupportsFindMy];
}

id objc_msgSend__reasonForStartupRegister(void *a1, const char *a2, ...)
{
  return [a1 _reasonForStartupRegister];
}

id objc_msgSend__registerForOnDemandPublishRequest(void *a1, const char *a2, ...)
{
  return [a1 _registerForOnDemandPublishRequest];
}

id objc_msgSend__registerForStewiePublishRequest(void *a1, const char *a2, ...)
{
  return [a1 _registerForStewiePublishRequest];
}

id objc_msgSend__registerIDSHandlers(void *a1, const char *a2, ...)
{
  return [a1 _registerIDSHandlers];
}

id objc_msgSend__retrieveLocationNow(void *a1, const char *a2, ...)
{
  return [a1 _retrieveLocationNow];
}

id objc_msgSend__retryNow(void *a1, const char *a2, ...)
{
  return [a1 _retryNow];
}

id objc_msgSend__saveChanges(void *a1, const char *a2, ...)
{
  return [a1 _saveChanges];
}

id objc_msgSend__saveInfo(void *a1, const char *a2, ...)
{
  return [a1 _saveInfo];
}

id objc_msgSend__scheduleXPCActivity(void *a1, const char *a2, ...)
{
  return [a1 _scheduleXPCActivity];
}

id objc_msgSend__sendStartupRegister(void *a1, const char *a2, ...)
{
  return [a1 _sendStartupRegister];
}

id objc_msgSend__sendTrackedLocations(void *a1, const char *a2, ...)
{
  return [a1 _sendTrackedLocations];
}

id objc_msgSend__sendWipeAck(void *a1, const char *a2, ...)
{
  return [a1 _sendWipeAck];
}

id objc_msgSend__setupRegions(void *a1, const char *a2, ...)
{
  return [a1 _setupRegions];
}

id objc_msgSend__setupSKUs(void *a1, const char *a2, ...)
{
  return [a1 _setupSKUs];
}

id objc_msgSend__setupSPStatusListener(void *a1, const char *a2, ...)
{
  return [a1 _setupSPStatusListener];
}

id objc_msgSend__shouldThrottleDeviceRestartRegister(void *a1, const char *a2, ...)
{
  return [a1 _shouldThrottleDeviceRestartRegister];
}

id objc_msgSend__startCleaningEmptyFolders(void *a1, const char *a2, ...)
{
  return [a1 _startCleaningEmptyFolders];
}

id objc_msgSend__stopDiscoveryForExtAccessory(void *a1, const char *a2, ...)
{
  return [a1 _stopDiscoveryForExtAccessory];
}

id objc_msgSend__stopFallbackRetryTimer(void *a1, const char *a2, ...)
{
  return [a1 _stopFallbackRetryTimer];
}

id objc_msgSend__stopLocator(void *a1, const char *a2, ...)
{
  return [a1 _stopLocator];
}

id objc_msgSend__stopTracking(void *a1, const char *a2, ...)
{
  return [a1 _stopTracking];
}

id objc_msgSend__storeLostModeInfo(void *a1, const char *a2, ...)
{
  return [a1 _storeLostModeInfo];
}

id objc_msgSend__storeTrackingInfo(void *a1, const char *a2, ...)
{
  return [a1 _storeTrackingInfo];
}

id objc_msgSend__trackedLocationsCacheFileURL(void *a1, const char *a2, ...)
{
  return [a1 _trackedLocationsCacheFileURL];
}

id objc_msgSend__unregisterFromOnDemandPublishRequest(void *a1, const char *a2, ...)
{
  return [a1 _unregisterFromOnDemandPublishRequest];
}

id objc_msgSend__unregisterFromStewiePublishRequest(void *a1, const char *a2, ...)
{
  return [a1 _unregisterFromStewiePublishRequest];
}

id objc_msgSend__updateBLEStatus(void *a1, const char *a2, ...)
{
  return [a1 _updateBLEStatus];
}

id objc_msgSend__updateDisk(void *a1, const char *a2, ...)
{
  return [a1 _updateDisk];
}

id objc_msgSend__updateFallbackRetryTimer(void *a1, const char *a2, ...)
{
  return [a1 _updateFallbackRetryTimer];
}

id objc_msgSend__updateLocationServicesState(void *a1, const char *a2, ...)
{
  return [a1 _updateLocationServicesState];
}

id objc_msgSend__updateRealmPrefs(void *a1, const char *a2, ...)
{
  return [a1 _updateRealmPrefs];
}

id objc_msgSend__vibrationPattern(void *a1, const char *a2, ...)
{
  return [a1 _vibrationPattern];
}

id objc_msgSend__wipeNow(void *a1, const char *a2, ...)
{
  return [a1 _wipeNow];
}

id objc_msgSend__writeToDisk(void *a1, const char *a2, ...)
{
  return [a1 _writeToDisk];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return [a1 absoluteString];
}

id objc_msgSend_accessibilityFontSizeEnabled(void *a1, const char *a2, ...)
{
  return [a1 accessibilityFontSizeEnabled];
}

id objc_msgSend_accessoriesByExtension(void *a1, const char *a2, ...)
{
  return [a1 accessoriesByExtension];
}

id objc_msgSend_accessoriesByIdentifier(void *a1, const char *a2, ...)
{
  return [a1 accessoriesByIdentifier];
}

id objc_msgSend_accessoriesNeedUnregister(void *a1, const char *a2, ...)
{
  return [a1 accessoriesNeedUnregister];
}

id objc_msgSend_accessoriesQueue(void *a1, const char *a2, ...)
{
  return [a1 accessoriesQueue];
}

id objc_msgSend_accessory(void *a1, const char *a2, ...)
{
  return [a1 accessory];
}

id objc_msgSend_accessoryIdentifier(void *a1, const char *a2, ...)
{
  return [a1 accessoryIdentifier];
}

id objc_msgSend_accessoryInfo(void *a1, const char *a2, ...)
{
  return [a1 accessoryInfo];
}

id objc_msgSend_accessoryLocationStore(void *a1, const char *a2, ...)
{
  return [a1 accessoryLocationStore];
}

id objc_msgSend_accessoryLocations(void *a1, const char *a2, ...)
{
  return [a1 accessoryLocations];
}

id objc_msgSend_accessoryPairingURL(void *a1, const char *a2, ...)
{
  return [a1 accessoryPairingURL];
}

id objc_msgSend_accessoryQueue(void *a1, const char *a2, ...)
{
  return [a1 accessoryQueue];
}

id objc_msgSend_accessoryRSSI(void *a1, const char *a2, ...)
{
  return [a1 accessoryRSSI];
}

id objc_msgSend_accessoryRegistry(void *a1, const char *a2, ...)
{
  return [a1 accessoryRegistry];
}

id objc_msgSend_accessoryRegistryDelegateAdaptor(void *a1, const char *a2, ...)
{
  return [a1 accessoryRegistryDelegateAdaptor];
}

id objc_msgSend_accessoryType(void *a1, const char *a2, ...)
{
  return [a1 accessoryType];
}

id objc_msgSend_accessoryTypes(void *a1, const char *a2, ...)
{
  return [a1 accessoryTypes];
}

id objc_msgSend_accessoryUpdateFuture(void *a1, const char *a2, ...)
{
  return [a1 accessoryUpdateFuture];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return [a1 account];
}

id objc_msgSend_accountAddTime(void *a1, const char *a2, ...)
{
  return [a1 accountAddTime];
}

id objc_msgSend_accountAdded(void *a1, const char *a2, ...)
{
  return [a1 accountAdded];
}

id objc_msgSend_accountForRepair(void *a1, const char *a2, ...)
{
  return [a1 accountForRepair];
}

id objc_msgSend_accountInfoDidChange(void *a1, const char *a2, ...)
{
  return [a1 accountInfoDidChange];
}

id objc_msgSend_accountReadWriteLock(void *a1, const char *a2, ...)
{
  return [a1 accountReadWriteLock];
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return [a1 accountStore];
}

id objc_msgSend_accountsFileURL(void *a1, const char *a2, ...)
{
  return [a1 accountsFileURL];
}

id objc_msgSend_accountsNotBackedUpFileURL(void *a1, const char *a2, ...)
{
  return [a1 accountsNotBackedUpFileURL];
}

id objc_msgSend_accuracyChange(void *a1, const char *a2, ...)
{
  return [a1 accuracyChange];
}

id objc_msgSend_ackDataForCommand(void *a1, const char *a2, ...)
{
  return [a1 ackDataForCommand];
}

id objc_msgSend_actionCompletion(void *a1, const char *a2, ...)
{
  return [a1 actionCompletion];
}

id objc_msgSend_actionExecutionQueue(void *a1, const char *a2, ...)
{
  return [a1 actionExecutionQueue];
}

id objc_msgSend_actionId(void *a1, const char *a2, ...)
{
  return [a1 actionId];
}

id objc_msgSend_actionQueueMap(void *a1, const char *a2, ...)
{
  return [a1 actionQueueMap];
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return [a1 actionType];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return [a1 activate];
}

id objc_msgSend_activationLockBypassHash(void *a1, const char *a2, ...)
{
  return [a1 activationLockBypassHash];
}

id objc_msgSend_activationLockRequestUUID(void *a1, const char *a2, ...)
{
  return [a1 activationLockRequestUUID];
}

id objc_msgSend_activationLockRequestUUIDString(void *a1, const char *a2, ...)
{
  return [a1 activationLockRequestUUIDString];
}

id objc_msgSend_activationLockStatus(void *a1, const char *a2, ...)
{
  return [a1 activationLockStatus];
}

id objc_msgSend_active(void *a1, const char *a2, ...)
{
  return [a1 active];
}

id objc_msgSend_activeConfig(void *a1, const char *a2, ...)
{
  return [a1 activeConfig];
}

id objc_msgSend_activeMessage(void *a1, const char *a2, ...)
{
  return [a1 activeMessage];
}

id objc_msgSend_activePairedDevice(void *a1, const char *a2, ...)
{
  return [a1 activePairedDevice];
}

id objc_msgSend_activePairedDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return [a1 activePairedDeviceSelectorBlock];
}

id objc_msgSend_activePolicies(void *a1, const char *a2, ...)
{
  return [a1 activePolicies];
}

id objc_msgSend_activeServiceProvider(void *a1, const char *a2, ...)
{
  return [a1 activeServiceProvider];
}

id objc_msgSend_activeTokens(void *a1, const char *a2, ...)
{
  return [a1 activeTokens];
}

id objc_msgSend_activityHandler(void *a1, const char *a2, ...)
{
  return [a1 activityHandler];
}

id objc_msgSend_activityStartDate(void *a1, const char *a2, ...)
{
  return [a1 activityStartDate];
}

id objc_msgSend_activityState(void *a1, const char *a2, ...)
{
  return [a1 activityState];
}

id objc_msgSend_activityUpdateQueue(void *a1, const char *a2, ...)
{
  return [a1 activityUpdateQueue];
}

id objc_msgSend_addObservers(void *a1, const char *a2, ...)
{
  return [a1 addObservers];
}

id objc_msgSend_additionalInfo(void *a1, const char *a2, ...)
{
  return [a1 additionalInfo];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return [a1 address];
}

id objc_msgSend_adsid(void *a1, const char *a2, ...)
{
  return [a1 adsid];
}

id objc_msgSend_advertisementFields(void *a1, const char *a2, ...)
{
  return [a1 advertisementFields];
}

id objc_msgSend_alCapability(void *a1, const char *a2, ...)
{
  return [a1 alCapability];
}

id objc_msgSend_alertFromServerResponse(void *a1, const char *a2, ...)
{
  return [a1 alertFromServerResponse];
}

id objc_msgSend_allAccessories(void *a1, const char *a2, ...)
{
  return [a1 allAccessories];
}

id objc_msgSend_allHeaderFields(void *a1, const char *a2, ...)
{
  return [a1 allHeaderFields];
}

id objc_msgSend_allKeychainLookupKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeychainLookupKeys];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return [a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return [a1 allObjects];
}

id objc_msgSend_allTokenKeys(void *a1, const char *a2, ...)
{
  return [a1 allTokenKeys];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return [a1 allValues];
}

id objc_msgSend_allowsActivationLock(void *a1, const char *a2, ...)
{
  return [a1 allowsActivationLock];
}

id objc_msgSend_alternateButtonAction(void *a1, const char *a2, ...)
{
  return [a1 alternateButtonAction];
}

id objc_msgSend_alternateButtonTitle(void *a1, const char *a2, ...)
{
  return [a1 alternateButtonTitle];
}

id objc_msgSend_alternateSerialNumber(void *a1, const char *a2, ...)
{
  return [a1 alternateSerialNumber];
}

id objc_msgSend_altitude(void *a1, const char *a2, ...)
{
  return [a1 altitude];
}

id objc_msgSend_appleAccountIdentifier(void *a1, const char *a2, ...)
{
  return [a1 appleAccountIdentifier];
}

id objc_msgSend_apsEnv(void *a1, const char *a2, ...)
{
  return [a1 apsEnv];
}

id objc_msgSend_apsEnvironment(void *a1, const char *a2, ...)
{
  return [a1 apsEnvironment];
}

id objc_msgSend_apsEnvironmentConstant(void *a1, const char *a2, ...)
{
  return [a1 apsEnvironmentConstant];
}

id objc_msgSend_apsHandlers(void *a1, const char *a2, ...)
{
  return [a1 apsHandlers];
}

id objc_msgSend_apsHandlersModQueue(void *a1, const char *a2, ...)
{
  return [a1 apsHandlersModQueue];
}

id objc_msgSend_apsToken(void *a1, const char *a2, ...)
{
  return [a1 apsToken];
}

id objc_msgSend_archiver(void *a1, const char *a2, ...)
{
  return [a1 archiver];
}

id objc_msgSend_armRatchetIfNeeded(void *a1, const char *a2, ...)
{
  return [a1 armRatchetIfNeeded];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return [a1 array];
}

id objc_msgSend_assertionsDict(void *a1, const char *a2, ...)
{
  return [a1 assertionsDict];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return [a1 asset];
}

id objc_msgSend_assetRegistry(void *a1, const char *a2, ...)
{
  return [a1 assetRegistry];
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return [a1 assetType];
}

id objc_msgSend_assets(void *a1, const char *a2, ...)
{
  return [a1 assets];
}

id objc_msgSend_assetsByURL(void *a1, const char *a2, ...)
{
  return [a1 assetsByURL];
}

id objc_msgSend_attestation(void *a1, const char *a2, ...)
{
  return [a1 attestation];
}

id objc_msgSend_audioAsset(void *a1, const char *a2, ...)
{
  return [a1 audioAsset];
}

id objc_msgSend_audioChannelInfo(void *a1, const char *a2, ...)
{
  return [a1 audioChannelInfo];
}

id objc_msgSend_audioChannelsByName(void *a1, const char *a2, ...)
{
  return [a1 audioChannelsByName];
}

id objc_msgSend_audioRoutingIdentifier(void *a1, const char *a2, ...)
{
  return [a1 audioRoutingIdentifier];
}

id objc_msgSend_audioSafetyStatus(void *a1, const char *a2, ...)
{
  return [a1 audioSafetyStatus];
}

id objc_msgSend_audioState(void *a1, const char *a2, ...)
{
  return [a1 audioState];
}

id objc_msgSend_audioStateStatus(void *a1, const char *a2, ...)
{
  return [a1 audioStateStatus];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return [a1 auditToken];
}

id objc_msgSend_authHeaderValue(void *a1, const char *a2, ...)
{
  return [a1 authHeaderValue];
}

id objc_msgSend_authId(void *a1, const char *a2, ...)
{
  return [a1 authId];
}

id objc_msgSend_authInvalidError(void *a1, const char *a2, ...)
{
  return [a1 authInvalidError];
}

id objc_msgSend_authNonce(void *a1, const char *a2, ...)
{
  return [a1 authNonce];
}

id objc_msgSend_authToken(void *a1, const char *a2, ...)
{
  return [a1 authToken];
}

id objc_msgSend_authTokenHealingQueue(void *a1, const char *a2, ...)
{
  return [a1 authTokenHealingQueue];
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return [a1 authenticationMethod];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return [a1 authorizationStatus];
}

id objc_msgSend_automationHelperBundle(void *a1, const char *a2, ...)
{
  return [a1 automationHelperBundle];
}

id objc_msgSend_automotive(void *a1, const char *a2, ...)
{
  return [a1 automotive];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return [a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availability(void *a1, const char *a2, ...)
{
  return [a1 availability];
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return [a1 available];
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return [a1 availableDevices];
}

id objc_msgSend_baRegistrationStatus(void *a1, const char *a2, ...)
{
  return [a1 baRegistrationStatus];
}

id objc_msgSend_baUUID(void *a1, const char *a2, ...)
{
  return [a1 baUUID];
}

id objc_msgSend_baaAttestationHeader(void *a1, const char *a2, ...)
{
  return [a1 baaAttestationHeader];
}

id objc_msgSend_baaError(void *a1, const char *a2, ...)
{
  return [a1 baaError];
}

id objc_msgSend_baaErrorDescription(void *a1, const char *a2, ...)
{
  return [a1 baaErrorDescription];
}

id objc_msgSend_baaIdentityTimeoutIntervalInSec(void *a1, const char *a2, ...)
{
  return [a1 baaIdentityTimeoutIntervalInSec];
}

id objc_msgSend_baaSignatureHeader(void *a1, const char *a2, ...)
{
  return [a1 baaSignatureHeader];
}

id objc_msgSend_backOfEnclosureColor(void *a1, const char *a2, ...)
{
  return [a1 backOfEnclosureColor];
}

id objc_msgSend_backedUpDataArchiver(void *a1, const char *a2, ...)
{
  return [a1 backedUpDataArchiver];
}

id objc_msgSend_base64EncodedString(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedString];
}

id objc_msgSend_baseIdentifierKey(void *a1, const char *a2, ...)
{
  return [a1 baseIdentifierKey];
}

id objc_msgSend_baseStoragePath(void *a1, const char *a2, ...)
{
  return [a1 baseStoragePath];
}

id objc_msgSend_baseURL(void *a1, const char *a2, ...)
{
  return [a1 baseURL];
}

id objc_msgSend_batteryInfo(void *a1, const char *a2, ...)
{
  return [a1 batteryInfo];
}

id objc_msgSend_batteryLevel(void *a1, const char *a2, ...)
{
  return [a1 batteryLevel];
}

id objc_msgSend_beaconIdentifier(void *a1, const char *a2, ...)
{
  return [a1 beaconIdentifier];
}

id objc_msgSend_beaconLastKeyRollDate(void *a1, const char *a2, ...)
{
  return [a1 beaconLastKeyRollDate];
}

id objc_msgSend_beaconZoneCreationDate(void *a1, const char *a2, ...)
{
  return [a1 beaconZoneCreationDate];
}

id objc_msgSend_beaconZoneCreationErrorCode(void *a1, const char *a2, ...)
{
  return [a1 beaconZoneCreationErrorCode];
}

id objc_msgSend_beacons(void *a1, const char *a2, ...)
{
  return [a1 beacons];
}

id objc_msgSend_beaconsByIdentifier(void *a1, const char *a2, ...)
{
  return [a1 beaconsByIdentifier];
}

id objc_msgSend_bioLockState(void *a1, const char *a2, ...)
{
  return [a1 bioLockState];
}

id objc_msgSend_blePowerStatus(void *a1, const char *a2, ...)
{
  return [a1 blePowerStatus];
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return [a1 block];
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return [a1 bluetoothAddress];
}

id objc_msgSend_bluetoothColorCode(void *a1, const char *a2, ...)
{
  return [a1 bluetoothColorCode];
}

id objc_msgSend_bluetoothConnected(void *a1, const char *a2, ...)
{
  return [a1 bluetoothConnected];
}

id objc_msgSend_bluetoothDevice(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDevice];
}

id objc_msgSend_bluetoothDeviceProductId(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDeviceProductId];
}

id objc_msgSend_bluetoothDeviceVendor(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDeviceVendor];
}

id objc_msgSend_bluetoothDiscoveryQueue(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDiscoveryQueue];
}

id objc_msgSend_bluetoothMajorDeviceClass(void *a1, const char *a2, ...)
{
  return [a1 bluetoothMajorDeviceClass];
}

id objc_msgSend_bluetoothManager(void *a1, const char *a2, ...)
{
  return [a1 bluetoothManager];
}

id objc_msgSend_bluetoothManagerDevice(void *a1, const char *a2, ...)
{
  return [a1 bluetoothManagerDevice];
}

id objc_msgSend_bluetoothManagerDevicesByAddress(void *a1, const char *a2, ...)
{
  return [a1 bluetoothManagerDevicesByAddress];
}

id objc_msgSend_bluetoothManagerQueue(void *a1, const char *a2, ...)
{
  return [a1 bluetoothManagerQueue];
}

id objc_msgSend_bluetoothManagerQueueSynchronizer(void *a1, const char *a2, ...)
{
  return [a1 bluetoothManagerQueueSynchronizer];
}

id objc_msgSend_bluetoothMinorDeviceClass(void *a1, const char *a2, ...)
{
  return [a1 bluetoothMinorDeviceClass];
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return [a1 body];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue];
}

id objc_msgSend_btAddress(void *a1, const char *a2, ...)
{
  return [a1 btAddress];
}

id objc_msgSend_btDiscoveryConfiguration(void *a1, const char *a2, ...)
{
  return [a1 btDiscoveryConfiguration];
}

id objc_msgSend_btMacAddress(void *a1, const char *a2, ...)
{
  return [a1 btMacAddress];
}

id objc_msgSend_buddyWaitTimer(void *a1, const char *a2, ...)
{
  return [a1 buddyWaitTimer];
}

id objc_msgSend_build(void *a1, const char *a2, ...)
{
  return [a1 build];
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return [a1 buildVersion];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return [a1 bundleIdentifier];
}

id objc_msgSend_bypassInEarCheck(void *a1, const char *a2, ...)
{
  return [a1 bypassInEarCheck];
}

id objc_msgSend_bystanderLocationManager(void *a1, const char *a2, ...)
{
  return [a1 bystanderLocationManager];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return [a1 bytes];
}

id objc_msgSend_cacheValidityDuration(void *a1, const char *a2, ...)
{
  return [a1 cacheValidityDuration];
}

id objc_msgSend_cachedLocValidityDuration(void *a1, const char *a2, ...)
{
  return [a1 cachedLocValidityDuration];
}

id objc_msgSend_cachedLocationValidityTimeInterval(void *a1, const char *a2, ...)
{
  return [a1 cachedLocationValidityTimeInterval];
}

id objc_msgSend_cachedLogFileURL(void *a1, const char *a2, ...)
{
  return [a1 cachedLogFileURL];
}

id objc_msgSend_calculateFirstRunStatus(void *a1, const char *a2, ...)
{
  return [a1 calculateFirstRunStatus];
}

id objc_msgSend_canHandleLocates(void *a1, const char *a2, ...)
{
  return [a1 canHandleLocates];
}

id objc_msgSend_canRequestBeRetriedNow(void *a1, const char *a2, ...)
{
  return [a1 canRequestBeRetriedNow];
}

id objc_msgSend_canRetrieveLockedRecords(void *a1, const char *a2, ...)
{
  return [a1 canRetrieveLockedRecords];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return [a1 cancel];
}

id objc_msgSend_cancelAllActions(void *a1, const char *a2, ...)
{
  return [a1 cancelAllActions];
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return [a1 cancelAllOperations];
}

id objc_msgSend_cancelAllRequests(void *a1, const char *a2, ...)
{
  return [a1 cancelAllRequests];
}

id objc_msgSend_cancelRefresh(void *a1, const char *a2, ...)
{
  return [a1 cancelRefresh];
}

id objc_msgSend_cancelTimer(void *a1, const char *a2, ...)
{
  return [a1 cancelTimer];
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return [a1 cancelled];
}

id objc_msgSend_category(void *a1, const char *a2, ...)
{
  return [a1 category];
}

id objc_msgSend_categoryIdentifier(void *a1, const char *a2, ...)
{
  return [a1 categoryIdentifier];
}

id objc_msgSend_cause(void *a1, const char *a2, ...)
{
  return [a1 cause];
}

id objc_msgSend_cfNotification(void *a1, const char *a2, ...)
{
  return [a1 cfNotification];
}

id objc_msgSend_channelName(void *a1, const char *a2, ...)
{
  return [a1 channelName];
}

id objc_msgSend_channels(void *a1, const char *a2, ...)
{
  return [a1 channels];
}

id objc_msgSend_checkAndScheduleRetries(void *a1, const char *a2, ...)
{
  return [a1 checkAndScheduleRetries];
}

id objc_msgSend_checkInAllAPSHandlers(void *a1, const char *a2, ...)
{
  return [a1 checkInAllAPSHandlers];
}

id objc_msgSend_checkShutdownSoonRegistration(void *a1, const char *a2, ...)
{
  return [a1 checkShutdownSoonRegistration];
}

id objc_msgSend_chipId(void *a1, const char *a2, ...)
{
  return [a1 chipId];
}

id objc_msgSend_cipher(void *a1, const char *a2, ...)
{
  return [a1 cipher];
}

id objc_msgSend_classTypeMapping(void *a1, const char *a2, ...)
{
  return [a1 classTypeMapping];
}

id objc_msgSend_cleanAccountKeys(void *a1, const char *a2, ...)
{
  return [a1 cleanAccountKeys];
}

id objc_msgSend_cleanupContexts(void *a1, const char *a2, ...)
{
  return [a1 cleanupContexts];
}

id objc_msgSend_cleanupEmptyFolders(void *a1, const char *a2, ...)
{
  return [a1 cleanupEmptyFolders];
}

id objc_msgSend_cleanupPostWipe(void *a1, const char *a2, ...)
{
  return [a1 cleanupPostWipe];
}

id objc_msgSend_cleanupTask(void *a1, const char *a2, ...)
{
  return [a1 cleanupTask];
}

id objc_msgSend_clearAccessoryLocationStore(void *a1, const char *a2, ...)
{
  return [a1 clearAccessoryLocationStore];
}

id objc_msgSend_clearAccessoryRegistry(void *a1, const char *a2, ...)
{
  return [a1 clearAccessoryRegistry];
}

id objc_msgSend_clearAllRecords(void *a1, const char *a2, ...)
{
  return [a1 clearAllRecords];
}

id objc_msgSend_clearAllState(void *a1, const char *a2, ...)
{
  return [a1 clearAllState];
}

id objc_msgSend_clearAssetRegistry(void *a1, const char *a2, ...)
{
  return [a1 clearAssetRegistry];
}

id objc_msgSend_clearCache(void *a1, const char *a2, ...)
{
  return [a1 clearCache];
}

id objc_msgSend_clearDataStore(void *a1, const char *a2, ...)
{
  return [a1 clearDataStore];
}

id objc_msgSend_clearFutures(void *a1, const char *a2, ...)
{
  return [a1 clearFutures];
}

id objc_msgSend_clearMaskedAppleID(void *a1, const char *a2, ...)
{
  return [a1 clearMaskedAppleID];
}

id objc_msgSend_clearMaskedAppleIDValue(void *a1, const char *a2, ...)
{
  return [a1 clearMaskedAppleIDValue];
}

id objc_msgSend_clearOfflineFindingInfo(void *a1, const char *a2, ...)
{
  return [a1 clearOfflineFindingInfo];
}

id objc_msgSend_clearSupportedAccessoryRegistry(void *a1, const char *a2, ...)
{
  return [a1 clearSupportedAccessoryRegistry];
}

id objc_msgSend_clearUnregisterTokens(void *a1, const char *a2, ...)
{
  return [a1 clearUnregisterTokens];
}

id objc_msgSend_cmdStatusCode(void *a1, const char *a2, ...)
{
  return [a1 cmdStatusCode];
}

id objc_msgSend_cmdStatusMsg(void *a1, const char *a2, ...)
{
  return [a1 cmdStatusMsg];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return [a1 code];
}

id objc_msgSend_collectionObjectClass(void *a1, const char *a2, ...)
{
  return [a1 collectionObjectClass];
}

id objc_msgSend_collectionObjectKeyType(void *a1, const char *a2, ...)
{
  return [a1 collectionObjectKeyType];
}

id objc_msgSend_colorCode(void *a1, const char *a2, ...)
{
  return [a1 colorCode];
}

id objc_msgSend_colorCodeCase(void *a1, const char *a2, ...)
{
  return [a1 colorCodeCase];
}

id objc_msgSend_colorCodeLeft(void *a1, const char *a2, ...)
{
  return [a1 colorCodeLeft];
}

id objc_msgSend_colorCodeRight(void *a1, const char *a2, ...)
{
  return [a1 colorCodeRight];
}

id objc_msgSend_commandContext(void *a1, const char *a2, ...)
{
  return [a1 commandContext];
}

id objc_msgSend_commandContextUUID(void *a1, const char *a2, ...)
{
  return [a1 commandContextUUID];
}

id objc_msgSend_commandID(void *a1, const char *a2, ...)
{
  return [a1 commandID];
}

id objc_msgSend_commandName(void *a1, const char *a2, ...)
{
  return [a1 commandName];
}

id objc_msgSend_commandParams(void *a1, const char *a2, ...)
{
  return [a1 commandParams];
}

id objc_msgSend_comparisonPublishers(void *a1, const char *a2, ...)
{
  return [a1 comparisonPublishers];
}

id objc_msgSend_completeDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 completeDeviceInfo];
}

id objc_msgSend_completed(void *a1, const char *a2, ...)
{
  return [a1 completed];
}

id objc_msgSend_completedStartupRegister(void *a1, const char *a2, ...)
{
  return [a1 completedStartupRegister];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return [a1 completion];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return [a1 completionHandler];
}

id objc_msgSend_computeAccessoryRegistry(void *a1, const char *a2, ...)
{
  return [a1 computeAccessoryRegistry];
}

id objc_msgSend_config(void *a1, const char *a2, ...)
{
  return [a1 config];
}

id objc_msgSend_configManager(void *a1, const char *a2, ...)
{
  return [a1 configManager];
}

id objc_msgSend_configurations(void *a1, const char *a2, ...)
{
  return [a1 configurations];
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return [a1 connected];
}

id objc_msgSend_connectedAccessories(void *a1, const char *a2, ...)
{
  return [a1 connectedAccessories];
}

id objc_msgSend_connectedAccessoryIdentifiers(void *a1, const char *a2, ...)
{
  return [a1 connectedAccessoryIdentifiers];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return [a1 connection];
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return [a1 connectionState];
}

id objc_msgSend_connectionStatusString(void *a1, const char *a2, ...)
{
  return [a1 connectionStatusString];
}

id objc_msgSend_consecutiveRetriesByType(void *a1, const char *a2, ...)
{
  return [a1 consecutiveRetriesByType];
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return [a1 container];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return [a1 context];
}

id objc_msgSend_contextDictionary(void *a1, const char *a2, ...)
{
  return [a1 contextDictionary];
}

id objc_msgSend_contextForPrimaryAccount(void *a1, const char *a2, ...)
{
  return [a1 contextForPrimaryAccount];
}

id objc_msgSend_contextKey(void *a1, const char *a2, ...)
{
  return [a1 contextKey];
}

id objc_msgSend_contextUUID(void *a1, const char *a2, ...)
{
  return [a1 contextUUID];
}

id objc_msgSend_convertToSecureLocationObject(void *a1, const char *a2, ...)
{
  return [a1 convertToSecureLocationObject];
}

id objc_msgSend_cookieStorage(void *a1, const char *a2, ...)
{
  return [a1 cookieStorage];
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return [a1 coordinate];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return [a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return [a1 count];
}

id objc_msgSend_course(void *a1, const char *a2, ...)
{
  return [a1 course];
}

id objc_msgSend_coverGlassColor(void *a1, const char *a2, ...)
{
  return [a1 coverGlassColor];
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return [a1 creationDate];
}

id objc_msgSend_criteriaMetBlock(void *a1, const char *a2, ...)
{
  return [a1 criteriaMetBlock];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return [a1 currentConnection];
}

id objc_msgSend_currentDeviceSKURegion(void *a1, const char *a2, ...)
{
  return [a1 currentDeviceSKURegion];
}

id objc_msgSend_currentLastActiveTime(void *a1, const char *a2, ...)
{
  return [a1 currentLastActiveTime];
}

id objc_msgSend_currentLocation(void *a1, const char *a2, ...)
{
  return [a1 currentLocation];
}

id objc_msgSend_currentPasscodeConstraint(void *a1, const char *a2, ...)
{
  return [a1 currentPasscodeConstraint];
}

id objc_msgSend_currentPasscodeConstraintStr(void *a1, const char *a2, ...)
{
  return [a1 currentPasscodeConstraintStr];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return [a1 currentRunLoop];
}

id objc_msgSend_currentTask(void *a1, const char *a2, ...)
{
  return [a1 currentTask];
}

id objc_msgSend_currentlyPicked(void *a1, const char *a2, ...)
{
  return [a1 currentlyPicked];
}

id objc_msgSend_cycling(void *a1, const char *a2, ...)
{
  return [a1 cycling];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return [a1 data];
}

id objc_msgSend_dataArchiver(void *a1, const char *a2, ...)
{
  return [a1 dataArchiver];
}

id objc_msgSend_dataPeekEventName(void *a1, const char *a2, ...)
{
  return [a1 dataPeekEventName];
}

id objc_msgSend_dataSourceErrorBackoffCount(void *a1, const char *a2, ...)
{
  return [a1 dataSourceErrorBackoffCount];
}

id objc_msgSend_dataSourceRetryTimer(void *a1, const char *a2, ...)
{
  return [a1 dataSourceRetryTimer];
}

id objc_msgSend_dataSources(void *a1, const char *a2, ...)
{
  return [a1 dataSources];
}

id objc_msgSend_dataUpdateCommand(void *a1, const char *a2, ...)
{
  return [a1 dataUpdateCommand];
}

id objc_msgSend_dataclassProperties(void *a1, const char *a2, ...)
{
  return [a1 dataclassProperties];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return [a1 date];
}

id objc_msgSend_deactivate(void *a1, const char *a2, ...)
{
  return [a1 deactivate];
}

id objc_msgSend_decayFactor(void *a1, const char *a2, ...)
{
  return [a1 decayFactor];
}

id objc_msgSend_decorator(void *a1, const char *a2, ...)
{
  return [a1 decorator];
}

id objc_msgSend_deepLinkURL(void *a1, const char *a2, ...)
{
  return [a1 deepLinkURL];
}

id objc_msgSend_defaultAccessoriesEnabled(void *a1, const char *a2, ...)
{
  return [a1 defaultAccessoriesEnabled];
}

id objc_msgSend_defaultAudioSafetyStatus(void *a1, const char *a2, ...)
{
  return [a1 defaultAudioSafetyStatus];
}

id objc_msgSend_defaultButtonAction(void *a1, const char *a2, ...)
{
  return [a1 defaultButtonAction];
}

id objc_msgSend_defaultButtonTitle(void *a1, const char *a2, ...)
{
  return [a1 defaultButtonTitle];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return [a1 defaultCenter];
}

id objc_msgSend_defaultConfigurations(void *a1, const char *a2, ...)
{
  return [a1 defaultConfigurations];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return [a1 defaultManager];
}

id objc_msgSend_defaultSession(void *a1, const char *a2, ...)
{
  return [a1 defaultSession];
}

id objc_msgSend_defaultSessionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 defaultSessionConfiguration];
}

id objc_msgSend_defaultStorageLocation(void *a1, const char *a2, ...)
{
  return [a1 defaultStorageLocation];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return [a1 defaultWorkspace];
}

id objc_msgSend_deinitializeHelper(void *a1, const char *a2, ...)
{
  return [a1 deinitializeHelper];
}

id objc_msgSend_deinitializeRequest(void *a1, const char *a2, ...)
{
  return [a1 deinitializeRequest];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return [a1 delegate];
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return [a1 delegateQueue];
}

id objc_msgSend_delegates(void *a1, const char *a2, ...)
{
  return [a1 delegates];
}

id objc_msgSend_deleteAllTrackedLocations(void *a1, const char *a2, ...)
{
  return [a1 deleteAllTrackedLocations];
}

id objc_msgSend_deleteLocationTrackingInfoAndStopTracking(void *a1, const char *a2, ...)
{
  return [a1 deleteLocationTrackingInfoAndStopTracking];
}

id objc_msgSend_deniedOperationBlock(void *a1, const char *a2, ...)
{
  return [a1 deniedOperationBlock];
}

id objc_msgSend_dependencies(void *a1, const char *a2, ...)
{
  return [a1 dependencies];
}

id objc_msgSend_deregisterCommonNotifications(void *a1, const char *a2, ...)
{
  return [a1 deregisterCommonNotifications];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return [a1 description];
}

id objc_msgSend_desiredAccuracy(void *a1, const char *a2, ...)
{
  return [a1 desiredAccuracy];
}

id objc_msgSend_detachNotificaitonsWaitTime(void *a1, const char *a2, ...)
{
  return [a1 detachNotificaitonsWaitTime];
}

id objc_msgSend_detachNotificationManager(void *a1, const char *a2, ...)
{
  return [a1 detachNotificationManager];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return [a1 device];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return [a1 deviceClass];
}

id objc_msgSend_deviceClassString(void *a1, const char *a2, ...)
{
  return [a1 deviceClassString];
}

id objc_msgSend_deviceColor(void *a1, const char *a2, ...)
{
  return [a1 deviceColor];
}

id objc_msgSend_deviceContextGenerator(void *a1, const char *a2, ...)
{
  return [a1 deviceContextGenerator];
}

id objc_msgSend_deviceDiscoveryId(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryId];
}

id objc_msgSend_deviceEnclosureColor(void *a1, const char *a2, ...)
{
  return [a1 deviceEnclosureColor];
}

id objc_msgSend_deviceId(void *a1, const char *a2, ...)
{
  return [a1 deviceId];
}

id objc_msgSend_deviceIdentityPendingXpcTransactionName(void *a1, const char *a2, ...)
{
  return [a1 deviceIdentityPendingXpcTransactionName];
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return [a1 deviceInfo];
}

id objc_msgSend_deviceInfoForHostRegister(void *a1, const char *a2, ...)
{
  return [a1 deviceInfoForHostRegister];
}

id objc_msgSend_deviceInfoGenerator(void *a1, const char *a2, ...)
{
  return [a1 deviceInfoGenerator];
}

id objc_msgSend_deviceInfoOverrides(void *a1, const char *a2, ...)
{
  return [a1 deviceInfoOverrides];
}

id objc_msgSend_deviceModel(void *a1, const char *a2, ...)
{
  return [a1 deviceModel];
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return [a1 deviceName];
}

id objc_msgSend_deviceProductId(void *a1, const char *a2, ...)
{
  return [a1 deviceProductId];
}

id objc_msgSend_deviceRegion(void *a1, const char *a2, ...)
{
  return [a1 deviceRegion];
}

id objc_msgSend_deviceUDID(void *a1, const char *a2, ...)
{
  return [a1 deviceUDID];
}

id objc_msgSend_deviceVendor(void *a1, const char *a2, ...)
{
  return [a1 deviceVendor];
}

id objc_msgSend_dictModQueue(void *a1, const char *a2, ...)
{
  return [a1 dictModQueue];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return [a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return [a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryValue(void *a1, const char *a2, ...)
{
  return [a1 dictionaryValue];
}

id objc_msgSend_didDiscoverDevice(void *a1, const char *a2, ...)
{
  return [a1 didDiscoverDevice];
}

id objc_msgSend_didEndDiscovery(void *a1, const char *a2, ...)
{
  return [a1 didEndDiscovery];
}

id objc_msgSend_didLoseDevice(void *a1, const char *a2, ...)
{
  return [a1 didLoseDevice];
}

id objc_msgSend_didMakeProviderActive(void *a1, const char *a2, ...)
{
  return [a1 didMakeProviderActive];
}

id objc_msgSend_didMakeProviderInactive(void *a1, const char *a2, ...)
{
  return [a1 didMakeProviderInactive];
}

id objc_msgSend_didStartDiscovery(void *a1, const char *a2, ...)
{
  return [a1 didStartDiscovery];
}

id objc_msgSend_digestData(void *a1, const char *a2, ...)
{
  return [a1 digestData];
}

id objc_msgSend_digestKey(void *a1, const char *a2, ...)
{
  return [a1 digestKey];
}

id objc_msgSend_directoryChanged(void *a1, const char *a2, ...)
{
  return [a1 directoryChanged];
}

id objc_msgSend_directoryURL(void *a1, const char *a2, ...)
{
  return [a1 directoryURL];
}

id objc_msgSend_disableBiometricID(void *a1, const char *a2, ...)
{
  return [a1 disableBiometricID];
}

id objc_msgSend_disableContext(void *a1, const char *a2, ...)
{
  return [a1 disableContext];
}

id objc_msgSend_disableIntents(void *a1, const char *a2, ...)
{
  return [a1 disableIntents];
}

id objc_msgSend_disableLostMode(void *a1, const char *a2, ...)
{
  return [a1 disableLostMode];
}

id objc_msgSend_disablePush(void *a1, const char *a2, ...)
{
  return [a1 disablePush];
}

id objc_msgSend_discardEarlyDiscovery(void *a1, const char *a2, ...)
{
  return [a1 discardEarlyDiscovery];
}

id objc_msgSend_discovery(void *a1, const char *a2, ...)
{
  return [a1 discovery];
}

id objc_msgSend_discoveryCoordinator(void *a1, const char *a2, ...)
{
  return [a1 discoveryCoordinator];
}

id objc_msgSend_discoveryEndDate(void *a1, const char *a2, ...)
{
  return [a1 discoveryEndDate];
}

id objc_msgSend_discoveryTimer(void *a1, const char *a2, ...)
{
  return [a1 discoveryTimer];
}

id objc_msgSend_discoveryWaitTimer(void *a1, const char *a2, ...)
{
  return [a1 discoveryWaitTimer];
}

id objc_msgSend_dismissMsgOnLock(void *a1, const char *a2, ...)
{
  return [a1 dismissMsgOnLock];
}

id objc_msgSend_dismissMsgOnUnlock(void *a1, const char *a2, ...)
{
  return [a1 dismissMsgOnUnlock];
}

id objc_msgSend_dispatchSourceAbort(void *a1, const char *a2, ...)
{
  return [a1 dispatchSourceAbort];
}

id objc_msgSend_dispatchSourceChange(void *a1, const char *a2, ...)
{
  return [a1 dispatchSourceChange];
}

id objc_msgSend_distanceFilter(void *a1, const char *a2, ...)
{
  return [a1 distanceFilter];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return [a1 domain];
}

id objc_msgSend_dontUseSLC(void *a1, const char *a2, ...)
{
  return [a1 dontUseSLC];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return [a1 doubleValue];
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return [a1 dsid];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return [a1 duration];
}

id objc_msgSend_earlyDiscovery(void *a1, const char *a2, ...)
{
  return [a1 earlyDiscovery];
}

id objc_msgSend_ecid(void *a1, const char *a2, ...)
{
  return [a1 ecid];
}

id objc_msgSend_embeddedAction(void *a1, const char *a2, ...)
{
  return [a1 embeddedAction];
}

id objc_msgSend_enableFMIPLocationServices(void *a1, const char *a2, ...)
{
  return [a1 enableFMIPLocationServices];
}

id objc_msgSend_enableLocationServices(void *a1, const char *a2, ...)
{
  return [a1 enableLocationServices];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return [a1 enabled];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return [a1 endDate];
}

id objc_msgSend_endThreshold(void *a1, const char *a2, ...)
{
  return [a1 endThreshold];
}

id objc_msgSend_enqueuedQC(void *a1, const char *a2, ...)
{
  return [a1 enqueuedQC];
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return [a1 environment];
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 ephemeralSessionConfiguration];
}

id objc_msgSend_ephemeralToken(void *a1, const char *a2, ...)
{
  return [a1 ephemeralToken];
}

id objc_msgSend_eraseKeyType(void *a1, const char *a2, ...)
{
  return [a1 eraseKeyType];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return [a1 error];
}

id objc_msgSend_errorForMarkAsMissing(void *a1, const char *a2, ...)
{
  return [a1 errorForMarkAsMissing];
}

id objc_msgSend_errorForUnregister(void *a1, const char *a2, ...)
{
  return [a1 errorForUnregister];
}

id objc_msgSend_errorTypeString(void *a1, const char *a2, ...)
{
  return [a1 errorTypeString];
}

id objc_msgSend_escrowHash(void *a1, const char *a2, ...)
{
  return [a1 escrowHash];
}

id objc_msgSend_essentialServerInfoMissingError(void *a1, const char *a2, ...)
{
  return [a1 essentialServerInfoMissingError];
}

id objc_msgSend_etag(void *a1, const char *a2, ...)
{
  return [a1 etag];
}

id objc_msgSend_evaluateOperation(void *a1, const char *a2, ...)
{
  return [a1 evaluateOperation];
}

id objc_msgSend_evaluatePolicy(void *a1, const char *a2, ...)
{
  return [a1 evaluatePolicy];
}

id objc_msgSend_evaluationOptions(void *a1, const char *a2, ...)
{
  return [a1 evaluationOptions];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return [a1 event];
}

id objc_msgSend_eventName(void *a1, const char *a2, ...)
{
  return [a1 eventName];
}

id objc_msgSend_eventType(void *a1, const char *a2, ...)
{
  return [a1 eventType];
}

id objc_msgSend_executeCommand(void *a1, const char *a2, ...)
{
  return [a1 executeCommand];
}

id objc_msgSend_executePlaySound(void *a1, const char *a2, ...)
{
  return [a1 executePlaySound];
}

id objc_msgSend_executionDate(void *a1, const char *a2, ...)
{
  return [a1 executionDate];
}

id objc_msgSend_expirationInterval(void *a1, const char *a2, ...)
{
  return [a1 expirationInterval];
}

id objc_msgSend_expungeAccessoryLocationStore(void *a1, const char *a2, ...)
{
  return [a1 expungeAccessoryLocationStore];
}

id objc_msgSend_extAccessoryConfigURL(void *a1, const char *a2, ...)
{
  return [a1 extAccessoryConfigURL];
}

id objc_msgSend_extAccessoryManager(void *a1, const char *a2, ...)
{
  return [a1 extAccessoryManager];
}

id objc_msgSend_extensionId(void *a1, const char *a2, ...)
{
  return [a1 extensionId];
}

id objc_msgSend_extensionMatchToken(void *a1, const char *a2, ...)
{
  return [a1 extensionMatchToken];
}

id objc_msgSend_extensions(void *a1, const char *a2, ...)
{
  return [a1 extensions];
}

id objc_msgSend_extensionsAlreadySynced(void *a1, const char *a2, ...)
{
  return [a1 extensionsAlreadySynced];
}

id objc_msgSend_facetimeCapable(void *a1, const char *a2, ...)
{
  return [a1 facetimeCapable];
}

id objc_msgSend_facilitiesDictionary(void *a1, const char *a2, ...)
{
  return [a1 facilitiesDictionary];
}

id objc_msgSend_facilityName(void *a1, const char *a2, ...)
{
  return [a1 facilityName];
}

id objc_msgSend_factory(void *a1, const char *a2, ...)
{
  return [a1 factory];
}

id objc_msgSend_failureDescription(void *a1, const char *a2, ...)
{
  return [a1 failureDescription];
}

id objc_msgSend_failureReason(void *a1, const char *a2, ...)
{
  return [a1 failureReason];
}

id objc_msgSend_fallbackRetryTimer(void *a1, const char *a2, ...)
{
  return [a1 fallbackRetryTimer];
}

id objc_msgSend_fallbackTimerXPCTransactionName(void *a1, const char *a2, ...)
{
  return [a1 fallbackTimerXPCTransactionName];
}

id objc_msgSend_fallbackToNoAuthentication(void *a1, const char *a2, ...)
{
  return [a1 fallbackToNoAuthentication];
}

id objc_msgSend_fd(void *a1, const char *a2, ...)
{
  return [a1 fd];
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return [a1 features];
}

id objc_msgSend_fetchBaUUIDBeforeFirstRegister(void *a1, const char *a2, ...)
{
  return [a1 fetchBaUUIDBeforeFirstRegister];
}

id objc_msgSend_fetchSupportedAccessoryTypes(void *a1, const char *a2, ...)
{
  return [a1 fetchSupportedAccessoryTypes];
}

id objc_msgSend_fileDiscovered(void *a1, const char *a2, ...)
{
  return [a1 fileDiscovered];
}

id objc_msgSend_fileLocation(void *a1, const char *a2, ...)
{
  return [a1 fileLocation];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return [a1 fileSystemRepresentation];
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return [a1 fileURL];
}

id objc_msgSend_finalLocation(void *a1, const char *a2, ...)
{
  return [a1 finalLocation];
}

id objc_msgSend_findMyEnabled(void *a1, const char *a2, ...)
{
  return [a1 findMyEnabled];
}

id objc_msgSend_findMyId(void *a1, const char *a2, ...)
{
  return [a1 findMyId];
}

id objc_msgSend_fineKoreaRegion(void *a1, const char *a2, ...)
{
  return [a1 fineKoreaRegion];
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return [a1 finishTasksAndInvalidate];
}

id objc_msgSend_finishWithNoResult(void *a1, const char *a2, ...)
{
  return [a1 finishWithNoResult];
}

id objc_msgSend_finishedTimer(void *a1, const char *a2, ...)
{
  return [a1 finishedTimer];
}

id objc_msgSend_firmwareRevision(void *a1, const char *a2, ...)
{
  return [a1 firmwareRevision];
}

id objc_msgSend_firmwareVersion(void *a1, const char *a2, ...)
{
  return [a1 firmwareVersion];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return [a1 firstObject];
}

id objc_msgSend_firstRetryInterval(void *a1, const char *a2, ...)
{
  return [a1 firstRetryInterval];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return [a1 floatValue];
}

id objc_msgSend_floor(void *a1, const char *a2, ...)
{
  return [a1 floor];
}

id objc_msgSend_flushLocations(void *a1, const char *a2, ...)
{
  return [a1 flushLocations];
}

id objc_msgSend_fmdXPCListener(void *a1, const char *a2, ...)
{
  return [a1 fmdXPCListener];
}

id objc_msgSend_fmipACAccount(void *a1, const char *a2, ...)
{
  return [a1 fmipACAccount];
}

id objc_msgSend_fmipAuthToken(void *a1, const char *a2, ...)
{
  return [a1 fmipAuthToken];
}

id objc_msgSend_fmipConfiguration(void *a1, const char *a2, ...)
{
  return [a1 fmipConfiguration];
}

id objc_msgSend_fmipDisableContext(void *a1, const char *a2, ...)
{
  return [a1 fmipDisableContext];
}

id objc_msgSend_fmipEnableContext(void *a1, const char *a2, ...)
{
  return [a1 fmipEnableContext];
}

id objc_msgSend_fmipRegisterInfo(void *a1, const char *a2, ...)
{
  return [a1 fmipRegisterInfo];
}

id objc_msgSend_fmipState(void *a1, const char *a2, ...)
{
  return [a1 fmipState];
}

id objc_msgSend_fmipStateChangeCriteria(void *a1, const char *a2, ...)
{
  return [a1 fmipStateChangeCriteria];
}

id objc_msgSend_force(void *a1, const char *a2, ...)
{
  return [a1 force];
}

id objc_msgSend_forceConnection(void *a1, const char *a2, ...)
{
  return [a1 forceConnection];
}

id objc_msgSend_forcePushOndemandLocationQueue(void *a1, const char *a2, ...)
{
  return [a1 forcePushOndemandLocationQueue];
}

id objc_msgSend_forcePushOndemandlocation(void *a1, const char *a2, ...)
{
  return [a1 forcePushOndemandlocation];
}

id objc_msgSend_forceShallowLocationManager(void *a1, const char *a2, ...)
{
  return [a1 forceShallowLocationManager];
}

id objc_msgSend_future(void *a1, const char *a2, ...)
{
  return [a1 future];
}

id objc_msgSend_futuresByCommandId(void *a1, const char *a2, ...)
{
  return [a1 futuresByCommandId];
}

id objc_msgSend_generateAssetURL(void *a1, const char *a2, ...)
{
  return [a1 generateAssetURL];
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return [a1 getActivePairedDevice];
}

id objc_msgSend_getAllDevices(void *a1, const char *a2, ...)
{
  return [a1 getAllDevices];
}

id objc_msgSend_getAllExtensions(void *a1, const char *a2, ...)
{
  return [a1 getAllExtensions];
}

id objc_msgSend_getPairedDevices(void *a1, const char *a2, ...)
{
  return [a1 getPairedDevices];
}

id objc_msgSend_gracePeriod(void *a1, const char *a2, ...)
{
  return [a1 gracePeriod];
}

id objc_msgSend_groupByKey(void *a1, const char *a2, ...)
{
  return [a1 groupByKey];
}

id objc_msgSend_groupValue(void *a1, const char *a2, ...)
{
  return [a1 groupValue];
}

id objc_msgSend_handleActivity(void *a1, const char *a2, ...)
{
  return [a1 handleActivity];
}

id objc_msgSend_handleCommand(void *a1, const char *a2, ...)
{
  return [a1 handleCommand];
}

id objc_msgSend_hardwareRevision(void *a1, const char *a2, ...)
{
  return [a1 hardwareRevision];
}

id objc_msgSend_hasArrivalDate(void *a1, const char *a2, ...)
{
  return [a1 hasArrivalDate];
}

id objc_msgSend_hasAttemptedLoad(void *a1, const char *a2, ...)
{
  return [a1 hasAttemptedLoad];
}

id objc_msgSend_hasCellularCapability(void *a1, const char *a2, ...)
{
  return [a1 hasCellularCapability];
}

id objc_msgSend_hasDepartureDate(void *a1, const char *a2, ...)
{
  return [a1 hasDepartureDate];
}

id objc_msgSend_hasNFC(void *a1, const char *a2, ...)
{
  return [a1 hasNFC];
}

id objc_msgSend_hasSecureElement(void *a1, const char *a2, ...)
{
  return [a1 hasSecureElement];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return [a1 hash];
}

id objc_msgSend_headAction(void *a1, const char *a2, ...)
{
  return [a1 headAction];
}

id objc_msgSend_headbandType(void *a1, const char *a2, ...)
{
  return [a1 headbandType];
}

id objc_msgSend_heartbeatLocationManager(void *a1, const char *a2, ...)
{
  return [a1 heartbeatLocationManager];
}

id objc_msgSend_heartbeatPublish(void *a1, const char *a2, ...)
{
  return [a1 heartbeatPublish];
}

id objc_msgSend_hexString(void *a1, const char *a2, ...)
{
  return [a1 hexString];
}

id objc_msgSend_horizontalAccuracy(void *a1, const char *a2, ...)
{
  return [a1 horizontalAccuracy];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return [a1 host];
}

id objc_msgSend_hostportOverride(void *a1, const char *a2, ...)
{
  return [a1 hostportOverride];
}

id objc_msgSend_housingColor(void *a1, const char *a2, ...)
{
  return [a1 housingColor];
}

id objc_msgSend_httpRequestHeaders(void *a1, const char *a2, ...)
{
  return [a1 httpRequestHeaders];
}

id objc_msgSend_httpResponseBody(void *a1, const char *a2, ...)
{
  return [a1 httpResponseBody];
}

id objc_msgSend_httpResponseError(void *a1, const char *a2, ...)
{
  return [a1 httpResponseError];
}

id objc_msgSend_httpResponseHeaders(void *a1, const char *a2, ...)
{
  return [a1 httpResponseHeaders];
}

id objc_msgSend_httpResponseStatus(void *a1, const char *a2, ...)
{
  return [a1 httpResponseStatus];
}

id objc_msgSend_iCloudACAccount(void *a1, const char *a2, ...)
{
  return [a1 iCloudACAccount];
}

id objc_msgSend_iCloudAuthToken(void *a1, const char *a2, ...)
{
  return [a1 iCloudAuthToken];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return [a1 identifier];
}

id objc_msgSend_identityCommand(void *a1, const char *a2, ...)
{
  return [a1 identityCommand];
}

id objc_msgSend_identityURL(void *a1, const char *a2, ...)
{
  return [a1 identityURL];
}

id objc_msgSend_idsDeviceID(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceID];
}

id objc_msgSend_idsManager(void *a1, const char *a2, ...)
{
  return [a1 idsManager];
}

id objc_msgSend_imei(void *a1, const char *a2, ...)
{
  return [a1 imei];
}

id objc_msgSend_imei2(void *a1, const char *a2, ...)
{
  return [a1 imei2];
}

id objc_msgSend_importedAosnotifydData(void *a1, const char *a2, ...)
{
  return [a1 importedAosnotifydData];
}

id objc_msgSend_inCase(void *a1, const char *a2, ...)
{
  return [a1 inCase];
}

id objc_msgSend_inCaseStatus(void *a1, const char *a2, ...)
{
  return [a1 inCaseStatus];
}

id objc_msgSend_inEar(void *a1, const char *a2, ...)
{
  return [a1 inEar];
}

id objc_msgSend_inEarDetectionTimeout(void *a1, const char *a2, ...)
{
  return [a1 inEarDetectionTimeout];
}

id objc_msgSend_inEarStatus(void *a1, const char *a2, ...)
{
  return [a1 inEarStatus];
}

id objc_msgSend_inEarTimer(void *a1, const char *a2, ...)
{
  return [a1 inEarTimer];
}

id objc_msgSend_inProgress(void *a1, const char *a2, ...)
{
  return [a1 inProgress];
}

id objc_msgSend_inTestingMode(void *a1, const char *a2, ...)
{
  return [a1 inTestingMode];
}

id objc_msgSend_includeDeviceState(void *a1, const char *a2, ...)
{
  return [a1 includeDeviceState];
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return [a1 info];
}

id objc_msgSend_infoAtStartup(void *a1, const char *a2, ...)
{
  return [a1 infoAtStartup];
}

id objc_msgSend_infoChangeQueue(void *a1, const char *a2, ...)
{
  return [a1 infoChangeQueue];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return [a1 init];
}

id objc_msgSend_initSingleton(void *a1, const char *a2, ...)
{
  return [a1 initSingleton];
}

id objc_msgSend_initialLaunchProcessing(void *a1, const char *a2, ...)
{
  return [a1 initialLaunchProcessing];
}

id objc_msgSend_initializationVector(void *a1, const char *a2, ...)
{
  return [a1 initializationVector];
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return [a1 initialize];
}

id objc_msgSend_initializeSystemConfig(void *a1, const char *a2, ...)
{
  return [a1 initializeSystemConfig];
}

id objc_msgSend_initializeXPC(void *a1, const char *a2, ...)
{
  return [a1 initializeXPC];
}

id objc_msgSend_initialized(void *a1, const char *a2, ...)
{
  return [a1 initialized];
}

id objc_msgSend_innerAction(void *a1, const char *a2, ...)
{
  return [a1 innerAction];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return [a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return [a1 integerValue];
}

id objc_msgSend_internationalMobileEquipmentIdentity(void *a1, const char *a2, ...)
{
  return [a1 internationalMobileEquipmentIdentity];
}

id objc_msgSend_internationalMobileEquipmentIdentityTwo(void *a1, const char *a2, ...)
{
  return [a1 internationalMobileEquipmentIdentityTwo];
}

id objc_msgSend_interruptionLevel(void *a1, const char *a2, ...)
{
  return [a1 interruptionLevel];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return [a1 invalidate];
}

id objc_msgSend_invalidateAndCancel(void *a1, const char *a2, ...)
{
  return [a1 invalidateAndCancel];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return [a1 invertedSet];
}

id objc_msgSend_irkData(void *a1, const char *a2, ...)
{
  return [a1 irkData];
}

id objc_msgSend_isAccountHSA2(void *a1, const char *a2, ...)
{
  return [a1 isAccountHSA2];
}

id objc_msgSend_isActivationLockAllowed(void *a1, const char *a2, ...)
{
  return [a1 isActivationLockAllowed];
}

id objc_msgSend_isActivationLocked(void *a1, const char *a2, ...)
{
  return [a1 isActivationLocked];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return [a1 isActive];
}

id objc_msgSend_isAutomationActive(void *a1, const char *a2, ...)
{
  return [a1 isAutomationActive];
}

id objc_msgSend_isBuddyDone(void *a1, const char *a2, ...)
{
  return [a1 isBuddyDone];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return [a1 isCancelled];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return [a1 isConnected];
}

id objc_msgSend_isDiscoveryActive(void *a1, const char *a2, ...)
{
  return [a1 isDiscoveryActive];
}

id objc_msgSend_isExecuting(void *a1, const char *a2, ...)
{
  return [a1 isExecuting];
}

id objc_msgSend_isFMIPLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return [a1 isFMIPLocationServicesEnabled];
}

id objc_msgSend_isFeatureEnabled(void *a1, const char *a2, ...)
{
  return [a1 isFeatureEnabled];
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return [a1 isFinished];
}

id objc_msgSend_isFirstRunAfterBoot(void *a1, const char *a2, ...)
{
  return [a1 isFirstRunAfterBoot];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return [a1 isInternalBuild];
}

id objc_msgSend_isLocationServicesCapable(void *a1, const char *a2, ...)
{
  return [a1 isLocationServicesCapable];
}

id objc_msgSend_isLocationServicesEnabled(void *a1, const char *a2, ...)
{
  return [a1 isLocationServicesEnabled];
}

id objc_msgSend_isLocationServicesEnabledForShareMyLocation(void *a1, const char *a2, ...)
{
  return [a1 isLocationServicesEnabledForShareMyLocation];
}

id objc_msgSend_isLocationValid(void *a1, const char *a2, ...)
{
  return [a1 isLocationValid];
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return [a1 isLocked];
}

id objc_msgSend_isLocking(void *a1, const char *a2, ...)
{
  return [a1 isLocking];
}

id objc_msgSend_isLowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return [a1 isLowPowerModeEnabled];
}

id objc_msgSend_isMF4i(void *a1, const char *a2, ...)
{
  return [a1 isMF4i];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return [a1 isMainThread];
}

id objc_msgSend_isMonitoring(void *a1, const char *a2, ...)
{
  return [a1 isMonitoring];
}

id objc_msgSend_isMonitoringPendingDeviceIdentity(void *a1, const char *a2, ...)
{
  return [a1 isMonitoringPendingDeviceIdentity];
}

id objc_msgSend_isNetworkUp(void *a1, const char *a2, ...)
{
  return [a1 isNetworkUp];
}

id objc_msgSend_isOfflineFindingEnabled(void *a1, const char *a2, ...)
{
  return [a1 isOfflineFindingEnabled];
}

id objc_msgSend_isPasscodeChangeRestricted(void *a1, const char *a2, ...)
{
  return [a1 isPasscodeChangeRestricted];
}

id objc_msgSend_isPasscodeModificationAllowed(void *a1, const char *a2, ...)
{
  return [a1 isPasscodeModificationAllowed];
}

id objc_msgSend_isPasscodeSet(void *a1, const char *a2, ...)
{
  return [a1 isPasscodeSet];
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return [a1 isPaused];
}

id objc_msgSend_isPreviouslyHandledCommand(void *a1, const char *a2, ...)
{
  return [a1 isPreviouslyHandledCommand];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return [a1 isReady];
}

id objc_msgSend_isRestrictedSKU(void *a1, const char *a2, ...)
{
  return [a1 isRestrictedSKU];
}

id objc_msgSend_isRoseCapable(void *a1, const char *a2, ...)
{
  return [a1 isRoseCapable];
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return [a1 isRunning];
}

id objc_msgSend_isRunningInRecovery(void *a1, const char *a2, ...)
{
  return [a1 isRunningInRecovery];
}

id objc_msgSend_isTemporaryPaired(void *a1, const char *a2, ...)
{
  return [a1 isTemporaryPaired];
}

id objc_msgSend_isThisDevice(void *a1, const char *a2, ...)
{
  return [a1 isThisDevice];
}

id objc_msgSend_isTinkerPaired(void *a1, const char *a2, ...)
{
  return [a1 isTinkerPaired];
}

id objc_msgSend_isTrackingOn(void *a1, const char *a2, ...)
{
  return [a1 isTrackingOn];
}

id objc_msgSend_isUnittest(void *a1, const char *a2, ...)
{
  return [a1 isUnittest];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return [a1 isValid];
}

id objc_msgSend_janitor(void *a1, const char *a2, ...)
{
  return [a1 janitor];
}

id objc_msgSend_keepAlive(void *a1, const char *a2, ...)
{
  return [a1 keepAlive];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return [a1 key];
}

id objc_msgSend_lastActiveTime(void *a1, const char *a2, ...)
{
  return [a1 lastActiveTime];
}

id objc_msgSend_lastCompletedIntentDictionary(void *a1, const char *a2, ...)
{
  return [a1 lastCompletedIntentDictionary];
}

id objc_msgSend_lastDiscoveryDate(void *a1, const char *a2, ...)
{
  return [a1 lastDiscoveryDate];
}

id objc_msgSend_lastFallbackRetryTime(void *a1, const char *a2, ...)
{
  return [a1 lastFallbackRetryTime];
}

id objc_msgSend_lastIdentityTime(void *a1, const char *a2, ...)
{
  return [a1 lastIdentityTime];
}

id objc_msgSend_lastKeyRollDate(void *a1, const char *a2, ...)
{
  return [a1 lastKeyRollDate];
}

id objc_msgSend_lastKnownDeviceMotion(void *a1, const char *a2, ...)
{
  return [a1 lastKnownDeviceMotion];
}

id objc_msgSend_lastKnownLocationDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 lastKnownLocationDeviceInfo];
}

id objc_msgSend_lastLaunchVersion(void *a1, const char *a2, ...)
{
  return [a1 lastLaunchVersion];
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return [a1 lastLocation];
}

id objc_msgSend_lastLoggedInDsid(void *a1, const char *a2, ...)
{
  return [a1 lastLoggedInDsid];
}

id objc_msgSend_lastLostModeKeyRollTime(void *a1, const char *a2, ...)
{
  return [a1 lastLostModeKeyRollTime];
}

id objc_msgSend_lastModified(void *a1, const char *a2, ...)
{
  return [a1 lastModified];
}

id objc_msgSend_lastModifyDate(void *a1, const char *a2, ...)
{
  return [a1 lastModifyDate];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return [a1 lastObject];
}

id objc_msgSend_lastOnDemandPublishTime(void *a1, const char *a2, ...)
{
  return [a1 lastOnDemandPublishTime];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return [a1 lastPathComponent];
}

id objc_msgSend_lastPublishedAccuracy(void *a1, const char *a2, ...)
{
  return [a1 lastPublishedAccuracy];
}

id objc_msgSend_lastPublishedLocation(void *a1, const char *a2, ...)
{
  return [a1 lastPublishedLocation];
}

id objc_msgSend_lastPublishedTime(void *a1, const char *a2, ...)
{
  return [a1 lastPublishedTime];
}

id objc_msgSend_lastPublishedVisit(void *a1, const char *a2, ...)
{
  return [a1 lastPublishedVisit];
}

id objc_msgSend_lastReceivedLocation(void *a1, const char *a2, ...)
{
  return [a1 lastReceivedLocation];
}

id objc_msgSend_lastRetryTime(void *a1, const char *a2, ...)
{
  return [a1 lastRetryTime];
}

id objc_msgSend_lastRetryType(void *a1, const char *a2, ...)
{
  return [a1 lastRetryType];
}

id objc_msgSend_lastScheduledJanitorDate(void *a1, const char *a2, ...)
{
  return [a1 lastScheduledJanitorDate];
}

id objc_msgSend_lastShallowPublishTime(void *a1, const char *a2, ...)
{
  return [a1 lastShallowPublishTime];
}

id objc_msgSend_lastStatusUpdateTime(void *a1, const char *a2, ...)
{
  return [a1 lastStatusUpdateTime];
}

id objc_msgSend_lastUnregisterFailedTime(void *a1, const char *a2, ...)
{
  return [a1 lastUnregisterFailedTime];
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return [a1 latitude];
}

id objc_msgSend_launchDate(void *a1, const char *a2, ...)
{
  return [a1 launchDate];
}

id objc_msgSend_leewayTimeInterval(void *a1, const char *a2, ...)
{
  return [a1 leewayTimeInterval];
}

id objc_msgSend_leftBudSerialNumber(void *a1, const char *a2, ...)
{
  return [a1 leftBudSerialNumber];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return [a1 length];
}

id objc_msgSend_level(void *a1, const char *a2, ...)
{
  return [a1 level];
}

id objc_msgSend_lidClosed(void *a1, const char *a2, ...)
{
  return [a1 lidClosed];
}

id objc_msgSend_lidClosedStatus(void *a1, const char *a2, ...)
{
  return [a1 lidClosedStatus];
}

id objc_msgSend_listner(void *a1, const char *a2, ...)
{
  return [a1 listner];
}

id objc_msgSend_liveLocationManager(void *a1, const char *a2, ...)
{
  return [a1 liveLocationManager];
}

id objc_msgSend_loadAccount(void *a1, const char *a2, ...)
{
  return [a1 loadAccount];
}

id objc_msgSend_loadLogs(void *a1, const char *a2, ...)
{
  return [a1 loadLogs];
}

id objc_msgSend_locManager(void *a1, const char *a2, ...)
{
  return [a1 locManager];
}

id objc_msgSend_localFindableAccessory(void *a1, const char *a2, ...)
{
  return [a1 localFindableAccessory];
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return [a1 locale];
}

id objc_msgSend_localeIdentifier(void *a1, const char *a2, ...)
{
  return [a1 localeIdentifier];
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return [a1 localizations];
}

id objc_msgSend_localizedBeginBody(void *a1, const char *a2, ...)
{
  return [a1 localizedBeginBody];
}

id objc_msgSend_localizedBeginTitle(void *a1, const char *a2, ...)
{
  return [a1 localizedBeginTitle];
}

id objc_msgSend_localizedCalloutReason(void *a1, const char *a2, ...)
{
  return [a1 localizedCalloutReason];
}

id objc_msgSend_localizedCountdownBody(void *a1, const char *a2, ...)
{
  return [a1 localizedCountdownBody];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return [a1 localizedDescription];
}

id objc_msgSend_localizedDescriptionOfCurrentPasscodeConstraints(void *a1, const char *a2, ...)
{
  return [a1 localizedDescriptionOfCurrentPasscodeConstraints];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return [a1 localizedFailureReason];
}

id objc_msgSend_localizedReason(void *a1, const char *a2, ...)
{
  return [a1 localizedReason];
}

id objc_msgSend_locateCommand(void *a1, const char *a2, ...)
{
  return [a1 locateCommand];
}

id objc_msgSend_locateNotificationsEnabled(void *a1, const char *a2, ...)
{
  return [a1 locateNotificationsEnabled];
}

id objc_msgSend_locateParams(void *a1, const char *a2, ...)
{
  return [a1 locateParams];
}

id objc_msgSend_locateStats(void *a1, const char *a2, ...)
{
  return [a1 locateStats];
}

id objc_msgSend_locateTimeout(void *a1, const char *a2, ...)
{
  return [a1 locateTimeout];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return [a1 location];
}

id objc_msgSend_locationDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 locationDeviceInfo];
}

id objc_msgSend_locationDeviceInfoOverrides(void *a1, const char *a2, ...)
{
  return [a1 locationDeviceInfoOverrides];
}

id objc_msgSend_locationInfo(void *a1, const char *a2, ...)
{
  return [a1 locationInfo];
}

id objc_msgSend_locationManager(void *a1, const char *a2, ...)
{
  return [a1 locationManager];
}

id objc_msgSend_locationManagerWeakWrapper(void *a1, const char *a2, ...)
{
  return [a1 locationManagerWeakWrapper];
}

id objc_msgSend_locationManagers(void *a1, const char *a2, ...)
{
  return [a1 locationManagers];
}

id objc_msgSend_locationMessage(void *a1, const char *a2, ...)
{
  return [a1 locationMessage];
}

id objc_msgSend_locationMonitor(void *a1, const char *a2, ...)
{
  return [a1 locationMonitor];
}

id objc_msgSend_locationPublishQueue(void *a1, const char *a2, ...)
{
  return [a1 locationPublishQueue];
}

id objc_msgSend_locationPublisher(void *a1, const char *a2, ...)
{
  return [a1 locationPublisher];
}

id objc_msgSend_locationPurgeTimer(void *a1, const char *a2, ...)
{
  return [a1 locationPurgeTimer];
}

id objc_msgSend_locationPurgeTimerXPCTransactionName(void *a1, const char *a2, ...)
{
  return [a1 locationPurgeTimerXPCTransactionName];
}

id objc_msgSend_locationServicesAssertion(void *a1, const char *a2, ...)
{
  return [a1 locationServicesAssertion];
}

id objc_msgSend_locationServicesEnabled(void *a1, const char *a2, ...)
{
  return [a1 locationServicesEnabled];
}

id objc_msgSend_locationServicesStateChanged(void *a1, const char *a2, ...)
{
  return [a1 locationServicesStateChanged];
}

id objc_msgSend_locationStore(void *a1, const char *a2, ...)
{
  return [a1 locationStore];
}

id objc_msgSend_locationThrottleRatio(void *a1, const char *a2, ...)
{
  return [a1 locationThrottleRatio];
}

id objc_msgSend_locationTitle(void *a1, const char *a2, ...)
{
  return [a1 locationTitle];
}

id objc_msgSend_locationTracker(void *a1, const char *a2, ...)
{
  return [a1 locationTracker];
}

id objc_msgSend_locationTrackerType(void *a1, const char *a2, ...)
{
  return [a1 locationTrackerType];
}

id objc_msgSend_locationType(void *a1, const char *a2, ...)
{
  return [a1 locationType];
}

id objc_msgSend_locator(void *a1, const char *a2, ...)
{
  return [a1 locator];
}

id objc_msgSend_locatorPublisher(void *a1, const char *a2, ...)
{
  return [a1 locatorPublisher];
}

id objc_msgSend_locatorRunning(void *a1, const char *a2, ...)
{
  return [a1 locatorRunning];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return [a1 lock];
}

id objc_msgSend_lockCommand(void *a1, const char *a2, ...)
{
  return [a1 lockCommand];
}

id objc_msgSend_lockScreenFacetimeCapable(void *a1, const char *a2, ...)
{
  return [a1 lockScreenFacetimeCapable];
}

id objc_msgSend_lockScreenMessage(void *a1, const char *a2, ...)
{
  return [a1 lockScreenMessage];
}

id objc_msgSend_lockScreenOwnerNumber(void *a1, const char *a2, ...)
{
  return [a1 lockScreenOwnerNumber];
}

id objc_msgSend_lockStateNotifyToken(void *a1, const char *a2, ...)
{
  return [a1 lockStateNotifyToken];
}

id objc_msgSend_logQueue(void *a1, const char *a2, ...)
{
  return [a1 logQueue];
}

id objc_msgSend_loggedEvents(void *a1, const char *a2, ...)
{
  return [a1 loggedEvents];
}

id objc_msgSend_logs(void *a1, const char *a2, ...)
{
  return [a1 logs];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return [a1 longLongValue];
}

id objc_msgSend_longTermlocationExpiryTimeInterval(void *a1, const char *a2, ...)
{
  return [a1 longTermlocationExpiryTimeInterval];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return [a1 longValue];
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return [a1 longitude];
}

id objc_msgSend_lostCommand(void *a1, const char *a2, ...)
{
  return [a1 lostCommand];
}

id objc_msgSend_lostModeDataArchiver(void *a1, const char *a2, ...)
{
  return [a1 lostModeDataArchiver];
}

id objc_msgSend_lostModeEnabled(void *a1, const char *a2, ...)
{
  return [a1 lostModeEnabled];
}

id objc_msgSend_lostModeExitAuthForPairedDeviceID(void *a1, const char *a2, ...)
{
  return [a1 lostModeExitAuthForPairedDeviceID];
}

id objc_msgSend_lostModeInfo(void *a1, const char *a2, ...)
{
  return [a1 lostModeInfo];
}

id objc_msgSend_lostModeIsActive(void *a1, const char *a2, ...)
{
  return [a1 lostModeIsActive];
}

id objc_msgSend_lostModePubKey(void *a1, const char *a2, ...)
{
  return [a1 lostModePubKey];
}

id objc_msgSend_lostModeStorageLocation(void *a1, const char *a2, ...)
{
  return [a1 lostModeStorageLocation];
}

id objc_msgSend_lostModeType(void *a1, const char *a2, ...)
{
  return [a1 lostModeType];
}

id objc_msgSend_lowBatteryLocateEnabled(void *a1, const char *a2, ...)
{
  return [a1 lowBatteryLocateEnabled];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return [a1 lowercaseString];
}

id objc_msgSend_macAddress(void *a1, const char *a2, ...)
{
  return [a1 macAddress];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return [a1 mainBundle];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return [a1 mainRunLoop];
}

id objc_msgSend_majorClass(void *a1, const char *a2, ...)
{
  return [a1 majorClass];
}

id objc_msgSend_majorDeviceClass(void *a1, const char *a2, ...)
{
  return [a1 majorDeviceClass];
}

id objc_msgSend_makeProviderActive(void *a1, const char *a2, ...)
{
  return [a1 makeProviderActive];
}

id objc_msgSend_makeProviderInactive(void *a1, const char *a2, ...)
{
  return [a1 makeProviderInactive];
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return [a1 manager];
}

id objc_msgSend_maskedAppleID(void *a1, const char *a2, ...)
{
  return [a1 maskedAppleID];
}

id objc_msgSend_maskedAppleIDValue(void *a1, const char *a2, ...)
{
  return [a1 maskedAppleIDValue];
}

id objc_msgSend_maxConsecutiveNetworkNotificationRetries(void *a1, const char *a2, ...)
{
  return [a1 maxConsecutiveNetworkNotificationRetries];
}

id objc_msgSend_maxDelayInterval(void *a1, const char *a2, ...)
{
  return [a1 maxDelayInterval];
}

id objc_msgSend_maxLocations(void *a1, const char *a2, ...)
{
  return [a1 maxLocations];
}

id objc_msgSend_maxNonNetworkRelatedRetries(void *a1, const char *a2, ...)
{
  return [a1 maxNonNetworkRelatedRetries];
}

id objc_msgSend_maxRetryInterval(void *a1, const char *a2, ...)
{
  return [a1 maxRetryInterval];
}

id objc_msgSend_maxTimerBasedNetworkRetries(void *a1, const char *a2, ...)
{
  return [a1 maxTimerBasedNetworkRetries];
}

id objc_msgSend_maximumHistoricalLocations(void *a1, const char *a2, ...)
{
  return [a1 maximumHistoricalLocations];
}

id objc_msgSend_meid(void *a1, const char *a2, ...)
{
  return [a1 meid];
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return [a1 message];
}

id objc_msgSend_messageCommand(void *a1, const char *a2, ...)
{
  return [a1 messageCommand];
}

id objc_msgSend_metaDataRecord(void *a1, const char *a2, ...)
{
  return [a1 metaDataRecord];
}

id objc_msgSend_metadataModsQueue(void *a1, const char *a2, ...)
{
  return [a1 metadataModsQueue];
}

id objc_msgSend_migratableAccessoriesByIdentifier(void *a1, const char *a2, ...)
{
  return [a1 migratableAccessoriesByIdentifier];
}

id objc_msgSend_migratableDevices(void *a1, const char *a2, ...)
{
  return [a1 migratableDevices];
}

id objc_msgSend_migratableDevicesRequiringConsent(void *a1, const char *a2, ...)
{
  return [a1 migratableDevicesRequiringConsent];
}

id objc_msgSend_migrateAosnotifydStuff(void *a1, const char *a2, ...)
{
  return [a1 migrateAosnotifydStuff];
}

id objc_msgSend_migrationConfirmed(void *a1, const char *a2, ...)
{
  return [a1 migrationConfirmed];
}

id objc_msgSend_migrationPossible(void *a1, const char *a2, ...)
{
  return [a1 migrationPossible];
}

id objc_msgSend_minDistanceBetweenLocations(void *a1, const char *a2, ...)
{
  return [a1 minDistanceBetweenLocations];
}

id objc_msgSend_minDistanceBetweenPublish(void *a1, const char *a2, ...)
{
  return [a1 minDistanceBetweenPublish];
}

id objc_msgSend_minSLCAccuracyThreshold(void *a1, const char *a2, ...)
{
  return [a1 minSLCAccuracyThreshold];
}

id objc_msgSend_minTimeBetweenLocations(void *a1, const char *a2, ...)
{
  return [a1 minTimeBetweenLocations];
}

id objc_msgSend_minTimeBetweenPublish(void *a1, const char *a2, ...)
{
  return [a1 minTimeBetweenPublish];
}

id objc_msgSend_minTimeBetweenServerCalls(void *a1, const char *a2, ...)
{
  return [a1 minTimeBetweenServerCalls];
}

id objc_msgSend_minTimeBetweenVisitPublish(void *a1, const char *a2, ...)
{
  return [a1 minTimeBetweenVisitPublish];
}

id objc_msgSend_minimumDistance(void *a1, const char *a2, ...)
{
  return [a1 minimumDistance];
}

id objc_msgSend_minorClass(void *a1, const char *a2, ...)
{
  return [a1 minorClass];
}

id objc_msgSend_minorDeviceClass(void *a1, const char *a2, ...)
{
  return [a1 minorDeviceClass];
}

id objc_msgSend_missingDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 missingDeviceInfo];
}

id objc_msgSend_mlbSerialNumber(void *a1, const char *a2, ...)
{
  return [a1 mlbSerialNumber];
}

id objc_msgSend_mmeClientInfo(void *a1, const char *a2, ...)
{
  return [a1 mmeClientInfo];
}

id objc_msgSend_mobileEquipmentIdentifier(void *a1, const char *a2, ...)
{
  return [a1 mobileEquipmentIdentifier];
}

id objc_msgSend_mockBluetoothManager(void *a1, const char *a2, ...)
{
  return [a1 mockBluetoothManager];
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return [a1 mode];
}

id objc_msgSend_motionActivityManager(void *a1, const char *a2, ...)
{
  return [a1 motionActivityManager];
}

id objc_msgSend_motionInfo(void *a1, const char *a2, ...)
{
  return [a1 motionInfo];
}

id objc_msgSend_motionMonitor(void *a1, const char *a2, ...)
{
  return [a1 motionMonitor];
}

id objc_msgSend_msgText(void *a1, const char *a2, ...)
{
  return [a1 msgText];
}

id objc_msgSend_msgTitle(void *a1, const char *a2, ...)
{
  return [a1 msgTitle];
}

id objc_msgSend_mteStatus(void *a1, const char *a2, ...)
{
  return [a1 mteStatus];
}

id objc_msgSend_mteStatusError(void *a1, const char *a2, ...)
{
  return [a1 mteStatusError];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return [a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return [a1 mutableCopy];
}

id objc_msgSend_mutableDictionary(void *a1, const char *a2, ...)
{
  return [a1 mutableDictionary];
}

id objc_msgSend_muted(void *a1, const char *a2, ...)
{
  return [a1 muted];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return [a1 name];
}

id objc_msgSend_nanoMigrator(void *a1, const char *a2, ...)
{
  return [a1 nanoMigrator];
}

id objc_msgSend_networkAction(void *a1, const char *a2, ...)
{
  return [a1 networkAction];
}

id objc_msgSend_newDiscovery(void *a1, const char *a2, ...)
{
  return [a1 newDiscovery];
}

id objc_msgSend_newLocationManager(void *a1, const char *a2, ...)
{
  return [a1 newLocationManager];
}

id objc_msgSend_nextActionIdNumber(void *a1, const char *a2, ...)
{
  return [a1 nextActionIdNumber];
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return [a1 nextObject];
}

id objc_msgSend_nextPublishTimerFireDate(void *a1, const char *a2, ...)
{
  return [a1 nextPublishTimerFireDate];
}

id objc_msgSend_nextRegisterDate(void *a1, const char *a2, ...)
{
  return [a1 nextRegisterDate];
}

id objc_msgSend_nextRetryTime(void *a1, const char *a2, ...)
{
  return [a1 nextRetryTime];
}

id objc_msgSend_nextRetryType(void *a1, const char *a2, ...)
{
  return [a1 nextRetryType];
}

id objc_msgSend_nextScheduledJanitorDate(void *a1, const char *a2, ...)
{
  return [a1 nextScheduledJanitorDate];
}

id objc_msgSend_nonAuthenticatedHostNameInURL(void *a1, const char *a2, ...)
{
  return [a1 nonAuthenticatedHostNameInURL];
}

id objc_msgSend_nonAuthenticatedSchemeInURL(void *a1, const char *a2, ...)
{
  return [a1 nonAuthenticatedSchemeInURL];
}

id objc_msgSend_nonAuthenticatedServiceInURL(void *a1, const char *a2, ...)
{
  return [a1 nonAuthenticatedServiceInURL];
}

id objc_msgSend_notBackedUpDataArchiver(void *a1, const char *a2, ...)
{
  return [a1 notBackedUpDataArchiver];
}

id objc_msgSend_notifWhenDetachedListVersion(void *a1, const char *a2, ...)
{
  return [a1 notifWhenDetachedListVersion];
}

id objc_msgSend_notificationIdbyAccessoryIds(void *a1, const char *a2, ...)
{
  return [a1 notificationIdbyAccessoryIds];
}

id objc_msgSend_notifyOnShutdownSoon(void *a1, const char *a2, ...)
{
  return [a1 notifyOnShutdownSoon];
}

id objc_msgSend_notifyWhenDetachedAccessoryIds(void *a1, const char *a2, ...)
{
  return [a1 notifyWhenDetachedAccessoryIds];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return [a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return [a1 null];
}

id objc_msgSend_oauthToken(void *a1, const char *a2, ...)
{
  return [a1 oauthToken];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return [a1 object];
}

id objc_msgSend_objectType(void *a1, const char *a2, ...)
{
  return [a1 objectType];
}

id objc_msgSend_objectTypeKey(void *a1, const char *a2, ...)
{
  return [a1 objectTypeKey];
}

id objc_msgSend_objectTypeKeys(void *a1, const char *a2, ...)
{
  return [a1 objectTypeKeys];
}

id objc_msgSend_octStatus(void *a1, const char *a2, ...)
{
  return [a1 octStatus];
}

id objc_msgSend_octStatusError(void *a1, const char *a2, ...)
{
  return [a1 octStatusError];
}

id objc_msgSend_offlineFindingInfo(void *a1, const char *a2, ...)
{
  return [a1 offlineFindingInfo];
}

id objc_msgSend_offlineFindingStatus(void *a1, const char *a2, ...)
{
  return [a1 offlineFindingStatus];
}

id objc_msgSend_okButtonKey(void *a1, const char *a2, ...)
{
  return [a1 okButtonKey];
}

id objc_msgSend_oldLowBatteryState(void *a1, const char *a2, ...)
{
  return [a1 oldLowBatteryState];
}

id objc_msgSend_onCompletionHandler(void *a1, const char *a2, ...)
{
  return [a1 onCompletionHandler];
}

id objc_msgSend_onDemandPublishThreshold(void *a1, const char *a2, ...)
{
  return [a1 onDemandPublishThreshold];
}

id objc_msgSend_onHeadStatus(void *a1, const char *a2, ...)
{
  return [a1 onHeadStatus];
}

id objc_msgSend_ondemandLocationManager(void *a1, const char *a2, ...)
{
  return [a1 ondemandLocationManager];
}

id objc_msgSend_oneTimeRemoveAuthToken(void *a1, const char *a2, ...)
{
  return [a1 oneTimeRemoveAuthToken];
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return [a1 operationQueue];
}

id objc_msgSend_operationTransactionActive(void *a1, const char *a2, ...)
{
  return [a1 operationTransactionActive];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return [a1 operations];
}

id objc_msgSend_osBuildVersion(void *a1, const char *a2, ...)
{
  return [a1 osBuildVersion];
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return [a1 osVersion];
}

id objc_msgSend_otherDeviceInfo(void *a1, const char *a2, ...)
{
  return [a1 otherDeviceInfo];
}

id objc_msgSend_otherDevices(void *a1, const char *a2, ...)
{
  return [a1 otherDevices];
}

id objc_msgSend_overriddenBuildVersion(void *a1, const char *a2, ...)
{
  return [a1 overriddenBuildVersion];
}

id objc_msgSend_overriddenOSVersion(void *a1, const char *a2, ...)
{
  return [a1 overriddenOSVersion];
}

id objc_msgSend_overriddenTrackNotifyEnabled(void *a1, const char *a2, ...)
{
  return [a1 overriddenTrackNotifyEnabled];
}

id objc_msgSend_ownerAuthenticationManagerEraseAllContentsAndSettings(void *a1, const char *a2, ...)
{
  return [a1 ownerAuthenticationManagerEraseAllContentsAndSettings];
}

id objc_msgSend_ownerSession(void *a1, const char *a2, ...)
{
  return [a1 ownerSession];
}

id objc_msgSend_paired(void *a1, const char *a2, ...)
{
  return [a1 paired];
}

id objc_msgSend_pairedAccessories(void *a1, const char *a2, ...)
{
  return [a1 pairedAccessories];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return [a1 pairedDevices];
}

id objc_msgSend_pairedDevicesSelectorBlock(void *a1, const char *a2, ...)
{
  return [a1 pairedDevicesSelectorBlock];
}

id objc_msgSend_pairingCheckRequestInfo(void *a1, const char *a2, ...)
{
  return [a1 pairingCheckRequestInfo];
}

id objc_msgSend_pairingCheckToken(void *a1, const char *a2, ...)
{
  return [a1 pairingCheckToken];
}

id objc_msgSend_pairingId(void *a1, const char *a2, ...)
{
  return [a1 pairingId];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return [a1 path];
}

id objc_msgSend_pendingAction(void *a1, const char *a2, ...)
{
  return [a1 pendingAction];
}

id objc_msgSend_pendingActionUUID(void *a1, const char *a2, ...)
{
  return [a1 pendingActionUUID];
}

id objc_msgSend_pendingDeviceIdentityMonitor(void *a1, const char *a2, ...)
{
  return [a1 pendingDeviceIdentityMonitor];
}

id objc_msgSend_pendingLocateAlert(void *a1, const char *a2, ...)
{
  return [a1 pendingLocateAlert];
}

id objc_msgSend_pendingSecureMessage(void *a1, const char *a2, ...)
{
  return [a1 pendingSecureMessage];
}

id objc_msgSend_performWipe(void *a1, const char *a2, ...)
{
  return [a1 performWipe];
}

id objc_msgSend_performWork(void *a1, const char *a2, ...)
{
  return [a1 performWork];
}

id objc_msgSend_periodicCheckInterval(void *a1, const char *a2, ...)
{
  return [a1 periodicCheckInterval];
}

id objc_msgSend_permittedOperationBlock(void *a1, const char *a2, ...)
{
  return [a1 permittedOperationBlock];
}

id objc_msgSend_persistedValue(void *a1, const char *a2, ...)
{
  return [a1 persistedValue];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return [a1 phoneNumber];
}

id objc_msgSend_platform(void *a1, const char *a2, ...)
{
  return [a1 platform];
}

id objc_msgSend_playSound(void *a1, const char *a2, ...)
{
  return [a1 playSound];
}

id objc_msgSend_playSoundRetryCounter(void *a1, const char *a2, ...)
{
  return [a1 playSoundRetryCounter];
}

id objc_msgSend_playbackChannels(void *a1, const char *a2, ...)
{
  return [a1 playbackChannels];
}

id objc_msgSend_playingSound(void *a1, const char *a2, ...)
{
  return [a1 playingSound];
}

id objc_msgSend_policyExpirationTimes(void *a1, const char *a2, ...)
{
  return [a1 policyExpirationTimes];
}

id objc_msgSend_policyManagerQueue(void *a1, const char *a2, ...)
{
  return [a1 policyManagerQueue];
}

id objc_msgSend_policyName(void *a1, const char *a2, ...)
{
  return [a1 policyName];
}

id objc_msgSend_populateBatterStatsForCurrentDevice(void *a1, const char *a2, ...)
{
  return [a1 populateBatterStatsForCurrentDevice];
}

id objc_msgSend_positionType(void *a1, const char *a2, ...)
{
  return [a1 positionType];
}

id objc_msgSend_postConnectionStatusChangeNotification(void *a1, const char *a2, ...)
{
  return [a1 postConnectionStatusChangeNotification];
}

id objc_msgSend_powerAssertionName(void *a1, const char *a2, ...)
{
  return [a1 powerAssertionName];
}

id objc_msgSend_precision(void *a1, const char *a2, ...)
{
  return [a1 precision];
}

id objc_msgSend_primary(void *a1, const char *a2, ...)
{
  return [a1 primary];
}

id objc_msgSend_primaryBeacon(void *a1, const char *a2, ...)
{
  return [a1 primaryBeacon];
}

id objc_msgSend_primaryPublisher(void *a1, const char *a2, ...)
{
  return [a1 primaryPublisher];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return [a1 priority];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return [a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return [a1 processInfo];
}

id objc_msgSend_processRequests(void *a1, const char *a2, ...)
{
  return [a1 processRequests];
}

id objc_msgSend_productId(void *a1, const char *a2, ...)
{
  return [a1 productId];
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return [a1 productName];
}

id objc_msgSend_productType(void *a1, const char *a2, ...)
{
  return [a1 productType];
}

id objc_msgSend_productVersion(void *a1, const char *a2, ...)
{
  return [a1 productVersion];
}

id objc_msgSend_profile(void *a1, const char *a2, ...)
{
  return [a1 profile];
}

id objc_msgSend_protectedContextLock(void *a1, const char *a2, ...)
{
  return [a1 protectedContextLock];
}

id objc_msgSend_protectedIDSManager(void *a1, const char *a2, ...)
{
  return [a1 protectedIDSManager];
}

id objc_msgSend_protection(void *a1, const char *a2, ...)
{
  return [a1 protection];
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return [a1 protectionSpace];
}

id objc_msgSend_protocolSchemeOverride(void *a1, const char *a2, ...)
{
  return [a1 protocolSchemeOverride];
}

id objc_msgSend_protocols(void *a1, const char *a2, ...)
{
  return [a1 protocols];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return [a1 provider];
}

id objc_msgSend_proxyDeallocationBlock(void *a1, const char *a2, ...)
{
  return [a1 proxyDeallocationBlock];
}

id objc_msgSend_pscError(void *a1, const char *a2, ...)
{
  return [a1 pscError];
}

id objc_msgSend_pscHelloMsg(void *a1, const char *a2, ...)
{
  return [a1 pscHelloMsg];
}

id objc_msgSend_pscSUIURL(void *a1, const char *a2, ...)
{
  return [a1 pscSUIURL];
}

id objc_msgSend_pscSessionRef(void *a1, const char *a2, ...)
{
  return [a1 pscSessionRef];
}

id objc_msgSend_publishPolicies(void *a1, const char *a2, ...)
{
  return [a1 publishPolicies];
}

id objc_msgSend_publishPreviouslyReceivedLocation(void *a1, const char *a2, ...)
{
  return [a1 publishPreviouslyReceivedLocation];
}

id objc_msgSend_publishQueue(void *a1, const char *a2, ...)
{
  return [a1 publishQueue];
}

id objc_msgSend_publishReason(void *a1, const char *a2, ...)
{
  return [a1 publishReason];
}

id objc_msgSend_publishTimeInterval(void *a1, const char *a2, ...)
{
  return [a1 publishTimeInterval];
}

id objc_msgSend_publishTimer(void *a1, const char *a2, ...)
{
  return [a1 publishTimer];
}

id objc_msgSend_publishingBlock(void *a1, const char *a2, ...)
{
  return [a1 publishingBlock];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return [a1 queue];
}

id objc_msgSend_queueCount(void *a1, const char *a2, ...)
{
  return [a1 queueCount];
}

id objc_msgSend_rampDownDuration(void *a1, const char *a2, ...)
{
  return [a1 rampDownDuration];
}

id objc_msgSend_rampUpDuration(void *a1, const char *a2, ...)
{
  return [a1 rampUpDuration];
}

id objc_msgSend_ratchet(void *a1, const char *a2, ...)
{
  return [a1 ratchet];
}

id objc_msgSend_ratchetIdentifier(void *a1, const char *a2, ...)
{
  return [a1 ratchetIdentifier];
}

id objc_msgSend_ratchetManagerTurnOffFMIP(void *a1, const char *a2, ...)
{
  return [a1 ratchetManagerTurnOffFMIP];
}

id objc_msgSend_ratchetManageriCloudSignOut(void *a1, const char *a2, ...)
{
  return [a1 ratchetManageriCloudSignOut];
}

id objc_msgSend_ratchetOptions(void *a1, const char *a2, ...)
{
  return [a1 ratchetOptions];
}

id objc_msgSend_rawData(void *a1, const char *a2, ...)
{
  return [a1 rawData];
}

id objc_msgSend_rawStats(void *a1, const char *a2, ...)
{
  return [a1 rawStats];
}

id objc_msgSend_rawValue(void *a1, const char *a2, ...)
{
  return [a1 rawValue];
}

id objc_msgSend_readAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return [a1 readAccessoriesFromDisk];
}

id objc_msgSend_readAllAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return [a1 readAllAccessoriesFromDisk];
}

id objc_msgSend_readDefaultConfigurations(void *a1, const char *a2, ...)
{
  return [a1 readDefaultConfigurations];
}

id objc_msgSend_readLocationsFromDisk(void *a1, const char *a2, ...)
{
  return [a1 readLocationsFromDisk];
}

id objc_msgSend_readLostModeAccessoriesListVersion(void *a1, const char *a2, ...)
{
  return [a1 readLostModeAccessoriesListVersion];
}

id objc_msgSend_readSupportedAccessoriesFromDisk(void *a1, const char *a2, ...)
{
  return [a1 readSupportedAccessoriesFromDisk];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return [a1 reason];
}

id objc_msgSend_recalculateLostMode(void *a1, const char *a2, ...)
{
  return [a1 recalculateLostMode];
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return [a1 recordName];
}

id objc_msgSend_recordsByAccessoryIdentifier(void *a1, const char *a2, ...)
{
  return [a1 recordsByAccessoryIdentifier];
}

id objc_msgSend_refreshBeaconStats(void *a1, const char *a2, ...)
{
  return [a1 refreshBeaconStats];
}

id objc_msgSend_regions(void *a1, const char *a2, ...)
{
  return [a1 regions];
}

id objc_msgSend_registerCommand(void *a1, const char *a2, ...)
{
  return [a1 registerCommand];
}

id objc_msgSend_registerCommonNotifications(void *a1, const char *a2, ...)
{
  return [a1 registerCommonNotifications];
}

id objc_msgSend_registerDidFail(void *a1, const char *a2, ...)
{
  return [a1 registerDidFail];
}

id objc_msgSend_registerDidSucceed(void *a1, const char *a2, ...)
{
  return [a1 registerDidSucceed];
}

id objc_msgSend_registerRequestInfo(void *a1, const char *a2, ...)
{
  return [a1 registerRequestInfo];
}

id objc_msgSend_registeredDelegates(void *a1, const char *a2, ...)
{
  return [a1 registeredDelegates];
}

id objc_msgSend_registry(void *a1, const char *a2, ...)
{
  return [a1 registry];
}

id objc_msgSend_registryFileURL(void *a1, const char *a2, ...)
{
  return [a1 registryFileURL];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return [a1 reloadData];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return [a1 remoteObjectProxy];
}

id objc_msgSend_removeAccount(void *a1, const char *a2, ...)
{
  return [a1 removeAccount];
}

id objc_msgSend_removeAccountPreferences(void *a1, const char *a2, ...)
{
  return [a1 removeAccountPreferences];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return [a1 removeAllObjects];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return [a1 removeLastObject];
}

id objc_msgSend_removeOrphanedLocationFiles(void *a1, const char *a2, ...)
{
  return [a1 removeOrphanedLocationFiles];
}

id objc_msgSend_repairDeviceMode(void *a1, const char *a2, ...)
{
  return [a1 repairDeviceMode];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return [a1 request];
}

id objc_msgSend_requestAccount(void *a1, const char *a2, ...)
{
  return [a1 requestAccount];
}

id objc_msgSend_requestBody(void *a1, const char *a2, ...)
{
  return [a1 requestBody];
}

id objc_msgSend_requestBodyData(void *a1, const char *a2, ...)
{
  return [a1 requestBodyData];
}

id objc_msgSend_requestBodyDataForSignature(void *a1, const char *a2, ...)
{
  return [a1 requestBodyDataForSignature];
}