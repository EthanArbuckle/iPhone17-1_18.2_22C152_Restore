Swift::Int sub_100156628()
{
  return sub_100158250((void (*)(void))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit, &qword_10043E8A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);
}

uint64_t sub_100156670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100076CCC(a1, &qword_100464618, &qword_100464620, a2);
}

uint64_t sub_100156694()
{
  return sub_1001541F0();
}

uint64_t sub_1001566AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001544F4(a1, a2, a3);
}

uint64_t sub_1001566C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100174B38(&qword_100444EB0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100156740@<X0>(uint64_t a1@<X8>)
{
  return sub_100010A08(&qword_100464610, (uint64_t)qword_1004542F8, a1);
}

uint64_t sub_100156764(uint64_t a1)
{
  uint64_t v2 = sub_100174B38(&qword_10043F940, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001567D0()
{
  sub_100174B38(&qword_10043F940, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);

  return Message.hash(into:)();
}

void *sub_10015684C()
{
  return &unk_100427690;
}

unint64_t sub_100156858()
{
  return 0xD000000000000026;
}

uint64_t sub_100156874()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_10001AB04(v0, qword_100454310);
  sub_1000114E4(v0, (uint64_t)qword_100454310);
  sub_100002ED4(&qword_10043A618);
  v1 = (int *)(sub_100002ED4(&qword_10043A620) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100397980;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "start_time_cfat_sec";
  *(void *)(v5 + 8) = 19;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "mct_timestamp_sec";
  *(void *)(v9 + 8) = 17;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  v10 = (void *)(v4 + 2 * v2);
  v11 = (char *)v10 + v1[14];
  void *v10 = 3;
  *(void *)v11 = "type";
  *((void *)v11 + 1) = 4;
  v11[16] = 2;
  v8();
  v12 = (void *)(v4 + 3 * v2);
  v13 = (char *)v12 + v1[14];
  void *v12 = 4;
  *(void *)v13 = "confidence";
  *((void *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  v14 = (void *)(v4 + 4 * v2);
  v15 = (char *)v14 + v1[14];
  void *v14 = 5;
  *(void *)v15 = "estimated_state_probability_outdoor";
  *((void *)v15 + 1) = 35;
  v15[16] = 2;
  v8();
  v16 = (void *)(v4 + 5 * v2);
  v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)v17 = "daylight_confidence";
  *((void *)v17 + 1) = 19;
  v17[16] = 2;
  v8();
  v18 = (void *)(v4 + 6 * v2);
  v19 = (char *)v18 + v1[14];
  void *v18 = 7;
  *(void *)v19 = "is_astronomical_daytime";
  *((void *)v19 + 1) = 23;
  v19[16] = 2;
  v8();
  v20 = (void *)(v4 + 7 * v2);
  v21 = (char *)v20 + v1[14];
  void *v20 = 8;
  *(void *)v21 = "current_lux";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100156BC8()
{
  return sub_1000100B0(&qword_100464628, (uint64_t)qword_100454310);
}

uint64_t sub_100156BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100010128(&qword_100464628, (uint64_t)qword_100454310, a1);
}

uint64_t sub_100156C10()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 5:
          type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          break;
        case 3:
          type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
          sub_1001AE9F8();
          goto LABEL_8;
        case 4:
        case 6:
          type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
          sub_1001AE9A4();
LABEL_8:
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          break;
        case 7:
          type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        case 8:
          type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100156DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
  v10 = (int *)result;
  if ((*(unsigned char *)(v5 + *(int *)(result + 20) + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  if (!v4)
  {
    if ((*(unsigned char *)(v5 + v10[6] + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    }
    if (*(unsigned char *)(v5 + v10[7]) != 3)
    {
      sub_1001AE9F8();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    if (*(unsigned char *)(v5 + v10[8]) != 4)
    {
      sub_1001AE9A4();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
    }
    sub_100144CC0(v5, a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
    sub_100157014(v5);
    sub_1001295C0(v5, a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
    sub_1001438E8(v5, a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100157014(uint64_t a1)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) != 4)
  {
    sub_1001AE9A4();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int sub_1001570A4()
{
  return sub_100158250((void (*)(void))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate, &qword_10043E8B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
}

uint64_t sub_1001570EC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = a1[8];
  *(unsigned char *)(a2 + a1[7]) = 3;
  *(unsigned char *)(a2 + v8) = 4;
  uint64_t v9 = a1[10];
  uint64_t v10 = a2 + a1[9];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(unsigned char *)(a2 + v9) = 4;
  uint64_t v11 = a1[12];
  *(unsigned char *)(a2 + a1[11]) = 2;
  uint64_t v12 = a2 + v11;
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  return result;
}

uint64_t sub_100157174()
{
  return sub_100156C10();
}

uint64_t sub_10015718C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100156DF8(a1, a2, a3);
}

uint64_t sub_1001571A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100174B38(&qword_100444EA8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100157220@<X0>(uint64_t a1@<X8>)
{
  return sub_100010A08(&qword_100464628, (uint64_t)qword_100454310, a1);
}

uint64_t sub_100157244(uint64_t a1)
{
  uint64_t v2 = sub_100174B38(&qword_10043F958, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1001572B0()
{
  sub_100174B38(&qword_10043F958, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);

  return Message.hash(into:)();
}

void *sub_10015732C()
{
  return &unk_1004276A0;
}

unint64_t sub_100157338()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_100157354()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_10001AB04(v0, qword_100454328);
  sub_1000114E4(v0, (uint64_t)qword_100454328);
  sub_100002ED4(&qword_10043A618);
  v1 = (int *)(sub_100002ED4(&qword_10043A620) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10039E300;
  unint64_t v4 = v39 + v3;
  unint64_t v5 = v39 + v3 + v1[14];
  *(void *)(v39 + v3) = 1;
  *(void *)unint64_t v5 = "cf_absolute_timestamp_sec";
  *(void *)(v5 + 8) = 25;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "mach_continuous_timestamp_sec";
  *(void *)(v9 + 8) = 29;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  void *v10 = 3;
  *(void *)uint64_t v11 = "sample_interval_sec";
  *((void *)v11 + 1) = 19;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  v13 = (char *)v12 + v1[14];
  void *v12 = 4;
  *(void *)v13 = "d_pos_x_m";
  *((void *)v13 + 1) = 9;
  v13[16] = 2;
  v8();
  v14 = (void *)(v4 + 4 * v2);
  v15 = (char *)v14 + v1[14];
  void *v14 = 5;
  *(void *)v15 = "d_pos_Y_m";
  *((void *)v15 + 1) = 9;
  v15[16] = 2;
  v8();
  v16 = (void *)(v4 + 5 * v2);
  v17 = (char *)v16 + v1[14];
  void *v16 = 6;
  *(void *)v17 = "d_pos_z_m";
  *((void *)v17 + 1) = 9;
  v17[16] = 2;
  v8();
  v18 = (void *)(v4 + 6 * v2);
  v19 = (char *)v18 + v1[14];
  void *v18 = 7;
  *(void *)v19 = "d_vel_x_mps";
  *((void *)v19 + 1) = 11;
  v19[16] = 2;
  v8();
  v20 = (void *)(v4 + 7 * v2);
  v21 = (char *)v20 + v1[14];
  void *v20 = 8;
  *(void *)v21 = "d_vel_y_mps";
  *((void *)v21 + 1) = 11;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "d_vel_z_mps";
  *(void *)(v22 + 8) = 11;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  uint64_t v23 = (void *)(v4 + 9 * v2);
  v24 = (char *)v23 + v1[14];
  *uint64_t v23 = 10;
  *(void *)v24 = "q_x";
  *((void *)v24 + 1) = 3;
  v24[16] = 2;
  v8();
  v25 = (void *)(v4 + 10 * v2);
  v26 = (char *)v25 + v1[14];
  void *v25 = 11;
  *(void *)v26 = "q_y";
  *((void *)v26 + 1) = 3;
  v26[16] = 2;
  v8();
  v27 = (void *)(v4 + 11 * v2);
  v28 = (char *)v27 + v1[14];
  void *v27 = 12;
  *(void *)v28 = "q_z";
  *((void *)v28 + 1) = 3;
  v28[16] = 2;
  v8();
  v29 = (void *)(v4 + 12 * v2);
  v30 = (char *)v29 + v1[14];
  void *v29 = 13;
  *(void *)v30 = "q_w";
  *((void *)v30 + 1) = 3;
  v30[16] = 2;
  v8();
  v31 = (void *)(v4 + 13 * v2);
  v32 = (char *)v31 + v1[14];
  void *v31 = 14;
  *(void *)v32 = "reference_frame";
  *((void *)v32 + 1) = 15;
  v32[16] = 2;
  v8();
  v33 = (void *)(v4 + 14 * v2);
  v34 = (char *)v33 + v1[14];
  void *v33 = 15;
  *(void *)v34 = "is_delta_position_valid";
  *((void *)v34 + 1) = 23;
  v34[16] = 2;
  v8();
  v35 = (void *)(v4 + 15 * v2);
  v36 = (char *)v35 + v1[14];
  void *v35 = 16;
  *(void *)v36 = "is_delta_velocity_valid";
  *((void *)v36 + 1) = 23;
  v36[16] = 2;
  v8();
  uint64_t v37 = v4 + 16 * v2 + v1[14];
  *(void *)(v4 + 16 * v2) = 17;
  *(void *)uint64_t v37 = "is_attitude_valid";
  *(void *)(v37 + 8) = 17;
  *(unsigned char *)(v37 + 16) = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_1001578A8()
{
  return sub_1000100B0(&qword_100464630, (uint64_t)qword_100454328);
}

uint64_t sub_1001578CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100010128(&qword_100464630, (uint64_t)qword_100454328, a1);
}

double sub_1001578F0()
{
  type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample._StorageClass();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  *(_DWORD *)(v0 + 44) = 0;
  *(unsigned char *)(v0 + 48) = 1;
  *(_DWORD *)(v0 + 52) = 0;
  *(unsigned char *)(v0 + 56) = 1;
  *(_DWORD *)(v0 + 60) = 0;
  *(unsigned char *)(v0 + 64) = 1;
  *(_DWORD *)(v0 + 68) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(_DWORD *)(v0 + 76) = 0;
  *(unsigned char *)(v0 + 80) = 1;
  *(_DWORD *)(v0 + 84) = 0;
  *(unsigned char *)(v0 + 88) = 1;
  *(_DWORD *)(v0 + 92) = 0;
  *(unsigned char *)(v0 + 96) = 1;
  *(_DWORD *)(v0 + 100) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(_DWORD *)(v0 + 108) = 0;
  *(unsigned char *)(v0 + 112) = 1;
  *(_DWORD *)(v0 + 116) = 0;
  *(unsigned char *)(v0 + 120) = 1;
  *(_DWORD *)(v0 + 124) = 0;
  *(unsigned char *)(v0 + 128) = 1;
  *(void *)&double result = 33686019;
  *(_DWORD *)(v0 + 129) = 33686019;
  qword_100464640 = v0;
  return result;
}

uint64_t sub_100157994()
{
  return _swift_deallocClassInstance(v0, 133, 7);
}

uint64_t sub_1001579A4()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v0 + v4);
    type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_10015F42C(v5);
    *(void *)(v3 + v4) = v6;
    swift_release();
  }
  swift_retain();
  uint64_t v7 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v1)
  {
    while ((v8 & 1) == 0)
    {
      switch(v7)
      {
        case 1:
        case 2:
          swift_beginAccess();
          uint64_t v10 = v2;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
          goto LABEL_11;
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
          swift_beginAccess();
          uint64_t v10 = v2;
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          goto LABEL_11;
        case 14:
          swift_beginAccess();
          sub_1001ADDD4();
          uint64_t v10 = v2;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_11;
        case 15:
        case 16:
        case 17:
          swift_beginAccess();
          uint64_t v10 = v2;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
LABEL_11:
          uint64_t v2 = v10;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t v7 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return swift_release();
}

uint64_t sub_100157D14()
{
  uint64_t v2 = *(unsigned char **)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample(0) + 20));
  swift_retain();
  swift_beginAccess();
  if ((v2[24] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  if (v1) {
    return swift_release();
  }
  swift_beginAccess();
  if ((v2[40] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[48] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[56] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[64] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[72] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[80] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[88] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[96] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[104] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[112] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[120] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if ((v2[128] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if (v2[129] != 3)
  {
    sub_1001ADDD4();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  swift_beginAccess();
  if (v2[130] != 2) {
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if (v2[131] != 2) {
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  swift_beginAccess();
  if (v2[132] != 2) {
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  swift_release();
  return UnknownStorage.traverse<A>(visitor:)();
}

Swift::Int sub_100158208()
{
  return sub_100158250((void (*)(void))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample, &qword_10043E8B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);
}

Swift::Int sub_100158250(void (*a1)(void), unint64_t *a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

uint64_t sub_1001582D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100076CCC(a1, &qword_100464638, &qword_100464640, a2);
}

uint64_t sub_1001582FC()
{
  return sub_1001579A4();
}

uint64_t sub_100158314()
{
  return sub_100157D14();
}

uint64_t sub_10015832C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100174B38(&qword_100444EA0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1001583A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100010A08(&qword_100464630, (uint64_t)qword_100454328, a1);
}

uint64_t sub_1001583CC(uint64_t a1)
{
  uint64_t v2 = sub_100174B38(&qword_10043F970, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100158438()
{
  sub_100174B38(&qword_10043F970, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);

  return Message.hash(into:)();
}

uint64_t sub_1001584B4()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_10001AB04(v0, qword_100454340);
  sub_1000114E4(v0, (uint64_t)qword_100454340);
  sub_100002ED4(&qword_10043A618);
  uint64_t v1 = (int *)(sub_100002ED4(&qword_10043A620) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100396A80;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "RF_UNKNOWN";
  *(void *)(v6 + 8) = 10;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  unint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "RF_X_ARBITRARY_Z_VERTICAL";
  *((void *)v10 + 1) = 25;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 2;
  *(void *)uint64_t v11 = "RF_X_TRUE_NORTH_Z_VERTICAL";
  *(void *)(v11 + 8) = 26;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_1001586B4()
{
  return sub_1000100B0(&qword_100464648, (uint64_t)qword_100454340);
}

uint64_t sub_1001586D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100010128(&qword_100464648, (uint64_t)qword_100454340, a1);
}

uint64_t sub_1001586FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100010A08(&qword_100464648, (uint64_t)qword_100454340, a1);
}

uint64_t sub_100158720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        sub_10015B2EC(a1 + v12, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        sub_10015B2EC(a2 + v12, (uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        uint64_t v15 = *(int *)(v4 + 20);
        v16 = (double *)&v10[v15];
        char v17 = v10[v15 + 8];
        v18 = (double *)&v7[v15];
        int v19 = v7[v15 + 8];
        if (v17)
        {
          if (!v19) {
            goto LABEL_24;
          }
        }
        else
        {
          if (*v16 != *v18) {
            LOBYTE(v19) = 1;
          }
          if (v19)
          {
LABEL_24:
            sub_10015B354((uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            goto LABEL_25;
          }
        }
        uint64_t v20 = *(int *)(v4 + 24);
        v21 = (double *)&v10[v20];
        char v22 = v10[v20 + 8];
        uint64_t v23 = (double *)&v7[v20];
        int v24 = v7[v20 + 8];
        if (v22)
        {
          if (!v24) {
            goto LABEL_24;
          }
        }
        else
        {
          if (*v21 != *v23) {
            LOBYTE(v24) = 1;
          }
          if (v24) {
            goto LABEL_24;
          }
        }
        type metadata accessor for UnknownStorage();
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_10015B354((uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        BOOL v27 = v14-- != 0;
        if (v25)
        {
          v12 += v13;
          if (v27) {
            continue;
          }
        }
        return v25 & 1;
      }
    }
    char v25 = 1;
  }
  else
  {
LABEL_25:
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_1001589A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v60 - v9;
  v69 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch(0);
  uint64_t v11 = __chkstk_darwin(v69);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v16 = (char *)&v60 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (v17 && a1 != a2)
    {
      uint64_t v18 = 0;
      unint64_t v19 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v20 = a1 + v19;
      uint64_t v21 = a2 + v19;
      uint64_t v22 = *(void *)(v14 + 72);
      uint64_t v68 = v4;
      uint64_t v64 = a1 + v19;
      uint64_t v65 = v17;
      uint64_t v63 = a2 + v19;
      uint64_t v61 = v5;
      uint64_t v62 = v22;
      while (1)
      {
        uint64_t v66 = v18;
        uint64_t v23 = v22 * v18;
        sub_10015B2EC(v20 + v22 * v18, (uint64_t)v16, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
        sub_10015B2EC(v21 + v23, (uint64_t)v13, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
        uint64_t v24 = *(void *)v16;
        uint64_t v25 = *(void *)v13;
        uint64_t v26 = *(void *)(*(void *)v16 + 16);
        if (v26 != *(void *)(*(void *)v13 + 16)) {
          goto LABEL_54;
        }
        if (v26 && v24 != v25)
        {
          unint64_t v27 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
          uint64_t v67 = *(void *)(v61 + 72);
          do
          {
            sub_10015B2EC(v24 + v27, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            sub_10015B2EC(v25 + v27, (uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            uint64_t v28 = *(int *)(v4 + 20);
            uint64_t v29 = (double *)&v10[v28];
            char v30 = v10[v28 + 8];
            v31 = (double *)&v8[v28];
            int v32 = v8[v28 + 8];
            if (v30)
            {
              if (!v32) {
                goto LABEL_53;
              }
            }
            else
            {
              if (*v29 != *v31) {
                LOBYTE(v32) = 1;
              }
              if (v32)
              {
LABEL_53:
                sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
                sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
                goto LABEL_54;
              }
            }
            uint64_t v33 = *(int *)(v4 + 24);
            v34 = (double *)&v10[v33];
            char v35 = v10[v33 + 8];
            v36 = (double *)&v8[v33];
            int v37 = v8[v33 + 8];
            if (v35)
            {
              if (!v37) {
                goto LABEL_53;
              }
            }
            else
            {
              if (*v34 != *v36) {
                LOBYTE(v37) = 1;
              }
              if (v37) {
                goto LABEL_53;
              }
            }
            type metadata accessor for UnknownStorage();
            sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
            sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            uint64_t v4 = v68;
            sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            if ((v38 & 1) == 0) {
              goto LABEL_54;
            }
            v27 += v67;
            --v26;
          }
          while (v26);
        }
        uint64_t v39 = v69[6];
        int v40 = v16[v39];
        int v41 = v13[v39];
        if (v40 == 4)
        {
          if (v41 != 4) {
            goto LABEL_54;
          }
        }
        else if (v41 == 4 || v40 != v41)
        {
          goto LABEL_54;
        }
        uint64_t v43 = v69[7];
        v44 = &v16[v43];
        char v45 = v16[v43 + 4];
        v46 = &v13[v43];
        int v47 = v13[v43 + 4];
        if (v45)
        {
          if (!v47) {
            goto LABEL_54;
          }
        }
        else
        {
          if (*(_DWORD *)v44 != *(_DWORD *)v46) {
            LOBYTE(v47) = 1;
          }
          if (v47)
          {
LABEL_54:
            sub_10015B354((uint64_t)v13, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
            sub_10015B354((uint64_t)v16, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
            goto LABEL_55;
          }
        }
        uint64_t v48 = v69[8];
        v49 = &v16[v48];
        char v50 = v16[v48 + 4];
        v51 = &v13[v48];
        int v52 = v13[v48 + 4];
        if (v50)
        {
          if (!v52) {
            goto LABEL_54;
          }
        }
        else
        {
          if (*(_DWORD *)v49 != *(_DWORD *)v51) {
            LOBYTE(v52) = 1;
          }
          if (v52) {
            goto LABEL_54;
          }
        }
        uint64_t v53 = v69[9];
        v54 = &v16[v53];
        char v55 = v16[v53 + 4];
        v56 = &v13[v53];
        int v57 = v13[v53 + 4];
        if (v55)
        {
          if (!v57) {
            goto LABEL_54;
          }
        }
        else
        {
          if (*(_DWORD *)v54 != *(_DWORD *)v56) {
            LOBYTE(v57) = 1;
          }
          if (v57) {
            goto LABEL_54;
          }
        }
        type metadata accessor for UnknownStorage();
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_10015B354((uint64_t)v13, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
        sub_10015B354((uint64_t)v16, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
        if (v58)
        {
          uint64_t v18 = v66 + 1;
          uint64_t v4 = v68;
          uint64_t v21 = v63;
          uint64_t v20 = v64;
          uint64_t v22 = v62;
          if (v66 + 1 != v65) {
            continue;
          }
        }
        return v58 & 1;
      }
    }
    char v58 = 1;
  }
  else
  {
LABEL_55:
    char v58 = 0;
  }
  return v58 & 1;
}

uint64_t sub_100158F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v23 = a5;
  uint64_t v24 = a3(0);
  uint64_t v8 = __chkstk_darwin(v24);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14 == *(void *)(a2 + 16))
  {
    if (!v14 || a1 == a2) {
      return 1;
    }
    unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v22 = *(void *)(v11 + 72);
    while (1)
    {
      sub_10015B2EC(a1 + v15, (uint64_t)v13, a4);
      sub_10015B2EC(a2 + v15, (uint64_t)v10, a4);
      uint64_t v16 = *(int *)(v24 + 20);
      uint64_t v17 = *(void *)&v13[v16];
      uint64_t v18 = *(void *)&v10[v16];
      if (v17 != v18)
      {
        swift_retain();
        swift_retain();
        char v19 = v23(v17, v18);
        swift_release();
        swift_release();
        if ((v19 & 1) == 0) {
          break;
        }
      }
      type metadata accessor for UnknownStorage();
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
        break;
      }
      sub_10015B354((uint64_t)v10, a4);
      sub_10015B354((uint64_t)v13, a4);
      v15 += v22;
      if (!--v14) {
        return 1;
      }
    }
    sub_10015B354((uint64_t)v10, a4);
    sub_10015B354((uint64_t)v13, a4);
  }
  return 0;
}

uint64_t sub_100159148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t (*)(void))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_10015B2EC(a1 + v17, (uint64_t)v15, a4);
        sub_10015B2EC(a2 + v17, (uint64_t)v12, a4);
        char v20 = sub_10016F75C((uint64_t)v15, v12, a5);
        sub_10015B354((uint64_t)v12, a4);
        sub_10015B354((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1001592D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_10015B2EC(a1 + v17, (uint64_t)v15, a4);
        sub_10015B2EC(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_10015B354((uint64_t)v12, a4);
        sub_10015B354((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_100159458(uint64_t a1, uint64_t a2)
{
  uint64_t v117 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v4 = *(void *)(v117 - 8);
  uint64_t v5 = __chkstk_darwin(v117);
  uint64_t v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v101 - v8;
  v118 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection(0);
  uint64_t v10 = *((void *)v118 - 1);
  uint64_t v11 = __chkstk_darwin(v118);
  v119 = (uint64_t *)((char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v101 - v13;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v101 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16))
  {
LABEL_90:
    char v100 = 0;
    return v100 & 1;
  }
  if (!v22 || a1 == a2)
  {
    char v100 = 1;
    return v100 & 1;
  }
  uint64_t v101 = v4;
  uint64_t v23 = 0;
  unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = *(void *)(v19 + 72);
  uint64_t v114 = v15;
  uint64_t v115 = a2 + v24;
  uint64_t v107 = a1 + v24;
  uint64_t v108 = v22;
  uint64_t v106 = v26;
  while (1)
  {
    uint64_t v116 = v23;
    uint64_t v27 = v26 * v23;
    sub_10015B2EC(v25 + v26 * v23, (uint64_t)v21, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
    sub_10015B2EC(v115 + v27, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
    uint64_t v28 = *(void *)v21;
    uint64_t v29 = *(void *)v18;
    uint64_t v30 = *(void *)(*(void *)v21 + 16);
    if (v30 != *(void *)(*(void *)v18 + 16))
    {
LABEL_89:
      sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
      sub_10015B354((uint64_t)v21, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
      goto LABEL_90;
    }
    if (v30 && v28 != v29) {
      break;
    }
LABEL_71:
    uint64_t v90 = *(int *)(v15 + 24);
    v91 = &v21[v90];
    char v92 = v21[v90 + 8];
    v93 = &v18[v90];
    int v94 = v18[v90 + 8];
    if (v92)
    {
      if (!v94) {
        goto LABEL_89;
      }
    }
    else
    {
      if (*(void *)v91 != *(void *)v93) {
        LOBYTE(v94) = 1;
      }
      if (v94) {
        goto LABEL_89;
      }
    }
    uint64_t v95 = *(int *)(v15 + 28);
    v96 = &v21[v95];
    char v97 = v21[v95 + 8];
    v98 = &v18[v95];
    int v99 = v18[v95 + 8];
    if (v97)
    {
      if (!v99) {
        goto LABEL_89;
      }
    }
    else
    {
      if (*(void *)v96 != *(void *)v98) {
        LOBYTE(v99) = 1;
      }
      if (v99) {
        goto LABEL_89;
      }
    }
    type metadata accessor for UnknownStorage();
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v100 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
    sub_10015B354((uint64_t)v21, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
    if (v100)
    {
      uint64_t v23 = v116 + 1;
      uint64_t v25 = v107;
      uint64_t v15 = v114;
      uint64_t v26 = v106;
      if (v116 + 1 != v108) {
        continue;
      }
    }
    return v100 & 1;
  }
  unint64_t v31 = 0;
  unint64_t v32 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v33 = v28 + v32;
  v110 = v18;
  uint64_t v111 = v29 + v32;
  uint64_t v34 = *(void *)(v10 + 72);
  uint64_t v104 = v30;
  uint64_t v105 = v10;
  v109 = v21;
  uint64_t v112 = v29;
  uint64_t v102 = v34;
  uint64_t v103 = v33;
  while (1)
  {
    uint64_t v35 = v34 * v31;
    uint64_t result = sub_10015B2EC(v33 + v34 * v31, (uint64_t)v14, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
    if (v31 >= *(void *)(v112 + 16)) {
      break;
    }
    unint64_t v113 = v31;
    uint64_t v37 = v111 + v35;
    char v38 = v119;
    sub_10015B2EC(v37, (uint64_t)v119, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
    uint64_t v39 = *(void *)v14;
    uint64_t v40 = *v38;
    uint64_t v41 = *(void *)(*(void *)v14 + 16);
    if (v41 != *(void *)(v40 + 16)) {
      goto LABEL_88;
    }
    if (v41 && v39 != v40)
    {
      unint64_t v42 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      uint64_t v43 = *(void *)(v101 + 72);
      do
      {
        sub_10015B2EC(v39 + v42, (uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        sub_10015B2EC(v40 + v42, (uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        uint64_t v44 = *(int *)(v117 + 20);
        char v45 = (double *)&v9[v44];
        char v46 = v9[v44 + 8];
        int v47 = (double *)&v7[v44];
        int v48 = v7[v44 + 8];
        if (v46)
        {
          if (!v48) {
            goto LABEL_87;
          }
        }
        else
        {
          if (*v45 != *v47) {
            LOBYTE(v48) = 1;
          }
          if (v48)
          {
LABEL_87:
            sub_10015B354((uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
            goto LABEL_88;
          }
        }
        uint64_t v49 = *(int *)(v117 + 24);
        char v50 = (double *)&v9[v49];
        char v51 = v9[v49 + 8];
        int v52 = (double *)&v7[v49];
        int v53 = v7[v49 + 8];
        if (v51)
        {
          if (!v53) {
            goto LABEL_87;
          }
        }
        else
        {
          if (*v50 != *v52) {
            LOBYTE(v53) = 1;
          }
          if (v53) {
            goto LABEL_87;
          }
        }
        type metadata accessor for UnknownStorage();
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_10015B354((uint64_t)v7, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
        if ((v54 & 1) == 0) {
          goto LABEL_88;
        }
        v42 += v43;
        --v41;
      }
      while (v41);
    }
    uint64_t v55 = v118[6];
    v56 = (double *)&v14[v55];
    char v57 = v14[v55 + 8];
    char v58 = (double *)((char *)v119 + v55);
    int v59 = *((unsigned __int8 *)v119 + v55 + 8);
    if (v57)
    {
      if (!v59) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v56 != *v58) {
        LOBYTE(v59) = 1;
      }
      if (v59)
      {
LABEL_88:
        sub_10015B354((uint64_t)v119, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
        sub_10015B354((uint64_t)v14, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
        uint64_t v21 = v109;
        uint64_t v18 = v110;
        goto LABEL_89;
      }
    }
    uint64_t v60 = v118[7];
    uint64_t v61 = (double *)&v14[v60];
    char v62 = v14[v60 + 8];
    uint64_t v63 = (double *)((char *)v119 + v60);
    int v64 = *((unsigned __int8 *)v119 + v60 + 8);
    if (v62)
    {
      if (!v64) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v61 != *v63) {
        LOBYTE(v64) = 1;
      }
      if (v64) {
        goto LABEL_88;
      }
    }
    uint64_t v65 = v118[8];
    int v66 = v14[v65];
    int v67 = *((unsigned __int8 *)v119 + v65);
    if (v66 == 2)
    {
      if (v67 != 2) {
        goto LABEL_88;
      }
    }
    else if (v67 == 2 || ((((v67 & 1) == 0) ^ v66) & 1) == 0)
    {
      goto LABEL_88;
    }
    uint64_t v68 = v118[9];
    v69 = (double *)&v14[v68];
    char v70 = v14[v68 + 8];
    v71 = (double *)((char *)v119 + v68);
    int v72 = *((unsigned __int8 *)v119 + v68 + 8);
    if (v70)
    {
      if (!v72) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v69 != *v71) {
        LOBYTE(v72) = 1;
      }
      if (v72) {
        goto LABEL_88;
      }
    }
    uint64_t v73 = v118[10];
    v74 = (double *)&v14[v73];
    char v75 = v14[v73 + 8];
    v76 = (double *)((char *)v119 + v73);
    int v77 = *((unsigned __int8 *)v119 + v73 + 8);
    if (v75)
    {
      if (!v77) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v74 != *v76) {
        LOBYTE(v77) = 1;
      }
      if (v77) {
        goto LABEL_88;
      }
    }
    uint64_t v78 = v118[11];
    v79 = (double *)&v14[v78];
    char v80 = v14[v78 + 8];
    v81 = (double *)((char *)v119 + v78);
    int v82 = *((unsigned __int8 *)v119 + v78 + 8);
    if (v80)
    {
      if (!v82) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v79 != *v81) {
        LOBYTE(v82) = 1;
      }
      if (v82) {
        goto LABEL_88;
      }
    }
    uint64_t v83 = v118[12];
    v84 = (double *)&v14[v83];
    char v85 = v14[v83 + 8];
    v86 = (double *)((char *)v119 + v83);
    int v87 = *((unsigned __int8 *)v119 + v83 + 8);
    if (v85)
    {
      if (!v87) {
        goto LABEL_88;
      }
    }
    else
    {
      if (*v84 != *v86) {
        LOBYTE(v87) = 1;
      }
      if (v87) {
        goto LABEL_88;
      }
    }
    uint64_t v88 = (uint64_t)v119;
    type metadata accessor for UnknownStorage();
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v89 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_10015B354(v88, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
    sub_10015B354((uint64_t)v14, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
    uint64_t v10 = v105;
    uint64_t v21 = v109;
    uint64_t v18 = v110;
    uint64_t v15 = v114;
    if ((v89 & 1) == 0) {
      goto LABEL_89;
    }
    unint64_t v31 = v113 + 1;
    uint64_t v34 = v102;
    uint64_t v33 = v103;
    if (v113 + 1 == v104) {
      goto LABEL_71;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_100159D18(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  uint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_100159D8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  BOOL v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_10015B2EC(a1 + v17, (uint64_t)v15, a4);
        sub_10015B2EC(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_10015B354((uint64_t)v12, a4);
        sub_10015B354((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

unint64_t sub_100159F14(unint64_t result)
{
  if (result >= 0xE) {
    return 14;
  }
  return result;
}

uint64_t sub_100159F24(uint64_t a1)
{
  if (a1 <= 11804)
  {
    if (a1 <= 2009)
    {
      uint64_t result = 0;
      switch(a1)
      {
        case 0:
          return result;
        case 1:
          uint64_t result = 1;
          break;
        case 2:
          uint64_t result = 2;
          break;
        case 3:
          uint64_t result = 3;
          break;
        case 4:
          uint64_t result = 4;
          break;
        case 5:
          uint64_t result = 5;
          break;
        case 6:
          uint64_t result = 6;
          break;
        case 7:
          uint64_t result = 7;
          break;
        case 8:
          uint64_t result = 8;
          break;
        case 9:
          uint64_t result = 9;
          break;
        case 10:
          uint64_t result = 10;
          break;
        case 11:
          uint64_t result = 11;
          break;
        case 41:
          uint64_t result = 12;
          break;
        case 52:
          uint64_t result = 13;
          break;
        case 56:
          uint64_t result = 14;
          break;
        case 61:
          uint64_t result = 15;
          break;
        case 62:
          uint64_t result = 16;
          break;
        case 63:
          uint64_t result = 39;
          break;
        case 64:
          uint64_t result = 46;
          break;
        case 65:
          uint64_t result = 47;
          break;
        case 66:
          uint64_t result = 60;
          break;
        case 100:
          uint64_t result = 17;
          break;
        default:
          return 72;
      }
      return result;
    }
    if (a1 <= 2149)
    {
      switch(a1)
      {
        case 2010:
          uint64_t result = 18;
          break;
        case 2020:
          uint64_t result = 19;
          break;
        case 2022:
          uint64_t result = 35;
          break;
        case 2024:
          uint64_t result = 37;
          break;
        case 2048:
          uint64_t result = 20;
          break;
        case 2061:
          uint64_t result = 21;
          break;
        case 2065:
          uint64_t result = 22;
          break;
        case 2068:
          uint64_t result = 69;
          break;
        case 2071:
          uint64_t result = 23;
          break;
        case 2101:
          uint64_t result = 36;
          break;
        case 2105:
          uint64_t result = 24;
          break;
        default:
          return 72;
      }
      return result;
    }
    switch(a1)
    {
      case 2150:
        return 25;
      case 3015:
        return 26;
      case 3016:
        return 71;
    }
    return 72;
  }
  if (a1 <= 15651)
  {
    if (a1 > 15254)
    {
      if (a1 <= 15459)
      {
        if (a1 > 15349)
        {
          if (a1 == 15350) {
            return 55;
          }
          if (a1 == 15360) {
            return 54;
          }
        }
        else
        {
          if (a1 == 15255) {
            return 29;
          }
          if (a1 == 15330) {
            return 63;
          }
        }
      }
      else if (a1 <= 15591)
      {
        if (a1 == 15460) {
          return 51;
        }
        if (a1 == 15562) {
          return 50;
        }
      }
      else
      {
        switch(a1)
        {
          case 15592:
            return 52;
          case 15610:
            return 45;
          case 15620:
            return 65;
        }
      }
    }
    else if (a1 <= 15099)
    {
      if (a1 > 15029)
      {
        if (a1 == 15030) {
          return 58;
        }
        if (a1 == 15055) {
          return 56;
        }
      }
      else
      {
        if (a1 == 11805) {
          return 27;
        }
        if (a1 == 12150) {
          return 28;
        }
      }
    }
    else if (a1 <= 15149)
    {
      if (a1 == 15100) {
        return 70;
      }
      if (a1 == 15110) {
        return 40;
      }
    }
    else
    {
      switch(a1)
      {
        case 15150:
          return 67;
        case 15230:
          return 48;
        case 15240:
          return 49;
      }
    }
    return 72;
  }
  if (a1 > 18224)
  {
    if (a1 <= 19149)
    {
      if (a1 > 19029)
      {
        if (a1 == 19030) {
          return 53;
        }
        if (a1 == 19090) {
          return 42;
        }
      }
      else
      {
        if (a1 == 18225) {
          return 44;
        }
        if (a1 == 18240) {
          return 32;
        }
      }
    }
    else if (a1 <= 90602)
    {
      if (a1 == 19150) {
        return 34;
      }
      if (a1 == 19160) {
        return 43;
      }
    }
    else
    {
      switch(a1)
      {
        case 90603:
          return 33;
        case 515621:
          return 66;
        case 515652:
          return 59;
      }
    }
    return 72;
  }
  if (a1 > 15732)
  {
    if (a1 > 18069)
    {
      if (a1 == 18070) {
        return 41;
      }
      if (a1 == 18200) {
        return 31;
      }
    }
    else
    {
      if (a1 == 15733) {
        return 64;
      }
      if (a1 == 17150) {
        return 30;
      }
    }
    return 72;
  }
  switch(a1)
  {
    case 15652:
      uint64_t result = 62;
      break;
    case 15653:
    case 15654:
    case 15655:
    case 15656:
    case 15657:
    case 15658:
    case 15659:
    case 15661:
    case 15662:
    case 15663:
    case 15664:
    case 15665:
    case 15666:
    case 15667:
    case 15668:
    case 15669:
    case 15671:
    case 15672:
    case 15673:
    case 15674:
      return 72;
    case 15660:
      uint64_t result = 68;
      break;
    case 15670:
      uint64_t result = 38;
      break;
    case 15675:
      uint64_t result = 57;
      break;
    default:
      if (a1 != 15710) {
        return 72;
      }
      uint64_t result = 61;
      break;
  }
  return result;
}

uint64_t sub_10015A7D4(uint64_t a1)
{
  uint64_t result = 0;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    default:
      if (a1 == 1001) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 5;
      }
      break;
  }
  return result;
}

unint64_t sub_10015A840(unint64_t result)
{
  if (result >= 0xF) {
    return 15;
  }
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004801E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_AccelSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004801F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Accel(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480200);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GyroSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480210);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Gyro(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480220);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_BaroSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480230);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Baro(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480240);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480250);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480260);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480750);
}

uint64_t sub_10015A990(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E460);
  __chkstk_darwin(v3 - 8);
  uint64_t v76 = (uint64_t)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v1 + 16) = 4;
  uint64_t v5 = v1
     + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__coordinate;
  uint64_t v75 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__coordinate;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate(0);
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v5, 1, 1, v6);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalAccuracy;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__altitude;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalAccuracy;
  uint64_t v77 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalAccuracy;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speed;
  uint64_t v78 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speed;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speedAccuracy;
  uint64_t v79 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speedAccuracy;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__course;
  uint64_t v80 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__course;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 1;
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAccuracy;
  uint64_t v81 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAccuracy;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__timestamp;
  uint64_t v82 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__timestamp;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__confidence;
  uint64_t v83 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__confidence;
  *(_DWORD *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 4) = 1;
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lifespan;
  uint64_t v84 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lifespan;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v18 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__type);
  unsigned char *v18 = 14;
  char v85 = v18;
  uint64_t v86 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCoordinate;
  v7();
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourse;
  uint64_t v87 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourse;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__floor;
  uint64_t v88 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__floor;
  *(_DWORD *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 4) = 1;
  char v89 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__integrity);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__integrity) = 5;
  uint64_t v90 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__referenceFrame);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__referenceFrame) = 3;
  v91 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawReferenceFrame);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawReferenceFrame) = 3;
  v93 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__signalEnvironmentType);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__signalEnvironmentType) = 8;
  uint64_t v21 = v1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__ellipsoidalAltitude;
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  char v92 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fromSimulationController);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fromSimulationController) = 2;
  swift_beginAccess();
  char v22 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = v22;
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__coordinate;
  swift_beginAccess();
  uint64_t v24 = v76;
  sub_100011480(v23, v76, &qword_10043E460);
  uint64_t v25 = v75;
  swift_beginAccess();
  sub_1000112DC(v24, v25, &qword_10043E460);
  swift_endAccess();
  uint64_t v26 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalAccuracy);
  swift_beginAccess();
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  swift_beginAccess();
  *(void *)uint64_t v8 = v27;
  *(unsigned char *)(v8 + 8) = (_BYTE)v26;
  uint64_t v28 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__altitude);
  swift_beginAccess();
  uint64_t v29 = *v28;
  LOBYTE(v28) = *((unsigned char *)v28 + 8);
  swift_beginAccess();
  *(void *)uint64_t v9 = v29;
  *(unsigned char *)(v9 + 8) = (_BYTE)v28;
  uint64_t v30 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalAccuracy);
  swift_beginAccess();
  uint64_t v31 = *v30;
  LOBYTE(v30) = *((unsigned char *)v30 + 8);
  uint64_t v32 = v77;
  swift_beginAccess();
  *(void *)uint64_t v32 = v31;
  *(unsigned char *)(v32 + 8) = (_BYTE)v30;
  uint64_t v33 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speed);
  swift_beginAccess();
  uint64_t v34 = *v33;
  LOBYTE(v33) = *((unsigned char *)v33 + 8);
  uint64_t v35 = v78;
  swift_beginAccess();
  *(void *)uint64_t v35 = v34;
  *(unsigned char *)(v35 + 8) = (_BYTE)v33;
  v36 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__speedAccuracy);
  swift_beginAccess();
  uint64_t v37 = *v36;
  LOBYTE(v36) = *((unsigned char *)v36 + 8);
  uint64_t v38 = v79;
  swift_beginAccess();
  *(void *)uint64_t v38 = v37;
  *(unsigned char *)(v38 + 8) = (_BYTE)v36;
  uint64_t v39 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__course);
  swift_beginAccess();
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  uint64_t v41 = v80;
  swift_beginAccess();
  *(void *)uint64_t v41 = v40;
  *(unsigned char *)(v41 + 8) = (_BYTE)v39;
  unint64_t v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAccuracy);
  swift_beginAccess();
  uint64_t v43 = *v42;
  LOBYTE(v42) = *((unsigned char *)v42 + 8);
  uint64_t v44 = v81;
  swift_beginAccess();
  *(void *)uint64_t v44 = v43;
  *(unsigned char *)(v44 + 8) = (_BYTE)v42;
  char v45 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__timestamp);
  swift_beginAccess();
  uint64_t v46 = *v45;
  LOBYTE(v45) = *((unsigned char *)v45 + 8);
  uint64_t v47 = v82;
  swift_beginAccess();
  *(void *)uint64_t v47 = v46;
  *(unsigned char *)(v47 + 8) = (_BYTE)v45;
  uint64_t v48 = a1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__confidence;
  swift_beginAccess();
  LODWORD(v46) = *(_DWORD *)v48;
  LOBYTE(v48) = *(unsigned char *)(v48 + 4);
  uint64_t v49 = v83;
  swift_beginAccess();
  *(_DWORD *)uint64_t v49 = v46;
  *(unsigned char *)(v49 + 4) = v48;
  char v50 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lifespan);
  swift_beginAccess();
  uint64_t v51 = *v50;
  LOBYTE(v50) = *((unsigned char *)v50 + 8);
  uint64_t v52 = v84;
  swift_beginAccess();
  *(void *)uint64_t v52 = v51;
  *(unsigned char *)(v52 + 8) = (_BYTE)v50;
  int v53 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__type);
  swift_beginAccess();
  LOBYTE(v53) = *v53;
  char v54 = v85;
  swift_beginAccess();
  unsigned char *v54 = (_BYTE)v53;
  uint64_t v55 = a1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCoordinate;
  swift_beginAccess();
  sub_100011480(v55, v24, &qword_10043E460);
  uint64_t v56 = v86;
  swift_beginAccess();
  sub_1000112DC(v24, v56, &qword_10043E460);
  swift_endAccess();
  char v57 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourse);
  swift_beginAccess();
  uint64_t v58 = *v57;
  LOBYTE(v57) = *((unsigned char *)v57 + 8);
  uint64_t v59 = v87;
  swift_beginAccess();
  *(void *)uint64_t v59 = v58;
  *(unsigned char *)(v59 + 8) = (_BYTE)v57;
  uint64_t v60 = a1
      + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__floor;
  swift_beginAccess();
  LODWORD(v58) = *(_DWORD *)v60;
  LOBYTE(v60) = *(unsigned char *)(v60 + 4);
  uint64_t v61 = v88;
  swift_beginAccess();
  *(_DWORD *)uint64_t v61 = v58;
  *(unsigned char *)(v61 + 4) = v60;
  char v62 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__integrity);
  swift_beginAccess();
  LOBYTE(v62) = *v62;
  uint64_t v63 = v89;
  swift_beginAccess();
  *uint64_t v63 = (_BYTE)v62;
  int v64 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__referenceFrame);
  swift_beginAccess();
  LOBYTE(v64) = *v64;
  uint64_t v65 = v90;
  swift_beginAccess();
  *uint64_t v65 = (_BYTE)v64;
  int v66 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawReferenceFrame);
  swift_beginAccess();
  LOBYTE(v66) = *v66;
  int v67 = v91;
  swift_beginAccess();
  *int v67 = (_BYTE)v66;
  uint64_t v68 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__signalEnvironmentType);
  swift_beginAccess();
  LOBYTE(v68) = *v68;
  v69 = v93;
  swift_beginAccess();
  unsigned char *v69 = (_BYTE)v68;
  char v70 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__ellipsoidalAltitude);
  swift_beginAccess();
  uint64_t v71 = *v70;
  LOBYTE(v70) = *((unsigned char *)v70 + 8);
  swift_beginAccess();
  *(void *)uint64_t v21 = v71;
  *(unsigned char *)(v21 + 8) = (_BYTE)v70;
  int v72 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf39CLP_LogEntry_PrivateData_DaemonLocationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fromSimulationController);
  swift_beginAccess();
  LOBYTE(v72) = *v72;
  uint64_t v73 = v92;
  swift_beginAccess();
  *uint64_t v73 = (_BYTE)v72;
  return v1;
}

uint64_t sub_10015B284(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10015B2EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10015B354(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10015B3B4(uint64_t result)
{
  if (result <= 1)
  {
    if ((unint64_t)result <= 1) {
      return result;
    }
    return 4;
  }
  if (result != 2)
  {
    if (result == 0xFFFF) {
      return 3;
    }
    return 4;
  }
  return result;
}

uint64_t sub_10015B3F0(uint64_t a1)
{
  if (a1 <= 24)
  {
    if (a1 == -1) {
      return 0;
    }
    if (!a1) {
      return 1;
    }
  }
  else
  {
    switch(a1)
    {
      case 25:
        return 2;
      case 50:
        return 3;
      case 75:
        return 4;
    }
  }
  return 5;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480270);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_PressureSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480280);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480290);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802A0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480760);
}

uint64_t sub_10015B4EC(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E478);
  __chkstk_darwin(v3 - 8);
  uint64_t v235 = (uint64_t)&v177 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002ED4(&qword_10043E470);
  __chkstk_darwin(v5 - 8);
  uint64_t v215 = (uint64_t)&v177 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002ED4(&qword_10043E468);
  __chkstk_darwin(v7 - 8);
  uint64_t v200 = (uint64_t)&v177 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E460);
  __chkstk_darwin(v9 - 8);
  uint64_t v191 = (uint64_t)&v177 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = 0;
  v178 = (void *)(v1 + 16);
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0;
  v179 = (void *)(v1 + 32);
  *(void *)(v1 + 48) = 0;
  v180 = (void *)(v1 + 48);
  *(unsigned char *)(v1 + 40) = 1;
  *(unsigned char *)(v1 + 56) = 1;
  *(void *)(v1 + 64) = 0;
  v181 = (void *)(v1 + 64);
  *(unsigned char *)(v1 + 72) = 1;
  *(void *)(v1 + 80) = 0;
  v182 = (void *)(v1 + 80);
  *(_DWORD *)(v1 + 92) = 0;
  v183 = (_DWORD *)(v1 + 92);
  *(unsigned char *)(v1 + 88) = 1;
  *(unsigned char *)(v1 + 96) = 1;
  *(_DWORD *)(v1 + 100) = 0;
  v184 = (_DWORD *)(v1 + 100);
  *(_DWORD *)(v1 + 108) = 0;
  v185 = (_DWORD *)(v1 + 108);
  *(_WORD *)(v1 + 113) = 1026;
  *(unsigned char *)(v1 + 104) = 1;
  v186 = (unsigned char *)(v1 + 113);
  uint64_t v187 = v1 + 114;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCoordinate;
  uint64_t v188 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCoordinate;
  *(unsigned char *)(v1 + 112) = 1;
  uint64_t v12 = type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate(0);
  uint64_t v13 = *(void (**)(void))(*(void *)(v12 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1, v12);
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCourse;
  uint64_t v189 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCourse;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchFormOfWay;
  uint64_t v190 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchFormOfWay;
  *(_DWORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 4) = 1;
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchRoadClass;
  uint64_t v192 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchRoadClass;
  *(_DWORD *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 4) = 1;
  v193 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchShifted);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchShifted) = 2;
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pressure;
  uint64_t v194 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pressure;
  uint64_t v18 = type metadata accessor for CLP_LogEntry_PrivateData_PressureSample(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v195 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulationModel);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulationModel) = 4;
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulation;
  uint64_t v196 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulation;
  *(_DWORD *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 4) = 1;
  uint64_t v197 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__specialCoordinate;
  v13();
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__specialHorizontalAccuracy;
  uint64_t v198 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__specialHorizontalAccuracy;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  uint64_t v21 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__machContinuousTime;
  uint64_t v199 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__machContinuousTime;
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  v201 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__originDevice);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__originDevice) = 3;
  v202 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isMatcherPropagatedCoordinates);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isMatcherPropagatedCoordinates) = 2;
  uint64_t v22 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherData;
  uint64_t v203 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherData;
  uint64_t v23 = type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__slope;
  uint64_t v204 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__slope;
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = 1;
  uint64_t v25 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__maxAbsSlope;
  uint64_t v205 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__maxAbsSlope;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  uint64_t v26 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitude;
  uint64_t v206 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitude;
  *(void *)uint64_t v26 = 0;
  *(unsigned char *)(v26 + 8) = 1;
  uint64_t v27 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitudeUncertainty;
  uint64_t v207 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitudeUncertainty;
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  uint64_t v28 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitude;
  uint64_t v208 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitude;
  *(void *)uint64_t v28 = 0;
  *(unsigned char *)(v28 + 8) = 1;
  uint64_t v29 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitudeUncertainty;
  uint64_t v209 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitudeUncertainty;
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  v210 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isSimulatedOrSpoofed);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isSimulatedOrSpoofed) = 2;
  uint64_t v30 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawHorizontalAccuracy;
  uint64_t v211 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawHorizontalAccuracy;
  *(void *)uint64_t v30 = 0;
  *(unsigned char *)(v30 + 8) = 1;
  uint64_t v31 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourseAccuracy;
  uint64_t v212 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourseAccuracy;
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 1;
  v214 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFused);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFused) = 2;
  uint64_t v216 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCoordinate;
  v13();
  uint64_t v32 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedHorizontalAccuracy;
  uint64_t v217 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedHorizontalAccuracy;
  *(void *)uint64_t v32 = 0;
  *(unsigned char *)(v32 + 8) = 1;
  v218 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedReferenceFrame);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedReferenceFrame) = 3;
  uint64_t v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourse;
  uint64_t v219 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourse;
  *(void *)uint64_t v33 = 0;
  *(unsigned char *)(v33 + 8) = 1;
  uint64_t v34 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourseAccuracy;
  uint64_t v220 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourseAccuracy;
  *(void *)uint64_t v34 = 0;
  *(unsigned char *)(v34 + 8) = 1;
  uint64_t v35 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedWorstCaseError;
  uint64_t v221 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedWorstCaseError;
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  uint64_t v36 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingAltitude;
  uint64_t v222 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingAltitude;
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  uint64_t v37 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingVerticalAccuracy;
  uint64_t v223 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingVerticalAccuracy;
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = 1;
  v224 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFusedWithVl);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFusedWithVl) = 2;
  uint64_t v38 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedAltitude;
  uint64_t v225 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedAltitude;
  *(void *)uint64_t v38 = 0;
  *(unsigned char *)(v38 + 8) = 1;
  uint64_t v39 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedVerticalAccuracy;
  uint64_t v226 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedVerticalAccuracy;
  *(void *)uint64_t v39 = 0;
  *(unsigned char *)(v39 + 8) = 1;
  v227 = (void *)(v1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__satelliteVisibilityReport);
  *(void *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__satelliteVisibilityReport) = &_swiftEmptyArrayStorage;
  v229 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__gnssContent);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__gnssContent) = 3;
  uint64_t v40 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawAltitude;
  uint64_t v230 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawAltitude;
  uint64_t v41 = type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 1, 1, v41);
  v231 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextState);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextState) = 3;
  uint64_t v42 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextStateProbabilityIndoor;
  uint64_t v232 = v1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextStateProbabilityIndoor;
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  uint64_t v43 = v1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextStateProbabilityOutdoor;
  *(void *)uint64_t v43 = 0;
  *(unsigned char *)(v43 + 8) = 1;
  v234 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherType);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherType) = 4;
  v213 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isRouteHintsTriggeredMapMatching);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isRouteHintsTriggeredMapMatching) = 2;
  v228 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__loiLocationSourceAccuracy);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__loiLocationSourceAccuracy) = 3;
  v233 = (unsigned char *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__batchedLocationFixType);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__batchedLocationFixType) = 5;
  uint64_t v44 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isWifiFixWithAssociatedAp);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isWifiFixWithAssociatedAp) = 2;
  swift_beginAccess();
  uint64_t v45 = *(void *)(a1 + 16);
  char v46 = *(unsigned char *)(a1 + 24);
  uint64_t v47 = v178;
  swift_beginAccess();
  *uint64_t v47 = v45;
  *(unsigned char *)(v1 + 24) = v46;
  swift_beginAccess();
  uint64_t v48 = *(void *)(a1 + 32);
  LOBYTE(v45) = *(unsigned char *)(a1 + 40);
  uint64_t v49 = v179;
  swift_beginAccess();
  void *v49 = v48;
  *(unsigned char *)(v1 + 40) = v45;
  swift_beginAccess();
  uint64_t v50 = *(void *)(a1 + 48);
  LOBYTE(v45) = *(unsigned char *)(a1 + 56);
  uint64_t v51 = v180;
  swift_beginAccess();
  void *v51 = v50;
  *(unsigned char *)(v1 + 56) = v45;
  swift_beginAccess();
  uint64_t v52 = *(void *)(a1 + 64);
  LOBYTE(v45) = *(unsigned char *)(a1 + 72);
  int v53 = v181;
  swift_beginAccess();
  *int v53 = v52;
  *(unsigned char *)(v1 + 72) = v45;
  swift_beginAccess();
  uint64_t v54 = *(void *)(a1 + 80);
  LOBYTE(v45) = *(unsigned char *)(a1 + 88);
  uint64_t v55 = v182;
  swift_beginAccess();
  *uint64_t v55 = v54;
  *(unsigned char *)(v1 + 88) = v45;
  swift_beginAccess();
  LODWORD(v54) = *(_DWORD *)(a1 + 92);
  LOBYTE(v45) = *(unsigned char *)(a1 + 96);
  uint64_t v56 = v183;
  swift_beginAccess();
  _DWORD *v56 = v54;
  *(unsigned char *)(v1 + 96) = v45;
  swift_beginAccess();
  LODWORD(v54) = *(_DWORD *)(a1 + 100);
  LOBYTE(v45) = *(unsigned char *)(a1 + 104);
  char v57 = v184;
  swift_beginAccess();
  *char v57 = v54;
  *(unsigned char *)(v1 + 104) = v45;
  swift_beginAccess();
  LODWORD(v54) = *(_DWORD *)(a1 + 108);
  LOBYTE(v45) = *(unsigned char *)(a1 + 112);
  uint64_t v58 = v185;
  swift_beginAccess();
  *uint64_t v58 = v54;
  *(unsigned char *)(v1 + 112) = v45;
  swift_beginAccess();
  LOBYTE(v54) = *(unsigned char *)(a1 + 113);
  uint64_t v59 = v186;
  swift_beginAccess();
  *uint64_t v59 = v54;
  swift_beginAccess();
  LOBYTE(v54) = *(unsigned char *)(a1 + 114);
  swift_beginAccess();
  *(unsigned char *)(v1 + 114) = v54;
  uint64_t v60 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCoordinate;
  swift_beginAccess();
  uint64_t v61 = v191;
  sub_100011480(v60, v191, &qword_10043E460);
  uint64_t v62 = v188;
  swift_beginAccess();
  sub_1000112DC(v61, v62, &qword_10043E460);
  swift_endAccess();
  uint64_t v63 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchCourse);
  swift_beginAccess();
  uint64_t v64 = *v63;
  LOBYTE(v63) = *((unsigned char *)v63 + 8);
  uint64_t v65 = v189;
  swift_beginAccess();
  *(void *)uint64_t v65 = v64;
  *(unsigned char *)(v65 + 8) = (_BYTE)v63;
  uint64_t v66 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchFormOfWay;
  swift_beginAccess();
  LODWORD(v64) = *(_DWORD *)v66;
  LOBYTE(v66) = *(unsigned char *)(v66 + 4);
  uint64_t v67 = v190;
  swift_beginAccess();
  *(_DWORD *)uint64_t v67 = v64;
  *(unsigned char *)(v67 + 4) = v66;
  uint64_t v68 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchRoadClass;
  swift_beginAccess();
  LODWORD(v64) = *(_DWORD *)v68;
  LOBYTE(v68) = *(unsigned char *)(v68 + 4);
  uint64_t v69 = v192;
  swift_beginAccess();
  *(_DWORD *)uint64_t v69 = v64;
  *(unsigned char *)(v69 + 4) = v68;
  char v70 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__matchShifted);
  swift_beginAccess();
  LOBYTE(v70) = *v70;
  uint64_t v71 = v193;
  swift_beginAccess();
  unsigned char *v71 = (_BYTE)v70;
  uint64_t v72 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pressure;
  swift_beginAccess();
  uint64_t v73 = v200;
  sub_100011480(v72, v200, &qword_10043E468);
  uint64_t v74 = v194;
  swift_beginAccess();
  sub_1000112DC(v73, v74, &qword_10043E468);
  swift_endAccess();
  uint64_t v75 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulationModel);
  swift_beginAccess();
  LOBYTE(v75) = *v75;
  uint64_t v76 = v195;
  swift_beginAccess();
  unsigned char *v76 = (_BYTE)v75;
  uint64_t v77 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__undulation;
  swift_beginAccess();
  LODWORD(v76) = *(_DWORD *)v77;
  LOBYTE(v77) = *(unsigned char *)(v77 + 4);
  uint64_t v78 = v196;
  swift_beginAccess();
  *(_DWORD *)uint64_t v78 = v76;
  *(unsigned char *)(v78 + 4) = v77;
  uint64_t v79 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__specialCoordinate;
  swift_beginAccess();
  sub_100011480(v79, v61, &qword_10043E460);
  uint64_t v80 = v197;
  swift_beginAccess();
  sub_1000112DC(v61, v80, &qword_10043E460);
  swift_endAccess();
  uint64_t v81 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__specialHorizontalAccuracy);
  swift_beginAccess();
  uint64_t v82 = *v81;
  LOBYTE(v81) = *((unsigned char *)v81 + 8);
  uint64_t v83 = v198;
  swift_beginAccess();
  *(void *)uint64_t v83 = v82;
  *(unsigned char *)(v83 + 8) = (_BYTE)v81;
  uint64_t v84 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__machContinuousTime);
  swift_beginAccess();
  uint64_t v85 = *v84;
  LOBYTE(v84) = *((unsigned char *)v84 + 8);
  uint64_t v86 = v199;
  swift_beginAccess();
  *(void *)uint64_t v86 = v85;
  *(unsigned char *)(v86 + 8) = (_BYTE)v84;
  uint64_t v87 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__originDevice);
  swift_beginAccess();
  LOBYTE(v87) = *v87;
  uint64_t v88 = v201;
  swift_beginAccess();
  *uint64_t v88 = (_BYTE)v87;
  char v89 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isMatcherPropagatedCoordinates);
  swift_beginAccess();
  LOBYTE(v89) = *v89;
  uint64_t v90 = v202;
  swift_beginAccess();
  *uint64_t v90 = (_BYTE)v89;
  uint64_t v91 = a1
      + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherData;
  swift_beginAccess();
  uint64_t v92 = v215;
  sub_100011480(v91, v215, &qword_10043E470);
  uint64_t v93 = v203;
  swift_beginAccess();
  sub_1000112DC(v92, v93, &qword_10043E470);
  swift_endAccess();
  int v94 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__slope);
  swift_beginAccess();
  uint64_t v95 = *v94;
  LOBYTE(v94) = *((unsigned char *)v94 + 8);
  uint64_t v96 = v204;
  swift_beginAccess();
  *(void *)uint64_t v96 = v95;
  *(unsigned char *)(v96 + 8) = (_BYTE)v94;
  char v97 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__maxAbsSlope);
  swift_beginAccess();
  uint64_t v98 = *v97;
  LOBYTE(v97) = *((unsigned char *)v97 + 8);
  uint64_t v99 = v205;
  swift_beginAccess();
  *(void *)uint64_t v99 = v98;
  *(unsigned char *)(v99 + 8) = (_BYTE)v97;
  char v100 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitude);
  swift_beginAccess();
  uint64_t v101 = *v100;
  LOBYTE(v100) = *((unsigned char *)v100 + 8);
  uint64_t v102 = v206;
  swift_beginAccess();
  *(void *)uint64_t v102 = v101;
  *(unsigned char *)(v102 + 8) = (_BYTE)v100;
  uint64_t v103 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__groundAltitudeUncertainty);
  swift_beginAccess();
  uint64_t v104 = *v103;
  LOBYTE(v103) = *((unsigned char *)v103 + 8);
  uint64_t v105 = v207;
  swift_beginAccess();
  *(void *)uint64_t v105 = v104;
  *(unsigned char *)(v105 + 8) = (_BYTE)v103;
  uint64_t v106 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitude);
  swift_beginAccess();
  uint64_t v107 = *v106;
  LOBYTE(v106) = *((unsigned char *)v106 + 8);
  uint64_t v108 = v208;
  swift_beginAccess();
  *(void *)uint64_t v108 = v107;
  *(unsigned char *)(v108 + 8) = (_BYTE)v106;
  v109 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__smoothedGpsAltitudeUncertainty);
  swift_beginAccess();
  uint64_t v110 = *v109;
  LOBYTE(v109) = *((unsigned char *)v109 + 8);
  uint64_t v111 = v209;
  swift_beginAccess();
  *(void *)uint64_t v111 = v110;
  *(unsigned char *)(v111 + 8) = (_BYTE)v109;
  uint64_t v112 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isSimulatedOrSpoofed);
  swift_beginAccess();
  LOBYTE(v112) = *v112;
  unint64_t v113 = v210;
  swift_beginAccess();
  *unint64_t v113 = (_BYTE)v112;
  uint64_t v114 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawHorizontalAccuracy);
  swift_beginAccess();
  uint64_t v115 = *v114;
  LOBYTE(v114) = *((unsigned char *)v114 + 8);
  uint64_t v116 = v211;
  swift_beginAccess();
  *(void *)uint64_t v116 = v115;
  *(unsigned char *)(v116 + 8) = (_BYTE)v114;
  uint64_t v117 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawCourseAccuracy);
  swift_beginAccess();
  uint64_t v118 = *v117;
  LOBYTE(v117) = *((unsigned char *)v117 + 8);
  uint64_t v119 = v212;
  swift_beginAccess();
  *(void *)uint64_t v119 = v118;
  *(unsigned char *)(v119 + 8) = (_BYTE)v117;
  v120 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFused);
  swift_beginAccess();
  LOBYTE(v120) = *v120;
  v121 = v214;
  swift_beginAccess();
  unsigned char *v121 = (_BYTE)v120;
  uint64_t v122 = a1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCoordinate;
  swift_beginAccess();
  sub_100011480(v122, v61, &qword_10043E460);
  uint64_t v123 = v216;
  swift_beginAccess();
  sub_1000112DC(v61, v123, &qword_10043E460);
  swift_endAccess();
  v124 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedHorizontalAccuracy);
  swift_beginAccess();
  uint64_t v125 = *v124;
  LOBYTE(v124) = *((unsigned char *)v124 + 8);
  uint64_t v126 = v217;
  swift_beginAccess();
  *(void *)uint64_t v126 = v125;
  *(unsigned char *)(v126 + 8) = (_BYTE)v124;
  v127 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedReferenceFrame);
  swift_beginAccess();
  LOBYTE(v127) = *v127;
  v128 = v218;
  swift_beginAccess();
  unsigned char *v128 = (_BYTE)v127;
  v129 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourse);
  swift_beginAccess();
  uint64_t v130 = *v129;
  LOBYTE(v129) = *((unsigned char *)v129 + 8);
  uint64_t v131 = v219;
  swift_beginAccess();
  *(void *)uint64_t v131 = v130;
  *(unsigned char *)(v131 + 8) = (_BYTE)v129;
  v132 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedCourseAccuracy);
  swift_beginAccess();
  uint64_t v133 = *v132;
  LOBYTE(v132) = *((unsigned char *)v132 + 8);
  uint64_t v134 = v220;
  swift_beginAccess();
  *(void *)uint64_t v134 = v133;
  *(unsigned char *)(v134 + 8) = (_BYTE)v132;
  v135 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedWorstCaseError);
  swift_beginAccess();
  uint64_t v136 = *v135;
  LOBYTE(v135) = *((unsigned char *)v135 + 8);
  uint64_t v137 = v221;
  swift_beginAccess();
  *(void *)uint64_t v137 = v136;
  *(unsigned char *)(v137 + 8) = (_BYTE)v135;
  v138 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingAltitude);
  swift_beginAccess();
  uint64_t v139 = *v138;
  LOBYTE(v138) = *((unsigned char *)v138 + 8);
  uint64_t v140 = v222;
  swift_beginAccess();
  *(void *)uint64_t v140 = v139;
  *(unsigned char *)(v140 + 8) = (_BYTE)v138;
  v141 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__preFusingVerticalAccuracy);
  swift_beginAccess();
  uint64_t v142 = *v141;
  LOBYTE(v141) = *((unsigned char *)v141 + 8);
  uint64_t v143 = v223;
  swift_beginAccess();
  *(void *)uint64_t v143 = v142;
  *(unsigned char *)(v143 + 8) = (_BYTE)v141;
  v144 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isCoordinateFusedWithVl);
  swift_beginAccess();
  LOBYTE(v144) = *v144;
  v145 = v224;
  swift_beginAccess();
  unsigned char *v145 = (_BYTE)v144;
  v146 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedAltitude);
  swift_beginAccess();
  uint64_t v147 = *v146;
  LOBYTE(v146) = *((unsigned char *)v146 + 8);
  uint64_t v148 = v225;
  swift_beginAccess();
  *(void *)uint64_t v148 = v147;
  *(unsigned char *)(v148 + 8) = (_BYTE)v146;
  v149 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__fusedVerticalAccuracy);
  swift_beginAccess();
  uint64_t v150 = *v149;
  LOBYTE(v149) = *((unsigned char *)v149 + 8);
  uint64_t v151 = v226;
  swift_beginAccess();
  *(void *)uint64_t v151 = v150;
  *(unsigned char *)(v151 + 8) = (_BYTE)v149;
  v152 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__satelliteVisibilityReport);
  swift_beginAccess();
  uint64_t v153 = *v152;
  v154 = v227;
  swift_beginAccess();
  void *v154 = v153;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v155 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__gnssContent);
  swift_beginAccess();
  LOBYTE(v155) = *v155;
  v156 = v229;
  swift_beginAccess();
  unsigned char *v156 = (_BYTE)v155;
  uint64_t v157 = a1
       + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rawAltitude;
  swift_beginAccess();
  uint64_t v158 = v235;
  sub_100011480(v157, v235, &qword_10043E478);
  uint64_t v159 = v230;
  swift_beginAccess();
  sub_1000112DC(v158, v159, &qword_10043E478);
  swift_endAccess();
  v160 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextState);
  swift_beginAccess();
  LOBYTE(v160) = *v160;
  v161 = v231;
  swift_beginAccess();
  unsigned char *v161 = (_BYTE)v160;
  v162 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextStateProbabilityIndoor);
  swift_beginAccess();
  uint64_t v163 = *v162;
  LOBYTE(v162) = *((unsigned char *)v162 + 8);
  uint64_t v164 = v232;
  swift_beginAccess();
  *(void *)uint64_t v164 = v163;
  *(unsigned char *)(v164 + 8) = (_BYTE)v162;
  v165 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__estimatedPositionContextStateProbabilityOutdoor);
  swift_beginAccess();
  uint64_t v166 = *v165;
  LOBYTE(v165) = *((unsigned char *)v165 + 8);
  swift_beginAccess();
  *(void *)uint64_t v43 = v166;
  *(unsigned char *)(v43 + 8) = (_BYTE)v165;
  v167 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__mapMatcherType);
  swift_beginAccess();
  LOBYTE(v167) = *v167;
  v168 = v234;
  swift_beginAccess();
  unsigned char *v168 = (_BYTE)v167;
  v169 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isRouteHintsTriggeredMapMatching);
  swift_beginAccess();
  LOBYTE(v169) = *v169;
  v170 = v213;
  swift_beginAccess();
  unsigned char *v170 = (_BYTE)v169;
  v171 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__loiLocationSourceAccuracy);
  swift_beginAccess();
  LOBYTE(v171) = *v171;
  v172 = v228;
  swift_beginAccess();
  unsigned char *v172 = (_BYTE)v171;
  v173 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__batchedLocationFixType);
  swift_beginAccess();
  LOBYTE(v173) = *v173;
  v174 = v233;
  swift_beginAccess();
  unsigned char *v174 = (_BYTE)v173;
  v175 = (unsigned char *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf46CLP_LogEntry_PrivateData_DaemonLocationPrivateP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isWifiFixWithAssociatedAp);
  swift_beginAccess();
  LOBYTE(v175) = *v175;
  swift_beginAccess();
  unsigned char *v44 = (_BYTE)v175;
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802B0);
}

uint64_t sub_10015CBCC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 4) {
    return a1 + 1;
  }
  else {
    return 4;
  }
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802C0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004802F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480300);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Location(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480310);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Location._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480770);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480320);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480330);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480340);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480350);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480780);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480360);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480370);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480380);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480390);
}

unint64_t sub_10015CDE0(unint64_t result)
{
  if (result >= 0x43) {
    return 67;
  }
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803A0);
}

unint64_t sub_10015CE10(unint64_t result)
{
  if (result >= 0x13) {
    return 19;
  }
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803B0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480790);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803C0);
}

unint64_t sub_10015CE80(unint64_t result)
{
  if (result >= 8) {
    return 8;
  }
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Timer(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004803F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480400);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MapVector(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480410);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MapVector._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807A0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480420);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480430);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480440);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807B0);
}

uint64_t sub_10015CFD0(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E458);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__applicableTime;
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__latitudeDeg;
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__longitudeDeg;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalUncM;
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__altitudeM;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalUncM;
  uint64_t v60 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalUncM;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__referenceFrame);
  unsigned char *v13 = 3;
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAtExitDeg;
  uint64_t v61 = v13;
  uint64_t v62 = v14;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 8) = 1;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAtExitUncDeg;
  uint64_t v63 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAtExitUncDeg;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelWidthAtExitM;
  uint64_t v64 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelWidthAtExitM;
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  uint64_t v17 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isTunnelCurved);
  unsigned char *v17 = 2;
  uint64_t v18 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__startLatitudeDeg;
  uint64_t v65 = v17;
  uint64_t v66 = v18;
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__startLongitudeDeg;
  uint64_t v67 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__startLongitudeDeg;
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelLengthM;
  uint64_t v68 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelLengthM;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  uint64_t v21 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__endPointDistanceFromCurrentSolutionM;
  uint64_t v69 = v1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__endPointDistanceFromCurrentSolutionM;
  *(unsigned char *)(v21 + 8) = 1;
  *(void *)uint64_t v21 = 0;
  uint64_t v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__applicableTime;
  swift_beginAccess();
  sub_100011480(v22, (uint64_t)v5, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v5, v6, &qword_10043E458);
  swift_endAccess();
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__latitudeDeg);
  swift_beginAccess();
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  swift_beginAccess();
  *(void *)uint64_t v8 = v24;
  *(unsigned char *)(v8 + 8) = (_BYTE)v23;
  uint64_t v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__longitudeDeg);
  swift_beginAccess();
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  swift_beginAccess();
  *(void *)uint64_t v9 = v26;
  *(unsigned char *)(v9 + 8) = (_BYTE)v25;
  uint64_t v27 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalUncM);
  swift_beginAccess();
  uint64_t v28 = *v27;
  LOBYTE(v27) = *((unsigned char *)v27 + 8);
  swift_beginAccess();
  *(void *)uint64_t v10 = v28;
  *(unsigned char *)(v10 + 8) = (_BYTE)v27;
  uint64_t v29 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__altitudeM);
  swift_beginAccess();
  uint64_t v30 = *v29;
  LOBYTE(v29) = *((unsigned char *)v29 + 8);
  swift_beginAccess();
  *(void *)uint64_t v11 = v30;
  *(unsigned char *)(v11 + 8) = (_BYTE)v29;
  uint64_t v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__verticalUncM);
  swift_beginAccess();
  uint64_t v32 = *v31;
  LOBYTE(v31) = *((unsigned char *)v31 + 8);
  uint64_t v33 = v60;
  swift_beginAccess();
  *(void *)uint64_t v33 = v32;
  *(unsigned char *)(v33 + 8) = (_BYTE)v31;
  uint64_t v34 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__referenceFrame);
  swift_beginAccess();
  LOBYTE(v34) = *v34;
  uint64_t v35 = v61;
  swift_beginAccess();
  unsigned char *v35 = (_BYTE)v34;
  uint64_t v36 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAtExitDeg);
  swift_beginAccess();
  uint64_t v37 = *v36;
  LOBYTE(v36) = *((unsigned char *)v36 + 8);
  uint64_t v38 = v62;
  swift_beginAccess();
  *(void *)uint64_t v38 = v37;
  *(unsigned char *)(v38 + 8) = (_BYTE)v36;
  uint64_t v39 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__courseAtExitUncDeg);
  swift_beginAccess();
  uint64_t v40 = *v39;
  LOBYTE(v39) = *((unsigned char *)v39 + 8);
  uint64_t v41 = v63;
  swift_beginAccess();
  *(void *)uint64_t v41 = v40;
  *(unsigned char *)(v41 + 8) = (_BYTE)v39;
  uint64_t v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelWidthAtExitM);
  swift_beginAccess();
  uint64_t v43 = *v42;
  LOBYTE(v42) = *((unsigned char *)v42 + 8);
  uint64_t v44 = v64;
  swift_beginAccess();
  *(void *)uint64_t v44 = v43;
  *(unsigned char *)(v44 + 8) = (_BYTE)v42;
  uint64_t v45 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isTunnelCurved);
  swift_beginAccess();
  LOBYTE(v45) = *v45;
  char v46 = v65;
  swift_beginAccess();
  unsigned char *v46 = (_BYTE)v45;
  uint64_t v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__startLatitudeDeg);
  swift_beginAccess();
  uint64_t v48 = *v47;
  LOBYTE(v47) = *((unsigned char *)v47 + 8);
  uint64_t v49 = v66;
  swift_beginAccess();
  *(void *)uint64_t v49 = v48;
  *(unsigned char *)(v49 + 8) = (_BYTE)v47;
  uint64_t v50 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__startLongitudeDeg);
  swift_beginAccess();
  uint64_t v51 = *v50;
  LOBYTE(v50) = *((unsigned char *)v50 + 8);
  uint64_t v52 = v67;
  swift_beginAccess();
  *(void *)uint64_t v52 = v51;
  *(unsigned char *)(v52 + 8) = (_BYTE)v50;
  int v53 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__tunnelLengthM);
  swift_beginAccess();
  uint64_t v54 = *v53;
  LOBYTE(v53) = *((unsigned char *)v53 + 8);
  uint64_t v55 = v68;
  swift_beginAccess();
  *(void *)uint64_t v55 = v54;
  *(unsigned char *)(v55 + 8) = (_BYTE)v53;
  uint64_t v56 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf49CLP_LogEntry_PrivateData_TunnelEndPointAssistanceP33_993346AF53650622B255AB1E3C41340D13_StorageClass__endPointDistanceFromCurrentSolutionM);
  swift_beginAccess();
  uint64_t v57 = *v56;
  LOBYTE(v56) = *((unsigned char *)v56 + 8);
  uint64_t v58 = v69;
  swift_beginAccess();
  *(void *)uint64_t v58 = v57;
  *(unsigned char *)(v58 + 8) = (_BYTE)v56;
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480450);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480460);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480470);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480480);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480490);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Battery(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804A0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804B0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807C0);
}

uint64_t sub_10015D724(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E500);
  __chkstk_darwin(v3 - 8);
  uint64_t v51 = (uint64_t)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002ED4(&qword_10043E4F8);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002ED4(&qword_10043E458);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__eventReceiptTime;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__client;
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__notificationData);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__notificationData) = 20;
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__reachability;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__battery;
  uint64_t v44 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__battery;
  uint64_t v17 = type metadata accessor for CLP_LogEntry_PrivateData_Battery(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v45 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__airplaneMode);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__airplaneMode) = 2;
  char v46 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__displayOn);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__displayOn) = 2;
  uint64_t v48 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lockScreen);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lockScreen) = 2;
  uint64_t v49 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isBatterySaverModeEnabled);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isBatterySaverModeEnabled) = 2;
  uint64_t v50 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pushServiceConnected);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pushServiceConnected) = 2;
  uint64_t v18 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__wirelessModemClients;
  *(_DWORD *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 4) = 1;
  uint64_t v19 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__thermalLevel;
  uint64_t v52 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__thermalLevel;
  *(_DWORD *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 4) = 1;
  int v53 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__restrictedMode);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__restrictedMode) = 2;
  uint64_t v20 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__eventReceiptTime;
  swift_beginAccess();
  sub_100011480(v20, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v10, &qword_10043E458);
  swift_endAccess();
  uint64_t v21 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__client;
  swift_beginAccess();
  LODWORD(v20) = *(_DWORD *)v21;
  LOBYTE(v21) = *(unsigned char *)(v21 + 4);
  swift_beginAccess();
  *(_DWORD *)uint64_t v12 = v20;
  *(unsigned char *)(v12 + 4) = v21;
  uint64_t v22 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__notificationData);
  swift_beginAccess();
  LOBYTE(v22) = *v22;
  swift_beginAccess();
  unsigned char *v13 = (_BYTE)v22;
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__reachability;
  swift_beginAccess();
  uint64_t v24 = v47;
  sub_100011480(v23, v47, &qword_10043E4F8);
  swift_beginAccess();
  sub_1000112DC(v24, v14, &qword_10043E4F8);
  swift_endAccess();
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__battery;
  swift_beginAccess();
  uint64_t v26 = v51;
  sub_100011480(v25, v51, &qword_10043E500);
  uint64_t v27 = v44;
  swift_beginAccess();
  sub_1000112DC(v26, v27, &qword_10043E500);
  swift_endAccess();
  uint64_t v28 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__airplaneMode);
  swift_beginAccess();
  LOBYTE(v28) = *v28;
  uint64_t v29 = v45;
  swift_beginAccess();
  unsigned char *v29 = (_BYTE)v28;
  uint64_t v30 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__displayOn);
  swift_beginAccess();
  LOBYTE(v30) = *v30;
  uint64_t v31 = v46;
  swift_beginAccess();
  unsigned char *v31 = (_BYTE)v30;
  uint64_t v32 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__lockScreen);
  swift_beginAccess();
  LOBYTE(v32) = *v32;
  uint64_t v33 = v48;
  swift_beginAccess();
  unsigned char *v33 = (_BYTE)v32;
  uint64_t v34 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isBatterySaverModeEnabled);
  swift_beginAccess();
  LOBYTE(v34) = *v34;
  uint64_t v35 = v49;
  swift_beginAccess();
  unsigned char *v35 = (_BYTE)v34;
  uint64_t v36 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__pushServiceConnected);
  swift_beginAccess();
  LOBYTE(v36) = *v36;
  uint64_t v37 = v50;
  swift_beginAccess();
  *uint64_t v37 = (_BYTE)v36;
  uint64_t v38 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__wirelessModemClients;
  swift_beginAccess();
  LODWORD(v37) = *(_DWORD *)v38;
  LOBYTE(v38) = *(unsigned char *)(v38 + 4);
  swift_beginAccess();
  *(_DWORD *)uint64_t v18 = v37;
  *(unsigned char *)(v18 + 4) = v38;
  uint64_t v39 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__thermalLevel;
  swift_beginAccess();
  LODWORD(v37) = *(_DWORD *)v39;
  LOBYTE(v39) = *(unsigned char *)(v39 + 4);
  uint64_t v40 = v52;
  swift_beginAccess();
  *(_DWORD *)uint64_t v40 = v37;
  *(unsigned char *)(v40 + 4) = v39;
  uint64_t v41 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_DeviceStatusP33_993346AF53650622B255AB1E3C41340D13_StorageClass__restrictedMode);
  swift_beginAccess();
  LOBYTE(v41) = *v41;
  uint64_t v42 = v53;
  swift_beginAccess();
  *uint64_t v42 = (_BYTE)v41;
  return v1;
}

unint64_t sub_10015DDD4(unint64_t result)
{
  if (result >= 0x14) {
    return 20;
  }
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804C0);
}

uint64_t sub_10015DE04(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 8) {
    return a1 + 1;
  }
  else {
    return 8;
  }
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MagSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004804F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Reset(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480500);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480510);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480520);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480530);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_StepCount(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480540);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480550);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480560);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480570);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480580);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_Compass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480590);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805A0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004807F0);
}

uint64_t sub_10015E038(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E520);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100002ED4(&qword_10043E528);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__quaternion;
  uint64_t v10 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__userAcceleration;
  uint64_t v12 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3(0);
  uint64_t v13 = *(void (**)(void))(*(void *)(v12 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1, v12);
  uint64_t v32 = v1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rotationRate;
  v13();
  uint64_t v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__magneticField;
  v13();
  uint64_t v34 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__magneticFieldCalibrationLevel);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__magneticFieldCalibrationLevel) = 8;
  uint64_t v35 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingYawCorrection);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingYawCorrection) = 2;
  uint64_t v36 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingBiasEstimation);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingBiasEstimation) = 2;
  uint64_t v37 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInitialized_p);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInitialized_p) = 2;
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__heading;
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__quaternion;
  swift_beginAccess();
  sub_100011480(v15, (uint64_t)v8, &qword_10043E528);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v8, v9, &qword_10043E528);
  swift_endAccess();
  uint64_t v16 = a1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__userAcceleration;
  swift_beginAccess();
  sub_100011480(v16, (uint64_t)v5, &qword_10043E520);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v5, v11, &qword_10043E520);
  swift_endAccess();
  uint64_t v17 = a1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__rotationRate;
  swift_beginAccess();
  sub_100011480(v17, (uint64_t)v5, &qword_10043E520);
  uint64_t v18 = v32;
  swift_beginAccess();
  sub_1000112DC((uint64_t)v5, v18, &qword_10043E520);
  swift_endAccess();
  uint64_t v19 = a1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__magneticField;
  swift_beginAccess();
  sub_100011480(v19, (uint64_t)v5, &qword_10043E520);
  uint64_t v20 = v33;
  swift_beginAccess();
  sub_1000112DC((uint64_t)v5, v20, &qword_10043E520);
  swift_endAccess();
  uint64_t v21 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__magneticFieldCalibrationLevel);
  swift_beginAccess();
  LOBYTE(v21) = *v21;
  uint64_t v22 = v34;
  swift_beginAccess();
  *uint64_t v22 = (_BYTE)v21;
  uint64_t v23 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingYawCorrection);
  swift_beginAccess();
  LOBYTE(v23) = *v23;
  uint64_t v24 = v35;
  swift_beginAccess();
  unsigned char *v24 = (_BYTE)v23;
  uint64_t v25 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__doingBiasEstimation);
  swift_beginAccess();
  LOBYTE(v25) = *v25;
  uint64_t v26 = v36;
  swift_beginAccess();
  unsigned char *v26 = (_BYTE)v25;
  uint64_t v27 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInitialized_p);
  swift_beginAccess();
  LOBYTE(v27) = *v27;
  uint64_t v28 = v37;
  swift_beginAccess();
  unsigned char *v28 = (_BYTE)v27;
  uint64_t v29 = a1
      + OBJC_IVAR____TtCV10ALProtobuf47CLP_LogEntry_PrivateData_MotionTypeDeviceMotionP33_993346AF53650622B255AB1E3C41340D13_StorageClass__heading;
  swift_beginAccess();
  LODWORD(v27) = *(_DWORD *)v29;
  LOBYTE(v29) = *(unsigned char *)(v29 + 4);
  swift_beginAccess();
  *(_DWORD *)uint64_t v14 = v27;
  *(unsigned char *)(v14 + 4) = v29;
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805B0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805C0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004805F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480600);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480610);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480620);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480630);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480800);
}

uint64_t sub_10015E680(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E560);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002ED4(&qword_10043E558);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002ED4(&qword_10043E458);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__eventReceiptTime;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__client;
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__type);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__type) = 15;
  uint64_t v14 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scanType);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scanType) = 15;
  uint64_t v41 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__power);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__power) = 2;
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__associatedState;
  uint64_t v42 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__associatedState;
  uint64_t v16 = type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scan;
  uint64_t v43 = v1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scan;
  uint64_t v18 = type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v44 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__simulated);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__simulated) = 2;
  uint64_t v45 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__available);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__available) = 2;
  char v46 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInvoluntaryLinkDown);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInvoluntaryLinkDown) = 2;
  uint64_t v48 = (unsigned char *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isApAwake);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isApAwake) = 2;
  uint64_t v19 = a1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__eventReceiptTime;
  swift_beginAccess();
  sub_100011480(v19, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v10, &qword_10043E458);
  swift_endAccess();
  uint64_t v20 = a1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__client;
  swift_beginAccess();
  LODWORD(v19) = *(_DWORD *)v20;
  LOBYTE(v20) = *(unsigned char *)(v20 + 4);
  swift_beginAccess();
  *(_DWORD *)uint64_t v12 = v19;
  *(unsigned char *)(v12 + 4) = v20;
  uint64_t v21 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__type);
  swift_beginAccess();
  LOBYTE(v21) = *v21;
  swift_beginAccess();
  unsigned char *v13 = (_BYTE)v21;
  uint64_t v22 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scanType);
  swift_beginAccess();
  LOBYTE(v22) = *v22;
  swift_beginAccess();
  unsigned char *v14 = (_BYTE)v22;
  uint64_t v23 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__power);
  swift_beginAccess();
  LOBYTE(v23) = *v23;
  uint64_t v24 = v41;
  swift_beginAccess();
  unsigned char *v24 = (_BYTE)v23;
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__associatedState;
  swift_beginAccess();
  uint64_t v26 = v47;
  sub_100011480(v25, v47, &qword_10043E558);
  uint64_t v27 = v42;
  swift_beginAccess();
  sub_1000112DC(v26, v27, &qword_10043E558);
  swift_endAccess();
  uint64_t v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__scan;
  swift_beginAccess();
  uint64_t v29 = v49;
  sub_100011480(v28, v49, &qword_10043E560);
  uint64_t v30 = v43;
  swift_beginAccess();
  sub_1000112DC(v29, v30, &qword_10043E560);
  swift_endAccess();
  uint64_t v31 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__simulated);
  swift_beginAccess();
  LOBYTE(v31) = *v31;
  uint64_t v32 = v44;
  swift_beginAccess();
  unsigned char *v32 = (_BYTE)v31;
  uint64_t v33 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__available);
  swift_beginAccess();
  LOBYTE(v33) = *v33;
  uint64_t v34 = v45;
  swift_beginAccess();
  unsigned char *v34 = (_BYTE)v33;
  uint64_t v35 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isInvoluntaryLinkDown);
  swift_beginAccess();
  LOBYTE(v35) = *v35;
  uint64_t v36 = v46;
  swift_beginAccess();
  unsigned char *v36 = (_BYTE)v35;
  uint64_t v37 = (unsigned char *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf41CLP_LogEntry_PrivateData_WifiNotificationP33_993346AF53650622B255AB1E3C41340D13_StorageClass__isApAwake);
  swift_beginAccess();
  LOBYTE(v37) = *v37;
  uint64_t v38 = v48;
  swift_beginAccess();
  *uint64_t v38 = (_BYTE)v37;
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480640);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480650);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480660);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480670);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480680);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480690);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806A0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806B0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806C0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806D0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806E0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WristState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_1004806F0);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_WatchState(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480700);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480710);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480720);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit._StorageClass(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480810);
}

uint64_t sub_10015EE74(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_10043E460);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100002ED4(&qword_10043E590);
  __chkstk_darwin(v5 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100002ED4(&qword_10043E458);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__receiptTime;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  uint64_t v13 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__arrivalTime;
  v12(v1+ OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__arrivalTime, 1, 1, v11);
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__departureTime;
  v12(v1+ OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__departureTime, 1, 1, v11);
  uint64_t v15 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__detectionTime;
  v12(v1+ OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__detectionTime, 1, 1, v11);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__placeInference;
  uint64_t v33 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__placeInference;
  uint64_t v17 = type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__coordinate;
  uint64_t v19 = type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalAccuracyM;
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  uint64_t v21 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__receiptTime;
  swift_beginAccess();
  sub_100011480(v21, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v10, &qword_10043E458);
  swift_endAccess();
  uint64_t v22 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__arrivalTime;
  swift_beginAccess();
  sub_100011480(v22, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v13, &qword_10043E458);
  swift_endAccess();
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__departureTime;
  swift_beginAccess();
  sub_100011480(v23, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v14, &qword_10043E458);
  swift_endAccess();
  uint64_t v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__detectionTime;
  swift_beginAccess();
  sub_100011480(v24, (uint64_t)v9, &qword_10043E458);
  swift_beginAccess();
  sub_1000112DC((uint64_t)v9, v15, &qword_10043E458);
  swift_endAccess();
  uint64_t v25 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__placeInference;
  swift_beginAccess();
  uint64_t v26 = v34;
  sub_100011480(v25, v34, &qword_10043E590);
  uint64_t v27 = v33;
  swift_beginAccess();
  sub_1000112DC(v26, v27, &qword_10043E590);
  swift_endAccess();
  uint64_t v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__coordinate;
  swift_beginAccess();
  uint64_t v29 = v35;
  sub_100011480(v28, v35, &qword_10043E460);
  swift_beginAccess();
  sub_1000112DC(v29, v18, &qword_10043E460);
  swift_endAccess();
  uint64_t v30 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf37CLP_LogEntry_PrivateData_RoutineVisitP33_993346AF53650622B255AB1E3C41340D13_StorageClass__horizontalAccuracyM);
  swift_beginAccess();
  uint64_t v31 = *v30;
  LOBYTE(v30) = *((unsigned char *)v30 + 8);
  swift_beginAccess();
  *(void *)uint64_t v20 = v31;
  *(unsigned char *)(v20 + 8) = (_BYTE)v30;
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480730);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample(uint64_t a1)
{
  return sub_100011448(a1, (uint64_t *)&unk_100480740);
}

uint64_t type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample._StorageClass()
{
  return self;
}

uint64_t sub_10015F42C(uint64_t a1)
{
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  *(_DWORD *)(v1 + 44) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  *(unsigned char *)(v1 + 48) = 1;
  *(unsigned char *)(v1 + 56) = 1;
  *(_DWORD *)(v1 + 60) = 0;
  *(unsigned char *)(v1 + 64) = 1;
  *(_DWORD *)(v1 + 68) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  *(unsigned char *)(v1 + 72) = 1;
  *(unsigned char *)(v1 + 80) = 1;
  *(_DWORD *)(v1 + 84) = 0;
  *(unsigned char *)(v1 + 88) = 1;
  *(_DWORD *)(v1 + 92) = 0;
  *(_DWORD *)(v1 + 100) = 0;
  *(unsigned char *)(v1 + 96) = 1;
  *(unsigned char *)(v1 + 104) = 1;
  *(_DWORD *)(v1 + 108) = 0;
  *(unsigned char *)(v1 + 112) = 1;
  *(_DWORD *)(v1 + 116) = 0;
  *(unsigned char *)(v1 + 120) = 1;
  *(unsigned char *)(v1 + 128) = 1;
  *(_DWORD *)(v1 + 129) = 33686019;
  *(_DWORD *)(v1 + 124) = 0;
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v4;
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 32);
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  swift_beginAccess();
  *(void *)(v1 + 32) = v5;
  *(unsigned char *)(v1 + 40) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 44);
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  swift_beginAccess();
  *(_DWORD *)(v1 + 44) = v5;
  *(unsigned char *)(v1 + 48) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 52);
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  swift_beginAccess();
  *(_DWORD *)(v1 + 52) = v5;
  *(unsigned char *)(v1 + 56) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 60);
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  swift_beginAccess();
  *(_DWORD *)(v1 + 60) = v5;
  *(unsigned char *)(v1 + 64) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 68);
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  swift_beginAccess();
  *(_DWORD *)(v1 + 68) = v5;
  *(unsigned char *)(v1 + 72) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 76);
  LOBYTE(v3) = *(unsigned char *)(a1 + 80);
  swift_beginAccess();
  *(_DWORD *)(v1 + 76) = v5;
  *(unsigned char *)(v1 + 80) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 84);
  LOBYTE(v3) = *(unsigned char *)(a1 + 88);
  swift_beginAccess();
  *(_DWORD *)(v1 + 84) = v5;
  *(unsigned char *)(v1 + 88) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 92);
  LOBYTE(v3) = *(unsigned char *)(a1 + 96);
  swift_beginAccess();
  *(_DWORD *)(v1 + 92) = v5;
  *(unsigned char *)(v1 + 96) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 100);
  LOBYTE(v3) = *(unsigned char *)(a1 + 104);
  swift_beginAccess();
  *(_DWORD *)(v1 + 100) = v5;
  *(unsigned char *)(v1 + 104) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 108);
  LOBYTE(v3) = *(unsigned char *)(a1 + 112);
  swift_beginAccess();
  *(_DWORD *)(v1 + 108) = v5;
  *(unsigned char *)(v1 + 112) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 116);
  LOBYTE(v3) = *(unsigned char *)(a1 + 120);
  swift_beginAccess();
  *(_DWORD *)(v1 + 116) = v5;
  *(unsigned char *)(v1 + 120) = v3;
  swift_beginAccess();
  LODWORD(v5) = *(_DWORD *)(a1 + 124);
  LOBYTE(v3) = *(unsigned char *)(a1 + 128);
  swift_beginAccess();
  *(_DWORD *)(v1 + 124) = v5;
  *(unsigned char *)(v1 + 128) = v3;
  swift_beginAccess();
  LOBYTE(v5) = *(unsigned char *)(a1 + 129);
  swift_beginAccess();
  *(unsigned char *)(v1 + 129) = v5;
  swift_beginAccess();
  LOBYTE(v5) = *(unsigned char *)(a1 + 130);
  swift_beginAccess();
  *(unsigned char *)(v1 + 130) = v5;
  swift_beginAccess();
  LOBYTE(v5) = *(unsigned char *)(a1 + 131);
  swift_beginAccess();
  *(unsigned char *)(v1 + 131) = v5;
  swift_beginAccess();
  LOBYTE(a1) = *(unsigned char *)(a1 + 132);
  swift_beginAccess();
  *(unsigned char *)(v1 + 132) = a1;
  return v1;
}

uint64_t sub_10015F914(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  if ((sub_100158720(*a1, *a2) & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[6];
  int v14 = *((unsigned __int8 *)a1 + v13);
  int v15 = *((unsigned __int8 *)a2 + v13);
  if (v14 == 4)
  {
    if (v15 != 4) {
      goto LABEL_24;
    }
  }
  else if (v15 == 4 || v14 != v15)
  {
    goto LABEL_24;
  }
  uint64_t v17 = v11[7];
  uint64_t v18 = (_DWORD *)((char *)a1 + v17);
  char v19 = *((unsigned char *)a1 + v17 + 4);
  uint64_t v20 = (_DWORD *)((char *)a2 + v17);
  int v21 = *((unsigned __int8 *)a2 + v17 + 4);
  if (v19)
  {
    if (!v21) {
      goto LABEL_24;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_24;
    }
  }
  uint64_t v22 = v11[8];
  uint64_t v23 = (_DWORD *)((char *)a1 + v22);
  char v24 = *((unsigned char *)a1 + v22 + 4);
  uint64_t v25 = (_DWORD *)((char *)a2 + v22);
  int v26 = *((unsigned __int8 *)a2 + v22 + 4);
  if ((v24 & 1) == 0)
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if (v26) {
      goto LABEL_24;
    }
LABEL_22:
    uint64_t v27 = v11[9];
    uint64_t v28 = (_DWORD *)((char *)a1 + v27);
    char v29 = *((unsigned char *)a1 + v27 + 4);
    uint64_t v30 = (_DWORD *)((char *)a2 + v27);
    int v31 = *((unsigned __int8 *)a2 + v27 + 4);
    if (v29)
    {
      if (!v31) {
        goto LABEL_24;
      }
    }
    else
    {
      if (*v28 != *v30) {
        LOBYTE(v31) = 1;
      }
      if (v31) {
        goto LABEL_24;
      }
    }
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v34(v10, (char *)a1 + v11[5], v4);
    v34(v8, (char *)a2 + v12[5], v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v8, v4);
    v35(v10, v4);
    return v32 & 1;
  }
  if (v26) {
    goto LABEL_22;
  }
LABEL_24:
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_10015FB90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v80 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v79 = (char *)&v79 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v92 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v84 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002ED4(&qword_100445338);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v87 = (uint64_t)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v14 = (char *)&v79 - v13;
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v83 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v91 = (uint64_t)&v79 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v86 = (uint64_t)&v79 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  char v24 = (char *)&v79 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v79 - v26;
  __chkstk_darwin(v25);
  char v29 = (char *)&v79 - v28;
  uint64_t v30 = type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification(0);
  uint64_t v31 = *(int *)(v30 + 28);
  char v89 = a1;
  sub_100011480((uint64_t)a1 + v31, (uint64_t)v29, &qword_10043E458);
  uint64_t v88 = (int *)v30;
  uint64_t v32 = *(int *)(v30 + 28);
  uint64_t v90 = a2;
  sub_100011480((uint64_t)a2 + v32, (uint64_t)v27, &qword_10043E458);
  uint64_t v85 = v10;
  uint64_t v33 = *(int *)(v10 + 48);
  uint64_t v34 = v8;
  uint64_t v35 = v92;
  uint64_t v36 = (uint64_t)&v14[v33];
  sub_100011480((uint64_t)v29, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v27, v36, &qword_10043E458);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v37((uint64_t)v14, 1, v34) == 1)
  {
    sub_10001ACB8((uint64_t)v27, &qword_10043E458);
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    if (v37(v36, 1, v34) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v38 = (uint64_t)v14;
LABEL_14:
    sub_10001ACB8(v38, &qword_100445338);
    goto LABEL_15;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v24, &qword_10043E458);
  if (v37(v36, 1, v34) == 1)
  {
    sub_10001ACB8((uint64_t)v27, &qword_10043E458);
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10015B354((uint64_t)v24, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  uint64_t v39 = v84;
  sub_10015B284(v36, v84, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  LODWORD(v92) = sub_1001748FC((uint64_t)v24, v39, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v39, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v27, &qword_10043E458);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10015B354((uint64_t)v24, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v92 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v41 = v88;
  uint64_t v40 = v89;
  uint64_t v42 = v86;
  sub_100011480((uint64_t)v89 + v88[8], v86, &qword_10043E458);
  uint64_t v43 = v91;
  sub_100011480((uint64_t)v90 + v41[8], v91, &qword_10043E458);
  uint64_t v44 = v87;
  uint64_t v45 = v87 + *(int *)(v85 + 48);
  sub_100011480(v42, v87, &qword_10043E458);
  sub_100011480(v43, v45, &qword_10043E458);
  if (v37(v44, 1, v34) == 1)
  {
    sub_10001ACB8(v43, &qword_10043E458);
    sub_10001ACB8(v42, &qword_10043E458);
    if (v37(v45, 1, v34) == 1)
    {
      sub_10001ACB8(v44, &qword_10043E458);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v46 = v83;
  sub_100011480(v44, v83, &qword_10043E458);
  if (v37(v45, 1, v34) == 1)
  {
    sub_10001ACB8(v91, &qword_10043E458);
    sub_10001ACB8(v42, &qword_10043E458);
    sub_10015B354(v46, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_13:
    uint64_t v38 = v44;
    goto LABEL_14;
  }
  uint64_t v49 = v84;
  sub_10015B284(v45, v84, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v50 = sub_1001748FC(v46, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8(v91, &qword_10043E458);
  sub_10001ACB8(v42, &qword_10043E458);
  sub_10015B354(v46, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8(v44, &qword_10043E458);
  if ((v50 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v51 = v41[9];
  uint64_t v52 = (_DWORD *)((char *)v40 + v51);
  char v53 = *((unsigned char *)v40 + v51 + 4);
  uint64_t v54 = v90;
  uint64_t v55 = (_DWORD *)((char *)v90 + v51);
  int v56 = *((unsigned __int8 *)v90 + v51 + 4);
  if (v53)
  {
    if (!v56) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v52 != *v55) {
      LOBYTE(v56) = 1;
    }
    if (v56) {
      goto LABEL_15;
    }
  }
  uint64_t v57 = v41[10];
  int v58 = *((unsigned __int8 *)v40 + v57);
  int v59 = *((unsigned __int8 *)v90 + v57);
  if (v58 == 5)
  {
    if (v59 != 5) {
      goto LABEL_15;
    }
  }
  else
  {
    char v47 = 0;
    if (v59 == 5 || v58 != v59) {
      return v47 & 1;
    }
  }
  uint64_t v60 = v41[11];
  uint64_t v61 = (_DWORD *)((char *)v40 + v60);
  char v62 = *((unsigned char *)v40 + v60 + 4);
  uint64_t v63 = (_DWORD *)((char *)v90 + v60);
  int v64 = *((unsigned __int8 *)v90 + v60 + 4);
  if (v62)
  {
    if (!v64) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v61 != *v63) {
      LOBYTE(v64) = 1;
    }
    if (v64) {
      goto LABEL_15;
    }
  }
  if (!sub_100076F00(*v40, *v90) || !sub_100076F00(v40[1], v54[1])) {
    goto LABEL_15;
  }
  uint64_t v65 = v41[12];
  int v66 = *((unsigned __int8 *)v40 + v65);
  int v67 = *((unsigned __int8 *)v54 + v65);
  if (v66 != 2)
  {
    if (v67 != 2 && ((((v67 & 1) == 0) ^ v66) & 1) != 0) {
      goto LABEL_42;
    }
LABEL_15:
    char v47 = 0;
    return v47 & 1;
  }
  if (v67 != 2) {
    goto LABEL_15;
  }
LABEL_42:
  uint64_t v68 = v41[13];
  int v69 = *((unsigned __int8 *)v40 + v68);
  int v70 = *((unsigned __int8 *)v54 + v68);
  if (v69 == 2)
  {
    if (v70 == 2)
    {
LABEL_47:
      uint64_t v71 = (char *)v40 + v41[6];
      uint64_t v73 = v81;
      uint64_t v72 = v82;
      uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
      uint64_t v75 = v79;
      v74(v79, v71, v82);
      uint64_t v76 = (char *)v54 + v41[6];
      uint64_t v77 = v80;
      v74(v80, v76, v72);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v78 = *(void (**)(char *, uint64_t))(v73 + 8);
      v78(v77, v72);
      v78(v75, v72);
      return v47 & 1;
    }
    goto LABEL_15;
  }
  char v47 = 0;
  if (v70 != 2 && ((v70 ^ v69) & 1) == 0) {
    goto LABEL_47;
  }
  return v47 & 1;
}

uint64_t sub_100160474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_12;
    }
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v15 = *(int *)(v11 + 24);
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
    {
LABEL_12:
      char v19 = 0;
      return v19 & 1;
    }
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v8, v4);
  v20(v10, v4);
  return v19 & 1;
}

uint64_t sub_100160680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v54 = (char *)&v53 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v58 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v53 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v59 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v60 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_21:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v31 = v58;
  sub_10015B284(v29, v58, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_8:
  uint64_t v33 = v27[6];
  uint64_t v34 = v60;
  int v35 = *(unsigned __int8 *)(v59 + v33);
  int v36 = *(unsigned __int8 *)(v60 + v33);
  if (v35 == 4)
  {
    if (v36 != 4) {
      goto LABEL_21;
    }
  }
  else
  {
    char v37 = 0;
    if (v36 == 4 || v35 != v36) {
      return v37 & 1;
    }
  }
  uint64_t v38 = v27[7];
  uint64_t v39 = (double *)(v59 + v38);
  char v40 = *(unsigned char *)(v59 + v38 + 8);
  uint64_t v41 = (double *)(v60 + v38);
  int v42 = *(unsigned __int8 *)(v60 + v38 + 8);
  if (v40)
  {
    if (!v42) {
      goto LABEL_21;
    }
  }
  else
  {
    if (*v39 != *v41) {
      LOBYTE(v42) = 1;
    }
    if (v42) {
      goto LABEL_21;
    }
  }
  uint64_t v43 = v27[8];
  int v44 = *(unsigned __int8 *)(v59 + v43);
  int v45 = *(unsigned __int8 *)(v60 + v43);
  if (v44 == 4)
  {
    if (v45 != 4) {
      goto LABEL_21;
    }
LABEL_25:
    uint64_t v48 = v56;
    uint64_t v47 = v57;
    uint64_t v49 = *(void (**)(char *))(v56 + 16);
    char v50 = v54;
    v49(v54);
    uint64_t v51 = v55;
    ((void (*)(char *, uint64_t, uint64_t))v49)(v55, v34, v47);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v52 = *(void (**)(char *, uint64_t))(v48 + 8);
    v52(v51, v47);
    v52(v50, v47);
    return v37 & 1;
  }
  char v37 = 0;
  if (v45 != 4 && v44 == v45) {
    goto LABEL_25;
  }
  return v37 & 1;
}

uint64_t sub_100160C20(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  int v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v63 = (char *)&v62 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100002ED4(&qword_1004453E0);
  __chkstk_darwin(v68);
  uint64_t v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E4E8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)&v62 - v13;
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v62 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v62 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v62 - v30;
  char v32 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification(0);
  sub_100011480(v74 + v32[5], (uint64_t)v31, &qword_10043E458);
  sub_100011480(v75 + v32[5], (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    int v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v32[6];
  uint64_t v41 = v74;
  uint64_t v42 = v75;
  uint64_t v43 = (_DWORD *)(v74 + v40);
  char v44 = *(unsigned char *)(v74 + v40 + 4);
  int v45 = (_DWORD *)(v75 + v40);
  int v46 = *(unsigned __int8 *)(v75 + v40 + 4);
  if (v44)
  {
    if (!v46) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v45) {
      LOBYTE(v46) = 1;
    }
    if (v46) {
      goto LABEL_8;
    }
  }
  uint64_t v47 = v69;
  sub_100011480(v74 + v32[7], v69, &qword_10043E4E8);
  uint64_t v48 = v73;
  sub_100011480(v42 + v32[7], v73, &qword_10043E4E8);
  uint64_t v49 = v72;
  uint64_t v50 = v72 + *(int *)(v68 + 48);
  sub_100011480(v47, v72, &qword_10043E4E8);
  sub_100011480(v48, v50, &qword_10043E4E8);
  uint64_t v51 = v71;
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v52(v49, 1, v71) == 1)
  {
    sub_10001ACB8(v48, &qword_10043E4E8);
    sub_10001ACB8(v47, &qword_10043E4E8);
    if (v52(v50, 1, v51) == 1)
    {
      sub_10001ACB8(v49, &qword_10043E4E8);
LABEL_24:
      uint64_t v57 = v65;
      uint64_t v56 = v66;
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      uint64_t v59 = v63;
      v58(v63, v41, v66);
      uint64_t v60 = v64;
      v58(v64, v42, v56);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
      v61(v60, v56);
      v61(v59, v56);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v53 = v67;
  sub_100011480(v49, v67, &qword_10043E4E8);
  if (v52(v50, 1, v51) == 1)
  {
    sub_10001ACB8(v73, &qword_10043E4E8);
    sub_10001ACB8(v47, &qword_10043E4E8);
    sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
LABEL_22:
    int v35 = &qword_1004453E0;
    uint64_t v36 = v49;
    goto LABEL_7;
  }
  uint64_t v54 = v62;
  sub_10015B284(v50, v62, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
  char v55 = sub_100161910(v53, v54);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
  sub_10001ACB8(v73, &qword_10043E4E8);
  sub_10001ACB8(v47, &qword_10043E4E8);
  sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
  sub_10001ACB8(v49, &qword_10043E4E8);
  if (v55) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_1001614A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl(0) + 20);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 2)
  {
    if (v13 != 2)
    {
LABEL_7:
      char v15 = 0;
      return v15 & 1;
    }
  }
  else if (v13 == 2 || ((((v13 & 1) == 0) ^ v12) & 1) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t sub_100161678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate(0);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 3)
  {
    if (v14 != 3) {
      goto LABEL_34;
    }
  }
  else if (v14 == 3 || v13 != v14)
  {
    goto LABEL_34;
  }
  uint64_t v16 = v11[6];
  int v17 = *(unsigned __int8 *)(a1 + v16);
  int v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 == 2)
  {
    if (v18 != 2) {
      goto LABEL_34;
    }
  }
  else if (v18 == 2 || ((((v18 & 1) == 0) ^ v17) & 1) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v19 = v11[7];
  int v20 = *(unsigned __int8 *)(a1 + v19);
  int v21 = *(unsigned __int8 *)(a2 + v19);
  if (v20 == 5)
  {
    if (v21 != 5) {
      goto LABEL_34;
    }
  }
  else if (v21 == 5 || v20 != v21)
  {
    goto LABEL_34;
  }
  uint64_t v23 = v11[8];
  uint64_t v24 = (_DWORD *)(a1 + v23);
  char v25 = *(unsigned char *)(a1 + v23 + 4);
  uint64_t v26 = (_DWORD *)(a2 + v23);
  int v27 = *(unsigned __int8 *)(a2 + v23 + 4);
  if (v25)
  {
    if (!v27) {
      goto LABEL_34;
    }
  }
  else
  {
    if (*v24 != *v26) {
      LOBYTE(v27) = 1;
    }
    if (v27) {
      goto LABEL_34;
    }
  }
  uint64_t v28 = v11[9];
  int v29 = *(unsigned __int8 *)(a1 + v28);
  int v30 = *(unsigned __int8 *)(a2 + v28);
  if (v29 == 2)
  {
    if (v30 == 2) {
      goto LABEL_33;
    }
LABEL_34:
    char v32 = 0;
    return v32 & 1;
  }
  if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0) {
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31(v10, a1, v4);
  v31(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v8, v4);
  v33(v10, v4);
  return v32 & 1;
}

uint64_t sub_100161910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v70 = (char *)&v69 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  int v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  int v21 = (char *)&v69 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v69 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v75 = a1;
  uint64_t v26 = a1 + v25;
  int v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v76 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  int v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) != 1)
  {
    sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
    if (v30(v29, 1, v8) != 1)
    {
      uint64_t v33 = v74;
      sub_10015B284(v29, v74, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v34 = sub_1001748FC((uint64_t)v18, v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354(v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v21, &qword_10043E458);
      sub_10001ACB8((uint64_t)v23, &qword_10043E458);
      sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      if ((v34 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_7;
  }
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  if (v30(v29, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
LABEL_10:
  uint64_t v35 = v27[6];
  uint64_t v36 = v76;
  char v37 = (double *)(v75 + v35);
  char v38 = *(unsigned char *)(v75 + v35 + 8);
  char v39 = (double *)(v76 + v35);
  int v40 = *(unsigned __int8 *)(v76 + v35 + 8);
  if (v38)
  {
    if (!v40) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_7;
    }
  }
  uint64_t v41 = v27[7];
  uint64_t v42 = (double *)(v75 + v41);
  char v43 = *(unsigned char *)(v75 + v41 + 8);
  char v44 = (double *)(v76 + v41);
  int v45 = *(unsigned __int8 *)(v76 + v41 + 8);
  if (v43)
  {
    if (!v45) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v42 != *v44) {
      LOBYTE(v45) = 1;
    }
    if (v45) {
      goto LABEL_7;
    }
  }
  uint64_t v46 = v27[8];
  uint64_t v47 = (double *)(v75 + v46);
  char v48 = *(unsigned char *)(v75 + v46 + 8);
  uint64_t v49 = (double *)(v76 + v46);
  int v50 = *(unsigned __int8 *)(v76 + v46 + 8);
  if (v48)
  {
    if (!v50) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v47 != *v49) {
      LOBYTE(v50) = 1;
    }
    if (v50) {
      goto LABEL_7;
    }
  }
  uint64_t v51 = v27[9];
  int v52 = *(unsigned __int8 *)(v75 + v51);
  int v53 = *(unsigned __int8 *)(v76 + v51);
  if (v52 == 2)
  {
    if (v53 != 2) {
      goto LABEL_7;
    }
  }
  else if (v53 == 2 || ((((v53 & 1) == 0) ^ v52) & 1) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v54 = v27[10];
  int v55 = *(unsigned __int8 *)(v75 + v54);
  int v56 = *(unsigned __int8 *)(v76 + v54);
  if (v55 == 2)
  {
    if (v56 != 2) {
      goto LABEL_7;
    }
  }
  else if (v56 == 2 || ((((v56 & 1) == 0) ^ v55) & 1) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v57 = v27[11];
  int v58 = *(unsigned __int8 *)(v75 + v57);
  int v59 = *(unsigned __int8 *)(v76 + v57);
  if (v58 == 2)
  {
    if (v59 != 2) {
      goto LABEL_7;
    }
  }
  else if (v59 == 2 || ((((v59 & 1) == 0) ^ v58) & 1) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v60 = v27[12];
  int v61 = *(unsigned __int8 *)(v75 + v60);
  int v62 = *(unsigned __int8 *)(v76 + v60);
  if (v61 == 2)
  {
    if (v62 == 2)
    {
LABEL_48:
      uint64_t v64 = v72;
      uint64_t v63 = v73;
      uint64_t v65 = *(void (**)(char *))(v72 + 16);
      uint64_t v66 = v70;
      v65(v70);
      uint64_t v67 = v71;
      ((void (*)(char *, uint64_t, uint64_t))v65)(v71, v36, v63);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v68 = *(void (**)(char *, uint64_t))(v64 + 8);
      v68(v67, v63);
      v68(v66, v63);
      return v31 & 1;
    }
  }
  else if (v62 != 2 && ((((v62 & 1) == 0) ^ v61) & 1) != 0)
  {
    goto LABEL_48;
  }
LABEL_7:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_100161F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v67 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample(0);
  uint64_t v12 = a1;
  uint64_t v13 = *(int *)(v11 + 20);
  uint64_t v14 = *(void *)(a1 + v13);
  uint64_t v15 = *(void *)(a2 + v13);
  if (v14 == v15) {
    goto LABEL_100;
  }
  v67[0] = a1;
  swift_beginAccess();
  double v16 = *(double *)(v14 + 16);
  char v17 = *(unsigned char *)(v14 + 24);
  swift_beginAccess();
  char v18 = *(unsigned char *)(v15 + 24);
  if (v17)
  {
    if (!*(unsigned char *)(v15 + 24)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v16 != *(double *)(v15 + 16)) {
      char v18 = 1;
    }
    if (v18) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  double v19 = *(double *)(v14 + 32);
  char v20 = *(unsigned char *)(v14 + 40);
  swift_beginAccess();
  char v21 = *(unsigned char *)(v15 + 40);
  if (v20)
  {
    if (!*(unsigned char *)(v15 + 40)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v19 != *(double *)(v15 + 32)) {
      char v21 = 1;
    }
    if (v21) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v22 = *(float *)(v14 + 44);
  char v23 = *(unsigned char *)(v14 + 48);
  swift_beginAccess();
  char v24 = *(unsigned char *)(v15 + 48);
  if (v23)
  {
    if (!*(unsigned char *)(v15 + 48)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v22 != *(float *)(v15 + 44)) {
      char v24 = 1;
    }
    if (v24) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v25 = *(float *)(v14 + 52);
  char v26 = *(unsigned char *)(v14 + 56);
  swift_beginAccess();
  char v27 = *(unsigned char *)(v15 + 56);
  if (v26)
  {
    if (!*(unsigned char *)(v15 + 56)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v25 != *(float *)(v15 + 52)) {
      char v27 = 1;
    }
    if (v27) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v28 = *(float *)(v14 + 60);
  char v29 = *(unsigned char *)(v14 + 64);
  swift_beginAccess();
  char v30 = *(unsigned char *)(v15 + 64);
  if (v29)
  {
    if (!*(unsigned char *)(v15 + 64)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v28 != *(float *)(v15 + 60)) {
      char v30 = 1;
    }
    if (v30) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v31 = *(float *)(v14 + 68);
  char v32 = *(unsigned char *)(v14 + 72);
  swift_beginAccess();
  char v33 = *(unsigned char *)(v15 + 72);
  if (v32)
  {
    if (!*(unsigned char *)(v15 + 72)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v31 != *(float *)(v15 + 68)) {
      char v33 = 1;
    }
    if (v33) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v34 = *(float *)(v14 + 76);
  char v35 = *(unsigned char *)(v14 + 80);
  swift_beginAccess();
  char v36 = *(unsigned char *)(v15 + 80);
  if (v35)
  {
    if (!*(unsigned char *)(v15 + 80)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v34 != *(float *)(v15 + 76)) {
      char v36 = 1;
    }
    if (v36) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v37 = *(float *)(v14 + 84);
  char v38 = *(unsigned char *)(v14 + 88);
  swift_beginAccess();
  char v39 = *(unsigned char *)(v15 + 88);
  if (v38)
  {
    if (!*(unsigned char *)(v15 + 88)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v37 != *(float *)(v15 + 84)) {
      char v39 = 1;
    }
    if (v39) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v40 = *(float *)(v14 + 92);
  char v41 = *(unsigned char *)(v14 + 96);
  swift_beginAccess();
  char v42 = *(unsigned char *)(v15 + 96);
  if (v41)
  {
    if (!*(unsigned char *)(v15 + 96)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v40 != *(float *)(v15 + 92)) {
      char v42 = 1;
    }
    if (v42) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v43 = *(float *)(v14 + 100);
  char v44 = *(unsigned char *)(v14 + 104);
  swift_beginAccess();
  char v45 = *(unsigned char *)(v15 + 104);
  if (v44)
  {
    if (!*(unsigned char *)(v15 + 104)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v43 != *(float *)(v15 + 100)) {
      char v45 = 1;
    }
    if (v45) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v46 = *(float *)(v14 + 108);
  char v47 = *(unsigned char *)(v14 + 112);
  swift_beginAccess();
  char v48 = *(unsigned char *)(v15 + 112);
  if (v47)
  {
    if (!*(unsigned char *)(v15 + 112)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v46 != *(float *)(v15 + 108)) {
      char v48 = 1;
    }
    if (v48) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v49 = *(float *)(v14 + 116);
  char v50 = *(unsigned char *)(v14 + 120);
  swift_beginAccess();
  char v51 = *(unsigned char *)(v15 + 120);
  if (v50)
  {
    if (!*(unsigned char *)(v15 + 120)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v49 != *(float *)(v15 + 116)) {
      char v51 = 1;
    }
    if (v51) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  float v52 = *(float *)(v14 + 124);
  char v53 = *(unsigned char *)(v14 + 128);
  swift_beginAccess();
  char v54 = *(unsigned char *)(v15 + 128);
  if (v53)
  {
    if (!*(unsigned char *)(v15 + 128)) {
      goto LABEL_101;
    }
  }
  else
  {
    if (v52 != *(float *)(v15 + 124)) {
      char v54 = 1;
    }
    if (v54) {
      goto LABEL_101;
    }
  }
  swift_beginAccess();
  int v55 = *(unsigned __int8 *)(v14 + 129);
  swift_beginAccess();
  int v56 = *(unsigned __int8 *)(v15 + 129);
  if (v55 == 3)
  {
    if (v56 != 3) {
      goto LABEL_101;
    }
    goto LABEL_85;
  }
  char v57 = 0;
  if (v56 != 3 && v55 == v56)
  {
LABEL_85:
    swift_beginAccess();
    int v58 = *(unsigned __int8 *)(v14 + 130);
    swift_beginAccess();
    int v59 = *(unsigned __int8 *)(v15 + 130);
    if (v58 == 2)
    {
      if (v59 != 2) {
        goto LABEL_101;
      }
    }
    else if (v59 == 2 || ((v58 ^ ((v59 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_101;
    }
    swift_beginAccess();
    int v60 = *(unsigned __int8 *)(v14 + 131);
    swift_beginAccess();
    int v61 = *(unsigned __int8 *)(v15 + 131);
    if (v60 == 2)
    {
      if (v61 != 2) {
        goto LABEL_101;
      }
    }
    else if (v61 == 2 || ((v60 ^ ((v61 & 1) == 0)) & 1) == 0)
    {
      goto LABEL_101;
    }
    swift_beginAccess();
    int v62 = *(unsigned __int8 *)(v14 + 132);
    swift_beginAccess();
    int v63 = *(unsigned __int8 *)(v15 + 132);
    if (v62 == 2)
    {
      uint64_t v12 = v67[0];
      if (v63 == 2)
      {
LABEL_100:
        uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v64(v10, v12, v4);
        v64(v8, a2, v4);
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v65 = *(void (**)(char *, uint64_t))(v5 + 8);
        v65(v8, v4);
        v65(v10, v4);
        return v57 & 1;
      }
    }
    else if (v63 != 2)
    {
      uint64_t v12 = v67[0];
      if ((v62 ^ ((v63 & 1) == 0))) {
        goto LABEL_100;
      }
    }
LABEL_101:
    char v57 = 0;
  }
  return v57 & 1;
}

uint64_t sub_100162714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState(0);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_42;
    }
  }
  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v15 = v11[6];
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2) {
      goto LABEL_42;
    }
  }
  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v18 = v11[7];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2) {
      goto LABEL_42;
    }
  }
  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v21 = v11[8];
  int v22 = *(unsigned __int8 *)(a1 + v21);
  int v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2) {
      goto LABEL_42;
    }
  }
  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v24 = v11[9];
  int v25 = *(unsigned __int8 *)(a1 + v24);
  int v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2) {
      goto LABEL_42;
    }
  }
  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v27 = v11[10];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 2)
  {
    if (v29 != 2) {
      goto LABEL_42;
    }
  }
  else if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v30 = v11[11];
  int v31 = *(unsigned __int8 *)(a1 + v30);
  int v32 = *(unsigned __int8 *)(a2 + v30);
  if (v31 == 2)
  {
    if (v32 != 2) {
      goto LABEL_42;
    }
  }
  else if (v32 == 2 || ((((v32 & 1) == 0) ^ v31) & 1) == 0)
  {
    goto LABEL_42;
  }
  uint64_t v33 = v11[12];
  int v34 = *(unsigned __int8 *)(a1 + v33);
  int v35 = *(unsigned __int8 *)(a2 + v33);
  if (v34 == 2)
  {
    if (v35 == 2) {
      goto LABEL_41;
    }
LABEL_42:
    char v37 = 0;
    return v37 & 1;
  }
  if (v35 == 2 || ((((v35 & 1) == 0) ^ v34) & 1) == 0) {
    goto LABEL_42;
  }
LABEL_41:
  char v36 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v36(v10, a1, v4);
  v36(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v38 = *(void (**)(char *, uint64_t))(v5 + 8);
  v38(v8, v4);
  v38(v10, v4);
  return v37 & 1;
}

uint64_t sub_100162A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 8)
  {
    if (v14 != 8) {
      goto LABEL_16;
    }
  }
  else if (v14 == 8 || v13 != v14)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *(int *)(v11 + 24);
  int v17 = *(unsigned __int8 *)(a1 + v16);
  int v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 != 4)
  {
    if (v18 != 4 && v17 == v18) {
      goto LABEL_11;
    }
LABEL_16:
    char v20 = 0;
    return v20 & 1;
  }
  if (v18 != 4) {
    goto LABEL_16;
  }
LABEL_11:
  int v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v10, a1, v4);
  v19(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_100162C60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  if ((sub_100159D8C(*a1, *a2, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection, (uint64_t (*)(char *, char *))sub_1001731E0) & 1) == 0)goto LABEL_10; {
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding(0);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v11[6];
  int v14 = (uint64_t *)((char *)a1 + v13);
  char v15 = *((unsigned char *)a1 + v13 + 8);
  uint64_t v16 = (uint64_t *)((char *)a2 + v13);
  int v17 = *((unsigned __int8 *)a2 + v13 + 8);
  if (v15)
  {
    if (!v17) {
      goto LABEL_10;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_10;
    }
  }
  uint64_t v18 = v11[7];
  int v19 = (uint64_t *)((char *)a1 + v18);
  char v20 = *((unsigned char *)a1 + v18 + 8);
  uint64_t v21 = (uint64_t *)((char *)a2 + v18);
  int v22 = *((unsigned __int8 *)a2 + v18 + 8);
  if ((v20 & 1) == 0)
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if (v22) {
      goto LABEL_10;
    }
LABEL_15:
    int v25 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v25(v10, (char *)a1 + v11[5], v4);
    v25(v8, (char *)a2 + v12[5], v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v8, v4);
    v26(v10, v4);
    return v23 & 1;
  }
  if (v22) {
    goto LABEL_15;
  }
LABEL_10:
  char v23 = 0;
  return v23 & 1;
}

uint64_t sub_100162EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v75 = *(void *)(v4 - 8);
  uint64_t v76 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v74 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v73 = (char *)&v72 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v72 - v20;
  __chkstk_darwin(v19);
  char v23 = (char *)&v72 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v78 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v79 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) != 1)
  {
    sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
    if (v30(v29, 1, v8) != 1)
    {
      uint64_t v33 = v77;
      sub_10015B284(v29, v77, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v34 = sub_1001748FC((uint64_t)v18, v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354(v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v21, &qword_10043E458);
      sub_10001ACB8((uint64_t)v23, &qword_10043E458);
      sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      if ((v34 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_7;
  }
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  if (v30(v29, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
LABEL_10:
  uint64_t v35 = v27[6];
  uint64_t v36 = v79;
  char v37 = (double *)(v78 + v35);
  char v38 = *(unsigned char *)(v78 + v35 + 8);
  char v39 = (double *)(v79 + v35);
  int v40 = *(unsigned __int8 *)(v79 + v35 + 8);
  if (v38)
  {
    if (!v40) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_7;
    }
  }
  uint64_t v41 = v27[7];
  char v42 = (double *)(v78 + v41);
  char v43 = *(unsigned char *)(v78 + v41 + 8);
  char v44 = (double *)(v79 + v41);
  int v45 = *(unsigned __int8 *)(v79 + v41 + 8);
  if (v43)
  {
    if (!v45) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v42 != *v44) {
      LOBYTE(v45) = 1;
    }
    if (v45) {
      goto LABEL_7;
    }
  }
  uint64_t v46 = v27[8];
  char v47 = (float *)(v78 + v46);
  char v48 = *(unsigned char *)(v78 + v46 + 4);
  float v49 = (float *)(v79 + v46);
  int v50 = *(unsigned __int8 *)(v79 + v46 + 4);
  if (v48)
  {
    if (!v50) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v47 != *v49) {
      LOBYTE(v50) = 1;
    }
    if (v50) {
      goto LABEL_7;
    }
  }
  uint64_t v51 = v27[9];
  float v52 = (float *)(v78 + v51);
  char v53 = *(unsigned char *)(v78 + v51 + 4);
  char v54 = (float *)(v79 + v51);
  int v55 = *(unsigned __int8 *)(v79 + v51 + 4);
  if (v53)
  {
    if (!v55) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v52 != *v54) {
      LOBYTE(v55) = 1;
    }
    if (v55) {
      goto LABEL_7;
    }
  }
  uint64_t v56 = v27[10];
  char v57 = (float *)(v78 + v56);
  char v58 = *(unsigned char *)(v78 + v56 + 4);
  int v59 = (float *)(v79 + v56);
  int v60 = *(unsigned __int8 *)(v79 + v56 + 4);
  if (v58)
  {
    if (!v60) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v57 != *v59) {
      LOBYTE(v60) = 1;
    }
    if (v60) {
      goto LABEL_7;
    }
  }
  uint64_t v61 = v27[11];
  int v62 = (_DWORD *)(v78 + v61);
  char v63 = *(unsigned char *)(v78 + v61 + 4);
  uint64_t v64 = (_DWORD *)(v79 + v61);
  int v65 = *(unsigned __int8 *)(v79 + v61 + 4);
  if (v63)
  {
    if (v65)
    {
LABEL_46:
      uint64_t v67 = v75;
      uint64_t v66 = v76;
      uint64_t v68 = *(void (**)(char *))(v75 + 16);
      uint64_t v69 = v73;
      v68(v73);
      uint64_t v70 = v74;
      ((void (*)(char *, uint64_t, uint64_t))v68)(v74, v36, v66);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v71 = *(void (**)(char *, uint64_t))(v67 + 8);
      v71(v70, v66);
      v71(v69, v66);
      return v31 & 1;
    }
  }
  else
  {
    if (*v62 != *v64) {
      LOBYTE(v65) = 1;
    }
    if ((v65 & 1) == 0) {
      goto LABEL_46;
    }
  }
LABEL_7:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_1001634F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v69 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v68 = (char *)&v68 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v81 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v73 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002ED4(&qword_100445338);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v76 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int v14 = (char *)&v68 - v13;
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v72 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v79 = (uint64_t)&v68 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v80 = (uint64_t)&v68 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v68 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v68 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v68 - v28;
  uint64_t v30 = type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint(0);
  uint64_t v31 = *(int *)(v30 + 24);
  uint64_t v77 = a1;
  sub_100011480((uint64_t)a1 + v31, (uint64_t)v29, &qword_10043E458);
  uint64_t v75 = (int *)v30;
  uint64_t v32 = *(int *)(v30 + 24);
  uint64_t v78 = a2;
  sub_100011480((uint64_t)a2 + v32, (uint64_t)v27, &qword_10043E458);
  uint64_t v74 = v10;
  uint64_t v33 = *(int *)(v10 + 48);
  uint64_t v34 = v8;
  uint64_t v35 = v81;
  uint64_t v36 = (uint64_t)&v14[v33];
  sub_100011480((uint64_t)v29, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v27, v36, &qword_10043E458);
  char v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  if (v37((uint64_t)v14, 1, v34) == 1)
  {
    sub_10001ACB8((uint64_t)v27, &qword_10043E458);
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    if (v37(v36, 1, v34) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v38 = (uint64_t)v14;
LABEL_14:
    sub_10001ACB8(v38, &qword_100445338);
    goto LABEL_15;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v24, &qword_10043E458);
  if (v37(v36, 1, v34) == 1)
  {
    sub_10001ACB8((uint64_t)v27, &qword_10043E458);
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10015B354((uint64_t)v24, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  uint64_t v39 = v36;
  uint64_t v40 = v73;
  sub_10015B284(v39, v73, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v41 = sub_1001748FC((uint64_t)v24, v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v27, &qword_10043E458);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10015B354((uint64_t)v24, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v41 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  char v42 = v75;
  char v43 = v77;
  uint64_t v44 = v80;
  sub_100011480((uint64_t)v77 + v75[7], v80, &qword_10043E458);
  uint64_t v45 = v79;
  sub_100011480((uint64_t)v78 + v42[7], v79, &qword_10043E458);
  uint64_t v46 = v76;
  uint64_t v47 = v76 + *(int *)(v74 + 48);
  sub_100011480(v44, v76, &qword_10043E458);
  sub_100011480(v45, v47, &qword_10043E458);
  if (v37(v46, 1, v34) == 1)
  {
    sub_10001ACB8(v45, &qword_10043E458);
    sub_10001ACB8(v44, &qword_10043E458);
    if (v37(v47, 1, v34) == 1)
    {
      sub_10001ACB8(v46, &qword_10043E458);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  uint64_t v48 = v72;
  sub_100011480(v46, v72, &qword_10043E458);
  if (v37(v47, 1, v34) == 1)
  {
    sub_10001ACB8(v79, &qword_10043E458);
    sub_10001ACB8(v80, &qword_10043E458);
    sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_13:
    uint64_t v38 = v46;
    goto LABEL_14;
  }
  uint64_t v51 = v73;
  sub_10015B284(v47, v73, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v52 = sub_1001748FC(v48, v51, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v51, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8(v79, &qword_10043E458);
  sub_10001ACB8(v80, &qword_10043E458);
  sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8(v46, &qword_10043E458);
  if ((v52 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v53 = v42[8];
  int v54 = *((unsigned __int8 *)v43 + v53);
  int v55 = v78;
  int v56 = *((unsigned __int8 *)v78 + v53);
  if (v54 == 7)
  {
    if (v56 != 7) {
      goto LABEL_15;
    }
  }
  else
  {
    char v49 = 0;
    if (v56 == 7 || v54 != v56) {
      return v49 & 1;
    }
  }
  uint64_t v57 = v42[9];
  int v58 = *((unsigned __int8 *)v43 + v57);
  int v59 = *((unsigned __int8 *)v78 + v57);
  if (v58 == 7)
  {
    if (v59 == 7) {
      goto LABEL_28;
    }
LABEL_15:
    char v49 = 0;
    return v49 & 1;
  }
  char v49 = 0;
  if (v59 != 7 && v58 == v59)
  {
LABEL_28:
    if (sub_100159D8C(*v43, *v78, type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData, type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData, (uint64_t (*)(char *, char *))sub_1001741F0))
    {
      int v60 = (char *)v43 + v42[5];
      uint64_t v62 = v70;
      uint64_t v61 = v71;
      char v63 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
      uint64_t v64 = v68;
      v63(v68, v60, v71);
      int v65 = (char *)v55 + v42[5];
      uint64_t v66 = v69;
      v63(v69, v65, v61);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v67 = *(void (**)(char *, uint64_t))(v62 + 8);
      v67(v66, v61);
      v67(v64, v61);
      return v49 & 1;
    }
    goto LABEL_15;
  }
  return v49 & 1;
}

uint64_t sub_100163D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v63 = (char *)&v62 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100002ED4(&qword_100445408);
  __chkstk_darwin(v68);
  uint64_t v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E4C0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)&v62 - v13;
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v62 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v62 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v62 - v30;
  uint64_t v32 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver(0);
  sub_100011480(v74 + v32[5], (uint64_t)v31, &qword_10043E458);
  sub_100011480(v75 + v32[5], (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v32[6];
  uint64_t v41 = v74;
  uint64_t v42 = v75;
  char v43 = (_DWORD *)(v74 + v40);
  char v44 = *(unsigned char *)(v74 + v40 + 4);
  uint64_t v45 = (_DWORD *)(v75 + v40);
  int v46 = *(unsigned __int8 *)(v75 + v40 + 4);
  if (v44)
  {
    if (!v46) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v45) {
      LOBYTE(v46) = 1;
    }
    if (v46) {
      goto LABEL_8;
    }
  }
  uint64_t v47 = v69;
  sub_100011480(v74 + v32[7], v69, &qword_10043E4C0);
  uint64_t v48 = v73;
  sub_100011480(v42 + v32[7], v73, &qword_10043E4C0);
  uint64_t v49 = v72;
  uint64_t v50 = v72 + *(int *)(v68 + 48);
  sub_100011480(v47, v72, &qword_10043E4C0);
  sub_100011480(v48, v50, &qword_10043E4C0);
  uint64_t v51 = v71;
  char v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v52(v49, 1, v71) == 1)
  {
    sub_10001ACB8(v48, &qword_10043E4C0);
    sub_10001ACB8(v47, &qword_10043E4C0);
    if (v52(v50, 1, v51) == 1)
    {
      sub_10001ACB8(v49, &qword_10043E4C0);
LABEL_24:
      uint64_t v57 = v65;
      uint64_t v56 = v66;
      int v58 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      int v59 = v63;
      v58(v63, v41, v66);
      int v60 = v64;
      v58(v64, v42, v56);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v57 + 8);
      v61(v60, v56);
      v61(v59, v56);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v53 = v67;
  sub_100011480(v49, v67, &qword_10043E4C0);
  if (v52(v50, 1, v51) == 1)
  {
    sub_10001ACB8(v73, &qword_10043E4C0);
    sub_10001ACB8(v47, &qword_10043E4C0);
    sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
LABEL_22:
    uint64_t v35 = &qword_100445408;
    uint64_t v36 = v49;
    goto LABEL_7;
  }
  uint64_t v54 = v62;
  sub_10015B284(v50, v62, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
  char v55 = sub_100166C38(v53, v54);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
  sub_10001ACB8(v73, &qword_10043E4C0);
  sub_10001ACB8(v47, &qword_10043E4C0);
  sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
  sub_10001ACB8(v49, &qword_10043E4C0);
  if (v55) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_1001645F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo(0);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 7)
  {
    if (v14 != 7) {
      goto LABEL_50;
    }
  }
  else if (v14 == 7 || v13 != v14)
  {
    goto LABEL_50;
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = (_DWORD *)(a1 + v16);
  char v18 = *(unsigned char *)(a1 + v16 + 4);
  uint64_t v19 = (_DWORD *)(a2 + v16);
  int v20 = *(unsigned __int8 *)(a2 + v16 + 4);
  if (v18)
  {
    if (!v20) {
      goto LABEL_50;
    }
  }
  else
  {
    if (*v17 != *v19) {
      LOBYTE(v20) = 1;
    }
    if (v20) {
      goto LABEL_50;
    }
  }
  uint64_t v21 = v11[7];
  uint64_t v22 = (float *)(a1 + v21);
  char v23 = *(unsigned char *)(a1 + v21 + 4);
  uint64_t v24 = (float *)(a2 + v21);
  int v25 = *(unsigned __int8 *)(a2 + v21 + 4);
  if (v23)
  {
    if (!v25) {
      goto LABEL_50;
    }
  }
  else
  {
    if (*v22 != *v24) {
      LOBYTE(v25) = 1;
    }
    if (v25) {
      goto LABEL_50;
    }
  }
  uint64_t v26 = v11[8];
  uint64_t v27 = (float *)(a1 + v26);
  char v28 = *(unsigned char *)(a1 + v26 + 4);
  uint64_t v29 = (float *)(a2 + v26);
  int v30 = *(unsigned __int8 *)(a2 + v26 + 4);
  if (v28)
  {
    if (!v30) {
      goto LABEL_50;
    }
  }
  else
  {
    if (*v27 != *v29) {
      LOBYTE(v30) = 1;
    }
    if (v30) {
      goto LABEL_50;
    }
  }
  uint64_t v31 = v11[9];
  uint64_t v32 = (float *)(a1 + v31);
  char v33 = *(unsigned char *)(a1 + v31 + 4);
  uint64_t v34 = (float *)(a2 + v31);
  int v35 = *(unsigned __int8 *)(a2 + v31 + 4);
  if (v33)
  {
    if (!v35) {
      goto LABEL_50;
    }
  }
  else
  {
    if (*v32 != *v34) {
      LOBYTE(v35) = 1;
    }
    if (v35) {
      goto LABEL_50;
    }
  }
  uint64_t v36 = v11[10];
  char v37 = (float *)(a1 + v36);
  char v38 = *(unsigned char *)(a1 + v36 + 4);
  char v39 = (float *)(a2 + v36);
  int v40 = *(unsigned __int8 *)(a2 + v36 + 4);
  if (v38)
  {
    if (!v40) {
      goto LABEL_50;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_50;
    }
  }
  uint64_t v41 = v11[11];
  int v42 = *(unsigned __int8 *)(a1 + v41);
  int v43 = *(unsigned __int8 *)(a2 + v41);
  if (v42 == 2)
  {
    if (v43 != 2) {
      goto LABEL_50;
    }
  }
  else if (v43 == 2 || ((((v43 & 1) == 0) ^ v42) & 1) == 0)
  {
    goto LABEL_50;
  }
  uint64_t v44 = v11[12];
  int v45 = *(unsigned __int8 *)(a1 + v44);
  int v46 = *(unsigned __int8 *)(a2 + v44);
  if (v45 == 2)
  {
    if (v46 == 2) {
      goto LABEL_49;
    }
LABEL_50:
    char v48 = 0;
    return v48 & 1;
  }
  if (v46 == 2 || ((((v46 & 1) == 0) ^ v45) & 1) == 0) {
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v47(v10, a1, v4);
  v47(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v48 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v5 + 8);
  v49(v8, v4);
  v49(v10, v4);
  return v48 & 1;
}

uint64_t sub_10016492C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_16;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_16;
    }
  }
  uint64_t v17 = *(int *)(v11 + 24);
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  int v20 = (void *)(a2 + v17);
  uint64_t v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_17:
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v24(v10, a1, v4);
      v24(v8, a2, v4);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      v25(v10, v4);
      return v23 & 1;
    }
LABEL_16:
    char v23 = 0;
    return v23 & 1;
  }
  if (!v21) {
    goto LABEL_16;
  }
  if (*v18 == *v20 && v19 == v21) {
    goto LABEL_17;
  }
  char v23 = 0;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    goto LABEL_17;
  }
  return v23 & 1;
}

uint64_t sub_100164B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v54 = (char *)&v53 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v60 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v53 - v20;
  __chkstk_darwin(v19);
  char v23 = (char *)&v53 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v58 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v59 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  int v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_10;
    }
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_7;
  }
  uint64_t v31 = (uint64_t)v60;
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v29, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v34 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v34 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_10:
  uint64_t v35 = v27[6];
  uint64_t v36 = v59;
  int v37 = *(unsigned __int8 *)(v58 + v35);
  int v38 = *(unsigned __int8 *)(v59 + v35);
  if (v37 == 8)
  {
    if (v38 != 8) {
      goto LABEL_7;
    }
  }
  else
  {
    char v32 = 0;
    if (v38 == 8 || v37 != v38) {
      return v32 & 1;
    }
  }
  uint64_t v39 = v27[7];
  int v40 = *(unsigned __int8 *)(v58 + v39);
  int v41 = *(unsigned __int8 *)(v59 + v39);
  if (v40 == 8)
  {
    if (v41 == 8) {
      goto LABEL_20;
    }
LABEL_7:
    char v32 = 0;
    return v32 & 1;
  }
  char v32 = 0;
  if (v41 != 8 && v40 == v41)
  {
LABEL_20:
    uint64_t v42 = v27[8];
    int v43 = (_DWORD *)(v58 + v42);
    char v44 = *(unsigned char *)(v58 + v42 + 4);
    int v45 = (_DWORD *)(v59 + v42);
    int v46 = *(unsigned __int8 *)(v59 + v42 + 4);
    if (v44)
    {
      if (v46)
      {
LABEL_26:
        uint64_t v48 = v56;
        uint64_t v47 = v57;
        uint64_t v49 = *(void (**)(char *))(v56 + 16);
        uint64_t v50 = v54;
        v49(v54);
        uint64_t v51 = v55;
        ((void (*)(char *, uint64_t, uint64_t))v49)(v55, v36, v47);
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v52 = *(void (**)(char *, uint64_t))(v48 + 8);
        v52(v51, v47);
        v52(v50, v47);
        return v32 & 1;
      }
    }
    else
    {
      if (*v43 != *v45) {
        LOBYTE(v46) = 1;
      }
      if ((v46 & 1) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_7;
  }
  return v32 & 1;
}

uint64_t sub_1001650E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  char v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v43 = (char *)&v40 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v46 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v42 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002ED4(&qword_100445378);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100002ED4(&qword_10043E550);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v40 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v40 - v20;
  uint64_t v22 = type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState(0);
  uint64_t v23 = v22;
  uint64_t v24 = *(int *)(v22 + 20);
  int v25 = *(unsigned __int8 *)(a1 + v24);
  uint64_t v47 = a2;
  int v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2) {
      goto LABEL_12;
    }
  }
  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v41 = v4;
  uint64_t v27 = a1;
  sub_100011480(a1 + *(int *)(v22 + 24), (uint64_t)v21, &qword_10043E550);
  sub_100011480(v47 + *(int *)(v23 + 24), (uint64_t)v19, &qword_10043E550);
  uint64_t v28 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_100011480((uint64_t)v21, (uint64_t)v12, &qword_10043E550);
  sub_100011480((uint64_t)v19, v28, &qword_10043E550);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (v29((uint64_t)v12, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v19, &qword_10043E550);
    sub_10001ACB8((uint64_t)v21, &qword_10043E550);
    if (v29(v28, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v12, &qword_10043E550);
LABEL_15:
      uint64_t v34 = v45;
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
      uint64_t v36 = v43;
      uint64_t v37 = v41;
      v35(v43, v27, v41);
      int v38 = v44;
      v35(v44, v47, v37);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      v39(v38, v37);
      v39(v36, v37);
      return v30 & 1;
    }
    goto LABEL_11;
  }
  sub_100011480((uint64_t)v12, (uint64_t)v16, &qword_10043E550);
  if (v29(v28, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v19, &qword_10043E550);
    sub_10001ACB8((uint64_t)v21, &qword_10043E550);
    sub_10015B354((uint64_t)v16, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
LABEL_11:
    sub_10001ACB8((uint64_t)v12, &qword_100445378);
    goto LABEL_12;
  }
  uint64_t v32 = v42;
  sub_10015B284(v28, v42, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
  char v33 = sub_100165A74((uint64_t)v16, v32);
  sub_10015B354(v32, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
  sub_10001ACB8((uint64_t)v19, &qword_10043E550);
  sub_10001ACB8((uint64_t)v21, &qword_10043E550);
  sub_10015B354((uint64_t)v16, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
  sub_10001ACB8((uint64_t)v12, &qword_10043E550);
  if (v33) {
    goto LABEL_15;
  }
LABEL_12:
  char v30 = 0;
  return v30 & 1;
}

uint64_t sub_100165634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 14)
  {
    if (v14 != 14) {
      goto LABEL_15;
    }
  }
  else if (v14 == 14 || v13 != v14)
  {
    goto LABEL_15;
  }
  uint64_t v16 = *(int *)(v11 + 24);
  int v17 = *(unsigned __int8 *)(a1 + v16);
  int v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 == 2)
  {
    if (v18 != 2)
    {
LABEL_15:
      char v20 = 0;
      return v20 & 1;
    }
  }
  else if (v18 == 2 || ((((v18 & 1) == 0) ^ v17) & 1) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v10, a1, v4);
  v19(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_100165834(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (sub_100158F10(*a1, *a2, type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation, type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation, sub_100107EA8) & 1) != 0&& (sub_100158F10(a1[1], a2[1], type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate, type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate, sub_10010E814))
  {
    uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, (char *)a1 + *(int *)(v11 + 24), v4);
    v12(v8, (char *)a2 + *(int *)(v11 + 24), v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100165A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v61 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v12 = (int *)v11;
  uint64_t v13 = *(int *)(v11 + 20);
  int v14 = (void *)(a1 + v13);
  char v15 = *(unsigned char *)(a1 + v13 + 8);
  uint64_t v16 = (void *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 8);
  if (v15)
  {
    if (!v17) {
      goto LABEL_59;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_59;
    }
  }
  uint64_t v18 = *(int *)(v11 + 24);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = *(void *)(a1 + v18 + 8);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  if (!v20)
  {
    if (v22) {
      goto LABEL_59;
    }
LABEL_16:
    uint64_t v25 = v12[7];
    int v26 = (_DWORD *)(a1 + v25);
    char v27 = *(unsigned char *)(a1 + v25 + 4);
    uint64_t v28 = (_DWORD *)(a2 + v25);
    int v29 = *(unsigned __int8 *)(a2 + v25 + 4);
    if (v27)
    {
      if (!v29) {
        goto LABEL_59;
      }
    }
    else
    {
      if (*v26 != *v28) {
        LOBYTE(v29) = 1;
      }
      if (v29) {
        goto LABEL_59;
      }
    }
    uint64_t v30 = v12[8];
    int v31 = *(unsigned __int8 *)(a1 + v30);
    int v32 = *(unsigned __int8 *)(a2 + v30);
    if (v31 == 4)
    {
      if (v32 != 4) {
        goto LABEL_59;
      }
    }
    else if (v32 == 4 || v31 != v32)
    {
      goto LABEL_59;
    }
    uint64_t v34 = v12[9];
    uint64_t v35 = (_DWORD *)(a1 + v34);
    char v36 = *(unsigned char *)(a1 + v34 + 4);
    uint64_t v37 = (_DWORD *)(a2 + v34);
    int v38 = *(unsigned __int8 *)(a2 + v34 + 4);
    if (v36)
    {
      if (!v38) {
        goto LABEL_59;
      }
    }
    else
    {
      if (*v35 != *v37) {
        LOBYTE(v38) = 1;
      }
      if (v38) {
        goto LABEL_59;
      }
    }
    uint64_t v39 = v12[10];
    uint64_t v40 = (float *)(a1 + v39);
    char v41 = *(unsigned char *)(a1 + v39 + 4);
    uint64_t v42 = (float *)(a2 + v39);
    int v43 = *(unsigned __int8 *)(a2 + v39 + 4);
    if (v41)
    {
      if (!v43) {
        goto LABEL_59;
      }
    }
    else
    {
      if (*v40 != *v42) {
        LOBYTE(v43) = 1;
      }
      if (v43) {
        goto LABEL_59;
      }
    }
    uint64_t v44 = v12[11];
    int v45 = *(unsigned __int8 *)(a1 + v44);
    int v46 = *(unsigned __int8 *)(a2 + v44);
    if (v45 == 2)
    {
      if (v46 != 2) {
        goto LABEL_59;
      }
    }
    else if (v46 == 2 || ((((v46 & 1) == 0) ^ v45) & 1) == 0)
    {
      goto LABEL_59;
    }
    uint64_t v47 = v12[12];
    int v48 = *(unsigned __int8 *)(a1 + v47);
    int v49 = *(unsigned __int8 *)(a2 + v47);
    if (v48 == 2)
    {
      if (v49 != 2) {
        goto LABEL_59;
      }
    }
    else if (v49 == 2 || ((((v49 & 1) == 0) ^ v48) & 1) == 0)
    {
      goto LABEL_59;
    }
    uint64_t v50 = v12[13];
    int v51 = *(unsigned __int8 *)(a1 + v50);
    int v52 = *(unsigned __int8 *)(a2 + v50);
    if (v51 != 4)
    {
      char v24 = 0;
      if (v52 == 4 || v51 != v52) {
        return v24 & 1;
      }
LABEL_57:
      uint64_t v53 = v12[14];
      uint64_t v54 = (_DWORD *)(a1 + v53);
      char v55 = *(unsigned char *)(a1 + v53 + 4);
      uint64_t v56 = (_DWORD *)(a2 + v53);
      int v57 = *(unsigned __int8 *)(a2 + v53 + 4);
      if (v55)
      {
        if (!v57) {
          goto LABEL_59;
        }
      }
      else
      {
        if (*v54 != *v56) {
          LOBYTE(v57) = 1;
        }
        if (v57) {
          goto LABEL_59;
        }
      }
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v59(v10, a1, v4);
      v59(v8, a2, v4);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v60 = *(void (**)(char *, uint64_t))(v5 + 8);
      v60(v8, v4);
      v60(v10, v4);
      return v24 & 1;
    }
    if (v52 == 4) {
      goto LABEL_57;
    }
LABEL_59:
    char v24 = 0;
    return v24 & 1;
  }
  if (!v22) {
    goto LABEL_59;
  }
  if (*v19 == *v21 && v20 == v22) {
    goto LABEL_16;
  }
  char v24 = 0;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    goto LABEL_16;
  }
  return v24 & 1;
}

uint64_t sub_100165E2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  int v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  char v33 = v50;
  uint64_t v34 = v51;
  if ((sub_1001592D0(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint, (uint64_t (*)(char *, char *))sub_100165A74) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  int v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_10016638C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v67 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v63 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance(0);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100002ED4(&qword_1004453D8);
  __chkstk_darwin(v70);
  uint64_t v74 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E4F0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v75 = (uint64_t)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v63 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v63 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v63 - v30;
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint(0);
  sub_100011480(v77 + *(int *)(v32 + 20), (uint64_t)v31, &qword_10043E458);
  uint64_t v76 = v32;
  sub_100011480(v78 + *(int *)(v32 + 20), (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v76;
  uint64_t v41 = v77;
  uint64_t v42 = *(int *)(v76 + 24);
  int v43 = (_DWORD *)(v77 + v42);
  char v44 = *(unsigned char *)(v77 + v42 + 4);
  uint64_t v45 = v78;
  int v46 = (_DWORD *)(v78 + v42);
  int v47 = *(unsigned __int8 *)(v78 + v42 + 4);
  if (v44)
  {
    if (!v47) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v46) {
      LOBYTE(v47) = 1;
    }
    if (v47) {
      goto LABEL_8;
    }
  }
  uint64_t v48 = v71;
  sub_100011480(v77 + *(int *)(v76 + 28), v71, &qword_10043E4F0);
  uint64_t v49 = v75;
  sub_100011480(v45 + *(int *)(v40 + 28), v75, &qword_10043E4F0);
  uint64_t v50 = v74;
  uint64_t v51 = v74 + *(int *)(v70 + 48);
  sub_100011480(v48, v74, &qword_10043E4F0);
  sub_100011480(v49, v51, &qword_10043E4F0);
  uint64_t v52 = v73;
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v53(v50, 1, v73) == 1)
  {
    sub_10001ACB8(v49, &qword_10043E4F0);
    sub_10001ACB8(v48, &qword_10043E4F0);
    if (v53(v51, 1, v52) == 1)
    {
      sub_10001ACB8(v50, &qword_10043E4F0);
LABEL_24:
      uint64_t v58 = v67;
      uint64_t v57 = v68;
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      int v60 = v65;
      v59(v65, v41, v68);
      uint64_t v61 = v66;
      v59(v66, v45, v57);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v62 = *(void (**)(char *, uint64_t))(v58 + 8);
      v62(v61, v57);
      v62(v60, v57);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v54 = v69;
  sub_100011480(v50, v69, &qword_10043E4F0);
  if (v53(v51, 1, v52) == 1)
  {
    sub_10001ACB8(v75, &qword_10043E4F0);
    sub_10001ACB8(v48, &qword_10043E4F0);
    sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
LABEL_22:
    uint64_t v35 = &qword_1004453D8;
    uint64_t v36 = v50;
    goto LABEL_7;
  }
  uint64_t v55 = v64;
  sub_10015B284(v51, v64, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
  char v56 = sub_100174700(v54, v55, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, sub_10012B1D8);
  sub_10015B354(v55, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
  sub_10001ACB8(v75, &qword_10043E4F0);
  sub_10001ACB8(v48, &qword_10043E4F0);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
  sub_10001ACB8(v50, &qword_10043E4F0);
  if (v56) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_100166C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v51 = (char *)&v48 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v54 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100002ED4(&qword_10043E458);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v48 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v48 - v21;
  uint64_t v23 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v24 = a1;
  uint64_t v25 = v23;
  uint64_t v26 = v23[5];
  uint64_t v27 = *(char *)(v24 + v26);
  uint64_t v55 = a2;
  uint64_t v28 = *(char *)(a2 + v26);
  if (v27 == 72)
  {
    if (v28 != 72) {
      goto LABEL_18;
    }
  }
  else if (v28 == 72 || qword_1003AC530[v27] != qword_1003AC530[v28])
  {
    goto LABEL_18;
  }
  uint64_t v29 = v23[6];
  uint64_t v30 = (double *)(v24 + v29);
  char v31 = *(unsigned char *)(v24 + v29 + 8);
  uint64_t v32 = (double *)(v55 + v29);
  int v33 = *(unsigned __int8 *)(v55 + v29 + 8);
  if (v31)
  {
    if (!v33) {
      goto LABEL_18;
    }
  }
  else
  {
    if (*v30 != *v32) {
      LOBYTE(v33) = 1;
    }
    if (v33) {
      goto LABEL_18;
    }
  }
  uint64_t v49 = v4;
  uint64_t v50 = v24;
  sub_100011480(v24 + v23[7], (uint64_t)v22, &qword_10043E458);
  sub_100011480(v55 + v25[7], (uint64_t)v20, &qword_10043E458);
  uint64_t v34 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100011480((uint64_t)v22, (uint64_t)v13, &qword_10043E458);
  sub_100011480((uint64_t)v20, v34, &qword_10043E458);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  if (v35((uint64_t)v13, 1, v8) != 1)
  {
    sub_100011480((uint64_t)v13, (uint64_t)v17, &qword_10043E458);
    if (v35(v34, 1, v8) != 1)
    {
      sub_10015B284(v34, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v38 = sub_1001748FC((uint64_t)v17, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v20, &qword_10043E458);
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      sub_10015B354((uint64_t)v17, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v13, &qword_10043E458);
      if ((v38 & 1) == 0) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
    sub_10001ACB8((uint64_t)v20, &qword_10043E458);
    sub_10001ACB8((uint64_t)v22, &qword_10043E458);
    sub_10015B354((uint64_t)v17, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_17:
    sub_10001ACB8((uint64_t)v13, &qword_100445338);
    goto LABEL_18;
  }
  sub_10001ACB8((uint64_t)v20, &qword_10043E458);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if (v35(v34, 1, v8) != 1) {
    goto LABEL_17;
  }
  sub_10001ACB8((uint64_t)v13, &qword_10043E458);
LABEL_21:
  uint64_t v39 = v25[8];
  uint64_t v40 = *(char *)(v50 + v39);
  uint64_t v41 = *(char *)(v55 + v39);
  if (v40 != 72)
  {
    if (v41 == 72 || qword_1003AC530[v40] != qword_1003AC530[v41]) {
      goto LABEL_18;
    }
LABEL_26:
    uint64_t v42 = v53;
    int v43 = *(void (**)(char *))(v53 + 16);
    char v44 = v51;
    uint64_t v45 = v49;
    v43(v51);
    int v46 = v52;
    ((void (*)(char *, uint64_t, uint64_t))v43)(v52, v55, v45);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v47 = *(void (**)(char *, uint64_t))(v42 + 8);
    v47(v46, v45);
    v47(v44, v45);
    return v36 & 1;
  }
  if (v41 == 72) {
    goto LABEL_26;
  }
LABEL_18:
  char v36 = 0;
  return v36 & 1;
}

uint64_t sub_100167210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_47;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_47;
    }
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (double *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v19)
  {
    if (!v21) {
      goto LABEL_47;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_47;
    }
  }
  uint64_t v22 = v11[7];
  int v23 = *(unsigned __int8 *)(a1 + v22);
  int v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 3)
  {
    if (v24 != 3) {
      goto LABEL_47;
    }
  }
  else if (v24 == 3 || v23 != v24)
  {
    goto LABEL_47;
  }
  uint64_t v26 = v11[8];
  int v27 = *(unsigned __int8 *)(a1 + v26);
  int v28 = *(unsigned __int8 *)(a2 + v26);
  if (v27 == 4)
  {
    if (v28 != 4) {
      goto LABEL_47;
    }
  }
  else if (v28 == 4 || v27 != v28)
  {
    goto LABEL_47;
  }
  uint64_t v30 = v11[9];
  char v31 = (double *)(a1 + v30);
  char v32 = *(unsigned char *)(a1 + v30 + 8);
  int v33 = (double *)(a2 + v30);
  int v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if (v32)
  {
    if (!v34) {
      goto LABEL_47;
    }
  }
  else
  {
    if (*v31 != *v33) {
      LOBYTE(v34) = 1;
    }
    if (v34) {
      goto LABEL_47;
    }
  }
  uint64_t v35 = v11[10];
  int v36 = *(unsigned __int8 *)(a1 + v35);
  int v37 = *(unsigned __int8 *)(a2 + v35);
  if (v36 == 4)
  {
    if (v37 != 4) {
      goto LABEL_47;
    }
    goto LABEL_40;
  }
  char v38 = 0;
  if (v37 != 4 && v36 == v37)
  {
LABEL_40:
    uint64_t v39 = v11[11];
    int v40 = *(unsigned __int8 *)(a1 + v39);
    int v41 = *(unsigned __int8 *)(a2 + v39);
    if (v40 != 2)
    {
      if (v41 == 2 || ((((v41 & 1) == 0) ^ v40) & 1) == 0) {
        goto LABEL_47;
      }
LABEL_45:
      uint64_t v42 = v11[12];
      int v43 = (float *)(a1 + v42);
      char v44 = *(unsigned char *)(a1 + v42 + 4);
      uint64_t v45 = (float *)(a2 + v42);
      int v46 = *(unsigned __int8 *)(a2 + v42 + 4);
      if (v44)
      {
        if (!v46) {
          goto LABEL_47;
        }
      }
      else
      {
        if (*v43 != *v45) {
          LOBYTE(v46) = 1;
        }
        if (v46) {
          goto LABEL_47;
        }
      }
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v48(v10, a1, v4);
      v48(v8, a2, v4);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v5 + 8);
      v49(v8, v4);
      v49(v10, v4);
      return v38 & 1;
    }
    if (v41 == 2) {
      goto LABEL_45;
    }
LABEL_47:
    char v38 = 0;
  }
  return v38 & 1;
}

uint64_t sub_10016753C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_37;
    }
    goto LABEL_10;
  }
  if (!v16) {
    goto LABEL_37;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = v11[6];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = *(void *)(a1 + v19 + 8);
    uint64_t v22 = (void *)(a2 + v19);
    uint64_t v23 = v22[1];
    if (v21)
    {
      if (v23)
      {
        if (*v20 != *v22 || v21 != v23)
        {
          char v18 = 0;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return v18 & 1;
          }
        }
LABEL_19:
        uint64_t v25 = v11[7];
        int v26 = *(unsigned __int8 *)(a1 + v25);
        int v27 = *(unsigned __int8 *)(a2 + v25);
        if (v26 == 67)
        {
          if (v27 != 67) {
            goto LABEL_37;
          }
        }
        else if (v27 == 67 || v26 != v27)
        {
          goto LABEL_37;
        }
        uint64_t v29 = v11[8];
        int v30 = *(unsigned __int8 *)(a1 + v29);
        int v31 = *(unsigned __int8 *)(a2 + v29);
        if (v30 == 5)
        {
          if (v31 != 5) {
            goto LABEL_37;
          }
        }
        else if (v31 == 5 || v30 != v31)
        {
          goto LABEL_37;
        }
        uint64_t v33 = v11[9];
        int v34 = *(unsigned __int8 *)(a1 + v33);
        int v35 = *(unsigned __int8 *)(a2 + v33);
        if (v34 == 3)
        {
          if (v35 != 3) {
            goto LABEL_37;
          }
        }
        else
        {
          char v18 = 0;
          if (v35 == 3 || v34 != v35) {
            return v18 & 1;
          }
        }
        int v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v37(v10, a1, v4);
        v37(v8, a2, v4);
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v38 = *(void (**)(char *, uint64_t))(v5 + 8);
        v38(v8, v4);
        v38(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v23)
    {
      goto LABEL_19;
    }
LABEL_37:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1001677F4(uint64_t a1, uint64_t a2)
{
  uint64_t v121 = a2;
  uint64_t v98 = type metadata accessor for UnknownStorage();
  uint64_t v101 = *(void *)(v98 - 8);
  uint64_t v3 = __chkstk_darwin(v98);
  char v100 = &v95[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v99 = &v95[-v5];
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v103 = *(void *)(v6 - 8);
  uint64_t v104 = v6;
  __chkstk_darwin(v6);
  char v97 = &v95[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v102 = sub_100002ED4(&qword_100445400);
  __chkstk_darwin(v102);
  uint64_t v105 = &v95[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100002ED4(&qword_10043E4C8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v107 = &v95[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v115 = &v95[-v13];
  __chkstk_darwin(v12);
  uint64_t v110 = &v95[-v14];
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v113 = &v95[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100002ED4(&qword_100445338);
  uint64_t v19 = __chkstk_darwin(v18);
  v109 = &v95[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v114 = &v95[-v22];
  __chkstk_darwin(v21);
  int v24 = &v95[-v23];
  uint64_t v25 = sub_100002ED4(&qword_10043E458);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v106 = &v95[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v108 = &v95[-v29];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v111 = &v95[-v31];
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v112 = &v95[-v33];
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v119 = &v95[-v35];
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v118 = &v95[-v37];
  uint64_t v38 = __chkstk_darwin(v36);
  int v40 = &v95[-v39];
  uint64_t v41 = __chkstk_darwin(v38);
  int v43 = &v95[-v42];
  __chkstk_darwin(v41);
  uint64_t v45 = &v95[-v44];
  uint64_t v46 = type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent(0);
  uint64_t v47 = *(int *)(v46 + 20);
  uint64_t v120 = a1;
  sub_100011480(a1 + v47, (uint64_t)v45, &qword_10043E458);
  uint64_t v116 = (int *)v46;
  sub_100011480(v121 + *(int *)(v46 + 20), (uint64_t)v43, &qword_10043E458);
  uint64_t v117 = v18;
  uint64_t v48 = (uint64_t)&v24[*(int *)(v18 + 48)];
  sub_100011480((uint64_t)v45, (uint64_t)v24, &qword_10043E458);
  sub_100011480((uint64_t)v43, v48, &qword_10043E458);
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v49((uint64_t)v24, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v43, &qword_10043E458);
    sub_10001ACB8((uint64_t)v45, &qword_10043E458);
    if (v49(v48, 1, v15) == 1)
    {
      uint64_t v50 = v15;
      sub_10001ACB8((uint64_t)v24, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v51 = &qword_100445338;
    uint64_t v52 = (uint64_t)v24;
LABEL_34:
    sub_10001ACB8(v52, v51);
    goto LABEL_35;
  }
  sub_100011480((uint64_t)v24, (uint64_t)v40, &qword_10043E458);
  if (v49(v48, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v43, &qword_10043E458);
    sub_10001ACB8((uint64_t)v45, &qword_10043E458);
    sub_10015B354((uint64_t)v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  uint64_t v53 = v113;
  sub_10015B284(v48, (uint64_t)v113, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  int v96 = sub_1001748FC((uint64_t)v40, (uint64_t)v53, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v53, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v43, &qword_10043E458);
  sub_10001ACB8((uint64_t)v45, &qword_10043E458);
  sub_10015B354((uint64_t)v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v24, &qword_10043E458);
  uint64_t v50 = v15;
  if ((v96 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_8:
  uint64_t v54 = v116;
  uint64_t v55 = v118;
  sub_100011480(v120 + v116[6], (uint64_t)v118, &qword_10043E458);
  uint64_t v56 = v121;
  uint64_t v57 = v119;
  sub_100011480(v121 + v54[6], (uint64_t)v119, &qword_10043E458);
  uint64_t v58 = v114;
  uint64_t v59 = (uint64_t)&v114[*(int *)(v117 + 48)];
  sub_100011480((uint64_t)v55, (uint64_t)v114, &qword_10043E458);
  sub_100011480((uint64_t)v57, v59, &qword_10043E458);
  if (v49((uint64_t)v58, 1, v50) == 1)
  {
    sub_10001ACB8((uint64_t)v57, &qword_10043E458);
    sub_10001ACB8((uint64_t)v55, &qword_10043E458);
    unsigned int v60 = v49(v59, 1, v50);
    uint64_t v61 = v115;
    if (v60 == 1)
    {
      sub_10001ACB8((uint64_t)v58, &qword_10043E458);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v62 = v112;
  sub_100011480((uint64_t)v58, (uint64_t)v112, &qword_10043E458);
  unsigned int v63 = v49(v59, 1, v50);
  uint64_t v61 = v115;
  if (v63 == 1)
  {
    sub_10001ACB8((uint64_t)v119, &qword_10043E458);
    sub_10001ACB8((uint64_t)v55, &qword_10043E458);
    sub_10015B354((uint64_t)v62, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_13:
    uint64_t v51 = &qword_100445338;
    uint64_t v52 = (uint64_t)v58;
    goto LABEL_34;
  }
  uint64_t v64 = v113;
  sub_10015B284(v59, (uint64_t)v113, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  int v96 = sub_1001748FC((uint64_t)v62, (uint64_t)v64, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v64, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v119, &qword_10043E458);
  sub_10001ACB8((uint64_t)v118, &qword_10043E458);
  sub_10015B354((uint64_t)v62, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v58, &qword_10043E458);
  if ((v96 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_15:
  uint64_t v65 = v54[7];
  int v66 = *(unsigned __int8 *)(v120 + v65);
  int v67 = *(unsigned __int8 *)(v56 + v65);
  if (v66 == 19)
  {
    if (v67 != 19) {
      goto LABEL_35;
    }
LABEL_20:
    uint64_t v69 = v120 + v54[8];
    uint64_t v70 = v54;
    uint64_t v71 = v111;
    sub_100011480(v69, (uint64_t)v111, &qword_10043E458);
    uint64_t v72 = v108;
    sub_100011480(v56 + v70[8], (uint64_t)v108, &qword_10043E458);
    uint64_t v73 = v109;
    uint64_t v74 = (uint64_t)&v109[*(int *)(v117 + 48)];
    sub_100011480((uint64_t)v71, (uint64_t)v109, &qword_10043E458);
    sub_100011480((uint64_t)v72, v74, &qword_10043E458);
    if (v49((uint64_t)v73, 1, v50) == 1)
    {
      sub_10001ACB8((uint64_t)v72, &qword_10043E458);
      sub_10001ACB8((uint64_t)v71, &qword_10043E458);
      unsigned int v75 = v49(v74, 1, v50);
      uint64_t v76 = (uint64_t)v107;
      uint64_t v77 = v110;
      if (v75 == 1)
      {
        sub_10001ACB8((uint64_t)v73, &qword_10043E458);
LABEL_27:
        uint64_t v82 = v116;
        sub_100011480(v120 + v116[9], (uint64_t)v77, &qword_10043E4C8);
        sub_100011480(v56 + v82[9], (uint64_t)v61, &qword_10043E4C8);
        uint64_t v73 = v105;
        uint64_t v83 = (uint64_t)&v105[*(int *)(v102 + 48)];
        sub_100011480((uint64_t)v77, (uint64_t)v105, &qword_10043E4C8);
        sub_100011480((uint64_t)v61, v83, &qword_10043E4C8);
        uint64_t v84 = v104;
        uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
        if (v85((uint64_t)v73, 1, v104) == 1)
        {
          sub_10001ACB8((uint64_t)v61, &qword_10043E4C8);
          sub_10001ACB8((uint64_t)v77, &qword_10043E4C8);
          if (v85(v83, 1, v84) == 1)
          {
            sub_10001ACB8((uint64_t)v73, &qword_10043E4C8);
LABEL_38:
            uint64_t v89 = v101;
            uint64_t v90 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v101 + 16);
            uint64_t v91 = v99;
            uint64_t v92 = v98;
            v90(v99, v120, v98);
            uint64_t v93 = v100;
            v90(v100, v56, v92);
            sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
            char v68 = dispatch thunk of static Equatable.== infix(_:_:)();
            int v94 = *(void (**)(unsigned char *, uint64_t))(v89 + 8);
            v94(v93, v92);
            v94(v91, v92);
            return v68 & 1;
          }
          goto LABEL_32;
        }
        sub_100011480((uint64_t)v73, v76, &qword_10043E4C8);
        if (v85(v83, 1, v84) == 1)
        {
          sub_10001ACB8((uint64_t)v115, &qword_10043E4C8);
          sub_10001ACB8((uint64_t)v110, &qword_10043E4C8);
          sub_10015B354(v76, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
LABEL_32:
          uint64_t v51 = &qword_100445400;
          goto LABEL_33;
        }
        uint64_t v87 = v97;
        sub_10015B284(v83, (uint64_t)v97, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
        char v88 = sub_10016753C(v76, (uint64_t)v87);
        sub_10015B354((uint64_t)v87, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
        sub_10001ACB8((uint64_t)v115, &qword_10043E4C8);
        sub_10001ACB8((uint64_t)v110, &qword_10043E4C8);
        sub_10015B354(v76, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
        sub_10001ACB8((uint64_t)v73, &qword_10043E4C8);
        if (v88) {
          goto LABEL_38;
        }
LABEL_35:
        char v68 = 0;
        return v68 & 1;
      }
    }
    else
    {
      uint64_t v78 = v106;
      sub_100011480((uint64_t)v73, (uint64_t)v106, &qword_10043E458);
      unsigned int v79 = v49(v74, 1, v50);
      uint64_t v76 = (uint64_t)v107;
      uint64_t v77 = v110;
      if (v79 != 1)
      {
        uint64_t v80 = v113;
        sub_10015B284(v74, (uint64_t)v113, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
        char v81 = sub_1001748FC((uint64_t)v78, (uint64_t)v80, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
        sub_10015B354((uint64_t)v80, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
        sub_10001ACB8((uint64_t)v72, &qword_10043E458);
        sub_10001ACB8((uint64_t)v111, &qword_10043E458);
        sub_10015B354((uint64_t)v78, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
        sub_10001ACB8((uint64_t)v73, &qword_10043E458);
        if ((v81 & 1) == 0) {
          goto LABEL_35;
        }
        goto LABEL_27;
      }
      sub_10001ACB8((uint64_t)v72, &qword_10043E458);
      sub_10001ACB8((uint64_t)v111, &qword_10043E458);
      sub_10015B354((uint64_t)v78, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    }
    uint64_t v51 = &qword_100445338;
LABEL_33:
    uint64_t v52 = (uint64_t)v73;
    goto LABEL_34;
  }
  char v68 = 0;
  if (v67 != 19 && v66 == v67) {
    goto LABEL_20;
  }
  return v68 & 1;
}

uint64_t sub_100168638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[5];
  int v14 = *(unsigned __int8 *)(a1 + v13);
  int v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14 == 5)
  {
    if (v15 != 5) {
      goto LABEL_35;
    }
  }
  else if (v15 == 5 || v14 != v15)
  {
    goto LABEL_35;
  }
  uint64_t v17 = v11[6];
  int v18 = *(unsigned __int8 *)(a1 + v17);
  int v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 3)
  {
    if (v19 != 3) {
      goto LABEL_35;
    }
  }
  else if (v19 == 3 || v18 != v19)
  {
    goto LABEL_35;
  }
  uint64_t v21 = v11[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  int v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  if (!v23)
  {
    if (v25) {
      goto LABEL_35;
    }
LABEL_26:
    uint64_t v28 = v12[8];
    uint64_t v29 = (void *)(a1 + v28);
    uint64_t v30 = *(void *)(a1 + v28 + 8);
    uint64_t v31 = (void *)(a2 + v28);
    uint64_t v32 = v31[1];
    if (v30)
    {
      if (v32)
      {
        if (*v29 != *v31 || v30 != v32)
        {
          char v27 = 0;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return v27 & 1;
          }
        }
LABEL_37:
        uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v35(v10, a1, v4);
        v35(v8, a2, v4);
        sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
        v36(v8, v4);
        v36(v10, v4);
        return v27 & 1;
      }
    }
    else if (!v32)
    {
      goto LABEL_37;
    }
LABEL_35:
    char v27 = 0;
    return v27 & 1;
  }
  if (!v25) {
    goto LABEL_35;
  }
  if (*v22 == *v24 && v23 == v25) {
    goto LABEL_26;
  }
  char v27 = 0;
  if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
    goto LABEL_26;
  }
  return v27 & 1;
}

uint64_t sub_1001688C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  int v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  uint64_t v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  if ((sub_100159148(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_MagSample, type metadata accessor for CLP_LogEntry_PrivateData_MagSample, type metadata accessor for CLP_LogEntry_PrivateData_MagSample) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  int v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_100168E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = *(char *)(a1 + v12);
  uint64_t v14 = *(char *)(a2 + v12);
  if (v13 == 5)
  {
    if (v14 != 5) {
      goto LABEL_22;
    }
  }
  else if (v14 == 5 || qword_1003AC770[v13] != qword_1003AC770[v14])
  {
    goto LABEL_22;
  }
  uint64_t v15 = v11[6];
  uint64_t v16 = *(char *)(a1 + v15);
  uint64_t v17 = *(char *)(a2 + v15);
  if (v16 == 5)
  {
    if (v17 != 5) {
      goto LABEL_22;
    }
  }
  else if (v17 == 5 || qword_1003AC770[v16] != qword_1003AC770[v17])
  {
    goto LABEL_22;
  }
  uint64_t v18 = v11[7];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2) {
      goto LABEL_22;
    }
  }
  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v21 = v11[8];
  int v22 = *(unsigned __int8 *)(a1 + v21);
  int v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 == 2) {
      goto LABEL_21;
    }
LABEL_22:
    char v25 = 0;
    return v25 & 1;
  }
  if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0) {
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v24(v10, a1, v4);
  v24(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v8, v4);
  v26(v10, v4);
  return v25 & 1;
}

uint64_t sub_1001690AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0) + 20);
  uint64_t v12 = (_DWORD *)(a1 + v11);
  char v13 = *(unsigned char *)(a1 + v11 + 4);
  uint64_t v14 = (_DWORD *)(a2 + v11);
  int v15 = *(unsigned __int8 *)(a2 + v11 + 4);
  if ((v13 & 1) == 0)
  {
    if (*v12 != *v14) {
      LOBYTE(v15) = 1;
    }
    if (v15) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1, v4);
    v17(v8, a2, v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v16 & 1;
  }
  if (v15) {
    goto LABEL_7;
  }
LABEL_3:
  char v16 = 0;
  return v16 & 1;
}

uint64_t sub_100169278(uint64_t a1, uint64_t a2)
{
  uint64_t v125 = a1;
  uint64_t v126 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v106 = *(void *)(v2 - 8);
  uint64_t v107 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v105 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v104 = (char *)&v104 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t v116 = *(void *)(v6 - 8);
  uint64_t v117 = v6;
  __chkstk_darwin(v6);
  uint64_t v108 = (uint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100002ED4(&qword_100445388);
  __chkstk_darwin(v109);
  uint64_t v110 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E540);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v115 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v113 = (uint64_t)&v104 - v13;
  __chkstk_darwin(v12);
  uint64_t v111 = (uint64_t)&v104 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  uint64_t v120 = *(void *)(v15 - 8);
  uint64_t v121 = v15;
  __chkstk_darwin(v15);
  uint64_t v112 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100002ED4(&qword_100445390);
  __chkstk_darwin(v118);
  uint64_t v122 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100002ED4(&qword_10043E538);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v114 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v124 = (uint64_t)&v104 - v22;
  __chkstk_darwin(v21);
  uint64_t v119 = (uint64_t)&v104 - v23;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100002ED4(&qword_100445338);
  uint64_t v29 = v28 - 8;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v104 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100002ED4(&qword_10043E458);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v35 = (char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)&v104 - v37;
  __chkstk_darwin(v36);
  int v40 = (char *)&v104 - v39;
  uint64_t v41 = type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample(0);
  sub_100011480(v125 + *(int *)(v41 + 20), (uint64_t)v40, &qword_10043E458);
  uint64_t v123 = (int *)v41;
  sub_100011480(v126 + *(int *)(v41 + 20), (uint64_t)v38, &qword_10043E458);
  uint64_t v42 = (uint64_t)&v31[*(int *)(v29 + 56)];
  sub_100011480((uint64_t)v40, (uint64_t)v31, &qword_10043E458);
  sub_100011480((uint64_t)v38, v42, &qword_10043E458);
  int v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v43((uint64_t)v31, 1, v24) == 1)
  {
    sub_10001ACB8((uint64_t)v38, &qword_10043E458);
    sub_10001ACB8((uint64_t)v40, &qword_10043E458);
    if (v43(v42, 1, v24) == 1)
    {
      sub_10001ACB8((uint64_t)v31, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v44 = &qword_100445338;
    uint64_t v45 = (uint64_t)v31;
    goto LABEL_14;
  }
  sub_100011480((uint64_t)v31, (uint64_t)v35, &qword_10043E458);
  if (v43(v42, 1, v24) == 1)
  {
    sub_10001ACB8((uint64_t)v38, &qword_10043E458);
    sub_10001ACB8((uint64_t)v40, &qword_10043E458);
    sub_10015B354((uint64_t)v35, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v42, (uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v46 = sub_1001748FC((uint64_t)v35, (uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v38, &qword_10043E458);
  sub_10001ACB8((uint64_t)v40, &qword_10043E458);
  sub_10015B354((uint64_t)v35, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  if ((v46 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v47 = v123;
  uint64_t v48 = v119;
  sub_100011480(v125 + v123[6], v119, &qword_10043E538);
  uint64_t v49 = v124;
  sub_100011480(v126 + v47[6], v124, &qword_10043E538);
  uint64_t v50 = v122;
  uint64_t v51 = v122 + *(int *)(v118 + 48);
  sub_100011480(v48, v122, &qword_10043E538);
  sub_100011480(v49, v51, &qword_10043E538);
  uint64_t v52 = v121;
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
  if (v53(v50, 1, v121) == 1)
  {
    sub_10001ACB8(v49, &qword_10043E538);
    sub_10001ACB8(v48, &qword_10043E538);
    int v54 = v53(v51, 1, v52);
    uint64_t v56 = v116;
    uint64_t v55 = v117;
    uint64_t v57 = v115;
    if (v54 == 1)
    {
      sub_10001ACB8(v50, &qword_10043E538);
      goto LABEL_18;
    }
LABEL_13:
    uint64_t v44 = &qword_100445390;
    uint64_t v45 = v50;
    goto LABEL_14;
  }
  uint64_t v58 = v114;
  sub_100011480(v50, v114, &qword_10043E538);
  int v59 = v53(v51, 1, v52);
  uint64_t v60 = v116;
  uint64_t v55 = v117;
  uint64_t v57 = v115;
  if (v59 == 1)
  {
    sub_10001ACB8(v124, &qword_10043E538);
    sub_10001ACB8(v48, &qword_10043E538);
    sub_10015B354(v58, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
    goto LABEL_13;
  }
  uint64_t v63 = v112;
  sub_10015B284(v51, v112, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
  char v64 = sub_100174700(v58, v63, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion, sub_10014174C);
  sub_10015B354(v63, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
  sub_10001ACB8(v124, &qword_10043E538);
  sub_10001ACB8(v48, &qword_10043E538);
  uint64_t v56 = v60;
  sub_10015B354(v58, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
  sub_10001ACB8(v50, &qword_10043E538);
  if ((v64 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v65 = (uint64_t)v57;
  uint64_t v66 = v47[7];
  uint64_t v67 = v125;
  uint64_t v68 = v126;
  int v69 = *(unsigned __int8 *)(v125 + v66);
  int v70 = *(unsigned __int8 *)(v126 + v66);
  if (v69 == 2)
  {
    uint64_t v71 = v113;
    if (v70 != 2) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v71 = v113;
    if (v70 == 2 || ((((v70 & 1) == 0) ^ v69) & 1) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v72 = v47[8];
  uint64_t v73 = (_DWORD *)(v125 + v72);
  char v74 = *(unsigned char *)(v125 + v72 + 4);
  unsigned int v75 = (_DWORD *)(v126 + v72);
  int v76 = *(unsigned __int8 *)(v126 + v72 + 4);
  if (v74)
  {
    if (!v76) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v73 != *v75) {
      LOBYTE(v76) = 1;
    }
    if (v76) {
      goto LABEL_15;
    }
  }
  uint64_t v77 = v47[9];
  int v78 = *(unsigned __int8 *)(v125 + v77);
  int v79 = *(unsigned __int8 *)(v126 + v77);
  if (v78 == 5)
  {
    uint64_t v80 = v111;
    if (v79 != 5) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
  char v61 = 0;
  uint64_t v80 = v111;
  if (v79 != 5 && v78 == v79)
  {
LABEL_34:
    sub_100011480(v125 + v47[10], v80, &qword_10043E540);
    sub_100011480(v68 + v47[10], v71, &qword_10043E540);
    uint64_t v81 = v71;
    uint64_t v82 = v110;
    uint64_t v83 = v110 + *(int *)(v109 + 48);
    sub_100011480(v80, v110, &qword_10043E540);
    uint64_t v84 = v82;
    sub_100011480(v81, v83, &qword_10043E540);
    uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    if (v85(v84, 1, v55) == 1)
    {
      sub_10001ACB8(v81, &qword_10043E540);
      uint64_t v84 = v110;
      sub_10001ACB8(v80, &qword_10043E540);
      if (v85(v83, 1, v55) == 1)
      {
        sub_10001ACB8(v84, &qword_10043E540);
LABEL_41:
        uint64_t v88 = v123[11];
        uint64_t v89 = (float *)(v67 + v88);
        char v90 = *(unsigned char *)(v67 + v88 + 4);
        uint64_t v91 = (float *)(v68 + v88);
        int v92 = *(unsigned __int8 *)(v68 + v88 + 4);
        if (v90)
        {
          if (v92) {
            goto LABEL_47;
          }
        }
        else
        {
          if (*v89 != *v91) {
            LOBYTE(v92) = 1;
          }
          if ((v92 & 1) == 0)
          {
LABEL_47:
            uint64_t v93 = v123[12];
            int v94 = (float *)(v67 + v93);
            char v95 = *(unsigned char *)(v67 + v93 + 4);
            int v96 = (float *)(v68 + v93);
            int v97 = *(unsigned __int8 *)(v68 + v93 + 4);
            if (v95)
            {
              if (v97)
              {
LABEL_53:
                uint64_t v99 = v106;
                uint64_t v98 = v107;
                char v100 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
                uint64_t v101 = v104;
                v100(v104, v67, v107);
                uint64_t v102 = v105;
                v100(v105, v68, v98);
                sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
                char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v103 = *(void (**)(char *, uint64_t))(v99 + 8);
                v103(v102, v98);
                v103(v101, v98);
                return v61 & 1;
              }
            }
            else
            {
              if (*v94 != *v96) {
                LOBYTE(v97) = 1;
              }
              if ((v97 & 1) == 0) {
                goto LABEL_53;
              }
            }
          }
        }
LABEL_15:
        char v61 = 0;
        return v61 & 1;
      }
    }
    else
    {
      sub_100011480(v84, v65, &qword_10043E540);
      if (v85(v83, 1, v55) != 1)
      {
        uint64_t v86 = v108;
        sub_10015B284(v83, v108, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
        char v87 = sub_1001690AC(v65, v86);
        sub_10015B354(v86, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
        sub_10001ACB8(v113, &qword_10043E540);
        sub_10001ACB8(v111, &qword_10043E540);
        sub_10015B354(v65, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
        sub_10001ACB8(v84, &qword_10043E540);
        if ((v87 & 1) == 0) {
          goto LABEL_15;
        }
        goto LABEL_41;
      }
      sub_10001ACB8(v113, &qword_10043E540);
      sub_10001ACB8(v111, &qword_10043E540);
      sub_10015B354(v65, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
    }
    uint64_t v44 = &qword_100445388;
    uint64_t v45 = v84;
LABEL_14:
    sub_10001ACB8(v45, v44);
    goto LABEL_15;
  }
  return v61 & 1;
}

uint64_t sub_100169F98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  uint64_t v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  if ((sub_1001592D0(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample, type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample, (uint64_t (*)(char *, char *))sub_100169278) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  int v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_10016A4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  char v64 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v63 = (char *)&v62 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100002ED4(&qword_1004453F0);
  __chkstk_darwin(v68);
  uint64_t v72 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E4D8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v67 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)&v62 - v13;
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v62 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v62 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v62 - v30;
  char v32 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry(0);
  sub_100011480(v74 + v32[5], (uint64_t)v31, &qword_10043E458);
  sub_100011480(v75 + v32[5], (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v32[6];
  uint64_t v41 = v74;
  uint64_t v42 = v75;
  int v43 = (_DWORD *)(v74 + v40);
  char v44 = *(unsigned char *)(v74 + v40 + 4);
  uint64_t v45 = (_DWORD *)(v75 + v40);
  int v46 = *(unsigned __int8 *)(v75 + v40 + 4);
  if (v44)
  {
    if (!v46) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v45) {
      LOBYTE(v46) = 1;
    }
    if (v46) {
      goto LABEL_8;
    }
  }
  uint64_t v47 = v69;
  sub_100011480(v74 + v32[7], v69, &qword_10043E4D8);
  uint64_t v48 = v73;
  sub_100011480(v42 + v32[7], v73, &qword_10043E4D8);
  uint64_t v49 = v72;
  uint64_t v50 = v72 + *(int *)(v68 + 48);
  sub_100011480(v47, v72, &qword_10043E4D8);
  sub_100011480(v48, v50, &qword_10043E4D8);
  uint64_t v51 = v71;
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v52(v49, 1, v71) == 1)
  {
    sub_10001ACB8(v48, &qword_10043E4D8);
    sub_10001ACB8(v47, &qword_10043E4D8);
    if (v52(v50, 1, v51) == 1)
    {
      sub_10001ACB8(v49, &qword_10043E4D8);
LABEL_24:
      uint64_t v57 = v65;
      uint64_t v56 = v66;
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
      int v59 = v63;
      v58(v63, v41, v66);
      uint64_t v60 = v64;
      v58(v64, v42, v56);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v61 = *(void (**)(char *, uint64_t))(v57 + 8);
      v61(v60, v56);
      v61(v59, v56);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v53 = v67;
  sub_100011480(v49, v67, &qword_10043E4D8);
  if (v52(v50, 1, v51) == 1)
  {
    sub_10001ACB8(v73, &qword_10043E4D8);
    sub_10001ACB8(v47, &qword_10043E4D8);
    sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
LABEL_22:
    uint64_t v35 = &qword_1004453F0;
    uint64_t v36 = v49;
    goto LABEL_7;
  }
  uint64_t v54 = v62;
  sub_10015B284(v50, v62, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
  char v55 = sub_10016B628(v53, v54);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
  sub_10001ACB8(v73, &qword_10043E4D8);
  sub_10001ACB8(v47, &qword_10043E4D8);
  sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
  sub_10001ACB8(v49, &qword_10043E4D8);
  if (v55) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_10016AD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v67 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v63 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity(0);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100002ED4(&qword_100445410);
  __chkstk_darwin(v70);
  uint64_t v74 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E4B8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v75 = (uint64_t)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v63 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v63 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v63 - v30;
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_MotionState(0);
  sub_100011480(v77 + *(int *)(v32 + 20), (uint64_t)v31, &qword_10043E458);
  uint64_t v76 = v32;
  sub_100011480(v78 + *(int *)(v32 + 20), (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v76;
  uint64_t v41 = v77;
  uint64_t v42 = *(int *)(v76 + 24);
  int v43 = (_DWORD *)(v77 + v42);
  char v44 = *(unsigned char *)(v77 + v42 + 4);
  uint64_t v45 = v78;
  int v46 = (_DWORD *)(v78 + v42);
  int v47 = *(unsigned __int8 *)(v78 + v42 + 4);
  if (v44)
  {
    if (!v47) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v46) {
      LOBYTE(v47) = 1;
    }
    if (v47) {
      goto LABEL_8;
    }
  }
  uint64_t v48 = v71;
  sub_100011480(v77 + *(int *)(v76 + 28), v71, &qword_10043E4B8);
  uint64_t v49 = v75;
  sub_100011480(v45 + *(int *)(v40 + 28), v75, &qword_10043E4B8);
  uint64_t v50 = v74;
  uint64_t v51 = v74 + *(int *)(v70 + 48);
  sub_100011480(v48, v74, &qword_10043E4B8);
  sub_100011480(v49, v51, &qword_10043E4B8);
  uint64_t v52 = v73;
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v53(v50, 1, v73) == 1)
  {
    sub_10001ACB8(v49, &qword_10043E4B8);
    sub_10001ACB8(v48, &qword_10043E4B8);
    if (v53(v51, 1, v52) == 1)
    {
      sub_10001ACB8(v50, &qword_10043E4B8);
LABEL_24:
      uint64_t v58 = v67;
      uint64_t v57 = v68;
      int v59 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v60 = v65;
      v59(v65, v41, v68);
      char v61 = v66;
      v59(v66, v45, v57);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v62 = *(void (**)(char *, uint64_t))(v58 + 8);
      v62(v61, v57);
      v62(v60, v57);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v54 = v69;
  sub_100011480(v50, v69, &qword_10043E4B8);
  if (v53(v51, 1, v52) == 1)
  {
    sub_10001ACB8(v75, &qword_10043E4B8);
    sub_10001ACB8(v48, &qword_10043E4B8);
    sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
LABEL_22:
    uint64_t v35 = &qword_100445410;
    uint64_t v36 = v50;
    goto LABEL_7;
  }
  uint64_t v55 = v64;
  sub_10015B284(v51, v64, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
  char v56 = sub_100174700(v54, v55, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, (uint64_t (*)(uint64_t, uint64_t))sub_10011C7E0);
  sub_10015B354(v55, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
  sub_10001ACB8(v75, &qword_10043E4B8);
  sub_10001ACB8(v48, &qword_10043E4B8);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
  sub_10001ACB8(v50, &qword_10043E4B8);
  if (v56) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_10016B628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v68 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 3)
  {
    if (v14 != 3) {
      goto LABEL_64;
    }
  }
  else if (v14 == 3 || v13 != v14)
  {
    goto LABEL_64;
  }
  uint64_t v16 = v11[6];
  uint64_t v17 = (float *)(a1 + v16);
  char v18 = *(unsigned char *)(a1 + v16 + 4);
  uint64_t v19 = (float *)(a2 + v16);
  int v20 = *(unsigned __int8 *)(a2 + v16 + 4);
  if (v18)
  {
    if (!v20) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v17 != *v19) {
      LOBYTE(v20) = 1;
    }
    if (v20) {
      goto LABEL_64;
    }
  }
  uint64_t v21 = v11[7];
  uint64_t v22 = (float *)(a1 + v21);
  char v23 = *(unsigned char *)(a1 + v21 + 4);
  uint64_t v24 = (float *)(a2 + v21);
  int v25 = *(unsigned __int8 *)(a2 + v21 + 4);
  if (v23)
  {
    if (!v25) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v22 != *v24) {
      LOBYTE(v25) = 1;
    }
    if (v25) {
      goto LABEL_64;
    }
  }
  uint64_t v26 = v11[8];
  uint64_t v27 = (float *)(a1 + v26);
  char v28 = *(unsigned char *)(a1 + v26 + 4);
  uint64_t v29 = (float *)(a2 + v26);
  int v30 = *(unsigned __int8 *)(a2 + v26 + 4);
  if (v28)
  {
    if (!v30) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v27 != *v29) {
      LOBYTE(v30) = 1;
    }
    if (v30) {
      goto LABEL_64;
    }
  }
  uint64_t v31 = v11[9];
  uint64_t v32 = (float *)(a1 + v31);
  char v33 = *(unsigned char *)(a1 + v31 + 4);
  uint64_t v34 = (float *)(a2 + v31);
  int v35 = *(unsigned __int8 *)(a2 + v31 + 4);
  if (v33)
  {
    if (!v35) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v32 != *v34) {
      LOBYTE(v35) = 1;
    }
    if (v35) {
      goto LABEL_64;
    }
  }
  uint64_t v36 = v11[10];
  char v37 = (float *)(a1 + v36);
  char v38 = *(unsigned char *)(a1 + v36 + 4);
  char v39 = (float *)(a2 + v36);
  int v40 = *(unsigned __int8 *)(a2 + v36 + 4);
  if (v38)
  {
    if (!v40) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_64;
    }
  }
  uint64_t v41 = v11[11];
  uint64_t v42 = (float *)(a1 + v41);
  char v43 = *(unsigned char *)(a1 + v41 + 4);
  char v44 = (float *)(a2 + v41);
  int v45 = *(unsigned __int8 *)(a2 + v41 + 4);
  if (v43)
  {
    if (!v45) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v42 != *v44) {
      LOBYTE(v45) = 1;
    }
    if (v45) {
      goto LABEL_64;
    }
  }
  uint64_t v46 = v11[12];
  int v47 = (float *)(a1 + v46);
  char v48 = *(unsigned char *)(a1 + v46 + 4);
  uint64_t v49 = (float *)(a2 + v46);
  int v50 = *(unsigned __int8 *)(a2 + v46 + 4);
  if (v48)
  {
    if (!v50) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v47 != *v49) {
      LOBYTE(v50) = 1;
    }
    if (v50) {
      goto LABEL_64;
    }
  }
  uint64_t v51 = v11[13];
  uint64_t v52 = (float *)(a1 + v51);
  char v53 = *(unsigned char *)(a1 + v51 + 4);
  uint64_t v54 = (float *)(a2 + v51);
  int v55 = *(unsigned __int8 *)(a2 + v51 + 4);
  if (v53)
  {
    if (!v55) {
      goto LABEL_64;
    }
  }
  else
  {
    if (*v52 != *v54) {
      LOBYTE(v55) = 1;
    }
    if (v55) {
      goto LABEL_64;
    }
  }
  uint64_t v56 = v11[14];
  int v57 = *(unsigned __int8 *)(a1 + v56);
  int v58 = *(unsigned __int8 *)(a2 + v56);
  if (v57 == 8)
  {
    if (v58 == 8) {
      goto LABEL_62;
    }
LABEL_64:
    char v59 = 0;
    return v59 & 1;
  }
  char v59 = 0;
  if (v58 != 8 && v57 == v58)
  {
LABEL_62:
    uint64_t v60 = v11[15];
    char v61 = (float *)(a1 + v60);
    char v62 = *(unsigned char *)(a1 + v60 + 4);
    uint64_t v63 = (float *)(a2 + v60);
    int v64 = *(unsigned __int8 *)(a2 + v60 + 4);
    if (v62)
    {
      if (!v64) {
        goto LABEL_64;
      }
    }
    else
    {
      if (*v61 != *v63) {
        LOBYTE(v64) = 1;
      }
      if (v64) {
        goto LABEL_64;
      }
    }
    uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v66(v10, a1, v4);
    v66(v8, a2, v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v67 = *(void (**)(char *, uint64_t))(v5 + 8);
    v67(v8, v4);
    v67(v10, v4);
  }
  return v59 & 1;
}

uint64_t sub_10016B9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v62 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v61 = (char *)&v60 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  int v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v60 - v20;
  __chkstk_darwin(v19);
  char v23 = (char *)&v60 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v65 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v66 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  int v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_39;
  }
  uint64_t v31 = (uint64_t)v67;
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v29, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_8:
  uint64_t v33 = v27[6];
  uint64_t v34 = v66;
  int v35 = *(unsigned __int8 *)(v65 + v33);
  int v36 = *(unsigned __int8 *)(v66 + v33);
  if (v35 == 4)
  {
    if (v36 != 4) {
      goto LABEL_39;
    }
  }
  else
  {
    char v37 = 0;
    if (v36 == 4 || v35 != v36) {
      return v37 & 1;
    }
  }
  uint64_t v38 = v27[7];
  int v39 = *(unsigned __int8 *)(v65 + v38);
  int v40 = *(unsigned __int8 *)(v66 + v38);
  if (v39 == 4)
  {
    if (v40 != 4) {
      goto LABEL_39;
    }
  }
  else
  {
    char v37 = 0;
    if (v40 == 4 || v39 != v40) {
      return v37 & 1;
    }
  }
  uint64_t v41 = v27[8];
  int v42 = *(unsigned __int8 *)(v65 + v41);
  int v43 = *(unsigned __int8 *)(v66 + v41);
  if (v42 == 4)
  {
    if (v43 != 4) {
      goto LABEL_39;
    }
    goto LABEL_23;
  }
  char v37 = 0;
  if (v43 != 4 && v42 == v43)
  {
LABEL_23:
    uint64_t v44 = v27[9];
    int v45 = *(unsigned __int8 *)(v65 + v44);
    int v46 = *(unsigned __int8 *)(v66 + v44);
    if (v45 == 2)
    {
      if (v46 != 2) {
        goto LABEL_39;
      }
    }
    else if (v46 == 2 || ((((v46 & 1) == 0) ^ v45) & 1) == 0)
    {
      goto LABEL_39;
    }
    uint64_t v47 = v27[10];
    int v48 = *(unsigned __int8 *)(v65 + v47);
    int v49 = *(unsigned __int8 *)(v66 + v47);
    if (v48 == 2)
    {
      if (v49 != 2) {
        goto LABEL_39;
      }
    }
    else if (v49 == 2 || ((((v49 & 1) == 0) ^ v48) & 1) == 0)
    {
      goto LABEL_39;
    }
    uint64_t v50 = v27[11];
    int v51 = *(unsigned __int8 *)(v65 + v50);
    int v52 = *(unsigned __int8 *)(v66 + v50);
    if (v51 != 2)
    {
      if (v52 == 2 || ((((v52 & 1) == 0) ^ v51) & 1) == 0) {
        goto LABEL_39;
      }
      goto LABEL_38;
    }
    if (v52 == 2)
    {
LABEL_38:
      uint64_t v54 = v63;
      uint64_t v53 = v64;
      int v55 = *(void (**)(char *))(v63 + 16);
      uint64_t v56 = v61;
      v55(v61);
      int v57 = v62;
      ((void (*)(char *, uint64_t, uint64_t))v55)(v62, v34, v53);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v58 = *(void (**)(char *, uint64_t))(v54 + 8);
      v58(v57, v53);
      v58(v56, v53);
      return v37 & 1;
    }
LABEL_39:
    char v37 = 0;
  }
  return v37 & 1;
}

uint64_t sub_10016C044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 4)
  {
    if (v14 != 4) {
      goto LABEL_16;
    }
  }
  else if (v14 == 4 || v13 != v14)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *(int *)(v11 + 24);
  int v17 = *(unsigned __int8 *)(a1 + v16);
  int v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 != 4)
  {
    if (v18 != 4 && v17 == v18) {
      goto LABEL_11;
    }
LABEL_16:
    char v20 = 0;
    return v20 & 1;
  }
  if (v18 != 4) {
    goto LABEL_16;
  }
LABEL_11:
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v19(v10, a1, v4);
  v19(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_10016C234(uint64_t a1, uint64_t a2)
{
  uint64_t v105 = a1;
  uint64_t v106 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v87 = *(void *)(v2 - 8);
  uint64_t v88 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v86 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v84 - v5;
  uint64_t v91 = type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v96 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v84 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100002ED4(&qword_100445340);
  __chkstk_darwin(v90);
  int v97 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100002ED4(&qword_10043E588);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v95 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  int v94 = (char *)&v84 - v12;
  __chkstk_darwin(v11);
  uint64_t v93 = (char *)&v84 - v13;
  uint64_t v14 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v99 = *(void *)(v14 - 8);
  uint64_t v100 = v14;
  __chkstk_darwin(v14);
  uint64_t v89 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100002ED4(&qword_100445348);
  __chkstk_darwin(v98);
  uint64_t v103 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100002ED4(&qword_10043E580);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v92 = (uint64_t)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v101 = (uint64_t)&v84 - v21;
  __chkstk_darwin(v20);
  uint64_t v102 = (uint64_t)&v84 - v22;
  uint64_t v23 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100002ED4(&qword_100445338);
  uint64_t v28 = v27 - 8;
  __chkstk_darwin(v27);
  int v30 = (char *)&v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100002ED4(&qword_10043E458);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v34 = (char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  char v37 = (char *)&v84 - v36;
  __chkstk_darwin(v35);
  int v39 = (char *)&v84 - v38;
  uint64_t v40 = type metadata accessor for CLP_LogEntry_PrivateData_WatchState(0);
  sub_100011480(v105 + *(int *)(v40 + 20), (uint64_t)v39, &qword_10043E458);
  uint64_t v104 = (int *)v40;
  sub_100011480(v106 + *(int *)(v40 + 20), (uint64_t)v37, &qword_10043E458);
  uint64_t v41 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_100011480((uint64_t)v39, (uint64_t)v30, &qword_10043E458);
  sub_100011480((uint64_t)v37, v41, &qword_10043E458);
  int v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v42((uint64_t)v30, 1, v23) == 1)
  {
    sub_10001ACB8((uint64_t)v37, &qword_10043E458);
    sub_10001ACB8((uint64_t)v39, &qword_10043E458);
    if (v42(v41, 1, v23) == 1)
    {
      sub_10001ACB8((uint64_t)v30, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    int v43 = &qword_100445338;
    uint64_t v44 = (uint64_t)v30;
LABEL_7:
    sub_10001ACB8(v44, v43);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v30, (uint64_t)v34, &qword_10043E458);
  if (v42(v41, 1, v23) == 1)
  {
    sub_10001ACB8((uint64_t)v37, &qword_10043E458);
    sub_10001ACB8((uint64_t)v39, &qword_10043E458);
    sub_10015B354((uint64_t)v34, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v41, (uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v47 = sub_1001748FC((uint64_t)v34, (uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v37, &qword_10043E458);
  sub_10001ACB8((uint64_t)v39, &qword_10043E458);
  sub_10015B354((uint64_t)v34, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v30, &qword_10043E458);
  if ((v47 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v48 = v105;
  uint64_t v49 = v104[6];
  uint64_t v50 = (_DWORD *)(v105 + v49);
  char v51 = *(unsigned char *)(v105 + v49 + 4);
  uint64_t v52 = v106;
  uint64_t v53 = (_DWORD *)(v106 + v49);
  int v54 = *(unsigned __int8 *)(v106 + v49 + 4);
  if (v51)
  {
    if (!v54) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v50 != *v53) {
      LOBYTE(v54) = 1;
    }
    if (v54) {
      goto LABEL_8;
    }
  }
  int v55 = v104;
  uint64_t v56 = v102;
  sub_100011480(v105 + v104[7], v102, &qword_10043E580);
  uint64_t v57 = v101;
  sub_100011480(v52 + v55[7], v101, &qword_10043E580);
  uint64_t v58 = v103;
  uint64_t v59 = v103 + *(int *)(v98 + 48);
  sub_100011480(v56, v103, &qword_10043E580);
  sub_100011480(v57, v59, &qword_10043E580);
  uint64_t v60 = v100;
  char v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48);
  if (v61(v58, 1, v100) == 1)
  {
    sub_10001ACB8(v57, &qword_10043E580);
    sub_10001ACB8(v56, &qword_10043E580);
    int v62 = v61(v59, 1, v60);
    uint64_t v64 = v96;
    uint64_t v63 = (uint64_t)v97;
    uint64_t v66 = (uint64_t)v94;
    uint64_t v65 = (uint64_t)v95;
    uint64_t v67 = (uint64_t)v93;
    if (v62 == 1)
    {
      sub_10001ACB8(v103, &qword_10043E580);
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  uint64_t v68 = v92;
  sub_100011480(v58, v92, &qword_10043E580);
  int v69 = v61(v59, 1, v60);
  uint64_t v64 = v96;
  uint64_t v63 = (uint64_t)v97;
  uint64_t v66 = (uint64_t)v94;
  uint64_t v70 = v95;
  if (v69 == 1)
  {
    sub_10001ACB8(v101, &qword_10043E580);
    sub_10001ACB8(v102, &qword_10043E580);
    sub_10015B354(v68, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
LABEL_22:
    int v43 = &qword_100445348;
    uint64_t v44 = v103;
    goto LABEL_7;
  }
  uint64_t v71 = v89;
  sub_10015B284(v59, v89, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
  LODWORD(v100) = sub_10016C044(v68, v71);
  sub_10015B354(v71, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
  sub_10001ACB8(v101, &qword_10043E580);
  sub_10001ACB8(v102, &qword_10043E580);
  sub_10015B354(v68, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
  sub_10001ACB8(v58, &qword_10043E580);
  uint64_t v65 = (uint64_t)v70;
  uint64_t v67 = (uint64_t)v93;
  if ((v100 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_24:
  uint64_t v72 = v104;
  sub_100011480(v48 + v104[8], v67, &qword_10043E588);
  sub_100011480(v52 + v72[8], v66, &qword_10043E588);
  uint64_t v73 = v63 + *(int *)(v90 + 48);
  sub_100011480(v67, v63, &qword_10043E588);
  sub_100011480(v66, v73, &qword_10043E588);
  uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  uint64_t v75 = v91;
  if (v74(v63, 1, v91) == 1)
  {
    sub_10001ACB8(v66, &qword_10043E588);
    sub_10001ACB8(v67, &qword_10043E588);
    if (v74(v73, 1, v75) == 1)
    {
      sub_10001ACB8(v63, &qword_10043E588);
LABEL_31:
      uint64_t v79 = v87;
      uint64_t v78 = v88;
      uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
      uint64_t v81 = v85;
      v80(v85, v48, v88);
      uint64_t v82 = v86;
      v80(v86, v52, v78);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v83 = *(void (**)(char *, uint64_t))(v79 + 8);
      v83(v82, v78);
      v83(v81, v78);
      return v45 & 1;
    }
    goto LABEL_29;
  }
  sub_100011480(v63, v65, &qword_10043E588);
  if (v74(v73, 1, v75) == 1)
  {
    sub_10001ACB8(v66, &qword_10043E588);
    sub_10001ACB8(v67, &qword_10043E588);
    sub_10015B354(v65, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
LABEL_29:
    int v43 = &qword_100445340;
    uint64_t v44 = v63;
    goto LABEL_7;
  }
  uint64_t v76 = v84;
  sub_10015B284(v73, v84, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
  char v77 = sub_10016B9F4(v65, v76);
  sub_10015B354(v76, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
  sub_10001ACB8(v66, &qword_10043E588);
  sub_10001ACB8(v67, &qword_10043E588);
  sub_10015B354(v65, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
  sub_10001ACB8(v63, &qword_10043E588);
  if (v77) {
    goto LABEL_31;
  }
LABEL_8:
  char v45 = 0;
  return v45 & 1;
}

uint64_t sub_10016CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v67 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v63 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry(0);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  __chkstk_darwin(v6);
  uint64_t v64 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100002ED4(&qword_1004453B0);
  __chkstk_darwin(v70);
  uint64_t v74 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E518);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v69 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v75 = (uint64_t)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v63 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v63 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v63 - v30;
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_StepCount(0);
  sub_100011480(v77 + *(int *)(v32 + 20), (uint64_t)v31, &qword_10043E458);
  uint64_t v76 = v32;
  sub_100011480(v78 + *(int *)(v32 + 20), (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_8;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v39 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v39 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v40 = v76;
  uint64_t v41 = v77;
  uint64_t v42 = *(int *)(v76 + 24);
  int v43 = (_DWORD *)(v77 + v42);
  char v44 = *(unsigned char *)(v77 + v42 + 4);
  uint64_t v45 = v78;
  int v46 = (_DWORD *)(v78 + v42);
  int v47 = *(unsigned __int8 *)(v78 + v42 + 4);
  if (v44)
  {
    if (!v47) {
      goto LABEL_8;
    }
  }
  else
  {
    if (*v43 != *v46) {
      LOBYTE(v47) = 1;
    }
    if (v47) {
      goto LABEL_8;
    }
  }
  uint64_t v48 = v71;
  sub_100011480(v77 + *(int *)(v76 + 28), v71, &qword_10043E518);
  uint64_t v49 = v75;
  sub_100011480(v45 + *(int *)(v40 + 28), v75, &qword_10043E518);
  uint64_t v50 = v74;
  uint64_t v51 = v74 + *(int *)(v70 + 48);
  sub_100011480(v48, v74, &qword_10043E518);
  sub_100011480(v49, v51, &qword_10043E518);
  uint64_t v52 = v73;
  uint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v53(v50, 1, v73) == 1)
  {
    sub_10001ACB8(v49, &qword_10043E518);
    sub_10001ACB8(v48, &qword_10043E518);
    if (v53(v51, 1, v52) == 1)
    {
      sub_10001ACB8(v50, &qword_10043E518);
LABEL_24:
      uint64_t v58 = v67;
      uint64_t v57 = v68;
      uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v60 = v65;
      v59(v65, v41, v68);
      char v61 = v66;
      v59(v66, v45, v57);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v62 = *(void (**)(char *, uint64_t))(v58 + 8);
      v62(v61, v57);
      v62(v60, v57);
      return v37 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v54 = v69;
  sub_100011480(v50, v69, &qword_10043E518);
  if (v53(v51, 1, v52) == 1)
  {
    sub_10001ACB8(v75, &qword_10043E518);
    sub_10001ACB8(v48, &qword_10043E518);
    sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
LABEL_22:
    uint64_t v35 = &qword_1004453B0;
    uint64_t v36 = v50;
    goto LABEL_7;
  }
  uint64_t v55 = v64;
  sub_10015B284(v51, v64, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
  char v56 = sub_100174700(v54, v55, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, (uint64_t (*)(uint64_t, uint64_t))sub_1001392EC);
  sub_10015B354(v55, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
  sub_10001ACB8(v75, &qword_10043E518);
  sub_10001ACB8(v48, &qword_10043E518);
  sub_10015B354(v54, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
  sub_10001ACB8(v50, &qword_10043E518);
  if (v56) {
    goto LABEL_24;
  }
LABEL_8:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_10016D6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v102 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v100 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v99 = (char *)&v98 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v103 = (uint64_t)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v98 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v98 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v104 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v105 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_83;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  uint64_t v31 = v103;
  sub_10015B284(v29, v103, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_83;
  }
LABEL_8:
  uint64_t v33 = v27[6];
  uint64_t v34 = (double *)(v104 + v33);
  char v35 = *(unsigned char *)(v104 + v33 + 8);
  uint64_t v36 = (double *)(v105 + v33);
  int v37 = *(unsigned __int8 *)(v105 + v33 + 8);
  if (v35)
  {
    if (!v37) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v34 != *v36) {
      LOBYTE(v37) = 1;
    }
    if (v37) {
      goto LABEL_83;
    }
  }
  uint64_t v38 = v27[7];
  char v39 = (double *)(v104 + v38);
  char v40 = *(unsigned char *)(v104 + v38 + 8);
  uint64_t v41 = (double *)(v105 + v38);
  int v42 = *(unsigned __int8 *)(v105 + v38 + 8);
  if (v40)
  {
    if (!v42) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v39 != *v41) {
      LOBYTE(v42) = 1;
    }
    if (v42) {
      goto LABEL_83;
    }
  }
  uint64_t v43 = v27[8];
  char v44 = (double *)(v104 + v43);
  char v45 = *(unsigned char *)(v104 + v43 + 8);
  int v46 = (double *)(v105 + v43);
  int v47 = *(unsigned __int8 *)(v105 + v43 + 8);
  if (v45)
  {
    if (!v47) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v44 != *v46) {
      LOBYTE(v47) = 1;
    }
    if (v47) {
      goto LABEL_83;
    }
  }
  uint64_t v48 = v27[9];
  uint64_t v49 = (double *)(v104 + v48);
  char v50 = *(unsigned char *)(v104 + v48 + 8);
  uint64_t v51 = (double *)(v105 + v48);
  int v52 = *(unsigned __int8 *)(v105 + v48 + 8);
  if (v50)
  {
    if (!v52) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v49 != *v51) {
      LOBYTE(v52) = 1;
    }
    if (v52) {
      goto LABEL_83;
    }
  }
  uint64_t v53 = v27[10];
  uint64_t v54 = (double *)(v104 + v53);
  char v55 = *(unsigned char *)(v104 + v53 + 8);
  char v56 = (double *)(v105 + v53);
  int v57 = *(unsigned __int8 *)(v105 + v53 + 8);
  if (v55)
  {
    if (!v57) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v54 != *v56) {
      LOBYTE(v57) = 1;
    }
    if (v57) {
      goto LABEL_83;
    }
  }
  uint64_t v58 = v27[11];
  uint64_t v59 = (double *)(v104 + v58);
  char v60 = *(unsigned char *)(v104 + v58 + 8);
  char v61 = (double *)(v105 + v58);
  int v62 = *(unsigned __int8 *)(v105 + v58 + 8);
  if (v60)
  {
    if (!v62) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v59 != *v61) {
      LOBYTE(v62) = 1;
    }
    if (v62) {
      goto LABEL_83;
    }
  }
  uint64_t v63 = v27[12];
  uint64_t v64 = (double *)(v104 + v63);
  char v65 = *(unsigned char *)(v104 + v63 + 8);
  uint64_t v66 = (double *)(v105 + v63);
  int v67 = *(unsigned __int8 *)(v105 + v63 + 8);
  if (v65)
  {
    if (!v67) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v64 != *v66) {
      LOBYTE(v67) = 1;
    }
    if (v67) {
      goto LABEL_83;
    }
  }
  uint64_t v68 = v27[13];
  uint64_t v69 = (double *)(v104 + v68);
  char v70 = *(unsigned char *)(v104 + v68 + 8);
  uint64_t v71 = (double *)(v105 + v68);
  int v72 = *(unsigned __int8 *)(v105 + v68 + 8);
  if (v70)
  {
    if (!v72) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v69 != *v71) {
      LOBYTE(v72) = 1;
    }
    if (v72) {
      goto LABEL_83;
    }
  }
  uint64_t v73 = v27[14];
  uint64_t v74 = (double *)(v104 + v73);
  char v75 = *(unsigned char *)(v104 + v73 + 8);
  uint64_t v76 = (double *)(v105 + v73);
  int v77 = *(unsigned __int8 *)(v105 + v73 + 8);
  if (v75)
  {
    if (!v77) {
      goto LABEL_83;
    }
  }
  else
  {
    if (*v74 != *v76) {
      LOBYTE(v77) = 1;
    }
    if (v77) {
      goto LABEL_83;
    }
  }
  uint64_t v78 = v27[15];
  int v79 = *(unsigned __int8 *)(v104 + v78);
  int v80 = *(unsigned __int8 *)(v105 + v78);
  if (v79 == 2)
  {
    if (v80 != 2) {
      goto LABEL_83;
    }
  }
  else if (v80 == 2 || ((((v80 & 1) == 0) ^ v79) & 1) == 0)
  {
    goto LABEL_83;
  }
  uint64_t v81 = v27[16];
  int v82 = *(unsigned __int8 *)(v104 + v81);
  int v83 = *(unsigned __int8 *)(v105 + v81);
  if (v82 == 2)
  {
    if (v83 != 2) {
      goto LABEL_83;
    }
  }
  else if (v83 == 2 || ((((v83 & 1) == 0) ^ v82) & 1) == 0)
  {
    goto LABEL_83;
  }
  uint64_t v84 = v27[17];
  int v85 = *(unsigned __int8 *)(v104 + v84);
  int v86 = *(unsigned __int8 *)(v105 + v84);
  if (v85 == 2)
  {
    if (v86 != 2) {
      goto LABEL_83;
    }
  }
  else if (v86 == 2 || ((((v86 & 1) == 0) ^ v85) & 1) == 0)
  {
    goto LABEL_83;
  }
  uint64_t v87 = v27[18];
  int v88 = *(unsigned __int8 *)(v104 + v87);
  int v89 = *(unsigned __int8 *)(v105 + v87);
  if (v88 != 2)
  {
    if (v89 != 2 && ((((v89 & 1) == 0) ^ v88) & 1) != 0) {
      goto LABEL_82;
    }
LABEL_83:
    char v95 = 0;
    return v95 & 1;
  }
  if (v89 != 2) {
    goto LABEL_83;
  }
LABEL_82:
  uint64_t v91 = v101;
  uint64_t v90 = v102;
  uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
  uint64_t v93 = v99;
  v92(v99, v104, v102);
  int v94 = v100;
  v92(v100, v105, v90);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v95 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v96 = *(void (**)(char *, uint64_t))(v91 + 8);
  v96(v94, v90);
  v96(v93, v90);
  return v95 & 1;
}

uint64_t sub_10016DEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (float *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 4);
  uint64_t v15 = (float *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if (v14)
  {
    if (!v16) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_15;
    }
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (float *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 4);
  uint64_t v20 = (float *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v22 = v11[7];
    uint64_t v23 = (float *)(a1 + v22);
    char v24 = *(unsigned char *)(a1 + v22 + 4);
    uint64_t v25 = (float *)(a2 + v22);
    int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
    if (v24)
    {
      if (!v26) {
        goto LABEL_15;
      }
    }
    else
    {
      if (*v23 != *v25) {
        LOBYTE(v26) = 1;
      }
      if (v26) {
        goto LABEL_15;
      }
    }
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v8, v4);
    v30(v10, v4);
    return v27 & 1;
  }
  if (v21) {
    goto LABEL_13;
  }
LABEL_15:
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_10016E0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = a2;
  uint64_t v3 = type metadata accessor for UnknownStorage();
  uint64_t v78 = *(void *)(v3 - 8);
  uint64_t v79 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  int v77 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v76 = (char *)&v74 - v6;
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t v84 = *(void *)(v7 - 8);
  uint64_t v85 = v7;
  __chkstk_darwin(v7);
  uint64_t v80 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100002ED4(&qword_1004453A8);
  __chkstk_darwin(v82);
  uint64_t v86 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100002ED4(&qword_10043E530);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v81 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v88 = (uint64_t)&v74 - v14;
  __chkstk_darwin(v13);
  uint64_t v83 = (uint64_t)&v74 - v15;
  uint64_t v16 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100002ED4(&qword_100445338);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100002ED4(&qword_10043E458);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  char v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v74 - v29;
  __chkstk_darwin(v28);
  char v32 = (char *)&v74 - v31;
  uint64_t v33 = type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample(0);
  uint64_t v34 = *(int *)(v33 + 20);
  uint64_t v87 = a1;
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (int *)v33;
  sub_100011480(v35, (uint64_t)v32, &qword_10043E458);
  sub_100011480(v89 + v36[5], (uint64_t)v30, &qword_10043E458);
  uint64_t v37 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_100011480((uint64_t)v32, (uint64_t)v23, &qword_10043E458);
  sub_100011480((uint64_t)v30, v37, &qword_10043E458);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v38((uint64_t)v23, 1, v16) == 1)
  {
    sub_10001ACB8((uint64_t)v30, &qword_10043E458);
    sub_10001ACB8((uint64_t)v32, &qword_10043E458);
    if (v38(v37, 1, v16) == 1)
    {
      sub_10001ACB8((uint64_t)v23, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    char v39 = &qword_100445338;
    uint64_t v40 = (uint64_t)v23;
LABEL_14:
    sub_10001ACB8(v40, v39);
    goto LABEL_15;
  }
  sub_100011480((uint64_t)v23, (uint64_t)v27, &qword_10043E458);
  if (v38(v37, 1, v16) == 1)
  {
    sub_10001ACB8((uint64_t)v30, &qword_10043E458);
    sub_10001ACB8((uint64_t)v32, &qword_10043E458);
    sub_10015B354((uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v37, (uint64_t)v19, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v41 = sub_1001748FC((uint64_t)v27, (uint64_t)v19, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v19, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v30, &qword_10043E458);
  sub_10001ACB8((uint64_t)v32, &qword_10043E458);
  sub_10015B354((uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  if ((v41 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v42 = v87;
  uint64_t v43 = v83;
  sub_100011480(v87 + v36[6], v83, &qword_10043E530);
  char v75 = v36;
  uint64_t v45 = v88;
  uint64_t v44 = v89;
  sub_100011480(v89 + v36[6], v88, &qword_10043E530);
  uint64_t v46 = v86;
  uint64_t v47 = v86 + *(int *)(v82 + 48);
  sub_100011480(v43, v86, &qword_10043E530);
  sub_100011480(v45, v47, &qword_10043E530);
  uint64_t v48 = v85;
  uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
  if (v49(v46, 1, v85) != 1)
  {
    uint64_t v50 = v81;
    sub_100011480(v46, v81, &qword_10043E530);
    if (v49(v47, 1, v48) != 1)
    {
      uint64_t v53 = v80;
      sub_10015B284(v47, v80, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
      char v54 = sub_100174700(v50, v53, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass, (uint64_t (*)(uint64_t, uint64_t))sub_10013DF64);
      sub_10015B354(v53, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
      sub_10001ACB8(v88, &qword_10043E530);
      sub_10001ACB8(v43, &qword_10043E530);
      sub_10015B354(v50, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
      sub_10001ACB8(v46, &qword_10043E530);
      if ((v54 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_18;
    }
    sub_10001ACB8(v88, &qword_10043E530);
    sub_10001ACB8(v43, &qword_10043E530);
    sub_10015B354(v50, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
    goto LABEL_13;
  }
  sub_10001ACB8(v45, &qword_10043E530);
  sub_10001ACB8(v43, &qword_10043E530);
  if (v49(v47, 1, v48) != 1)
  {
LABEL_13:
    char v39 = &qword_1004453A8;
    uint64_t v40 = v46;
    goto LABEL_14;
  }
  sub_10001ACB8(v46, &qword_10043E530);
LABEL_18:
  uint64_t v55 = v75[7];
  char v56 = (float *)(v42 + v55);
  char v57 = *(unsigned char *)(v42 + v55 + 4);
  uint64_t v58 = (float *)(v44 + v55);
  int v59 = *(unsigned __int8 *)(v44 + v55 + 4);
  if (v57)
  {
    if (!v59) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v56 != *v58) {
      LOBYTE(v59) = 1;
    }
    if (v59) {
      goto LABEL_15;
    }
  }
  uint64_t v60 = v75[8];
  char v61 = (float *)(v42 + v60);
  char v62 = *(unsigned char *)(v42 + v60 + 4);
  uint64_t v63 = (float *)(v44 + v60);
  int v64 = *(unsigned __int8 *)(v44 + v60 + 4);
  if (v62)
  {
    if (!v64) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v61 != *v63) {
      LOBYTE(v64) = 1;
    }
    if (v64) {
      goto LABEL_15;
    }
  }
  uint64_t v65 = v75[9];
  int v66 = *(unsigned __int8 *)(v42 + v65);
  int v67 = *(unsigned __int8 *)(v44 + v65);
  if (v66 == 2)
  {
    if (v67 == 2)
    {
LABEL_35:
      uint64_t v69 = v78;
      uint64_t v68 = v79;
      char v70 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      uint64_t v71 = v76;
      v70(v76, v42, v79);
      int v72 = v77;
      v70(v77, v44, v68);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v69 + 8);
      v73(v72, v68);
      v73(v71, v68);
      return v51 & 1;
    }
  }
  else if (v67 != 2 && ((((v67 & 1) == 0) ^ v66) & 1) != 0)
  {
    goto LABEL_35;
  }
LABEL_15:
  char v51 = 0;
  return v51 & 1;
}

uint64_t sub_10016EA14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_Compass(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  char v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  if ((sub_1001592D0(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample, type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample, (uint64_t (*)(char *, char *))sub_10016E0EC) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  char v39 = (char *)v34 + *(int *)(v27 + 20);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_10016EF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_Battery(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_32;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_32;
    }
  }
  uint64_t v17 = v11[6];
  int v18 = *(unsigned __int8 *)(a1 + v17);
  int v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2) {
      goto LABEL_32;
    }
  }
  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_32;
  }
  uint64_t v20 = v11[7];
  int v21 = *(unsigned __int8 *)(a1 + v20);
  int v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 2)
  {
    if (v22 != 2) {
      goto LABEL_32;
    }
  }
  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v21) & 1) == 0)
  {
    goto LABEL_32;
  }
  uint64_t v23 = v11[8];
  int v24 = *(unsigned __int8 *)(a1 + v23);
  int v25 = *(unsigned __int8 *)(a2 + v23);
  if (v24 == 5)
  {
    if (v25 != 5) {
      goto LABEL_32;
    }
  }
  else if (v25 == 5 || v24 != v25)
  {
    goto LABEL_32;
  }
  uint64_t v27 = v11[9];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 != 2)
  {
    if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0) {
      goto LABEL_32;
    }
LABEL_30:
    uint64_t v30 = v11[10];
    uint64_t v31 = (_DWORD *)(a1 + v30);
    char v32 = *(unsigned char *)(a1 + v30 + 4);
    uint64_t v33 = (_DWORD *)(a2 + v30);
    int v34 = *(unsigned __int8 *)(a2 + v30 + 4);
    if (v32)
    {
      if (!v34) {
        goto LABEL_32;
      }
    }
    else
    {
      if (*v31 != *v33) {
        LOBYTE(v34) = 1;
      }
      if (v34) {
        goto LABEL_32;
      }
    }
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v37(v10, a1, v4);
    v37(v8, a2, v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v5 + 8);
    v38(v8, v4);
    v38(v10, v4);
    return v35 & 1;
  }
  if (v29 == 2) {
    goto LABEL_30;
  }
LABEL_32:
  char v35 = 0;
  return v35 & 1;
}

uint64_t sub_10016F248(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v44 = (char *)&v41 - v9;
  uint64_t v10 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v41 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100002ED4(&qword_100445338);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  int v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100002ED4(&qword_10043E458);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v48 = (uint64_t)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  int v22 = (char *)&v41 - v21;
  __chkstk_darwin(v20);
  int v24 = (char *)&v41 - v23;
  uint64_t v25 = a3(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v42 = a1;
  sub_100011480(a1 + v26, (uint64_t)v24, &qword_10043E458);
  uint64_t v27 = *(int *)(v25 + 20);
  uint64_t v43 = a2;
  sub_100011480(a2 + v27, (uint64_t)v22, &qword_10043E458);
  uint64_t v28 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_100011480((uint64_t)v24, (uint64_t)v16, &qword_10043E458);
  sub_100011480((uint64_t)v22, v28, &qword_10043E458);
  int v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v29((uint64_t)v16, 1, v10) != 1)
  {
    uint64_t v30 = v48;
    sub_100011480((uint64_t)v16, v48, &qword_10043E458);
    if (v29(v28, 1, v10) != 1)
    {
      uint64_t v31 = v41;
      sub_10015B284(v28, v41, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v32 = sub_1001748FC(v30, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      sub_10001ACB8((uint64_t)v24, &qword_10043E458);
      sub_10015B354(v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v16, &qword_10043E458);
      if (v32) {
        goto LABEL_8;
      }
LABEL_9:
      char v38 = 0;
      return v38 & 1;
    }
    sub_10001ACB8((uint64_t)v22, &qword_10043E458);
    sub_10001ACB8((uint64_t)v24, &qword_10043E458);
    sub_10015B354(v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v16, &qword_100445338);
    goto LABEL_9;
  }
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  sub_10001ACB8((uint64_t)v24, &qword_10043E458);
  if (v29(v28, 1, v10) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v16, &qword_10043E458);
LABEL_8:
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  char v35 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  uint64_t v36 = v44;
  v35(v44, v42, v47);
  uint64_t v37 = v45;
  v35(v45, v43, v33);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t sub_10016F75C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v65 = a3;
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int v59 = (char *)&v58 - v8;
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v64 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100002ED4(&qword_100445338);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100002ED4(&qword_10043E458);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  int v22 = (char *)&v58 - v21;
  __chkstk_darwin(v20);
  int v24 = (char *)&v58 - v23;
  uint64_t v25 = v65(0);
  uint64_t v26 = *(int *)(v25 + 20);
  uint64_t v63 = a1;
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)v25;
  sub_100011480(v27, (uint64_t)v24, &qword_10043E458);
  uint64_t v29 = v28[5];
  uint64_t v65 = a2;
  sub_100011480((uint64_t)a2 + v29, (uint64_t)v22, &qword_10043E458);
  uint64_t v30 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_100011480((uint64_t)v24, (uint64_t)v15, &qword_10043E458);
  sub_100011480((uint64_t)v22, v30, &qword_10043E458);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v31((uint64_t)v15, 1, v9) != 1)
  {
    uint64_t v32 = (uint64_t)v64;
    sub_100011480((uint64_t)v15, (uint64_t)v19, &qword_10043E458);
    if (v31(v30, 1, v9) != 1)
    {
      sub_10015B284(v30, v32, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v35 = sub_1001748FC((uint64_t)v19, v32, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354(v32, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      sub_10001ACB8((uint64_t)v24, &qword_10043E458);
      sub_10015B354((uint64_t)v19, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v15, &qword_10043E458);
      if ((v35 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }
    sub_10001ACB8((uint64_t)v22, &qword_10043E458);
    sub_10001ACB8((uint64_t)v24, &qword_10043E458);
    sub_10015B354((uint64_t)v19, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v15, &qword_100445338);
    goto LABEL_7;
  }
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  sub_10001ACB8((uint64_t)v24, &qword_10043E458);
  if (v31(v30, 1, v9) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v15, &qword_10043E458);
LABEL_10:
  uint64_t v36 = v28[6];
  uint64_t v37 = (float *)(v63 + v36);
  char v38 = *(unsigned char *)(v63 + v36 + 4);
  uint64_t v39 = v65;
  uint64_t v40 = (float *)((char *)v65 + v36);
  int v41 = *((unsigned __int8 *)v65 + v36 + 4);
  if (v38)
  {
    if (!v41) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v37 != *v40) {
      LOBYTE(v41) = 1;
    }
    if (v41) {
      goto LABEL_7;
    }
  }
  uint64_t v42 = v28[7];
  uint64_t v43 = (float *)(v63 + v42);
  char v44 = *(unsigned char *)(v63 + v42 + 4);
  uint64_t v45 = (float *)((char *)v65 + v42);
  int v46 = *((unsigned __int8 *)v65 + v42 + 4);
  if (v44)
  {
    if (!v46) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v43 != *v45) {
      LOBYTE(v46) = 1;
    }
    if (v46) {
      goto LABEL_7;
    }
  }
  uint64_t v47 = v28[8];
  uint64_t v48 = (float *)(v63 + v47);
  char v49 = *(unsigned char *)(v63 + v47 + 4);
  uint64_t v50 = (float *)((char *)v65 + v47);
  int v51 = *((unsigned __int8 *)v65 + v47 + 4);
  if (v49)
  {
    if (v51)
    {
LABEL_28:
      uint64_t v53 = v61;
      uint64_t v52 = v62;
      char v54 = *(void (**)(char *))(v61 + 16);
      uint64_t v55 = v59;
      v54(v59);
      char v56 = v60;
      ((void (*)(char *, uint64_t (*)(void), uint64_t))v54)(v60, v39, v52);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v57 = *(void (**)(char *, uint64_t))(v53 + 8);
      v57(v56, v52);
      v57(v55, v52);
      return v33 & 1;
    }
  }
  else
  {
    if (*v48 != *v50) {
      LOBYTE(v51) = 1;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_28;
    }
  }
LABEL_7:
  char v33 = 0;
  return v33 & 1;
}

uint64_t sub_10016FD10(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_Accel(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  int v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  char v33 = v50;
  uint64_t v34 = v51;
  if ((sub_100159148(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_AccelSample, type metadata accessor for CLP_LogEntry_PrivateData_AccelSample, type metadata accessor for CLP_LogEntry_PrivateData_AccelSample) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  char v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_100170270(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  int v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_Gyro(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  int v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  char v33 = v50;
  uint64_t v34 = v51;
  if ((sub_100159148(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_GyroSample, type metadata accessor for CLP_LogEntry_PrivateData_GyroSample, type metadata accessor for CLP_LogEntry_PrivateData_GyroSample) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  char v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_1001707D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v52 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v57 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v52 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_BaroSample(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v58 = a1;
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[5];
  uint64_t v59 = a2;
  sub_100011480(a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) != 1)
  {
    sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
    if (v30(v29, 1, v8) != 1)
    {
      uint64_t v33 = v57;
      sub_10015B284(v29, v57, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      char v34 = sub_1001748FC((uint64_t)v18, v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10015B354(v33, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v21, &qword_10043E458);
      sub_10001ACB8((uint64_t)v23, &qword_10043E458);
      sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      if ((v34 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_7;
  }
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  if (v30(v29, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
LABEL_10:
  uint64_t v35 = v27[6];
  uint64_t v36 = v59;
  uint64_t v37 = (float *)(v58 + v35);
  char v38 = *(unsigned char *)(v58 + v35 + 4);
  uint64_t v39 = (float *)(v59 + v35);
  int v40 = *(unsigned __int8 *)(v59 + v35 + 4);
  if (v38)
  {
    if (!v40) {
      goto LABEL_7;
    }
  }
  else
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_7;
    }
  }
  uint64_t v41 = v27[7];
  uint64_t v42 = (float *)(v58 + v41);
  char v43 = *(unsigned char *)(v58 + v41 + 4);
  uint64_t v44 = (float *)(v59 + v41);
  int v45 = *(unsigned __int8 *)(v59 + v41 + 4);
  if (v43)
  {
    if (v45)
    {
LABEL_22:
      uint64_t v47 = v55;
      uint64_t v46 = v56;
      uint64_t v48 = *(void (**)(char *))(v55 + 16);
      uint64_t v49 = v53;
      v48(v53);
      uint64_t v50 = v54;
      ((void (*)(char *, uint64_t, uint64_t))v48)(v54, v36, v46);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v51 = *(void (**)(char *, uint64_t))(v47 + 8);
      v51(v50, v46);
      v51(v49, v46);
      return v31 & 1;
    }
  }
  else
  {
    if (*v42 != *v44) {
      LOBYTE(v45) = 1;
    }
    if ((v45 & 1) == 0) {
      goto LABEL_22;
    }
  }
LABEL_7:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_100170D3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v44 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_Baro(0);
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = *(int *)(v27 + 24);
  int v51 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_10015B284(v29, v49, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v50;
  char v34 = v51;
  if ((sub_1001592D0(*v50, *v51, type metadata accessor for CLP_LogEntry_PrivateData_BaroSample, type metadata accessor for CLP_LogEntry_PrivateData_BaroSample, (uint64_t (*)(char *, char *))sub_1001707D0) & 1) == 0)goto LABEL_10; {
  uint64_t v36 = v47;
  }
  uint64_t v35 = v48;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  char v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 20), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 20);
  int v40 = v46;
  v37(v46, v39, v35);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t sub_10017129C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[6];
  uint64_t v14 = (double *)((char *)a1 + v13);
  char v15 = *((unsigned char *)a1 + v13 + 8);
  uint64_t v16 = (double *)((char *)a2 + v13);
  int v17 = *((unsigned __int8 *)a2 + v13 + 8);
  if (v15)
  {
    if (!v17) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_27;
    }
  }
  uint64_t v18 = v11[7];
  uint64_t v19 = (double *)((char *)a1 + v18);
  char v20 = *((unsigned char *)a1 + v18 + 8);
  uint64_t v21 = (double *)((char *)a2 + v18);
  int v22 = *((unsigned __int8 *)a2 + v18 + 8);
  if (v20)
  {
    if (!v22) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if (v22) {
      goto LABEL_27;
    }
  }
  uint64_t v23 = v11[8];
  uint64_t v24 = (double *)((char *)a1 + v23);
  char v25 = *((unsigned char *)a1 + v23 + 8);
  uint64_t v26 = (double *)((char *)a2 + v23);
  int v27 = *((unsigned __int8 *)a2 + v23 + 8);
  if (v25)
  {
    if (!v27) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v24 != *v26) {
      LOBYTE(v27) = 1;
    }
    if (v27) {
      goto LABEL_27;
    }
  }
  uint64_t v28 = v11[9];
  uint64_t v29 = (double *)((char *)a1 + v28);
  char v30 = *((unsigned char *)a1 + v28 + 8);
  uint64_t v31 = (double *)((char *)a2 + v28);
  int v32 = *((unsigned __int8 *)a2 + v28 + 8);
  if (v30)
  {
    if (v32) {
      goto LABEL_25;
    }
LABEL_27:
    char v34 = 0;
    return v34 & 1;
  }
  if (*v29 != *v31) {
    LOBYTE(v32) = 1;
  }
  if (v32) {
    goto LABEL_27;
  }
LABEL_25:
  if ((sub_100158720(*a1, *a2) & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v33(v10, (char *)a1 + v12[5], v4);
  v33(v8, (char *)a2 + v12[5], v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
  v35(v8, v4);
  v35(v10, v4);
  return v34 & 1;
}

uint64_t sub_100171524(uint64_t *a1, uint64_t *a2)
{
  uint64_t v96 = a1;
  int v97 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v85 = *(void *)(v2 - 8);
  uint64_t v86 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v84 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v83 = (char *)&v82 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100002ED4(&qword_100445350);
  __chkstk_darwin(v88);
  uint64_t v89 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E578);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v92 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v90 = (char *)&v82 - v13;
  __chkstk_darwin(v12);
  uint64_t v91 = (char *)&v82 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_100002ED4(&qword_100445358);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  int v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E570);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v82 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v82 - v30;
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna(0);
  sub_100011480((uint64_t)v96 + *(int *)(v32 + 24), (uint64_t)v31, &qword_10043E570);
  char v95 = (int *)v32;
  sub_100011480((uint64_t)v97 + *(int *)(v32 + 24), (uint64_t)v29, &qword_10043E570);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E570);
  sub_100011480((uint64_t)v29, v33, &qword_10043E570);
  char v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E570);
    sub_10001ACB8((uint64_t)v31, &qword_10043E570);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E570);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v35 = &qword_100445358;
    uint64_t v36 = (uint64_t)v22;
    goto LABEL_7;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E570);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E570);
    sub_10001ACB8((uint64_t)v31, &qword_10043E570);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
  char v37 = sub_10017129C(v26, v18);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
  sub_10001ACB8((uint64_t)v29, &qword_10043E570);
  sub_10001ACB8((uint64_t)v31, &qword_10043E570);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
  sub_10001ACB8((uint64_t)v22, &qword_10043E570);
  if ((v37 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_9:
  uint64_t v39 = v96;
  char v38 = v97;
  if ((sub_1001589A4(*v96, *v97) & 1) == 0) {
    goto LABEL_27;
  }
  int v40 = v95;
  uint64_t v41 = v95[7];
  uint64_t v42 = (uint64_t *)((char *)v39 + v41);
  char v43 = *((unsigned char *)v39 + v41 + 8);
  uint64_t v44 = (uint64_t *)((char *)v38 + v41);
  int v45 = *((unsigned __int8 *)v38 + v41 + 8);
  if (v43)
  {
    uint64_t v47 = v93;
    uint64_t v46 = v94;
    uint64_t v49 = (uint64_t)v91;
    uint64_t v48 = (uint64_t)v92;
    uint64_t v50 = (uint64_t)v90;
    if (!v45) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v42 != *v44) {
      LOBYTE(v45) = 1;
    }
    uint64_t v47 = v93;
    uint64_t v46 = v94;
    uint64_t v49 = (uint64_t)v91;
    uint64_t v48 = (uint64_t)v92;
    uint64_t v50 = (uint64_t)v90;
    if (v45) {
      goto LABEL_27;
    }
  }
  uint64_t v51 = v95[8];
  int v52 = *((unsigned __int8 *)v39 + v51);
  int v53 = *((unsigned __int8 *)v38 + v51);
  if (v52 == 4)
  {
    if (v53 != 4) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  char v54 = 0;
  if (v53 != 4 && v52 == v53)
  {
LABEL_21:
    uint64_t v55 = v95[9];
    uint64_t v56 = (_DWORD *)((char *)v39 + v55);
    char v57 = *((unsigned char *)v39 + v55 + 4);
    uint64_t v58 = (_DWORD *)((char *)v38 + v55);
    int v59 = *((unsigned __int8 *)v38 + v55 + 4);
    if (v57)
    {
      if (!v59) {
        goto LABEL_27;
      }
    }
    else
    {
      if (*v56 != *v58) {
        LOBYTE(v59) = 1;
      }
      if (v59) {
        goto LABEL_27;
      }
    }
    sub_100011480((uint64_t)v39 + v95[10], v49, &qword_10043E578);
    sub_100011480((uint64_t)v38 + v40[10], v50, &qword_10043E578);
    uint64_t v61 = v89;
    uint64_t v62 = v89 + *(int *)(v88 + 48);
    sub_100011480(v49, v89, &qword_10043E578);
    uint64_t v63 = v61;
    sub_100011480(v50, v62, &qword_10043E578);
    int v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
    if (v64(v63, 1, v46) == 1)
    {
      sub_10001ACB8(v50, &qword_10043E578);
      uint64_t v63 = v89;
      sub_10001ACB8(v49, &qword_10043E578);
      if (v64(v62, 1, v46) == 1)
      {
        sub_10001ACB8(v63, &qword_10043E578);
        goto LABEL_36;
      }
    }
    else
    {
      sub_100011480(v63, v48, &qword_10043E578);
      if (v64(v62, 1, v46) != 1)
      {
        uint64_t v65 = v87;
        sub_10015B284(v62, v87, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
        uint64_t v66 = v63;
        char v67 = sub_100160474(v48, v65);
        sub_10015B354(v65, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
        sub_10001ACB8(v50, &qword_10043E578);
        sub_10001ACB8(v49, &qword_10043E578);
        sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
        sub_10001ACB8(v66, &qword_10043E578);
        if (v67)
        {
LABEL_36:
          uint64_t v68 = v95[11];
          uint64_t v69 = (uint64_t *)((char *)v39 + v68);
          char v70 = *((unsigned char *)v39 + v68 + 8);
          uint64_t v71 = (uint64_t *)((char *)v38 + v68);
          int v72 = *((unsigned __int8 *)v38 + v68 + 8);
          if (v70)
          {
            if (v72)
            {
LABEL_42:
              uint64_t v73 = (char *)v39 + v95[5];
              uint64_t v75 = v85;
              uint64_t v74 = v86;
              uint64_t v76 = v95;
              int v77 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
              uint64_t v78 = v83;
              v77(v83, v73, v86);
              uint64_t v79 = (char *)v38 + v76[5];
              uint64_t v80 = v84;
              v77(v84, v79, v74);
              sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
              char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
              uint64_t v81 = *(void (**)(char *, uint64_t))(v75 + 8);
              v81(v80, v74);
              v81(v78, v74);
              return v54 & 1;
            }
          }
          else
          {
            if (*v69 != *v71) {
              LOBYTE(v72) = 1;
            }
            if ((v72 & 1) == 0) {
              goto LABEL_42;
            }
          }
        }
LABEL_27:
        char v54 = 0;
        return v54 & 1;
      }
      sub_10001ACB8(v50, &qword_10043E578);
      sub_10001ACB8(v49, &qword_10043E578);
      sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
    }
    uint64_t v35 = &qword_100445350;
    uint64_t v36 = v63;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_27;
  }
  return v54 & 1;
}

uint64_t sub_100171E6C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)&v47 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v47 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData(0);
  uint64_t v25 = *(int *)(v24 + 24);
  int v52 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_100011480(v26, (uint64_t)v23, &qword_10043E458);
  uint64_t v28 = v27[6];
  int v53 = a2;
  sub_100011480((uint64_t)a2 + v28, (uint64_t)v21, &qword_10043E458);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v23, (uint64_t)v14, &qword_10043E458);
  sub_100011480((uint64_t)v21, v29, &qword_10043E458);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    if (v30(v29, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v14, &qword_10043E458);
      goto LABEL_8;
    }
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445338);
    goto LABEL_15;
  }
  uint64_t v31 = (uint64_t)v54;
  sub_100011480((uint64_t)v14, (uint64_t)v18, &qword_10043E458);
  if (v30(v29, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v21, &qword_10043E458);
    sub_10001ACB8((uint64_t)v23, &qword_10043E458);
    sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v29, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v32 = sub_1001748FC((uint64_t)v18, v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354(v31, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v21, &qword_10043E458);
  sub_10001ACB8((uint64_t)v23, &qword_10043E458);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v14, &qword_10043E458);
  if ((v32 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v33 = v52;
  char v34 = v53;
  if ((sub_1001592D0(*v52, *v53, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna, (uint64_t (*)(char *, char *))sub_100171524) & 1) == 0)goto LABEL_15; {
  uint64_t v35 = v27[7];
  }
  int v36 = *((unsigned __int8 *)v33 + v35);
  int v37 = *((unsigned __int8 *)v34 + v35);
  if (v36 != 2)
  {
    if (v37 != 2 && ((((v37 & 1) == 0) ^ v36) & 1) != 0) {
      goto LABEL_14;
    }
LABEL_15:
    char v44 = 0;
    return v44 & 1;
  }
  if (v37 != 2) {
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v39 = v50;
  uint64_t v38 = v51;
  int v40 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v41 = v48;
  v40(v48, (char *)v33 + v27[5], v51);
  uint64_t v42 = (char *)v34 + v27[5];
  char v43 = v49;
  v40(v49, v42, v38);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v45 = *(void (**)(char *, uint64_t))(v39 + 8);
  v45(v43, v38);
  v45(v41, v38);
  return v44 & 1;
}

uint64_t sub_100172408(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = (int *)a3(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (double *)(a1 + v14);
  char v16 = *(unsigned char *)(a1 + v14 + 8);
  uint64_t v17 = (double *)(a2 + v14);
  int v18 = *(unsigned __int8 *)(a2 + v14 + 8);
  if (v16)
  {
    if (!v18) {
      goto LABEL_21;
    }
  }
  else
  {
    if (*v15 != *v17) {
      LOBYTE(v18) = 1;
    }
    if (v18) {
      goto LABEL_21;
    }
  }
  uint64_t v19 = v13[6];
  uint64_t v20 = (double *)(a1 + v19);
  char v21 = *(unsigned char *)(a1 + v19 + 8);
  uint64_t v22 = (double *)(a2 + v19);
  int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
  if (v21)
  {
    if (!v23) {
      goto LABEL_21;
    }
  }
  else
  {
    if (*v20 != *v22) {
      LOBYTE(v23) = 1;
    }
    if (v23) {
      goto LABEL_21;
    }
  }
  uint64_t v24 = v13[7];
  uint64_t v25 = (double *)(a1 + v24);
  char v26 = *(unsigned char *)(a1 + v24 + 8);
  uint64_t v27 = (double *)(a2 + v24);
  int v28 = *(unsigned __int8 *)(a2 + v24 + 8);
  if ((v26 & 1) == 0)
  {
    if (*v25 != *v27) {
      LOBYTE(v28) = 1;
    }
    if (v28) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v29 = v13[8];
    uint64_t v30 = (double *)(a1 + v29);
    char v31 = *(unsigned char *)(a1 + v29 + 8);
    char v32 = (double *)(a2 + v29);
    int v33 = *(unsigned __int8 *)(a2 + v29 + 8);
    if (v31)
    {
      if (!v33) {
        goto LABEL_21;
      }
    }
    else
    {
      if (*v30 != *v32) {
        LOBYTE(v33) = 1;
      }
      if (v33) {
        goto LABEL_21;
      }
    }
    int v36 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v36(v12, a1, v6);
    v36(v10, a2, v6);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v37 = *(void (**)(char *, uint64_t))(v7 + 8);
    v37(v10, v6);
    v37(v12, v6);
    return v34 & 1;
  }
  if (v28) {
    goto LABEL_19;
  }
LABEL_21:
  char v34 = 0;
  return v34 & 1;
}

uint64_t sub_100172678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v73 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v72 = (char *)&v71 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v76 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445338);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100002ED4(&qword_10043E458);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v71 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v71 - v21;
  int v23 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v24 = v23;
  uint64_t v25 = v23[5];
  char v26 = (double *)(a1 + v25);
  char v27 = *(unsigned char *)(a1 + v25 + 8);
  int v28 = (double *)(a2 + v25);
  int v29 = *(unsigned __int8 *)(a2 + v25 + 8);
  if (v27)
  {
    if (!v29) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v26 != *v28) {
      LOBYTE(v29) = 1;
    }
    if (v29) {
      goto LABEL_49;
    }
  }
  uint64_t v30 = v23[6];
  char v31 = (double *)(a1 + v30);
  char v32 = *(unsigned char *)(a1 + v30 + 8);
  int v33 = (double *)(a2 + v30);
  int v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if (v32)
  {
    if (!v34) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v31 != *v33) {
      LOBYTE(v34) = 1;
    }
    if (v34) {
      goto LABEL_49;
    }
  }
  uint64_t v35 = v23[7];
  int v36 = (double *)(a1 + v35);
  char v37 = *(unsigned char *)(a1 + v35 + 8);
  uint64_t v38 = (double *)(a2 + v35);
  int v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if (v37)
  {
    if (!v39) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v36 != *v38) {
      LOBYTE(v39) = 1;
    }
    if (v39) {
      goto LABEL_49;
    }
  }
  uint64_t v40 = v23[8];
  uint64_t v41 = (double *)(a1 + v40);
  char v42 = *(unsigned char *)(a1 + v40 + 8);
  char v43 = (double *)(a2 + v40);
  int v44 = *(unsigned __int8 *)(a2 + v40 + 8);
  if (v42)
  {
    if (!v44) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v41 != *v43) {
      LOBYTE(v44) = 1;
    }
    if (v44) {
      goto LABEL_49;
    }
  }
  uint64_t v45 = v23[9];
  uint64_t v46 = (double *)(a1 + v45);
  char v47 = *(unsigned char *)(a1 + v45 + 8);
  uint64_t v48 = (double *)(a2 + v45);
  int v49 = *(unsigned __int8 *)(a2 + v45 + 8);
  if (v47)
  {
    if (!v49) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v46 != *v48) {
      LOBYTE(v49) = 1;
    }
    if (v49) {
      goto LABEL_49;
    }
  }
  uint64_t v50 = v23[10];
  uint64_t v51 = (double *)(a1 + v50);
  char v52 = *(unsigned char *)(a1 + v50 + 8);
  int v53 = (double *)(a2 + v50);
  int v54 = *(unsigned __int8 *)(a2 + v50 + 8);
  if (v52)
  {
    if (!v54) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v51 != *v53) {
      LOBYTE(v54) = 1;
    }
    if (v54) {
      goto LABEL_49;
    }
  }
  uint64_t v55 = v23[11];
  uint64_t v56 = (double *)(a1 + v55);
  char v57 = *(unsigned char *)(a1 + v55 + 8);
  uint64_t v58 = (double *)(a2 + v55);
  int v59 = *(unsigned __int8 *)(a2 + v55 + 8);
  if (v57)
  {
    if (!v59) {
      goto LABEL_49;
    }
  }
  else
  {
    if (*v56 != *v58) {
      LOBYTE(v59) = 1;
    }
    if (v59) {
      goto LABEL_49;
    }
  }
  sub_100011480(a1 + v23[12], (uint64_t)v22, &qword_10043E458);
  sub_100011480(a2 + v24[12], (uint64_t)v20, &qword_10043E458);
  uint64_t v60 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_100011480((uint64_t)v22, (uint64_t)v13, &qword_10043E458);
  uint64_t v71 = v60;
  sub_100011480((uint64_t)v20, v60, &qword_10043E458);
  uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v61((uint64_t)v13, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v20, &qword_10043E458);
    sub_10001ACB8((uint64_t)v22, &qword_10043E458);
    if (v61(v71, 1, v8) == 1)
    {
      sub_10001ACB8((uint64_t)v13, &qword_10043E458);
LABEL_52:
      uint64_t v66 = v74;
      uint64_t v65 = v75;
      char v67 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
      uint64_t v68 = v72;
      v67(v72, a1, v75);
      uint64_t v69 = v73;
      v67(v73, a2, v65);
      sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v62 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v70 = *(void (**)(char *, uint64_t))(v66 + 8);
      v70(v69, v65);
      v70(v68, v65);
      return v62 & 1;
    }
    goto LABEL_48;
  }
  sub_100011480((uint64_t)v13, (uint64_t)v17, &qword_10043E458);
  if (v61(v71, 1, v8) == 1)
  {
    sub_10001ACB8((uint64_t)v20, &qword_10043E458);
    sub_10001ACB8((uint64_t)v22, &qword_10043E458);
    sub_10015B354((uint64_t)v17, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_48:
    sub_10001ACB8((uint64_t)v13, &qword_100445338);
    goto LABEL_49;
  }
  sub_10015B284(v71, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v64 = sub_1001748FC((uint64_t)v17, (uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v20, &qword_10043E458);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  sub_10015B354((uint64_t)v17, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v13, &qword_10043E458);
  if (v64) {
    goto LABEL_52;
  }
LABEL_49:
  char v62 = 0;
  return v62 & 1;
}

uint64_t sub_100172CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v42 = (char *)&v39 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v39 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100002ED4(&qword_100445380);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100002ED4(&qword_10043E548);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v39 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v39 - v21;
  uint64_t v23 = type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData(0);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v40 = a1;
  sub_100011480(a1 + v24, (uint64_t)v22, &qword_10043E548);
  uint64_t v25 = *(int *)(v23 + 20);
  uint64_t v41 = a2;
  sub_100011480(a2 + v25, (uint64_t)v20, &qword_10043E548);
  uint64_t v26 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_100011480((uint64_t)v22, (uint64_t)v14, &qword_10043E548);
  sub_100011480((uint64_t)v20, v26, &qword_10043E548);
  char v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v27((uint64_t)v14, 1, v8) != 1)
  {
    uint64_t v28 = v46;
    sub_100011480((uint64_t)v14, v46, &qword_10043E548);
    if (v27(v26, 1, v8) != 1)
    {
      uint64_t v29 = v39;
      sub_10015B284(v26, v39, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
      char v30 = sub_100172678(v28, v29);
      sub_10015B354(v29, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
      sub_10001ACB8((uint64_t)v20, &qword_10043E548);
      sub_10001ACB8((uint64_t)v22, &qword_10043E548);
      sub_10015B354(v28, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
      sub_10001ACB8((uint64_t)v14, &qword_10043E548);
      if (v30) {
        goto LABEL_8;
      }
LABEL_9:
      char v36 = 0;
      return v36 & 1;
    }
    sub_10001ACB8((uint64_t)v20, &qword_10043E548);
    sub_10001ACB8((uint64_t)v22, &qword_10043E548);
    sub_10015B354(v28, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
LABEL_6:
    sub_10001ACB8((uint64_t)v14, &qword_100445380);
    goto LABEL_9;
  }
  sub_10001ACB8((uint64_t)v20, &qword_10043E548);
  sub_10001ACB8((uint64_t)v22, &qword_10043E548);
  if (v27(v26, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_10001ACB8((uint64_t)v14, &qword_10043E548);
LABEL_8:
  uint64_t v32 = v44;
  uint64_t v31 = v45;
  int v33 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  int v34 = v42;
  v33(v42, v40, v45);
  uint64_t v35 = v43;
  v33(v43, v41, v31);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v37 = *(void (**)(char *, uint64_t))(v32 + 8);
  v37(v35, v31);
  v37(v34, v31);
  return v36 & 1;
}

uint64_t sub_1001731E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v50 - v9;
  if ((sub_100158720(*a1, *a2) & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection(0);
  uint64_t v12 = v11;
  uint64_t v13 = v11[6];
  uint64_t v14 = (double *)((char *)a1 + v13);
  char v15 = *((unsigned char *)a1 + v13 + 8);
  uint64_t v16 = (double *)((char *)a2 + v13);
  int v17 = *((unsigned __int8 *)a2 + v13 + 8);
  if (v15)
  {
    if (!v17) {
      goto LABEL_39;
    }
  }
  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if (v17) {
      goto LABEL_39;
    }
  }
  uint64_t v18 = v11[7];
  uint64_t v19 = (double *)((char *)a1 + v18);
  char v20 = *((unsigned char *)a1 + v18 + 8);
  uint64_t v21 = (double *)((char *)a2 + v18);
  int v22 = *((unsigned __int8 *)a2 + v18 + 8);
  if (v20)
  {
    if (!v22) {
      goto LABEL_39;
    }
  }
  else
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if (v22) {
      goto LABEL_39;
    }
  }
  uint64_t v23 = v11[8];
  int v24 = *((unsigned __int8 *)a1 + v23);
  int v25 = *((unsigned __int8 *)a2 + v23);
  if (v24 == 2)
  {
    if (v25 != 2) {
      goto LABEL_39;
    }
  }
  else if (v25 == 2 || ((((v25 & 1) == 0) ^ v24) & 1) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v26 = v11[9];
  char v27 = (double *)((char *)a1 + v26);
  char v28 = *((unsigned char *)a1 + v26 + 8);
  uint64_t v29 = (double *)((char *)a2 + v26);
  int v30 = *((unsigned __int8 *)a2 + v26 + 8);
  if (v28)
  {
    if (!v30) {
      goto LABEL_39;
    }
  }
  else
  {
    if (*v27 != *v29) {
      LOBYTE(v30) = 1;
    }
    if (v30) {
      goto LABEL_39;
    }
  }
  uint64_t v31 = v11[10];
  uint64_t v32 = (double *)((char *)a1 + v31);
  char v33 = *((unsigned char *)a1 + v31 + 8);
  int v34 = (double *)((char *)a2 + v31);
  int v35 = *((unsigned __int8 *)a2 + v31 + 8);
  if (v33)
  {
    if (!v35) {
      goto LABEL_39;
    }
  }
  else
  {
    if (*v32 != *v34) {
      LOBYTE(v35) = 1;
    }
    if (v35) {
      goto LABEL_39;
    }
  }
  uint64_t v36 = v11[11];
  char v37 = (double *)((char *)a1 + v36);
  char v38 = *((unsigned char *)a1 + v36 + 8);
  uint64_t v39 = (double *)((char *)a2 + v36);
  int v40 = *((unsigned __int8 *)a2 + v36 + 8);
  if ((v38 & 1) == 0)
  {
    if (*v37 != *v39) {
      LOBYTE(v40) = 1;
    }
    if (v40) {
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v41 = v11[12];
    char v42 = (double *)((char *)a1 + v41);
    char v43 = *((unsigned char *)a1 + v41 + 8);
    uint64_t v44 = (double *)((char *)a2 + v41);
    int v45 = *((unsigned __int8 *)a2 + v41 + 8);
    if (v43)
    {
      if (!v45) {
        goto LABEL_39;
      }
    }
    else
    {
      if (*v42 != *v44) {
        LOBYTE(v45) = 1;
      }
      if (v45) {
        goto LABEL_39;
      }
    }
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v48(v10, (char *)a1 + v11[5], v4);
    v48(v8, (char *)a2 + v12[5], v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v49 = *(void (**)(char *, uint64_t))(v5 + 8);
    v49(v8, v4);
    v49(v10, v4);
    return v46 & 1;
  }
  if (v40) {
    goto LABEL_37;
  }
LABEL_39:
  char v46 = 0;
  return v46 & 1;
}

uint64_t sub_100173504(uint64_t *a1, uint64_t *a2)
{
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  char v64 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v63 = (char *)&v61 - v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100002ED4(&qword_100445360);
  __chkstk_darwin(v68);
  uint64_t v72 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100002ED4(&qword_10043E568);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v74 = (uint64_t)&v61 - v13;
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v61 - v14;
  uint64_t v15 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100002ED4(&qword_100445338);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  int v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100002ED4(&qword_10043E458);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v61 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v61 - v30;
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData(0);
  sub_100011480((uint64_t)v75 + *(int *)(v32 + 28), (uint64_t)v31, &qword_10043E458);
  uint64_t v73 = v32;
  sub_100011480((uint64_t)v76 + *(int *)(v32 + 28), (uint64_t)v29, &qword_10043E458);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_100011480((uint64_t)v31, (uint64_t)v22, &qword_10043E458);
  sub_100011480((uint64_t)v29, v33, &qword_10043E458);
  int v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    if (v34(v33, 1, v15) == 1)
    {
      sub_10001ACB8((uint64_t)v22, &qword_10043E458);
      goto LABEL_9;
    }
LABEL_6:
    int v35 = &qword_100445338;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_10001ACB8(v36, v35);
    goto LABEL_19;
  }
  sub_100011480((uint64_t)v22, (uint64_t)v26, &qword_10043E458);
  if (v34(v33, 1, v15) == 1)
  {
    sub_10001ACB8((uint64_t)v29, &qword_10043E458);
    sub_10001ACB8((uint64_t)v31, &qword_10043E458);
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  sub_10015B284(v33, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  char v37 = sub_1001748FC((uint64_t)v26, (uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10015B354((uint64_t)v18, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v29, &qword_10043E458);
  sub_10001ACB8((uint64_t)v31, &qword_10043E458);
  sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  sub_10001ACB8((uint64_t)v22, &qword_10043E458);
  if ((v37 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_9:
  uint64_t v39 = v75;
  char v38 = v76;
  if ((sub_100159458(*v75, *v76) & 1) == 0 || !sub_100159D18((void *)v39[1], (void *)v38[1])) {
    goto LABEL_19;
  }
  uint64_t v40 = v73;
  uint64_t v41 = v69;
  sub_100011480((uint64_t)v39 + *(int *)(v73 + 32), v69, &qword_10043E568);
  uint64_t v42 = v74;
  sub_100011480((uint64_t)v38 + *(int *)(v40 + 32), v74, &qword_10043E568);
  uint64_t v43 = v72;
  uint64_t v44 = v72 + *(int *)(v68 + 48);
  sub_100011480(v41, v72, &qword_10043E568);
  sub_100011480(v42, v44, &qword_10043E568);
  uint64_t v45 = v71;
  char v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v46(v43, 1, v71) != 1)
  {
    uint64_t v47 = v67;
    sub_100011480(v43, v67, &qword_10043E568);
    if (v46(v44, 1, v45) != 1)
    {
      uint64_t v48 = v62;
      sub_10015B284(v44, v62, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
      char v49 = sub_100173D88(v47, v48, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
      sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
      sub_10001ACB8(v74, &qword_10043E568);
      sub_10001ACB8(v41, &qword_10043E568);
      sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
      sub_10001ACB8(v43, &qword_10043E568);
      if (v49) {
        goto LABEL_18;
      }
LABEL_19:
      char v58 = 0;
      return v58 & 1;
    }
    sub_10001ACB8(v74, &qword_10043E568);
    sub_10001ACB8(v41, &qword_10043E568);
    sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
    goto LABEL_16;
  }
  sub_10001ACB8(v42, &qword_10043E568);
  sub_10001ACB8(v41, &qword_10043E568);
  if (v46(v44, 1, v45) != 1)
  {
LABEL_16:
    int v35 = &qword_100445360;
    uint64_t v36 = v43;
    goto LABEL_7;
  }
  sub_10001ACB8(v43, &qword_10043E568);
LABEL_18:
  uint64_t v50 = v73;
  uint64_t v51 = (char *)v39 + *(int *)(v73 + 24);
  uint64_t v53 = v65;
  uint64_t v52 = v66;
  int v54 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  uint64_t v55 = v63;
  v54(v63, v51, v66);
  uint64_t v56 = (char *)v38 + *(int *)(v50 + 24);
  char v57 = v64;
  v54(v64, v56, v52);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v52);
  v59(v55, v52);
  return v58 & 1;
}

uint64_t sub_100173D88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  uint64_t v13 = a3(0);
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = (double *)(a1 + v14);
  char v16 = *(unsigned char *)(a1 + v14 + 8);
  uint64_t v17 = (double *)(a2 + v14);
  int v18 = *(unsigned __int8 *)(a2 + v14 + 8);
  if ((v16 & 1) == 0)
  {
    if (*v15 != *v17) {
      LOBYTE(v18) = 1;
    }
    if (v18) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v19 = *(int *)(v13 + 24);
    uint64_t v20 = (double *)(a1 + v19);
    char v21 = *(unsigned char *)(a1 + v19 + 8);
    int v22 = (double *)(a2 + v19);
    int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if (v21)
    {
      if (!v23) {
        goto LABEL_9;
      }
    }
    else
    {
      if (*v20 != *v22) {
        LOBYTE(v23) = 1;
      }
      if (v23) {
        goto LABEL_9;
      }
    }
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v25(v12, a1, v6);
    v25(v10, a2, v6);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v10, v6);
    v26(v12, v6);
    return v24 & 1;
  }
  if (v18) {
    goto LABEL_7;
  }
LABEL_9:
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_100173F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_26;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_26;
    }
  }
  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v19)
  {
    if (!v21) {
      goto LABEL_26;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_26;
    }
  }
  uint64_t v22 = v11[7];
  int v23 = (double *)(a1 + v22);
  char v24 = *(unsigned char *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if (v24)
  {
    if (!v26) {
      goto LABEL_26;
    }
  }
  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if (v26) {
      goto LABEL_26;
    }
  }
  uint64_t v27 = v11[8];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 != 4)
  {
    if (v29 != 4 && v28 == v29) {
      goto LABEL_21;
    }
LABEL_26:
    char v31 = 0;
    return v31 & 1;
  }
  if (v29 != 4) {
    goto LABEL_26;
  }
LABEL_21:
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30(v10, a1, v4);
  v30(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
  v32(v8, v4);
  v32(v10, v4);
  return v31 & 1;
}

uint64_t sub_1001741F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_27;
    }
  }
  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v19)
  {
    if (!v21) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_27;
    }
  }
  uint64_t v22 = v11[7];
  int v23 = (double *)(a1 + v22);
  char v24 = *(unsigned char *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if (v24)
  {
    if (!v26) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if (v26) {
      goto LABEL_27;
    }
  }
  uint64_t v27 = v11[8];
  int v28 = (double *)(a1 + v27);
  char v29 = *(unsigned char *)(a1 + v27 + 8);
  uint64_t v30 = (double *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) == 0)
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if (v31) {
      goto LABEL_27;
    }
LABEL_25:
    uint64_t v32 = v11[9];
    uint64_t v33 = (double *)(a1 + v32);
    char v34 = *(unsigned char *)(a1 + v32 + 8);
    uint64_t v35 = (double *)(a2 + v32);
    int v36 = *(unsigned __int8 *)(a2 + v32 + 8);
    if (v34)
    {
      if (!v36) {
        goto LABEL_27;
      }
    }
    else
    {
      if (*v33 != *v35) {
        LOBYTE(v36) = 1;
      }
      if (v36) {
        goto LABEL_27;
      }
    }
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39(v10, a1, v4);
    v39(v8, a2, v4);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40(v8, v4);
    v40(v10, v4);
    return v37 & 1;
  }
  if (v31) {
    goto LABEL_25;
  }
LABEL_27:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_10017448C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(unsigned char *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if (v14)
  {
    if (!v16) {
      goto LABEL_24;
    }
  }
  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if (v16) {
      goto LABEL_24;
    }
  }
  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(unsigned char *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if (v19)
  {
    if (!v21) {
      goto LABEL_24;
    }
  }
  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if (v21) {
      goto LABEL_24;
    }
  }
  uint64_t v22 = v11[7];
  int v23 = *(unsigned __int8 *)(a1 + v22);
  int v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 2)
  {
    if (v24 != 2) {
      goto LABEL_24;
    }
  }
  else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v25 = v11[8];
  int v26 = *(unsigned __int8 *)(a1 + v25);
  int v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 2)
  {
    if (v27 == 2) {
      goto LABEL_23;
    }
LABEL_24:
    char v29 = 0;
    return v29 & 1;
  }
  if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_23:
  int v28 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v28(v10, a1, v4);
  v28(v8, a2, v4);
  sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v8, v4);
  v30(v10, v4);
  return v29 & 1;
}

uint64_t sub_100174700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v23 - v13;
  uint64_t v15 = *(int *)(a3(0) + 20);
  uint64_t v16 = *(void *)(a1 + v15);
  uint64_t v17 = *(void *)(a2 + v15);
  if (v16 == v17
    || (swift_retain(), swift_retain(), char v18 = a4(v16, v17), swift_release(), swift_release(), (v18 & 1) != 0))
  {
    char v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a1, v8);
    v19(v12, a2, v8);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    v21(v14, v8);
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1001748FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = (int *)a3(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (double *)(a1 + v14);
  char v16 = *(unsigned char *)(a1 + v14 + 8);
  uint64_t v17 = (double *)(a2 + v14);
  int v18 = *(unsigned __int8 *)(a2 + v14 + 8);
  if (v16)
  {
    if (!v18) {
      goto LABEL_15;
    }
  }
  else
  {
    if (*v15 != *v17) {
      LOBYTE(v18) = 1;
    }
    if (v18) {
      goto LABEL_15;
    }
  }
  uint64_t v19 = v13[6];
  char v20 = (double *)(a1 + v19);
  char v21 = *(unsigned char *)(a1 + v19 + 8);
  uint64_t v22 = (double *)(a2 + v19);
  int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
  if ((v21 & 1) == 0)
  {
    if (*v20 != *v22) {
      LOBYTE(v23) = 1;
    }
    if (v23) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v24 = v13[7];
    uint64_t v25 = (double *)(a1 + v24);
    char v26 = *(unsigned char *)(a1 + v24 + 8);
    int v27 = (double *)(a2 + v24);
    int v28 = *(unsigned __int8 *)(a2 + v24 + 8);
    if (v26)
    {
      if (!v28) {
        goto LABEL_15;
      }
    }
    else
    {
      if (*v25 != *v27) {
        LOBYTE(v28) = 1;
      }
      if (v28) {
        goto LABEL_15;
      }
    }
    int v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v31(v12, a1, v6);
    v31(v10, a2, v6);
    sub_100174B38(&qword_10043A610, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v7 + 8);
    v32(v10, v6);
    v32(v12, v6);
    return v29 & 1;
  }
  if (v23) {
    goto LABEL_13;
  }
LABEL_15:
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_100174B38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100174B84()
{
  unint64_t result = qword_10043E8C0;
  if (!qword_10043E8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8C0);
  }
  return result;
}

unint64_t sub_100174BDC()
{
  unint64_t result = qword_10043E8C8;
  if (!qword_10043E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8C8);
  }
  return result;
}

unint64_t sub_100174C34()
{
  unint64_t result = qword_10043E8D0;
  if (!qword_10043E8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8D0);
  }
  return result;
}

uint64_t sub_100174C88()
{
  return sub_100013474(&qword_10043E8D8, &qword_10043E8E0);
}

unint64_t sub_100174CB4()
{
  unint64_t result = qword_10043E8E8;
  if (!qword_10043E8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8E8);
  }
  return result;
}

unint64_t sub_100174D0C()
{
  unint64_t result = qword_10043E8F0;
  if (!qword_10043E8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8F0);
  }
  return result;
}

unint64_t sub_100174D64()
{
  unint64_t result = qword_10043E8F8;
  if (!qword_10043E8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E8F8);
  }
  return result;
}

uint64_t sub_100174DB8()
{
  return sub_100013474(&qword_10043E900, &qword_10043E908);
}

unint64_t sub_100174DE4()
{
  unint64_t result = qword_10043E910;
  if (!qword_10043E910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E910);
  }
  return result;
}

unint64_t sub_100174E3C()
{
  unint64_t result = qword_10043E918;
  if (!qword_10043E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E918);
  }
  return result;
}

unint64_t sub_100174E94()
{
  unint64_t result = qword_10043E920;
  if (!qword_10043E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E920);
  }
  return result;
}

uint64_t sub_100174EE8()
{
  return sub_100013474(&qword_10043E928, &qword_10043E930);
}

unint64_t sub_100174F14()
{
  unint64_t result = qword_10043E938;
  if (!qword_10043E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E938);
  }
  return result;
}

unint64_t sub_100174F6C()
{
  unint64_t result = qword_10043E940;
  if (!qword_10043E940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E940);
  }
  return result;
}

unint64_t sub_100174FC4()
{
  unint64_t result = qword_10043E948;
  if (!qword_10043E948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E948);
  }
  return result;
}

uint64_t sub_100175018()
{
  return sub_100013474(&qword_10043E950, &qword_10043E958);
}

unint64_t sub_100175044()
{
  unint64_t result = qword_10043E960;
  if (!qword_10043E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E960);
  }
  return result;
}

unint64_t sub_10017509C()
{
  unint64_t result = qword_10043E968;
  if (!qword_10043E968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E968);
  }
  return result;
}

unint64_t sub_1001750F4()
{
  unint64_t result = qword_10043E970;
  if (!qword_10043E970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E970);
  }
  return result;
}

uint64_t sub_100175148()
{
  return sub_100013474(&qword_10043E978, &qword_10043E980);
}

unint64_t sub_100175174()
{
  unint64_t result = qword_10043E988;
  if (!qword_10043E988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E988);
  }
  return result;
}

unint64_t sub_1001751CC()
{
  unint64_t result = qword_10043E990;
  if (!qword_10043E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E990);
  }
  return result;
}

unint64_t sub_100175224()
{
  unint64_t result = qword_10043E998;
  if (!qword_10043E998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E998);
  }
  return result;
}

uint64_t sub_100175278()
{
  return sub_100013474(&qword_10043E9A0, &qword_10043E9A8);
}

unint64_t sub_1001752A4()
{
  unint64_t result = qword_10043E9B0;
  if (!qword_10043E9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9B0);
  }
  return result;
}

unint64_t sub_1001752FC()
{
  unint64_t result = qword_10043E9B8;
  if (!qword_10043E9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9B8);
  }
  return result;
}

unint64_t sub_100175354()
{
  unint64_t result = qword_10043E9C0;
  if (!qword_10043E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9C0);
  }
  return result;
}

uint64_t sub_1001753A8()
{
  return sub_100013474(&qword_10043E9C8, &qword_10043E9D0);
}

unint64_t sub_1001753D4()
{
  unint64_t result = qword_10043E9D8;
  if (!qword_10043E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9D8);
  }
  return result;
}

unint64_t sub_10017542C()
{
  unint64_t result = qword_10043E9E0;
  if (!qword_10043E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9E0);
  }
  return result;
}

unint64_t sub_100175484()
{
  unint64_t result = qword_10043E9E8;
  if (!qword_10043E9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043E9E8);
  }
  return result;
}

uint64_t sub_1001754D8()
{
  return sub_100013474(&qword_10043E9F0, &qword_10043E9F8);
}

unint64_t sub_100175504()
{
  unint64_t result = qword_10043EA00;
  if (!qword_10043EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA00);
  }
  return result;
}

unint64_t sub_10017555C()
{
  unint64_t result = qword_10043EA08;
  if (!qword_10043EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA08);
  }
  return result;
}

unint64_t sub_1001755B4()
{
  unint64_t result = qword_10043EA10;
  if (!qword_10043EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA10);
  }
  return result;
}

uint64_t sub_100175608()
{
  return sub_100013474(&qword_10043EA18, &qword_10043EA20);
}

unint64_t sub_100175634()
{
  unint64_t result = qword_10043EA28;
  if (!qword_10043EA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA28);
  }
  return result;
}

unint64_t sub_10017568C()
{
  unint64_t result = qword_10043EA30;
  if (!qword_10043EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA30);
  }
  return result;
}

unint64_t sub_1001756E4()
{
  unint64_t result = qword_10043EA38;
  if (!qword_10043EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA38);
  }
  return result;
}

uint64_t sub_100175738()
{
  return sub_100013474(&qword_10043EA40, &qword_10043EA48);
}

unint64_t sub_100175764()
{
  unint64_t result = qword_10043EA50;
  if (!qword_10043EA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA50);
  }
  return result;
}

unint64_t sub_1001757BC()
{
  unint64_t result = qword_10043EA58;
  if (!qword_10043EA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA58);
  }
  return result;
}

unint64_t sub_100175814()
{
  unint64_t result = qword_10043EA60;
  if (!qword_10043EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA60);
  }
  return result;
}

uint64_t sub_100175868()
{
  return sub_100013474(&qword_10043EA68, &qword_10043EA70);
}

unint64_t sub_100175894()
{
  unint64_t result = qword_10043EA78;
  if (!qword_10043EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA78);
  }
  return result;
}

unint64_t sub_1001758EC()
{
  unint64_t result = qword_10043EA80;
  if (!qword_10043EA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA80);
  }
  return result;
}

unint64_t sub_100175944()
{
  unint64_t result = qword_10043EA88;
  if (!qword_10043EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EA88);
  }
  return result;
}

uint64_t sub_100175998()
{
  return sub_100013474(&qword_10043EA90, &qword_10043EA98);
}

unint64_t sub_1001759C4()
{
  unint64_t result = qword_10043EAA0;
  if (!qword_10043EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAA0);
  }
  return result;
}

unint64_t sub_100175A1C()
{
  unint64_t result = qword_10043EAA8;
  if (!qword_10043EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAA8);
  }
  return result;
}

unint64_t sub_100175A74()
{
  unint64_t result = qword_10043EAB0;
  if (!qword_10043EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAB0);
  }
  return result;
}

uint64_t sub_100175AC8()
{
  return sub_100013474(&qword_10043EAB8, &qword_10043EAC0);
}

unint64_t sub_100175AF4()
{
  unint64_t result = qword_10043EAC8;
  if (!qword_10043EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAC8);
  }
  return result;
}

unint64_t sub_100175B4C()
{
  unint64_t result = qword_10043EAD0;
  if (!qword_10043EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAD0);
  }
  return result;
}

unint64_t sub_100175BA4()
{
  unint64_t result = qword_10043EAD8;
  if (!qword_10043EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAD8);
  }
  return result;
}

uint64_t sub_100175BF8()
{
  return sub_100013474(&qword_10043EAE0, &qword_10043EAE8);
}

unint64_t sub_100175C24()
{
  unint64_t result = qword_10043EAF0;
  if (!qword_10043EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAF0);
  }
  return result;
}

unint64_t sub_100175C7C()
{
  unint64_t result = qword_10043EAF8;
  if (!qword_10043EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EAF8);
  }
  return result;
}

unint64_t sub_100175CD4()
{
  unint64_t result = qword_10043EB00;
  if (!qword_10043EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB00);
  }
  return result;
}

uint64_t sub_100175D28()
{
  return sub_100013474(&qword_10043EB08, &qword_10043EB10);
}

unint64_t sub_100175D54()
{
  unint64_t result = qword_10043EB18;
  if (!qword_10043EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB18);
  }
  return result;
}

unint64_t sub_100175DAC()
{
  unint64_t result = qword_10043EB20;
  if (!qword_10043EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB20);
  }
  return result;
}

unint64_t sub_100175E04()
{
  unint64_t result = qword_10043EB28;
  if (!qword_10043EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB28);
  }
  return result;
}

uint64_t sub_100175E58()
{
  return sub_100013474(&qword_10043EB30, &qword_10043EB38);
}

unint64_t sub_100175E88()
{
  unint64_t result = qword_10043EB40;
  if (!qword_10043EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB40);
  }
  return result;
}

unint64_t sub_100175EE0()
{
  unint64_t result = qword_10043EB48;
  if (!qword_10043EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB48);
  }
  return result;
}

uint64_t sub_100175F34()
{
  return sub_100013474(&qword_10043EB50, &qword_10043EB58);
}

unint64_t sub_100175F60()
{
  unint64_t result = qword_10043EB60;
  if (!qword_10043EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB60);
  }
  return result;
}

unint64_t sub_100175FB8()
{
  unint64_t result = qword_10043EB68;
  if (!qword_10043EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB68);
  }
  return result;
}

unint64_t sub_100176010()
{
  unint64_t result = qword_10043EB70;
  if (!qword_10043EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB70);
  }
  return result;
}

uint64_t sub_100176064()
{
  return sub_100013474(&qword_10043EB78, &qword_10043EB80);
}

unint64_t sub_100176090()
{
  unint64_t result = qword_10043EB88;
  if (!qword_10043EB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB88);
  }
  return result;
}

unint64_t sub_1001760E8()
{
  unint64_t result = qword_10043EB90;
  if (!qword_10043EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB90);
  }
  return result;
}

unint64_t sub_100176140()
{
  unint64_t result = qword_10043EB98;
  if (!qword_10043EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EB98);
  }
  return result;
}

uint64_t sub_100176194()
{
  return sub_100013474(&qword_10043EBA0, &qword_10043EBA8);
}

unint64_t sub_1001761C0()
{
  unint64_t result = qword_10043EBB0;
  if (!qword_10043EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBB0);
  }
  return result;
}

unint64_t sub_100176218()
{
  unint64_t result = qword_10043EBB8;
  if (!qword_10043EBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBB8);
  }
  return result;
}

unint64_t sub_100176270()
{
  unint64_t result = qword_10043EBC0;
  if (!qword_10043EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBC0);
  }
  return result;
}

uint64_t sub_1001762C4()
{
  return sub_100013474(&qword_10043EBC8, &qword_10043EBD0);
}

unint64_t sub_1001762F0()
{
  unint64_t result = qword_10043EBD8;
  if (!qword_10043EBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBD8);
  }
  return result;
}

unint64_t sub_100176348()
{
  unint64_t result = qword_10043EBE0;
  if (!qword_10043EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBE0);
  }
  return result;
}

unint64_t sub_1001763A0()
{
  unint64_t result = qword_10043EBE8;
  if (!qword_10043EBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EBE8);
  }
  return result;
}

uint64_t sub_1001763F4()
{
  return sub_100013474(&qword_10043EBF0, &qword_10043EBF8);
}

unint64_t sub_100176420()
{
  unint64_t result = qword_10043EC00;
  if (!qword_10043EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC00);
  }
  return result;
}

unint64_t sub_100176478()
{
  unint64_t result = qword_10043EC08;
  if (!qword_10043EC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC08);
  }
  return result;
}

unint64_t sub_1001764D0()
{
  unint64_t result = qword_10043EC10;
  if (!qword_10043EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC10);
  }
  return result;
}

uint64_t sub_100176524()
{
  return sub_100013474(&qword_10043EC18, &qword_10043EC20);
}

unint64_t sub_100176550()
{
  unint64_t result = qword_10043EC28;
  if (!qword_10043EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC28);
  }
  return result;
}

unint64_t sub_1001765A8()
{
  unint64_t result = qword_10043EC30;
  if (!qword_10043EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC30);
  }
  return result;
}

unint64_t sub_100176600()
{
  unint64_t result = qword_10043EC38;
  if (!qword_10043EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC38);
  }
  return result;
}

uint64_t sub_100176654()
{
  return sub_100013474(&qword_10043EC40, &qword_10043EC48);
}

unint64_t sub_100176680()
{
  unint64_t result = qword_10043EC50;
  if (!qword_10043EC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC50);
  }
  return result;
}

unint64_t sub_1001766D8()
{
  unint64_t result = qword_10043EC58;
  if (!qword_10043EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC58);
  }
  return result;
}

unint64_t sub_100176730()
{
  unint64_t result = qword_10043EC60;
  if (!qword_10043EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC60);
  }
  return result;
}

unint64_t sub_100176788()
{
  unint64_t result = qword_10043EC68;
  if (!qword_10043EC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC68);
  }
  return result;
}

unint64_t sub_1001767E0()
{
  unint64_t result = qword_10043EC70;
  if (!qword_10043EC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC70);
  }
  return result;
}

unint64_t sub_100176838()
{
  unint64_t result = qword_10043EC78;
  if (!qword_10043EC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EC78);
  }
  return result;
}

uint64_t sub_10017688C()
{
  return sub_100013474(&qword_10043EC80, &qword_10043EC88);
}

uint64_t sub_1001768B4()
{
  return sub_100013474(&qword_10043EC90, &qword_10043EC98);
}

unint64_t sub_1001768E0()
{
  unint64_t result = qword_10043ECA0;
  if (!qword_10043ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECA0);
  }
  return result;
}

unint64_t sub_100176938()
{
  unint64_t result = qword_10043ECA8;
  if (!qword_10043ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECA8);
  }
  return result;
}

unint64_t sub_100176990()
{
  unint64_t result = qword_10043ECB0;
  if (!qword_10043ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECB0);
  }
  return result;
}

unint64_t sub_1001769E8()
{
  unint64_t result = qword_10043ECB8;
  if (!qword_10043ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECB8);
  }
  return result;
}

unint64_t sub_100176A40()
{
  unint64_t result = qword_10043ECC0;
  if (!qword_10043ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECC0);
  }
  return result;
}

unint64_t sub_100176A98()
{
  unint64_t result = qword_10043ECC8;
  if (!qword_10043ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECC8);
  }
  return result;
}

unint64_t sub_100176AF0()
{
  unint64_t result = qword_10043ECD0;
  if (!qword_10043ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECD0);
  }
  return result;
}

unint64_t sub_100176B48()
{
  unint64_t result = qword_10043ECD8;
  if (!qword_10043ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECD8);
  }
  return result;
}

unint64_t sub_100176BA0()
{
  unint64_t result = qword_10043ECE0;
  if (!qword_10043ECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECE0);
  }
  return result;
}

unint64_t sub_100176BF8()
{
  unint64_t result = qword_10043ECE8;
  if (!qword_10043ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECE8);
  }
  return result;
}

unint64_t sub_100176C50()
{
  unint64_t result = qword_10043ECF0;
  if (!qword_10043ECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECF0);
  }
  return result;
}

unint64_t sub_100176CA8()
{
  unint64_t result = qword_10043ECF8;
  if (!qword_10043ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ECF8);
  }
  return result;
}

unint64_t sub_100176D00()
{
  unint64_t result = qword_10043ED00;
  if (!qword_10043ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED00);
  }
  return result;
}

unint64_t sub_100176D58()
{
  unint64_t result = qword_10043ED08;
  if (!qword_10043ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED08);
  }
  return result;
}

unint64_t sub_100176DB0()
{
  unint64_t result = qword_10043ED10;
  if (!qword_10043ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED10);
  }
  return result;
}

unint64_t sub_100176E08()
{
  unint64_t result = qword_10043ED18;
  if (!qword_10043ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED18);
  }
  return result;
}

unint64_t sub_100176E60()
{
  unint64_t result = qword_10043ED20;
  if (!qword_10043ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED20);
  }
  return result;
}

unint64_t sub_100176EB8()
{
  unint64_t result = qword_10043ED28;
  if (!qword_10043ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED28);
  }
  return result;
}

unint64_t sub_100176F10()
{
  unint64_t result = qword_10043ED30;
  if (!qword_10043ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED30);
  }
  return result;
}

unint64_t sub_100176F68()
{
  unint64_t result = qword_10043ED38;
  if (!qword_10043ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED38);
  }
  return result;
}

unint64_t sub_100176FC0()
{
  unint64_t result = qword_10043ED40;
  if (!qword_10043ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043ED40);
  }
  return result;
}

uint64_t sub_100177014()
{
  return sub_100013474(&qword_10043ED48, &qword_10043ED50);
}

uint64_t sub_10017703C()
{
  return sub_100013474(&qword_10043ED58, &qword_10043ED60);
}

uint64_t sub_100177064()
{
  return sub_100013474(&qword_10043ED68, &qword_10043ED70);
}

uint64_t sub_10017708C()
{
  return sub_100013474(&qword_10043ED78, &qword_10043ED80);
}

uint64_t sub_1001770B4()
{
  return sub_100013474(&qword_10043ED88, &qword_10043ED90);
}

uint64_t sub_1001770DC()
{
  return sub_100013474(&qword_10043ED98, &qword_10043EDA0);
}

uint64_t sub_100177104()
{
  return sub_100013474(&qword_10043EDA8, &qword_10043EDB0);
}

unint64_t sub_100177130()
{
  unint64_t result = qword_10043EDB8;
  if (!qword_10043EDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDB8);
  }
  return result;
}

unint64_t sub_100177188()
{
  unint64_t result = qword_10043EDC0;
  if (!qword_10043EDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDC0);
  }
  return result;
}

unint64_t sub_1001771E0()
{
  unint64_t result = qword_10043EDC8;
  if (!qword_10043EDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDC8);
  }
  return result;
}

unint64_t sub_100177238()
{
  unint64_t result = qword_10043EDD0;
  if (!qword_10043EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDD0);
  }
  return result;
}

unint64_t sub_100177290()
{
  unint64_t result = qword_10043EDD8;
  if (!qword_10043EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDD8);
  }
  return result;
}

unint64_t sub_1001772E8()
{
  unint64_t result = qword_10043EDE0;
  if (!qword_10043EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EDE0);
  }
  return result;
}

uint64_t sub_10017733C()
{
  return sub_100013474(&qword_10043EDE8, &qword_10043EDF0);
}

uint64_t sub_100177364()
{
  return sub_100013474(&qword_10043EDF8, &qword_10043EE00);
}

unint64_t sub_100177390()
{
  unint64_t result = qword_10043EE08;
  if (!qword_10043EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE08);
  }
  return result;
}

unint64_t sub_1001773E8()
{
  unint64_t result = qword_10043EE10;
  if (!qword_10043EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE10);
  }
  return result;
}

unint64_t sub_100177440()
{
  unint64_t result = qword_10043EE18;
  if (!qword_10043EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE18);
  }
  return result;
}

unint64_t sub_100177498()
{
  unint64_t result = qword_10043EE20;
  if (!qword_10043EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE20);
  }
  return result;
}

unint64_t sub_1001774F0()
{
  unint64_t result = qword_10043EE28;
  if (!qword_10043EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE28);
  }
  return result;
}

unint64_t sub_100177548()
{
  unint64_t result = qword_10043EE30;
  if (!qword_10043EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE30);
  }
  return result;
}

unint64_t sub_1001775A0()
{
  unint64_t result = qword_10043EE38;
  if (!qword_10043EE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE38);
  }
  return result;
}

unint64_t sub_1001775F8()
{
  unint64_t result = qword_10043EE40;
  if (!qword_10043EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE40);
  }
  return result;
}

unint64_t sub_100177650()
{
  unint64_t result = qword_10043EE48;
  if (!qword_10043EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE48);
  }
  return result;
}

uint64_t sub_1001776A4()
{
  return sub_100013474(&qword_10043EE50, &qword_10043EE58);
}

uint64_t sub_1001776CC()
{
  return sub_100013474(&qword_10043EE60, &qword_10043EE68);
}

uint64_t sub_1001776F4()
{
  return sub_100013474(&qword_10043EE70, &qword_10043EE78);
}

unint64_t sub_100177720()
{
  unint64_t result = qword_10043EE80;
  if (!qword_10043EE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE80);
  }
  return result;
}

unint64_t sub_100177778()
{
  unint64_t result = qword_10043EE88;
  if (!qword_10043EE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE88);
  }
  return result;
}

unint64_t sub_1001777D0()
{
  unint64_t result = qword_10043EE90;
  if (!qword_10043EE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE90);
  }
  return result;
}

unint64_t sub_100177828()
{
  unint64_t result = qword_10043EE98;
  if (!qword_10043EE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EE98);
  }
  return result;
}

unint64_t sub_100177880()
{
  unint64_t result = qword_10043EEA0;
  if (!qword_10043EEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEA0);
  }
  return result;
}

unint64_t sub_1001778D8()
{
  unint64_t result = qword_10043EEA8;
  if (!qword_10043EEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEA8);
  }
  return result;
}

unint64_t sub_100177930()
{
  unint64_t result = qword_10043EEB0;
  if (!qword_10043EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEB0);
  }
  return result;
}

unint64_t sub_100177988()
{
  unint64_t result = qword_10043EEB8;
  if (!qword_10043EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEB8);
  }
  return result;
}

unint64_t sub_1001779E0()
{
  unint64_t result = qword_10043EEC0;
  if (!qword_10043EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEC0);
  }
  return result;
}

uint64_t sub_100177A34()
{
  return sub_100013474(&qword_10043EEC8, &qword_10043EED0);
}

uint64_t sub_100177A5C()
{
  return sub_100013474(&qword_10043EED8, &qword_10043EEE0);
}

uint64_t sub_100177A84()
{
  return sub_100013474(&qword_10043EEE8, &qword_10043EEF0);
}

unint64_t sub_100177AB0()
{
  unint64_t result = qword_10043EEF8;
  if (!qword_10043EEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EEF8);
  }
  return result;
}

unint64_t sub_100177B08()
{
  unint64_t result = qword_10043EF00;
  if (!qword_10043EF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF00);
  }
  return result;
}

unint64_t sub_100177B60()
{
  unint64_t result = qword_10043EF08;
  if (!qword_10043EF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF08);
  }
  return result;
}

uint64_t sub_100177BB4()
{
  return sub_100013474(&qword_10043EF10, &qword_10043EF18);
}

unint64_t sub_100177BE0()
{
  unint64_t result = qword_10043EF20;
  if (!qword_10043EF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF20);
  }
  return result;
}

unint64_t sub_100177C38()
{
  unint64_t result = qword_10043EF28;
  if (!qword_10043EF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF28);
  }
  return result;
}

unint64_t sub_100177C90()
{
  unint64_t result = qword_10043EF30;
  if (!qword_10043EF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF30);
  }
  return result;
}

unint64_t sub_100177CE8()
{
  unint64_t result = qword_10043EF38;
  if (!qword_10043EF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF38);
  }
  return result;
}

unint64_t sub_100177D40()
{
  unint64_t result = qword_10043EF40;
  if (!qword_10043EF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF40);
  }
  return result;
}

unint64_t sub_100177D98()
{
  unint64_t result = qword_10043EF48;
  if (!qword_10043EF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF48);
  }
  return result;
}

uint64_t sub_100177DEC()
{
  return sub_100013474(&qword_10043EF50, &qword_10043EF58);
}

uint64_t sub_100177E14()
{
  return sub_100013474(&qword_10043EF60, &qword_10043EF68);
}

unint64_t sub_100177E40()
{
  unint64_t result = qword_10043EF70;
  if (!qword_10043EF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF70);
  }
  return result;
}

unint64_t sub_100177E98()
{
  unint64_t result = qword_10043EF78;
  if (!qword_10043EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF78);
  }
  return result;
}

unint64_t sub_100177EF0()
{
  unint64_t result = qword_10043EF80;
  if (!qword_10043EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF80);
  }
  return result;
}

uint64_t sub_100177F44()
{
  return sub_100013474(&qword_10043EF88, &qword_10043EF90);
}

unint64_t sub_100177F70()
{
  unint64_t result = qword_10043EF98;
  if (!qword_10043EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EF98);
  }
  return result;
}

unint64_t sub_100177FC8()
{
  unint64_t result = qword_10043EFA0;
  if (!qword_10043EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFA0);
  }
  return result;
}

unint64_t sub_100178020()
{
  unint64_t result = qword_10043EFA8;
  if (!qword_10043EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFA8);
  }
  return result;
}

unint64_t sub_100178078()
{
  unint64_t result = qword_10043EFB0;
  if (!qword_10043EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFB0);
  }
  return result;
}

unint64_t sub_1001780D0()
{
  unint64_t result = qword_10043EFB8;
  if (!qword_10043EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFB8);
  }
  return result;
}

unint64_t sub_100178128()
{
  unint64_t result = qword_10043EFC0;
  if (!qword_10043EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFC0);
  }
  return result;
}

uint64_t sub_10017817C()
{
  return sub_100013474(&qword_10043EFC8, &qword_10043EFD0);
}

uint64_t sub_1001781A4()
{
  return sub_100013474(&qword_10043EFD8, &qword_10043EFE0);
}

unint64_t sub_1001781D0()
{
  unint64_t result = qword_10043EFE8;
  if (!qword_10043EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFE8);
  }
  return result;
}

unint64_t sub_100178228()
{
  unint64_t result = qword_10043EFF0;
  if (!qword_10043EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFF0);
  }
  return result;
}

unint64_t sub_100178280()
{
  unint64_t result = qword_10043EFF8;
  if (!qword_10043EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043EFF8);
  }
  return result;
}

uint64_t sub_1001782D4()
{
  return sub_100013474(&qword_10043F000, &qword_10043F008);
}

unint64_t sub_100178300()
{
  unint64_t result = qword_10043F010;
  if (!qword_10043F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F010);
  }
  return result;
}

unint64_t sub_100178358()
{
  unint64_t result = qword_10043F018;
  if (!qword_10043F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F018);
  }
  return result;
}

unint64_t sub_1001783B0()
{
  unint64_t result = qword_10043F020;
  if (!qword_10043F020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F020);
  }
  return result;
}

uint64_t sub_100178404()
{
  return sub_100013474(&qword_10043F028, &qword_10043F030);
}

unint64_t sub_100178430()
{
  unint64_t result = qword_10043F038;
  if (!qword_10043F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F038);
  }
  return result;
}

unint64_t sub_100178488()
{
  unint64_t result = qword_10043F040;
  if (!qword_10043F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F040);
  }
  return result;
}

unint64_t sub_1001784E0()
{
  unint64_t result = qword_10043F048;
  if (!qword_10043F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F048);
  }
  return result;
}

uint64_t sub_100178534()
{
  return sub_100013474(&qword_10043F050, &qword_10043F058);
}

unint64_t sub_100178560()
{
  unint64_t result = qword_10043F060;
  if (!qword_10043F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F060);
  }
  return result;
}

unint64_t sub_1001785B8()
{
  unint64_t result = qword_10043F068;
  if (!qword_10043F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F068);
  }
  return result;
}

unint64_t sub_100178610()
{
  unint64_t result = qword_10043F070;
  if (!qword_10043F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F070);
  }
  return result;
}

unint64_t sub_100178668()
{
  unint64_t result = qword_10043F078;
  if (!qword_10043F078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F078);
  }
  return result;
}

unint64_t sub_1001786C0()
{
  unint64_t result = qword_10043F080;
  if (!qword_10043F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F080);
  }
  return result;
}

unint64_t sub_100178718()
{
  unint64_t result = qword_10043F088;
  if (!qword_10043F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F088);
  }
  return result;
}

uint64_t sub_10017876C()
{
  return sub_100013474(&qword_10043F090, &qword_10043F098);
}

uint64_t sub_100178794()
{
  return sub_100013474(&qword_10043F0A0, &qword_10043F0A8);
}

unint64_t sub_1001787C0()
{
  unint64_t result = qword_10043F0B0;
  if (!qword_10043F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0B0);
  }
  return result;
}

unint64_t sub_100178818()
{
  unint64_t result = qword_10043F0B8;
  if (!qword_10043F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0B8);
  }
  return result;
}

unint64_t sub_100178870()
{
  unint64_t result = qword_10043F0C0;
  if (!qword_10043F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0C0);
  }
  return result;
}

uint64_t sub_1001788C4()
{
  return sub_100013474(&qword_10043F0C8, &qword_10043F0D0);
}

unint64_t sub_1001788F0()
{
  unint64_t result = qword_10043F0D8;
  if (!qword_10043F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0D8);
  }
  return result;
}

unint64_t sub_100178948()
{
  unint64_t result = qword_10043F0E0;
  if (!qword_10043F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0E0);
  }
  return result;
}

unint64_t sub_1001789A0()
{
  unint64_t result = qword_10043F0E8;
  if (!qword_10043F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F0E8);
  }
  return result;
}

uint64_t sub_1001789F4()
{
  return sub_100013474(&qword_10043F0F0, &qword_10043F0F8);
}

unint64_t sub_100178A20()
{
  unint64_t result = qword_10043F100;
  if (!qword_10043F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F100);
  }
  return result;
}

unint64_t sub_100178A78()
{
  unint64_t result = qword_10043F108;
  if (!qword_10043F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F108);
  }
  return result;
}

unint64_t sub_100178AD0()
{
  unint64_t result = qword_10043F110;
  if (!qword_10043F110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F110);
  }
  return result;
}

uint64_t sub_100178B24()
{
  return sub_100013474(&qword_10043F118, &qword_10043F120);
}

unint64_t sub_100178B50()
{
  unint64_t result = qword_10043F128;
  if (!qword_10043F128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F128);
  }
  return result;
}

unint64_t sub_100178BA8()
{
  unint64_t result = qword_10043F130;
  if (!qword_10043F130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F130);
  }
  return result;
}

unint64_t sub_100178C00()
{
  unint64_t result = qword_10043F138;
  if (!qword_10043F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F138);
  }
  return result;
}

unint64_t sub_100178C58()
{
  unint64_t result = qword_10043F140;
  if (!qword_10043F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F140);
  }
  return result;
}

unint64_t sub_100178CB0()
{
  unint64_t result = qword_10043F148;
  if (!qword_10043F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F148);
  }
  return result;
}

unint64_t sub_100178D08()
{
  unint64_t result = qword_10043F150;
  if (!qword_10043F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F150);
  }
  return result;
}

uint64_t sub_100178D5C()
{
  return sub_100013474(&qword_10043F158, &qword_10043F160);
}

uint64_t sub_100178D84()
{
  return sub_100013474(&qword_10043F168, &qword_10043F170);
}

unint64_t sub_100178DB0()
{
  unint64_t result = qword_10043F178;
  if (!qword_10043F178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F178);
  }
  return result;
}

unint64_t sub_100178E08()
{
  unint64_t result = qword_10043F180;
  if (!qword_10043F180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F180);
  }
  return result;
}

unint64_t sub_100178E60()
{
  unint64_t result = qword_10043F188;
  if (!qword_10043F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F188);
  }
  return result;
}

unint64_t sub_100178EB8()
{
  unint64_t result = qword_10043F190;
  if (!qword_10043F190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F190);
  }
  return result;
}

unint64_t sub_100178F10()
{
  unint64_t result = qword_10043F198;
  if (!qword_10043F198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F198);
  }
  return result;
}

unint64_t sub_100178F68()
{
  unint64_t result = qword_10043F1A0;
  if (!qword_10043F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F1A0);
  }
  return result;
}

uint64_t sub_100178FBC()
{
  return sub_100013474(&qword_10043F1A8, &qword_10043F1B0);
}

uint64_t sub_100178FE4()
{
  return sub_100013474(&qword_10043F1B8, &qword_10043F1C0);
}

unint64_t sub_100179010()
{
  unint64_t result = qword_10043F1C8;
  if (!qword_10043F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F1C8);
  }
  return result;
}

unint64_t sub_100179068()
{
  unint64_t result = qword_10043F1D0;
  if (!qword_10043F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F1D0);
  }
  return result;
}

unint64_t sub_1001790C0()
{
  unint64_t result = qword_10043F1D8;
  if (!qword_10043F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10043F1D8);
  }
  return result;
}

uint64_t sub_100179114()
{
  return sub_100013474(&qword_10043F1E0, &qword_10043F1E8);
}

uint64_t sub_10017913C()
{
  return sub_100174B38(&qword_10043F1F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

uint64_t sub_100179184()
{
  return sub_100174B38((unint64_t *)&qword_10043E1E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

uint64_t sub_1001791CC()
{
  return sub_100174B38(&qword_10043E598, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

uint64_t sub_100179214()
{
  return sub_100174B38(&qword_10043F1F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

uint64_t sub_10017925C()
{
  return sub_100174B38(&qword_10043F200, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelSample);
}

uint64_t sub_1001792A4()
{
  return sub_100174B38(&qword_10043E5A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelSample);
}

uint64_t sub_1001792EC()
{
  return sub_100174B38(&qword_10043E5A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelSample);
}

uint64_t sub_100179334()
{
  return sub_100174B38(&qword_10043F208, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelSample);
}

uint64_t sub_10017937C()
{
  return sub_100174B38(&qword_10043F210, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Accel);
}

uint64_t sub_1001793C4()
{
  return sub_100174B38(&qword_10043F218, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Accel);
}

uint64_t sub_10017940C()
{
  return sub_100174B38(&qword_10043E5B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Accel);
}

uint64_t sub_100179454()
{
  return sub_100174B38(&qword_10043F220, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Accel);
}

uint64_t sub_10017949C()
{
  return sub_100174B38(&qword_10043F228, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GyroSample);
}

uint64_t sub_1001794E4()
{
  return sub_100174B38(&qword_10043E5C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GyroSample);
}

uint64_t sub_10017952C()
{
  return sub_100174B38(&qword_10043E5B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GyroSample);
}

uint64_t sub_100179574()
{
  return sub_100174B38(&qword_10043F230, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GyroSample);
}

uint64_t sub_1001795BC()
{
  return sub_100174B38(&qword_10043F238, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Gyro);
}

uint64_t sub_100179604()
{
  return sub_100174B38(&qword_10043F240, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Gyro);
}

uint64_t sub_10017964C()
{
  return sub_100174B38(&qword_10043E5C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Gyro);
}

uint64_t sub_100179694()
{
  return sub_100174B38(&qword_10043F248, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Gyro);
}

uint64_t sub_1001796DC()
{
  return sub_100174B38(&qword_10043F250, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BaroSample);
}

uint64_t sub_100179724()
{
  return sub_100174B38(&qword_10043E5D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BaroSample);
}

uint64_t sub_10017976C()
{
  return sub_100174B38(&qword_10043E5D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BaroSample);
}

uint64_t sub_1001797B4()
{
  return sub_100174B38(&qword_10043F258, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BaroSample);
}

uint64_t sub_1001797FC()
{
  return sub_100174B38(&qword_10043F260, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Baro);
}

uint64_t sub_100179844()
{
  return sub_100174B38(&qword_10043F268, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Baro);
}

uint64_t sub_10017988C()
{
  return sub_100174B38(&qword_10043E5E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Baro);
}

uint64_t sub_1001798D4()
{
  return sub_100174B38(&qword_10043F270, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Baro);
}

uint64_t sub_10017991C()
{
  return sub_100174B38(&qword_10043F278, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
}

uint64_t sub_100179964()
{
  return sub_100174B38(&qword_10043F280, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
}

uint64_t sub_1001799AC()
{
  return sub_100174B38(&qword_10043E5E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
}

uint64_t sub_1001799F4()
{
  return sub_100174B38(&qword_10043F288, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
}

uint64_t sub_100179A3C()
{
  return sub_100174B38(&qword_10043F290, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation);
}

uint64_t sub_100179A84()
{
  return sub_100174B38(&qword_10043E650, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation);
}

uint64_t sub_100179ACC()
{
  return sub_100174B38(&qword_10043E5F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation);
}

uint64_t sub_100179B14()
{
  return sub_100174B38(&qword_10043F298, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation);
}

uint64_t sub_100179B5C()
{
  return sub_100174B38(&qword_10043F2A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData);
}

uint64_t sub_100179BA4()
{
  return sub_100174B38(&qword_10043F2A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData);
}

uint64_t sub_100179BEC()
{
  return sub_100174B38(&qword_10043E5F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData);
}

uint64_t sub_100179C34()
{
  return sub_100174B38(&qword_10043F2B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData);
}

uint64_t sub_100179C7C()
{
  return sub_100174B38(&qword_10043F2B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PressureSample);
}

uint64_t sub_100179CC4()
{
  return sub_100174B38(&qword_10043F2C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PressureSample);
}

uint64_t sub_100179D0C()
{
  return sub_100174B38(&qword_10043E600, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PressureSample);
}

uint64_t sub_100179D54()
{
  return sub_100174B38(&qword_10043F2C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PressureSample);
}

uint64_t sub_100179D9C()
{
  return sub_100174B38(&qword_10043F2D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo);
}

uint64_t sub_100179DE4()
{
  return sub_100174B38(&qword_10043F2D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo);
}

uint64_t sub_100179E2C()
{
  return sub_100174B38(&qword_10043E608, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo);
}

uint64_t sub_100179E74()
{
  return sub_100174B38(&qword_10043F2E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteInfo);
}

uint64_t sub_100179EBC()
{
  return sub_100174B38(&qword_10043F2E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate);
}

uint64_t sub_100179F04()
{
  return sub_100174B38(&qword_10043E658, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate);
}

uint64_t sub_100179F4C()
{
  return sub_100174B38(&qword_10043E610, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate);
}

uint64_t sub_100179F94()
{
  return sub_100174B38(&qword_10043F2F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate);
}

uint64_t sub_100179FDC()
{
  return sub_100174B38(&qword_10043F2F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo);
}

uint64_t sub_10017A024()
{
  return sub_100174B38(&qword_10043F300, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo);
}

uint64_t sub_10017A06C()
{
  return sub_100174B38(&qword_10043E618, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo);
}

uint64_t sub_10017A0B4()
{
  return sub_100174B38(&qword_10043F308, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo);
}

uint64_t sub_10017A0FC()
{
  return sub_100174B38(&qword_10043F310, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus);
}

uint64_t sub_10017A144()
{
  return sub_100174B38(&qword_10043F318, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus);
}

uint64_t sub_10017A18C()
{
  return sub_100174B38(&qword_10043E620, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus);
}

uint64_t sub_10017A1D4()
{
  return sub_100174B38(&qword_10043F320, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus);
}

uint64_t sub_10017A21C()
{
  return sub_100174B38(&qword_10043F328, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed);
}

uint64_t sub_10017A264()
{
  return sub_100174B38(&qword_10043F330, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed);
}

uint64_t sub_10017A2AC()
{
  return sub_100174B38(&qword_10043E628, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed);
}

uint64_t sub_10017A2F4()
{
  return sub_100174B38(&qword_10043F338, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed);
}

uint64_t sub_10017A33C()
{
  return sub_100174B38(&qword_10043F340, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading);
}

uint64_t sub_10017A384()
{
  return sub_100174B38(&qword_10043F348, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading);
}

uint64_t sub_10017A3CC()
{
  return sub_100174B38(&qword_10043E630, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading);
}

uint64_t sub_10017A414()
{
  return sub_100174B38(&qword_10043F350, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading);
}

uint64_t sub_10017A45C()
{
  return sub_100174B38(&qword_10043F358, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable);
}

uint64_t sub_10017A4A4()
{
  return sub_100174B38(&qword_10043F360, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable);
}

uint64_t sub_10017A4EC()
{
  return sub_100174B38(&qword_10043E638, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable);
}

uint64_t sub_10017A534()
{
  return sub_100174B38(&qword_10043F368, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable);
}

uint64_t sub_10017A57C()
{
  return sub_100174B38(&qword_10043F370, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed);
}

uint64_t sub_10017A5C4()
{
  return sub_100174B38(&qword_10043F378, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed);
}

uint64_t sub_10017A60C()
{
  return sub_100174B38(&qword_10043E640, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed);
}

uint64_t sub_10017A654()
{
  return sub_100174B38(&qword_10043F380, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed);
}

uint64_t sub_10017A69C()
{
  return sub_100174B38(&qword_10043F388, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Location);
}

uint64_t sub_10017A6E4()
{
  return sub_100174B38(&qword_10043F390, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Location);
}

uint64_t sub_10017A72C()
{
  return sub_100174B38(&qword_10043E648, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Location);
}

uint64_t sub_10017A774()
{
  return sub_100174B38(&qword_10043F398, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Location);
}

uint64_t sub_10017A7BC()
{
  return sub_100174B38(&qword_10043F3A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations);
}

uint64_t sub_10017A804()
{
  return sub_100174B38(&qword_10043F3A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations);
}

uint64_t sub_10017A84C()
{
  return sub_100174B38(&qword_10043E660, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations);
}

uint64_t sub_10017A894()
{
  return sub_100174B38(&qword_10043F3B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocations);
}

uint64_t sub_10017A8DC()
{
  return sub_100174B38(&qword_10043F3B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate);
}

uint64_t sub_10017A924()
{
  return sub_100174B38(&qword_10043F3C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate);
}

uint64_t sub_10017A96C()
{
  return sub_100174B38(&qword_10043E668, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate);
}

uint64_t sub_10017A9B4()
{
  return sub_100174B38(&qword_10043F3C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssStatusUpdate);
}

uint64_t sub_10017A9FC()
{
  return sub_100174B38(&qword_10043F3D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl);
}

uint64_t sub_10017AA44()
{
  return sub_100174B38(&qword_10043F3D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl);
}

uint64_t sub_10017AA8C()
{
  return sub_100174B38(&qword_10043E670, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl);
}

uint64_t sub_10017AAD4()
{
  return sub_100174B38(&qword_10043F3E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RhythmicStreamingControl);
}

uint64_t sub_10017AB1C()
{
  return sub_100174B38(&qword_10043F3E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
}

uint64_t sub_10017AB64()
{
  return sub_100174B38(&qword_10043F3F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
}

uint64_t sub_10017ABAC()
{
  return sub_100174B38(&qword_10043E678, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
}

uint64_t sub_10017ABF4()
{
  return sub_100174B38(&qword_10043F3F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
}

uint64_t sub_10017AC3C()
{
  return sub_100174B38(&qword_10043F400, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionState);
}

uint64_t sub_10017AC84()
{
  return sub_100174B38(&qword_10043F408, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionState);
}

uint64_t sub_10017ACCC()
{
  return sub_100174B38(&qword_10043E680, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionState);
}

uint64_t sub_10017AD14()
{
  return sub_100174B38(&qword_10043F410, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionState);
}

uint64_t sub_10017AD5C()
{
  return sub_100174B38(&qword_10043F418, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
}

uint64_t sub_10017ADA4()
{
  return sub_100174B38(&qword_10043F420, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
}

uint64_t sub_10017ADEC()
{
  return sub_100174B38(&qword_10043E688, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
}

uint64_t sub_10017AE34()
{
  return sub_100174B38(&qword_10043F428, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
}

uint64_t sub_10017AE7C()
{
  return sub_100174B38(&qword_10043F430, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver);
}

uint64_t sub_10017AEC4()
{
  return sub_100174B38(&qword_10043F438, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver);
}

uint64_t sub_10017AF0C()
{
  return sub_100174B38(&qword_10043E690, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver);
}

uint64_t sub_10017AF54()
{
  return sub_100174B38(&qword_10043F440, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateObserver);
}

uint64_t sub_10017AF9C()
{
  return sub_100174B38(&qword_10043F448, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
}

uint64_t sub_10017AFE4()
{
  return sub_100174B38(&qword_10043F450, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
}

uint64_t sub_10017B02C()
{
  return sub_100174B38(&qword_10043E698, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
}

uint64_t sub_10017B074()
{
  return sub_100174B38(&qword_10043F458, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
}

uint64_t sub_10017B0BC()
{
  return sub_100174B38(&qword_10043F460, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent);
}

uint64_t sub_10017B104()
{
  return sub_100174B38(&qword_10043F468, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent);
}

uint64_t sub_10017B14C()
{
  return sub_100174B38(&qword_10043E6A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent);
}

uint64_t sub_10017B194()
{
  return sub_100174B38(&qword_10043F470, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent);
}

uint64_t sub_10017B1DC()
{
  return sub_100174B38(&qword_10043F478, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator);
}

uint64_t sub_10017B224()
{
  return sub_100174B38(&qword_10043F480, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator);
}

uint64_t sub_10017B26C()
{
  return sub_100174B38(&qword_10043E6A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator);
}

uint64_t sub_10017B2B4()
{
  return sub_100174B38(&qword_10043F488, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator);
}

uint64_t sub_10017B2FC()
{
  return sub_100174B38(&qword_10043F490, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
}

uint64_t sub_10017B344()
{
  return sub_100174B38(&qword_10043F498, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
}

uint64_t sub_10017B38C()
{
  return sub_100174B38(&qword_10043E6B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
}

uint64_t sub_10017B3D4()
{
  return sub_100174B38(&qword_10043F4A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
}

uint64_t sub_10017B41C()
{
  return sub_100174B38(&qword_10043F4A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry);
}

uint64_t sub_10017B464()
{
  return sub_100174B38(&qword_10043F4B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry);
}

uint64_t sub_10017B4AC()
{
  return sub_100174B38(&qword_10043E6B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry);
}

uint64_t sub_10017B4F4()
{
  return sub_100174B38(&qword_10043F4B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Natalimetry);
}

uint64_t sub_10017B53C()
{
  return sub_100174B38(&qword_10043F4C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Timer);
}

uint64_t sub_10017B584()
{
  return sub_100174B38(&qword_10043F4C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Timer);
}

uint64_t sub_10017B5CC()
{
  return sub_100174B38(&qword_10043E6C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Timer);
}

uint64_t sub_10017B614()
{
  return sub_100174B38(&qword_10043F4D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Timer);
}

uint64_t sub_10017B65C()
{
  return sub_100174B38(&qword_10043F4D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel);
}

uint64_t sub_10017B6A4()
{
  return sub_100174B38(&qword_10043F4E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel);
}

uint64_t sub_10017B6EC()
{
  return sub_100174B38(&qword_10043E6C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel);
}

uint64_t sub_10017B734()
{
  return sub_100174B38(&qword_10043F4E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DigitalElevationModel);
}

uint64_t sub_10017B77C()
{
  return sub_100174B38(&qword_10043F4F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel);
}

uint64_t sub_10017B7C4()
{
  return sub_100174B38(&qword_10043F4F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel);
}

uint64_t sub_10017B80C()
{
  return sub_100174B38(&qword_10043E6D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel);
}

uint64_t sub_10017B854()
{
  return sub_100174B38(&qword_10043F500, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DirectionOfTravel);
}

uint64_t sub_10017B89C()
{
  return sub_100174B38(&qword_10043F508, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapVector);
}

uint64_t sub_10017B8E4()
{
  return sub_100174B38(&qword_10043F510, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapVector);
}

uint64_t sub_10017B92C()
{
  return sub_100174B38(&qword_10043E6D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapVector);
}

uint64_t sub_10017B974()
{
  return sub_100174B38(&qword_10043F518, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapVector);
}

uint64_t sub_10017B9BC()
{
  return sub_100174B38(&qword_10043F520, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
}

uint64_t sub_10017BA04()
{
  return sub_100174B38(&qword_10043F528, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
}

uint64_t sub_10017BA4C()
{
  return sub_100174B38(&qword_10043E6E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
}

uint64_t sub_10017BA94()
{
  return sub_100174B38(&qword_10043F530, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
}

uint64_t sub_10017BADC()
{
  return sub_100174B38(&qword_10043F538, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification);
}

uint64_t sub_10017BB24()
{
  return sub_100174B38(&qword_10043F540, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification);
}

uint64_t sub_10017BB6C()
{
  return sub_100174B38(&qword_10043E6E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification);
}

uint64_t sub_10017BBB4()
{
  return sub_100174B38(&qword_10043F548, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeNotification);
}

uint64_t sub_10017BBFC()
{
  return sub_100174B38(&qword_10043F550, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
}

uint64_t sub_10017BC44()
{
  return sub_100174B38(&qword_10043F558, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
}

uint64_t sub_10017BC8C()
{
  return sub_100174B38(&qword_10043E6F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
}

uint64_t sub_10017BCD4()
{
  return sub_100174B38(&qword_10043F560, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
}

uint64_t sub_10017BD1C()
{
  return sub_100174B38(&qword_10043F568, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint);
}

uint64_t sub_10017BD64()
{
  return sub_100174B38(&qword_10043F570, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint);
}

uint64_t sub_10017BDAC()
{
  return sub_100174B38(&qword_10043E6F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint);
}

uint64_t sub_10017BDF4()
{
  return sub_100174B38(&qword_10043F578, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPoint);
}

uint64_t sub_10017BE3C()
{
  return sub_100174B38(&qword_10043F580, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData);
}

uint64_t sub_10017BE84()
{
  return sub_100174B38(&qword_10043E708, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData);
}

uint64_t sub_10017BECC()
{
  return sub_100174B38(&qword_10043E700, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData);
}

uint64_t sub_10017BF14()
{
  return sub_100174B38(&qword_10043F588, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapsRouteHintData);
}

uint64_t sub_10017BF5C()
{
  return sub_100174B38(&qword_10043F590, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint);
}

uint64_t sub_10017BFA4()
{
  return sub_100174B38(&qword_10043F598, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint);
}

uint64_t sub_10017BFEC()
{
  return sub_100174B38(&qword_10043E710, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint);
}

uint64_t sub_10017C034()
{
  return sub_100174B38(&qword_10043F5A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint);
}

uint64_t sub_10017C07C()
{
  return sub_100174B38(&qword_10043F5A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification);
}

uint64_t sub_10017C0C4()
{
  return sub_100174B38(&qword_10043F5B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification);
}

uint64_t sub_10017C10C()
{
  return sub_100174B38(&qword_10043E718, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification);
}

uint64_t sub_10017C154()
{
  return sub_100174B38(&qword_10043F5B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification);
}

uint64_t sub_10017C19C()
{
  return sub_100174B38(&qword_10043F5C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState);
}

uint64_t sub_10017C1E4()
{
  return sub_100174B38(&qword_10043F5C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState);
}

uint64_t sub_10017C22C()
{
  return sub_100174B38(&qword_10043E720, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState);
}

uint64_t sub_10017C274()
{
  return sub_100174B38(&qword_10043F5D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState);
}

uint64_t sub_10017C2BC()
{
  return sub_100174B38(&qword_10043F5D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Battery);
}

uint64_t sub_10017C304()
{
  return sub_100174B38(&qword_10043F5E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Battery);
}

uint64_t sub_10017C34C()
{
  return sub_100174B38(&qword_10043E728, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Battery);
}

uint64_t sub_10017C394()
{
  return sub_100174B38(&qword_10043F5E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Battery);
}

uint64_t sub_10017C3DC()
{
  return sub_100174B38(&qword_10043F5F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus);
}

uint64_t sub_10017C424()
{
  return sub_100174B38(&qword_10043F5F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus);
}

uint64_t sub_10017C46C()
{
  return sub_100174B38(&qword_10043E730, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus);
}

uint64_t sub_10017C4B4()
{
  return sub_100174B38(&qword_10043F600, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus);
}

uint64_t sub_10017C4FC()
{
  return sub_100174B38(&qword_10043F608, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment);
}

uint64_t sub_10017C544()
{
  return sub_100174B38(&qword_10043F610, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment);
}

uint64_t sub_10017C58C()
{
  return sub_100174B38(&qword_10043E738, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment);
}

uint64_t sub_10017C5D4()
{
  return sub_100174B38(&qword_10043F618, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment);
}

uint64_t sub_10017C61C()
{
  return sub_100174B38(&qword_10043F620, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo);
}

uint64_t sub_10017C664()
{
  return sub_100174B38(&qword_10043F628, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo);
}

uint64_t sub_10017C6AC()
{
  return sub_100174B38(&qword_10043E740, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo);
}

uint64_t sub_10017C6F4()
{
  return sub_100174B38(&qword_10043F630, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentInfo);
}

uint64_t sub_10017C73C()
{
  return sub_100174B38(&qword_10043F638, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MagSample);
}

uint64_t sub_10017C784()
{
  return sub_100174B38(&qword_10043E750, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MagSample);
}

uint64_t sub_10017C7CC()
{
  return sub_100174B38(&qword_10043E748, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MagSample);
}

uint64_t sub_10017C814()
{
  return sub_100174B38(&qword_10043F640, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MagSample);
}

uint64_t sub_10017C85C()
{
  return sub_100174B38(&qword_10043F648, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer);
}

uint64_t sub_10017C8A4()
{
  return sub_100174B38(&qword_10043F650, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer);
}

uint64_t sub_10017C8EC()
{
  return sub_100174B38(&qword_10043E758, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer);
}

uint64_t sub_10017C934()
{
  return sub_100174B38(&qword_10043F658, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Magnetometer);
}

uint64_t sub_10017C97C()
{
  return sub_100174B38(&qword_10043F660, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Reset);
}

uint64_t sub_10017C9C4()
{
  return sub_100174B38(&qword_10043F668, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Reset);
}

uint64_t sub_10017CA0C()
{
  return sub_100174B38(&qword_10043E760, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Reset);
}

uint64_t sub_10017CA54()
{
  return sub_100174B38(&qword_10043F670, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Reset);
}

uint64_t sub_10017CA9C()
{
  return sub_100174B38(&qword_10043F678, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace);
}

uint64_t sub_10017CAE4()
{
  return sub_100174B38(&qword_10043F680, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace);
}

uint64_t sub_10017CB2C()
{
  return sub_100174B38(&qword_10043E768, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace);
}

uint64_t sub_10017CB74()
{
  return sub_100174B38(&qword_10043F688, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace);
}

uint64_t sub_10017CBBC()
{
  return sub_100174B38(&qword_10043F690, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState);
}

uint64_t sub_10017CC04()
{
  return sub_100174B38(&qword_10043F698, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState);
}

uint64_t sub_10017CC4C()
{
  return sub_100174B38(&qword_10043E770, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState);
}

uint64_t sub_10017CC94()
{
  return sub_100174B38(&qword_10043F6A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState);
}

uint64_t sub_10017CCDC()
{
  return sub_100174B38(&qword_10043F6A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
}

uint64_t sub_10017CD24()
{
  return sub_100174B38(&qword_10043F6B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
}

uint64_t sub_10017CD6C()
{
  return sub_100174B38(&qword_10043E778, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
}

uint64_t sub_10017CDB4()
{
  return sub_100174B38(&qword_10043F6B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
}

uint64_t sub_10017CDFC()
{
  return sub_100174B38(&qword_10043F6C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCount);
}

uint64_t sub_10017CE44()
{
  return sub_100174B38(&qword_10043F6C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCount);
}

uint64_t sub_10017CE8C()
{
  return sub_100174B38(&qword_10043E780, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCount);
}

uint64_t sub_10017CED4()
{
  return sub_100174B38(&qword_10043F6D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_StepCount);
}

uint64_t sub_10017CF1C()
{
  return sub_100174B38(&qword_10043F6D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
}

uint64_t sub_10017CF64()
{
  return sub_100174B38(&qword_10043F6E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
}

uint64_t sub_10017CFAC()
{
  return sub_100174B38(&qword_10043E788, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
}

uint64_t sub_10017CFF4()
{
  return sub_100174B38(&qword_10043F6E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
}

uint64_t sub_10017D03C()
{
  return sub_100174B38(&qword_10043F6F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
}

uint64_t sub_10017D084()
{
  return sub_100174B38(&qword_10043F6F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
}

uint64_t sub_10017D0CC()
{
  return sub_100174B38(&qword_10043E790, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
}

uint64_t sub_10017D114()
{
  return sub_100174B38(&qword_10043F700, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
}

uint64_t sub_10017D15C()
{
  return sub_100174B38(&qword_10043F708, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
}

uint64_t sub_10017D1A4()
{
  return sub_100174B38(&qword_10043F710, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
}

uint64_t sub_10017D1EC()
{
  return sub_100174B38(&qword_10043E798, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
}

uint64_t sub_10017D234()
{
  return sub_100174B38(&qword_10043F718, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
}

uint64_t sub_10017D27C()
{
  return sub_100174B38(&qword_10043F720, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample);
}

uint64_t sub_10017D2C4()
{
  return sub_100174B38(&qword_10043E7A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample);
}

uint64_t sub_10017D30C()
{
  return sub_100174B38(&qword_10043E7A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample);
}

uint64_t sub_10017D354()
{
  return sub_100174B38(&qword_10043F728, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_CompassTypeSample);
}

uint64_t sub_10017D39C()
{
  return sub_100174B38(&qword_10043F730, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Compass);
}

uint64_t sub_10017D3E4()
{
  return sub_100174B38(&qword_10043F738, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Compass);
}

uint64_t sub_10017D42C()
{
  return sub_100174B38(&qword_10043E7B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Compass);
}

uint64_t sub_10017D474()
{
  return sub_100174B38(&qword_10043F740, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Compass);
}

uint64_t sub_10017D4BC()
{
  return sub_100174B38(&qword_10043F748, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
}

uint64_t sub_10017D504()
{
  return sub_100174B38(&qword_10043F750, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
}

uint64_t sub_10017D54C()
{
  return sub_100174B38(&qword_10043E7B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
}

uint64_t sub_10017D594()
{
  return sub_100174B38(&qword_10043F758, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
}

uint64_t sub_10017D5DC()
{
  return sub_100174B38(&qword_10043F760, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
}

uint64_t sub_10017D624()
{
  return sub_100174B38(&qword_10043F768, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
}

uint64_t sub_10017D66C()
{
  return sub_100174B38(&qword_10043E7C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
}

uint64_t sub_10017D6B4()
{
  return sub_100174B38(&qword_10043F770, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
}

uint64_t sub_10017D6FC()
{
  return sub_100174B38(&qword_10043F778, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample);
}

uint64_t sub_10017D744()
{
  return sub_100174B38(&qword_10043E7D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample);
}

uint64_t sub_10017D78C()
{
  return sub_100174B38(&qword_10043E7C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample);
}

uint64_t sub_10017D7D4()
{
  return sub_100174B38(&qword_10043F780, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotionSample);
}

uint64_t sub_10017D81C()
{
  return sub_100174B38(&qword_10043F788, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion);
}

uint64_t sub_10017D864()
{
  return sub_100174B38(&qword_10043F790, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion);
}

uint64_t sub_10017D8AC()
{
  return sub_100174B38(&qword_10043E7D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion);
}

uint64_t sub_10017D8F4()
{
  return sub_100174B38(&qword_10043F798, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DeviceMotion);
}

uint64_t sub_10017D93C()
{
  return sub_100174B38(&qword_10043F7A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
}

uint64_t sub_10017D984()
{
  return sub_100174B38(&qword_10043F7A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
}

uint64_t sub_10017D9CC()
{
  return sub_100174B38(&qword_10043E7E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
}

uint64_t sub_10017DA14()
{
  return sub_100174B38(&qword_10043F7B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
}

uint64_t sub_10017DA5C()
{
  return sub_100174B38(&qword_10043F7B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData);
}

uint64_t sub_10017DAA4()
{
  return sub_100174B38(&qword_10043F7C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData);
}

uint64_t sub_10017DAEC()
{
  return sub_100174B38(&qword_10043E7E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData);
}

uint64_t sub_10017DB34()
{
  return sub_100174B38(&qword_10043F7C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GeomagneticModelData);
}

uint64_t sub_10017DB7C()
{
  return sub_100174B38(&qword_10043F7D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
}

uint64_t sub_10017DBC4()
{
  return sub_100174B38(&qword_10043E1B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
}

uint64_t sub_10017DC0C()
{
  return sub_100174B38(&qword_10043E7F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
}

uint64_t sub_10017DC54()
{
  return sub_100174B38(&qword_10043F7D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
}

uint64_t sub_10017DC9C()
{
  return sub_100174B38(&qword_10043F7E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState);
}

uint64_t sub_10017DCE4()
{
  return sub_100174B38(&qword_10043F7E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState);
}

uint64_t sub_10017DD2C()
{
  return sub_100174B38(&qword_10043E7F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState);
}

uint64_t sub_10017DD74()
{
  return sub_100174B38(&qword_10043F7F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState);
}

uint64_t sub_10017DDBC()
{
  return sub_100174B38(&qword_10043F7F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult);
}

uint64_t sub_10017DE04()
{
  return sub_100174B38(&qword_10043E1B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult);
}

uint64_t sub_10017DE4C()
{
  return sub_100174B38(&qword_10043E800, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult);
}

uint64_t sub_10017DE94()
{
  return sub_100174B38(&qword_10043F800, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult);
}

uint64_t sub_10017DEDC()
{
  return sub_100174B38(&qword_10043F808, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification);
}

uint64_t sub_10017DF24()
{
  return sub_100174B38(&qword_100439EA8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification);
}

uint64_t sub_10017DF6C()
{
  return sub_100174B38(&qword_10043E808, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification);
}

uint64_t sub_10017DFB4()
{
  return sub_100174B38(&qword_10043A678, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification);
}

uint64_t sub_10017DFFC()
{
  return sub_100174B38(&qword_10043F810, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction);
}

uint64_t sub_10017E044()
{
  return sub_100174B38(&qword_10043F818, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction);
}

uint64_t sub_10017E08C()
{
  return sub_100174B38(&qword_10043E810, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction);
}

uint64_t sub_10017E0D4()
{
  return sub_100174B38(&qword_10043F820, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction);
}

uint64_t sub_10017E11C()
{
  return sub_100174B38(&qword_10043F828, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
}

uint64_t sub_10017E164()
{
  return sub_100174B38(&qword_10043E820, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
}

uint64_t sub_10017E1AC()
{
  return sub_100174B38(&qword_10043E818, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
}

uint64_t sub_10017E1F4()
{
  return sub_100174B38(&qword_10043F830, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
}

uint64_t sub_10017E23C()
{
  return sub_100174B38(&qword_10043F838, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
}

uint64_t sub_10017E284()
{
  return sub_100174B38(&qword_10043E830, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
}

uint64_t sub_10017E2CC()
{
  return sub_100174B38(&qword_10043E828, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
}

uint64_t sub_10017E314()
{
  return sub_100174B38(&qword_10043F840, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuildingSection);
}

uint64_t sub_10017E35C()
{
  return sub_100174B38(&qword_10043F848, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
}

uint64_t sub_10017E3A4()
{
  return sub_100174B38(&qword_10043E840, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
}

uint64_t sub_10017E3EC()
{
  return sub_100174B38(&qword_10043E838, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
}

uint64_t sub_10017E434()
{
  return sub_100174B38(&qword_10043F850, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureBuilding);
}

uint64_t sub_10017E47C()
{
  return sub_100174B38(&qword_10043F858, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData);
}

uint64_t sub_10017E4C4()
{
  return sub_100174B38(&qword_10043F860, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData);
}

uint64_t sub_10017E50C()
{
  return sub_100174B38(&qword_10043E848, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData);
}

uint64_t sub_10017E554()
{
  return sub_100174B38(&qword_10043F868, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapBuildingData);
}

uint64_t sub_10017E59C()
{
  return sub_100174B38(&qword_10043F870, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
}

uint64_t sub_10017E5E4()
{
  return sub_100174B38(&qword_10043E860, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
}

uint64_t sub_10017E62C()
{
  return sub_100174B38(&qword_10043E850, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
}

uint64_t sub_10017E674()
{
  return sub_100174B38(&qword_10043F878, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch);
}

uint64_t sub_10017E6BC()
{
  return sub_100174B38(&qword_10043F880, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
}

uint64_t sub_10017E704()
{
  return sub_100174B38(&qword_10043F888, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
}

uint64_t sub_10017E74C()
{
  return sub_100174B38(&qword_10043E858, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
}

uint64_t sub_10017E794()
{
  return sub_100174B38(&qword_10043F890, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
}

uint64_t sub_10017E7DC()
{
  return sub_100174B38(&qword_10043F898, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna);
}

uint64_t sub_10017E824()
{
  return sub_100174B38(&qword_10043E878, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna);
}

uint64_t sub_10017E86C()
{
  return sub_100174B38(&qword_10043E868, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna);
}

uint64_t sub_10017E8B4()
{
  return sub_100174B38(&qword_10043F8A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna);
}

uint64_t sub_10017E8FC()
{
  return sub_100174B38(&qword_10043F8A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
}

uint64_t sub_10017E944()
{
  return sub_100174B38(&qword_10043F8B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
}

uint64_t sub_10017E98C()
{
  return sub_100174B38(&qword_10043E870, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
}

uint64_t sub_10017E9D4()
{
  return sub_100174B38(&qword_10043F8B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
}

uint64_t sub_10017EA1C()
{
  return sub_100174B38(&qword_10043F8C0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData);
}

uint64_t sub_10017EA64()
{
  return sub_100174B38(&qword_10043F8C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData);
}

uint64_t sub_10017EAAC()
{
  return sub_100174B38(&qword_10043E880, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData);
}

uint64_t sub_10017EAF4()
{
  return sub_100174B38(&qword_10043F8D0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapTropicalSavannaData);
}

uint64_t sub_10017EB3C()
{
  return sub_100174B38(&qword_10043F8D8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
}

uint64_t sub_10017EB84()
{
  return sub_100174B38(&qword_10043F8E0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
}

uint64_t sub_10017EBCC()
{
  return sub_100174B38(&qword_10043E888, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
}

uint64_t sub_10017EC14()
{
  return sub_100174B38(&qword_10043F8E8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
}

uint64_t sub_10017EC5C()
{
  return sub_100174B38(&qword_10043F8F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WristState);
}

uint64_t sub_10017ECA4()
{
  return sub_100174B38(&qword_10043F8F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WristState);
}

uint64_t sub_10017ECEC()
{
  return sub_100174B38(&qword_10043E890, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WristState);
}

uint64_t sub_10017ED34()
{
  return sub_100174B38(&qword_10043F900, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WristState);
}

uint64_t sub_10017ED7C()
{
  return sub_100174B38(&qword_10043F908, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchState);
}

uint64_t sub_10017EDC4()
{
  return sub_100174B38(&qword_10043F910, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchState);
}

uint64_t sub_10017EE0C()
{
  return sub_100174B38(&qword_10043E898, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchState);
}

uint64_t sub_10017EE54()
{
  return sub_100174B38(&qword_10043F918, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchState);
}

uint64_t sub_10017EE9C()
{
  return sub_100174B38(&qword_10043F920, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference);
}

uint64_t sub_10017EEE4()
{
  return sub_100174B38(&qword_10043F928, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference);
}

uint64_t sub_10017EF2C()
{
  return sub_100174B38(&qword_10043E8A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference);
}

uint64_t sub_10017EF74()
{
  return sub_100174B38(&qword_10043F930, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference);
}

uint64_t sub_10017EFBC()
{
  return sub_100174B38(&qword_10043F938, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);
}

uint64_t sub_10017F004()
{
  return sub_100174B38(&qword_10043F940, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);
}

uint64_t sub_10017F04C()
{
  return sub_100174B38(&qword_10043E8A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);
}

uint64_t sub_10017F094()
{
  return sub_100174B38(&qword_10043F948, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit);
}

uint64_t sub_10017F0DC()
{
  return sub_100174B38(&qword_10043F950, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
}

uint64_t sub_10017F124()
{
  return sub_100174B38(&qword_10043F958, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
}

uint64_t sub_10017F16C()
{
  return sub_100174B38(&qword_10043E8B0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
}

uint64_t sub_10017F1B4()
{
  return sub_100174B38(&qword_10043F960, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_OutdoorUpdate);
}

uint64_t sub_10017F1FC()
{
  return sub_100174B38(&qword_10043F968, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);
}

uint64_t sub_10017F244()
{
  return sub_100174B38(&qword_10043F970, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);
}

uint64_t sub_10017F28C()
{
  return sub_100174B38(&qword_10043E8B8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);
}

uint64_t sub_10017F2D4()
{
  return sub_100174B38(&qword_10043F978, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample);
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationReferenceFrameType()
{
  return &type metadata for CLP_LogEntry_PrivateData_ClientLocationReferenceFrameType;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_LocationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_LocationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017F490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_LocationType()
{
  return &type metadata for CLP_LogEntry_PrivateData_LocationType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_ClientSatelliteConstellation()
{
  return &type metadata for CLP_LogEntry_PrivateData_ClientSatelliteConstellation;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_BatchedLocationFixType()
{
  return &type metadata for CLP_LogEntry_PrivateData_BatchedLocationFixType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_GnssModeOfOperation()
{
  return &type metadata for CLP_LogEntry_PrivateData_GnssModeOfOperation;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_RhythmicGnssWakeMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_RhythmicGnssWakeMode;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_BatchMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_BatchMode;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_OperatingMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_OperatingMode;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_PipelineOperatingMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_PipelineOperatingMode;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_DominantMotionModeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xB9) {
    goto LABEL_17;
  }
  if (a2 + 71 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 71) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 71;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 71;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 71;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x48;
  int v8 = v6 - 72;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_DominantMotionModeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 71 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 71) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xB9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xB8)
  {
    unsigned int v6 = ((a2 - 185) >> 8) + 1;
    *unint64_t result = a2 + 71;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017F6A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 71;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DominantMotionModeType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DominantMotionModeType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityType()
{
  return &type metadata for CLP_LogEntry_PrivateData_ReachabilityType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_BatteryChargerType()
{
  return &type metadata for CLP_LogEntry_PrivateData_BatteryChargerType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironmentFidelityLevel()
{
  return &type metadata for CLP_LogEntry_PrivateData_SignalEnvironmentFidelityLevel;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompassCalibrationLevel()
{
  return &type metadata for CLP_LogEntry_PrivateData_MotionTypeCompassCalibrationLevel;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_SensorFusionMode;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPointMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_WifiAccessPointMode;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WifiRfBand()
{
  return &type metadata for CLP_LogEntry_PrivateData_WifiRfBand;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WifiScanType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WifiScanType;
}

uint64_t _s10ALProtobuf45CLP_LogEntry_PrivateData_WifiNotificationTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10ALProtobuf45CLP_LogEntry_PrivateData_WifiNotificationTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017F8C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WifiNotificationType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WifiNotificationType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_LocationServicesEnabled()
{
  return &type metadata for CLP_LogEntry_PrivateData_LocationServicesEnabled;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DataAvailability()
{
  return &type metadata for CLP_LogEntry_PrivateData_DataAvailability;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_IndoorOutdoorType()
{
  return &type metadata for CLP_LogEntry_PrivateData_IndoorOutdoorType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_IndoorOutdoorConfidence()
{
  return &type metadata for CLP_LogEntry_PrivateData_IndoorOutdoorConfidence;
}

uint64_t sub_10017F940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017F954);
}

uint64_t sub_10017F958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017F96C);
}

uint64_t sub_10017F970()
{
  return sub_10019847C();
}

uint64_t sub_10017F994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017F9A8);
}

uint64_t sub_10017F9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_10017F9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017F9C8);
}

uint64_t sub_10017F9C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

void sub_10017F9D4()
{
}

uint64_t sub_10017FA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017FA14);
}

uint64_t sub_10017FA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017FA2C);
}

uint64_t *sub_10017FA34(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    int v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      int v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      char v20 = &v10[v19];
      char v21 = &v11[v19];
      *(void *)char v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      int v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)int v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    int v27 = (char *)a1 + v25;
    int v28 = (char *)a2 + v25;
    *(_DWORD *)int v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    char v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    *(_DWORD *)char v29 = *(_DWORD *)v30;
    v29[4] = v30[4];
    uint64_t v31 = a3[8];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
  }
  return a1;
}

uint64_t sub_10017FC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_10017FD78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    int v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    char v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[8];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  return a1;
}

uint64_t sub_10017FF78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    int v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    char v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[8];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  return a1;
}

uint64_t sub_100180178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018018C);
}

uint64_t sub_10018018C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_100180198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001801AC);
}

uint64_t sub_1001801AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

uint64_t *sub_1001801B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E458);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      char v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      uint64_t v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_1001803D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v9(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6, v5);
  }
  return result;
}

void *sub_1001804D4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    char v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_1001806A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    char v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10018085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100180870);
}

uint64_t sub_100180874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100180888);
}

uint64_t *sub_10018088C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      char v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
    v29[4] = v30[4];
  }
  return a1;
}

uint64_t sub_100180AC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    char v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  return a1;
}

uint64_t sub_100180CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 24);
  v7(a1, a2, v6);
  uint64_t v51 = a1;
  uint64_t v52 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v53 = a2;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v38 = v11[5];
      uint64_t v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      char v41 = v40[8];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v41;
      uint64_t v42 = v11[6];
      uint64_t v43 = &v9[v42];
      uint64_t v44 = &v10[v42];
      char v45 = v44[8];
      *(void *)uint64_t v43 = *(void *)v44;
      v43[8] = v45;
      uint64_t v46 = v11[7];
      uint64_t v47 = &v9[v46];
      uint64_t v48 = &v10[v46];
      char v49 = v48[8];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v49;
      goto LABEL_7;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v28 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  char v19 = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v19;
  uint64_t v20 = v11[6];
  char v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  char v23 = v22[8];
  *(void *)char v21 = *(void *)v22;
  v21[8] = v23;
  uint64_t v24 = v11[7];
  uint64_t v25 = &v9[v24];
  uint64_t v26 = &v10[v24];
  char v27 = v26[8];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v27;
  (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t result = v51;
  uint64_t v30 = *(int *)(v52 + 24);
  uint64_t v31 = v51 + v30;
  uint64_t v32 = (int *)(v53 + v30);
  int v33 = *v32;
  *(unsigned char *)(v31 + 4) = *((unsigned char *)v32 + 4);
  *(_DWORD *)uint64_t v31 = v33;
  uint64_t v34 = *(int *)(v52 + 28);
  uint64_t v35 = v51 + v34;
  int v36 = (int *)(v53 + v34);
  int v37 = *v36;
  *(unsigned char *)(v35 + 4) = *((unsigned char *)v36 + 4);
  *(_DWORD *)uint64_t v35 = v37;
  return result;
}

uint64_t sub_100180F84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    char v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    char v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  return a1;
}

uint64_t sub_100181168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 40);
  v7(a1, a2, v6);
  uint64_t v43 = a1;
  uint64_t v44 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v45 = a2;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v33 = v11[5];
      uint64_t v34 = &v9[v33];
      uint64_t v35 = &v10[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      uint64_t v36 = v11[6];
      int v37 = &v9[v36];
      uint64_t v38 = &v10[v36];
      *(void *)int v37 = *(void *)v38;
      v37[8] = v38[8];
      uint64_t v39 = v11[7];
      uint64_t v40 = &v9[v39];
      char v41 = &v10[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      goto LABEL_7;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v25 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = v11[6];
  uint64_t v20 = &v9[v19];
  char v21 = &v10[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = v11[7];
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t result = v43;
  uint64_t v27 = *(int *)(v44 + 24);
  uint64_t v28 = *(int *)(v44 + 28);
  uint64_t v29 = v43 + v27;
  uint64_t v30 = v45 + v27;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(unsigned char *)(v29 + 4) = *(unsigned char *)(v30 + 4);
  uint64_t v31 = v43 + v28;
  uint64_t v32 = v45 + v28;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  return result;
}

uint64_t sub_100181444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100181458);
}

uint64_t sub_100181458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_100181464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100181478);
}

uint64_t sub_100181478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

void sub_100181484()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100181574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100181588);
}

uint64_t sub_10018158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001815A0);
}

uint64_t sub_1001815B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001815CC);
}

uint64_t sub_1001815D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001815E4);
}

uint64_t sub_1001815E8()
{
  return sub_100099E94();
}

uint64_t sub_1001815F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018160C);
}

uint64_t sub_100181610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100181624);
}

uint64_t sub_100181628()
{
  return sub_1001AC9B0();
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation.ClientLocationSuitabilityType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocation.ClientLocationSuitabilityType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation.LocationIntegrityType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocation.LocationIntegrityType;
}

uint64_t sub_100181658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018166C);
}

uint64_t sub_100181670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100181684);
}

uint64_t sub_100181688()
{
  return sub_1001ABF9C();
}

uint64_t sub_1001816A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001816B8);
}

uint64_t sub_1001816BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001816D0);
}

void *sub_1001816D4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)a1 + v11;
    int v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    int v15 = (char *)a1 + v12;
    uint64_t v16 = (char *)a2 + v12;
    *(_DWORD *)int v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    char v21 = (char *)a1 + v18;
    uint64_t v22 = (char *)a2 + v18;
    LODWORD(v19) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)char v21 = v19;
    uint64_t v23 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  }
  return a1;
}

uint64_t sub_100181834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t sub_100181944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = v26;
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100181A64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t sub_100181B74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t sub_100181C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100181C98);
}

uint64_t sub_100181C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100181CB0);
}

uint64_t sub_100181CB4()
{
  return sub_1001974E0();
}

uint64_t sub_100181CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100181CDC);
}

uint64_t sub_100181CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100181CF4);
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.MatchQualityType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.MatchQualityType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.UndulationModelType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.UndulationModelType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.ClientLocationOriginDeviceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.ClientLocationOriginDeviceType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.GnssContent()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.GnssContent;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.PositionContextStateType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.PositionContextStateType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.MapMatcherType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.MapMatcherType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.LoiLocationSourceAccuracy()
{
  return &type metadata for CLP_LogEntry_PrivateData_DaemonLocationPrivate.LoiLocationSourceAccuracy;
}

void *sub_100181D68(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  }
  return a1;
}

uint64_t sub_100181E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_100181F48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = v10;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100182018(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1001820E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  return a1;
}

uint64_t sub_1001821A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001821BC);
}

uint64_t sub_1001821BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) <= 4u) {
      int v10 = 4;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
    }
    unsigned int v11 = v10 - 4;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 32)) >= 4u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100182284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182298);
}

uint64_t sub_100182298(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 4;
  }
  return result;
}

uint64_t sub_100182354()
{
  return sub_1001ABF9C();
}

uint64_t sub_100182384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100182398);
}

uint64_t sub_10018239C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001823B0);
}

uint64_t sub_1001823B4()
{
  return sub_100099E94();
}

uint64_t sub_1001823DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001823F0);
}

uint64_t sub_1001823F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182408);
}

uint64_t sub_10018240C()
{
  return sub_1001ABF9C();
}

uint64_t sub_100182424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100182438);
}

uint64_t sub_10018243C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182450);
}

uint64_t *sub_100182454(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    int v10 = (char *)a1 + v8;
    unsigned int v11 = (char *)a2 + v8;
    *(void *)int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100182548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  unsigned int v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001825E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001826A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_100182734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001827D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001827EC);
}

uint64_t sub_1001827F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182804);
}

uint64_t sub_100182808()
{
  return sub_100099E94();
}

uint64_t sub_10018281C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100182830);
}

uint64_t sub_100182834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182848);
}

uint64_t sub_10018284C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100182860);
}

uint64_t sub_100182864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182878);
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_Location.SignalQualityType()
{
  return &type metadata for CLP_LogEntry_PrivateData_Location.SignalQualityType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_Location.MotionDetectedType()
{
  return &type metadata for CLP_LogEntry_PrivateData_Location.MotionDetectedType;
}

uint64_t *sub_10018289C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100182990(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100182A10(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100182AB0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100182B5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100182BD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100182C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100182C88);
}

uint64_t sub_100182C88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100182D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100182D4C);
}

void *sub_100182D4C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100182DF4()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100182E90(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v10[4] = v11[4];
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_100182F94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100183048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100183104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001831B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)(v9 + 4) = *(unsigned char *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10018326C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100183280);
}

uint64_t sub_100183284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100183298);
}

uint64_t sub_10018329C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100183350(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10018341C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100183498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100183514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100183590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10018360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100183620);
}

uint64_t sub_100183624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100183638);
}

uint64_t sub_10018363C()
{
  return sub_1001AC9B0();
}

uint64_t sub_100183648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018365C);
}

uint64_t sub_100183660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100183674);
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity.MountedStateType()
{
  return &type metadata for CLP_LogEntry_PrivateData_MotionActivity.MountedStateType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity.ConfidenceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_MotionActivity.ConfidenceType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity.VehicleExitStateType()
{
  return &type metadata for CLP_LogEntry_PrivateData_MotionActivity.VehicleExitStateType;
}

uint64_t *sub_1001836A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  return sub_100190994(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, &qword_10043E4B8);
}

uint64_t sub_1001836C8(uint64_t a1, uint64_t a2)
{
  return sub_100190CC0(a1, a2, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity);
}

uint64_t sub_1001836E0(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100190E4C(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, &qword_10043E4B8);
}

uint64_t sub_100183700(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197754(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, &qword_10043E4B8);
}

uint64_t sub_100183734(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100191158(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, &qword_10043E4B8);
}

uint64_t sub_100183754(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197BCC(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity, &qword_10043E4B8);
}

uint64_t sub_100183788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018379C);
}

uint64_t sub_10018379C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E4B8);
}

uint64_t sub_1001837A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001837BC);
}

uint64_t sub_1001837BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E4B8);
}

void sub_1001837C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001837E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_10018383C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = a3[7];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v16 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_100002ED4(&qword_10043E458);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v8(v13, v14, v7);
      uint64_t v19 = v15[5];
      uint64_t v20 = &v13[v19];
      uint64_t v21 = &v14[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v15[6];
      uint64_t v23 = &v13[v22];
      uint64_t v24 = &v14[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v15[7];
      char v26 = &v13[v25];
      uint64_t v27 = &v14[v25];
      *(void *)char v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
    }
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_100183A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_100183B60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v12, (uint64_t)v13, v6);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100183D40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 24);
  v7(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  uint64_t v48 = a2;
  char v49 = a3;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v16 + 48);
  uint64_t v47 = v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17((uint64_t)v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v47, v14, v6);
      uint64_t v21 = v15[5];
      uint64_t v22 = v47 + v21;
      uint64_t v23 = &v14[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v15[6];
      uint64_t v26 = v47 + v25;
      uint64_t v27 = &v14[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      uint64_t v29 = v15[7];
      uint64_t v30 = v47 + v29;
      uint64_t v31 = &v14[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v47, 0, 1, v15);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v47;
  }
  else
  {
    if (!v18)
    {
      v7(v47, (uint64_t)v14, v6);
      uint64_t v33 = v15[5];
      uint64_t v34 = v47 + v33;
      uint64_t v35 = &v14[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v15[6];
      uint64_t v38 = v47 + v37;
      uint64_t v39 = &v14[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      uint64_t v41 = v15[7];
      uint64_t v42 = v47 + v41;
      uint64_t v43 = &v14[v41];
      char v44 = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = v44;
      goto LABEL_9;
    }
    sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v47;
  }
  memcpy(v20, v14, v19);
LABEL_9:
  *(unsigned char *)(a1 + v49[8]) = *(unsigned char *)(v48 + v49[8]);
  return a1;
}

uint64_t sub_10018404C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v12, (uint64_t)v13, v6);
    uint64_t v17 = v14[5];
    int v18 = &v12[v17];
    size_t v19 = &v13[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    char v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10018422C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v15 + 48);
  uint64_t v40 = v12;
  LODWORD(v12) = v16(v12, 1, v14);
  int v17 = v16((uint64_t)v13, 1, v14);
  if (v12)
  {
    if (!v17)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v13, v6);
      uint64_t v20 = v14[5];
      uint64_t v21 = v40 + v20;
      uint64_t v22 = &v13[v20];
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = v22[8];
      uint64_t v23 = v14[6];
      uint64_t v24 = v40 + v23;
      uint64_t v25 = &v13[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v25[8];
      uint64_t v26 = v14[7];
      uint64_t v27 = v40 + v26;
      char v28 = &v13[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = v28[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v15 + 56))(v40, 0, 1, v14);
      goto LABEL_9;
    }
    size_t v18 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    size_t v19 = (void *)v40;
  }
  else
  {
    if (!v17)
    {
      v7(v40, (uint64_t)v13, v6);
      uint64_t v29 = v14[5];
      uint64_t v30 = v40 + v29;
      uint64_t v31 = &v13[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v31[8];
      uint64_t v32 = v14[6];
      uint64_t v33 = v40 + v32;
      uint64_t v34 = &v13[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = v34[8];
      uint64_t v35 = v14[7];
      uint64_t v36 = v40 + v35;
      uint64_t v37 = &v13[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      *(unsigned char *)(v36 + 8) = v37[8];
      goto LABEL_9;
    }
    sub_10015B354(v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v18 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    size_t v19 = (void *)v40;
  }
  memcpy(v19, v13, v18);
LABEL_9:
  *(unsigned char *)(a1 + v42[8]) = *(unsigned char *)(v41 + v42[8]);
  return a1;
}

uint64_t sub_100184534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100184548);
}

uint64_t sub_100184548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 183)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 0x48u) {
      int v10 = 72;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 72;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 0x48u) {
      return v11;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v12 = sub_100002ED4(&qword_10043E458);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 28);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10018467C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100184690);
}

uint64_t sub_100184690(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 183)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 72;
  }
  else
  {
    uint64_t v11 = sub_100002ED4(&qword_10043E458);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1001847BC()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1001848B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8((char *)a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    uint64_t v52 = v8;
    uint64_t v53 = v7;
    if (v51(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      int v17 = &v10[v16];
      size_t v18 = &v11[v16];
      *(void *)int v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    char v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002ED4(&qword_10043E4C0);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v52(v29, v30, v7);
      v29[v31[5]] = v30[v31[5]];
      uint64_t v34 = v31[6];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      v35[8] = v36[8];
      *(void *)uint64_t v35 = *(void *)v36;
      uint64_t v37 = v31[7];
      uint64_t v38 = &v29[v37];
      uint64_t v39 = &v30[v37];
      if (v51(&v30[v37], 1, v12))
      {
        uint64_t v40 = sub_100002ED4(&qword_10043E458);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        v52(v38, v39, v53);
        uint64_t v41 = v12[5];
        uint64_t v42 = &v38[v41];
        uint64_t v43 = &v39[v41];
        *(void *)uint64_t v42 = *(void *)v43;
        v42[8] = v43[8];
        uint64_t v44 = v12[6];
        uint64_t v45 = &v38[v44];
        uint64_t v46 = &v39[v44];
        *(void *)uint64_t v45 = *(void *)v46;
        v45[8] = v46[8];
        uint64_t v47 = v12[7];
        uint64_t v48 = &v38[v47];
        char v49 = &v39[v47];
        *(void *)uint64_t v48 = *(void *)v49;
        v48[8] = v49[8];
        (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v38, 0, 1, v12);
      }
      v29[v31[8]] = v30[v31[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return a1;
}

uint64_t sub_100184CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v12(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6)) {
    v12(v5, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    v12(v8, v4);
    uint64_t v11 = v8 + *(int *)(v9 + 28);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v11, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v4);
    }
  }
  return result;
}

uint64_t sub_100184E98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v54 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v53 = (void (*)(char *, char *, uint64_t))v7;
  uint64_t v52 = v6;
  if (v51(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    size_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)size_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v54;
  uint64_t v26 = v54 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  char v28 = (char *)(v54 + v24);
  uint64_t v29 = (char *)(a2 + v24);
  uint64_t v30 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E4C0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v12;
    v53(v28, v29, v52);
    v28[v30[5]] = v29[v30[5]];
    uint64_t v33 = v30[6];
    uint64_t v34 = &v28[v33];
    uint64_t v35 = &v29[v33];
    v34[8] = v35[8];
    *(void *)uint64_t v34 = *(void *)v35;
    uint64_t v36 = v30[7];
    uint64_t v37 = &v28[v36];
    uint64_t v38 = &v29[v36];
    if (v51(&v29[v36], 1, v11))
    {
      uint64_t v39 = sub_100002ED4(&qword_10043E458);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      v53(v37, v38, v52);
      uint64_t v40 = v11[5];
      uint64_t v41 = &v37[v40];
      uint64_t v42 = &v38[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      uint64_t v43 = v11[6];
      uint64_t v44 = &v37[v43];
      uint64_t v45 = &v38[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v11[7];
      uint64_t v47 = &v37[v46];
      uint64_t v48 = &v38[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(v37, 0, 1, v11);
    }
    v28[v30[8]] = v29[v30[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
    return v54;
  }
  return v25;
}

uint64_t sub_100185284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v110 + 24);
  v109(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  uint64_t v108 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v8, v9, v112);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v109)(v8, v9, v112);
  uint64_t v49 = v10[5];
  uint64_t v50 = &v8[v49];
  uint64_t v51 = &v9[v49];
  char v52 = v51[8];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v52;
  uint64_t v53 = v10[6];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  char v56 = v55[8];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v56;
  uint64_t v57 = v10[7];
  char v58 = &v8[v57];
  int v59 = &v9[v57];
  char v60 = v59[8];
  *(void *)char v58 = *(void *)v59;
  v58[8] = v60;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (int *)(a2 + v28);
  int v31 = *v30;
  *(unsigned char *)(v29 + 4) = *((unsigned char *)v30 + 4);
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[7];
  uint64_t v113 = a1;
  uint64_t v33 = (char *)(a1 + v32);
  uint64_t v34 = (char *)(a2 + v32);
  uint64_t v35 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, int *))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      uint64_t v111 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v111(v33, v34, v112);
      v33[v35[5]] = v34[v35[5]];
      uint64_t v40 = v35[6];
      uint64_t v41 = &v33[v40];
      uint64_t v42 = &v34[v40];
      char v43 = v42[8];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v43;
      uint64_t v44 = v35[7];
      uint64_t v45 = &v33[v44];
      uint64_t v46 = &v34[v44];
      if (v12(&v34[v44], 1, v10))
      {
        uint64_t v47 = sub_100002ED4(&qword_10043E458);
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        v111(v45, v46, v112);
        uint64_t v82 = v10[5];
        uint64_t v83 = &v45[v82];
        uint64_t v84 = &v46[v82];
        char v85 = v84[8];
        *(void *)uint64_t v83 = *(void *)v84;
        v83[8] = v85;
        uint64_t v86 = v10[6];
        uint64_t v87 = &v45[v86];
        uint64_t v88 = &v46[v86];
        char v89 = v88[8];
        *(void *)uint64_t v87 = *(void *)v88;
        v87[8] = v89;
        uint64_t v90 = v10[7];
        uint64_t v91 = &v45[v90];
        uint64_t v92 = &v46[v90];
        char v93 = v92[8];
        *(void *)uint64_t v91 = *(void *)v92;
        v91[8] = v93;
        (*(void (**)(char *, void, uint64_t, int *))(v108 + 56))(v45, 0, 1, v10);
      }
      v33[v35[8]] = v34[v35[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
      return v113;
    }
LABEL_13:
    uint64_t v48 = sub_100002ED4(&qword_10043E4C0);
    memcpy(v33, v34, *(void *)(*(void *)(v48 - 8) + 64));
    return v113;
  }
  if (v39)
  {
    sub_10015B354((uint64_t)v33, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v109)(v33, v34, v112);
  v33[v35[5]] = v34[v35[5]];
  uint64_t v61 = v35[6];
  uint64_t v62 = &v33[v61];
  uint64_t v63 = &v34[v61];
  char v64 = v63[8];
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v64;
  uint64_t v65 = v35[7];
  uint64_t v66 = &v33[v65];
  uint64_t v67 = &v34[v65];
  int v68 = v12(&v33[v65], 1, v10);
  int v69 = v12(v67, 1, v10);
  if (!v68)
  {
    if (!v69)
    {
      ((void (*)(char *, char *, uint64_t))v109)(v66, v67, v112);
      uint64_t v96 = v10[5];
      int v97 = &v66[v96];
      uint64_t v98 = &v67[v96];
      char v99 = v98[8];
      *(void *)int v97 = *(void *)v98;
      v97[8] = v99;
      uint64_t v100 = v10[6];
      uint64_t v101 = &v66[v100];
      uint64_t v102 = &v67[v100];
      char v103 = v102[8];
      *(void *)uint64_t v101 = *(void *)v102;
      v101[8] = v103;
      uint64_t v104 = v10[7];
      uint64_t v105 = &v66[v104];
      uint64_t v106 = &v67[v104];
      char v107 = v106[8];
      *(void *)uint64_t v105 = *(void *)v106;
      v105[8] = v107;
      goto LABEL_24;
    }
    sub_10015B354((uint64_t)v66, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_23;
  }
  if (v69)
  {
LABEL_23:
    uint64_t v95 = sub_100002ED4(&qword_10043E458);
    memcpy(v66, v67, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v66, v67, v112);
  uint64_t v70 = v10[5];
  uint64_t v71 = &v66[v70];
  uint64_t v72 = &v67[v70];
  char v73 = v72[8];
  *(void *)uint64_t v71 = *(void *)v72;
  v71[8] = v73;
  uint64_t v74 = v10[6];
  uint64_t v75 = &v66[v74];
  uint64_t v76 = &v67[v74];
  char v77 = v76[8];
  *(void *)uint64_t v75 = *(void *)v76;
  v75[8] = v77;
  uint64_t v78 = v10[7];
  uint64_t v79 = &v66[v78];
  uint64_t v80 = &v67[v78];
  char v81 = v80[8];
  *(void *)uint64_t v79 = *(void *)v80;
  v79[8] = v81;
  (*(void (**)(char *, void, uint64_t, int *))(v108 + 56))(v66, 0, 1, v10);
LABEL_24:
  uint64_t result = v113;
  v33[v35[8]] = v34[v35[8]];
  return result;
}

uint64_t sub_100185984(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v54 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v53 = (void (*)(char *, char *, uint64_t))v7;
  uint64_t v52 = v6;
  if (v51(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v54;
  uint64_t v26 = v54 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = (char *)(v54 + v24);
  uint64_t v29 = (char *)(a2 + v24);
  uint64_t v30 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E4C0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v12;
    v53(v28, v29, v52);
    v28[v30[5]] = v29[v30[5]];
    uint64_t v33 = v30[6];
    uint64_t v34 = &v28[v33];
    uint64_t v35 = &v29[v33];
    v34[8] = v35[8];
    *(void *)uint64_t v34 = *(void *)v35;
    uint64_t v36 = v30[7];
    uint64_t v37 = &v28[v36];
    int v38 = &v29[v36];
    if (v51(&v29[v36], 1, v11))
    {
      uint64_t v39 = sub_100002ED4(&qword_10043E458);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      v53(v37, v38, v52);
      uint64_t v40 = v11[5];
      uint64_t v41 = &v37[v40];
      uint64_t v42 = &v38[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      uint64_t v43 = v11[6];
      uint64_t v44 = &v37[v43];
      uint64_t v45 = &v38[v43];
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v11[7];
      uint64_t v47 = &v37[v46];
      uint64_t v48 = &v38[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(v37, 0, 1, v11);
    }
    v28[v30[8]] = v29[v30[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
    return v54;
  }
  return v25;
}

uint64_t sub_100185D70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v92 + 40);
  v91(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  uint64_t v90 = v11;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v8, v9, v94);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v91)(v8, v9, v94);
  uint64_t v44 = v10[5];
  uint64_t v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = v10[6];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  uint64_t v50 = v10[7];
  uint64_t v51 = &v8[v50];
  uint64_t v52 = &v9[v50];
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v52[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v95 = a1;
  uint64_t v29 = (char *)(a1 + v26);
  uint64_t v30 = (char *)(a2 + v26);
  uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      char v93 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v93(v29, v30, v94);
      v29[v31[5]] = v30[v31[5]];
      uint64_t v36 = v31[6];
      uint64_t v37 = &v29[v36];
      int v38 = &v30[v36];
      v37[8] = v38[8];
      *(void *)uint64_t v37 = *(void *)v38;
      uint64_t v39 = v31[7];
      uint64_t v40 = &v29[v39];
      uint64_t v41 = &v30[v39];
      if (v12(&v30[v39], 1, v10))
      {
        uint64_t v42 = sub_100002ED4(&qword_10043E458);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v93(v40, v41, v94);
        uint64_t v70 = v10[5];
        uint64_t v71 = &v40[v70];
        uint64_t v72 = &v41[v70];
        *(void *)uint64_t v71 = *(void *)v72;
        v71[8] = v72[8];
        uint64_t v73 = v10[6];
        uint64_t v74 = &v40[v73];
        uint64_t v75 = &v41[v73];
        *(void *)uint64_t v74 = *(void *)v75;
        v74[8] = v75[8];
        uint64_t v76 = v10[7];
        char v77 = &v40[v76];
        uint64_t v78 = &v41[v76];
        *(void *)char v77 = *(void *)v78;
        v77[8] = v78[8];
        (*(void (**)(char *, void, uint64_t, int *))(v90 + 56))(v40, 0, 1, v10);
      }
      v29[v31[8]] = v30[v31[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
      return v95;
    }
LABEL_13:
    uint64_t v43 = sub_100002ED4(&qword_10043E4C0);
    memcpy(v29, v30, *(void *)(*(void *)(v43 - 8) + 64));
    return v95;
  }
  if (v35)
  {
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutUpdate);
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v91)(v29, v30, v94);
  v29[v31[5]] = v30[v31[5]];
  uint64_t v53 = v31[6];
  uint64_t v54 = &v29[v53];
  uint64_t v55 = &v30[v53];
  v54[8] = v55[8];
  *(void *)uint64_t v54 = *(void *)v55;
  uint64_t v56 = v31[7];
  uint64_t v57 = &v29[v56];
  char v58 = &v30[v56];
  int v59 = v12(&v29[v56], 1, v10);
  int v60 = v12(v58, 1, v10);
  if (!v59)
  {
    if (!v60)
    {
      ((void (*)(char *, char *, uint64_t))v91)(v57, v58, v94);
      uint64_t v81 = v10[5];
      uint64_t v82 = &v57[v81];
      uint64_t v83 = &v58[v81];
      *(void *)uint64_t v82 = *(void *)v83;
      v82[8] = v83[8];
      uint64_t v84 = v10[6];
      char v85 = &v57[v84];
      uint64_t v86 = &v58[v84];
      *(void *)char v85 = *(void *)v86;
      v85[8] = v86[8];
      uint64_t v87 = v10[7];
      uint64_t v88 = &v57[v87];
      char v89 = &v58[v87];
      *(void *)uint64_t v88 = *(void *)v89;
      v88[8] = v89[8];
      goto LABEL_24;
    }
    sub_10015B354((uint64_t)v57, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_23;
  }
  if (v60)
  {
LABEL_23:
    uint64_t v80 = sub_100002ED4(&qword_10043E458);
    memcpy(v57, v58, *(void *)(*(void *)(v80 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v57, v58, v94);
  uint64_t v61 = v10[5];
  uint64_t v62 = &v57[v61];
  uint64_t v63 = &v58[v61];
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = v10[6];
  uint64_t v65 = &v57[v64];
  uint64_t v66 = &v58[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v66[8];
  uint64_t v67 = v10[7];
  int v68 = &v57[v67];
  int v69 = &v58[v67];
  *(void *)int v68 = *(void *)v69;
  v68[8] = v69[8];
  (*(void (**)(char *, void, uint64_t, int *))(v90 + 56))(v57, 0, 1, v10);
LABEL_24:
  uint64_t result = v95;
  v29[v31[8]] = v30[v31[8]];
  return result;
}

uint64_t sub_10018646C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100186480);
}

uint64_t sub_100186480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E4C0);
}

uint64_t sub_10018648C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001864A0);
}

uint64_t sub_1001864A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E4C0);
}

void sub_1001864AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *sub_1001864CC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    int v13 = (void *)((char *)a1 + v9);
    int v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001865DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100186664(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  int v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  int v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100186724(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100186810(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001868B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10018697C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100186990);
}

uint64_t sub_100186990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100186A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100186A74);
}

uint64_t sub_100186A74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_100186B34()
{
  return sub_100186B58();
}

uint64_t sub_100186B58()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xBE) {
    goto LABEL_17;
  }
  if (a2 + 66 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 66) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 66;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 66;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 66;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x43;
  int v8 = v6 - 67;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 66 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 66) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xBE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xBD)
  {
    unsigned int v6 = ((a2 - 190) >> 8) + 1;
    *uint64_t result = a2 + 66;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100186D68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 66;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutLocationType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutLocationType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutMode()
{
  return &type metadata for CLP_LogEntry_PrivateData_WorkoutSettings.WorkoutMode;
}

char *sub_100186DC0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    unint64_t v10 = &a1[v9];
    int v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v70 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    int v69 = v8;
    if (v70(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    if (v70(&a2[v25], 1, v12))
    {
      uint64_t v28 = sub_100002ED4(&qword_10043E458);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      uint64_t v29 = v7;
    }
    else
    {
      uint64_t v29 = v7;
      v69(v26, v27, v7);
      uint64_t v30 = v12[5];
      uint64_t v31 = &v26[v30];
      uint64_t v32 = &v27[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v12[6];
      int v34 = &v26[v33];
      int v35 = &v27[v33];
      *(void *)int v34 = *(void *)v35;
      v34[8] = v35[8];
      uint64_t v36 = v12[7];
      uint64_t v37 = &v26[v36];
      int v38 = &v27[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v38[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v26, 0, 1, v12);
    }
    uint64_t v39 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    if (v70(&a2[v39], 1, v12))
    {
      uint64_t v42 = sub_100002ED4(&qword_10043E458);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v43 = v69;
    }
    else
    {
      uint64_t v43 = v69;
      v69(v40, v41, v29);
      uint64_t v44 = v12[5];
      uint64_t v45 = &v40[v44];
      uint64_t v46 = &v41[v44];
      *(void *)uint64_t v45 = *(void *)v46;
      v45[8] = v46[8];
      uint64_t v47 = v12[6];
      uint64_t v48 = &v40[v47];
      uint64_t v49 = &v41[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v12[7];
      uint64_t v51 = &v40[v50];
      uint64_t v52 = &v41[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v40, 0, 1, v12);
    }
    uint64_t v53 = a3[9];
    uint64_t v54 = &a1[v53];
    uint64_t v55 = &a2[v53];
    uint64_t v56 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
    uint64_t v57 = *((void *)v56 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
    {
      uint64_t v58 = sub_100002ED4(&qword_10043E4C8);
      memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      v43(v54, v55, v29);
      uint64_t v59 = v56[5];
      int v60 = &v54[v59];
      uint64_t v61 = &v55[v59];
      uint64_t v62 = *((void *)v61 + 1);
      *(void *)int v60 = *(void *)v61;
      *((void *)v60 + 1) = v62;
      uint64_t v63 = v56[6];
      uint64_t v64 = &v54[v63];
      uint64_t v65 = &v55[v63];
      uint64_t v66 = *((void *)v65 + 1);
      *(void *)uint64_t v64 = *(void *)v65;
      *((void *)v64 + 1) = v66;
      v54[v56[7]] = v55[v56[7]];
      v54[v56[8]] = v55[v56[8]];
      v54[v56[9]] = v55[v56[9]];
      uint64_t v67 = *(void (**)(char *, void, uint64_t, int *))(v57 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67(v54, 0, 1, v56);
    }
  }
  return a1;
}

uint64_t sub_10018730C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  int v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7)) {
    v5(v6, v4);
  }
  uint64_t v9 = a1 + a2[6];
  if (!v8(v9, 1, v7)) {
    v5(v9, v4);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v8(v10, 1, v7)) {
    v5(v10, v4);
  }
  uint64_t v11 = a1 + a2[9];
  uint64_t v12 = type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  if (!result)
  {
    v5(v11, v4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100187504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v68 = a1;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  int v69 = (void (*)(char *, char *, uint64_t))v7;
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v15 = v11[5];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = v11[6];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v11[7];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v24 = a3[6];
  uint64_t v25 = (char *)(v68 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  if (v13((char *)(a2 + v24), 1, v11))
  {
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    uint64_t v28 = v6;
  }
  else
  {
    uint64_t v28 = v6;
    v69(v25, v26, v6);
    uint64_t v29 = v11[5];
    uint64_t v30 = &v25[v29];
    uint64_t v31 = &v26[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[6];
    uint64_t v33 = &v25[v32];
    int v34 = &v26[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v11[7];
    uint64_t v36 = &v25[v35];
    uint64_t v37 = &v26[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v25, 0, 1, v11);
  }
  uint64_t v38 = a3[8];
  *(unsigned char *)(v68 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v39 = (char *)(v68 + v38);
  uint64_t v40 = (char *)(a2 + v38);
  if (v13((char *)(a2 + v38), 1, v11))
  {
    uint64_t v41 = sub_100002ED4(&qword_10043E458);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    uint64_t v42 = v69;
  }
  else
  {
    uint64_t v42 = v69;
    v69(v39, v40, v28);
    uint64_t v43 = v11[5];
    uint64_t v44 = &v39[v43];
    uint64_t v45 = &v40[v43];
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    uint64_t v46 = v11[6];
    uint64_t v47 = &v39[v46];
    uint64_t v48 = &v40[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = v11[7];
    uint64_t v50 = &v39[v49];
    uint64_t v51 = &v40[v49];
    *(void *)uint64_t v50 = *(void *)v51;
    v50[8] = v51[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v39, 0, 1, v11);
  }
  uint64_t v52 = a3[9];
  uint64_t v53 = (char *)(v68 + v52);
  uint64_t v54 = (char *)(a2 + v52);
  uint64_t v55 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v56 = *((void *)v55 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v56 + 48))(v54, 1, v55))
  {
    uint64_t v57 = sub_100002ED4(&qword_10043E4C8);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    v42(v53, v54, v28);
    uint64_t v58 = v55[5];
    uint64_t v59 = &v53[v58];
    int v60 = &v54[v58];
    uint64_t v61 = *((void *)v60 + 1);
    *(void *)uint64_t v59 = *(void *)v60;
    *((void *)v59 + 1) = v61;
    uint64_t v62 = v55[6];
    uint64_t v63 = &v53[v62];
    uint64_t v64 = &v54[v62];
    uint64_t v65 = *((void *)v64 + 1);
    *(void *)uint64_t v63 = *(void *)v64;
    *((void *)v63 + 1) = v65;
    v53[v55[7]] = v54[v55[7]];
    v53[v55[8]] = v54[v55[8]];
    v53[v55[9]] = v54[v55[9]];
    uint64_t v66 = *(void (**)(char *, void, uint64_t, int *))(v56 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v66(v53, 0, 1, v55);
  }
  return v68;
}

uint64_t sub_1001879F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v124 = *(void *)(v6 - 8);
  uint64_t v125 = v6;
  uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v124 + 24);
  v123(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v8, v9, v125);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v123)(v8, v9, v125);
  uint64_t v81 = v10[5];
  uint64_t v82 = &v8[v81];
  uint64_t v83 = &v9[v81];
  char v84 = v83[8];
  *(void *)uint64_t v82 = *(void *)v83;
  v82[8] = v84;
  uint64_t v85 = v10[6];
  uint64_t v86 = &v8[v85];
  uint64_t v87 = &v9[v85];
  char v88 = v87[8];
  *(void *)uint64_t v86 = *(void *)v87;
  v86[8] = v88;
  uint64_t v89 = v10[7];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  char v92 = v91[8];
  *(void *)uint64_t v90 = *(void *)v91;
  v90[8] = v92;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = (char *)(a1 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  int v31 = v12((char *)(a1 + v28), 1, v10);
  int v32 = v12(v30, 1, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v29, v30, v125);
      uint64_t v33 = v10[5];
      int v34 = &v29[v33];
      uint64_t v35 = &v30[v33];
      char v36 = v35[8];
      *(void *)int v34 = *(void *)v35;
      v34[8] = v36;
      uint64_t v37 = v10[6];
      uint64_t v38 = &v29[v37];
      uint64_t v39 = &v30[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v40;
      uint64_t v41 = v10[7];
      uint64_t v42 = &v29[v41];
      uint64_t v43 = &v30[v41];
      char v44 = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      v42[8] = v44;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v29, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_12:
    uint64_t v45 = sub_100002ED4(&qword_10043E458);
    memcpy(v29, v30, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v123)(v29, v30, v125);
  uint64_t v93 = v10[5];
  uint64_t v94 = &v29[v93];
  uint64_t v95 = &v30[v93];
  char v96 = v95[8];
  *(void *)uint64_t v94 = *(void *)v95;
  v94[8] = v96;
  uint64_t v97 = v10[6];
  uint64_t v98 = &v29[v97];
  char v99 = &v30[v97];
  char v100 = v99[8];
  *(void *)uint64_t v98 = *(void *)v99;
  v98[8] = v100;
  uint64_t v101 = v10[7];
  uint64_t v102 = &v29[v101];
  char v103 = &v30[v101];
  char v104 = v103[8];
  *(void *)uint64_t v102 = *(void *)v103;
  v102[8] = v104;
LABEL_13:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v46 = a3[8];
  uint64_t v47 = (char *)(a1 + v46);
  uint64_t v48 = (char *)(a2 + v46);
  int v49 = v12((char *)(a1 + v46), 1, v10);
  int v50 = v12(v48, 1, v10);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v47, v48, v125);
      uint64_t v51 = v10[5];
      uint64_t v52 = &v47[v51];
      uint64_t v53 = &v48[v51];
      char v54 = v53[8];
      *(void *)uint64_t v52 = *(void *)v53;
      v52[8] = v54;
      uint64_t v55 = v10[6];
      uint64_t v56 = &v47[v55];
      uint64_t v57 = &v48[v55];
      char v58 = v57[8];
      *(void *)uint64_t v56 = *(void *)v57;
      v56[8] = v58;
      uint64_t v59 = v10[7];
      int v60 = &v47[v59];
      uint64_t v61 = &v48[v59];
      char v62 = v61[8];
      *(void *)int v60 = *(void *)v61;
      v60[8] = v62;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v47, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v50)
  {
    sub_10015B354((uint64_t)v47, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_18:
    uint64_t v63 = sub_100002ED4(&qword_10043E458);
    memcpy(v47, v48, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_19;
  }
  ((void (*)(char *, char *, uint64_t))v123)(v47, v48, v125);
  uint64_t v105 = v10[5];
  uint64_t v106 = &v47[v105];
  char v107 = &v48[v105];
  char v108 = v107[8];
  *(void *)uint64_t v106 = *(void *)v107;
  v106[8] = v108;
  uint64_t v109 = v10[6];
  uint64_t v110 = &v47[v109];
  uint64_t v111 = &v48[v109];
  char v112 = v111[8];
  *(void *)uint64_t v110 = *(void *)v111;
  v110[8] = v112;
  uint64_t v113 = v10[7];
  uint64_t v114 = &v47[v113];
  uint64_t v115 = &v48[v113];
  char v116 = v115[8];
  *(void *)uint64_t v114 = *(void *)v115;
  v114[8] = v116;
LABEL_19:
  uint64_t v64 = a3[9];
  uint64_t v65 = (unsigned char *)(a1 + v64);
  uint64_t v66 = (unsigned char *)(a2 + v64);
  uint64_t v67 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v68 = *((void *)v67 - 1);
  int v69 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v68 + 48);
  int v70 = v69(v65, 1, v67);
  int v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (!v71)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v123)(v65, v66, v125);
      uint64_t v117 = v67[5];
      uint64_t v118 = &v65[v117];
      uint64_t v119 = &v66[v117];
      void *v118 = *v119;
      v118[1] = v119[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v120 = v67[6];
      uint64_t v121 = &v65[v120];
      uint64_t v122 = &v66[v120];
      void *v121 = *v122;
      v121[1] = v122[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v65[v67[7]] = v66[v67[7]];
      v65[v67[8]] = v66[v67[8]];
      v65[v67[9]] = v66[v67[9]];
      return a1;
    }
    sub_10015B354((uint64_t)v65, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
    goto LABEL_24;
  }
  if (v71)
  {
LABEL_24:
    uint64_t v79 = sub_100002ED4(&qword_10043E4C8);
    memcpy(v65, v66, *(void *)(*(void *)(v79 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v124 + 16))(v65, v66, v125);
  uint64_t v72 = v67[5];
  uint64_t v73 = &v65[v72];
  uint64_t v74 = &v66[v72];
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  uint64_t v75 = v67[6];
  uint64_t v76 = &v65[v75];
  char v77 = &v66[v75];
  void *v76 = *v77;
  v76[1] = v77[1];
  v65[v67[7]] = v66[v67[7]];
  v65[v67[8]] = v66[v67[8]];
  v65[v67[9]] = v66[v67[9]];
  uint64_t v78 = *(void (**)(unsigned char *, void, uint64_t, int *))(v68 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78(v65, 0, 1, v67);
  return a1;
}

uint64_t sub_10018820C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v59 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  char v58 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  int v60 = (void (*)(char *, char *, uint64_t))v7;
  if (v58(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = v59[6];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  if (v58((char *)(a2 + v23), 1, v11))
  {
    uint64_t v26 = sub_100002ED4(&qword_10043E458);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    uint64_t v27 = v6;
  }
  else
  {
    uint64_t v27 = v6;
    v60(v24, v25, v6);
    uint64_t v28 = v11[5];
    uint64_t v29 = &v24[v28];
    uint64_t v30 = &v25[v28];
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = v11[6];
    int v32 = &v24[v31];
    uint64_t v33 = &v25[v31];
    *(void *)int v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v11[7];
    uint64_t v35 = &v24[v34];
    char v36 = &v25[v34];
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v24, 0, 1, v11);
  }
  uint64_t v37 = v59[8];
  *(unsigned char *)(a1 + v59[7]) = *(unsigned char *)(a2 + v59[7]);
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  if (v58((char *)(a2 + v37), 1, v11))
  {
    uint64_t v40 = sub_100002ED4(&qword_10043E458);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    uint64_t v41 = v60;
  }
  else
  {
    uint64_t v41 = v60;
    v60(v38, v39, v27);
    uint64_t v42 = v11[5];
    uint64_t v43 = &v38[v42];
    char v44 = &v39[v42];
    *(void *)uint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    uint64_t v45 = v11[6];
    uint64_t v46 = &v38[v45];
    uint64_t v47 = &v39[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = v11[7];
    int v49 = &v38[v48];
    int v50 = &v39[v48];
    *(void *)int v49 = *(void *)v50;
    v49[8] = v50[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v38, 0, 1, v11);
  }
  uint64_t v51 = v59[9];
  uint64_t v52 = (char *)(a1 + v51);
  uint64_t v53 = (char *)(a2 + v51);
  char v54 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v55 = *((void *)v54 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v55 + 48))(v53, 1, v54))
  {
    uint64_t v56 = sub_100002ED4(&qword_10043E4C8);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    v41(v52, v53, v27);
    *(_OWORD *)&v52[v54[5]] = *(_OWORD *)&v53[v54[5]];
    *(_OWORD *)&v52[v54[6]] = *(_OWORD *)&v53[v54[6]];
    v52[v54[7]] = v53[v54[7]];
    v52[v54[8]] = v53[v54[8]];
    v52[v54[9]] = v53[v54[9]];
    (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(v52, 0, 1, v54);
  }
  return a1;
}

uint64_t sub_1001886E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v103 = *(void *)(v6 - 8);
  uint64_t v104 = v6;
  uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v103 + 40);
  v102(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v8, v9, v104);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v102)(v8, v9, v104);
  uint64_t v65 = v10[5];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  *(void *)uint64_t v66 = *(void *)v67;
  v66[8] = v67[8];
  uint64_t v68 = v10[6];
  int v69 = &v8[v68];
  int v70 = &v9[v68];
  *(void *)int v69 = *(void *)v70;
  v69[8] = v70[8];
  uint64_t v71 = v10[7];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v73[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  int v28 = v12((char *)(a1 + v25), 1, v10);
  int v29 = v12(v27, 1, v10);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v26, v27, v104);
      uint64_t v30 = v10[5];
      uint64_t v31 = &v26[v30];
      int v32 = &v27[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v10[6];
      uint64_t v34 = &v26[v33];
      uint64_t v35 = &v27[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      uint64_t v36 = v10[7];
      uint64_t v37 = &v26[v36];
      uint64_t v38 = &v27[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v38[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v26, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_12:
    uint64_t v39 = sub_100002ED4(&qword_10043E458);
    memcpy(v26, v27, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v102)(v26, v27, v104);
  uint64_t v74 = v10[5];
  uint64_t v75 = &v26[v74];
  uint64_t v76 = &v27[v74];
  *(void *)uint64_t v75 = *(void *)v76;
  v75[8] = v76[8];
  uint64_t v77 = v10[6];
  uint64_t v78 = &v26[v77];
  uint64_t v79 = &v27[v77];
  *(void *)uint64_t v78 = *(void *)v79;
  v78[8] = v79[8];
  uint64_t v80 = v10[7];
  uint64_t v81 = &v26[v80];
  uint64_t v82 = &v27[v80];
  *(void *)uint64_t v81 = *(void *)v82;
  v81[8] = v82[8];
LABEL_13:
  uint64_t v40 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v41 = (char *)(a1 + v40);
  uint64_t v42 = (char *)(a2 + v40);
  int v43 = v12((char *)(a1 + v40), 1, v10);
  int v44 = v12(v42, 1, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v41, v42, v104);
      uint64_t v45 = v10[5];
      uint64_t v46 = &v41[v45];
      uint64_t v47 = &v42[v45];
      *(void *)uint64_t v46 = *(void *)v47;
      v46[8] = v47[8];
      uint64_t v48 = v10[6];
      int v49 = &v41[v48];
      int v50 = &v42[v48];
      *(void *)int v49 = *(void *)v50;
      v49[8] = v50[8];
      uint64_t v51 = v10[7];
      uint64_t v52 = &v41[v51];
      uint64_t v53 = &v42[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      v52[8] = v53[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v41, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v44)
  {
    sub_10015B354((uint64_t)v41, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_18:
    uint64_t v54 = sub_100002ED4(&qword_10043E458);
    memcpy(v41, v42, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_19;
  }
  ((void (*)(char *, char *, uint64_t))v102)(v41, v42, v104);
  uint64_t v83 = v10[5];
  char v84 = &v41[v83];
  uint64_t v85 = &v42[v83];
  *(void *)char v84 = *(void *)v85;
  v84[8] = v85[8];
  uint64_t v86 = v10[6];
  uint64_t v87 = &v41[v86];
  char v88 = &v42[v86];
  *(void *)uint64_t v87 = *(void *)v88;
  v87[8] = v88[8];
  uint64_t v89 = v10[7];
  uint64_t v90 = &v41[v89];
  uint64_t v91 = &v42[v89];
  *(void *)uint64_t v90 = *(void *)v91;
  v90[8] = v91[8];
LABEL_19:
  uint64_t v55 = a3[9];
  uint64_t v56 = (unsigned char *)(a1 + v55);
  uint64_t v57 = (unsigned char *)(a2 + v55);
  char v58 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings(0);
  uint64_t v59 = *((void *)v58 - 1);
  int v60 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v102)(v56, v57, v104);
      uint64_t v92 = v58[5];
      uint64_t v93 = &v56[v92];
      uint64_t v94 = (uint64_t *)&v57[v92];
      uint64_t v96 = *v94;
      uint64_t v95 = v94[1];
      void *v93 = v96;
      v93[1] = v95;
      swift_bridgeObjectRelease();
      uint64_t v97 = v58[6];
      uint64_t v98 = &v56[v97];
      char v99 = (uint64_t *)&v57[v97];
      uint64_t v101 = *v99;
      uint64_t v100 = v99[1];
      void *v98 = v101;
      v98[1] = v100;
      swift_bridgeObjectRelease();
      v56[v58[7]] = v57[v58[7]];
      v56[v58[8]] = v57[v58[8]];
      v56[v58[9]] = v57[v58[9]];
      return a1;
    }
    sub_10015B354((uint64_t)v56, type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
    goto LABEL_24;
  }
  if (v62)
  {
LABEL_24:
    uint64_t v63 = sub_100002ED4(&qword_10043E4C8);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v103 + 32))(v56, v57, v104);
  *(_OWORD *)&v56[v58[5]] = *(_OWORD *)&v57[v58[5]];
  *(_OWORD *)&v56[v58[6]] = *(_OWORD *)&v57[v58[6]];
  v56[v58[7]] = v57[v58[7]];
  v56[v58[8]] = v57[v58[8]];
  v56[v58[9]] = v57[v58[9]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v59 + 56))(v56, 0, 1, v58);
  return a1;
}

uint64_t sub_100188EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100188EC0);
}

uint64_t sub_100188EC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 236)
  {
    if (*(unsigned __int8 *)(a1 + a3[7]) <= 0x13u) {
      int v14 = 19;
    }
    else {
      int v14 = *(unsigned __int8 *)(a1 + a3[7]);
    }
    unsigned int v15 = v14 - 19;
    if (*(unsigned __int8 *)(a1 + a3[7]) >= 0x13u) {
      return v15;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E4C8);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[9];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_10018904C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100189060);
}

uint64_t sub_100189060(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100002ED4(&qword_10043E458);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 236)
  {
    *(unsigned char *)(a1 + a4[7]) = a2 + 19;
  }
  else
  {
    uint64_t v15 = sub_100002ED4(&qword_10043E4C8);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_1001891E4()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_100440900, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WorkoutSettings);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_WorkoutEvent.EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_WorkoutEvent.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100189488);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WorkoutEvent.EventType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WorkoutEvent.EventType;
}

uint64_t sub_1001894C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001894D4);
}

uint64_t sub_1001894D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001894EC);
}

void *sub_1001894F0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (void *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    int v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)int v13 = *(_DWORD *)v14;
    uint64_t v15 = (char *)a1 + v12;
    uint64_t v16 = (char *)a2 + v12;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = (char *)a1 + v18;
    char v22 = (char *)a2 + v18;
    LODWORD(v19) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)uint64_t v21 = v19;
    uint64_t v23 = a3[11];
    uint64_t v24 = a3[12];
    uint64_t v25 = (char *)a1 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    uint64_t v27 = (char *)a1 + v24;
    int v28 = (char *)a2 + v24;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = a3[13];
    uint64_t v30 = a3[14];
    uint64_t v31 = (char *)a1 + v29;
    int v32 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v33 = a3[15];
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
  }
  return a1;
}

uint64_t sub_1001896B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = a3[15];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  return a1;
}

uint64_t sub_100189820(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = v26;
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (int *)(a2 + v27);
  int v30 = *v29;
  *(unsigned char *)(v28 + 4) = *((unsigned char *)v29 + 4);
  *(_DWORD *)uint64_t v28 = v30;
  uint64_t v31 = a3[12];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (int *)(a2 + v31);
  int v34 = *v33;
  *(unsigned char *)(v32 + 4) = *((unsigned char *)v33 + 4);
  *(_DWORD *)uint64_t v32 = v34;
  uint64_t v35 = a3[13];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (int *)(a2 + v35);
  int v38 = *v37;
  *(unsigned char *)(v36 + 4) = *((unsigned char *)v37 + 4);
  *(_DWORD *)uint64_t v36 = v38;
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v39 = a3[15];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  LOBYTE(v38) = *(unsigned char *)(v41 + 4);
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  *(unsigned char *)(v40 + 4) = v38;
  return a1;
}

uint64_t sub_1001899A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = a3[15];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  return a1;
}

uint64_t sub_100189B14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  LODWORD(v18) = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v18;
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(unsigned char *)(v24 + 4) = *(unsigned char *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = a3[15];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  return a1;
}

uint64_t sub_100189C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100189C98);
}

uint64_t sub_100189C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 3u) {
      int v10 = 3;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 3;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 3u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100189D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100189D74);
}

uint64_t sub_100189D74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  return result;
}

uint64_t sub_100189E30()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics.NatalimeterGenderType()
{
  return &type metadata for CLP_LogEntry_PrivateData_BodyMetrics.NatalimeterGenderType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics.UserConditionType()
{
  return &type metadata for CLP_LogEntry_PrivateData_BodyMetrics.UserConditionType;
}

uint64_t *sub_100189F08(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    int v10 = (char *)a1 + v9;
    unsigned int v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002ED4(&qword_10043E4D8);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v29, (uint64_t *)v30, v7);
      v29[v31[5]] = v30[v31[5]];
      uint64_t v34 = v31[6];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      v35[4] = v36[4];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      uint64_t v37 = v31[7];
      int v38 = &v29[v37];
      uint64_t v39 = &v30[v37];
      v38[4] = v39[4];
      *(_DWORD *)int v38 = *(_DWORD *)v39;
      uint64_t v40 = v31[8];
      uint64_t v41 = &v29[v40];
      uint64_t v42 = &v30[v40];
      v41[4] = v42[4];
      *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
      uint64_t v43 = v31[9];
      int v44 = &v29[v43];
      uint64_t v45 = &v30[v43];
      v44[4] = v45[4];
      *(_DWORD *)int v44 = *(_DWORD *)v45;
      uint64_t v46 = v31[10];
      uint64_t v47 = &v29[v46];
      uint64_t v48 = &v30[v46];
      v47[4] = v48[4];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      uint64_t v49 = v31[11];
      int v50 = &v29[v49];
      uint64_t v51 = &v30[v49];
      *(_DWORD *)int v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      uint64_t v52 = v31[12];
      uint64_t v53 = &v29[v52];
      uint64_t v54 = &v30[v52];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      uint64_t v55 = v31[13];
      uint64_t v56 = &v29[v55];
      uint64_t v57 = &v30[v55];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      v56[4] = v57[4];
      v29[v31[14]] = v30[v31[14]];
      uint64_t v58 = v31[15];
      uint64_t v59 = &v29[v58];
      int v60 = &v30[v58];
      *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
      v59[4] = v60[4];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return a1;
}

uint64_t sub_10018A304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v10(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)) {
    v10(v5, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v4);
  }
  return result;
}

uint64_t sub_10018A458(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = (char *)(a1 + v24);
  uint64_t v28 = (char *)(a2 + v24);
  uint64_t v29 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100002ED4(&qword_10043E4D8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v27, (uint64_t)v28, v6);
    v27[v29[5]] = v28[v29[5]];
    uint64_t v32 = v29[6];
    uint64_t v33 = &v27[v32];
    uint64_t v34 = &v28[v32];
    v33[4] = v34[4];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    uint64_t v35 = v29[7];
    uint64_t v36 = &v27[v35];
    uint64_t v37 = &v28[v35];
    v36[4] = v37[4];
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    uint64_t v38 = v29[8];
    uint64_t v39 = &v27[v38];
    uint64_t v40 = &v28[v38];
    v39[4] = v40[4];
    *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
    uint64_t v41 = v29[9];
    uint64_t v42 = &v27[v41];
    uint64_t v43 = &v28[v41];
    v42[4] = v43[4];
    *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
    uint64_t v44 = v29[10];
    uint64_t v45 = &v27[v44];
    uint64_t v46 = &v28[v44];
    v45[4] = v46[4];
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    uint64_t v47 = v29[11];
    uint64_t v48 = &v27[v47];
    uint64_t v49 = &v28[v47];
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
    uint64_t v50 = v29[12];
    uint64_t v51 = &v27[v50];
    uint64_t v52 = &v28[v50];
    *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    uint64_t v53 = v29[13];
    uint64_t v54 = &v27[v53];
    uint64_t v55 = &v28[v53];
    *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
    v54[4] = v55[4];
    v27[v29[14]] = v28[v29[14]];
    uint64_t v56 = v29[15];
    uint64_t v57 = &v27[v56];
    uint64_t v58 = &v28[v56];
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
    (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_10018A804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v125 = *(void *)(v6 - 8);
  uint64_t v124 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 24);
  v124(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v126 = a1;
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v124((uint64_t)v8, (uint64_t)v9, v6);
  uint64_t v77 = v10[5];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  char v80 = v79[8];
  *(void *)uint64_t v78 = *(void *)v79;
  v78[8] = v80;
  uint64_t v81 = v10[6];
  uint64_t v82 = &v8[v81];
  uint64_t v83 = &v9[v81];
  char v84 = v83[8];
  *(void *)uint64_t v82 = *(void *)v83;
  v82[8] = v84;
  uint64_t v85 = v10[7];
  uint64_t v86 = &v8[v85];
  uint64_t v87 = &v9[v85];
  char v88 = v87[8];
  *(void *)uint64_t v86 = *(void *)v87;
  v86[8] = v88;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = v126 + v28;
  uint64_t v30 = (int *)(a2 + v28);
  int v31 = *v30;
  *(unsigned char *)(v29 + 4) = *((unsigned char *)v30 + 4);
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[7];
  uint64_t v33 = (unsigned char *)(v126 + v32);
  uint64_t v34 = (unsigned char *)(a2 + v32);
  uint64_t v35 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      v124((uint64_t)v33, (uint64_t)v34, v6);
      v33[v35[5]] = v34[v35[5]];
      uint64_t v89 = v35[6];
      uint64_t v90 = &v33[v89];
      uint64_t v91 = &v34[v89];
      char v92 = v91[4];
      *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
      v90[4] = v92;
      uint64_t v93 = v35[7];
      uint64_t v94 = &v33[v93];
      uint64_t v95 = &v34[v93];
      char v96 = v95[4];
      *(_DWORD *)uint64_t v94 = *(_DWORD *)v95;
      v94[4] = v96;
      uint64_t v97 = v35[8];
      uint64_t v98 = &v33[v97];
      char v99 = &v34[v97];
      char v100 = v99[4];
      *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
      v98[4] = v100;
      uint64_t v101 = v35[9];
      uint64_t v102 = &v33[v101];
      uint64_t v103 = &v34[v101];
      char v104 = v103[4];
      *(_DWORD *)uint64_t v102 = *(_DWORD *)v103;
      v102[4] = v104;
      uint64_t v105 = v35[10];
      uint64_t v106 = &v33[v105];
      char v107 = &v34[v105];
      char v108 = v107[4];
      *(_DWORD *)uint64_t v106 = *(_DWORD *)v107;
      v106[4] = v108;
      uint64_t v109 = v35[11];
      uint64_t v110 = &v33[v109];
      uint64_t v111 = &v34[v109];
      int v112 = *(_DWORD *)v111;
      v110[4] = v111[4];
      *(_DWORD *)uint64_t v110 = v112;
      uint64_t v113 = v35[12];
      uint64_t v114 = &v33[v113];
      uint64_t v115 = &v34[v113];
      int v116 = *(_DWORD *)v115;
      v114[4] = v115[4];
      *(_DWORD *)uint64_t v114 = v116;
      uint64_t v117 = v35[13];
      uint64_t v118 = &v33[v117];
      uint64_t v119 = &v34[v117];
      int v120 = *(_DWORD *)v119;
      v118[4] = v119[4];
      *(_DWORD *)uint64_t v118 = v120;
      v33[v35[14]] = v34[v35[14]];
      uint64_t v121 = v35[15];
      uint64_t v122 = &v33[v121];
      uint64_t v123 = &v34[v121];
      LOBYTE(v120) = v123[4];
      *(_DWORD *)uint64_t v122 = *(_DWORD *)v123;
      v122[4] = v120;
      return v126;
    }
    sub_10015B354((uint64_t)v33, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    uint64_t v75 = sub_100002ED4(&qword_10043E4D8);
    memcpy(v33, v34, *(void *)(*(void *)(v75 - 8) + 64));
    return v126;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v125 + 16))(v33, v34, v6);
  v33[v35[5]] = v34[v35[5]];
  uint64_t v40 = v35[6];
  uint64_t v41 = &v33[v40];
  uint64_t v42 = &v34[v40];
  char v43 = v42[4];
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  v41[4] = v43;
  uint64_t v44 = v35[7];
  uint64_t v45 = &v33[v44];
  uint64_t v46 = &v34[v44];
  char v47 = v46[4];
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  v45[4] = v47;
  uint64_t v48 = v35[8];
  uint64_t v49 = &v33[v48];
  uint64_t v50 = &v34[v48];
  char v51 = v50[4];
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
  v49[4] = v51;
  uint64_t v52 = v35[9];
  uint64_t v53 = &v33[v52];
  uint64_t v54 = &v34[v52];
  char v55 = v54[4];
  *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
  v53[4] = v55;
  uint64_t v56 = v35[10];
  uint64_t v57 = &v33[v56];
  uint64_t v58 = &v34[v56];
  char v59 = v58[4];
  *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
  v57[4] = v59;
  uint64_t v60 = v35[11];
  int v61 = &v33[v60];
  int v62 = &v34[v60];
  int v63 = *(_DWORD *)v62;
  v61[4] = v62[4];
  *(_DWORD *)int v61 = v63;
  uint64_t v64 = v35[12];
  uint64_t v65 = &v33[v64];
  uint64_t v66 = &v34[v64];
  int v67 = *(_DWORD *)v66;
  v65[4] = v66[4];
  *(_DWORD *)uint64_t v65 = v67;
  uint64_t v68 = v35[13];
  int v69 = &v33[v68];
  int v70 = &v34[v68];
  int v71 = *(_DWORD *)v70;
  v69[4] = v70[4];
  *(_DWORD *)int v69 = v71;
  v33[v35[14]] = v34[v35[14]];
  uint64_t v72 = v35[15];
  uint64_t v73 = &v33[v72];
  uint64_t v74 = &v34[v72];
  LOBYTE(v71) = v74[4];
  *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
  v73[4] = v71;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
  return v126;
}

uint64_t sub_10018AE2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  uint64_t v27 = (char *)(a1 + v24);
  uint64_t v28 = (char *)(a2 + v24);
  uint64_t v29 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100002ED4(&qword_10043E4D8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v27, (uint64_t)v28, v6);
    v27[v29[5]] = v28[v29[5]];
    uint64_t v32 = v29[6];
    uint64_t v33 = &v27[v32];
    uint64_t v34 = &v28[v32];
    v33[4] = v34[4];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    uint64_t v35 = v29[7];
    uint64_t v36 = &v27[v35];
    uint64_t v37 = &v28[v35];
    v36[4] = v37[4];
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    uint64_t v38 = v29[8];
    int v39 = &v27[v38];
    uint64_t v40 = &v28[v38];
    v39[4] = v40[4];
    *(_DWORD *)int v39 = *(_DWORD *)v40;
    uint64_t v41 = v29[9];
    uint64_t v42 = &v27[v41];
    char v43 = &v28[v41];
    v42[4] = v43[4];
    *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
    uint64_t v44 = v29[10];
    uint64_t v45 = &v27[v44];
    uint64_t v46 = &v28[v44];
    v45[4] = v46[4];
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    uint64_t v47 = v29[11];
    uint64_t v48 = &v27[v47];
    uint64_t v49 = &v28[v47];
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
    uint64_t v50 = v29[12];
    char v51 = &v27[v50];
    uint64_t v52 = &v28[v50];
    *(_DWORD *)char v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    uint64_t v53 = v29[13];
    uint64_t v54 = &v27[v53];
    char v55 = &v28[v53];
    *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
    v54[4] = v55[4];
    v27[v29[14]] = v28[v29[14]];
    uint64_t v56 = v29[15];
    uint64_t v57 = &v27[v56];
    uint64_t v58 = &v28[v56];
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
    v57[4] = v58[4];
    (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

uint64_t sub_10018B1D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v102 = *(void *)(v6 - 8);
  uint64_t v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 40);
  v101(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v103 = a1;
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v101((uint64_t)v8, (uint64_t)v9, v6);
  uint64_t v65 = v10[5];
  uint64_t v66 = &v8[v65];
  int v67 = &v9[v65];
  *(void *)uint64_t v66 = *(void *)v67;
  v66[8] = v67[8];
  uint64_t v68 = v10[6];
  int v69 = &v8[v68];
  int v70 = &v9[v68];
  *(void *)int v69 = *(void *)v70;
  v69[8] = v70[8];
  uint64_t v71 = v10[7];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v73[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = v103 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = (unsigned char *)(v103 + v26);
  uint64_t v30 = (unsigned char *)(a2 + v26);
  uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v101((uint64_t)v29, (uint64_t)v30, v6);
      v29[v31[5]] = v30[v31[5]];
      uint64_t v74 = v31[6];
      uint64_t v75 = &v29[v74];
      uint64_t v76 = &v30[v74];
      v75[4] = v76[4];
      *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
      uint64_t v77 = v31[7];
      uint64_t v78 = &v29[v77];
      uint64_t v79 = &v30[v77];
      v78[4] = v79[4];
      *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
      uint64_t v80 = v31[8];
      uint64_t v81 = &v29[v80];
      uint64_t v82 = &v30[v80];
      v81[4] = v82[4];
      *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
      uint64_t v83 = v31[9];
      char v84 = &v29[v83];
      uint64_t v85 = &v30[v83];
      v84[4] = v85[4];
      *(_DWORD *)char v84 = *(_DWORD *)v85;
      uint64_t v86 = v31[10];
      uint64_t v87 = &v29[v86];
      char v88 = &v30[v86];
      v87[4] = v88[4];
      *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
      uint64_t v89 = v31[11];
      uint64_t v90 = &v29[v89];
      uint64_t v91 = &v30[v89];
      *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
      v90[4] = v91[4];
      uint64_t v92 = v31[12];
      uint64_t v93 = &v29[v92];
      uint64_t v94 = &v30[v92];
      *(_DWORD *)uint64_t v93 = *(_DWORD *)v94;
      v93[4] = v94[4];
      uint64_t v95 = v31[13];
      char v96 = &v29[v95];
      uint64_t v97 = &v30[v95];
      *(_DWORD *)char v96 = *(_DWORD *)v97;
      v96[4] = v97[4];
      v29[v31[14]] = v30[v31[14]];
      uint64_t v98 = v31[15];
      char v99 = &v29[v98];
      char v100 = &v30[v98];
      *(_DWORD *)char v99 = *(_DWORD *)v100;
      v99[4] = v100[4];
      return v103;
    }
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_BodyMetrics);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v63 = sub_100002ED4(&qword_10043E4D8);
    memcpy(v29, v30, *(void *)(*(void *)(v63 - 8) + 64));
    return v103;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v102 + 32))(v29, v30, v6);
  v29[v31[5]] = v30[v31[5]];
  uint64_t v36 = v31[6];
  uint64_t v37 = &v29[v36];
  uint64_t v38 = &v30[v36];
  v37[4] = v38[4];
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  uint64_t v39 = v31[7];
  uint64_t v40 = &v29[v39];
  uint64_t v41 = &v30[v39];
  v40[4] = v41[4];
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  uint64_t v42 = v31[8];
  char v43 = &v29[v42];
  uint64_t v44 = &v30[v42];
  v43[4] = v44[4];
  *(_DWORD *)char v43 = *(_DWORD *)v44;
  uint64_t v45 = v31[9];
  uint64_t v46 = &v29[v45];
  uint64_t v47 = &v30[v45];
  v46[4] = v47[4];
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  uint64_t v48 = v31[10];
  uint64_t v49 = &v29[v48];
  uint64_t v50 = &v30[v48];
  v49[4] = v50[4];
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
  uint64_t v51 = v31[11];
  uint64_t v52 = &v29[v51];
  uint64_t v53 = &v30[v51];
  *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
  v52[4] = v53[4];
  uint64_t v54 = v31[12];
  char v55 = &v29[v54];
  uint64_t v56 = &v30[v54];
  *(_DWORD *)char v55 = *(_DWORD *)v56;
  v55[4] = v56[4];
  uint64_t v57 = v31[13];
  uint64_t v58 = &v29[v57];
  char v59 = &v30[v57];
  *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
  v58[4] = v59[4];
  v29[v31[14]] = v30[v31[14]];
  uint64_t v60 = v31[15];
  int v61 = &v29[v60];
  int v62 = &v30[v60];
  *(_DWORD *)int v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
  return v103;
}

uint64_t sub_10018B7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018B810);
}

uint64_t sub_10018B810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E4D8);
}

uint64_t sub_10018B81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018B830);
}

uint64_t sub_10018B830(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E4D8);
}

void sub_10018B83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10018B870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018B884);
}

uint64_t sub_10018B884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_10018B890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018B8A4);
}

uint64_t sub_10018B8A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

void sub_10018B8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_10018B8D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[8];
    uint64_t v32 = a3[9];
    uint64_t v33 = (char *)a1 + v31;
    int v34 = (char *)a2 + v31;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    int v35 = (char *)a1 + v32;
    uint64_t v36 = (char *)a2 + v32;
    *(_DWORD *)int v35 = *(_DWORD *)v36;
    v35[4] = v36[4];
    uint64_t v37 = a3[10];
    uint64_t v38 = a3[11];
    uint64_t v39 = (char *)a1 + v37;
    uint64_t v40 = (char *)a2 + v37;
    int v41 = *(_DWORD *)v40;
    v39[4] = v40[4];
    *(_DWORD *)uint64_t v39 = v41;
    uint64_t v42 = (char *)a1 + v38;
    char v43 = (char *)a2 + v38;
    v42[4] = v43[4];
    *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  }
  return a1;
}

uint64_t sub_10018BB6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = (int *)(a2 + v35);
  int v39 = *v38;
  *(unsigned char *)(v37 + 4) = *((unsigned char *)v38 + 4);
  *(_DWORD *)uint64_t v37 = v39;
  uint64_t v40 = a1 + v36;
  uint64_t v41 = a2 + v36;
  *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  return a1;
}

uint64_t sub_10018BDB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 24);
  v7(a1, a2, v6);
  uint64_t v63 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v61 = *((void *)v11 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v61 + 48);
  uint64_t v64 = v9;
  LODWORD(v9) = v12(v9, 1, v11);
  int v13 = v12((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v13)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 16))(v64, v10, v6);
      uint64_t v16 = v11[5];
      uint64_t v17 = v64 + v16;
      uint64_t v18 = &v10[v16];
      char v19 = v18[8];
      *(void *)uint64_t v17 = *(void *)v18;
      *(unsigned char *)(v17 + 8) = v19;
      uint64_t v20 = v11[6];
      uint64_t v21 = v64 + v20;
      uint64_t v22 = &v10[v20];
      char v23 = v22[8];
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = v23;
      uint64_t v24 = v11[7];
      uint64_t v25 = v64 + v24;
      uint64_t v26 = &v10[v24];
      char v27 = v26[8];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v27;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v61 + 56))(v64, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v14 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v15 = (void *)v64;
  }
  else
  {
    if (!v13)
    {
      v7(v64, (uint64_t)v10, v6);
      uint64_t v28 = v11[5];
      uint64_t v29 = v64 + v28;
      uint64_t v30 = &v10[v28];
      char v31 = v30[8];
      *(void *)uint64_t v29 = *(void *)v30;
      *(unsigned char *)(v29 + 8) = v31;
      uint64_t v32 = v11[6];
      uint64_t v33 = v64 + v32;
      uint64_t v34 = &v10[v32];
      char v35 = v34[8];
      *(void *)uint64_t v33 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = v35;
      uint64_t v36 = v11[7];
      uint64_t v37 = v64 + v36;
      uint64_t v38 = &v10[v36];
      char v39 = v38[8];
      *(void *)uint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v39;
      goto LABEL_9;
    }
    sub_10015B354(v64, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v14 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v15 = (void *)v64;
  }
  memcpy(v15, v10, v14);
LABEL_9:
  uint64_t v40 = v63[6];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  uint64_t v44 = v63[7];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  uint64_t v48 = v63[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  LODWORD(v47) = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  *(_DWORD *)uint64_t v49 = v47;
  uint64_t v51 = v63[9];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  LODWORD(v47) = *(_DWORD *)v53;
  *(unsigned char *)(v52 + 4) = *(unsigned char *)(v53 + 4);
  *(_DWORD *)uint64_t v52 = v47;
  uint64_t v54 = v63[10];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  LODWORD(v47) = *(_DWORD *)v56;
  *(unsigned char *)(v55 + 4) = *(unsigned char *)(v56 + 4);
  *(_DWORD *)uint64_t v55 = v47;
  uint64_t v57 = v63[11];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  LODWORD(v47) = *(_DWORD *)v59;
  *(unsigned char *)(v58 + 4) = *(unsigned char *)(v59 + 4);
  *(_DWORD *)uint64_t v58 = v47;
  return a1;
}

uint64_t sub_10018C144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    char v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = (int *)(a2 + v35);
  int v39 = *v38;
  *(unsigned char *)(v37 + 4) = *((unsigned char *)v38 + 4);
  *(_DWORD *)uint64_t v37 = v39;
  uint64_t v40 = a1 + v36;
  uint64_t v41 = a2 + v36;
  *(unsigned char *)(v40 + 4) = *(unsigned char *)(v41 + 4);
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  return a1;
}

uint64_t sub_10018C390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 40);
  v7(a1, a2, v6);
  uint64_t v56 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v54 = *((void *)v11 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v54 + 48);
  uint64_t v57 = v9;
  LODWORD(v9) = v12(v9, 1, v11);
  int v13 = v12((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v13)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v57, v10, v6);
      uint64_t v16 = v11[5];
      uint64_t v17 = v57 + v16;
      uint64_t v18 = &v10[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      *(unsigned char *)(v17 + 8) = v18[8];
      uint64_t v19 = v11[6];
      uint64_t v20 = v57 + v19;
      uint64_t v21 = &v10[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v21[8];
      uint64_t v22 = v11[7];
      uint64_t v23 = v57 + v22;
      uint64_t v24 = &v10[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      *(unsigned char *)(v23 + 8) = v24[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v54 + 56))(v57, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v14 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v15 = (void *)v57;
  }
  else
  {
    if (!v13)
    {
      v7(v57, (uint64_t)v10, v6);
      uint64_t v25 = v11[5];
      uint64_t v26 = v57 + v25;
      uint64_t v27 = &v10[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v27[8];
      uint64_t v28 = v11[6];
      uint64_t v29 = v57 + v28;
      uint64_t v30 = &v10[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      *(unsigned char *)(v29 + 8) = v30[8];
      uint64_t v31 = v11[7];
      uint64_t v32 = v57 + v31;
      uint64_t v33 = &v10[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      *(unsigned char *)(v32 + 8) = v33[8];
      goto LABEL_9;
    }
    sub_10015B354(v57, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v14 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v15 = (void *)v57;
  }
  memcpy(v15, v10, v14);
LABEL_9:
  uint64_t v34 = v56[6];
  uint64_t v35 = v56[7];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a1 + v35;
  uint64_t v39 = a2 + v35;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  uint64_t v40 = v56[8];
  uint64_t v41 = v56[9];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  *(unsigned char *)(v42 + 4) = *(unsigned char *)(v43 + 4);
  uint64_t v44 = a1 + v41;
  uint64_t v45 = a2 + v41;
  *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
  *(unsigned char *)(v44 + 4) = *(unsigned char *)(v45 + 4);
  uint64_t v46 = v56[10];
  uint64_t v47 = v56[11];
  uint64_t v48 = a1 + v46;
  uint64_t v49 = (int *)(a2 + v46);
  int v50 = *v49;
  *(unsigned char *)(v48 + 4) = *((unsigned char *)v49 + 4);
  *(_DWORD *)uint64_t v48 = v50;
  uint64_t v51 = a1 + v47;
  uint64_t v52 = a2 + v47;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  return a1;
}

uint64_t sub_10018C710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018C724);
}

uint64_t sub_10018C724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_10018C730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018C744);
}

uint64_t sub_10018C744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

void sub_10018C750()
{
}

char *sub_10018C768(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = &a1[v25];
    uint64_t v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = &a1[v26];
    uint64_t v30 = &a2[v26];
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[8];
    uint64_t v32 = a3[9];
    uint64_t v33 = &a1[v31];
    uint64_t v34 = &a2[v31];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = &a1[v32];
    uint64_t v36 = &a2[v32];
    v35[8] = v36[8];
    *(void *)uint64_t v35 = *(void *)v36;
    uint64_t v37 = a3[10];
    uint64_t v38 = a3[11];
    uint64_t v39 = &a1[v37];
    uint64_t v40 = &a2[v37];
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = &a1[v38];
    uint64_t v42 = &a2[v38];
    *(void *)uint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = a3[12];
    uint64_t v44 = a3[13];
    uint64_t v45 = &a1[v43];
    uint64_t v46 = &a2[v43];
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = &a1[v44];
    uint64_t v48 = &a2[v44];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = a3[14];
    uint64_t v50 = a3[15];
    uint64_t v51 = &a1[v49];
    uint64_t v52 = &a2[v49];
    *(void *)uint64_t v51 = *(void *)v52;
    v51[8] = v52[8];
    a1[v50] = a2[v50];
    uint64_t v53 = a3[17];
    a1[a3[16]] = a2[a3[16]];
    a1[v53] = a2[v53];
    a1[a3[18]] = a2[a3[18]];
  }
  return a1;
}

uint64_t sub_10018CA7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  *(void *)uint64_t v33 = *(void *)v34;
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = a3[12];
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v51 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_10018CD40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 24);
  v78(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v76 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v76 + 48);
  uint64_t v79 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v79, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v79 + v15;
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = v79 + v19;
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = v79 + v23;
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v26;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v76 + 56))(v79, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v79;
  }
  else
  {
    if (!v12)
    {
      v78(v79, (uint64_t)v9, v6);
      uint64_t v27 = v10[5];
      uint64_t v28 = v79 + v27;
      uint64_t v29 = &v9[v27];
      char v30 = v29[8];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v30;
      uint64_t v31 = v10[6];
      uint64_t v32 = v79 + v31;
      uint64_t v33 = &v9[v31];
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      *(unsigned char *)(v32 + 8) = v34;
      uint64_t v35 = v10[7];
      uint64_t v36 = v79 + v35;
      uint64_t v37 = &v9[v35];
      char v38 = v37[8];
      *(void *)uint64_t v36 = *(void *)v37;
      *(unsigned char *)(v36 + 8) = v38;
      goto LABEL_9;
    }
    sub_10015B354(v79, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v79;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v39 = a3[6];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  *(unsigned char *)(v40 + 8) = *((unsigned char *)v41 + 8);
  *(void *)uint64_t v40 = v42;
  uint64_t v43 = a3[7];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v46 = *v45;
  *(unsigned char *)(v44 + 8) = *((unsigned char *)v45 + 8);
  *(void *)uint64_t v44 = v46;
  uint64_t v47 = a3[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v50 = *v49;
  *(unsigned char *)(v48 + 8) = *((unsigned char *)v49 + 8);
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = a3[9];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = (uint64_t *)(a2 + v51);
  uint64_t v54 = *v53;
  *(unsigned char *)(v52 + 8) = *((unsigned char *)v53 + 8);
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = a3[10];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = (uint64_t *)(a2 + v55);
  uint64_t v58 = *v57;
  *(unsigned char *)(v56 + 8) = *((unsigned char *)v57 + 8);
  *(void *)uint64_t v56 = v58;
  uint64_t v59 = a3[11];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v62 = *v61;
  *(unsigned char *)(v60 + 8) = *((unsigned char *)v61 + 8);
  *(void *)uint64_t v60 = v62;
  uint64_t v63 = a3[12];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = (uint64_t *)(a2 + v63);
  uint64_t v66 = *v65;
  *(unsigned char *)(v64 + 8) = *((unsigned char *)v65 + 8);
  *(void *)uint64_t v64 = v66;
  uint64_t v67 = a3[13];
  uint64_t v68 = a1 + v67;
  int v69 = (uint64_t *)(a2 + v67);
  uint64_t v70 = *v69;
  *(unsigned char *)(v68 + 8) = *((unsigned char *)v69 + 8);
  *(void *)uint64_t v68 = v70;
  uint64_t v71 = a3[14];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = (uint64_t *)(a2 + v71);
  uint64_t v74 = *v73;
  *(unsigned char *)(v72 + 8) = *((unsigned char *)v73 + 8);
  *(void *)uint64_t v72 = v74;
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_10018D154(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  *(void *)uint64_t v33 = *(void *)v34;
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = a3[12];
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v51 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_10018D418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 40);
  v65(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v63 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48);
  uint64_t v66 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v66, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v66 + v15;
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = v66 + v18;
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 8) = v20[8];
      uint64_t v21 = v10[7];
      uint64_t v22 = v66 + v21;
      uint64_t v23 = &v9[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v23[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v63 + 56))(v66, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v66;
  }
  else
  {
    if (!v12)
    {
      v65(v66, (uint64_t)v9, v6);
      uint64_t v24 = v10[5];
      uint64_t v25 = v66 + v24;
      uint64_t v26 = &v9[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v26[8];
      uint64_t v27 = v10[6];
      uint64_t v28 = v66 + v27;
      uint64_t v29 = &v9[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v29[8];
      uint64_t v30 = v10[7];
      uint64_t v31 = v66 + v30;
      uint64_t v32 = &v9[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *(unsigned char *)(v31 + 8) = v32[8];
      goto LABEL_9;
    }
    sub_10015B354(v66, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v66;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v33 = a3[6];
  uint64_t v34 = a3[7];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a1 + v34;
  uint64_t v38 = a2 + v34;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a3[8];
  uint64_t v40 = a3[9];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a1 + v40;
  uint64_t v44 = a2 + v40;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  *(void *)uint64_t v43 = *(void *)v44;
  uint64_t v45 = a3[10];
  uint64_t v46 = a3[11];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = a1 + v46;
  uint64_t v50 = a2 + v46;
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = *(unsigned char *)(v50 + 8);
  uint64_t v51 = a3[12];
  uint64_t v52 = a3[13];
  uint64_t v53 = a1 + v51;
  uint64_t v54 = a2 + v51;
  *(void *)uint64_t v53 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  uint64_t v55 = a1 + v52;
  uint64_t v56 = a2 + v52;
  *(void *)uint64_t v55 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
  uint64_t v57 = a3[14];
  uint64_t v58 = a3[15];
  uint64_t v59 = a1 + v57;
  uint64_t v60 = a2 + v57;
  *(void *)uint64_t v59 = *(void *)v60;
  *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
  *(unsigned char *)(a1 + v58) = *(unsigned char *)(a2 + v58);
  uint64_t v61 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v61) = *(unsigned char *)(a2 + v61);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  return a1;
}

uint64_t sub_10018D814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018D828);
}

uint64_t sub_10018D828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 60));
  if (v14 >= 2) {
    int v15 = ((v14 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v15 = -2;
  }
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10018D95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018D970);
}

uint64_t sub_10018D970(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100002ED4(&qword_10043E458);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 60)) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10018DA84()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10018DB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018DBA4);
}

uint64_t sub_10018DBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018DBBC);
}

char *sub_10018DBC0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = &a1[v25];
    uint64_t v28 = &a2[v25];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = &a1[v26];
    uint64_t v30 = &a2[v26];
    *(void *)uint64_t v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = a3[8];
    uint64_t v32 = a3[9];
    uint64_t v33 = &a1[v31];
    uint64_t v34 = &a2[v31];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    a1[v32] = a2[v32];
    uint64_t v35 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v35] = a2[v35];
    a1[a3[12]] = a2[a3[12]];
  }
  return a1;
}

uint64_t sub_10018DE38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v33 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10018E060(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 24);
  v54(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v52 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v52 + 48);
  uint64_t v55 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v55, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v55 + v15;
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = v55 + v19;
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = v55 + v23;
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v26;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v52 + 56))(v55, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v55;
  }
  else
  {
    if (!v12)
    {
      v54(v55, (uint64_t)v9, v6);
      uint64_t v27 = v10[5];
      uint64_t v28 = v55 + v27;
      uint64_t v29 = &v9[v27];
      char v30 = v29[8];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v30;
      uint64_t v31 = v10[6];
      uint64_t v32 = v55 + v31;
      uint64_t v33 = &v9[v31];
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      *(unsigned char *)(v32 + 8) = v34;
      uint64_t v35 = v10[7];
      uint64_t v36 = v55 + v35;
      uint64_t v37 = &v9[v35];
      char v38 = v37[8];
      *(void *)uint64_t v36 = *(void *)v37;
      *(unsigned char *)(v36 + 8) = v38;
      goto LABEL_9;
    }
    sub_10015B354(v55, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v55;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v39 = a3[6];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v42 = *v41;
  *(unsigned char *)(v40 + 8) = *((unsigned char *)v41 + 8);
  *(void *)uint64_t v40 = v42;
  uint64_t v43 = a3[7];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v46 = *v45;
  *(unsigned char *)(v44 + 8) = *((unsigned char *)v45 + 8);
  *(void *)uint64_t v44 = v46;
  uint64_t v47 = a3[8];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v50 = *v49;
  *(unsigned char *)(v48 + 8) = *((unsigned char *)v49 + 8);
  *(void *)uint64_t v48 = v50;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10018E3CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[8];
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v33 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10018E5F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 40);
  v47(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v45 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v45 + 48);
  uint64_t v48 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v48, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v48 + v15;
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = v48 + v18;
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 8) = v20[8];
      uint64_t v21 = v10[7];
      uint64_t v22 = v48 + v21;
      uint64_t v23 = &v9[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v23[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v45 + 56))(v48, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v48;
  }
  else
  {
    if (!v12)
    {
      v47(v48, (uint64_t)v9, v6);
      uint64_t v24 = v10[5];
      uint64_t v25 = v48 + v24;
      uint64_t v26 = &v9[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v26[8];
      uint64_t v27 = v10[6];
      uint64_t v28 = v48 + v27;
      uint64_t v29 = &v9[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v29[8];
      uint64_t v30 = v10[7];
      uint64_t v31 = v48 + v30;
      uint64_t v32 = &v9[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *(unsigned char *)(v31 + 8) = v32[8];
      goto LABEL_9;
    }
    sub_10015B354(v48, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v48;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v33 = a3[6];
  uint64_t v34 = a3[7];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a1 + v34;
  uint64_t v38 = a2 + v34;
  *(void *)uint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
  uint64_t v39 = a3[8];
  uint64_t v40 = a3[9];
  uint64_t v41 = a1 + v39;
  uint64_t v42 = a2 + v39;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v43 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_10018E954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018E968);
}

uint64_t sub_10018E96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018E980);
}

void sub_10018E984()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10018EA84(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8((char *)a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    int v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v58 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    uint64_t v59 = v8;
    uint64_t v60 = v7;
    if (v58(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
    uint64_t v32 = *((void *)v31 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002ED4(&qword_10043E4E8);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v57 = v13;
      v59(v29, v30, v7);
      uint64_t v34 = v31[5];
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      if (v58(&v30[v34], 1, v12))
      {
        uint64_t v37 = sub_100002ED4(&qword_10043E458);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v59(v35, v36, v60);
        uint64_t v38 = v12[5];
        uint64_t v39 = &v35[v38];
        uint64_t v40 = &v36[v38];
        *(void *)uint64_t v39 = *(void *)v40;
        v39[8] = v40[8];
        uint64_t v41 = v12[6];
        uint64_t v42 = &v35[v41];
        uint64_t v43 = &v36[v41];
        *(void *)uint64_t v42 = *(void *)v43;
        v42[8] = v43[8];
        uint64_t v44 = v12[7];
        uint64_t v45 = &v35[v44];
        uint64_t v46 = &v36[v44];
        *(void *)uint64_t v45 = *(void *)v46;
        v45[8] = v46[8];
        (*(void (**)(char *, void, uint64_t, int *))(v57 + 56))(v35, 0, 1, v12);
      }
      uint64_t v47 = v31[6];
      uint64_t v48 = &v29[v47];
      uint64_t v49 = &v30[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v31[7];
      uint64_t v51 = &v29[v50];
      uint64_t v52 = &v30[v50];
      v51[8] = v52[8];
      *(void *)uint64_t v51 = *(void *)v52;
      uint64_t v53 = v31[8];
      uint64_t v54 = &v29[v53];
      uint64_t v55 = &v30[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      v29[v31[9]] = v30[v31[9]];
      v29[v31[10]] = v30[v31[10]];
      v29[v31[11]] = v30[v31[11]];
      v29[v31[12]] = v30[v31[12]];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return a1;
}

uint64_t sub_10018EF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v12(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6)) {
    v12(v5, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 28);
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    v12(v8, v4);
    uint64_t v11 = v8 + *(int *)(v9 + 20);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v11, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v4);
    }
  }
  return result;
}

uint64_t sub_10018F0B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v59 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v58 = (void (*)(char *, char *, uint64_t))v7;
  if (v57(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v59;
  uint64_t v26 = v59 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = (char *)(v59 + v24);
  uint64_t v29 = (char *)(a2 + v24);
  uint64_t v30 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E4E8);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v55 = v12;
    v58(v28, v29, v6);
    uint64_t v33 = v30[5];
    __dst = &v28[v33];
    uint64_t v34 = &v29[v33];
    if (v57(&v29[v33], 1, v11))
    {
      uint64_t v35 = sub_100002ED4(&qword_10043E458);
      memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v58(__dst, v34, v6);
      uint64_t v36 = v11[5];
      uint64_t v37 = &__dst[v36];
      uint64_t v38 = &v34[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v38[8];
      uint64_t v39 = v11[6];
      uint64_t v40 = &__dst[v39];
      uint64_t v41 = &v34[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      uint64_t v42 = v11[7];
      uint64_t v43 = &__dst[v42];
      uint64_t v44 = &v34[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      v43[8] = v44[8];
      (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v45 = v30[6];
    uint64_t v46 = &v28[v45];
    uint64_t v47 = &v29[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = v30[7];
    uint64_t v49 = &v28[v48];
    uint64_t v50 = &v29[v48];
    v49[8] = v50[8];
    *(void *)uint64_t v49 = *(void *)v50;
    uint64_t v51 = v30[8];
    uint64_t v52 = &v28[v51];
    uint64_t v53 = &v29[v51];
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    v28[v30[9]] = v29[v30[9]];
    v28[v30[10]] = v29[v30[10]];
    v28[v30[11]] = v29[v30[11]];
    v28[v30[12]] = v29[v30[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
    return v59;
  }
  return v25;
}

uint64_t sub_10018F4F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  __dst = *(void **)(v6 - 8);
  uint64_t v129 = v6;
  uint64_t v125 = (void (*)(uint64_t, uint64_t))__dst[3];
  v125(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void))(v11 + 48);
  int v13 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v8, 1, v10);
  int v14 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v9, 1, v10);
  uint64_t v124 = v11;
  if (v13)
  {
    if (!v14)
    {
      ((void (*)(char *, char *, uint64_t))__dst[2])(v8, v9, v129);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v125)(v8, v9, v129);
  uint64_t v44 = v10[5];
  uint64_t v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  char v47 = v46[8];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v47;
  uint64_t v48 = v10[6];
  uint64_t v49 = &v8[v48];
  uint64_t v50 = &v9[v48];
  char v51 = v50[8];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v51;
  uint64_t v52 = v10[7];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  char v55 = v54[8];
  *(void *)uint64_t v53 = *(void *)v54;
  v53[8] = v55;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (int *)(a2 + v28);
  int v31 = *v30;
  *(unsigned char *)(v29 + 4) = *((unsigned char *)v30 + 4);
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[7];
  uint64_t v130 = a1;
  uint64_t v33 = (char *)(a1 + v32);
  uint64_t v34 = (char *)(a2 + v32);
  uint64_t v35 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v36 = *((void *)v35 - 1);
  uint64_t v37 = *(uint64_t (**)(char *, uint64_t, int *))(v36 + 48);
  int v38 = v37(v33, 1, v35);
  int v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      uint64_t v126 = (void (*)(char *, char *, uint64_t))__dst[2];
      v126(v33, v34, v129);
      uint64_t v40 = v35[5];
      __dsta = &v33[v40];
      uint64_t v41 = &v34[v40];
      if (((unsigned int (*)(char *, uint64_t, int *))v12)(&v34[v40], 1, v10))
      {
        uint64_t v42 = sub_100002ED4(&qword_10043E458);
        memcpy(__dsta, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v126(__dsta, v41, v129);
        uint64_t v62 = v10[5];
        uint64_t v63 = &__dsta[v62];
        uint64_t v64 = &v41[v62];
        char v65 = v64[8];
        *(void *)uint64_t v63 = *(void *)v64;
        v63[8] = v65;
        uint64_t v66 = v10[6];
        uint64_t v67 = &__dsta[v66];
        uint64_t v68 = &v41[v66];
        char v69 = v68[8];
        *(void *)uint64_t v67 = *(void *)v68;
        v67[8] = v69;
        uint64_t v70 = v10[7];
        uint64_t v71 = &__dsta[v70];
        uint64_t v72 = &v41[v70];
        char v73 = v72[8];
        *(void *)uint64_t v71 = *(void *)v72;
        v71[8] = v73;
        (*(void (**)(char *, void, uint64_t, int *))(v124 + 56))(__dsta, 0, 1, v10);
      }
      uint64_t v74 = v35[6];
      uint64_t v75 = &v33[v74];
      uint64_t v76 = &v34[v74];
      uint64_t v77 = *(void *)v76;
      v75[8] = v76[8];
      *(void *)uint64_t v75 = v77;
      uint64_t v78 = v35[7];
      uint64_t v79 = &v33[v78];
      uint64_t v80 = &v34[v78];
      uint64_t v81 = *(void *)v80;
      v79[8] = v80[8];
      *(void *)uint64_t v79 = v81;
      uint64_t v82 = v35[8];
      uint64_t v83 = &v33[v82];
      char v84 = &v34[v82];
      uint64_t v85 = *(void *)v84;
      v83[8] = v84[8];
      *(void *)uint64_t v83 = v85;
      v33[v35[9]] = v34[v35[9]];
      v33[v35[10]] = v34[v35[10]];
      v33[v35[11]] = v34[v35[11]];
      v33[v35[12]] = v34[v35[12]];
      (*(void (**)(char *, void, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
      return v130;
    }
LABEL_13:
    uint64_t v43 = sub_100002ED4(&qword_10043E4E8);
    memcpy(v33, v34, *(void *)(*(void *)(v43 - 8) + 64));
    return v130;
  }
  if (v39)
  {
    sub_10015B354((uint64_t)v33, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v125)(v33, v34, v129);
  uint64_t v56 = v35[5];
  uint64_t v57 = &v34[v56];
  uint64_t v123 = (uint64_t)&v33[v56];
  int v58 = v12();
  int v59 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v57, 1, v10);
  if (v58)
  {
    if (!v59)
    {
      ((void (*)(uint64_t, char *, uint64_t))__dst[2])(v123, v57, v129);
      uint64_t v87 = v10[5];
      uint64_t v88 = v123 + v87;
      uint64_t v89 = &v57[v87];
      char v90 = v89[8];
      *(void *)uint64_t v88 = *(void *)v89;
      *(unsigned char *)(v88 + 8) = v90;
      uint64_t v91 = v10[6];
      uint64_t v92 = v123 + v91;
      uint64_t v93 = &v57[v91];
      char v94 = v93[8];
      *(void *)uint64_t v92 = *(void *)v93;
      *(unsigned char *)(v92 + 8) = v94;
      uint64_t v95 = v10[7];
      uint64_t v96 = v123 + v95;
      uint64_t v97 = &v57[v95];
      char v98 = v97[8];
      *(void *)uint64_t v96 = *(void *)v97;
      *(unsigned char *)(v96 + 8) = v98;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v124 + 56))(v123, 0, 1, v10);
      goto LABEL_26;
    }
    size_t v60 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v61 = (void *)v123;
  }
  else
  {
    if (!v59)
    {
      ((void (*)(uint64_t, char *, uint64_t))v125)(v123, v57, v129);
      uint64_t v99 = v10[5];
      uint64_t v100 = v123 + v99;
      uint64_t v101 = &v57[v99];
      char v102 = v101[8];
      *(void *)uint64_t v100 = *(void *)v101;
      *(unsigned char *)(v100 + 8) = v102;
      uint64_t v103 = v10[6];
      uint64_t v104 = v123 + v103;
      uint64_t v105 = &v57[v103];
      char v106 = v105[8];
      *(void *)uint64_t v104 = *(void *)v105;
      *(unsigned char *)(v104 + 8) = v106;
      uint64_t v107 = v10[7];
      uint64_t v108 = v123 + v107;
      uint64_t v109 = &v57[v107];
      char v110 = v109[8];
      *(void *)uint64_t v108 = *(void *)v109;
      *(unsigned char *)(v108 + 8) = v110;
      goto LABEL_26;
    }
    sub_10015B354(v123, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v60 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v61 = (void *)v123;
  }
  memcpy(v61, v57, v60);
LABEL_26:
  uint64_t result = v130;
  uint64_t v111 = v35[6];
  int v112 = &v33[v111];
  uint64_t v113 = &v34[v111];
  uint64_t v114 = *(void *)v113;
  v112[8] = v113[8];
  *(void *)int v112 = v114;
  uint64_t v115 = v35[7];
  int v116 = &v33[v115];
  uint64_t v117 = &v34[v115];
  uint64_t v118 = *(void *)v117;
  v116[8] = v117[8];
  *(void *)int v116 = v118;
  uint64_t v119 = v35[8];
  int v120 = &v33[v119];
  uint64_t v121 = &v34[v119];
  uint64_t v122 = *(void *)v121;
  v120[8] = v121[8];
  *(void *)int v120 = v122;
  v33[v35[9]] = v34[v35[9]];
  v33[v35[10]] = v34[v35[10]];
  v33[v35[11]] = v34[v35[11]];
  v33[v35[12]] = v34[v35[12]];
  return result;
}

uint64_t sub_10018FCD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v59 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  int v58 = (void (*)(char *, char *, uint64_t))v7;
  if (v57(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v59;
  uint64_t v26 = v59 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = (char *)(v59 + v24);
  uint64_t v29 = (char *)(a2 + v24);
  uint64_t v30 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v31 = *((void *)v30 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E4E8);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v55 = v12;
    v58(v28, v29, v6);
    uint64_t v33 = v30[5];
    __dst = &v28[v33];
    uint64_t v34 = &v29[v33];
    if (v57(&v29[v33], 1, v11))
    {
      uint64_t v35 = sub_100002ED4(&qword_10043E458);
      memcpy(__dst, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v58(__dst, v34, v6);
      uint64_t v36 = v11[5];
      uint64_t v37 = &__dst[v36];
      int v38 = &v34[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v38[8];
      uint64_t v39 = v11[6];
      uint64_t v40 = &__dst[v39];
      uint64_t v41 = &v34[v39];
      *(void *)uint64_t v40 = *(void *)v41;
      v40[8] = v41[8];
      uint64_t v42 = v11[7];
      uint64_t v43 = &__dst[v42];
      uint64_t v44 = &v34[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      v43[8] = v44[8];
      (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v45 = v30[6];
    uint64_t v46 = &v28[v45];
    char v47 = &v29[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = v30[7];
    uint64_t v49 = &v28[v48];
    uint64_t v50 = &v29[v48];
    v49[8] = v50[8];
    *(void *)uint64_t v49 = *(void *)v50;
    uint64_t v51 = v30[8];
    uint64_t v52 = &v28[v51];
    uint64_t v53 = &v29[v51];
    *(void *)uint64_t v52 = *(void *)v53;
    v52[8] = v53[8];
    v28[v30[9]] = v29[v30[9]];
    v28[v30[10]] = v29[v30[10]];
    v28[v30[11]] = v29[v30[11]];
    v28[v30[12]] = v29[v30[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
    return v59;
  }
  return v25;
}

uint64_t sub_100190108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  __dst = *(void **)(v6 - 8);
  uint64_t v107 = v6;
  uint64_t v103 = (void (*)(uint64_t, uint64_t))__dst[5];
  v103(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(void))(v11 + 48);
  int v13 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v8, 1, v10);
  int v14 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v9, 1, v10);
  uint64_t v102 = v11;
  if (v13)
  {
    if (!v14)
    {
      ((void (*)(char *, char *, uint64_t))__dst[4])(v8, v9, v107);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v103)(v8, v9, v107);
  uint64_t v40 = v10[5];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  uint64_t v43 = v10[6];
  uint64_t v44 = &v8[v43];
  uint64_t v45 = &v9[v43];
  *(void *)uint64_t v44 = *(void *)v45;
  v44[8] = v45[8];
  uint64_t v46 = v10[7];
  char v47 = &v8[v46];
  uint64_t v48 = &v9[v46];
  *(void *)char v47 = *(void *)v48;
  v47[8] = v48[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v108 = a1;
  uint64_t v29 = (char *)(a1 + v26);
  uint64_t v30 = (char *)(a2 + v26);
  uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      uint64_t v104 = (void (*)(char *, char *, uint64_t))__dst[4];
      v104(v29, v30, v107);
      uint64_t v36 = v31[5];
      __dsta = &v29[v36];
      uint64_t v37 = &v30[v36];
      if (((unsigned int (*)(char *, uint64_t, int *))v12)(&v30[v36], 1, v10))
      {
        uint64_t v38 = sub_100002ED4(&qword_10043E458);
        memcpy(__dsta, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        v104(__dsta, v37, v107);
        uint64_t v55 = v10[5];
        uint64_t v56 = &__dsta[v55];
        uint64_t v57 = &v37[v55];
        *(void *)uint64_t v56 = *(void *)v57;
        v56[8] = v57[8];
        uint64_t v58 = v10[6];
        uint64_t v59 = &__dsta[v58];
        size_t v60 = &v37[v58];
        *(void *)uint64_t v59 = *(void *)v60;
        v59[8] = v60[8];
        uint64_t v61 = v10[7];
        uint64_t v62 = &__dsta[v61];
        uint64_t v63 = &v37[v61];
        *(void *)uint64_t v62 = *(void *)v63;
        v62[8] = v63[8];
        (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(__dsta, 0, 1, v10);
      }
      uint64_t v64 = v31[6];
      char v65 = &v29[v64];
      uint64_t v66 = &v30[v64];
      *(void *)char v65 = *(void *)v66;
      v65[8] = v66[8];
      uint64_t v67 = v31[7];
      uint64_t v68 = &v29[v67];
      char v69 = &v30[v67];
      v68[8] = v69[8];
      *(void *)uint64_t v68 = *(void *)v69;
      uint64_t v70 = v31[8];
      uint64_t v71 = &v29[v70];
      uint64_t v72 = &v30[v70];
      *(void *)uint64_t v71 = *(void *)v72;
      v71[8] = v72[8];
      v29[v31[9]] = v30[v31[9]];
      v29[v31[10]] = v30[v31[10]];
      v29[v31[11]] = v30[v31[11]];
      v29[v31[12]] = v30[v31[12]];
      (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
      return v108;
    }
LABEL_13:
    uint64_t v39 = sub_100002ED4(&qword_10043E4E8);
    memcpy(v29, v30, *(void *)(*(void *)(v39 - 8) + 64));
    return v108;
  }
  if (v35)
  {
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_TunnelBridgeAssistance);
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v103)(v29, v30, v107);
  uint64_t v49 = v31[5];
  uint64_t v50 = &v30[v49];
  uint64_t v101 = (uint64_t)&v29[v49];
  int v51 = v12();
  int v52 = ((uint64_t (*)(char *, uint64_t, int *))v12)(v50, 1, v10);
  if (v51)
  {
    if (!v52)
    {
      ((void (*)(uint64_t, char *, uint64_t))__dst[4])(v101, v50, v107);
      uint64_t v74 = v10[5];
      uint64_t v75 = v101 + v74;
      uint64_t v76 = &v50[v74];
      *(void *)uint64_t v75 = *(void *)v76;
      *(unsigned char *)(v75 + 8) = v76[8];
      uint64_t v77 = v10[6];
      uint64_t v78 = v101 + v77;
      uint64_t v79 = &v50[v77];
      *(void *)uint64_t v78 = *(void *)v79;
      *(unsigned char *)(v78 + 8) = v79[8];
      uint64_t v80 = v10[7];
      uint64_t v81 = v101 + v80;
      uint64_t v82 = &v50[v80];
      *(void *)uint64_t v81 = *(void *)v82;
      *(unsigned char *)(v81 + 8) = v82[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v102 + 56))(v101, 0, 1, v10);
      goto LABEL_26;
    }
    size_t v53 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v54 = (void *)v101;
  }
  else
  {
    if (!v52)
    {
      ((void (*)(uint64_t, char *, uint64_t))v103)(v101, v50, v107);
      uint64_t v83 = v10[5];
      uint64_t v84 = v101 + v83;
      uint64_t v85 = &v50[v83];
      *(void *)uint64_t v84 = *(void *)v85;
      *(unsigned char *)(v84 + 8) = v85[8];
      uint64_t v86 = v10[6];
      uint64_t v87 = v101 + v86;
      uint64_t v88 = &v50[v86];
      *(void *)uint64_t v87 = *(void *)v88;
      *(unsigned char *)(v87 + 8) = v88[8];
      uint64_t v89 = v10[7];
      uint64_t v90 = v101 + v89;
      uint64_t v91 = &v50[v89];
      *(void *)uint64_t v90 = *(void *)v91;
      *(unsigned char *)(v90 + 8) = v91[8];
      goto LABEL_26;
    }
    sub_10015B354(v101, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v53 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v54 = (void *)v101;
  }
  memcpy(v54, v50, v53);
LABEL_26:
  uint64_t result = v108;
  uint64_t v92 = v31[6];
  uint64_t v93 = &v29[v92];
  char v94 = &v30[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  v93[8] = v94[8];
  uint64_t v95 = v31[7];
  uint64_t v96 = &v29[v95];
  uint64_t v97 = &v30[v95];
  v96[8] = v97[8];
  *(void *)uint64_t v96 = *(void *)v97;
  uint64_t v98 = v31[8];
  uint64_t v99 = &v29[v98];
  uint64_t v100 = &v30[v98];
  *(void *)uint64_t v99 = *(void *)v100;
  v99[8] = v100[8];
  v29[v31[9]] = v30[v31[9]];
  v29[v31[10]] = v30[v31[10]];
  v29[v31[11]] = v30[v31[11]];
  v29[v31[12]] = v30[v31[12]];
  return result;
}

uint64_t sub_1001908E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001908F8);
}

uint64_t sub_1001908F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E4E8);
}

uint64_t sub_100190904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100190918);
}

uint64_t sub_100190918(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E4E8);
}

void sub_100190924(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100190944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100190958);
}

uint64_t sub_10019095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100190970);
}

uint64_t *sub_100190974(uint64_t *a1, uint64_t *a2, int *a3)
{
  return sub_100190994(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, &qword_10043E4F0);
}

uint64_t *sub_100190994(uint64_t *a1, uint64_t *a2, int *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  int v7 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    int v13 = (char *)a2 + v11;
    int v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v15 = *((void *)v14 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100002ED4(&qword_10043E458);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v10((uint64_t *)v12, (uint64_t *)v13, v9);
      uint64_t v18 = v14[5];
      uint64_t v19 = &v12[v18];
      uint64_t v20 = &v13[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v14[6];
      char v22 = &v12[v21];
      uint64_t v23 = &v13[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v14[7];
      uint64_t v25 = &v12[v24];
      uint64_t v26 = &v13[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v27 = a3[6];
    uint64_t v28 = a3[7];
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
    v29[4] = v30[4];
    uint64_t v31 = (char *)a1 + v28;
    uint64_t v32 = (char *)a2 + v28;
    uint64_t v33 = a4(0);
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_100002ED4(a5);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v10((uint64_t *)v31, (uint64_t *)v32, v9);
      *(void *)&v31[*(int *)(v33 + 20)] = *(void *)&v32[*(int *)(v33 + 20)];
      uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56);
      swift_retain();
      v36(v31, 0, 1, v33);
    }
  }
  return a1;
}

uint64_t sub_100190CA8(uint64_t a1, uint64_t a2)
{
  return sub_100190CC0(a1, a2, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance);
}

uint64_t sub_100190CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  int v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(a1, v6);
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v7(v8, v6);
  }
  uint64_t v10 = a1 + *(int *)(a2 + 28);
  uint64_t v11 = a3(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    v7(v10, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_100190E2C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100190E4C(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, &qword_10043E4F0);
}

uint64_t sub_100190E4C(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  v9(a1, a2, v8);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  int v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v11, (uint64_t)v12, v8);
    uint64_t v16 = v13[5];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = v13[6];
    uint64_t v20 = &v11[v19];
    uint64_t v21 = &v12[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = v13[7];
    uint64_t v23 = &v11[v22];
    uint64_t v24 = &v12[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = (char *)(a1 + v26);
  uint64_t v30 = (char *)(a2 + v26);
  uint64_t v31 = a4(0);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = sub_100002ED4(a5);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v29, (uint64_t)v30, v8);
    *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
    uint64_t v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
    swift_retain();
    v34(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_100191104(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197754(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, &qword_10043E4F0);
}

uint64_t sub_100191138(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100191158(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, &qword_10043E4F0);
}

uint64_t sub_100191158(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(a1, a2, v8);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  int v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v11, (uint64_t)v12, v8);
    uint64_t v16 = v13[5];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = v13[6];
    uint64_t v20 = &v11[v19];
    uint64_t v21 = &v12[v19];
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = v13[7];
    uint64_t v23 = &v11[v22];
    uint64_t v24 = &v12[v22];
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = (char *)(a1 + v26);
  uint64_t v30 = (char *)(a2 + v26);
  uint64_t v31 = a4(0);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = sub_100002ED4(a5);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v29, (uint64_t)v30, v8);
    *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_10019140C(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197BCC(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance, &qword_10043E4F0);
}

uint64_t sub_100191440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191454);
}

uint64_t sub_100191454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E4F0);
}

uint64_t sub_100191460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191474);
}

uint64_t sub_100191474(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E4F0);
}

void sub_100191480(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001914A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001914B4);
}

uint64_t sub_1001914B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001914CC);
}

uint64_t sub_1001914D0()
{
  return sub_100186B58();
}

void *sub_1001914E8(void *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    int v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    int v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = &a2[v13];
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v17 = *((void *)v16 - 1);
    uint64_t v43 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
    if (v43(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E458);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      uint64_t v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = a3[7];
    uint64_t v29 = (char *)v7 + v28;
    uint64_t v30 = &a2[v28];
    if (v43(&a2[v28], 1, v16))
    {
      uint64_t v31 = sub_100002ED4(&qword_10043E458);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v12(v29, v30, v11);
      uint64_t v32 = v16[5];
      uint64_t v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      v33[8] = v34[8];
      uint64_t v35 = v16[6];
      uint64_t v36 = &v29[v35];
      uint64_t v37 = &v30[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      v36[8] = v37[8];
      uint64_t v38 = v16[7];
      uint64_t v39 = &v29[v38];
      uint64_t v40 = &v30[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v29, 0, 1, v16);
    }
    uint64_t v41 = a3[9];
    *((unsigned char *)v7 + a3[8]) = a2[a3[8]];
    *((unsigned char *)v7 + v41) = a2[v41];
  }
  return v7;
}

uint64_t sub_100191820(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7)) {
    v11(v6, v5);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v5);
  }
  return result;
}

void *sub_10019197C(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v42 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = &a2[v11];
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v18 = v14[5];
    uint64_t v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v14[6];
    uint64_t v22 = &v12[v21];
    uint64_t v23 = &v13[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v14[7];
    uint64_t v25 = &v12[v24];
    uint64_t v26 = &v13[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v27 = v42[7];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  if (v16(&a2[v27], 1, v14))
  {
    uint64_t v30 = sub_100002ED4(&qword_10043E458);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v10(v28, v29, v9);
    uint64_t v31 = v14[5];
    uint64_t v32 = &v28[v31];
    uint64_t v33 = &v29[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v14[6];
    uint64_t v35 = &v28[v34];
    uint64_t v36 = &v29[v34];
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    uint64_t v37 = v14[7];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = &v29[v37];
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v28, 0, 1, v14);
  }
  uint64_t v40 = v42[9];
  *((unsigned char *)a1 + v42[8]) = a2[v42[8]];
  *((unsigned char *)a1 + v40) = a2[v40];
  return a1;
}

char *sub_100191C68(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v75 = type metadata accessor for UnknownStorage();
  uint64_t v72 = *(void (**)(char *, char *))(*(void *)(v75 - 8) + 24);
  uint64_t v73 = *(void *)(v75 - 8);
  v72(v7, v8);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v74 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v74 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v10, v11, v75);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      char v19 = v18[8];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v19;
      uint64_t v20 = v12[6];
      uint64_t v21 = &v10[v20];
      uint64_t v22 = &v11[v20];
      char v23 = v22[8];
      *(void *)uint64_t v21 = *(void *)v22;
      v21[8] = v23;
      uint64_t v24 = v12[7];
      uint64_t v25 = &v10[v24];
      uint64_t v26 = &v11[v24];
      char v27 = v26[8];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v27;
      (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v28 = sub_100002ED4(&qword_10043E458);
    memcpy(v10, v11, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v72)(v10, v11, v75);
  uint64_t v48 = v12[5];
  uint64_t v49 = &v10[v48];
  uint64_t v50 = &v11[v48];
  char v51 = v50[8];
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v51;
  uint64_t v52 = v12[6];
  size_t v53 = &v10[v52];
  uint64_t v54 = &v11[v52];
  char v55 = v54[8];
  *(void *)size_t v53 = *(void *)v54;
  v53[8] = v55;
  uint64_t v56 = v12[7];
  uint64_t v57 = &v10[v56];
  uint64_t v58 = &v11[v56];
  char v59 = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v59;
LABEL_7:
  uint64_t v29 = a3[7];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = (char *)a2 + v29;
  int v32 = v13(&a1[v29], 1, v12);
  int v33 = v13(v31, 1, v12);
  if (!v32)
  {
    if (!v33)
    {
      ((void (*)(char *, char *, uint64_t))v72)(v30, v31, v75);
      uint64_t v60 = v12[5];
      uint64_t v61 = &v30[v60];
      uint64_t v62 = &v31[v60];
      char v63 = v62[8];
      *(void *)uint64_t v61 = *(void *)v62;
      v61[8] = v63;
      uint64_t v64 = v12[6];
      char v65 = &v30[v64];
      uint64_t v66 = &v31[v64];
      char v67 = v66[8];
      *(void *)char v65 = *(void *)v66;
      v65[8] = v67;
      uint64_t v68 = v12[7];
      char v69 = &v30[v68];
      uint64_t v70 = &v31[v68];
      char v71 = v70[8];
      *(void *)char v69 = *(void *)v70;
      v69[8] = v71;
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_12;
  }
  if (v33)
  {
LABEL_12:
    uint64_t v46 = sub_100002ED4(&qword_10043E458);
    memcpy(v30, v31, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v30, v31, v75);
  uint64_t v34 = v12[5];
  uint64_t v35 = &v30[v34];
  uint64_t v36 = &v31[v34];
  char v37 = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v37;
  uint64_t v38 = v12[6];
  uint64_t v39 = &v30[v38];
  uint64_t v40 = &v31[v38];
  char v41 = v40[8];
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v41;
  uint64_t v42 = v12[7];
  uint64_t v43 = &v30[v42];
  uint64_t v44 = &v31[v42];
  char v45 = v44[8];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v45;
  (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v30, 0, 1, v12);
LABEL_13:
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  a1[a3[9]] = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_1001920D8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v42 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = &a2[v11];
  int v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v18 = v14[5];
    char v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    *(void *)char v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v14[6];
    uint64_t v22 = &v12[v21];
    char v23 = &v13[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v14[7];
    uint64_t v25 = &v12[v24];
    uint64_t v26 = &v13[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v27 = v42[7];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  if (v16(&a2[v27], 1, v14))
  {
    uint64_t v30 = sub_100002ED4(&qword_10043E458);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v10(v28, v29, v9);
    uint64_t v31 = v14[5];
    int v32 = &v28[v31];
    int v33 = &v29[v31];
    *(void *)int v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v14[6];
    uint64_t v35 = &v28[v34];
    uint64_t v36 = &v29[v34];
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    uint64_t v37 = v14[7];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = &v29[v37];
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v28, 0, 1, v14);
  }
  uint64_t v40 = v42[9];
  *((unsigned char *)a1 + v42[8]) = a2[v42[8]];
  *((unsigned char *)a1 + v40) = a2[v40];
  return a1;
}

char *sub_1001923BC(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v64 = type metadata accessor for UnknownStorage();
  uint64_t v61 = *(void (**)(char *, char *))(*(void *)(v64 - 8) + 40);
  uint64_t v62 = *(void *)(v64 - 8);
  v61(v7, v8);
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v63 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v63 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v10, v11, v64);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      char v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)char v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v25 = sub_100002ED4(&qword_10043E458);
    memcpy(v10, v11, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v61)(v10, v11, v64);
  uint64_t v43 = v12[5];
  uint64_t v44 = &v10[v43];
  char v45 = &v11[v43];
  *(void *)uint64_t v44 = *(void *)v45;
  v44[8] = v45[8];
  uint64_t v46 = v12[6];
  char v47 = &v10[v46];
  uint64_t v48 = &v11[v46];
  *(void *)char v47 = *(void *)v48;
  v47[8] = v48[8];
  uint64_t v49 = v12[7];
  uint64_t v50 = &v10[v49];
  char v51 = &v11[v49];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v51[8];
LABEL_7:
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = (char *)a2 + v26;
  int v29 = v13(&a1[v26], 1, v12);
  int v30 = v13(v28, 1, v12);
  if (!v29)
  {
    if (!v30)
    {
      ((void (*)(char *, char *, uint64_t))v61)(v27, v28, v64);
      uint64_t v52 = v12[5];
      size_t v53 = &v27[v52];
      uint64_t v54 = &v28[v52];
      *(void *)size_t v53 = *(void *)v54;
      v53[8] = v54[8];
      uint64_t v55 = v12[6];
      uint64_t v56 = &v27[v55];
      uint64_t v57 = &v28[v55];
      *(void *)uint64_t v56 = *(void *)v57;
      v56[8] = v57[8];
      uint64_t v58 = v12[7];
      char v59 = &v27[v58];
      uint64_t v60 = &v28[v58];
      *(void *)char v59 = *(void *)v60;
      v59[8] = v60[8];
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v40 = sub_100002ED4(&qword_10043E458);
    memcpy(v27, v28, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v27, v28, v64);
  uint64_t v31 = v12[5];
  int v32 = &v27[v31];
  int v33 = &v28[v31];
  *(void *)int v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = v12[6];
  uint64_t v35 = &v27[v34];
  uint64_t v36 = &v28[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  uint64_t v37 = v12[7];
  uint64_t v38 = &v27[v37];
  uint64_t v39 = &v28[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(v27, 0, 1, v12);
LABEL_13:
  uint64_t v41 = a3[9];
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  a1[v41] = *((unsigned char *)a2 + v41);
  return a1;
}

uint64_t sub_100192820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100192834);
}

uint64_t sub_100192838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019284C);
}

void sub_100192850()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *_s10ALProtobuf53CLP_LogEntry_PrivateData_ClientSatelliteConstellationOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100192A1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_MapMatchingRouteHint.RoutingType()
{
  return &type metadata for CLP_LogEntry_PrivateData_MapMatchingRouteHint.RoutingType;
}

void *sub_100192A54(void *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = *((void *)a2 + 1);
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    int v14 = (char *)v7 + v13;
    int v15 = &a2[v13];
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v17 = *((void *)v16 - 1);
    uint64_t v50 = *(unsigned int (**)(char *, uint64_t, int *))(v17 + 48);
    if (v50(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E458);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      char v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)char v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = a3[8];
    int v29 = (char *)v7 + v28;
    int v30 = &a2[v28];
    if (v50(&a2[v28], 1, v16))
    {
      uint64_t v31 = sub_100002ED4(&qword_10043E458);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      v12(v29, v30, v11);
      uint64_t v32 = v16[5];
      int v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      *(void *)int v33 = *(void *)v34;
      v33[8] = v34[8];
      uint64_t v35 = v16[6];
      uint64_t v36 = &v29[v35];
      uint64_t v37 = &v30[v35];
      *(void *)uint64_t v36 = *(void *)v37;
      v36[8] = v37[8];
      uint64_t v38 = v16[7];
      uint64_t v39 = &v29[v38];
      uint64_t v40 = &v30[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v29, 0, 1, v16);
    }
    uint64_t v41 = a3[9];
    uint64_t v42 = a3[10];
    uint64_t v43 = (char *)v7 + v41;
    uint64_t v44 = &a2[v41];
    *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
    v43[4] = v44[4];
    *((unsigned char *)v7 + v42) = a2[v42];
    uint64_t v45 = a3[11];
    uint64_t v46 = a3[12];
    char v47 = (char *)v7 + v45;
    uint64_t v48 = &a2[v45];
    *(_DWORD *)char v47 = *(_DWORD *)v48;
    v47[4] = v48[4];
    *((unsigned char *)v7 + v46) = a2[v46];
    *((unsigned char *)v7 + a3[13]) = a2[a3[13]];
  }
  return v7;
}

uint64_t sub_100192DDC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7)) {
    v11(v6, v5);
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v5);
  }
  return result;
}

void *sub_100192F40(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  int v14 = &a2[v12];
  int v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v49 = *(unsigned int (**)(char *, uint64_t, int *))(v16 + 48);
  if (v49(v14, 1, v15))
  {
    uint64_t v17 = sub_100002ED4(&qword_10043E458);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    uint64_t v18 = v15[5];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v15[6];
    uint64_t v22 = &v13[v21];
    char v23 = &v14[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v15[7];
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  int v29 = &a2[v27];
  if (v49(&a2[v27], 1, v15))
  {
    uint64_t v30 = sub_100002ED4(&qword_10043E458);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    v11(v28, v29, v10);
    uint64_t v31 = v15[5];
    uint64_t v32 = &v28[v31];
    int v33 = &v29[v31];
    *(void *)uint64_t v32 = *(void *)v33;
    v32[8] = v33[8];
    uint64_t v34 = v15[6];
    uint64_t v35 = &v28[v34];
    uint64_t v36 = &v29[v34];
    *(void *)uint64_t v35 = *(void *)v36;
    v35[8] = v36[8];
    uint64_t v37 = v15[7];
    uint64_t v38 = &v28[v37];
    uint64_t v39 = &v29[v37];
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v28, 0, 1, v15);
  }
  uint64_t v40 = a3[9];
  uint64_t v41 = a3[10];
  uint64_t v42 = (char *)a1 + v40;
  uint64_t v43 = &a2[v40];
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  v42[4] = v43[4];
  *((unsigned char *)a1 + v41) = a2[v41];
  uint64_t v44 = a3[11];
  uint64_t v45 = a3[12];
  uint64_t v46 = (char *)a1 + v44;
  char v47 = &a2[v44];
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  v46[4] = v47[4];
  *((unsigned char *)a1 + v45) = a2[v45];
  *((unsigned char *)a1 + a3[13]) = a2[a3[13]];
  return a1;
}

char *sub_100193274(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v83 = type metadata accessor for UnknownStorage();
  uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v83 - 8) + 24);
  uint64_t v81 = *(void *)(v83 - 8);
  v80(v7, v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v82 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v82 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v10, v11, v83);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      char v19 = v18[8];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v19;
      uint64_t v20 = v12[6];
      uint64_t v21 = &v10[v20];
      uint64_t v22 = &v11[v20];
      char v23 = v22[8];
      *(void *)uint64_t v21 = *(void *)v22;
      v21[8] = v23;
      uint64_t v24 = v12[7];
      uint64_t v25 = &v10[v24];
      uint64_t v26 = &v11[v24];
      char v27 = v26[8];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v27;
      (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v28 = sub_100002ED4(&qword_10043E458);
    memcpy(v10, v11, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v80)(v10, v11, v83);
  uint64_t v56 = v12[5];
  uint64_t v57 = &v10[v56];
  uint64_t v58 = &v11[v56];
  char v59 = v58[8];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v59;
  uint64_t v60 = v12[6];
  uint64_t v61 = &v10[v60];
  uint64_t v62 = &v11[v60];
  char v63 = v62[8];
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v63;
  uint64_t v64 = v12[7];
  char v65 = &v10[v64];
  uint64_t v66 = &v11[v64];
  char v67 = v66[8];
  *(void *)char v65 = *(void *)v66;
  v65[8] = v67;
LABEL_7:
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = (char *)a2 + v29;
  int v32 = v13(&a1[v29], 1, v12);
  int v33 = v13(v31, 1, v12);
  if (!v32)
  {
    if (!v33)
    {
      ((void (*)(char *, char *, uint64_t))v80)(v30, v31, v83);
      uint64_t v68 = v12[5];
      char v69 = &v30[v68];
      uint64_t v70 = &v31[v68];
      char v71 = v70[8];
      *(void *)char v69 = *(void *)v70;
      v69[8] = v71;
      uint64_t v72 = v12[6];
      uint64_t v73 = &v30[v72];
      uint64_t v74 = &v31[v72];
      char v75 = v74[8];
      *(void *)uint64_t v73 = *(void *)v74;
      v73[8] = v75;
      uint64_t v76 = v12[7];
      uint64_t v77 = &v30[v76];
      uint64_t v78 = &v31[v76];
      char v79 = v78[8];
      *(void *)uint64_t v77 = *(void *)v78;
      v77[8] = v79;
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v30, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_12;
  }
  if (v33)
  {
LABEL_12:
    uint64_t v46 = sub_100002ED4(&qword_10043E458);
    memcpy(v30, v31, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v30, v31, v83);
  uint64_t v34 = v12[5];
  uint64_t v35 = &v30[v34];
  uint64_t v36 = &v31[v34];
  char v37 = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v37;
  uint64_t v38 = v12[6];
  uint64_t v39 = &v30[v38];
  uint64_t v40 = &v31[v38];
  char v41 = v40[8];
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v41;
  uint64_t v42 = v12[7];
  uint64_t v43 = &v30[v42];
  uint64_t v44 = &v31[v42];
  char v45 = v44[8];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v45;
  (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v30, 0, 1, v12);
LABEL_13:
  uint64_t v47 = a3[9];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = (char *)a2 + v47;
  int v50 = *(_DWORD *)v49;
  v48[4] = v49[4];
  *(_DWORD *)uint64_t v48 = v50;
  a1[a3[10]] = *((unsigned char *)a2 + a3[10]);
  uint64_t v51 = a3[11];
  uint64_t v52 = &a1[v51];
  size_t v53 = (char *)a2 + v51;
  int v54 = *(_DWORD *)v53;
  v52[4] = v53[4];
  *(_DWORD *)uint64_t v52 = v54;
  a1[a3[12]] = *((unsigned char *)a2 + a3[12]);
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  return a1;
}

_OWORD *sub_100193740(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = &a2[v11];
  int v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  if (v48(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    char v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v26 = a3[8];
  char v27 = (char *)a1 + v26;
  uint64_t v28 = &a2[v26];
  if (v48(&a2[v26], 1, v14))
  {
    uint64_t v29 = sub_100002ED4(&qword_10043E458);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    v10(v27, v28, v9);
    uint64_t v30 = v14[5];
    uint64_t v31 = &v27[v30];
    int v32 = &v28[v30];
    *(void *)uint64_t v31 = *(void *)v32;
    v31[8] = v32[8];
    uint64_t v33 = v14[6];
    uint64_t v34 = &v27[v33];
    uint64_t v35 = &v28[v33];
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    uint64_t v36 = v14[7];
    char v37 = &v27[v36];
    uint64_t v38 = &v28[v36];
    *(void *)char v37 = *(void *)v38;
    v37[8] = v38[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v27, 0, 1, v14);
  }
  uint64_t v39 = a3[9];
  uint64_t v40 = a3[10];
  char v41 = (char *)a1 + v39;
  uint64_t v42 = &a2[v39];
  *(_DWORD *)char v41 = *(_DWORD *)v42;
  v41[4] = v42[4];
  *((unsigned char *)a1 + v40) = a2[v40];
  uint64_t v43 = a3[11];
  uint64_t v44 = a3[12];
  char v45 = (char *)a1 + v43;
  uint64_t v46 = &a2[v43];
  *(_DWORD *)char v45 = *(_DWORD *)v46;
  v45[4] = v46[4];
  *((unsigned char *)a1 + v44) = a2[v44];
  *((unsigned char *)a1 + a3[13]) = a2[a3[13]];
  return a1;
}

char *sub_100193A64(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  swift_bridgeObjectRelease();
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v71 = type metadata accessor for UnknownStorage();
  uint64_t v68 = *(void (**)(char *, char *))(*(void *)(v71 - 8) + 40);
  uint64_t v69 = *(void *)(v71 - 8);
  v68(v7, v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v70 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v70 + 48);
  int v14 = v13(v10, 1, v12);
  int v15 = v13(v11, 1, v12);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v10, v11, v71);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v70 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_10015B354((uint64_t)v10, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v25 = sub_100002ED4(&qword_10043E458);
    memcpy(v10, v11, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v68)(v10, v11, v71);
  uint64_t v50 = v12[5];
  uint64_t v51 = &v10[v50];
  uint64_t v52 = &v11[v50];
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v52[8];
  uint64_t v53 = v12[6];
  int v54 = &v10[v53];
  uint64_t v55 = &v11[v53];
  *(void *)int v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = v12[7];
  uint64_t v57 = &v10[v56];
  uint64_t v58 = &v11[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v58[8];
LABEL_7:
  uint64_t v26 = a3[8];
  char v27 = &a1[v26];
  uint64_t v28 = (char *)a2 + v26;
  int v29 = v13(&a1[v26], 1, v12);
  int v30 = v13(v28, 1, v12);
  if (!v29)
  {
    if (!v30)
    {
      ((void (*)(char *, char *, uint64_t))v68)(v27, v28, v71);
      uint64_t v59 = v12[5];
      uint64_t v60 = &v27[v59];
      uint64_t v61 = &v28[v59];
      *(void *)uint64_t v60 = *(void *)v61;
      v60[8] = v61[8];
      uint64_t v62 = v12[6];
      char v63 = &v27[v62];
      uint64_t v64 = &v28[v62];
      *(void *)char v63 = *(void *)v64;
      v63[8] = v64[8];
      uint64_t v65 = v12[7];
      uint64_t v66 = &v27[v65];
      char v67 = &v28[v65];
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v67[8];
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v27, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    uint64_t v40 = sub_100002ED4(&qword_10043E458);
    memcpy(v27, v28, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v27, v28, v71);
  uint64_t v31 = v12[5];
  int v32 = &v27[v31];
  uint64_t v33 = &v28[v31];
  *(void *)int v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = v12[6];
  uint64_t v35 = &v27[v34];
  uint64_t v36 = &v28[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  uint64_t v37 = v12[7];
  uint64_t v38 = &v27[v37];
  uint64_t v39 = &v28[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  (*(void (**)(char *, void, uint64_t, int *))(v70 + 56))(v27, 0, 1, v12);
LABEL_13:
  uint64_t v41 = a3[9];
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v41];
  uint64_t v44 = (char *)a2 + v41;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  v43[4] = v44[4];
  a1[v42] = *((unsigned char *)a2 + v42);
  uint64_t v45 = a3[11];
  uint64_t v46 = a3[12];
  uint64_t v47 = &a1[v45];
  uint64_t v48 = (char *)a2 + v45;
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  v47[4] = v48[4];
  a1[v46] = *((unsigned char *)a2 + v46);
  a1[a3[13]] = *((unsigned char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_100193F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100193F2C);
}

uint64_t sub_100193F2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100002ED4(&qword_10043E458);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10019405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100194070);
}

void *sub_100194070(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100002ED4(&qword_10043E458);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1001941A0()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.TransmissionStateType()
{
  return &type metadata for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.TransmissionStateType;
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.SensorType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.SensorType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100194424);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10019444C(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.SensorType()
{
  return &type metadata for CLP_LogEntry_PrivateData_AccessoryVehicleSpeedNotification.SensorType;
}

uint64_t sub_100194468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019447C);
}

uint64_t sub_100194480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100194494);
}

uint64_t sub_100194498()
{
  return sub_1001ABF9C();
}

void *sub_1001944B4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v12 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    int v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    v14[4] = v15[4];
    *(_DWORD *)int v14 = *(_DWORD *)v15;
  }
  return a1;
}

uint64_t sub_1001945D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  return a1;
}

uint64_t sub_10019469C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v11 = a3[10];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(unsigned char *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = v10;
  return a1;
}

uint64_t sub_100194774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  return a1;
}

uint64_t sub_100194840(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  return a1;
}

uint64_t sub_10019490C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100194920);
}

uint64_t sub_100194924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      int v11 = ((v10 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v11 = -2;
    }
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100194A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100194A14);
}

uint64_t sub_100194A18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t sub_100194AD4()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100194B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100194BA0);
}

uint64_t sub_100194BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100194BB8);
}

uint64_t getEnumTagSinglePayload for CLP_LogEntry_PrivateData_DeviceStatus.NotificationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_DeviceStatus.NotificationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100194D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus.NotificationType()
{
  return &type metadata for CLP_LogEntry_PrivateData_DeviceStatus.NotificationType;
}

char *sub_100194D50(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    unsigned int v10 = &a1[v9];
    int v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v25] = a2[v25];
    uint64_t v26 = a3[8];
    char v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    *(_DWORD *)char v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
  }
  return a1;
}

uint64_t sub_100194F80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  unsigned int v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  return a1;
}

uint64_t sub_100195160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 24);
  v7(a1, a2, v6);
  uint64_t v49 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v48 = a2;
  unsigned int v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v47 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v47, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v47 + v17;
      uint64_t v19 = &v10[v17];
      char v20 = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v20;
      uint64_t v21 = v11[6];
      uint64_t v22 = v47 + v21;
      uint64_t v23 = &v10[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v11[7];
      uint64_t v26 = v47 + v25;
      char v27 = &v10[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v47, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v47;
  }
  else
  {
    if (!v14)
    {
      v7(v47, (uint64_t)v10, v6);
      uint64_t v29 = v11[5];
      uint64_t v30 = v47 + v29;
      uint64_t v31 = &v10[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      uint64_t v33 = v11[6];
      uint64_t v34 = v47 + v33;
      uint64_t v35 = &v10[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v11[7];
      uint64_t v38 = v47 + v37;
      uint64_t v39 = &v10[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      goto LABEL_9;
    }
    sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v47;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  *(unsigned char *)(a1 + v49[6]) = *(unsigned char *)(v48 + v49[6]);
  *(unsigned char *)(a1 + v49[7]) = *(unsigned char *)(v48 + v49[7]);
  uint64_t v41 = v49[8];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (int *)(v48 + v41);
  int v44 = *v43;
  *(unsigned char *)(v42 + 4) = *((unsigned char *)v43 + 4);
  *(_DWORD *)uint64_t v42 = v44;
  return a1;
}

uint64_t sub_100195480(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  unsigned int v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    size_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)size_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(unsigned char *)(v25 + 4) = *(unsigned char *)(v26 + 4);
  return a1;
}

uint64_t sub_100195660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40);
  v7(a1, a2, v6);
  uint64_t v43 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v42 = a2;
  unsigned int v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v41 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v41, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v41 + v17;
      uint64_t v19 = &v10[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v19[8];
      uint64_t v20 = v11[6];
      uint64_t v21 = v41 + v20;
      uint64_t v22 = &v10[v20];
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = v22[8];
      uint64_t v23 = v11[7];
      uint64_t v24 = v41 + v23;
      uint64_t v25 = &v10[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v25[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v41, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v41;
  }
  else
  {
    if (!v14)
    {
      v7(v41, (uint64_t)v10, v6);
      uint64_t v26 = v11[5];
      uint64_t v27 = v41 + v26;
      char v28 = &v10[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = v28[8];
      uint64_t v29 = v11[6];
      uint64_t v30 = v41 + v29;
      uint64_t v31 = &v10[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v31[8];
      uint64_t v32 = v11[7];
      uint64_t v33 = v41 + v32;
      uint64_t v34 = &v10[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = v34[8];
      goto LABEL_9;
    }
    sub_10015B354(v41, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v41;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  uint64_t v35 = v43[7];
  *(unsigned char *)(a1 + v43[6]) = *(unsigned char *)(v42 + v43[6]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(v42 + v35);
  uint64_t v36 = v43[8];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = v42 + v36;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(unsigned char *)(v37 + 4) = *(unsigned char *)(v38 + 4);
  return a1;
}

uint64_t sub_10019597C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100195990);
}

uint64_t sub_100195990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 8u) {
    int v14 = 8;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v15 = v14 - 8;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 8u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t sub_100195AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100195AC4);
}

uint64_t sub_100195AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100002ED4(&qword_10043E458);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 8;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100195BD8()
{
}

unsigned char *_s10ALProtobuf58CLP_LogEntry_PrivateData_MotionTypeCompassCalibrationLevelOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100195CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_SignalEnvironment.SignalEnvironmentType()
{
  return &type metadata for CLP_LogEntry_PrivateData_SignalEnvironment.SignalEnvironmentType;
}

uint64_t sub_100195CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100195D08);
}

uint64_t sub_100195D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 4u) {
      int v10 = 4;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v11 = v10 - 4;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 4u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100195DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100195DE4);
}

uint64_t sub_100195DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 4;
  }
  return result;
}

uint64_t sub_100195EA0()
{
  return sub_100099E94();
}

uint64_t sub_100195EB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 24);
  v7(a1, a2, v6);
  uint64_t v56 = a3;
  uint64_t v57 = a2;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v55 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v55, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v55 + v17;
      uint64_t v19 = &v10[v17];
      char v20 = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v20;
      uint64_t v21 = v11[6];
      uint64_t v22 = v55 + v21;
      uint64_t v23 = &v10[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v11[7];
      uint64_t v26 = v55 + v25;
      uint64_t v27 = &v10[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v55, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v55;
  }
  else
  {
    if (!v14)
    {
      v7(v55, (uint64_t)v10, v6);
      uint64_t v29 = v11[5];
      uint64_t v30 = v55 + v29;
      uint64_t v31 = &v10[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      uint64_t v33 = v11[6];
      uint64_t v34 = v55 + v33;
      uint64_t v35 = &v10[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v11[7];
      uint64_t v38 = v55 + v37;
      uint64_t v39 = &v10[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      goto LABEL_9;
    }
    sub_10015B354(v55, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v55;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  uint64_t v41 = v56[6];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (int *)(v57 + v41);
  int v44 = *v43;
  *(unsigned char *)(v42 + 4) = *((unsigned char *)v43 + 4);
  *(_DWORD *)uint64_t v42 = v44;
  uint64_t v45 = v56[7];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (int *)(v57 + v45);
  int v48 = *v47;
  *(unsigned char *)(v46 + 4) = *((unsigned char *)v47 + 4);
  *(_DWORD *)uint64_t v46 = v48;
  uint64_t v49 = v56[8];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = (int *)(v57 + v49);
  int v52 = *v51;
  *(unsigned char *)(v50 + 4) = *((unsigned char *)v51 + 4);
  *(_DWORD *)uint64_t v50 = v52;
  return a1;
}

uint64_t sub_1001961E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40);
  v7(a1, a2, v6);
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v46 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v46, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v46 + v17;
      uint64_t v19 = &v10[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v19[8];
      uint64_t v20 = v11[6];
      uint64_t v21 = v46 + v20;
      uint64_t v22 = &v10[v20];
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = v22[8];
      uint64_t v23 = v11[7];
      uint64_t v24 = v46 + v23;
      uint64_t v25 = &v10[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v25[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v46, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v46;
  }
  else
  {
    if (!v14)
    {
      v7(v46, (uint64_t)v10, v6);
      uint64_t v26 = v11[5];
      uint64_t v27 = v46 + v26;
      char v28 = &v10[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = v28[8];
      uint64_t v29 = v11[6];
      uint64_t v30 = v46 + v29;
      uint64_t v31 = &v10[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v31[8];
      uint64_t v32 = v11[7];
      uint64_t v33 = v46 + v32;
      uint64_t v34 = &v10[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = v34[8];
      goto LABEL_9;
    }
    sub_10015B354(v46, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v46;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  uint64_t v35 = v47[6];
  uint64_t v36 = v47[7];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = v48 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(unsigned char *)(v37 + 4) = *(unsigned char *)(v38 + 4);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = v48 + v36;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(unsigned char *)(v39 + 4) = *(unsigned char *)(v40 + 4);
  uint64_t v41 = v47[8];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = v48 + v41;
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  *(unsigned char *)(v42 + 4) = *(unsigned char *)(v43 + 4);
  return a1;
}

uint64_t sub_100196518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019652C);
}

uint64_t sub_10019652C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_100196538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019654C);
}

uint64_t sub_10019654C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

uint64_t sub_100196558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019656C);
}

uint64_t sub_100196570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100196584);
}

uint64_t *sub_100196588(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    int v10 = (char *)a1 + v9;
    unsigned int v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_100196780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100196928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v43 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v30 = v11[5];
      uint64_t v31 = &v9[v30];
      uint64_t v32 = &v10[v30];
      char v33 = v32[8];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v33;
      uint64_t v34 = v11[6];
      uint64_t v35 = &v9[v34];
      uint64_t v36 = &v10[v34];
      char v37 = v36[8];
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v37;
      uint64_t v38 = v11[7];
      uint64_t v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      char v41 = v40[8];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v41;
      return v43;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v28 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v28 - 8) + 64));
    return v43;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  char v19 = v18[8];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v19;
  uint64_t v20 = v11[6];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  char v23 = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v23;
  uint64_t v24 = v11[7];
  uint64_t v25 = &v9[v24];
  uint64_t v26 = &v10[v24];
  char v27 = v26[8];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v27;
  (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return v43;
}

uint64_t sub_100196BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    char v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100196D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v37 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v27 = v11[5];
      uint64_t v28 = &v9[v27];
      uint64_t v29 = &v10[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v11[6];
      uint64_t v31 = &v9[v30];
      uint64_t v32 = &v10[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v11[7];
      uint64_t v34 = &v9[v33];
      uint64_t v35 = &v10[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      return v37;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v25 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v25 - 8) + 64));
    return v37;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = v11[6];
  uint64_t v20 = &v9[v19];
  uint64_t v21 = &v10[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = v11[7];
  char v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  *(void *)char v23 = *(void *)v24;
  v23[8] = v24[8];
  (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return v37;
}

uint64_t sub_100197010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100197024);
}

uint64_t sub_100197024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E458);
}

uint64_t sub_100197030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100197044);
}

uint64_t sub_100197044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E458);
}

uint64_t sub_100197050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100197064);
}

uint64_t sub_100197068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019707C);
}

void *sub_100197080(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  }
  return a1;
}

uint64_t sub_100197190(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

uint64_t sub_100197250(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100197320(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

uint64_t sub_1001973E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

uint64_t sub_1001974A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001974B4);
}

uint64_t sub_1001974B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001974CC);
}

uint64_t sub_1001974D0()
{
  return sub_1001974E0();
}

uint64_t sub_1001974E0()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100197594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001975A8);
}

uint64_t sub_1001975AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001975C0);
}

unsigned char *storeEnumTagSinglePayload for CLP_LogEntry_PrivateData_StepCountEntry.DistanceSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100197690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry.DistanceSourceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_StepCountEntry.DistanceSourceType;
}

uint64_t *sub_1001976C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  return sub_100190994(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, &qword_10043E518);
}

uint64_t sub_1001976E8(uint64_t a1, uint64_t a2)
{
  return sub_100190CC0(a1, a2, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry);
}

uint64_t sub_100197700(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100190E4C(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, &qword_10043E518);
}

uint64_t sub_100197720(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197754(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, &qword_10043E518);
}

uint64_t sub_100197754(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v60 + 24);
  v59(a1, a2);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  int v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v11, v12, v62);
      uint64_t v18 = v13[5];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      char v21 = v20[8];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v21;
      uint64_t v22 = v13[6];
      char v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      char v25 = v24[8];
      *(void *)char v23 = *(void *)v24;
      v23[8] = v25;
      uint64_t v26 = v13[7];
      uint64_t v27 = &v11[v26];
      uint64_t v28 = &v12[v26];
      char v29 = v28[8];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v29;
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v30 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v59)(v11, v12, v62);
  uint64_t v46 = v13[5];
  uint64_t v47 = &v11[v46];
  uint64_t v48 = &v12[v46];
  char v49 = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  v47[8] = v49;
  uint64_t v50 = v13[6];
  uint64_t v51 = &v11[v50];
  int v52 = &v12[v50];
  char v53 = v52[8];
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v53;
  uint64_t v54 = v13[7];
  uint64_t v55 = &v11[v54];
  uint64_t v56 = &v12[v54];
  char v57 = v56[8];
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v57;
LABEL_7:
  uint64_t v31 = a3[6];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = (int *)(a2 + v31);
  int v34 = *v33;
  *(unsigned char *)(v32 + 4) = *((unsigned char *)v33 + 4);
  *(_DWORD *)uint64_t v32 = v34;
  uint64_t v35 = a3[7];
  uint64_t v36 = (char *)(a1 + v35);
  uint64_t v37 = (char *)(a2 + v35);
  uint64_t v38 = a4(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      ((void (*)(char *, char *, uint64_t))v59)(v36, v37, v62);
      *(void *)&v36[*(int *)(v38 + 20)] = *(void *)&v37[*(int *)(v38 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_10015B354((uint64_t)v36, a5);
    goto LABEL_12;
  }
  if (v42)
  {
LABEL_12:
    uint64_t v44 = sub_100002ED4(a6);
    memcpy(v36, v37, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v36, v37, v62);
  *(void *)&v36[*(int *)(v38 + 20)] = *(void *)&v37[*(int *)(v38 + 20)];
  uint64_t v43 = *(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56);
  swift_retain();
  v43(v36, 0, 1, v38);
  return a1;
}

uint64_t sub_100197B78(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100191158(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, &qword_10043E518);
}

uint64_t sub_100197B98(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_100197BCC(a1, a2, a3, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry, &qword_10043E518);
}

uint64_t sub_100197BCC(uint64_t a1, uint64_t a2, int *a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v52 + 40);
  v51(a1, a2);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  int v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v11, v12, v54);
      uint64_t v18 = v13[5];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v13[6];
      uint64_t v22 = &v11[v21];
      char v23 = &v12[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v13[7];
      char v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      *(void *)char v25 = *(void *)v26;
      v25[8] = v26[8];
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v51)(v11, v12, v54);
  uint64_t v41 = v13[5];
  int v42 = &v11[v41];
  uint64_t v43 = &v12[v41];
  *(void *)int v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = v13[6];
  uint64_t v45 = &v11[v44];
  uint64_t v46 = &v12[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = v13[7];
  uint64_t v48 = &v11[v47];
  char v49 = &v12[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  uint64_t v32 = (char *)(a1 + v29);
  uint64_t v33 = (char *)(a2 + v29);
  uint64_t v34 = a4(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      ((void (*)(char *, char *, uint64_t))v51)(v32, v33, v54);
      *(void *)&v32[*(int *)(v34 + 20)] = *(void *)&v33[*(int *)(v34 + 20)];
      swift_release();
      return a1;
    }
    sub_10015B354((uint64_t)v32, a5);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v39 = sub_100002ED4(a6);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v32, v33, v54);
  *(void *)&v32[*(int *)(v34 + 20)] = *(void *)&v33[*(int *)(v34 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

uint64_t sub_100197FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100197FF4);
}

uint64_t sub_100197FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100198000(a1, a2, a3, &qword_10043E518);
}

uint64_t sub_100198000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, v10);
  }
  uint64_t v13 = sub_100002ED4(&qword_10043E458);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_5;
  }
  uint64_t v16 = sub_100002ED4(a4);
  int v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a3 + 28);

  return v17(v19, a2, v18);
}

uint64_t sub_100198154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100198168);
}

uint64_t sub_100198168(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100198174(a1, a2, a3, a4, &qword_10043E518);
}

uint64_t sub_100198174(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = v10;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v14 = a1;
LABEL_5:
    return v13(v14, a2, a2, v12);
  }
  uint64_t v15 = sub_100002ED4(&qword_10043E458);
  uint64_t v16 = *(void *)(v15 - 8);
  if (*(_DWORD *)(v16 + 84) == a3)
  {
    uint64_t v12 = v15;
    uint64_t v14 = a1 + *(int *)(a4 + 20);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    goto LABEL_5;
  }
  uint64_t v18 = sub_100002ED4(a5);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + *(int *)(a4 + 28);

  return v19(v21, a2, a2, v20);
}

void sub_1001982E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100198300(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  type metadata accessor for UnknownStorage();
  if (v7 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v8 <= 0x3F)
    {
      sub_1001837E8(319, a4, a5);
      if (v9 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100198440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100198454);
}

uint64_t sub_100198458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019846C);
}

uint64_t sub_100198470()
{
  return sub_10019847C();
}

uint64_t sub_10019847C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100198510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100198524);
}

uint64_t sub_100198528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019853C);
}

uint64_t sub_100198540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100198554);
}

uint64_t sub_100198558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019856C);
}

char *sub_100198570(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    unint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      int v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)int v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      char v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)char v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_100002ED4(&qword_10043E530);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v8(v26, v27, v7);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
      swift_retain();
      v31(v26, 0, 1, v28);
    }
    uint64_t v32 = a3[7];
    uint64_t v33 = a3[8];
    uint64_t v34 = &a1[v32];
    uint64_t v35 = &a2[v32];
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = &a1[v33];
    int v37 = &a2[v33];
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    a1[a3[9]] = a2[a3[9]];
  }
  return a1;
}

uint64_t sub_1001988A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)) {
    v5(v6, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    v5(v8, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001989FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100002ED4(&qword_10043E530);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
    swift_retain();
    v29(v24, 0, 1, v26);
  }
  uint64_t v30 = a3[7];
  uint64_t v31 = a3[8];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  uint64_t v34 = a1 + v31;
  uint64_t v35 = a2 + v31;
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(unsigned char *)(v34 + 4) = *(unsigned char *)(v35 + 4);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100198CE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v60 + 24);
  v59(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v8, v9, v61);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v59)(v8, v9, v61);
  uint64_t v47 = v10[5];
  uint64_t v48 = &v8[v47];
  char v49 = &v9[v47];
  char v50 = v49[8];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v50;
  uint64_t v51 = v10[6];
  uint64_t v52 = &v8[v51];
  char v53 = &v9[v51];
  char v54 = v53[8];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v54;
  uint64_t v55 = v10[7];
  uint64_t v56 = &v8[v55];
  char v57 = &v9[v55];
  char v58 = v57[8];
  *(void *)uint64_t v56 = *(void *)v57;
  v56[8] = v58;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = (char *)(a1 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  uint64_t v31 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      ((void (*)(char *, char *, uint64_t))v59)(v29, v30, v61);
      *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
      swift_retain();
      swift_release();
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v37 = sub_100002ED4(&qword_10043E530);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v29, v30, v61);
  *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
  uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
  swift_retain();
  v36(v29, 0, 1, v31);
LABEL_13:
  uint64_t v38 = a3[7];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (int *)(a2 + v38);
  int v41 = *v40;
  *(unsigned char *)(v39 + 4) = *((unsigned char *)v40 + 4);
  *(_DWORD *)uint64_t v39 = v41;
  uint64_t v42 = a3[8];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (int *)(a2 + v42);
  int v45 = *v44;
  *(unsigned char *)(v43 + 4) = *((unsigned char *)v44 + 4);
  *(_DWORD *)uint64_t v43 = v45;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100199138(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100002ED4(&qword_10043E530);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = a3[8];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(unsigned char *)(v33 + 4) = *(unsigned char *)(v34 + 4);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100199418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  char v50 = *(void (**)(uint64_t, uint64_t))(v51 + 40);
  v50(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v8, v9, v52);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v50)(v8, v9, v52);
  uint64_t v41 = v10[5];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = v10[6];
  int v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  *(void *)int v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = v10[7];
  uint64_t v48 = &v8[v47];
  char v49 = &v9[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass(0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      ((void (*)(char *, char *, uint64_t))v50)(v26, v27, v52);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      swift_release();
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
    goto LABEL_12;
  }
  if (v32)
  {
LABEL_12:
    uint64_t v33 = sub_100002ED4(&qword_10043E530);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v26, v27, v52);
  *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_13:
  uint64_t v34 = a3[7];
  uint64_t v35 = a3[8];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  *(unsigned char *)(v36 + 4) = *(unsigned char *)(v37 + 4);
  uint64_t v38 = a1 + v35;
  uint64_t v39 = a2 + v35;
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v39 + 4);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100199860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100199874);
}

uint64_t sub_100199874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E530);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unsigned int v16 = *(unsigned __int8 *)(a1 + a3[9]);
  if (v16 >= 2) {
    int v17 = ((v16 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v17 = -2;
  }
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_1001999F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100199A0C);
}

uint64_t sub_100199A0C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = sub_100002ED4(&qword_10043E530);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[9]) = a2 + 2;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100199B70()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_1004419C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100199CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100199CD4);
}

uint64_t sub_100199CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100199CEC);
}

uint64_t sub_100199CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100199D04);
}

uint64_t sub_100199D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100199D1C);
}

uint64_t *sub_100199D20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }
  return a1;
}

uint64_t sub_100199DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_100199E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_100199F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_100199FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(unsigned char *)(v8 + 4) = *(unsigned char *)(v9 + 4);
  return a1;
}

uint64_t sub_10019A02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019A040);
}

uint64_t sub_10019A044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019A058);
}

uint64_t sub_10019A05C()
{
  return sub_1001AC9B0();
}

char *sub_10019A068(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    char v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      int v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)int v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_100002ED4(&qword_10043E538);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v8(v26, v27, v7);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      int v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
      swift_retain();
      v31(v26, 0, 1, v28);
    }
    uint64_t v32 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    uint64_t v35 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    uint64_t v38 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = sub_100002ED4(&qword_10043E540);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      v8(v36, v37, v7);
      uint64_t v41 = *(int *)(v38 + 20);
      uint64_t v42 = &v36[v41];
      uint64_t v43 = &v37[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v44 = a3[11];
    uint64_t v45 = a3[12];
    uint64_t v46 = &a1[v44];
    uint64_t v47 = &a2[v44];
    *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
    v46[4] = v47[4];
    uint64_t v48 = &a1[v45];
    char v49 = &a2[v45];
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
  }
  return a1;
}

uint64_t sub_10019A4A8(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v12(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6)) {
    v12(v5, v4);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v12(v7, v4);
    swift_release();
  }
  uint64_t v9 = a1 + a2[10];
  uint64_t v10 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v4);
  }
  return result;
}

uint64_t sub_10019A678(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100002ED4(&qword_10043E538);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
    swift_retain();
    v29(v24, 0, 1, v26);
  }
  uint64_t v30 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v34 = (char *)(a1 + v33);
  uint64_t v35 = (char *)(a2 + v33);
  uint64_t v36 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = sub_100002ED4(&qword_10043E540);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v34, (uint64_t)v35, v6);
    uint64_t v39 = *(int *)(v36 + 20);
    uint64_t v40 = &v34[v39];
    uint64_t v41 = &v35[v39];
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  uint64_t v42 = a3[11];
  uint64_t v43 = a3[12];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
  *(unsigned char *)(v44 + 4) = *(unsigned char *)(v45 + 4);
  uint64_t v46 = a1 + v43;
  uint64_t v47 = a2 + v43;
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  *(unsigned char *)(v46 + 4) = *(unsigned char *)(v47 + 4);
  return a1;
}

uint64_t sub_10019AA68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v81 + 24);
  v80(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v8, v9, v82);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v80)(v8, v9, v82);
  uint64_t v64 = v10[5];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  char v67 = v66[8];
  *(void *)uint64_t v65 = *(void *)v66;
  v65[8] = v67;
  uint64_t v68 = v10[6];
  uint64_t v69 = &v8[v68];
  uint64_t v70 = &v9[v68];
  char v71 = v70[8];
  *(void *)uint64_t v69 = *(void *)v70;
  v69[8] = v71;
  uint64_t v72 = v10[7];
  uint64_t v73 = &v8[v72];
  uint64_t v74 = &v9[v72];
  char v75 = v74[8];
  *(void *)uint64_t v73 = *(void *)v74;
  v73[8] = v75;
LABEL_7:
  uint64_t v28 = a3[6];
  uint64_t v29 = (char *)(a1 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  uint64_t v31 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v29, v30, v82);
      *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
      uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56);
      swift_retain();
      v36(v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
LABEL_12:
    uint64_t v37 = sub_100002ED4(&qword_10043E538);
    memcpy(v29, v30, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v80)(v29, v30, v82);
  *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
  swift_retain();
  swift_release();
LABEL_13:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v38 = a3[8];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (int *)(a2 + v38);
  int v41 = *v40;
  *(unsigned char *)(v39 + 4) = *((unsigned char *)v40 + 4);
  *(_DWORD *)uint64_t v39 = v41;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v42 = a3[10];
  uint64_t v43 = (char *)(a1 + v42);
  uint64_t v44 = (char *)(a2 + v42);
  uint64_t v45 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1, v45);
  int v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      ((void (*)(char *, char *, uint64_t))v80)(v43, v44, v82);
      uint64_t v76 = *(int *)(v45 + 20);
      uint64_t v77 = &v43[v76];
      uint64_t v78 = &v44[v76];
      char v79 = v78[4];
      *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
      v77[4] = v79;
      goto LABEL_19;
    }
    sub_10015B354((uint64_t)v43, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
    goto LABEL_18;
  }
  if (v49)
  {
LABEL_18:
    uint64_t v54 = sub_100002ED4(&qword_10043E540);
    memcpy(v43, v44, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v43, v44, v82);
  uint64_t v50 = *(int *)(v45 + 20);
  uint64_t v51 = &v43[v50];
  uint64_t v52 = &v44[v50];
  char v53 = v52[4];
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  v51[4] = v53;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_19:
  uint64_t v55 = a3[11];
  uint64_t v56 = a1 + v55;
  char v57 = (int *)(a2 + v55);
  int v58 = *v57;
  *(unsigned char *)(v56 + 4) = *((unsigned char *)v57 + 4);
  *(_DWORD *)uint64_t v56 = v58;
  uint64_t v59 = a3[12];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = (int *)(a2 + v59);
  int v62 = *v61;
  *(unsigned char *)(v60 + 4) = *((unsigned char *)v61 + 4);
  *(_DWORD *)uint64_t v60 = v62;
  return a1;
}

uint64_t sub_10019B054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_100002ED4(&qword_10043E538);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  uint64_t v32 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v33 = (char *)(a1 + v32);
  int v34 = (char *)(a2 + v32);
  uint64_t v35 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = sub_100002ED4(&qword_10043E540);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v33, (uint64_t)v34, v6);
    uint64_t v38 = *(int *)(v35 + 20);
    uint64_t v39 = &v33[v38];
    uint64_t v40 = &v34[v38];
    *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v41 = a3[11];
  uint64_t v42 = a3[12];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(unsigned char *)(v43 + 4) = *(unsigned char *)(v44 + 4);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(unsigned char *)(v45 + 4) = *(unsigned char *)(v46 + 4);
  return a1;
}

uint64_t sub_10019B440(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = v6;
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v69 + 40);
  v68(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v8, v9, v70);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v68)(v8, v9, v70);
  uint64_t v56 = v10[5];
  char v57 = &v8[v56];
  int v58 = &v9[v56];
  *(void *)char v57 = *(void *)v58;
  v57[8] = v58[8];
  uint64_t v59 = v10[6];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  *(void *)uint64_t v60 = *(void *)v61;
  v60[8] = v61[8];
  uint64_t v62 = v10[7];
  char v63 = &v8[v62];
  uint64_t v64 = &v9[v62];
  *(void *)char v63 = *(void *)v64;
  v63[8] = v64[8];
LABEL_7:
  uint64_t v25 = a3[6];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion(0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v31 = v30(v26, 1, v28);
  int v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v26, v27, v70);
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    sub_10015B354((uint64_t)v26, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
LABEL_12:
    uint64_t v33 = sub_100002ED4(&qword_10043E538);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  ((void (*)(char *, char *, uint64_t))v68)(v26, v27, v70);
  *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
  swift_release();
LABEL_13:
  uint64_t v34 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  uint64_t v37 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      ((void (*)(char *, char *, uint64_t))v68)(v38, v39, v70);
      uint64_t v65 = *(int *)(v40 + 20);
      uint64_t v66 = &v38[v65];
      char v67 = &v39[v65];
      *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
      v66[4] = v67[4];
      goto LABEL_19;
    }
    sub_10015B354((uint64_t)v38, type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
    goto LABEL_18;
  }
  if (v44)
  {
LABEL_18:
    uint64_t v48 = sub_100002ED4(&qword_10043E540);
    memcpy(v38, v39, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v38, v39, v70);
  uint64_t v45 = *(int *)(v40 + 20);
  uint64_t v46 = &v38[v45];
  uint64_t v47 = &v39[v45];
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  v46[4] = v47[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_19:
  uint64_t v49 = a3[11];
  uint64_t v50 = a3[12];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
  *(unsigned char *)(v51 + 4) = *(unsigned char *)(v52 + 4);
  uint64_t v53 = a1 + v50;
  uint64_t v54 = a2 + v50;
  *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
  *(unsigned char *)(v53 + 4) = *(unsigned char *)(v54 + 4);
  return a1;
}

uint64_t sub_10019BA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019BA28);
}

uint64_t sub_10019BA28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E538);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  if (a2 == 253)
  {
    unsigned int v16 = *(unsigned __int8 *)(a1 + a3[7]);
    if (v16 >= 2) {
      int v17 = ((v16 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v17 = -2;
    }
    if (v17 < 0) {
      int v17 = -1;
    }
    return (v17 + 1);
  }
  else
  {
    uint64_t v18 = sub_100002ED4(&qword_10043E540);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[10];
    return v19(v21, a2, v20);
  }
}

uint64_t sub_10019BC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019BC2C);
}

uint64_t sub_10019BC2C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t result = sub_100002ED4(&qword_10043E538);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  if (a3 == 253)
  {
    *(unsigned char *)(a1 + a4[7]) = a2 + 2;
  }
  else
  {
    uint64_t v17 = sub_100002ED4(&qword_10043E540);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v19 = v17;
    uint64_t v20 = a1 + a4[10];
    return v18(v20, a2, a2, v19);
  }
  return result;
}

void sub_10019BE00()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, &qword_100441BE8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion);
      if (v2 <= 0x3F)
      {
        sub_1001837E8(319, (unint64_t *)&unk_100441BF0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_SensorFusionStatus);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10019BFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019BFC8);
}

uint64_t sub_10019BFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019BFE0);
}

uint64_t *sub_10019BFE4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = (char *)a1 + v10;
    uint64_t v14 = (char *)a2 + v10;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = (char *)a1 + v16;
    uint64_t v20 = (char *)a2 + v16;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    v23[8] = v24[8];
    *(void *)uint64_t v23 = *(void *)v24;
    uint64_t v25 = (char *)a1 + v22;
    uint64_t v26 = (char *)a2 + v22;
    v25[8] = v26[8];
    *(void *)uint64_t v25 = *(void *)v26;
    uint64_t v27 = a3[11];
    uint64_t v28 = a3[12];
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    v29[8] = v30[8];
    int v31 = (char *)a1 + v28;
    int v32 = (char *)a2 + v28;
    *(void *)uint64_t v29 = *(void *)v30;
    uint64_t v33 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v34 = *((void *)v33 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_100002ED4(&qword_10043E458);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v31, (uint64_t *)v32, v7);
      uint64_t v37 = v33[5];
      uint64_t v38 = &v31[v37];
      uint64_t v39 = &v32[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      uint64_t v40 = v33[6];
      uint64_t v41 = &v31[v40];
      uint64_t v42 = &v32[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      uint64_t v43 = v33[7];
      int v44 = &v31[v43];
      uint64_t v45 = &v32[v43];
      *(void *)int v44 = *(void *)v45;
      v44[8] = v45[8];
      (*(void (**)(char *, void, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return a1;
}

uint64_t sub_10019C290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 48);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_10019C384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  uint64_t v30 = (char *)(a1 + v27);
  int v31 = (char *)(a2 + v27);
  *(void *)uint64_t v28 = *(void *)v29;
  int v32 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v33 = *((void *)v32 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100002ED4(&qword_10043E458);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    uint64_t v35 = v32[5];
    uint64_t v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v32[6];
    uint64_t v39 = &v30[v38];
    uint64_t v40 = &v31[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = v32[7];
    uint64_t v42 = &v30[v41];
    uint64_t v43 = &v31[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t sub_10019C5E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 24);
  v70(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(unsigned char *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  char v34 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = v34;
  uint64_t v35 = a3[12];
  uint64_t v36 = (char *)(a1 + v35);
  uint64_t v37 = (char *)(a2 + v35);
  uint64_t v38 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v39 = *((void *)v38 - 1);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, int *))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      v70((uint64_t)v36, (uint64_t)v37, v6);
      uint64_t v57 = v38[5];
      int v58 = &v36[v57];
      uint64_t v59 = &v37[v57];
      char v60 = v59[8];
      *(void *)int v58 = *(void *)v59;
      v58[8] = v60;
      uint64_t v61 = v38[6];
      uint64_t v62 = &v36[v61];
      char v63 = &v37[v61];
      char v64 = v63[8];
      *(void *)uint64_t v62 = *(void *)v63;
      v62[8] = v64;
      uint64_t v65 = v38[7];
      uint64_t v66 = &v36[v65];
      char v67 = &v37[v65];
      char v68 = v67[8];
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v68;
      return a1;
    }
    sub_10015B354((uint64_t)v36, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v42)
  {
LABEL_6:
    uint64_t v55 = sub_100002ED4(&qword_10043E458);
    memcpy(v36, v37, *(void *)(*(void *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v36, v37, v6);
  uint64_t v43 = v38[5];
  int v44 = &v36[v43];
  uint64_t v45 = &v37[v43];
  char v46 = v45[8];
  *(void *)int v44 = *(void *)v45;
  v44[8] = v46;
  uint64_t v47 = v38[6];
  uint64_t v48 = &v36[v47];
  uint64_t v49 = &v37[v47];
  char v50 = v49[8];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v50;
  uint64_t v51 = v38[7];
  uint64_t v52 = &v36[v51];
  uint64_t v53 = &v37[v51];
  char v54 = v53[8];
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v54;
  (*(void (**)(char *, void, uint64_t, int *))(v39 + 56))(v36, 0, 1, v38);
  return a1;
}

uint64_t sub_10019C94C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  char v30 = (char *)(a1 + v27);
  uint64_t v31 = (char *)(a2 + v27);
  *(void *)uint64_t v28 = *(void *)v29;
  uint64_t v32 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v33 = *((void *)v32 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
  {
    uint64_t v34 = sub_100002ED4(&qword_10043E458);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v30, (uint64_t)v31, v6);
    uint64_t v35 = v32[5];
    uint64_t v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v32[6];
    uint64_t v39 = &v30[v38];
    uint64_t v40 = &v31[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    v39[8] = v40[8];
    uint64_t v41 = v32[7];
    int v42 = &v30[v41];
    uint64_t v43 = &v31[v41];
    *(void *)int v42 = *(void *)v43;
    v42[8] = v43[8];
    (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t sub_10019CBA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 40);
  v57(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = (char *)(a1 + v26);
  char v30 = (char *)(a2 + v26);
  *(void *)uint64_t v27 = *(void *)v28;
  uint64_t v31 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      v57((uint64_t)v29, (uint64_t)v30, v6);
      uint64_t v47 = v31[5];
      uint64_t v48 = &v29[v47];
      uint64_t v49 = &v30[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v31[6];
      uint64_t v51 = &v29[v50];
      uint64_t v52 = &v30[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      uint64_t v53 = v31[7];
      char v54 = &v29[v53];
      uint64_t v55 = &v30[v53];
      *(void *)char v54 = *(void *)v55;
      v54[8] = v55[8];
      return a1;
    }
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = sub_100002ED4(&qword_10043E458);
    memcpy(v29, v30, *(void *)(*(void *)(v45 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v29, v30, v6);
  uint64_t v36 = v31[5];
  uint64_t v37 = &v29[v36];
  uint64_t v38 = &v30[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = v31[6];
  uint64_t v40 = &v29[v39];
  uint64_t v41 = &v30[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v41[8];
  uint64_t v42 = v31[7];
  uint64_t v43 = &v29[v42];
  int v44 = &v30[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_10019CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019CF18);
}

uint64_t sub_10019CF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100002ED4(&qword_10043E458);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 48);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10019D014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019D028);
}

uint64_t sub_10019D028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100002ED4(&qword_10043E458);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 48);
    return v13(v15, a2, a2, v14);
  }
}

void sub_10019D130()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10019D228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E548);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v12[8];
      uint64_t v26 = &v10[v25];
      uint64_t v27 = &v11[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v12[9];
      uint64_t v29 = &v10[v28];
      char v30 = &v11[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v30[8];
      uint64_t v31 = v12[10];
      uint64_t v32 = &v10[v31];
      uint64_t v33 = &v11[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      uint64_t v34 = v12[11];
      int v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      *(void *)int v35 = *(void *)v36;
      v35[8] = v36[8];
      uint64_t v37 = v12[12];
      __dst = &v10[v37];
      uint64_t v38 = &v11[v37];
      uint64_t v39 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
      uint64_t v40 = *((void *)v39 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1, v39))
      {
        uint64_t v41 = sub_100002ED4(&qword_10043E458);
        memcpy(__dst, v38, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)__dst, (uint64_t *)v38, v7);
        uint64_t v42 = v39[5];
        uint64_t v43 = &__dst[v42];
        int v44 = &v38[v42];
        *(void *)uint64_t v43 = *(void *)v44;
        v43[8] = v44[8];
        uint64_t v45 = v39[6];
        char v46 = &__dst[v45];
        uint64_t v47 = &v38[v45];
        *(void *)char v46 = *(void *)v47;
        v46[8] = v47[8];
        uint64_t v48 = v39[7];
        uint64_t v49 = &__dst[v48];
        uint64_t v50 = &v38[v48];
        *(void *)uint64_t v49 = *(void *)v50;
        v49[8] = v50[8];
        (*(void (**)(void))(v40 + 56))();
      }
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_10019D5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v10(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    v10(v5, v4);
    uint64_t v8 = v5 + *(int *)(v6 + 48);
    uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
    }
  }
  return result;
}

uint64_t sub_10019D720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E548);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v11[8];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[9];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[10];
    char v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)char v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[11];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v11[12];
    __dst = &v9[v35];
    uint64_t v36 = &v10[v35];
    uint64_t v37 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v38 = *((void *)v37 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = sub_100002ED4(&qword_10043E458);
      memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v36, v6);
      uint64_t v40 = v37[5];
      uint64_t v41 = &__dst[v40];
      uint64_t v42 = &v36[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      uint64_t v43 = v37[6];
      int v44 = &__dst[v43];
      uint64_t v45 = &v36[v43];
      *(void *)int v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v37[7];
      uint64_t v47 = &__dst[v46];
      uint64_t v48 = &v36[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(void))(v38 + 56))();
    }
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10019DA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v127 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v128 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7(v9, (uint64_t)v10, v6);
      uint64_t v54 = v11[5];
      uint64_t v55 = v9 + v54;
      uint64_t v56 = &v10[v54];
      char v57 = v56[8];
      *(void *)uint64_t v55 = *(void *)v56;
      *(unsigned char *)(v55 + 8) = v57;
      uint64_t v58 = v11[6];
      uint64_t v59 = v9 + v58;
      char v60 = &v10[v58];
      char v61 = v60[8];
      *(void *)uint64_t v59 = *(void *)v60;
      *(unsigned char *)(v59 + 8) = v61;
      uint64_t v62 = v11[7];
      uint64_t v63 = v9 + v62;
      char v64 = &v10[v62];
      char v65 = v64[8];
      *(void *)uint64_t v63 = *(void *)v64;
      *(unsigned char *)(v63 + 8) = v65;
      uint64_t v66 = v11[8];
      uint64_t v67 = v9 + v66;
      char v68 = &v10[v66];
      char v69 = v68[8];
      *(void *)uint64_t v67 = *(void *)v68;
      *(unsigned char *)(v67 + 8) = v69;
      uint64_t v70 = v11[9];
      uint64_t v71 = v9 + v70;
      uint64_t v72 = &v10[v70];
      char v73 = v72[8];
      *(void *)uint64_t v71 = *(void *)v72;
      *(unsigned char *)(v71 + 8) = v73;
      uint64_t v74 = v11[10];
      uint64_t v75 = v9 + v74;
      uint64_t v76 = &v10[v74];
      char v77 = v76[8];
      *(void *)uint64_t v75 = *(void *)v76;
      *(unsigned char *)(v75 + 8) = v77;
      uint64_t v78 = v11[11];
      uint64_t v79 = v9 + v78;
      uint64_t v80 = &v10[v78];
      char v81 = v80[8];
      *(void *)uint64_t v79 = *(void *)v80;
      *(unsigned char *)(v79 + 8) = v81;
      uint64_t v82 = v11[12];
      uint64_t v83 = v9 + v82;
      uint64_t v84 = &v10[v82];
      uint64_t v85 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
      uint64_t v86 = *((void *)v85 - 1);
      uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v86 + 48);
      int v88 = v87(v83, 1, v85);
      int v89 = v87((uint64_t)v84, 1, v85);
      if (v88)
      {
        if (!v89)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v127 + 16))(v83, v84, v6);
          uint64_t v90 = v85[5];
          uint64_t v91 = v83 + v90;
          uint64_t v92 = &v84[v90];
          char v93 = v92[8];
          *(void *)uint64_t v91 = *(void *)v92;
          *(unsigned char *)(v91 + 8) = v93;
          uint64_t v94 = v85[6];
          uint64_t v95 = v83 + v94;
          uint64_t v96 = &v84[v94];
          char v97 = v96[8];
          *(void *)uint64_t v95 = *(void *)v96;
          *(unsigned char *)(v95 + 8) = v97;
          uint64_t v98 = v85[7];
          uint64_t v99 = v83 + v98;
          uint64_t v100 = &v84[v98];
          char v101 = v100[8];
          *(void *)uint64_t v99 = *(void *)v100;
          *(unsigned char *)(v99 + 8) = v101;
          (*(void (**)(uint64_t, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
          return v128;
        }
      }
      else
      {
        if (!v89)
        {
          v7(v83, (uint64_t)v84, v6);
          uint64_t v115 = v85[5];
          uint64_t v116 = v83 + v115;
          uint64_t v117 = &v84[v115];
          char v118 = v117[8];
          *(void *)uint64_t v116 = *(void *)v117;
          *(unsigned char *)(v116 + 8) = v118;
          uint64_t v119 = v85[6];
          uint64_t v120 = v83 + v119;
          uint64_t v121 = &v84[v119];
          char v122 = v121[8];
          *(void *)uint64_t v120 = *(void *)v121;
          *(unsigned char *)(v120 + 8) = v122;
          uint64_t v123 = v85[7];
          uint64_t v124 = v83 + v123;
          uint64_t v125 = &v84[v123];
          char v126 = v125[8];
          *(void *)uint64_t v124 = *(void *)v125;
          *(unsigned char *)(v124 + 8) = v126;
          return v128;
        }
        sub_10015B354(v83, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      }
      size_t v51 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      uint64_t v52 = (void *)v83;
      uint64_t v53 = v84;
      goto LABEL_8;
    }
    sub_10015B354(v9, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
LABEL_7:
    size_t v51 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E548) - 8) + 64);
    uint64_t v52 = (void *)v9;
    uint64_t v53 = v10;
LABEL_8:
    memcpy(v52, v53, v51);
    return v128;
  }
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v127 + 16);
  v16(v9, v10, v6);
  uint64_t v17 = v11[5];
  uint64_t v18 = v9 + v17;
  uint64_t v19 = &v10[v17];
  char v20 = v19[8];
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = v20;
  uint64_t v21 = v11[6];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = &v10[v21];
  char v24 = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  uint64_t v25 = v11[7];
  uint64_t v26 = v9 + v25;
  uint64_t v27 = &v10[v25];
  char v28 = v27[8];
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = v28;
  uint64_t v29 = v11[8];
  uint64_t v30 = v9 + v29;
  uint64_t v31 = &v10[v29];
  char v32 = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = v32;
  uint64_t v33 = v11[9];
  uint64_t v34 = v9 + v33;
  uint64_t v35 = &v10[v33];
  char v36 = v35[8];
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = v36;
  uint64_t v37 = v11[10];
  uint64_t v38 = v9 + v37;
  uint64_t v39 = &v10[v37];
  char v40 = v39[8];
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = v40;
  uint64_t v41 = v11[11];
  uint64_t v42 = v9 + v41;
  uint64_t v43 = &v10[v41];
  char v44 = v43[8];
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = v44;
  uint64_t v45 = v11[12];
  uint64_t v46 = (char *)(v9 + v45);
  uint64_t v47 = &v10[v45];
  uint64_t v48 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v49 = *((void *)v48 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = sub_100002ED4(&qword_10043E458);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v46, v47, v6);
    uint64_t v102 = v48[5];
    uint64_t v103 = &v46[v102];
    uint64_t v104 = &v47[v102];
    char v105 = v104[8];
    *(void *)uint64_t v103 = *(void *)v104;
    v103[8] = v105;
    uint64_t v106 = v48[6];
    uint64_t v107 = &v46[v106];
    uint64_t v108 = &v47[v106];
    char v109 = v108[8];
    *(void *)uint64_t v107 = *(void *)v108;
    v107[8] = v109;
    uint64_t v110 = v48[7];
    uint64_t v111 = &v46[v110];
    int v112 = &v47[v110];
    char v113 = v112[8];
    *(void *)uint64_t v111 = *(void *)v112;
    v111[8] = v113;
    (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return v128;
}

uint64_t sub_10019E0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E548);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v11[8];
    char v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[9];
    uint64_t v27 = &v9[v26];
    char v28 = &v10[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[10];
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[11];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v11[12];
    __dst = &v9[v35];
    char v36 = &v10[v35];
    uint64_t v37 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v38 = *((void *)v37 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = sub_100002ED4(&qword_10043E458);
      memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      v7((uint64_t)__dst, (uint64_t)v36, v6);
      uint64_t v40 = v37[5];
      uint64_t v41 = &__dst[v40];
      uint64_t v42 = &v36[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      uint64_t v43 = v37[6];
      char v44 = &__dst[v43];
      uint64_t v45 = &v36[v43];
      *(void *)char v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v37[7];
      uint64_t v47 = &__dst[v46];
      uint64_t v48 = &v36[v46];
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(void))(v38 + 56))();
    }
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10019E43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v104 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v105 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13((uint64_t)v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7(v9, (uint64_t)v10, v6);
      uint64_t v47 = v11[5];
      uint64_t v48 = v9 + v47;
      uint64_t v49 = &v10[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      *(unsigned char *)(v48 + 8) = v49[8];
      uint64_t v50 = v11[6];
      uint64_t v51 = v9 + v50;
      uint64_t v52 = &v10[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *(unsigned char *)(v51 + 8) = v52[8];
      uint64_t v53 = v11[7];
      uint64_t v54 = v9 + v53;
      uint64_t v55 = &v10[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      *(unsigned char *)(v54 + 8) = v55[8];
      uint64_t v56 = v11[8];
      uint64_t v57 = v9 + v56;
      uint64_t v58 = &v10[v56];
      *(void *)uint64_t v57 = *(void *)v58;
      *(unsigned char *)(v57 + 8) = v58[8];
      uint64_t v59 = v11[9];
      uint64_t v60 = v9 + v59;
      char v61 = &v10[v59];
      *(void *)uint64_t v60 = *(void *)v61;
      *(unsigned char *)(v60 + 8) = v61[8];
      uint64_t v62 = v11[10];
      uint64_t v63 = v9 + v62;
      char v64 = &v10[v62];
      *(void *)uint64_t v63 = *(void *)v64;
      *(unsigned char *)(v63 + 8) = v64[8];
      uint64_t v65 = v11[11];
      uint64_t v66 = v9 + v65;
      uint64_t v67 = &v10[v65];
      *(void *)uint64_t v66 = *(void *)v67;
      *(unsigned char *)(v66 + 8) = v67[8];
      uint64_t v68 = v11[12];
      uint64_t v69 = v9 + v68;
      uint64_t v70 = &v10[v68];
      uint64_t v71 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
      uint64_t v72 = *((void *)v71 - 1);
      char v73 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v72 + 48);
      int v74 = v73(v69, 1, v71);
      int v75 = v73((uint64_t)v70, 1, v71);
      if (v74)
      {
        if (!v75)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v69, v70, v6);
          uint64_t v76 = v71[5];
          uint64_t v77 = v69 + v76;
          uint64_t v78 = &v70[v76];
          *(void *)uint64_t v77 = *(void *)v78;
          *(unsigned char *)(v77 + 8) = v78[8];
          uint64_t v79 = v71[6];
          uint64_t v80 = v69 + v79;
          char v81 = &v70[v79];
          *(void *)uint64_t v80 = *(void *)v81;
          *(unsigned char *)(v80 + 8) = v81[8];
          uint64_t v82 = v71[7];
          uint64_t v83 = v69 + v82;
          uint64_t v84 = &v70[v82];
          *(void *)uint64_t v83 = *(void *)v84;
          *(unsigned char *)(v83 + 8) = v84[8];
          (*(void (**)(uint64_t, void, uint64_t, int *))(v72 + 56))(v69, 0, 1, v71);
          return v105;
        }
      }
      else
      {
        if (!v75)
        {
          v7(v69, (uint64_t)v70, v6);
          uint64_t v95 = v71[5];
          uint64_t v96 = v69 + v95;
          char v97 = &v70[v95];
          *(void *)uint64_t v96 = *(void *)v97;
          *(unsigned char *)(v96 + 8) = v97[8];
          uint64_t v98 = v71[6];
          uint64_t v99 = v69 + v98;
          uint64_t v100 = &v70[v98];
          *(void *)uint64_t v99 = *(void *)v100;
          *(unsigned char *)(v99 + 8) = v100[8];
          uint64_t v101 = v71[7];
          uint64_t v102 = v69 + v101;
          uint64_t v103 = &v70[v101];
          *(void *)uint64_t v102 = *(void *)v103;
          *(unsigned char *)(v102 + 8) = v103[8];
          return v105;
        }
        sub_10015B354(v69, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      }
      size_t v44 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      uint64_t v45 = (void *)v69;
      uint64_t v46 = v70;
      goto LABEL_8;
    }
    sub_10015B354(v9, type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeGeomagneticModelData);
LABEL_7:
    size_t v44 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E548) - 8) + 64);
    uint64_t v45 = (void *)v9;
    uint64_t v46 = v10;
LABEL_8:
    memcpy(v45, v46, v44);
    return v105;
  }
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 32);
  v16(v9, v10, v6);
  uint64_t v17 = v11[5];
  uint64_t v18 = v9 + v17;
  uint64_t v19 = &v10[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = v19[8];
  uint64_t v20 = v11[6];
  uint64_t v21 = v9 + v20;
  uint64_t v22 = &v10[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = v22[8];
  uint64_t v23 = v11[7];
  uint64_t v24 = v9 + v23;
  uint64_t v25 = &v10[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = v25[8];
  uint64_t v26 = v11[8];
  uint64_t v27 = v9 + v26;
  char v28 = &v10[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = v28[8];
  uint64_t v29 = v11[9];
  uint64_t v30 = v9 + v29;
  uint64_t v31 = &v10[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = v31[8];
  uint64_t v32 = v11[10];
  uint64_t v33 = v9 + v32;
  uint64_t v34 = &v10[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = v34[8];
  uint64_t v35 = v11[11];
  uint64_t v36 = v9 + v35;
  uint64_t v37 = &v10[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = v37[8];
  uint64_t v38 = v11[12];
  uint64_t v39 = (char *)(v9 + v38);
  uint64_t v40 = &v10[v38];
  uint64_t v41 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_100002ED4(&qword_10043E458);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v39, v40, v6);
    uint64_t v85 = v41[5];
    uint64_t v86 = &v39[v85];
    uint64_t v87 = &v40[v85];
    *(void *)uint64_t v86 = *(void *)v87;
    v86[8] = v87[8];
    uint64_t v88 = v41[6];
    int v89 = &v39[v88];
    uint64_t v90 = &v40[v88];
    *(void *)int v89 = *(void *)v90;
    v89[8] = v90[8];
    uint64_t v91 = v41[7];
    uint64_t v92 = &v39[v91];
    char v93 = &v40[v91];
    *(void *)uint64_t v92 = *(void *)v93;
    v92[8] = v93[8];
    (*(void (**)(char *, void, uint64_t, int *))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return v105;
}

uint64_t sub_10019EAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019EACC);
}

uint64_t sub_10019EACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10019EAD8(a1, a2, a3, &qword_10043E548);
}

uint64_t sub_10019EAD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100002ED4(a4);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 20);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10019EBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019EBE8);
}

uint64_t sub_10019EBE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10019EBF4(a1, a2, a3, a4, &qword_10043E548);
}

uint64_t sub_10019EBF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_100002ED4(a5);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 20);
    return v15(v17, a2, a2, v16);
  }
}

void sub_10019ED08(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10019ED28(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  type metadata accessor for UnknownStorage();
  if (v7 <= 0x3F)
  {
    sub_1001837E8(319, a4, a5);
    if (v8 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10019EE08(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (void *)((char *)a1 + v9);
    uint64_t v13 = (void *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v19 = a3[9];
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = (char *)a1 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    uint64_t v25 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v27 = (char *)a1 + v26;
    char v28 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10019EF88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10019F000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  uint64_t v24 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10019F130(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (int *)(a2 + v18);
  int v21 = *v20;
  *(unsigned char *)(v19 + 4) = *((unsigned char *)v20 + 4);
  *(_DWORD *)uint64_t v19 = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (int *)(a2 + v22);
  int v25 = *v24;
  *(unsigned char *)(v23 + 4) = *((unsigned char *)v24 + 4);
  *(_DWORD *)uint64_t v23 = v25;
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v26;
  char v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(unsigned char *)(v27 + 4) = *((unsigned char *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  return a1;
}

uint64_t sub_10019F288(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v15 = a3[9];
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  uint64_t v21 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(unsigned char *)(v23 + 4) = *(unsigned char *)(v24 + 4);
  return a1;
}

uint64_t sub_10019F3AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(unsigned char *)(v23 + 4) = *(unsigned char *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  return a1;
}

uint64_t sub_10019F4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019F4F4);
}

uint64_t sub_10019F4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10019F5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019F5DC);
}

uint64_t sub_10019F5E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_10019F6A0()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10019F768(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    unint64_t v10 = &a1[v9];
    int v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E550);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v12[7];
      uint64_t v24 = &v10[v23];
      uint64_t v25 = &v11[v23];
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      v10[v12[8]] = v11[v12[8]];
      uint64_t v26 = v12[9];
      uint64_t v27 = &v10[v26];
      uint64_t v28 = &v11[v26];
      v27[4] = v28[4];
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      uint64_t v29 = v12[10];
      uint64_t v30 = &v10[v29];
      uint64_t v31 = &v11[v29];
      *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
      v30[4] = v31[4];
      v10[v12[11]] = v11[v12[11]];
      v10[v12[12]] = v11[v12[12]];
      v10[v12[13]] = v11[v12[13]];
      uint64_t v32 = v12[14];
      uint64_t v33 = &v10[v32];
      uint64_t v34 = &v11[v32];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      uint64_t v35 = *(void (**)(char *, void, uint64_t, int *))(v13 + 56);
      swift_bridgeObjectRetain();
      v35(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_10019F9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    v5(v6, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10019FAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  unint64_t v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E550);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = v11[7];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    v9[v11[8]] = v10[v11[8]];
    uint64_t v24 = v11[9];
    uint64_t v25 = &v9[v24];
    uint64_t v26 = &v10[v24];
    v25[4] = v26[4];
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    uint64_t v27 = v11[10];
    uint64_t v28 = &v9[v27];
    uint64_t v29 = &v10[v27];
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    v9[v11[11]] = v10[v11[11]];
    v9[v11[12]] = v10[v11[12]];
    v9[v11[13]] = v10[v11[13]];
    uint64_t v30 = v11[14];
    uint64_t v31 = &v9[v30];
    uint64_t v32 = &v10[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    uint64_t v33 = *(void (**)(char *, void, uint64_t, int *))(v12 + 56);
    swift_bridgeObjectRetain();
    v33(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10019FD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 24);
  v7(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v62 = a1;
  uint64_t v9 = (unsigned char *)(a1 + v8);
  unint64_t v10 = (unsigned char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v38 = v11[5];
      uint64_t v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      uint64_t v41 = *(void *)v40;
      v39[8] = v40[8];
      *(void *)uint64_t v39 = v41;
      uint64_t v42 = v11[6];
      uint64_t v43 = &v9[v42];
      size_t v44 = &v10[v42];
      *uint64_t v43 = *v44;
      v43[1] = v44[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v45 = v11[7];
      uint64_t v46 = &v9[v45];
      uint64_t v47 = &v10[v45];
      int v48 = *(_DWORD *)v47;
      v46[4] = v47[4];
      *(_DWORD *)uint64_t v46 = v48;
      v9[v11[8]] = v10[v11[8]];
      uint64_t v49 = v11[9];
      uint64_t v50 = &v9[v49];
      uint64_t v51 = &v10[v49];
      int v52 = *(_DWORD *)v51;
      v50[4] = v51[4];
      *(_DWORD *)uint64_t v50 = v52;
      uint64_t v53 = v11[10];
      uint64_t v54 = &v9[v53];
      uint64_t v55 = &v10[v53];
      int v56 = *(_DWORD *)v55;
      v54[4] = v55[4];
      *(_DWORD *)uint64_t v54 = v56;
      v9[v11[11]] = v10[v11[11]];
      v9[v11[12]] = v10[v11[12]];
      v9[v11[13]] = v10[v11[13]];
      uint64_t v57 = v11[14];
      uint64_t v58 = &v9[v57];
      uint64_t v59 = &v10[v57];
      int v60 = *(_DWORD *)v59;
      v58[4] = v59[4];
      *(_DWORD *)uint64_t v58 = v60;
      return v62;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v36 = sub_100002ED4(&qword_10043E550);
    memcpy(v9, v10, *(void *)(*(void *)(v36 - 8) + 64));
    return v62;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = v11[6];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  void *v21 = *v22;
  v21[1] = v22[1];
  uint64_t v23 = v11[7];
  uint64_t v24 = &v9[v23];
  uint64_t v25 = &v10[v23];
  LOBYTE(v19) = v25[4];
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  v24[4] = v19;
  v9[v11[8]] = v10[v11[8]];
  uint64_t v26 = v11[9];
  uint64_t v27 = &v9[v26];
  uint64_t v28 = &v10[v26];
  LODWORD(v19) = *(_DWORD *)v28;
  v27[4] = v28[4];
  *(_DWORD *)uint64_t v27 = v19;
  uint64_t v29 = v11[10];
  uint64_t v30 = &v9[v29];
  uint64_t v31 = &v10[v29];
  LOBYTE(v19) = v31[4];
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  v30[4] = v19;
  v9[v11[11]] = v10[v11[11]];
  v9[v11[12]] = v10[v11[12]];
  v9[v11[13]] = v10[v11[13]];
  uint64_t v32 = v11[14];
  uint64_t v33 = &v9[v32];
  uint64_t v34 = &v10[v32];
  LODWORD(v19) = *(_DWORD *)v34;
  v33[4] = v34[4];
  *(_DWORD *)uint64_t v33 = v19;
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, int *))(v12 + 56);
  swift_bridgeObjectRetain();
  v35(v9, 0, 1, v11);
  return v62;
}

uint64_t sub_1001A00E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  unint64_t v10 = (char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E550);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
    uint64_t v17 = v11[7];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v9[v11[8]] = v10[v11[8]];
    uint64_t v20 = v11[9];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    v21[4] = v22[4];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    uint64_t v23 = v11[10];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    v9[v11[11]] = v10[v11[11]];
    v9[v11[12]] = v10[v11[12]];
    v9[v11[13]] = v10[v11[13]];
    uint64_t v26 = v11[14];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_1001A0304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v54 = a1;
  uint64_t v9 = (unsigned char *)(a1 + v8);
  unint64_t v10 = (unsigned char *)(a2 + v8);
  int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v33 = v11[5];
      uint64_t v34 = &v9[v33];
      uint64_t v35 = &v10[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v35[8];
      uint64_t v36 = v11[6];
      uint64_t v37 = &v9[v36];
      uint64_t v38 = (uint64_t *)&v10[v36];
      uint64_t v40 = *v38;
      uint64_t v39 = v38[1];
      *uint64_t v37 = v40;
      v37[1] = v39;
      swift_bridgeObjectRelease();
      uint64_t v41 = v11[7];
      uint64_t v42 = &v9[v41];
      uint64_t v43 = &v10[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      v9[v11[8]] = v10[v11[8]];
      uint64_t v44 = v11[9];
      uint64_t v45 = &v9[v44];
      uint64_t v46 = &v10[v44];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      uint64_t v47 = v11[10];
      int v48 = &v9[v47];
      uint64_t v49 = &v10[v47];
      *(_DWORD *)int v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      v9[v11[11]] = v10[v11[11]];
      v9[v11[12]] = v10[v11[12]];
      v9[v11[13]] = v10[v11[13]];
      uint64_t v50 = v11[14];
      uint64_t v51 = &v9[v50];
      int v52 = &v10[v50];
      v51[4] = v52[4];
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      return v54;
    }
    sub_10015B354((uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v31 = sub_100002ED4(&qword_10043E550);
    memcpy(v9, v10, *(void *)(*(void *)(v31 - 8) + 64));
    return v54;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v53 + 32))(v9, v10, v6);
  uint64_t v16 = v11[5];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
  uint64_t v19 = v11[7];
  uint64_t v20 = &v9[v19];
  uint64_t v21 = &v10[v19];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v9[v11[8]] = v10[v11[8]];
  uint64_t v22 = v11[9];
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  v23[4] = v24[4];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = v11[10];
  uint64_t v26 = &v9[v25];
  uint64_t v27 = &v10[v25];
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  v26[4] = v27[4];
  v9[v11[11]] = v10[v11[11]];
  v9[v11[12]] = v10[v11[12]];
  v9[v11[13]] = v10[v11[13]];
  uint64_t v28 = v11[14];
  uint64_t v29 = &v9[v28];
  uint64_t v30 = &v10[v28];
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  v29[4] = v30[4];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return v54;
}

uint64_t sub_1001A06A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A06B8);
}

uint64_t sub_1001A06B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 253)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      int v11 = ((v10 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v11 = -2;
    }
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_100002ED4(&qword_10043E550);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1001A0800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A0814);
}

uint64_t sub_1001A0814(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 253)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  else
  {
    uint64_t v11 = sub_100002ED4(&qword_10043E550);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1001A0940()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_100441EF0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAccessPoint);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1001A0A2C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v47 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  uint64_t v46 = (uint64_t)v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v46, v14, v9);
      uint64_t v21 = v15[5];
      uint64_t v22 = v46 + v21;
      uint64_t v23 = &v14[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v15[6];
      uint64_t v26 = v46 + v25;
      uint64_t v27 = &v14[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      uint64_t v29 = v15[7];
      uint64_t v30 = v46 + v29;
      uint64_t v31 = &v14[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v46, 0, 1, v15);
      return v47;
    }
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v46;
  }
  else
  {
    if (!v18)
    {
      v11((char *)v46, v14, v9);
      uint64_t v33 = v15[5];
      uint64_t v34 = v46 + v33;
      uint64_t v35 = &v14[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v15[6];
      uint64_t v38 = v46 + v37;
      uint64_t v39 = &v14[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      uint64_t v41 = v15[7];
      uint64_t v42 = v46 + v41;
      uint64_t v43 = &v14[v41];
      char v44 = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = v44;
      return v47;
    }
    sub_10015B354(v46, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v46;
  }
  memcpy(v20, v14, v19);
  return v47;
}

void *sub_1001A0D14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  uint64_t v40 = (uint64_t)v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v40, v14, v9);
      uint64_t v21 = v15[5];
      uint64_t v22 = v40 + v21;
      uint64_t v23 = &v14[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v23[8];
      uint64_t v24 = v15[6];
      uint64_t v25 = v40 + v24;
      uint64_t v26 = &v14[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v26[8];
      uint64_t v27 = v15[7];
      uint64_t v28 = v40 + v27;
      uint64_t v29 = &v14[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v29[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v40, 0, 1, v15);
      return v41;
    }
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v40;
  }
  else
  {
    if (!v18)
    {
      v11((char *)v40, v14, v9);
      uint64_t v30 = v15[5];
      uint64_t v31 = v40 + v30;
      char v32 = &v14[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *(unsigned char *)(v31 + 8) = v32[8];
      uint64_t v33 = v15[6];
      uint64_t v34 = v40 + v33;
      uint64_t v35 = &v14[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v35[8];
      uint64_t v36 = v15[7];
      uint64_t v37 = v40 + v36;
      uint64_t v38 = &v14[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v38[8];
      return v41;
    }
    sub_10015B354(v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v40;
  }
  memcpy(v20, v14, v19);
  return v41;
}

uint64_t sub_1001A0FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A1010);
}

uint64_t sub_1001A1014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A1028);
}

void sub_1001A102C()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1001A1120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A1134);
}

uint64_t sub_1001A1138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A114C);
}

char *sub_1001A1150(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      int v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_1001A1380(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    int v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1001A1560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 24);
  v7(a1, a2, v6);
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v47 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v47, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v47 + v17;
      uint64_t v19 = &v10[v17];
      char v20 = v19[8];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v20;
      uint64_t v21 = v11[6];
      uint64_t v22 = v47 + v21;
      uint64_t v23 = &v10[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v11[7];
      uint64_t v26 = v47 + v25;
      uint64_t v27 = &v10[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v47, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v47;
  }
  else
  {
    if (!v14)
    {
      v7(v47, (uint64_t)v10, v6);
      uint64_t v29 = v11[5];
      uint64_t v30 = v47 + v29;
      uint64_t v31 = &v10[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      uint64_t v33 = v11[6];
      uint64_t v34 = v47 + v33;
      uint64_t v35 = &v10[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v11[7];
      uint64_t v38 = v47 + v37;
      uint64_t v39 = &v10[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      goto LABEL_9;
    }
    sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v47;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  *(unsigned char *)(a1 + v49[6]) = *(unsigned char *)(v48 + v49[6]);
  uint64_t v41 = v49[7];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t *)(v48 + v41);
  uint64_t v44 = *v43;
  *(unsigned char *)(v42 + 8) = *((unsigned char *)v43 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(a1 + v49[8]) = *(unsigned char *)(v48 + v49[8]);
  return a1;
}

uint64_t sub_1001A186C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    size_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)size_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1001A1A4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40);
  v7(a1, a2, v6);
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v12 + 48);
  uint64_t v40 = v9;
  LODWORD(v9) = v13(v9, 1, v11);
  int v14 = v13((uint64_t)v10, 1, v11);
  if (v9)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v10, v6);
      uint64_t v17 = v11[5];
      uint64_t v18 = v40 + v17;
      uint64_t v19 = &v10[v17];
      *(void *)uint64_t v18 = *(void *)v19;
      *(unsigned char *)(v18 + 8) = v19[8];
      uint64_t v20 = v11[6];
      uint64_t v21 = v40 + v20;
      uint64_t v22 = &v10[v20];
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = v22[8];
      uint64_t v23 = v11[7];
      uint64_t v24 = v40 + v23;
      uint64_t v25 = &v10[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v25[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v12 + 56))(v40, 0, 1, v11);
      goto LABEL_9;
    }
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v40;
  }
  else
  {
    if (!v14)
    {
      v7(v40, (uint64_t)v10, v6);
      uint64_t v26 = v11[5];
      uint64_t v27 = v40 + v26;
      char v28 = &v10[v26];
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = v28[8];
      uint64_t v29 = v11[6];
      uint64_t v30 = v40 + v29;
      uint64_t v31 = &v10[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v31[8];
      uint64_t v32 = v11[7];
      uint64_t v33 = v40 + v32;
      uint64_t v34 = &v10[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      *(unsigned char *)(v33 + 8) = v34[8];
      goto LABEL_9;
    }
    sub_10015B354(v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v15 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v16 = (void *)v40;
  }
  memcpy(v16, v10, v15);
LABEL_9:
  uint64_t v35 = v42[7];
  *(unsigned char *)(a1 + v42[6]) = *(unsigned char *)(v41 + v42[6]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = v41 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(unsigned char *)(a1 + v42[8]) = *(unsigned char *)(v41 + v42[8]);
  return a1;
}

uint64_t sub_1001A1D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A1D68);
}

uint64_t sub_1001A1D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 4u) {
    int v14 = 4;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v15 = v14 - 4;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 4u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001A1E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A1E9C);
}

uint64_t sub_1001A1E9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100002ED4(&qword_10043E458);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 4;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001A1FB0()
{
}

void sub_1001A1FC8()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction.GnssAvailability()
{
  return &type metadata for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction.GnssAvailability;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction.MeasurementSource()
{
  return &type metadata for CLP_LogEntry_PrivateData_GnssAvailabilityPrediction.MeasurementSource;
}

uint64_t sub_1001A20E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A20F8);
}

uint64_t sub_1001A20FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A2110);
}

void *sub_1001A2114(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unsigned int v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)unsigned int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(void *)uint64_t v17 = *(void *)v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    char v21 = *((unsigned char *)a2 + v19);
    v17[8] = v18[8];
    *((unsigned char *)v7 + v19) = v21;
    uint64_t v22 = (char *)v7 + v20;
    *(void *)uint64_t v22 = *(void *)((char *)a2 + v20);
    v22[8] = *((unsigned char *)a2 + v20 + 8);
    uint64_t v23 = a3[10];
    uint64_t v24 = a3[11];
    uint64_t v25 = (char *)v7 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = (char *)v7 + v24;
    char v28 = (char *)a2 + v24;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = a3[12];
    uint64_t v30 = (char *)v7 + v29;
    uint64_t v31 = (char *)a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
  }
  return v7;
}

void *sub_1001A22B0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  unsigned int v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)unsigned int v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = (char *)a1 + v21;
  uint64_t v25 = (char *)a2 + v21;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = a3[12];
  uint64_t v27 = (char *)a1 + v26;
  char v28 = (char *)a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  return a1;
}

void *sub_1001A2400(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  v11[8] = v12[8];
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  unsigned int v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  LOBYTE(v13) = v16[8];
  *(void *)unsigned int v15 = *(void *)v16;
  v15[8] = v13;
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  v18[8] = v19[8];
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  LOBYTE(v20) = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v20;
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  LOBYTE(v20) = v26[8];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v20;
  uint64_t v27 = a3[12];
  char v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  LOBYTE(v20) = v29[8];
  *(void *)char v28 = *(void *)v29;
  v28[8] = v20;
  return a1;
}

void *sub_1001A2550(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  unsigned int v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = a3[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

void *sub_1001A2684(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  unsigned int v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = a3[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  return a1;
}

uint64_t sub_1001A27C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A27D4);
}

uint64_t sub_1001A27D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A27EC);
}

uint64_t sub_1001A27F0()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001A28A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unsigned int v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)unsigned int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
  }
  return v7;
}

void *sub_1001A29D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  unsigned int v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)unsigned int v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

void *sub_1001A2AAC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[7];
  unsigned int v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[8];
  *(void *)unsigned int v15 = *(void *)v16;
  v15[8] = v17;
  return a1;
}

void *sub_1001A2B80(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  unsigned int v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

void *sub_1001A2C40(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  unsigned int v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  return a1;
}

uint64_t sub_1001A2D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A2D1C);
}

uint64_t sub_1001A2D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A2D34);
}

uint64_t sub_1001A2D38()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001A2DE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v7 + v13;
    unsigned int v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E458);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      uint64_t v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v28 = a3[8];
    uint64_t v29 = (char *)v7 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002ED4(&qword_10043E568);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v12(v29, v30, v11);
      uint64_t v34 = *(int *)(v31 + 20);
      uint64_t v35 = &v29[v34];
      uint64_t v36 = &v30[v34];
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = v36[8];
      uint64_t v37 = *(int *)(v31 + 24);
      uint64_t v38 = &v29[v37];
      uint64_t v39 = &v30[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
  }
  return v7;
}

uint64_t sub_1001A3124(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7)) {
    v11(v6, v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8, v5);
  }
  return result;
}

void *sub_1001A3290(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  unsigned int v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100002ED4(&qword_10043E458);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    uint64_t v18 = v15[5];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v15[6];
    uint64_t v22 = &v13[v21];
    uint64_t v23 = &v14[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v15[7];
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E568);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    v11(v28, v29, v10);
    uint64_t v33 = *(int *)(v30 + 20);
    uint64_t v34 = &v28[v33];
    uint64_t v35 = &v29[v33];
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    uint64_t v36 = *(int *)(v30 + 24);
    uint64_t v37 = &v28[v36];
    uint64_t v38 = &v29[v36];
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = v38[8];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  return a1;
}

void *sub_1001A3580(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  uint64_t v69 = *(void (**)(char *, char *))(v70 + 24);
  v69(v7, v8);
  uint64_t v72 = a3;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  unsigned int v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v11, v12, v71);
      uint64_t v18 = v13[5];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      char v21 = v20[8];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v21;
      uint64_t v22 = v13[6];
      uint64_t v23 = &v11[v22];
      uint64_t v24 = &v12[v22];
      char v25 = v24[8];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v25;
      uint64_t v26 = v13[7];
      uint64_t v27 = &v11[v26];
      uint64_t v28 = &v12[v26];
      char v29 = v28[8];
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v29;
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v30 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v69)(v11, v12, v71);
  uint64_t v49 = v13[5];
  uint64_t v50 = &v11[v49];
  uint64_t v51 = &v12[v49];
  char v52 = v51[8];
  *(void *)uint64_t v50 = *(void *)v51;
  v50[8] = v52;
  uint64_t v53 = v13[6];
  uint64_t v54 = &v11[v53];
  uint64_t v55 = &v12[v53];
  char v56 = v55[8];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v56;
  uint64_t v57 = v13[7];
  uint64_t v58 = &v11[v57];
  uint64_t v59 = &v12[v57];
  char v60 = v59[8];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v60;
LABEL_7:
  uint64_t v31 = *(int *)(v72 + 32);
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      ((void (*)(char *, char *, uint64_t))v69)(v32, v33, v71);
      uint64_t v61 = *(int *)(v34 + 20);
      uint64_t v62 = &v32[v61];
      uint64_t v63 = &v33[v61];
      char v64 = v63[8];
      *(void *)uint64_t v62 = *(void *)v63;
      v62[8] = v64;
      uint64_t v65 = *(int *)(v34 + 24);
      uint64_t v66 = &v32[v65];
      uint64_t v67 = &v33[v65];
      char v68 = v67[8];
      *(void *)uint64_t v66 = *(void *)v67;
      v66[8] = v68;
      return a1;
    }
    sub_10015B354((uint64_t)v32, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
    goto LABEL_12;
  }
  if (v38)
  {
LABEL_12:
    uint64_t v47 = sub_100002ED4(&qword_10043E568);
    memcpy(v32, v33, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v32, v33, v71);
  uint64_t v39 = *(int *)(v34 + 20);
  uint64_t v40 = &v32[v39];
  uint64_t v41 = &v33[v39];
  char v42 = v41[8];
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v42;
  uint64_t v43 = *(int *)(v34 + 24);
  uint64_t v44 = &v32[v43];
  uint64_t v45 = &v33[v43];
  char v46 = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  v44[8] = v46;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

_OWORD *sub_1001A3A04(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    char v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    char v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_100002ED4(&qword_10043E568);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v10(v27, v28, v9);
    uint64_t v32 = *(int *)(v29 + 20);
    uint64_t v33 = &v27[v32];
    uint64_t v34 = &v28[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = *(int *)(v29 + 24);
    uint64_t v36 = &v27[v35];
    int v37 = &v28[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  return a1;
}

void *sub_1001A3CE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  uint64_t v59 = *(void (**)(char *, char *))(v60 + 40);
  v59(v7, v8);
  uint64_t v62 = a3;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v11, v12, v61);
      uint64_t v18 = v13[5];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v13[6];
      uint64_t v22 = &v11[v21];
      uint64_t v23 = &v12[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v13[7];
      char v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      *(void *)char v25 = *(void *)v26;
      v25[8] = v26[8];
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v11, v12, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  ((void (*)(char *, char *, uint64_t))v59)(v11, v12, v61);
  uint64_t v44 = v13[5];
  uint64_t v45 = &v11[v44];
  char v46 = &v12[v44];
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = v13[6];
  uint64_t v48 = &v11[v47];
  uint64_t v49 = &v12[v47];
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  uint64_t v50 = v13[7];
  uint64_t v51 = &v11[v50];
  char v52 = &v12[v50];
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v52[8];
LABEL_7:
  uint64_t v28 = *(int *)(v62 + 32);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      ((void (*)(char *, char *, uint64_t))v59)(v29, v30, v61);
      uint64_t v53 = *(int *)(v31 + 20);
      uint64_t v54 = &v29[v53];
      uint64_t v55 = &v30[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      v54[8] = v55[8];
      uint64_t v56 = *(int *)(v31 + 24);
      uint64_t v57 = &v29[v56];
      uint64_t v58 = &v30[v56];
      *(void *)uint64_t v57 = *(void *)v58;
      v57[8] = v58[8];
      return a1;
    }
    sub_10015B354((uint64_t)v29, type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
    goto LABEL_12;
  }
  if (v35)
  {
LABEL_12:
    uint64_t v42 = sub_100002ED4(&qword_10043E568);
    memcpy(v29, v30, *(void *)(*(void *)(v42 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v29, v30, v61);
  uint64_t v36 = *(int *)(v31 + 20);
  int v37 = &v29[v36];
  int v38 = &v30[v36];
  *(void *)int v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = *(int *)(v31 + 24);
  uint64_t v40 = &v29[v39];
  uint64_t v41 = &v30[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  v40[8] = v41[8];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_1001A4158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A416C);
}

uint64_t sub_1001A416C(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E568);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[8]];

  return v15(v17, a2, v16);
}

uint64_t sub_1001A42EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A4300);
}

char *sub_1001A4300(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E568);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[8]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_1001A4480()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_1004422C8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOLocationCoordinate2D);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_1001A45CC(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    v14[4] = v15[4];
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (char *)v7 + v16;
    uint64_t v19 = (char *)a2 + v16;
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = (char *)v7 + v17;
    uint64_t v21 = (char *)a2 + v17;
    v20[4] = v21[4];
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  }
  return v7;
}

void *sub_1001A4718(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  v12[4] = v13[4];
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  v16[4] = v17[4];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  uint64_t v18 = (char *)a1 + v15;
  uint64_t v19 = (char *)a2 + v15;
  v18[4] = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  return a1;
}

void *sub_1001A4818(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[4];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  v11[4] = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[4];
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v21;
  return a1;
}

void *sub_1001A4914(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  v11[4] = v12[4];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  v15[4] = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  char v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)a2 + v14;
  v17[4] = v18[4];
  *(_DWORD *)char v17 = *(_DWORD *)v18;
  return a1;
}

void *sub_1001A49F8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  v11[4] = v12[4];
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  v15[4] = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  char v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)a2 + v14;
  v17[4] = v18[4];
  *(_DWORD *)char v17 = *(_DWORD *)v18;
  return a1;
}

uint64_t sub_1001A4AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A4AF8);
}

uint64_t sub_1001A4AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A4B10);
}

uint64_t sub_1001A4B14()
{
  return sub_1001A50E0();
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch.BranchType()
{
  return &type metadata for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBranch.BranchType;
}

uint64_t *sub_1001A4B38(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    char v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(void *)char v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    char v21 = (char *)v7 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = (char *)v7 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(void *)uint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
  }
  return v7;
}

void *sub_1001A4C94(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  char v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(void *)char v21 = *(void *)v22;
  v21[8] = v22[8];
  return a1;
}

void *sub_1001A4DA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char v25 = v24[8];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v25;
  return a1;
}

void *sub_1001A4EB0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  char v21 = (char *)a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  return a1;
}

void *sub_1001A4FA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = (char *)a1 + v17;
  char v21 = (char *)a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  return a1;
}

uint64_t sub_1001A50A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A50B4);
}

uint64_t sub_1001A50B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A50CC);
}

uint64_t sub_1001A50D0()
{
  return sub_1001A50E0();
}

uint64_t sub_1001A50E0()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1001A5194(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)v7 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E570);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      void *v14 = *v15;
      uint64_t v19 = v16[5];
      char v52 = (char *)v14 + v19;
      uint64_t v53 = v11;
      uint64_t v20 = v12;
      char v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      uint64_t v22 = v21;
      uint64_t v12 = v20;
      uint64_t v11 = v53;
      v12(v52, v22, v53);
      uint64_t v23 = v16[6];
      uint64_t v24 = (char *)v14 + v23;
      char v25 = (char *)v15 + v23;
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v25[8];
      uint64_t v26 = v16[7];
      uint64_t v27 = (char *)v14 + v26;
      uint64_t v28 = (char *)v15 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = v16[8];
      uint64_t v30 = (char *)v14 + v29;
      uint64_t v31 = (char *)v15 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      uint64_t v32 = v16[9];
      uint64_t v33 = (char *)v14 + v32;
      int v34 = (char *)v15 + v32;
      *(void *)uint64_t v33 = *(void *)v34;
      v33[8] = v34[8];
      (*(void (**)(void *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v35 = a3[7];
    uint64_t v36 = a3[8];
    int v37 = (char *)v7 + v35;
    int v38 = (char *)a2 + v35;
    *(void *)int v37 = *(void *)v38;
    v37[8] = v38[8];
    *((unsigned char *)v7 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v39 = a3[9];
    uint64_t v40 = a3[10];
    uint64_t v41 = (char *)v7 + v39;
    uint64_t v42 = (char *)a2 + v39;
    *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    uint64_t v43 = (char *)v7 + v40;
    uint64_t v44 = (char *)a2 + v40;
    uint64_t v45 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
    uint64_t v46 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
    {
      uint64_t v47 = sub_100002ED4(&qword_10043E578);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      v12(v43, v44, v11);
      v43[*(int *)(v45 + 20)] = v44[*(int *)(v45 + 20)];
      v43[*(int *)(v45 + 24)] = v44[*(int *)(v45 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
    }
    uint64_t v48 = a3[11];
    uint64_t v49 = (char *)v7 + v48;
    uint64_t v50 = (char *)a2 + v48;
    *(void *)uint64_t v49 = *(void *)v50;
    v49[8] = v50[8];
  }
  return v7;
}

uint64_t sub_1001A553C(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v11(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v11(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v8, v5);
  }
  return result;
}

void *sub_1001A56BC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    void *v12 = *v13;
    uint64_t v17 = v14[5];
    uint64_t v50 = (char *)v12 + v17;
    uint64_t v51 = v9;
    uint64_t v18 = v10;
    uint64_t v19 = (char *)v13 + v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = v19;
    uint64_t v10 = v18;
    uint64_t v9 = v51;
    v10(v50, v20, v51);
    uint64_t v21 = v14[6];
    uint64_t v22 = (char *)v12 + v21;
    uint64_t v23 = (char *)v13 + v21;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v14[7];
    char v25 = (char *)v12 + v24;
    uint64_t v26 = (char *)v13 + v24;
    *(void *)char v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v14[8];
    uint64_t v28 = (char *)v12 + v27;
    uint64_t v29 = (char *)v13 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v14[9];
    uint64_t v31 = (char *)v12 + v30;
    uint64_t v32 = (char *)v13 + v30;
    *(void *)uint64_t v31 = *(void *)v32;
    v31[8] = v32[8];
    (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v33 = a3[7];
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)a1 + v33;
  uint64_t v36 = (char *)a2 + v33;
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  *((unsigned char *)a1 + v34) = *((unsigned char *)a2 + v34);
  uint64_t v37 = a3[9];
  uint64_t v38 = a3[10];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (char *)a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  v39[4] = v40[4];
  uint64_t v41 = (char *)a1 + v38;
  uint64_t v42 = (char *)a2 + v38;
  uint64_t v43 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v44 = *(void *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    uint64_t v45 = sub_100002ED4(&qword_10043E578);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v10(v41, v42, v9);
    v41[*(int *)(v43 + 20)] = v42[*(int *)(v43 + 20)];
    v41[*(int *)(v43 + 24)] = v42[*(int *)(v43 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  uint64_t v46 = a3[11];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  v47[8] = v48[8];
  return a1;
}

void *sub_1001A5A18(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v78 = v9;
  uint64_t v76 = *(void (**)(char *, char *))(v77 + 24);
  v76(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      void *v11 = *v12;
      uint64_t v18 = v13[5];
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = (char *)v12 + v18;
      int v75 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
      swift_bridgeObjectRetain();
      v75(v19, v20, v78);
      uint64_t v21 = v13[6];
      uint64_t v22 = (char *)v11 + v21;
      uint64_t v23 = (char *)v12 + v21;
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v24;
      uint64_t v25 = v13[7];
      uint64_t v26 = (char *)v11 + v25;
      uint64_t v27 = (char *)v12 + v25;
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v28;
      uint64_t v29 = v13[8];
      uint64_t v30 = (char *)v11 + v29;
      uint64_t v31 = (char *)v12 + v29;
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v32;
      uint64_t v33 = v13[9];
      uint64_t v34 = (char *)v11 + v33;
      uint64_t v35 = (char *)v12 + v33;
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      v34[8] = v36;
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
LABEL_6:
    uint64_t v37 = sub_100002ED4(&qword_10043E570);
    memcpy(v11, v12, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  void *v11 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v76)((char *)v11 + v13[5], (char *)v12 + v13[5], v78);
  uint64_t v59 = v13[6];
  uint64_t v60 = (char *)v11 + v59;
  uint64_t v61 = (char *)v12 + v59;
  char v62 = v61[8];
  *(void *)uint64_t v60 = *(void *)v61;
  v60[8] = v62;
  uint64_t v63 = v13[7];
  char v64 = (char *)v11 + v63;
  uint64_t v65 = (char *)v12 + v63;
  char v66 = v65[8];
  *(void *)char v64 = *(void *)v65;
  v64[8] = v66;
  uint64_t v67 = v13[8];
  char v68 = (char *)v11 + v67;
  uint64_t v69 = (char *)v12 + v67;
  char v70 = v69[8];
  *(void *)char v68 = *(void *)v69;
  v68[8] = v70;
  uint64_t v71 = v13[9];
  uint64_t v72 = (char *)v11 + v71;
  char v73 = (char *)v12 + v71;
  char v74 = v73[8];
  *(void *)uint64_t v72 = *(void *)v73;
  v72[8] = v74;
LABEL_7:
  uint64_t v38 = a3[7];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = *(void *)v40;
  v39[8] = v40[8];
  *(void *)uint64_t v39 = v41;
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v42 = a3[9];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  LODWORD(v41) = *(_DWORD *)v44;
  v43[4] = v44[4];
  *(_DWORD *)uint64_t v43 = v41;
  uint64_t v45 = a3[10];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  int v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v76)(v46, v47, v78);
      v46[*(int *)(v48 + 20)] = v47[*(int *)(v48 + 20)];
      v46[*(int *)(v48 + 24)] = v47[*(int *)(v48 + 24)];
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v46, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
    goto LABEL_12;
  }
  if (v52)
  {
LABEL_12:
    uint64_t v53 = sub_100002ED4(&qword_10043E578);
    memcpy(v46, v47, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v77 + 16))(v46, v47, v78);
  v46[*(int *)(v48 + 20)] = v47[*(int *)(v48 + 20)];
  v46[*(int *)(v48 + 24)] = v47[*(int *)(v48 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
LABEL_13:
  uint64_t v54 = a3[11];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  return a1;
}

void *sub_1001A5F00(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E570);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    void *v12 = *v13;
    v10((char *)v12 + v14[5], (char *)v13 + v14[5], v9);
    uint64_t v17 = v14[6];
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = (char *)v13 + v17;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[7];
    uint64_t v21 = (char *)v12 + v20;
    uint64_t v22 = (char *)v13 + v20;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[8];
    char v24 = (char *)v12 + v23;
    uint64_t v25 = (char *)v13 + v23;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v14[9];
    uint64_t v27 = (char *)v12 + v26;
    char v28 = (char *)v13 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    (*(void (**)(void *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = a3[8];
  uint64_t v31 = (char *)a1 + v29;
  char v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  uint64_t v33 = a3[9];
  uint64_t v34 = a3[10];
  uint64_t v35 = (char *)a1 + v33;
  char v36 = (char *)a2 + v33;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  v35[4] = v36[4];
  uint64_t v37 = (char *)a1 + v34;
  uint64_t v38 = (char *)a2 + v34;
  uint64_t v39 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_100002ED4(&qword_10043E578);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    v10(v37, v38, v9);
    v37[*(int *)(v39 + 20)] = v38[*(int *)(v39 + 20)];
    v37[*(int *)(v39 + 24)] = v38[*(int *)(v39 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = a3[11];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  return a1;
}

void *sub_1001A622C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  uint64_t v63 = *(void (**)(char *, char *))(v64 + 40);
  v63(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox(0);
  uint64_t v14 = *((void *)v13 - 1);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, int *))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v11[v13[5]], &v12[v13[5]], v65);
      uint64_t v18 = v13[6];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v13[7];
      uint64_t v22 = &v11[v21];
      uint64_t v23 = &v12[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v13[8];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      uint64_t v27 = v13[9];
      char v28 = &v11[v27];
      uint64_t v29 = &v12[v27];
      *(void *)char v28 = *(void *)v29;
      v28[8] = v29[8];
      (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_10015B354((uint64_t)v11, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
LABEL_6:
    uint64_t v30 = sub_100002ED4(&qword_10043E570);
    memcpy(v11, v12, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v63)(&v11[v13[5]], &v12[v13[5]], v65);
  uint64_t v51 = v13[6];
  int v52 = &v11[v51];
  uint64_t v53 = &v12[v51];
  *(void *)int v52 = *(void *)v53;
  v52[8] = v53[8];
  uint64_t v54 = v13[7];
  uint64_t v55 = &v11[v54];
  uint64_t v56 = &v12[v54];
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = v13[8];
  uint64_t v58 = &v11[v57];
  uint64_t v59 = &v12[v57];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  uint64_t v60 = v13[9];
  uint64_t v61 = &v11[v60];
  char v62 = &v12[v60];
  *(void *)uint64_t v61 = *(void *)v62;
  v61[8] = v62[8];
LABEL_7:
  uint64_t v31 = a3[7];
  uint64_t v32 = a3[8];
  uint64_t v33 = (char *)a1 + v31;
  uint64_t v34 = (char *)a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v35 = a3[9];
  uint64_t v36 = a3[10];
  uint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = (char *)a2 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  uint64_t v39 = (char *)a1 + v36;
  uint64_t v40 = (char *)a2 + v36;
  uint64_t v41 = type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures(0);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v42 + 48);
  int v44 = v43(v39, 1, v41);
  int v45 = v43(v40, 1, v41);
  if (!v44)
  {
    if (!v45)
    {
      ((void (*)(unsigned char *, unsigned char *, uint64_t))v63)(v39, v40, v65);
      v39[*(int *)(v41 + 20)] = v40[*(int *)(v41 + 20)];
      v39[*(int *)(v41 + 24)] = v40[*(int *)(v41 + 24)];
      goto LABEL_13;
    }
    sub_10015B354((uint64_t)v39, type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
    goto LABEL_12;
  }
  if (v45)
  {
LABEL_12:
    uint64_t v46 = sub_100002ED4(&qword_10043E578);
    memcpy(v39, v40, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 32))(v39, v40, v65);
  v39[*(int *)(v41 + 20)] = v40[*(int *)(v41 + 20)];
  v39[*(int *)(v41 + 24)] = v40[*(int *)(v41 + 24)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_13:
  uint64_t v47 = a3[11];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  *(void *)uint64_t v48 = *(void *)v49;
  v48[8] = v49[8];
  return a1;
}

uint64_t sub_1001A66E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A66F8);
}

uint64_t sub_1001A66F8(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v13(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_100002ED4(&qword_10043E570);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E578);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  int v17 = &a1[a3[10]];

  return v15(v17, a2, v16);
}

uint64_t sub_1001A6878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A688C);
}

char *sub_1001A688C(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100002ED4(&qword_10043E570);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E578);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  int v17 = &v5[a4[10]];

  return (char *)v15(v17, a2, a2, v16);
}

void sub_1001A6A0C()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_100442480, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavannaBoundingBox);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_100442488, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeFeatures);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeType()
{
  return &type metadata for CLP_LogEntry_PrivateData_GEOMapFeatureTropicalSavanna.TreeType;
}

uint64_t sub_1001A6B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A6B98);
}

uint64_t sub_1001A6B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A6BB0);
}

uint64_t sub_1001A6BB4()
{
  return sub_100099E94();
}

void *sub_1001A6BC4(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_100002ED4(&qword_10043E458);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      uint64_t v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
    }
    *((unsigned char *)v7 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return v7;
}

void *sub_1001A6DE8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    uint64_t v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_1001A6FC0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v46 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  uint64_t v47 = (uint64_t)v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v47, v14, v9);
      uint64_t v21 = v15[5];
      uint64_t v22 = v47 + v21;
      uint64_t v23 = &v14[v21];
      char v24 = v23[8];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24;
      uint64_t v25 = v15[6];
      uint64_t v26 = v47 + v25;
      uint64_t v27 = &v14[v25];
      char v28 = v27[8];
      *(void *)uint64_t v26 = *(void *)v27;
      *(unsigned char *)(v26 + 8) = v28;
      uint64_t v29 = v15[7];
      uint64_t v30 = v47 + v29;
      uint64_t v31 = &v14[v29];
      char v32 = v31[8];
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v32;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v47, 0, 1, v15);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v47;
  }
  else
  {
    if (!v18)
    {
      v11((char *)v47, v14, v9);
      uint64_t v33 = v15[5];
      uint64_t v34 = v47 + v33;
      uint64_t v35 = &v14[v33];
      char v36 = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v36;
      uint64_t v37 = v15[6];
      uint64_t v38 = v47 + v37;
      uint64_t v39 = &v14[v37];
      char v40 = v39[8];
      *(void *)uint64_t v38 = *(void *)v39;
      *(unsigned char *)(v38 + 8) = v40;
      uint64_t v41 = v15[7];
      uint64_t v42 = v47 + v41;
      uint64_t v43 = &v14[v41];
      char v44 = v43[8];
      *(void *)uint64_t v42 = *(void *)v43;
      *(unsigned char *)(v42 + 8) = v44;
      goto LABEL_9;
    }
    sub_10015B354(v47, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v47;
  }
  memcpy(v20, v14, v19);
LABEL_9:
  uint64_t result = v46;
  *((unsigned char *)v46 + *(int *)(v48 + 28)) = *((unsigned char *)v49 + *(int *)(v48 + 28));
  return result;
}

void *sub_1001A72BC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_100002ED4(&qword_10043E458);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    int v18 = &v12[v17];
    size_t v19 = &v13[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    char v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_1001A748C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v42 = a3;
  uint64_t v43 = a2;
  uint64_t v12 = *(int *)(a3 + 24);
  char v40 = a1;
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v16 + 48);
  uint64_t v41 = (uint64_t)v13;
  LODWORD(v13) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (v13)
  {
    if (!v18)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v41, v14, v9);
      uint64_t v21 = v15[5];
      uint64_t v22 = v41 + v21;
      uint64_t v23 = &v14[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v23[8];
      uint64_t v24 = v15[6];
      uint64_t v25 = v41 + v24;
      uint64_t v26 = &v14[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v26[8];
      uint64_t v27 = v15[7];
      uint64_t v28 = v41 + v27;
      uint64_t v29 = &v14[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v29[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v16 + 56))(v41, 0, 1, v15);
      goto LABEL_9;
    }
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v41;
  }
  else
  {
    if (!v18)
    {
      v11((char *)v41, v14, v9);
      uint64_t v30 = v15[5];
      uint64_t v31 = v41 + v30;
      char v32 = &v14[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *(unsigned char *)(v31 + 8) = v32[8];
      uint64_t v33 = v15[6];
      uint64_t v34 = v41 + v33;
      uint64_t v35 = &v14[v33];
      *(void *)uint64_t v34 = *(void *)v35;
      *(unsigned char *)(v34 + 8) = v35[8];
      uint64_t v36 = v15[7];
      uint64_t v37 = v41 + v36;
      uint64_t v38 = &v14[v36];
      *(void *)uint64_t v37 = *(void *)v38;
      *(unsigned char *)(v37 + 8) = v38[8];
      goto LABEL_9;
    }
    sub_10015B354(v41, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v19 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v20 = (void *)v41;
  }
  memcpy(v20, v14, v19);
LABEL_9:
  uint64_t result = v40;
  *((unsigned char *)v40 + *(int *)(v42 + 28)) = *((unsigned char *)v43 + *(int *)(v42 + 28));
  return result;
}

uint64_t sub_1001A7780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A7794);
}

uint64_t sub_1001A7798(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100002ED4(&qword_10043E458);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1001A78C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A78DC);
}

void *sub_1001A78E0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100002ED4(&qword_10043E458);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1001A7A10()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1001A7B0C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1001A7BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1001A7C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1001A7CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1001A7D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1001A7DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A7E08);
}

uint64_t sub_1001A7E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 4u) {
      int v10 = 4;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 4;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 4u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1001A7ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A7EE4);
}

uint64_t sub_1001A7EE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  }
  return result;
}

uint64_t sub_1001A7FA0()
{
  return sub_100099E94();
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation.WatchOrientationType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WatchOrientation.WatchOrientationType;
}

char *sub_1001A7FC0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    int v10 = &a1[v9];
    unsigned int v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      int v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v25] = a2[v25];
    uint64_t v26 = a3[9];
    a1[a3[8]] = a2[a3[8]];
    a1[v26] = a2[v26];
    uint64_t v27 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v27] = a2[v27];
  }
  return a1;
}

uint64_t sub_1001A81FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    int v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)int v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  return a1;
}

uint64_t sub_1001A83E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24);
  v42(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v40 = *((void *)v10 - 1);
  unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v40 + 48);
  uint64_t v43 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v43, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v43 + v15;
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = v43 + v19;
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = v43 + v23;
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = v26;
      (*(void (**)(uint64_t, void, uint64_t, int *))(v40 + 56))(v43, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v43;
  }
  else
  {
    if (!v12)
    {
      v42(v43, (uint64_t)v9, v6);
      uint64_t v27 = v10[5];
      uint64_t v28 = v43 + v27;
      uint64_t v29 = &v9[v27];
      char v30 = v29[8];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v30;
      uint64_t v31 = v10[6];
      uint64_t v32 = v43 + v31;
      uint64_t v33 = &v9[v31];
      char v34 = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      *(unsigned char *)(v32 + 8) = v34;
      uint64_t v35 = v10[7];
      uint64_t v36 = v43 + v35;
      uint64_t v37 = &v9[v35];
      char v38 = v37[8];
      *(void *)uint64_t v36 = *(void *)v37;
      *(unsigned char *)(v36 + 8) = v38;
      goto LABEL_9;
    }
    sub_10015B354(v43, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v43;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001A8718(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  uint64_t v25 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  return a1;
}

uint64_t sub_1001A8904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 40);
  v39(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)(a2 + v7);
  int v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v37 = *((void *)v10 - 1);
  unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v37 + 48);
  uint64_t v40 = v8;
  LODWORD(v8) = v11(v8, 1, v10);
  int v12 = v11((uint64_t)v9, 1, v10);
  if (v8)
  {
    if (!v12)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = v40 + v15;
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      *(unsigned char *)(v16 + 8) = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = v40 + v18;
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *(unsigned char *)(v19 + 8) = v20[8];
      uint64_t v21 = v10[7];
      uint64_t v22 = v40 + v21;
      uint64_t v23 = &v9[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v23[8];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v37 + 56))(v40, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v40;
  }
  else
  {
    if (!v12)
    {
      v39(v40, (uint64_t)v9, v6);
      uint64_t v24 = v10[5];
      uint64_t v25 = v40 + v24;
      char v26 = &v9[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *(unsigned char *)(v25 + 8) = v26[8];
      uint64_t v27 = v10[6];
      uint64_t v28 = v40 + v27;
      uint64_t v29 = &v9[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *(unsigned char *)(v28 + 8) = v29[8];
      uint64_t v30 = v10[7];
      uint64_t v31 = v40 + v30;
      uint64_t v32 = &v9[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      *(unsigned char *)(v31 + 8) = v32[8];
      goto LABEL_9;
    }
    sub_10015B354(v40, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    size_t v13 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
    uint64_t v14 = (void *)v40;
  }
  memcpy(v14, v9, v13);
LABEL_9:
  uint64_t v33 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v35 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  return a1;
}

uint64_t sub_1001A8C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A8C3C);
}

uint64_t sub_1001A8C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 2) {
    int v15 = ((v14 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v15 = -2;
  }
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1001A8D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A8D88);
}

uint64_t sub_1001A8D8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100002ED4(&qword_10043E458);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 36)) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001A8EA0()
{
}

void sub_1001A8EB8()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WristState.WristStateType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WristState.WristStateType;
}

unsigned char *_s10ALProtobuf35CLP_LogEntry_PrivateData_WifiRfBandOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A9098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_WristState.WristStateConfidenceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_WristState.WristStateConfidenceType;
}

uint64_t *sub_1001A90D0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8((char *)a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v56 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    uint64_t v55 = v13;
    uint64_t v57 = v8;
    if (v56(v11, 1, v12))
    {
      uint64_t v14 = sub_100002ED4(&qword_10043E458);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = a3[7];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = (char *)a1 + v26;
    uint64_t v30 = (char *)a2 + v26;
    uint64_t v31 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_100002ED4(&qword_10043E580);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v57(v29, v30, v7);
      v29[*(int *)(v31 + 20)] = v30[*(int *)(v31 + 20)];
      v29[*(int *)(v31 + 24)] = v30[*(int *)(v31 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    uint64_t v34 = a3[8];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
    uint64_t v38 = *((void *)v37 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = sub_100002ED4(&qword_10043E588);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v54 = v38;
      v57(v35, v36, v7);
      uint64_t v40 = v37[5];
      uint64_t v41 = &v35[v40];
      uint64_t v42 = &v36[v40];
      if (v56(&v36[v40], 1, v12))
      {
        uint64_t v43 = sub_100002ED4(&qword_10043E458);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        v57(v41, v42, v7);
        uint64_t v44 = v12[5];
        int v45 = &v41[v44];
        uint64_t v46 = &v42[v44];
        *(void *)int v45 = *(void *)v46;
        v45[8] = v46[8];
        uint64_t v47 = v12[6];
        uint64_t v48 = &v41[v47];
        uint64_t v49 = &v42[v47];
        *(void *)uint64_t v48 = *(void *)v49;
        v48[8] = v49[8];
        uint64_t v50 = v12[7];
        uint64_t v51 = &v41[v50];
        int v52 = &v42[v50];
        *(void *)uint64_t v51 = *(void *)v52;
        v51[8] = v52[8];
        (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(v41, 0, 1, v12);
      }
      v35[v37[6]] = v36[v37[6]];
      v35[v37[7]] = v36[v37[7]];
      v35[v37[8]] = v36[v37[8]];
      v35[v37[9]] = v36[v37[9]];
      v35[v37[10]] = v36[v37[10]];
      v35[v37[11]] = v36[v37[11]];
      (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v35, 0, 1, v37);
    }
  }
  return a1;
}

uint64_t sub_1001A961C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v14(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6)) {
    v14(v5, v4);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v14(v8, v4);
  }
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    v14(v10, v4);
    uint64_t v13 = v10 + *(int *)(v11 + 20);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v13, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v4);
    }
  }
  return result;
}

uint64_t sub_1001A982C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v59 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v55 = v12;
  uint64_t v57 = (void (*)(void *, const void *, uint64_t))v7;
  uint64_t v58 = v6;
  if (v56(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v59;
  uint64_t v26 = v59 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = (void *)(v59 + v24);
  uint64_t v29 = (const void *)(a2 + v24);
  uint64_t v30 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E580);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    uint64_t v33 = v58;
  }
  else
  {
    uint64_t v33 = v58;
    v57(v28, v29, v58);
    *((unsigned char *)v28 + *(int *)(v30 + 20)) = *((unsigned char *)v29 + *(int *)(v30 + 20));
    *((unsigned char *)v28 + *(int *)(v30 + 24)) = *((unsigned char *)v29 + *(int *)(v30 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)(v59 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v38 = *((void *)v37 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_100002ED4(&qword_10043E588);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v38;
    v57(v35, v36, v33);
    uint64_t v40 = v37[5];
    uint64_t v41 = &v35[v40];
    uint64_t v42 = &v36[v40];
    if (v56(&v36[v40], 1, v11))
    {
      uint64_t v43 = sub_100002ED4(&qword_10043E458);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v57(v41, v42, v33);
      uint64_t v44 = v11[5];
      int v45 = &v41[v44];
      uint64_t v46 = &v42[v44];
      *(void *)int v45 = *(void *)v46;
      v45[8] = v46[8];
      uint64_t v47 = v11[6];
      uint64_t v48 = &v41[v47];
      uint64_t v49 = &v42[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v11[7];
      uint64_t v51 = &v41[v50];
      int v52 = &v42[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(v41, 0, 1, v11);
    }
    v35[v37[6]] = v36[v37[6]];
    v35[v37[7]] = v36[v37[7]];
    v35[v37[8]] = v36[v37[8]];
    v35[v37[9]] = v36[v37[9]];
    v35[v37[10]] = v36[v37[10]];
    v35[v37[11]] = v36[v37[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v35, 0, 1, v37);
    return v59;
  }
  return v25;
}

char *sub_1001A9D38(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v117 = *(void *)(v6 - 8);
  uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 24);
  v116(a1, a2, v6);
  __src = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, int *))(v11 + 48);
  unsigned int v13 = v12(v8, 1, v10);
  uint64_t v114 = v12;
  unsigned int v14 = v12(v9, 1, v10);
  uint64_t v115 = v10;
  uint64_t v113 = v11;
  uint64_t v118 = v6;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[8];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[8];
      *(void *)uint64_t v24 = *(void *)v25;
      v24[8] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v27 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v116(v8, (uint64_t)v9, v6);
  uint64_t v57 = v10[5];
  uint64_t v58 = &v8[v57];
  uint64_t v59 = &v9[v57];
  char v60 = v59[8];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v60;
  uint64_t v61 = v10[6];
  char v62 = &v8[v61];
  uint64_t v63 = &v9[v61];
  char v64 = v63[8];
  *(void *)char v62 = *(void *)v63;
  v62[8] = v64;
  uint64_t v65 = v10[7];
  char v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  char v68 = v67[8];
  *(void *)char v66 = *(void *)v67;
  v66[8] = v68;
LABEL_7:
  uint64_t v28 = __src;
  uint64_t v29 = __src[6];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = (int *)(a2 + v29);
  int v32 = *v31;
  v30[4] = *((unsigned char *)v31 + 4);
  *(_DWORD *)uint64_t v30 = v32;
  uint64_t v33 = __src[7];
  __srca = a1;
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)(a2 + v33);
  uint64_t v36 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v34, v35, v118);
      v34[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
      v34[*(int *)(v36 + 24)] = v35[*(int *)(v36 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    sub_10015B354((uint64_t)v34, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
LABEL_12:
    uint64_t v41 = sub_100002ED4(&qword_10043E580);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  v116(v34, (uint64_t)v35, v118);
  v34[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
  v34[*(int *)(v36 + 24)] = v35[*(int *)(v36 + 24)];
LABEL_13:
  uint64_t v42 = __srca;
  uint64_t v43 = v28[8];
  uint64_t v44 = &__srca[v43];
  int v45 = (char *)(a2 + v43);
  uint64_t v46 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v47 = *((void *)v46 - 1);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, int *))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_10015B354((uint64_t)v44, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
      goto LABEL_19;
    }
    v116(v44, (uint64_t)v45, v118);
    uint64_t v69 = v46[5];
    char v70 = &v45[v69];
    uint64_t v112 = (uint64_t)&v44[v69];
    int v71 = ((uint64_t (*)(void))v12)();
    unsigned int v72 = v12(v70, 1, v115);
    if (v71)
    {
      if (!v72)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v117 + 16))(v112, v70, v118);
        uint64_t v87 = v115[5];
        uint64_t v88 = v112 + v87;
        int v89 = &v70[v87];
        char v90 = v89[8];
        *(void *)uint64_t v88 = *(void *)v89;
        *(unsigned char *)(v88 + 8) = v90;
        uint64_t v91 = v115[6];
        uint64_t v92 = v112 + v91;
        char v93 = &v70[v91];
        char v94 = v93[8];
        *(void *)uint64_t v92 = *(void *)v93;
        *(unsigned char *)(v92 + 8) = v94;
        uint64_t v95 = v115[7];
        uint64_t v96 = v112 + v95;
        char v97 = &v70[v95];
        char v98 = v97[8];
        *(void *)uint64_t v96 = *(void *)v97;
        *(unsigned char *)(v96 + 8) = v98;
        (*(void (**)(uint64_t, void, uint64_t, int *))(v113 + 56))(v112, 0, 1, v115);
        goto LABEL_32;
      }
      size_t v73 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      char v74 = (void *)v112;
    }
    else
    {
      if (!v72)
      {
        v116((char *)v112, (uint64_t)v70, v118);
        uint64_t v99 = v115[5];
        uint64_t v100 = v112 + v99;
        uint64_t v101 = &v70[v99];
        char v102 = v101[8];
        *(void *)uint64_t v100 = *(void *)v101;
        *(unsigned char *)(v100 + 8) = v102;
        uint64_t v103 = v115[6];
        uint64_t v104 = v112 + v103;
        uint64_t v105 = &v70[v103];
        char v106 = v105[8];
        *(void *)uint64_t v104 = *(void *)v105;
        *(unsigned char *)(v104 + 8) = v106;
        uint64_t v107 = v115[7];
        uint64_t v108 = v112 + v107;
        char v109 = &v70[v107];
        char v110 = v109[8];
        *(void *)uint64_t v108 = *(void *)v109;
        *(unsigned char *)(v108 + 8) = v110;
        goto LABEL_32;
      }
      sub_10015B354(v112, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      size_t v73 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      char v74 = (void *)v112;
    }
    memcpy(v74, v70, v73);
LABEL_32:
    v44[v46[6]] = v45[v46[6]];
    v44[v46[7]] = v45[v46[7]];
    v44[v46[8]] = v45[v46[8]];
    v44[v46[9]] = v45[v46[9]];
    v44[v46[10]] = v45[v46[10]];
    v44[v46[11]] = v45[v46[11]];
    return v42;
  }
  if (v50)
  {
LABEL_19:
    uint64_t v56 = sub_100002ED4(&qword_10043E588);
    memcpy(v44, v45, *(void *)(*(void *)(v56 - 8) + 64));
    return v42;
  }
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
  v51(v44, v45, v118);
  uint64_t v52 = v46[5];
  uint64_t v53 = &v44[v52];
  uint64_t v54 = &v45[v52];
  if (v114(&v45[v52], 1, v115))
  {
    uint64_t v55 = sub_100002ED4(&qword_10043E458);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    v51(v53, v54, v118);
    uint64_t v75 = v115[5];
    uint64_t v76 = &v53[v75];
    uint64_t v77 = &v54[v75];
    char v78 = v77[8];
    *(void *)uint64_t v76 = *(void *)v77;
    v76[8] = v78;
    uint64_t v79 = v115[6];
    uint64_t v80 = &v53[v79];
    char v81 = &v54[v79];
    char v82 = v81[8];
    *(void *)uint64_t v80 = *(void *)v81;
    v80[8] = v82;
    uint64_t v83 = v115[7];
    uint64_t v84 = &v53[v83];
    uint64_t v85 = &v54[v83];
    char v86 = v85[8];
    *(void *)uint64_t v84 = *(void *)v85;
    v84[8] = v86;
    (*(void (**)(char *, void, uint64_t, int *))(v113 + 56))(v53, 0, 1, v115);
  }
  uint64_t v42 = __srca;
  v44[v46[6]] = v45[v46[6]];
  v44[v46[7]] = v45[v46[7]];
  v44[v46[8]] = v45[v46[8]];
  v44[v46[9]] = v45[v46[9]];
  v44[v46[10]] = v45[v46[10]];
  v44[v46[11]] = v45[v46[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
  return v42;
}

uint64_t sub_1001AA634(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v59 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  uint64_t v55 = v12;
  uint64_t v57 = (void (*)(void *, const void *, uint64_t))v7;
  uint64_t v58 = v6;
  if (v56(v10, 1, v11))
  {
    uint64_t v13 = sub_100002ED4(&qword_10043E458);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)char v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a3[7];
  uint64_t v25 = v59;
  uint64_t v26 = v59 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = (void *)(v59 + v24);
  uint64_t v29 = (const void *)(a2 + v24);
  uint64_t v30 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100002ED4(&qword_10043E580);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    uint64_t v33 = v58;
  }
  else
  {
    uint64_t v33 = v58;
    v57(v28, v29, v58);
    *((unsigned char *)v28 + *(int *)(v30 + 20)) = *((unsigned char *)v29 + *(int *)(v30 + 20));
    *((unsigned char *)v28 + *(int *)(v30 + 24)) = *((unsigned char *)v29 + *(int *)(v30 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)(v59 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v38 = *((void *)v37 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
  {
    uint64_t v39 = sub_100002ED4(&qword_10043E588);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v54 = v38;
    v57(v35, v36, v33);
    uint64_t v40 = v37[5];
    uint64_t v41 = &v35[v40];
    uint64_t v42 = &v36[v40];
    if (v56(&v36[v40], 1, v11))
    {
      uint64_t v43 = sub_100002ED4(&qword_10043E458);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      v57(v41, v42, v33);
      uint64_t v44 = v11[5];
      int v45 = &v41[v44];
      uint64_t v46 = &v42[v44];
      *(void *)int v45 = *(void *)v46;
      v45[8] = v46[8];
      uint64_t v47 = v11[6];
      uint64_t v48 = &v41[v47];
      int v49 = &v42[v47];
      *(void *)uint64_t v48 = *(void *)v49;
      v48[8] = v49[8];
      uint64_t v50 = v11[7];
      uint64_t v51 = &v41[v50];
      uint64_t v52 = &v42[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      v51[8] = v52[8];
      (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(v41, 0, 1, v11);
    }
    v35[v37[6]] = v36[v37[6]];
    v35[v37[7]] = v36[v37[7]];
    v35[v37[8]] = v36[v37[8]];
    v35[v37[9]] = v36[v37[9]];
    v35[v37[10]] = v36[v37[10]];
    v35[v37[11]] = v36[v37[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v35, 0, 1, v37);
    return v59;
  }
  return v25;
}

char *sub_1001AAB40(char *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 40);
  v100(a1, a2, v6);
  __src = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, int *))(v11 + 48);
  unsigned int v13 = v12(v8, 1, v10);
  char v98 = v12;
  unsigned int v14 = v12(v9, 1, v10);
  uint64_t v99 = v10;
  uint64_t v97 = v11;
  uint64_t v102 = v6;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      v19[8] = v20[8];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(void *)char v22 = *(void *)v23;
      v22[8] = v23[8];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_10015B354((uint64_t)v8, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
LABEL_6:
    uint64_t v24 = sub_100002ED4(&qword_10043E458);
    memcpy(v8, v9, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v100(v8, (uint64_t)v9, v6);
  uint64_t v53 = v10[5];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  *(void *)uint64_t v54 = *(void *)v55;
  v54[8] = v55[8];
  uint64_t v56 = v10[6];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = &v9[v56];
  *(void *)uint64_t v57 = *(void *)v58;
  v57[8] = v58[8];
  uint64_t v59 = v10[7];
  char v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  *(void *)char v60 = *(void *)v61;
  v60[8] = v61[8];
LABEL_7:
  uint64_t v25 = __src;
  uint64_t v26 = __src[6];
  uint64_t v27 = __src[7];
  uint64_t v28 = &a1[v26];
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  v28[4] = *(unsigned char *)(v29 + 4);
  __srca = a1;
  uint64_t v30 = &a1[v27];
  uint64_t v31 = (char *)(a2 + v27);
  uint64_t v32 = type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  int v35 = v34(v30, 1, v32);
  int v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v30, v31, v102);
      v30[*(int *)(v32 + 20)] = v31[*(int *)(v32 + 20)];
      v30[*(int *)(v32 + 24)] = v31[*(int *)(v32 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v36)
  {
    sub_10015B354((uint64_t)v30, type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
LABEL_12:
    uint64_t v37 = sub_100002ED4(&qword_10043E580);
    memcpy(v30, v31, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  v100(v30, (uint64_t)v31, v102);
  v30[*(int *)(v32 + 20)] = v31[*(int *)(v32 + 20)];
  v30[*(int *)(v32 + 24)] = v31[*(int *)(v32 + 24)];
LABEL_13:
  uint64_t v38 = __srca;
  uint64_t v39 = v25[8];
  uint64_t v40 = &__srca[v39];
  uint64_t v41 = (char *)(a2 + v39);
  uint64_t v42 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_WristState(0);
  uint64_t v43 = *((void *)v42 - 1);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, int *))(v43 + 48);
  int v45 = v44(v40, 1, v42);
  int v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (v46)
    {
      sub_10015B354((uint64_t)v40, type metadata accessor for CLP_LogEntry_PrivateData_WristState);
      goto LABEL_19;
    }
    v100(v40, (uint64_t)v41, v102);
    uint64_t v62 = v42[5];
    uint64_t v63 = &v41[v62];
    uint64_t v96 = (uint64_t)&v40[v62];
    int v64 = ((uint64_t (*)(void))v12)();
    unsigned int v65 = v12(v63, 1, v99);
    if (v64)
    {
      if (!v65)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v96, v63, v102);
        uint64_t v77 = v99[5];
        uint64_t v78 = v96 + v77;
        uint64_t v79 = &v63[v77];
        *(void *)uint64_t v78 = *(void *)v79;
        *(unsigned char *)(v78 + 8) = v79[8];
        uint64_t v80 = v99[6];
        uint64_t v81 = v96 + v80;
        char v82 = &v63[v80];
        *(void *)uint64_t v81 = *(void *)v82;
        *(unsigned char *)(v81 + 8) = v82[8];
        uint64_t v83 = v99[7];
        uint64_t v84 = v96 + v83;
        uint64_t v85 = &v63[v83];
        *(void *)uint64_t v84 = *(void *)v85;
        *(unsigned char *)(v84 + 8) = v85[8];
        (*(void (**)(uint64_t, void, uint64_t, int *))(v97 + 56))(v96, 0, 1, v99);
        goto LABEL_32;
      }
      size_t v66 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      uint64_t v67 = (void *)v96;
    }
    else
    {
      if (!v65)
      {
        v100((char *)v96, (uint64_t)v63, v102);
        uint64_t v86 = v99[5];
        uint64_t v87 = v96 + v86;
        uint64_t v88 = &v63[v86];
        *(void *)uint64_t v87 = *(void *)v88;
        *(unsigned char *)(v87 + 8) = v88[8];
        uint64_t v89 = v99[6];
        uint64_t v90 = v96 + v89;
        uint64_t v91 = &v63[v89];
        *(void *)uint64_t v90 = *(void *)v91;
        *(unsigned char *)(v90 + 8) = v91[8];
        uint64_t v92 = v99[7];
        uint64_t v93 = v96 + v92;
        char v94 = &v63[v92];
        *(void *)uint64_t v93 = *(void *)v94;
        *(unsigned char *)(v93 + 8) = v94[8];
        goto LABEL_32;
      }
      sub_10015B354(v96, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
      size_t v66 = *(void *)(*(void *)(sub_100002ED4(&qword_10043E458) - 8) + 64);
      uint64_t v67 = (void *)v96;
    }
    memcpy(v67, v63, v66);
LABEL_32:
    v40[v42[6]] = v41[v42[6]];
    v40[v42[7]] = v41[v42[7]];
    v40[v42[8]] = v41[v42[8]];
    v40[v42[9]] = v41[v42[9]];
    v40[v42[10]] = v41[v42[10]];
    v40[v42[11]] = v41[v42[11]];
    return v38;
  }
  if (v46)
  {
LABEL_19:
    uint64_t v52 = sub_100002ED4(&qword_10043E588);
    memcpy(v40, v41, *(void *)(*(void *)(v52 - 8) + 64));
    return v38;
  }
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
  v47(v40, v41, v102);
  uint64_t v48 = v42[5];
  int v49 = &v40[v48];
  uint64_t v50 = &v41[v48];
  if (v98(&v41[v48], 1, v99))
  {
    uint64_t v51 = sub_100002ED4(&qword_10043E458);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v47(v49, v50, v102);
    uint64_t v68 = v99[5];
    uint64_t v69 = &v49[v68];
    char v70 = &v50[v68];
    *(void *)uint64_t v69 = *(void *)v70;
    v69[8] = v70[8];
    uint64_t v71 = v99[6];
    unsigned int v72 = &v49[v71];
    size_t v73 = &v50[v71];
    *(void *)unsigned int v72 = *(void *)v73;
    v72[8] = v73[8];
    uint64_t v74 = v99[7];
    uint64_t v75 = &v49[v74];
    uint64_t v76 = &v50[v74];
    *(void *)uint64_t v75 = *(void *)v76;
    v75[8] = v76[8];
    (*(void (**)(char *, void, uint64_t, int *))(v97 + 56))(v49, 0, 1, v99);
  }
  uint64_t v38 = __srca;
  v40[v42[6]] = v41[v42[6]];
  v40[v42[7]] = v41[v42[7]];
  v40[v42[8]] = v41[v42[8]];
  v40[v42[9]] = v41[v42[9]];
  v40[v42[10]] = v41[v42[10]];
  v40[v42[11]] = v41[v42[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v43 + 56))(v40, 0, 1, v42);
  return v38;
}

uint64_t sub_1001AB438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AB44C);
}

uint64_t sub_1001AB44C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_100002ED4(&qword_10043E580);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  uint64_t v16 = sub_100002ED4(&qword_10043E588);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[8];

  return v17(v19, a2, v18);
}

uint64_t sub_1001AB5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AB604);
}

uint64_t sub_1001AB604(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100002ED4(&qword_10043E458);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  uint64_t v16 = sub_100002ED4(&qword_10043E580);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_7;
  }
  uint64_t v18 = sub_100002ED4(&qword_10043E588);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[8];

  return v19(v21, a2, a2, v20);
}

void sub_1001AB7B4()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, &qword_100442758, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WatchOrientation);
      if (v2 <= 0x3F)
      {
        sub_1001837E8(319, (unint64_t *)&unk_100442760, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WristState);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *sub_1001AB950(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    void *v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (void *)((char *)a1 + v10);
    uint64_t v15 = (void *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001ABA54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001ABADC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  void *v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001ABB90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001ABC70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1001ABD08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001ABDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ABDD8);
}

uint64_t sub_1001ABDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001ABEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ABEBC);
}

uint64_t sub_1001ABEBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  }
  return result;
}

uint64_t sub_1001ABF7C()
{
  return sub_1001ABF9C();
}

uint64_t sub_1001ABF9C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s10ALProtobuf47CLP_LogEntry_PrivateData_BatchedLocationFixTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001AC11CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference.UserSpecificPlaceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_PlaceInference.UserSpecificPlaceType;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference.PlaceInferencePlaceType()
{
  return &type metadata for CLP_LogEntry_PrivateData_PlaceInference.PlaceInferencePlaceType;
}

uint64_t sub_1001AC164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC178);
}

uint64_t sub_1001AC17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC190);
}

void *sub_1001AC194(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    int v11 = (char *)a2 + v8;
    *(void *)unint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[9];
    uint64_t v16 = a3[10];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v19 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
  }
  return a1;
}

uint64_t sub_1001AC2E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_1001AC3E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = v10;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  *(unsigned char *)(v15 + 8) = *((unsigned char *)v16 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v18 = a3[12];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  LODWORD(v17) = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  *(_DWORD *)uint64_t v19 = v17;
  return a1;
}

uint64_t sub_1001AC4F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_1001AC5F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(unsigned char *)(v11 + 8) = *(unsigned char *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  return a1;
}

uint64_t sub_1001AC6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC708);
}

uint64_t sub_1001AC70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 2) {
      int v11 = ((v10 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v11 = -2;
    }
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001AC7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC7FC);
}

uint64_t sub_1001AC800(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 44)) = a2 + 2;
  }
  return result;
}

uint64_t sub_1001AC8BC()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001AC980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC994);
}

uint64_t sub_1001AC998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC9AC);
}

uint64_t sub_1001AC9B0()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *_s10ALProtobuf57CLP_LogEntry_PrivateData_ClientLocationReferenceFrameTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001ACB0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_PrivateData_InertialOdometrySample.ReferenceFrame()
{
  return &type metadata for CLP_LogEntry_PrivateData_InertialOdometrySample.ReferenceFrame;
}

uint64_t sub_1001ACB44()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation._StorageClass(0);
}

void sub_1001ACB4C()
{
  sub_1001837E8(319, (unint64_t *)&unk_1004429F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001ACC60()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate._StorageClass(0);
}

void sub_1001ACC68()
{
  sub_1001837E8(319, (unint64_t *)&unk_1004429F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_100442D60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PressureSample);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, &qword_100442D68, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MapMatcherData);
      if (v2 <= 0x3F)
      {
        sub_1001837E8(319, (unint64_t *)&unk_100442D70, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate.AltitudeInfo);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_1001ACECC()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_Location._StorageClass(0);
}

void sub_1001ACED4()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_100443518, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocation);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, &qword_100443520, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_DaemonLocationPrivate);
      if (v2 <= 0x3F)
      {
        sub_1001837E8(319, &qword_100443528, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TechnologyStatus);
        if (v3 <= 0x3F)
        {
          sub_1001837E8(319, &qword_100443530, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleSpeed);
          if (v4 <= 0x3F)
          {
            sub_1001837E8(319, &qword_100443538, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_VehicleHeading);
            if (v5 <= 0x3F)
            {
              sub_1001837E8(319, &qword_100443540, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_XtraFileAvailable);
              if (v6 <= 0x3F)
              {
                sub_1001837E8(319, (unint64_t *)&unk_100443548, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_LocationDerivedSpeed);
                if (v7 <= 0x3F) {
                  swift_updateClassMetadata2();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1001AD208()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_MotionActivity._StorageClass(0);
}

void sub_1001AD210()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001AD308()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_MotionStateMediator._StorageClass(0);
}

void sub_1001AD310(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001AD330()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_MapVector._StorageClass(0);
}

void sub_1001AD338(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001AD358(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v7 <= 0x3F)
  {
    sub_1001837E8(319, a4, a5);
    if (v8 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001AD460()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_TunnelEndPointAssistance._StorageClass(0);
}

void sub_1001AD468()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001AD548()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_DeviceStatus._StorageClass(0);
}

void sub_1001AD550()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_100443EA0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ReachabilityState);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_100443EA8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_Battery);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1001AD6D4()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_StepCountEntry._StorageClass(0);
}

void sub_1001AD6DC()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_1004440F0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_AccelerometerPace);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_1004440F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_FalseStepDetectorState);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1001AD884()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeCompass._StorageClass(0);
}

void sub_1001AD88C()
{
  sub_1001837E8(319, &qword_1004444A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_1004444A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001AD9B4()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDeviceMotion._StorageClass(0);
}

void sub_1001AD9BC()
{
  sub_1001837E8(319, (unint64_t *)&unk_1004444A8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeDoubleVector4);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_1004444A0, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_MotionTypeVector3);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001ADAE0()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_WifiNotification._StorageClass(0);
}

void sub_1001ADAE8()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, &qword_100444870, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiAssociationState);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_100444878, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_WifiScanResult);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1001ADC68()
{
  return type metadata accessor for CLP_LogEntry_PrivateData_RoutineVisit._StorageClass(0);
}

void sub_1001ADC70()
{
  sub_1001837E8(319, (unint64_t *)&unk_10043FA60, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  if (v0 <= 0x3F)
  {
    sub_1001837E8(319, (unint64_t *)&unk_100444A80, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_PlaceInference);
    if (v1 <= 0x3F)
    {
      sub_1001837E8(319, (unint64_t *)&unk_1004429F8, (void (*)(uint64_t))type metadata accessor for CLP_LogEntry_PrivateData_ClientLocationCoordinate);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

unint64_t sub_1001ADDD4()
{
  unint64_t result = qword_100445158;
  if (!qword_100445158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445158);
  }
  return result;
}

unint64_t sub_1001ADE28()
{
  unint64_t result = qword_100445160;
  if (!qword_100445160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445160);
  }
  return result;
}

unint64_t sub_1001ADE7C()
{
  unint64_t result = qword_100445168;
  if (!qword_100445168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445168);
  }
  return result;
}

unint64_t sub_1001ADED0()
{
  unint64_t result = qword_100445170;
  if (!qword_100445170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445170);
  }
  return result;
}

unint64_t sub_1001ADF24()
{
  unint64_t result = qword_100445178;
  if (!qword_100445178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445178);
  }
  return result;
}

unint64_t sub_1001ADF78()
{
  unint64_t result = qword_100445180;
  if (!qword_100445180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445180);
  }
  return result;
}

unint64_t sub_1001ADFCC()
{
  unint64_t result = qword_100445188;
  if (!qword_100445188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445188);
  }
  return result;
}

unint64_t sub_1001AE020()
{
  unint64_t result = qword_100445190;
  if (!qword_100445190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445190);
  }
  return result;
}

unint64_t sub_1001AE074()
{
  unint64_t result = qword_100445198;
  if (!qword_100445198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445198);
  }
  return result;
}

unint64_t sub_1001AE0C8()
{
  unint64_t result = qword_1004451A0;
  if (!qword_1004451A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451A0);
  }
  return result;
}

unint64_t sub_1001AE11C()
{
  unint64_t result = qword_1004451A8;
  if (!qword_1004451A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451A8);
  }
  return result;
}

unint64_t sub_1001AE170()
{
  unint64_t result = qword_1004451B0;
  if (!qword_1004451B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451B0);
  }
  return result;
}

unint64_t sub_1001AE1C4()
{
  unint64_t result = qword_1004451B8;
  if (!qword_1004451B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451B8);
  }
  return result;
}

unint64_t sub_1001AE218()
{
  unint64_t result = qword_1004451C0;
  if (!qword_1004451C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451C0);
  }
  return result;
}

unint64_t sub_1001AE26C()
{
  unint64_t result = qword_1004451C8;
  if (!qword_1004451C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451C8);
  }
  return result;
}

unint64_t sub_1001AE2C0()
{
  unint64_t result = qword_1004451D0;
  if (!qword_1004451D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451D0);
  }
  return result;
}

unint64_t sub_1001AE314()
{
  unint64_t result = qword_1004451D8;
  if (!qword_1004451D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451D8);
  }
  return result;
}

unint64_t sub_1001AE368()
{
  unint64_t result = qword_1004451E0;
  if (!qword_1004451E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451E0);
  }
  return result;
}

unint64_t sub_1001AE3BC()
{
  unint64_t result = qword_1004451E8;
  if (!qword_1004451E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451E8);
  }
  return result;
}

unint64_t sub_1001AE410()
{
  unint64_t result = qword_1004451F0;
  if (!qword_1004451F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451F0);
  }
  return result;
}

unint64_t sub_1001AE464()
{
  unint64_t result = qword_1004451F8;
  if (!qword_1004451F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004451F8);
  }
  return result;
}

unint64_t sub_1001AE4B8()
{
  unint64_t result = qword_100445200;
  if (!qword_100445200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445200);
  }
  return result;
}

unint64_t sub_1001AE50C()
{
  unint64_t result = qword_100445208;
  if (!qword_100445208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445208);
  }
  return result;
}

unint64_t sub_1001AE560()
{
  unint64_t result = qword_100445210;
  if (!qword_100445210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445210);
  }
  return result;
}

unint64_t sub_1001AE5B4()
{
  unint64_t result = qword_100445218;
  if (!qword_100445218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445218);
  }
  return result;
}

unint64_t sub_1001AE608()
{
  unint64_t result = qword_100445220;
  if (!qword_100445220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445220);
  }
  return result;
}

unint64_t sub_1001AE65C()
{
  unint64_t result = qword_100445228;
  if (!qword_100445228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445228);
  }
  return result;
}

unint64_t sub_1001AE6B0()
{
  unint64_t result = qword_100445230;
  if (!qword_100445230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445230);
  }
  return result;
}

unint64_t sub_1001AE704()
{
  unint64_t result = qword_100445238;
  if (!qword_100445238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445238);
  }
  return result;
}

unint64_t sub_1001AE758()
{
  unint64_t result = qword_100445240;
  if (!qword_100445240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445240);
  }
  return result;
}

unint64_t sub_1001AE7AC()
{
  unint64_t result = qword_100445248;
  if (!qword_100445248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445248);
  }
  return result;
}

unint64_t sub_1001AE800()
{
  unint64_t result = qword_100445250;
  if (!qword_100445250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445250);
  }
  return result;
}

unint64_t sub_1001AE854()
{
  unint64_t result = qword_100445258;
  if (!qword_100445258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445258);
  }
  return result;
}

unint64_t sub_1001AE8A8()
{
  unint64_t result = qword_100445260;
  if (!qword_100445260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445260);
  }
  return result;
}

unint64_t sub_1001AE8FC()
{
  unint64_t result = qword_100445268;
  if (!qword_100445268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445268);
  }
  return result;
}

unint64_t sub_1001AE950()
{
  unint64_t result = qword_100445270;
  if (!qword_100445270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445270);
  }
  return result;
}

unint64_t sub_1001AE9A4()
{
  unint64_t result = qword_100445278;
  if (!qword_100445278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445278);
  }
  return result;
}

unint64_t sub_1001AE9F8()
{
  unint64_t result = qword_100445280;
  if (!qword_100445280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445280);
  }
  return result;
}

unint64_t sub_1001AEA4C()
{
  unint64_t result = qword_100445288;
  if (!qword_100445288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445288);
  }
  return result;
}

unint64_t sub_1001AEAA0()
{
  unint64_t result = qword_100445290;
  if (!qword_100445290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445290);
  }
  return result;
}

unint64_t sub_1001AEAF4()
{
  unint64_t result = qword_100445298;
  if (!qword_100445298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445298);
  }
  return result;
}

unint64_t sub_1001AEB48()
{
  unint64_t result = qword_1004452A0;
  if (!qword_1004452A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452A0);
  }
  return result;
}

unint64_t sub_1001AEB9C()
{
  unint64_t result = qword_1004452A8;
  if (!qword_1004452A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452A8);
  }
  return result;
}

unint64_t sub_1001AEBF0()
{
  unint64_t result = qword_1004452B0;
  if (!qword_1004452B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452B0);
  }
  return result;
}

unint64_t sub_1001AEC44()
{
  unint64_t result = qword_1004452B8;
  if (!qword_1004452B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452B8);
  }
  return result;
}

unint64_t sub_1001AEC98()
{
  unint64_t result = qword_1004452C0;
  if (!qword_1004452C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452C0);
  }
  return result;
}

unint64_t sub_1001AECEC()
{
  unint64_t result = qword_1004452C8;
  if (!qword_1004452C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452C8);
  }
  return result;
}

unint64_t sub_1001AED40()
{
  unint64_t result = qword_1004452D0;
  if (!qword_1004452D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452D0);
  }
  return result;
}

unint64_t sub_1001AED94()
{
  unint64_t result = qword_1004452D8;
  if (!qword_1004452D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452D8);
  }
  return result;
}

unint64_t sub_1001AEDE8()
{
  unint64_t result = qword_1004452E0;
  if (!qword_1004452E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452E0);
  }
  return result;
}

unint64_t sub_1001AEE3C()
{
  unint64_t result = qword_1004452E8;
  if (!qword_1004452E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452E8);
  }
  return result;
}

unint64_t sub_1001AEE90()
{
  unint64_t result = qword_1004452F0;
  if (!qword_1004452F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452F0);
  }
  return result;
}

unint64_t sub_1001AEEE4()
{
  unint64_t result = qword_1004452F8;
  if (!qword_1004452F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1004452F8);
  }
  return result;
}

unint64_t sub_1001AEF38()
{
  unint64_t result = qword_100445300;
  if (!qword_100445300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445300);
  }
  return result;
}

unint64_t sub_1001AEF8C()
{
  unint64_t result = qword_100445308;
  if (!qword_100445308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445308);
  }
  return result;
}

unint64_t sub_1001AEFE0()
{
  unint64_t result = qword_100445310;
  if (!qword_100445310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445310);
  }
  return result;
}

unint64_t sub_1001AF034()
{
  unint64_t result = qword_100445318;
  if (!qword_100445318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445318);
  }
  return result;
}

unint64_t sub_1001AF088()
{
  unint64_t result = qword_100445320;
  if (!qword_100445320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100445320);
  }
  return result;
}

uint64_t sub_1001AF114()
{
  uint64_t v1 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if (dword_100454358 == -1)
  {
    __break(1u);
  }
  else
  {
    ++dword_100454358;
    sub_1000045C8((uint64_t)v3);
    sub_1001AF768((uint64_t)v3, v0 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb);
    swift_beginAccess();
    sub_100002924(0);
    sub_100002A5C(dword_100454358);
    swift_endAccess();
    uint64_t v5 = mach_continuous_time();
    swift_beginAccess();
    sub_1000027EC(v5);
    swift_endAccess();
    return v0;
  }
  return result;
}

int *sub_1001AF238()
{
  return &dword_100454358;
}

uint64_t ALProtoRequest.__allocating_init(wifiResultOptions:)(uint64_t a1)
{
  return sub_1001AF2A0(a1, 3);
}

uint64_t type metadata accessor for ALProtoRequest()
{
  uint64_t result = qword_100480820;
  if (!qword_100480820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ALProtoRequest.__allocating_init(btResultOptions:)(uint64_t a1)
{
  return sub_1001AF2A0(a1, 4);
}

uint64_t sub_1001AF2A0(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_Request.ResultOptions(0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ALProtoRequest();
  uint64_t v7 = swift_allocObject();
  sub_1001AF114();
  swift_beginAccess();
  swift_retain();
  sub_100002B88(a2);
  swift_endAccess();
  sub_1000A9E2C(v6);
  swift_beginAccess();
  sub_100002F38((uint64_t)v6);
  swift_endAccess();
  swift_release();
  uint64_t v8 = type metadata accessor for ALResultOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

uint64_t ALProtoRequest.__allocating_init(data:)()
{
  uint64_t v1 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  BinaryDecodingOptions.init()();
  sub_1001AF710();
  Message.init(serializedData:extensions:partial:options:)();
  if (v0) {
    swift_deallocPartialClassInstance();
  }
  else {
    sub_1001AF768((uint64_t)v4, v5 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb);
  }
  return v5;
}

uint64_t ALProtoRequest.init(data:)()
{
  uint64_t v2 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  BinaryDecodingOptions.init()();
  sub_1001AF710();
  Message.init(serializedData:extensions:partial:options:)();
  if (v1)
  {
    type metadata accessor for ALProtoRequest();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1001AF768((uint64_t)v5, v0 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb);
  }
  return v0;
}

unint64_t sub_1001AF710()
{
  unint64_t result = qword_100439F30;
  if (!qword_100439F30)
  {
    type metadata accessor for CLP_LogEntry_AONLoc_Request(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100439F30);
  }
  return result;
}

uint64_t sub_1001AF768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AF7CC()
{
  uint64_t v1 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(void *)v0 + 128))(v2);
  sub_1001AF710();
  uint64_t v5 = Message.serializedData(partial:)();
  sub_1001AF8A8((uint64_t)v4);
  return v5;
}

uint64_t sub_1001AF8A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1001AF904()
{
  return sub_1001AF914(3);
}

BOOL sub_1001AF90C()
{
  return sub_1001AF914(4);
}

BOOL sub_1001AF914(char a1)
{
  uint64_t v3 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v15 - v8;
  uint64_t v10 = *(void (**)(uint64_t))(*(void *)v1 + 128);
  v10(v7);
  BOOL v11 = sub_100002C2C();
  uint64_t v12 = sub_1001AF8A8((uint64_t)v9);
  if (!v11) {
    return 0;
  }
  v10(v12);
  char v13 = sub_100002B5C();
  sub_1001AF8A8((uint64_t)v6);
  char v17 = v13;
  char v16 = a1;
  sub_100013280();
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  return v15[2] == v15[1];
}

uint64_t sub_1001AFA78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb;
  swift_beginAccess();
  return sub_1001AFACC(v3, a1);
}

uint64_t sub_1001AFACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AFB30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb;
  swift_beginAccess();
  sub_1001AFB8C(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1001AFB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1001AFBF0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1001AFC4C()
{
  return dword_100454358;
}

uint64_t sub_1001AFC90(int a1)
{
  uint64_t result = swift_beginAccess();
  dword_100454358 = a1;
  return result;
}

uint64_t (*sub_1001AFCD8())()
{
  return j__swift_endAccess;
}

uint64_t ALProtoRequest.deinit()
{
  sub_1001AF8A8(v0 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb);
  return v0;
}

uint64_t ALProtoRequest.__deallocating_deinit()
{
  sub_1001AF8A8(v0 + OBJC_IVAR____TtC10ALProtobuf14ALProtoRequest__pb);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_1001AFDBC()
{
  return type metadata accessor for ALProtoRequest();
}

uint64_t sub_1001AFDC4()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ALProtoRequest(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALProtoRequest);
}

uint64_t dispatch thunk of ALProtoRequest.__allocating_init(data:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ALProtoRequest.serializedData()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ALProtoRequest.isWiFiResult()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ALProtoRequest.isBtResult()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1001AFF18(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADC3C();

  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001AFF64@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100249698(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001AFF8C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100249698(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001AFFB8()
{
  return &off_10042AEF0;
}

void sub_1001AFFC4(void *a1@<X8>)
{
  *a1 = &off_10042AEF0;
}

uint64_t sub_1001AFFD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADBE8();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0020()
{
  return &off_10042AF28;
}

void sub_1001B002C(void *a1@<X8>)
{
  *a1 = &off_10042AF28;
}

uint64_t sub_1001B003C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADB94();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0088()
{
  return &off_10042AF50;
}

void sub_1001B0094(void *a1@<X8>)
{
  *a1 = &off_10042AF78;
}

uint64_t sub_1001B00A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADB40();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B00F0()
{
  return &off_10042AFA0;
}

void sub_1001B00FC(void *a1@<X8>)
{
  *a1 = &off_10042AFA0;
}

uint64_t sub_1001B0110(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADAEC();

  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001B015C@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496A8(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001B0184@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496A8(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001B01B0()
{
  return &off_10042AFC8;
}

void sub_1001B01BC(void *a1@<X8>)
{
  *a1 = &off_10042AFC8;
}

uint64_t sub_1001B01CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADA98();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0218()
{
  return &off_10042B000;
}

void sub_1001B0224(void *a1@<X8>)
{
  *a1 = &off_10042B028;
}

uint64_t sub_1001B0238(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ADA44();

  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001B0284@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496B8(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001B02AC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496B8(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001B02D8()
{
  return &off_10042B050;
}

void sub_1001B02E4(void *a1@<X8>)
{
  *a1 = &off_10042B050;
}

uint64_t sub_1001B02F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD9F0();

  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001B0344@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496C8(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001B036C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002496C8(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001B0398()
{
  return &off_10042B098;
}

void sub_1001B03A4(void *a1@<X8>)
{
  *a1 = &off_10042B098;
}

uint64_t sub_1001B03B4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD99C();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0400()
{
  return &off_10042B0D0;
}

void sub_1001B040C(void *a1@<X8>)
{
  *a1 = &off_10042B0D0;
}

uint64_t sub_1001B041C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD948();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0468()
{
  return &off_10042B0F8;
}

void sub_1001B0474(void *a1@<X8>)
{
  *a1 = &off_10042B0F8;
}

uint64_t sub_1001B0484(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD8F4();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B04D0()
{
  return &off_10042B120;
}

void sub_1001B04DC(void *a1@<X8>)
{
  *a1 = &off_10042B148;
}

uint64_t sub_1001B04EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD8A0();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0538()
{
  return &off_10042B170;
}

void sub_1001B0544(void *a1@<X8>)
{
  *a1 = &off_10042B198;
}

uint64_t sub_1001B0558(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD84C();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B05A4()
{
  return &off_10042B1C0;
}

void sub_1001B05B0(void *a1@<X8>)
{
  *a1 = &off_10042B1C0;
}

uint64_t sub_1001B05C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD7F8();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B060C()
{
  return &off_10042B1F0;
}

void sub_1001B0618(void *a1@<X8>)
{
  *a1 = &off_10042B218;
}

uint64_t sub_1001B0628(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD7A4();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0674()
{
  return &off_10042B240;
}

void sub_1001B0680(void *a1@<X8>)
{
  *a1 = &off_10042B240;
}

uint64_t sub_1001B0690(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD750();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B06DC()
{
  return &off_10042B268;
}

void sub_1001B06E8(void *a1@<X8>)
{
  *a1 = &off_10042B268;
}

uint64_t sub_1001B06F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD6FC();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0744()
{
  return &off_10042B290;
}

void sub_1001B0750(void *a1@<X8>)
{
  *a1 = &off_10042B2B8;
}

uint64_t sub_1001B0760(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD6A8();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B07AC()
{
  return &off_10042B2E0;
}

void sub_1001B07B8(void *a1@<X8>)
{
  *a1 = &off_10042B308;
}

uint64_t sub_1001B07C8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD654();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0814()
{
  return &off_10042B330;
}

void sub_1001B0820(void *a1@<X8>)
{
  *a1 = &off_10042B358;
}

uint64_t sub_1001B0834(char a1)
{
  return qword_1003B9DD8[a1];
}

BOOL sub_1001B0848(char *a1, char *a2)
{
  return qword_1003B9DD8[*a1] == qword_1003B9DD8[*a2];
}

uint64_t sub_1001B086C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD600();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_1001B08B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002496D8();
  *a1 = result;
  return result;
}

uint64_t sub_1001B08E0()
{
  return qword_1003B9DD8[*v0];
}

uint64_t sub_1001B08F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002496D8();
  *a1 = result;
  return result;
}

void sub_1001B0920(void *a1@<X8>)
{
  *a1 = qword_1003B9DD8[*v1];
}

_UNKNOWN **sub_1001B0938()
{
  return &off_10042B380;
}

void sub_1001B0944(void *a1@<X8>)
{
  *a1 = &off_10042B380;
}

uint64_t sub_1001B0958(char a1)
{
  return qword_1003B9E10[a1];
}

BOOL sub_1001B096C(char *a1, char *a2)
{
  return qword_1003B9E10[*a1] == qword_1003B9E10[*a2];
}

uint64_t sub_1001B0990(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD5AC();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_1001B09DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002497C4();
  *a1 = result;
  return result;
}

uint64_t sub_1001B0A04()
{
  return qword_1003B9E10[*v0];
}

uint64_t sub_1001B0A18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002497C4();
  *a1 = result;
  return result;
}

void sub_1001B0A44(void *a1@<X8>)
{
  *a1 = qword_1003B9E10[*v1];
}

_UNKNOWN **sub_1001B0A5C()
{
  return &off_10042B3A8;
}

void sub_1001B0A68(void *a1@<X8>)
{
  *a1 = &off_10042B3A8;
}

uint64_t sub_1001B0A78(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD558();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0AC4()
{
  return &off_10042B3D0;
}

void sub_1001B0AD0(void *a1@<X8>)
{
  *a1 = &off_10042B3F8;
}

uint64_t sub_1001B0AE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD504();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0B2C()
{
  return &off_10042B420;
}

void sub_1001B0B38(void *a1@<X8>)
{
  *a1 = &off_10042B420;
}

uint64_t sub_1001B0B48(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD4B0();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0B94()
{
  return &off_10042B448;
}

void sub_1001B0BA0(void *a1@<X8>)
{
  *a1 = &off_10042B448;
}

uint64_t sub_1001B0BB0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD45C();

  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_1001B0BFC@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100249938(a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001B0C24@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100249938(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001B0C50()
{
  return &off_10042B470;
}

void sub_1001B0C5C(void *a1@<X8>)
{
  *a1 = &off_10042B470;
}

uint64_t sub_1001B0C6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD408();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0CB8()
{
  return &off_10042B4A0;
}

void sub_1001B0CC4(void *a1@<X8>)
{
  *a1 = &off_10042B4A0;
}

uint64_t sub_1001B0CD4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD3B4();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0D20()
{
  return &off_10042B4C8;
}

void sub_1001B0D2C(void *a1@<X8>)
{
  *a1 = &off_10042B4C8;
}

uint64_t sub_1001B0D3C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD360();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0D88()
{
  return &off_10042B4F0;
}

void sub_1001B0D94(void *a1@<X8>)
{
  *a1 = &off_10042B4F0;
}

uint64_t sub_1001B0DA8(char a1)
{
  return qword_1003B9EA0[a1];
}

BOOL sub_1001B0DBC(char *a1, char *a2)
{
  return qword_1003B9EA0[*a1] == qword_1003B9EA0[*a2];
}

uint64_t sub_1001B0DE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD30C();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_1001B0E2C()
{
  return qword_1003B9EA0[*v0];
}

void sub_1001B0E40(void *a1@<X8>)
{
  *a1 = qword_1003B9EA0[*v1];
}

_UNKNOWN **sub_1001B0E58()
{
  return &off_10042B518;
}

void sub_1001B0E64(void *a1@<X8>)
{
  *a1 = &off_10042B540;
}

uint64_t sub_1001B0E74(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100261B64();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B0EC0()
{
  return &off_10042B568;
}

void sub_1001B0ECC(void *a1@<X8>)
{
  *a1 = &off_10042B568;
}

uint64_t sub_1001B0EDC(uint64_t a1)
{
  return sub_100249948(a1);
}

uint64_t sub_1001B0EF4(char a1)
{
  return qword_1003B9E50[a1];
}

BOOL sub_1001B0F08(char *a1, char *a2)
{
  return qword_1003B9E50[*a1] == qword_1003B9E50[*a2];
}

uint64_t sub_1001B0F2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD2B8();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_1001B0F78@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100249948(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001B0FA0()
{
  return qword_1003B9E50[*v0];
}

uint64_t sub_1001B0FB4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100249948(*a1);
  *a2 = result;
  return result;
}

void sub_1001B0FE0(void *a1@<X8>)
{
  *a1 = qword_1003B9E50[*v1];
}

_UNKNOWN **sub_1001B0FF8()
{
  return &off_10042B590;
}

void sub_1001B1004(void *a1@<X8>)
{
  *a1 = &off_10042B590;
}

uint64_t sub_1001B1014(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD264();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B1060()
{
  return &off_10042B5C0;
}

void sub_1001B106C(void *a1@<X8>)
{
  *a1 = &off_10042B5E8;
}

uint64_t sub_1001B107C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD210();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B10C8()
{
  return &off_10042B610;
}

void sub_1001B10D4(void *a1@<X8>)
{
  *a1 = &off_10042B610;
}

uint64_t sub_1001B10E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD1BC();

  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_1001B1130@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100249ADC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001B1158@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100249ADC(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_1001B1184()
{
  return &off_10042B640;
}

void sub_1001B1190(void *a1@<X8>)
{
  *a1 = &off_10042B668;
}

uint64_t sub_1001B11A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD168();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B11EC()
{
  return &off_10042B690;
}

void sub_1001B11F8(void *a1@<X8>)
{
  *a1 = &off_10042B6B8;
}

uint64_t sub_1001B1208(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD114();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B1254()
{
  return &off_10042B6E0;
}

void sub_1001B1260(void *a1@<X8>)
{
  *a1 = &off_10042B708;
}

uint64_t sub_1001B1270(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD0C0();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B12BC()
{
  return &off_10042B730;
}

void sub_1001B12C8(void *a1@<X8>)
{
  *a1 = &off_10042B730;
}

uint64_t sub_1001B12D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD06C();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B1324()
{
  return &off_10042B758;
}

void sub_1001B1330(void *a1@<X8>)
{
  *a1 = &off_10042B780;
}

uint64_t sub_1001B1340(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002AD018();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B138C()
{
  return &off_10042B7A8;
}

void sub_1001B1398(void *a1@<X8>)
{
  *a1 = &off_10042B7D0;
}

uint64_t sub_1001B13A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002ACFC4();

  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_1001B13F4()
{
  return &off_10042B7F8;
}

void sub_1001B1400(void *a1@<X8>)
{
  *a1 = &off_10042B7F8;
}

uint64_t sub_1001B1410()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001B1428(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t (*sub_1001B1440(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B149C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 20)) != 2;
}

uint64_t sub_1001B14C8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B14F0()
{
  return sub_1001B7AC8(type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001B1508(char a1)
{
  return sub_1001B7B10(a1, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t (*sub_1001B1520(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B157C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 24)) != 2;
}

uint64_t sub_1001B15A8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

double sub_1001B15D0()
{
  return sub_1001F1720(type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001B15E8(double a1)
{
  return sub_1001F1778(type metadata accessor for Proto_Gnss_Emergency_Configuration, a1);
}

uint64_t (*sub_1001B1600(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Configuration(0) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(unsigned char *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_10000288C;
}

BOOL sub_1001B166C()
{
  return sub_1001F183C(type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001B1684()
{
  return sub_1001F188C(type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

int *sub_1001B169C@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  *(unsigned char *)(a1 + result[5]) = 2;
  *(unsigned char *)(a1 + result[6]) = 2;
  uint64_t v3 = a1 + result[7];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  return result;
}

double sub_1001B16F0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 16);
  if (*(unsigned char *)(v1 + 24)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B174C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 16) = a1;
  *(unsigned char *)(v7 + 24) = 0;
  return result;
}

void (*sub_1001B17F0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 16);
  if (*(unsigned char *)(v5 + 24)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B1888;
}

void sub_1001B1888(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 16) = v4;
  *(unsigned char *)(v10 + 24) = 0;

  free((void *)v3);
}

BOOL sub_1001B1968()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 24) & 1) == 0;
}

uint64_t sub_1001B19BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 16) = 0;
  *(unsigned char *)(v5 + 24) = 1;
  return result;
}

double sub_1001B1A58()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 32);
  if (*(unsigned char *)(v1 + 40)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B1AB4(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 32) = a1;
  *(unsigned char *)(v7 + 40) = 0;
  return result;
}

void (*sub_1001B1B58(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 32);
  if (*(unsigned char *)(v5 + 40)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B1BF0;
}

void sub_1001B1BF0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 40) = 0;

  free((void *)v3);
}

BOOL sub_1001B1CD0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 40) & 1) == 0;
}

uint64_t sub_1001B1D24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 40) = 1;
  return result;
}

double sub_1001B1DC0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 48);
  if (*(unsigned char *)(v1 + 56)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B1E1C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 48) = a1;
  *(unsigned char *)(v7 + 56) = 0;
  return result;
}

void (*sub_1001B1EC0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 48);
  if (*(unsigned char *)(v5 + 56)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B1F58;
}

void sub_1001B1F58(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 48) = v4;
  *(unsigned char *)(v10 + 56) = 0;

  free((void *)v3);
}

BOOL sub_1001B2038()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 56) & 1) == 0;
}

uint64_t sub_1001B208C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 48) = 0;
  *(unsigned char *)(v5 + 56) = 1;
  return result;
}

double sub_1001B2128()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 64);
  if (*(unsigned char *)(v1 + 72)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B2184(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 64) = a1;
  *(unsigned char *)(v7 + 72) = 0;
  return result;
}

void (*sub_1001B2228(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 64);
  if (*(unsigned char *)(v5 + 72)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B22C0;
}

void sub_1001B22C0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 64) = v4;
  *(unsigned char *)(v10 + 72) = 0;

  free((void *)v3);
}

BOOL sub_1001B23A0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 72) & 1) == 0;
}

uint64_t sub_1001B23F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 64) = 0;
  *(unsigned char *)(v5 + 72) = 1;
  return result;
}

double sub_1001B2490()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 80);
  if (*(unsigned char *)(v1 + 88)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B24EC(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 80) = a1;
  *(unsigned char *)(v7 + 88) = 0;
  return result;
}

void (*sub_1001B2590(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 80);
  if (*(unsigned char *)(v5 + 88)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B2628;
}

void sub_1001B2628(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 80) = v4;
  *(unsigned char *)(v10 + 88) = 0;

  free((void *)v3);
}

BOOL sub_1001B2708()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 88) & 1) == 0;
}

uint64_t sub_1001B275C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 80) = 0;
  *(unsigned char *)(v5 + 88) = 1;
  return result;
}

double sub_1001B27F8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 96);
  if (*(unsigned char *)(v1 + 104)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B2854(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 96) = a1;
  *(unsigned char *)(v7 + 104) = 0;
  return result;
}

void (*sub_1001B28F8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 96);
  if (*(unsigned char *)(v5 + 104)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B2990;
}

void sub_1001B2990(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 96) = v4;
  *(unsigned char *)(v10 + 104) = 0;

  free((void *)v3);
}

BOOL sub_1001B2A70()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 104) & 1) == 0;
}

uint64_t sub_1001B2AC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 96) = 0;
  *(unsigned char *)(v5 + 104) = 1;
  return result;
}

uint64_t sub_1001B2B60()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 112)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 108);
  }
}

uint64_t sub_1001B2BB8(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 108) = a1;
  *(unsigned char *)(v7 + 112) = 0;
  return result;
}

void (*sub_1001B2C5C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 108);
  if (*(unsigned char *)(v5 + 112)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001B2CF0;
}

void sub_1001B2CF0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 108) = v4;
  *(unsigned char *)(v10 + 112) = 0;

  free((void *)v3);
}

BOOL sub_1001B2DD0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 112) & 1) == 0;
}

uint64_t sub_1001B2E24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 108) = 0;
  *(unsigned char *)(v5 + 112) = 1;
  return result;
}

uint64_t sub_1001B2EC0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 113) == 18) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 113);
  }
}

uint64_t sub_1001B2F14(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 113) = a1;
  return result;
}

void (*sub_1001B2FB4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 113);
  if (v6 == 18) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B3044;
}

void sub_1001B3044(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 113);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001B3124()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 113) != 18;
}

uint64_t sub_1001B3178()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 113) = 18;
  return result;
}

uint64_t sub_1001B3210()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 114) == 4) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 114);
  }
}

uint64_t sub_1001B3264(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 114) = a1;
  return result;
}

void (*sub_1001B3304(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 114);
  if (v6 == 4) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B3394;
}

void sub_1001B3394(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 114);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001B3474()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 114) != 4;
}

uint64_t sub_1001B34C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 114) = 4;
  return result;
}

uint64_t sub_1001B3560()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 115) == 7) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 115);
  }
}

uint64_t sub_1001B35B4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 115) = a1;
  return result;
}

void (*sub_1001B3654(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 115);
  if (v6 == 7) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B36E4;
}

void sub_1001B36E4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 115);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001B37C4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 115) != 7;
}

uint64_t sub_1001B3818()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 115) = 7;
  return result;
}

double sub_1001B38B0()
{
  return sub_1001BE544(type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t sub_1001B38C8(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 120) = a1;
  *(unsigned char *)(v7 + 128) = 0;
  return result;
}

void (*sub_1001B396C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 120);
  if (*(unsigned char *)(v5 + 128)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B3A04;
}

void sub_1001B3A04(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 120) = v4;
  *(unsigned char *)(v10 + 128) = 0;

  free((void *)v3);
}

BOOL sub_1001B3AE4()
{
  return sub_1001BE7EC(type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t sub_1001B3AFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 120) = 0;
  *(unsigned char *)(v5 + 128) = 1;
  return result;
}

double sub_1001B3B98()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 136);
  if (*(unsigned char *)(v1 + 144)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B3BF4(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 136) = a1;
  *(unsigned char *)(v7 + 144) = 0;
  return result;
}

void (*sub_1001B3C98(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 136);
  if (*(unsigned char *)(v5 + 144)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B3D30;
}

void sub_1001B3D30(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 136) = v4;
  *(unsigned char *)(v10 + 144) = 0;

  free((void *)v3);
}

BOOL sub_1001B3E10()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 144) & 1) == 0;
}

uint64_t sub_1001B3E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 136) = 0;
  *(unsigned char *)(v5 + 144) = 1;
  return result;
}

double sub_1001B3F00()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 152);
  if (*(unsigned char *)(v1 + 160)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001B3F5C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(double *)(v7 + 152) = a1;
  *(unsigned char *)(v7 + 160) = 0;
  return result;
}

void (*sub_1001B4000(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 152);
  if (*(unsigned char *)(v5 + 160)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001B4098;
}

void sub_1001B4098(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 152) = v4;
  *(unsigned char *)(v10 + 160) = 0;

  free((void *)v3);
}

BOOL sub_1001B4178()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 160) & 1) == 0;
}

uint64_t sub_1001B41CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 152) = 0;
  *(unsigned char *)(v5 + 160) = 1;
  return result;
}

uint64_t sub_1001B4268()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 161) == 8) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 161);
  }
}

uint64_t sub_1001B42BC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 161) = a1;
  return result;
}

void (*sub_1001B435C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 161);
  if (v6 == 8) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B43EC;
}

void sub_1001B43EC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 161);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001B44CC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 161) != 8;
}

uint64_t sub_1001B4520()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 161) = 8;
  return result;
}

uint64_t sub_1001B45B8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 162) == 17) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 162);
  }
}

uint64_t sub_1001B460C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 162) = a1;
  return result;
}

void (*sub_1001B46AC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 162);
  if (v6 == 17) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B473C;
}

void sub_1001B473C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 162);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001B481C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 162) != 17;
}

uint64_t sub_1001B4870()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 162) = 17;
  return result;
}

uint64_t sub_1001B4908()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 163) & 1;
}

uint64_t sub_1001B4958(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 163) = a1 & 1;
  return result;
}

void (*sub_1001B49FC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 163) & 1;
  return sub_1001B4A88;
}

void sub_1001B4A88(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(unsigned char *)(v10 + 163) = v4;

  free((void *)v3);
}

BOOL sub_1001B4B60()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 163) != 2;
}

uint64_t sub_1001B4BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 163) = 2;
  return result;
}

uint64_t sub_1001B4C4C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 164) & 1;
}

uint64_t sub_1001B4C9C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 164) = a1 & 1;
  return result;
}

void (*sub_1001B4D40(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 164) & 1;
  return sub_1001B4DCC;
}

void sub_1001B4DCC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(unsigned char *)(v10 + 164) = v4;

  free((void *)v3);
}

BOOL sub_1001B4EA4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 164) != 2;
}

uint64_t sub_1001B4EF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 164) = 2;
  return result;
}

uint64_t sub_1001B4F90()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 176)) {
    return 0;
  }
  else {
    return *(void *)(v1 + 168);
  }
}

uint64_t sub_1001B4FE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(void *)(v7 + 168) = a1;
  *(unsigned char *)(v7 + 176) = 0;
  return result;
}

void (*sub_1001B508C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 168);
  if (*(unsigned char *)(v5 + 176)) {
    uint64_t v6 = 0;
  }
  v3[9] = v6;
  return sub_1001B5120;
}

void sub_1001B5120(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 168) = v4;
  *(unsigned char *)(v10 + 176) = 0;

  free((void *)v3);
}

BOOL sub_1001B5200()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 176) & 1) == 0;
}

uint64_t sub_1001B5254()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(void *)(v5 + 168) = 0;
  *(unsigned char *)(v5 + 176) = 1;
  return result;
}

uint64_t sub_1001B52F0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 184)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 180);
  }
}

uint64_t sub_1001B5348(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_100249B64(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v7 + 180) = a1;
  *(unsigned char *)(v7 + 184) = 0;
  return result;
}

void (*sub_1001B53EC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 180);
  if (*(unsigned char *)(v5 + 184)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001B5480;
}

void sub_1001B5480(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_100249B64(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 180) = v4;
  *(unsigned char *)(v10 + 184) = 0;

  free((void *)v3);
}

BOOL sub_1001B5560()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 184) & 1) == 0;
}

uint64_t sub_1001B55B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_SummaryReport._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_100249B64(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v5 + 180) = 0;
  *(unsigned char *)(v5 + 184) = 1;
  return result;
}

uint64_t sub_1001B5650@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_SummaryReport, &qword_100480980, &qword_100480988, a1);
}

uint64_t sub_1001B5688()
{
  return sub_1000457A4(&qword_100480980);
}

uint64_t sub_1001B56AC()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B56C4(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t (*sub_1001B56DC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B5744()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B575C()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B5774()
{
  return sub_1001BB63C(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B578C(uint64_t a1, uint64_t a2)
{
  return sub_1001BB6B0(a1, a2, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t (*sub_1001B57A4(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000C4968;
}

BOOL sub_1001B5820()
{
  return sub_1001BB790(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B5838()
{
  return sub_1001BB7E0(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B5850()
{
  return sub_1001B7F54(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B5868(char a1)
{
  return sub_1001B7F9C(a1, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t (*sub_1001B5880(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B58DC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 28)) != 2;
}

uint64_t sub_1001B5908()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_1001B5930()
{
  return sub_1001F673C(type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t sub_1001B5948(char a1)
{
  return sub_1001F6784(a1, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
}

uint64_t (*sub_1001B5960(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 32);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B59BC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 32)) != 2;
}

uint64_t sub_1001B59E8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_1001B5A10()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 36)) & 1;
}

uint64_t sub_1001B5A38(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1001B5A68(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 36);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B5AC4()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 36)) != 2;
}

uint64_t sub_1001B5AF0()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_1001B5B18()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 40)) & 1;
}

uint64_t sub_1001B5B40(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_1001B5B70(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 40);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B5BCC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0) + 40)) != 2;
}

uint64_t sub_1001B5BF8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  *(unsigned char *)(v0 + *(int *)(result + 40)) = 2;
  return result;
}

int *sub_1001B5C20@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = (void *)(a1 + result[6]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(unsigned char *)(a1 + result[7]) = 2;
  *(unsigned char *)(a1 + result[8]) = 2;
  *(unsigned char *)(a1 + result[9]) = 2;
  *(unsigned char *)(a1 + result[10]) = 2;
  return result;
}

uint64_t sub_1001B5C90()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5CA8(uint64_t (*a1)(void))
{
  return *(unsigned char *)(v1 + *(int *)(a1(0) + 20)) & 1;
}

uint64_t sub_1001B5CD8(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5CF0(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001B5D24(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B5D80()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 20)) != 2;
}

uint64_t sub_1001B5DAC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B5DD4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5DEC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B5E04(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B5E6C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5E84()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5E9C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5EB4(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B5ECC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B5F34()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5F4C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5F64()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B5F7C(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B5F94(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B5FFC()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6014()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B602C()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6044(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B605C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B60C4()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B60DC()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B60F4()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B610C(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B6124(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B618C()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B61A4()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B61BC()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B61D4(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B61EC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6254()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B626C()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6284()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B629C(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B62B4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B631C()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6334()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B634C()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6364(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B637C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B63E4()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B63FC()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B6414()
{
  return sub_1001C84AC(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B642C(int a1)
{
  return sub_1001C8500(a1, type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t (*sub_1001B6444(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0) + 56);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B64AC()
{
  return sub_1001C85BC(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

uint64_t sub_1001B64C4()
{
  return sub_1001C860C(type metadata accessor for Proto_Gnss_Emergency_LteCellInfo);
}

int *sub_1001B64DC@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_LteCellInfo(0);
  *(unsigned char *)(a1 + result[5]) = 2;
  uint64_t v3 = a1 + result[6];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[7];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[8];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[9];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[10];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[11];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + result[12];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + result[13];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + result[14];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return result;
}

uint64_t sub_1001B65A8()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B65C0(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t (*sub_1001B65D8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B6634()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 20)) != 2;
}

uint64_t sub_1001B6660()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B6688()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B66A0(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 24));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B66DC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B66F4(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B6730(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6798()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

BOOL sub_1001B67B0(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 24) + 4) & 1) == 0;
}

uint64_t sub_1001B67E8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6800(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001B6838()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6850(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 28));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B688C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B68A4(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 28);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B68E0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6948()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

BOOL sub_1001B6960(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 28) + 4) & 1) == 0;
}

uint64_t sub_1001B6998()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B69B0(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 28);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001B69E8()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6A00(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 32));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B6A3C(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6A54(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 32);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B6A90(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6AF8()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

BOOL sub_1001B6B10(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 32) + 4) & 1) == 0;
}

uint64_t sub_1001B6B48()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6B60(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 32);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001B6B98()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6BB0(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 36));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B6BEC(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6C04(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B6C40(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6CA8()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

BOOL sub_1001B6CC0(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 36) + 4) & 1) == 0;
}

uint64_t sub_1001B6CF8()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo);
}

uint64_t sub_1001B6D10(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

int *sub_1001B6D48@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B886C(type metadata accessor for Proto_Gnss_Emergency_GsmCellInfo, a1);
}

uint64_t sub_1001B6D60()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6D78(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t (*sub_1001B6D90(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B6DEC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 20)) != 2;
}

uint64_t sub_1001B6E18()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B6E40()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6E58(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t (*sub_1001B6E70(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6ED8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6EF0()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6F08()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6F20(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t (*sub_1001B6F38(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B6FA0()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6FB8()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6FD0()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B6FE8(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t (*sub_1001B7000(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B7068()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7080()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7098()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B70B0(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t (*sub_1001B70C8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B7130()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7148()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7160()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7178(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 40));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B71B4(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B71CC(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B7208(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B7270()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

BOOL sub_1001B7288(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 40) + 4) & 1) == 0;
}

uint64_t sub_1001B72C0()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B72D8(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001B7310()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 44));
  if (v1 == 4) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001B733C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1001B736C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 44);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001B73CC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 44)) != 4;
}

uint64_t sub_1001B73F8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 44)) = 4;
  return result;
}

uint64_t sub_1001B7420()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7438(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 48));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B7474(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B748C(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 48);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B74C8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B7530()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

BOOL sub_1001B7548(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 48) + 4) & 1) == 0;
}

uint64_t sub_1001B7580()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo);
}

uint64_t sub_1001B7598(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 48);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

int *sub_1001B75D0@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_WcdmaCellInfo(0);
  *(unsigned char *)(a1 + result[5]) = 2;
  uint64_t v3 = a1 + result[6];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[7];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[8];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[9];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[10];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  *(unsigned char *)(a1 + result[11]) = 4;
  uint64_t v8 = a1 + result[12];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_1001B7678()
{
  return sub_1001EDB54(type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

uint64_t sub_1001B7690(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1001B76C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationId(0) + 32);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001B7720()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationId(0) + 32)) != 7;
}

uint64_t sub_1001B774C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  *(unsigned char *)(v0 + *(int *)(result + 32)) = 7;
  return result;
}

uint64_t sub_1001B7774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationId(0) + 28);
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001B77EC(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationId(0) + 28);
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*sub_1001B7864())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001B78AC@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  a1[2] = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0);
  uint64_t result = UnknownStorage.init()();
  *((unsigned char *)a1 + *(int *)(v2 + 32)) = 7;
  return result;
}

uint64_t sub_1001B7900()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_1001B7918(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 20));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001B7954(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_1001B796C(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001B79A8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B7A10()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

BOOL sub_1001B7A28(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 20) + 4) & 1) == 0;
}

uint64_t sub_1001B7A60()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_1001B7A78(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001B7AB0()
{
  return sub_1001B7AC8(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_1001B7AC8(uint64_t (*a1)(void))
{
  return *(unsigned char *)(v1 + *(int *)(a1(0) + 24)) & 1;
}

uint64_t sub_1001B7AF8(char a1)
{
  return sub_1001B7B10(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_1001B7B10(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1001B7B44(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B7BA0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0) + 24)) != 2;
}

uint64_t sub_1001B7BCC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B7BF4@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0);
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B7C40()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 20));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_100078984(*v1, v2);
  return v3;
}

uint64_t sub_1001B7C90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 20);
  uint64_t result = sub_100078998(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1001B7CD8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_100078984(v5, v6);
  return sub_1001B7D4C;
}

uint64_t sub_1001B7D4C(uint64_t a1, char a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16) + *(int *)(a1 + 24);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)v3;
  unint64_t v6 = *(void *)(v3 + 8);
  if (a2)
  {
    sub_10001E350(*(void *)a1, v2);
    sub_100078998(v5, v6);
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
    return sub_10001E3A8(v4, v2);
  }
  else
  {
    uint64_t result = sub_100078998(*(void *)v3, *(void *)(v3 + 8));
    *(void *)uint64_t v3 = v4;
    *(void *)(v3 + 8) = v2;
  }
  return result;
}

BOOL sub_1001B7DE8()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 20) + 8) >> 60 != 15;
}

double sub_1001B7E1C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 20);
  sub_100078998(*(void *)v1, *(void *)(v1 + 8));
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = xmmword_100397970;
  return result;
}

uint64_t sub_1001B7E5C()
{
  return sub_1001B7AC8(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B7E74(char a1)
{
  return sub_1001B7B10(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t (*sub_1001B7E8C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B7EE8()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 24)) != 2;
}

uint64_t sub_1001B7F14()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B7F3C()
{
  return sub_1001B7F54(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B7F54(uint64_t (*a1)(void))
{
  return *(unsigned char *)(v1 + *(int *)(a1(0) + 28)) & 1;
}

uint64_t sub_1001B7F84(char a1)
{
  return sub_1001B7F9C(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B7F9C(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1001B7FD0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B802C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 28)) != 2;
}

uint64_t sub_1001B8058()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
  *(unsigned char *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_1001B8080()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B8098(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t (*sub_1001B80B0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B8118()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B8130()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B8148()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B8160(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t (*sub_1001B8178(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B81E0()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

uint64_t sub_1001B81F8()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement);
}

double sub_1001B8210@<D0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementElement(0);
  double result = 0.0;
  *(_OWORD *)(a1 + v2[5]) = xmmword_100397970;
  *(unsigned char *)(a1 + v2[6]) = 2;
  *(unsigned char *)(a1 + v2[7]) = 2;
  uint64_t v4 = a1 + v2[8];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[9];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  return result;
}

uint64_t sub_1001B8284()
{
  return 0;
}

uint64_t sub_1001B8290()
{
  return sub_1001F0D70(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t sub_1001B82A8(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1001B82D8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001B8338()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0) + 24)) != 6;
}

uint64_t sub_1001B8364()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 6;
  return result;
}

uint64_t sub_1001B838C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList, a1);
}

uint64_t sub_1001B83A4(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t (*sub_1001B83BC())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001B8404@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0);
  uint64_t result = UnknownStorage.init()();
  *((unsigned char *)a1 + *(int *)(v2 + 24)) = 6;
  return result;
}

uint64_t sub_1001B8454()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B846C(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t (*sub_1001B8484(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B84E0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 20)) != 2;
}

uint64_t sub_1001B850C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B8534()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B854C(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t (*sub_1001B8564(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B85CC()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B85E4()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B85FC()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B8614(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t (*sub_1001B862C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B8694()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B86AC()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B86C4()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B86DC(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t (*sub_1001B86F4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B875C()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B8774()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B878C()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B87A4(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t (*sub_1001B87BC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_QoP(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001B8824()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B883C()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_QoP);
}

int *sub_1001B8854@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B886C(type metadata accessor for Proto_Gnss_Emergency_QoP, a1);
}

int *sub_1001B886C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)a1(0);
  *(unsigned char *)(a2 + result[5]) = 2;
  uint64_t v5 = a2 + result[6];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + result[7];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a2 + result[8];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a2 + result[9];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_1001B88F0()
{
  return sub_1001B7AC8(type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B8908(char a1)
{
  return sub_1001B7B10(a1, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t (*sub_1001B8920(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B897C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 24)) != 2;
}

uint64_t sub_1001B89A8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B89D0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 28));
  if (v1 == 5) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001B89FC(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1001B8A2C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001B8A8C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 28)) != 5;
}

uint64_t sub_1001B8AB8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  *(unsigned char *)(v0 + *(int *)(result + 28)) = 5;
  return result;
}

uint64_t sub_1001B8AE0()
{
  return sub_1001BB918(type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B8AF8(uint64_t a1, uint64_t a2)
{
  return sub_1001BB98C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t (*sub_1001B8B10(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000C4968;
}

BOOL sub_1001B8B8C()
{
  return sub_1001BBA6C(type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B8BA4()
{
  return sub_1001BBABC(type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B8BBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_SLPAddress, a1);
}

uint64_t sub_1001B8BD4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1001B8C54(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B8C6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_1001B8CE8())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001B8D30@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  uint64_t result = UnknownStorage.init()();
  *((unsigned char *)a1 + v2[6]) = 2;
  *((unsigned char *)a1 + v2[7]) = 5;
  uint64_t v4 = (void *)((char *)a1 + v2[8]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t sub_1001B8D98()
{
  return sub_1001B5CA8(type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t sub_1001B8DB0(char a1)
{
  return sub_1001B5CF0(a1, type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t (*sub_1001B8DC8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B8E24()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 20)) != 2;
}

uint64_t sub_1001B8E50()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1001B8E78()
{
  return sub_1001B7AC8(type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t sub_1001B8E90(char a1)
{
  return sub_1001B7B10(a1, type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t (*sub_1001B8EA8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001B8F04()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Notification(0) + 24)) != 2;
}

uint64_t sub_1001B8F30()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B8F58@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  *(unsigned char *)(a1 + *(int *)(result + 20)) = 2;
  *(unsigned char *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_1001B8F98@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445540);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  sub_100011480(v1 + *(int *)(inited + 20), (uint64_t)v5, &qword_100445540);
  unint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  *((unsigned char *)a1 + v7[6]) = 2;
  *((unsigned char *)a1 + v7[7]) = 5;
  uint64_t v8 = (void *)((char *)a1 + v7[8]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  return sub_10001ACB8((uint64_t)v5, &qword_100445540);
}

uint64_t sub_1001B90E4(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, &qword_100445540, type metadata accessor for Proto_Gnss_Emergency_SLPAddress, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

void (*sub_1001B912C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445540);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445540);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    void *v10 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    *((unsigned char *)v10 + v6[6]) = 2;
    *((unsigned char *)v10 + v6[7]) = 5;
    uint64_t v12 = (void *)((char *)v10 + v6[8]);
    void *v12 = 0;
    v12[1] = 0;
    sub_10001ACB8((uint64_t)v5, &qword_100445540);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  }
  return sub_1001B92EC;
}

void sub_1001B92EC(uint64_t a1, char a2)
{
}

BOOL sub_1001B9320()
{
  return sub_1001C06D4(&qword_100445540, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B9354()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension, &qword_100445540, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

uint64_t sub_1001B9388()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 24));
  if (v1 == 4) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001B93B4(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1001B93E4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001B9444()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0) + 24)) != 4;
}

uint64_t sub_1001B9470()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 4;
  return result;
}

uint64_t sub_1001B9498@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  uint64_t v3 = a1 + *(int *)(inited + 20);
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(unsigned char *)(a1 + *(int *)(inited + 24)) = 4;
  return result;
}

uint64_t sub_1001B9524@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_SLPAddress, a1);
}

uint64_t sub_1001B953C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 18) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 16);
  }
}

uint64_t sub_1001B9590(char a1)
{
  return sub_1001DD910(a1, type metadata accessor for Proto_Gnss_Emergency_Init, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass, (void (*)(uint64_t))sub_100207600);
}

void (*sub_1001B95D0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 18) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001B9660;
}

void sub_1001B9660(uint64_t *a1, char a2)
{
}

BOOL sub_1001B968C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 16) != 18;
}

uint64_t sub_1001B96E0()
{
  return sub_1001DDC14(type metadata accessor for Proto_Gnss_Emergency_Init, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass, (void (*)(uint64_t))sub_100207600, 18);
}

uint64_t sub_1001B9724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445548);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445548);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_QoP);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + v7[5]) = 2;
  uint64_t v8 = a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[9];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445548);
}

uint64_t sub_1001B98B4(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445548);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100207600(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_QoP);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445548);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445548);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001B9A74(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445548);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445548);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    uint64_t v11 = &v9[v6[6]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[7]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[9]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445548);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_QoP);
  }
  return sub_1001B9C68;
}

void sub_1001B9C68(uint64_t a1, char a2)
{
}

BOOL sub_1001B9C94()
{
  return sub_1001BA454(&qword_100445548, type metadata accessor for Proto_Gnss_Emergency_Init, &OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop, type metadata accessor for Proto_Gnss_Emergency_QoP);
}

uint64_t sub_1001B9CD0()
{
  uint64_t v1 = sub_100002ED4(&qword_100445548);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100207600(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_QoP(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__qop;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445548);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001B9E30@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445540);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445540);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  *((unsigned char *)a1 + v7[6]) = 2;
  *((unsigned char *)a1 + v7[7]) = 5;
  uint64_t v8 = (void *)((char *)a1 + v7[8]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  return sub_10001ACB8((uint64_t)v5, &qword_100445540);
}

uint64_t sub_1001B9FA4(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445540);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100207600(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445540);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445540);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001BA164(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445540);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445540);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    *((unsigned char *)v9 + v6[6]) = 2;
    *((unsigned char *)v9 + v6[7]) = 5;
    uint64_t v11 = (void *)((char *)v9 + v6[8]);
    void *v11 = 0;
    v11[1] = 0;
    sub_10001ACB8((uint64_t)v5, &qword_100445540);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
  }
  return sub_1001BA33C;
}

void sub_1001BA33C(uint64_t a1, char a2)
{
}

void sub_1001BA368(uint64_t a1, char a2, void (*a3)(void *), uint64_t (*a4)(void))
{
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)(*(void *)a1 + 40);
  uint64_t v7 = *(void **)(*(void *)a1 + 48);
  size_t v8 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    sub_10024A2E4(*(void *)(*(void *)a1 + 48), (uint64_t)v6, a4);
    a3(v6);
    sub_10024A34C((uint64_t)v7, a4);
  }
  else
  {
    a3(*(void **)(*(void *)a1 + 48));
  }
  free(v7);
  free(v6);
  free(v8);

  free(v5);
}

BOOL sub_1001BA418()
{
  return sub_1001BA454(&qword_100445540, type metadata accessor for Proto_Gnss_Emergency_Init, &OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
}

BOOL sub_1001BA454(uint64_t *a1, uint64_t (*a2)(void), void *a3, uint64_t (*a4)(void))
{
  uint64_t v9 = sub_100002ED4(a1);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v4 + *(int *)(a2(0) + 20)) + *a3;
  swift_beginAccess();
  sub_100011480(v12, (uint64_t)v11, a1);
  uint64_t v13 = a4(0);
  BOOL v14 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13) != 1;
  sub_10001ACB8((uint64_t)v11, a1);
  return v14;
}

uint64_t sub_1001BA570()
{
  uint64_t v1 = sub_100002ED4(&qword_100445540);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100207600(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__slpAddress;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445540);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001BA6D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445550);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445550);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Notification);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 2;
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = 2;
  return sub_10001ACB8((uint64_t)v5, &qword_100445550);
}

uint64_t sub_1001BA824(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445550);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100207600(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Notification);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445550);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445550);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001BA9E4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445550);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445550);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    v9[*(int *)(v6 + 24)] = 2;
    sub_10001ACB8((uint64_t)v5, &qword_100445550);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Notification);
  }
  return sub_1001BAB9C;
}

void sub_1001BAB9C(uint64_t a1, char a2)
{
}

BOOL sub_1001BABC8()
{
  return sub_1001BA454(&qword_100445550, type metadata accessor for Proto_Gnss_Emergency_Init, &OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification, type metadata accessor for Proto_Gnss_Emergency_Notification);
}

uint64_t sub_1001BAC04()
{
  uint64_t v1 = sub_100002ED4(&qword_100445550);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100207600(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_Notification(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__notification;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445550);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001BAD64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445558);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445558);
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(inited - 8) + 48))(v5, 1, inited) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(inited + 20);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(unsigned char *)(a1 + *(int *)(inited + 24)) = 4;
  return sub_10001ACB8((uint64_t)v5, &qword_100445558);
}

uint64_t sub_1001BAEF8(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445558);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100207600(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(inited - 8) + 56))(v8, 0, 1, inited);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445558);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445558);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001BB0B8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445558);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  uint64_t v7 = *(void *)(inited - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445558);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, inited) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(inited + 20)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_SLPAddress(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v9[*(int *)(inited + 24)] = 4;
    sub_10001ACB8((uint64_t)v5, &qword_100445558);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
  }
  return sub_1001BB2B0;
}

void sub_1001BB2B0(uint64_t a1, char a2)
{
}

BOOL sub_1001BB2DC()
{
  return sub_1001BA454(&qword_100445558, type metadata accessor for Proto_Gnss_Emergency_Init, &OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension, type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
}

uint64_t sub_1001BB318()
{
  uint64_t v1 = sub_100002ED4(&qword_100445558);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Init(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100207600(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t inited = type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(inited - 8) + 56))(v3, 1, 1, inited);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf25Proto_Gnss_Emergency_InitP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__suplInitv2Extension;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445558);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001BB478@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_Init, &qword_1004809F8, &qword_100480A00, a1);
}

uint64_t sub_1001BB4B0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(a1(0) + 20);
  if (*a2 != -1) {
    swift_once();
  }
  *(void *)(a4 + v8) = *a3;

  return swift_retain();
}

uint64_t sub_1001BB538()
{
  return sub_1000457A4(&qword_1004809F8);
}

uint64_t sub_1001BB55C()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB574(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t (*sub_1001BB58C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001BB5F4()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB60C()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB624()
{
  return sub_1001BB63C(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB63C(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 24));
  if (v2[1]) {
    uint64_t v3 = *v2;
  }
  else {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1001BB698(uint64_t a1, uint64_t a2)
{
  return sub_1001BB6B0(a1, a2, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB6B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1001BB6FC(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000C4968;
}

BOOL sub_1001BB778()
{
  return sub_1001BB790(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

BOOL sub_1001BB790(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 24) + 8) != 0;
}

uint64_t sub_1001BB7C8()
{
  return sub_1001BB7E0(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB7E0(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1001BB820()
{
  return sub_1001B7F54(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB838(char a1)
{
  return sub_1001B7F9C(a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t (*sub_1001BB850(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 28);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001BB8AC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 28)) != 2;
}

uint64_t sub_1001BB8D8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  *(unsigned char *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_1001BB900()
{
  return sub_1001BB918(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB918(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 32));
  if (v2[1]) {
    uint64_t v3 = *v2;
  }
  else {
    uint64_t v3 = 0;
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1001BB974(uint64_t a1, uint64_t a2)
{
  return sub_1001BB98C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BB98C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1001BB9D8(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000C4968;
}

BOOL sub_1001BBA54()
{
  return sub_1001BBA6C(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

BOOL sub_1001BBA6C(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0) + 32) + 8) != 0;
}

uint64_t sub_1001BBAA4()
{
  return sub_1001BBABC(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BBABC(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1001BBAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445560);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  sub_100011480(v1 + *(int *)(v6 + 36), (uint64_t)v5, &qword_100445560);
  unint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + v7[5]) = 2;
  *(unsigned char *)(a1 + v7[6]) = 2;
  uint64_t v8 = a1 + v7[7];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445560);
}

uint64_t sub_1001BBC3C(uint64_t a1)
{
  return sub_1001C7B2C(a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext, &qword_100445560, type metadata accessor for Proto_Gnss_Emergency_Configuration, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

void (*sub_1001BBC84(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445560);
  unint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445560);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v10[v6[5]] = 2;
    v10[v6[6]] = 2;
    uint64_t v12 = &v10[v6[7]];
    *(void *)uint64_t v12 = 0;
    v12[8] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445560);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_Configuration);
  }
  return sub_1001BBE38;
}

void sub_1001BBE38(uint64_t a1, char a2)
{
}

BOOL sub_1001BBE6C()
{
  return sub_1001C7DDC(&qword_100445560, type metadata accessor for Proto_Gnss_Emergency_SuplContext, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001BBEA0()
{
  return sub_1001C7F04(type metadata accessor for Proto_Gnss_Emergency_SuplContext, &qword_100445560, type metadata accessor for Proto_Gnss_Emergency_Configuration);
}

uint64_t sub_1001BBED4()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40));
  if (v1[1]) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1001BBF28(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1001BBF70(uint64_t a1))()
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1000C4968;
}

BOOL sub_1001BBFEC()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40) + 8) != 0;
}

uint64_t sub_1001BC01C()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = 0;
  v1[1] = 0;
  return result;
}

uint64_t sub_1001BC054()
{
  return sub_1001F29F8(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BC06C(char a1)
{
  return sub_1001F2A40(a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t (*sub_1001BC084(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 44);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001BC0E0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 44)) != 2;
}

uint64_t sub_1001BC10C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  *(unsigned char *)(v0 + *(int *)(result + 44)) = 2;
  return result;
}

uint64_t sub_1001BC134()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 48)) & 1;
}

uint64_t sub_1001BC15C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_1001BC18C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 48);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001BC1E8()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 48)) != 2;
}

uint64_t sub_1001BC214()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  *(unsigned char *)(v0 + *(int *)(result + 48)) = 2;
  return result;
}

uint64_t sub_1001BC23C()
{
  return sub_1001F317C(type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1001BC254(char a1)
{
  return sub_1001F31C4(a1, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t (*sub_1001BC26C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 52);
  *(_DWORD *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(v1 + v3) & 1;
  return sub_100003BB0;
}

BOOL sub_1001BC2C8()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SuplContext(0) + 52)) != 2;
}

uint64_t sub_1001BC2F4()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  *(unsigned char *)(v0 + *(int *)(result + 52)) = 2;
  return result;
}

uint64_t sub_1001BC31C@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplContext(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = (void *)(a1 + v2[6]);
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(unsigned char *)(a1 + v2[7]) = 2;
  unint64_t v5 = (void *)(a1 + v2[8]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = a1 + v2[9];
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  size_t v9 = (void *)(a1 + v2[10]);
  *size_t v9 = 0;
  v9[1] = 0;
  *(unsigned char *)(a1 + v2[11]) = 2;
  *(unsigned char *)(a1 + v2[12]) = 2;
  *(unsigned char *)(a1 + v2[13]) = 2;
  return result;
}

uint64_t sub_1001BC3F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_Configuration, a1);
}

uint64_t sub_1001BC410@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t sub_1001BC484()
{
  return sub_1001C1290(type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t sub_1001BC49C(int a1)
{
  return sub_1001D7F14(a1, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass, (void (*)(uint64_t))sub_10020AE44);
}

void (*sub_1001BC4DC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 16);
  if (*(unsigned char *)(v5 + 20)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001BC570;
}

void sub_1001BC570(uint64_t *a1, char a2)
{
}

BOOL sub_1001BC59C()
{
  return sub_1001C1410(type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t sub_1001BC5B4()
{
  return sub_1001D81E0(type metadata accessor for Proto_Gnss_Emergency_SessionStatus, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass, (void (*)(uint64_t))sub_10020AE44);
}

uint64_t sub_1001BC5F4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 21) == 18) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 21);
  }
}

uint64_t sub_1001BC648(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 21) = a1;
  return result;
}

void (*sub_1001BC6F0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 21);
  if (v6 == 18) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001BC780;
}

void sub_1001BC780(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 21);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001BC868()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 21) != 18;
}

uint64_t sub_1001BC8BC()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 21) = 18;
  return result;
}

uint64_t sub_1001BC95C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 22) == 33) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 22);
  }
}

uint64_t sub_1001BC9B0(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 22) = a1;
  return result;
}

void (*sub_1001BCA58(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 22);
  if (v6 == 33) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001BCAE8;
}

void sub_1001BCAE8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 22);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001BCBD0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 22) != 33;
}

uint64_t sub_1001BCC24()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 22) = 33;
  return result;
}

uint64_t sub_1001BCCC4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 23) == 24) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

uint64_t sub_1001BCD18(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 23) = a1;
  return result;
}

void (*sub_1001BCDC0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 23);
  if (v6 == 24) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001BCE50;
}

void sub_1001BCE50(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 23);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001BCF38()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 23) != 24;
}

uint64_t sub_1001BCF8C()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 23) = 24;
  return result;
}

double sub_1001BD02C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 24);
  if (*(unsigned char *)(v1 + 32)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BD088(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 32) = 0;
  return result;
}

void (*sub_1001BD134(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 24);
  if (*(unsigned char *)(v5 + 32)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BD1CC;
}

void sub_1001BD1CC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 24) = v4;
  *(unsigned char *)(v10 + 32) = 0;

  free((void *)v3);
}

BOOL sub_1001BD2B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 32) & 1) == 0;
}

uint64_t sub_1001BD308()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 32) = 1;
  return result;
}

double sub_1001BD3AC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 40);
  if (*(unsigned char *)(v1 + 48)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BD408(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 40) = a1;
  *(unsigned char *)(v6 + 48) = 0;
  return result;
}

void (*sub_1001BD4B4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 40);
  if (*(unsigned char *)(v5 + 48)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BD54C;
}

void sub_1001BD54C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 40) = v4;
  *(unsigned char *)(v10 + 48) = 0;

  free((void *)v3);
}

BOOL sub_1001BD634()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 48) & 1) == 0;
}

uint64_t sub_1001BD688()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 48) = 1;
  return result;
}

double sub_1001BD72C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 56);
  if (*(unsigned char *)(v1 + 64)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BD788(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 56) = a1;
  *(unsigned char *)(v6 + 64) = 0;
  return result;
}

void (*sub_1001BD834(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 56);
  if (*(unsigned char *)(v5 + 64)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BD8CC;
}

void sub_1001BD8CC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 56) = v4;
  *(unsigned char *)(v10 + 64) = 0;

  free((void *)v3);
}

BOOL sub_1001BD9B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 64) & 1) == 0;
}

uint64_t sub_1001BDA08()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 56) = 0;
  *(unsigned char *)(v4 + 64) = 1;
  return result;
}

double sub_1001BDAAC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 72);
  if (*(unsigned char *)(v1 + 80)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BDB08(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 72) = a1;
  *(unsigned char *)(v6 + 80) = 0;
  return result;
}

void (*sub_1001BDBB4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 72);
  if (*(unsigned char *)(v5 + 80)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BDC4C;
}

void sub_1001BDC4C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 72) = v4;
  *(unsigned char *)(v10 + 80) = 0;

  free((void *)v3);
}

BOOL sub_1001BDD34()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 80) & 1) == 0;
}

uint64_t sub_1001BDD88()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 72) = 0;
  *(unsigned char *)(v4 + 80) = 1;
  return result;
}

double sub_1001BDE2C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 88);
  if (*(unsigned char *)(v1 + 96)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BDE88(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 88) = a1;
  *(unsigned char *)(v6 + 96) = 0;
  return result;
}

void (*sub_1001BDF34(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 88);
  if (*(unsigned char *)(v5 + 96)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BDFCC;
}

void sub_1001BDFCC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 88) = v4;
  *(unsigned char *)(v10 + 96) = 0;

  free((void *)v3);
}

BOOL sub_1001BE0B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 96) & 1) == 0;
}

uint64_t sub_1001BE108()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 88) = 0;
  *(unsigned char *)(v4 + 96) = 1;
  return result;
}

double sub_1001BE1AC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v1 + 104);
  if (*(unsigned char *)(v1 + 112)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BE208(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 104) = a1;
  *(unsigned char *)(v6 + 112) = 0;
  return result;
}

void (*sub_1001BE2B4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 104);
  if (*(unsigned char *)(v5 + 112)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BE34C;
}

void sub_1001BE34C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 104) = v4;
  *(unsigned char *)(v10 + 112) = 0;

  free((void *)v3);
}

BOOL sub_1001BE434()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 112) & 1) == 0;
}

uint64_t sub_1001BE488()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 104) = 0;
  *(unsigned char *)(v4 + 112) = 1;
  return result;
}

double sub_1001BE52C()
{
  return sub_1001BE544(type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

double sub_1001BE544(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  double result = *(double *)(v2 + 120);
  if (*(unsigned char *)(v2 + 128)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1001BE5A8(double a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(double *)(v6 + 120) = a1;
  *(unsigned char *)(v6 + 128) = 0;
  return result;
}

void (*sub_1001BE654(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  double v6 = *(double *)(v5 + 120);
  if (*(unsigned char *)(v5 + 128)) {
    double v6 = 0.0;
  }
  *((double *)v3 + 9) = v6;
  return sub_1001BE6EC;
}

void sub_1001BE6EC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 88);
    uint64_t v7 = *(void *)(v3 + 80);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 80) + *(int *)(v3 + 88));
  swift_beginAccess();
  *(void *)(v10 + 120) = v4;
  *(unsigned char *)(v10 + 128) = 0;

  free((void *)v3);
}

BOOL sub_1001BE7D4()
{
  return sub_1001BE7EC(type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

BOOL sub_1001BE7EC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 128) & 1) == 0;
}

uint64_t sub_1001BE848()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 120) = 0;
  *(unsigned char *)(v4 + 128) = 1;
  return result;
}

uint64_t sub_1001BE8EC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 129) & 1;
}

uint64_t sub_1001BE93C(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 129) = a1 & 1;
  return result;
}

void (*sub_1001BE9E8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 129) & 1;
  return sub_1001BEA74;
}

void sub_1001BEA74(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(unsigned char *)(v10 + 129) = v4;

  free((void *)v3);
}

BOOL sub_1001BEB54()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 129) != 2;
}

uint64_t sub_1001BEBA8()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 129) = 2;
  return result;
}

uint64_t sub_1001BEC48()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 130) & 1;
}

uint64_t sub_1001BEC98(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 130) = a1 & 1;
  return result;
}

void (*sub_1001BED44(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 130) & 1;
  return sub_1001BEDD0;
}

void sub_1001BEDD0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(unsigned char *)(v10 + 130) = v4;

  free((void *)v3);
}

BOOL sub_1001BEEB0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 130) != 2;
}

uint64_t sub_1001BEF04()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 130) = 2;
  return result;
}

uint64_t sub_1001BEFA4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 131) & 1;
}

uint64_t sub_1001BEFF4(char a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10020AE44(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v6 + 131) = a1 & 1;
  return result;
}

void (*sub_1001BF0A0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *(unsigned char *)(v5 + 131) & 1;
  return sub_1001BF12C;
}

void sub_1001BF12C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10020AE44(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80));
  swift_beginAccess();
  *(unsigned char *)(v10 + 131) = v4;

  free((void *)v3);
}

BOOL sub_1001BF20C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 131) != 2;
}

uint64_t sub_1001BF260()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10020AE44(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v4 + 131) = 2;
  return result;
}

uint64_t sub_1001BF300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445568);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445568);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 8) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  uint64_t v11 = a1 + v7[8];
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[9];
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[10];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  uint64_t v14 = a1 + v7[11];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445568);
}

int *sub_1001BF4B4@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  uint64_t v6 = a1 + result[8];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  uint64_t v7 = a1 + result[9];
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + result[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return result;
}

uint64_t sub_1001BF554(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445568);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_10020AE44(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445568);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445568);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001BF714(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445568);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445568);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0;
    v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0;
    v13[8] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(void *)uint64_t v14 = 0;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[9]];
    *(void *)uint64_t v15 = 0;
    v15[8] = 1;
    uint64_t v16 = &v9[v6[10]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    char v17 = &v9[v6[11]];
    *(_DWORD *)char v17 = 0;
    v17[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445568);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  }
  return sub_1001BF92C;
}

void sub_1001BF92C(uint64_t a1, char a2)
{
}

BOOL sub_1001BF958()
{
  return sub_1001BA454(&qword_100445568, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, &OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
}

uint64_t sub_1001BF994()
{
  uint64_t v1 = sub_100002ED4(&qword_100445568);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_10020AE44(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefLocation;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445568);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001BFAF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445570);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445570);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445570);
}

int *sub_1001BFC68@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 8) = 1;
  return result;
}

uint64_t sub_1001BFCC8(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445570);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_10020AE44(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445570);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445570);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001BFE88(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445570);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445570);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0;
    v13[8] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445570);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
  }
  return sub_1001C0060;
}

void sub_1001C0060(uint64_t a1, char a2)
{
}

BOOL sub_1001C008C()
{
  return sub_1001BA454(&qword_100445570, type metadata accessor for Proto_Gnss_Emergency_SessionStatus, &OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
}

uint64_t sub_1001C00C8()
{
  uint64_t v1 = sub_100002ED4(&qword_100445570);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_10020AE44(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf34Proto_Gnss_Emergency_SessionStatusP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__nwRefTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445570);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001C0228@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_SessionStatus, &qword_100480A18, &qword_100480A20, a1);
}

uint64_t sub_1001C0260()
{
  return sub_1000457A4(&qword_100480A18);
}

uint64_t sub_1001C0284()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C029C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t (*sub_1001C02B4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C031C()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C0334()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C034C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C0364(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t (*sub_1001C037C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C03E4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C03FC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C0414@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a1);
}

uint64_t sub_1001C042C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a1);
}

uint64_t sub_1001C0474(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, &qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

void (*sub_1001C04BC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445578);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445578);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445578);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  }
  return sub_1001C066C;
}

void sub_1001C066C(uint64_t a1, char a2)
{
}

BOOL sub_1001C06A0()
{
  return sub_1001C06D4(&qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

BOOL sub_1001C06D4(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 20), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001C07C8()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, &qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C07FC(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C089C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C08B4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t (*sub_1001C08CC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C0934()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C094C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0964()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C097C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t (*sub_1001C0994(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C09FC()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0A14()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0A2C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0A44(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t (*sub_1001C0A5C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C0AC4()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0ADC()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C0AF4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 36));
  if (v1 == 5) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001C0B20(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1001C0B50(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 36);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001C0BB0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0) + 36)) != 5;
}

uint64_t sub_1001C0BDC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  *(unsigned char *)(v0 + *(int *)(result + 36)) = 5;
  return result;
}

uint64_t sub_1001C0C04@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + v2[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + v2[8];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  *(unsigned char *)(a1 + v2[9]) = 5;
  return result;
}

uint64_t sub_1001C0CC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a1);
}

uint64_t sub_1001C0CDC()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0CF4(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t (*sub_1001C0D0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Plmn(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C0D74()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0D8C()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0DA4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0DBC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t (*sub_1001C0DD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Plmn(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C0E3C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0E54()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0E6C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0E84(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t (*sub_1001C0E9C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Plmn(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C0F04()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C0F1C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

int *sub_1001C0F34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C546C(type metadata accessor for Proto_Gnss_Emergency_Plmn, a1);
}

uint64_t sub_1001C0F4C()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001C0F64(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001C0F94(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001C0FF4()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 20)) != 6;
}

uint64_t sub_1001C1020()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001C1048()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 24));
  if (v1 == 7) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001C1074(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1001C10A4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 24);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001C1104()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 24)) != 7;
}

uint64_t sub_1001C1130()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 24)) = 7;
  return result;
}

uint64_t sub_1001C1158()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001C1170(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t (*sub_1001C1188(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C11F0()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001C1208()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

int *sub_1001C1220@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  *(unsigned char *)(a1 + result[5]) = 6;
  *(unsigned char *)(a1 + result[6]) = 7;
  uint64_t v3 = a1 + result[7];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001C1278()
{
  return sub_1001C1290(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1290(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 20)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 16);
  }
}

uint64_t sub_1001C12F0(int a1)
{
  return sub_1001E5578(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C1334(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 16);
  if (*(unsigned char *)(v5 + 20)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C13C8;
}

void sub_1001C13C8(uint64_t *a1, char a2)
{
}

BOOL sub_1001C13F8()
{
  return sub_1001C1410(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

BOOL sub_1001C1410(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 20) & 1) == 0;
}

uint64_t sub_1001C146C()
{
  return sub_1001E5854(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C14B0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 21) == 5) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 21);
  }
}

uint64_t sub_1001C1504(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_10024A510(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 21) = a1;
  return result;
}

void (*sub_1001C15A4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 21);
  if (v6 == 5) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001C1634;
}

void sub_1001C1634(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_10024A510(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 21);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001C1714()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 21) != 5;
}

uint64_t sub_1001C1768()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_10024A510(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 21) = 5;
  return result;
}

uint64_t sub_1001C1800()
{
  return sub_1001D82BC(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1818(int a1)
{
  return sub_1001E5970(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C185C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 24);
  if (*(unsigned char *)(v5 + 28)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C18F0;
}

void sub_1001C18F0(uint64_t *a1, char a2)
{
}

BOOL sub_1001C1920()
{
  return sub_1001D855C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1938()
{
  return sub_1001E5C4C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C197C()
{
  return sub_1001D8674(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1994(int a1)
{
  return sub_1001E5D68(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C19D8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 32);
  if (*(unsigned char *)(v5 + 36)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C1A6C;
}

void sub_1001C1A6C(uint64_t *a1, char a2)
{
}

BOOL sub_1001C1A9C()
{
  return sub_1001D8914(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1AB4()
{
  return sub_1001E6044(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C1AF8()
{
  return sub_1001D8A2C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1B10(int a1)
{
  return sub_1001E6160(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C1B54(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 40);
  if (*(unsigned char *)(v5 + 44)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C1BE8;
}

void sub_1001C1BE8(uint64_t *a1, char a2)
{
}

BOOL sub_1001C1C18()
{
  return sub_1001D8CCC(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1C30()
{
  return sub_1001E643C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C1C74()
{
  return sub_1001E6514(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1C8C(int a1)
{
  return sub_1001E65B8(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C1CD0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 48);
  if (*(unsigned char *)(v5 + 52)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C1D64;
}

void sub_1001C1D64(uint64_t *a1, char a2)
{
}

BOOL sub_1001C1D94()
{
  return sub_1001E6850(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1DAC()
{
  return sub_1001E68F0(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C1DF0()
{
  return sub_1001E69C8(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1E08(int a1)
{
  return sub_1001E6A6C(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C1E4C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 56);
  if (*(unsigned char *)(v5 + 60)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C1EE0;
}

void sub_1001C1EE0(uint64_t *a1, char a2)
{
}

BOOL sub_1001C1F10()
{
  return sub_1001E6D04(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1F28()
{
  return sub_1001E6DA4(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C1F6C()
{
  return sub_1001E6E7C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C1F84(int a1)
{
  return sub_1001E6F20(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C1FC8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 64);
  if (*(unsigned char *)(v5 + 68)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C205C;
}

void sub_1001C205C(uint64_t *a1, char a2)
{
}

BOOL sub_1001C208C()
{
  return sub_1001E71B8(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C20A4()
{
  return sub_1001E7258(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C20E8()
{
  return sub_1001E7330(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2100(int a1)
{
  return sub_1001E73D4(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C2144(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 72);
  if (*(unsigned char *)(v5 + 76)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C21D8;
}

void sub_1001C21D8(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2208()
{
  return sub_1001E766C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2220()
{
  return sub_1001E770C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C2264()
{
  return sub_1001E77E4(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C227C(int a1)
{
  return sub_1001E7888(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C22C0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 80);
  if (*(unsigned char *)(v5 + 84)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C2354;
}

void sub_1001C2354(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2384()
{
  return sub_1001E7B20(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C239C()
{
  return sub_1001E7BC0(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C23E0()
{
  return sub_1001E7C98(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C23F8(int a1)
{
  return sub_1001E7D3C(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C243C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 88);
  if (*(unsigned char *)(v5 + 92)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C24D0;
}

void sub_1001C24D0(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2500()
{
  return sub_1001E7FD4(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2518()
{
  return sub_1001E8074(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C255C()
{
  return sub_1001E814C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2574(int a1)
{
  return sub_1001E81F0(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C25B8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 96);
  if (*(unsigned char *)(v5 + 100)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C264C;
}

void sub_1001C264C(uint64_t *a1, char a2)
{
}

BOOL sub_1001C267C()
{
  return sub_1001E8488(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2694()
{
  return sub_1001E8528(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C26D8()
{
  return sub_1001E8600(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C26F0(int a1)
{
  return sub_1001E86A4(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C2734(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 104);
  if (*(unsigned char *)(v5 + 108)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C27C8;
}

void sub_1001C27C8(uint64_t *a1, char a2)
{
}

BOOL sub_1001C27F8()
{
  return sub_1001E893C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2810()
{
  return sub_1001E89DC(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C2854()
{
  return sub_1001E8AB4(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C286C(int a1)
{
  return sub_1001E8B58(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C28B0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 112);
  if (*(unsigned char *)(v5 + 116)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C2944;
}

void sub_1001C2944(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2974()
{
  return sub_1001E8DF0(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C298C()
{
  return sub_1001E8E90(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C29D0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 117) == 7) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 117);
  }
}

uint64_t sub_1001C2A24(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v6 = swift_allocObject();
    sub_10024A510(v5);
    *(void *)(v2 + v4) = v6;
    swift_release();
  }
  uint64_t v7 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v7 + 117) = a1;
  return result;
}

void (*sub_1001C2AC4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 117);
  if (v6 == 7) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001C2B54;
}

void sub_1001C2B54(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 80);
    uint64_t v7 = *(void *)(v3 + 72);
    uint64_t v8 = *(void *)(v7 + v6);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v9 = swift_allocObject();
    sub_10024A510(v8);
    *(void *)(v7 + v6) = v9;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = (unsigned char *)(*(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 80)) + 117);
  swift_beginAccess();
  unsigned char *v10 = v4;

  free((void *)v3);
}

BOOL sub_1001C2C34()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 117) != 7;
}

uint64_t sub_1001C2C88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass();
    uint64_t v4 = swift_allocObject();
    sub_10024A510(v3);
    *(void *)(v1 + v2) = v4;
    swift_release();
  }
  uint64_t v5 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v5 + 117) = 7;
  return result;
}

uint64_t sub_1001C2D20()
{
  return sub_1001E8F68(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2D38(int a1)
{
  return sub_1001E900C(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C2D7C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 120);
  if (*(unsigned char *)(v5 + 124)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C2E10;
}

void sub_1001C2E10(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2E40()
{
  return sub_1001E92A4(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2E58()
{
  return sub_1001E9344(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C2E9C()
{
  return sub_1001E941C(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2EB4(int a1)
{
  return sub_1001E94C0(a1, type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

void (*sub_1001C2EF8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 128);
  if (*(unsigned char *)(v5 + 132)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001C2F8C;
}

void sub_1001C2F8C(uint64_t *a1, char a2)
{
}

BOOL sub_1001C2FBC()
{
  return sub_1001E9758(type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_1001C2FD4()
{
  return sub_1001E97F8(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionRequest._StorageClass, 133, (void (*)(uint64_t))sub_10024A510);
}

uint64_t sub_1001C3018@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_PositionRequest, &qword_100480A50, &qword_100480A58, a1);
}

uint64_t sub_1001C3050()
{
  return sub_1000457A4(&qword_100480A50);
}

uint64_t sub_1001C3074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445580);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  sub_100011480(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100445580);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[8];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  *(unsigned char *)(a1 + v7[9]) = 5;
  return sub_10001ACB8((uint64_t)v5, &qword_100445580);
}

uint64_t sub_1001C321C(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, &qword_100445580, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

void (*sub_1001C3264(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445580);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445580);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[v6[6]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[7]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v10[v6[8]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    v10[v6[9]] = 5;
    sub_10001ACB8((uint64_t)v5, &qword_100445580);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
  }
  return sub_1001C3478;
}

void sub_1001C3478(uint64_t a1, char a2)
{
}

BOOL sub_1001C34AC()
{
  return sub_1001C06D4(&qword_100445580, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C34E0()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, &qword_100445580, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime);
}

uint64_t sub_1001C3514@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C40AC(&qword_100445578, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a1);
}

uint64_t sub_1001C355C(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, &qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

void (*sub_1001C35A4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445578);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445578);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445578);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
  }
  return sub_1001C066C;
}

BOOL sub_1001C3754()
{
  return sub_1001C4450(&qword_100445578, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C3788()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, &qword_100445578, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime);
}

uint64_t sub_1001C37BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E33B4(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime, a1);
}

uint64_t sub_1001C37FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime, a1);
}

uint64_t sub_1001C3814()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C382C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t (*sub_1001C3844(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C38AC()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C38C4()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C38DC()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C38F4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t (*sub_1001C390C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C3974()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C398C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C39A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, a1);
}

uint64_t sub_1001C39BC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = a1(0);
  uint64_t v5 = a2 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_1001C3A14()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3A2C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t (*sub_1001C3A44(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C3AAC()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3AC4()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3ADC()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3AF4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t (*sub_1001C3B0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C3B74()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3B8C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C3BA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, a1);
}

uint64_t sub_1001C3BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445588);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_100011480(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100445588);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + *(int *)(v7 + 24);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_10001ACB8((uint64_t)v5, &qword_100445588);
}

uint64_t sub_1001C3D64(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445588, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
}

void (*sub_1001C3DAC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445588);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445588);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_ClsUtranCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[*(int *)(v6 + 24)];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_ClsGpsCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    sub_10001ACB8((uint64_t)v5, &qword_100445588);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
  }
  return sub_1001C3FC8;
}

void sub_1001C3FC8(uint64_t a1, char a2)
{
}

BOOL sub_1001C3FFC()
{
  return sub_1001C06D4(&qword_100445588, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
}

uint64_t sub_1001C4030()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445588, type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured);
}

uint64_t sub_1001C4064@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C40AC(&qword_100445590, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, a1);
}

uint64_t sub_1001C40AC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100002ED4(a1);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2(0);
  sub_100011480(v5 + *(int *)(v14 + 24), (uint64_t)v13, a1);
  uint64_t v15 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15) != 1) {
    return sub_10024A27C((uint64_t)v13, a5, a4);
  }
  UnknownStorage.init()();
  uint64_t v16 = a5 + *(int *)(v15 + 20);
  *(_DWORD *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 4) = 1;
  uint64_t v17 = a5 + *(int *)(v15 + 24);
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  return sub_10001ACB8((uint64_t)v13, a1);
}

uint64_t sub_1001C41F0(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445590, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

void (*sub_1001C4238(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445590);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445590);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445590);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
  }
  return sub_1001C43E8;
}

void sub_1001C43E8(uint64_t a1, char a2)
{
}

BOOL sub_1001C441C()
{
  return sub_1001C4450(&qword_100445590, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

BOOL sub_1001C4450(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 24), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001C4544()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445590, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased);
}

uint64_t sub_1001C4578(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 24);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C4618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445598);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  sub_100011480(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_100445598);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445598);
}

uint64_t sub_1001C4754(uint64_t a1)
{
  return sub_1001F1078(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445598, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

void (*sub_1001C479C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445598);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445598);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    BOOL v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)BOOL v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445598);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
  }
  return sub_1001C494C;
}

void sub_1001C494C(uint64_t a1, char a2)
{
}

BOOL sub_1001C4980()
{
  return sub_1001C740C(&qword_100445598, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C49B4()
{
  return sub_1001C7534(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, &qword_100445598, type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted);
}

uint64_t sub_1001C49E8@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[6];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = a1 + v2[7];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  size_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t sub_1001C4B04@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured, a1);
}

uint64_t sub_1001C4B1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased, a1);
}

uint64_t sub_1001C4B34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted, a1);
}

uint64_t sub_1001C4B4C()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
}

uint64_t sub_1001C4B64(uint64_t (*a1)(void))
{
  unsigned int v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 20));
  if (v2 == 6) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t sub_1001C4B98(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001C4BC8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001C4C28()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0) + 20)) != 6;
}

uint64_t sub_1001C4C54()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001C4C7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1004455A0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = a1 + v7[7];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return sub_10001ACB8((uint64_t)v5, &qword_1004455A0);
}

uint64_t sub_1001C4E6C(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, &qword_1004455A0, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

void (*sub_1001C4EB4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455A0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455A0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGpsTimeMeasured(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[v6[6]];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredBased(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = &v10[v6[7]];
    uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_GeranGpsTimeMeasuredAssisted(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    sub_10001ACB8((uint64_t)v5, &qword_1004455A0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
  }
  return sub_1001C5118;
}

void sub_1001C5118(uint64_t a1, char a2)
{
}

BOOL sub_1001C514C()
{
  return sub_1001C4450(&qword_1004455A0, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

uint64_t sub_1001C5180()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, &qword_1004455A0, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured);
}

uint64_t sub_1001C51B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams, 6, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, a1);
}

uint64_t sub_1001C51E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured, a1);
}

uint64_t sub_1001C51FC()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C5214(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t (*sub_1001C522C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C5294()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C52AC()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C52C4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C52DC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t (*sub_1001C52F4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C535C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C5374()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C538C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C53A4(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t (*sub_1001C53BC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C5424()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C543C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

int *sub_1001C5454@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C546C(type metadata accessor for Proto_Gnss_Emergency_GpsTOD, a1);
}

int *sub_1001C546C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)a1(0);
  uint64_t v5 = a2 + result[5];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + result[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a2 + result[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_1001C54D4()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C54EC(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t (*sub_1001C5504(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C556C()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C5584()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C559C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C55B4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t (*sub_1001C55CC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C5634()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C564C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C5664()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C567C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t (*sub_1001C5694(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C56FC()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C5714()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C572C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 32));
  if (v1 == 4) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001C5758(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1001C5788(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 32);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001C57E8()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 32)) != 4;
}

uint64_t sub_1001C5814()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 32)) = 4;
  return result;
}

uint64_t sub_1001C583C()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C5854(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t (*sub_1001C586C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C58D4()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C58EC()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001C5904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455A8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  sub_100011480(v1 + *(int *)(v6 + 40), (uint64_t)v5, &qword_1004455A8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455A8);
}

uint64_t sub_1001C5A50(uint64_t a1)
{
  return sub_1001D6B9C(a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, &qword_1004455A8, type metadata accessor for Proto_Gnss_Emergency_GpsTOD, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

void (*sub_1001C5A98(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455A8);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455A8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455A8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  }
  return sub_1001C5C58;
}

void sub_1001C5C58(uint64_t a1, char a2)
{
}

BOOL sub_1001C5C8C()
{
  return sub_1001D6EA0(&qword_1004455A8, type metadata accessor for Proto_Gnss_Emergency_LocationInfo, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C5CC0()
{
  return sub_1001D6FC8(type metadata accessor for Proto_Gnss_Emergency_LocationInfo, &qword_1004455A8, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001C5CF4@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  unsigned int v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  *(unsigned char *)(a1 + v2[8]) = 4;
  uint64_t v6 = a1 + v2[9];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[10];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  size_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t sub_1001C5DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GpsTOD, a1);
}

uint64_t sub_1001C5DDC()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5DF4(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t (*sub_1001C5E0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C5E74()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5E8C()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5EA4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5EBC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t (*sub_1001C5ED4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C5F3C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5F54()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5F6C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C5F84(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t (*sub_1001C5F9C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C6004()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C601C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C6034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455B0);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  sub_100011480(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_1004455B0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455B0);
}

uint64_t sub_1001C6180(uint64_t a1)
{
  return sub_1001F0280(a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo, &qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_Plmn, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

void (*sub_1001C61C8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455B0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellInfo(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455B0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455B0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  }
  return sub_1001C6388;
}

void sub_1001C6388(uint64_t a1, char a2)
{
}

BOOL sub_1001C63BC()
{
  return sub_1001C6BD0(&qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_CellInfo, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C63F0()
{
  return sub_1001C6CF8(type metadata accessor for Proto_Gnss_Emergency_CellInfo, &qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C6424@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  unsigned int v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + v2[8];
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C64D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_Plmn, a1);
}

uint64_t sub_1001C64F0()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 20));
  if (v1[8]) {
    return 0;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_1001C6524(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(void *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_1001C655C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((unsigned char *)v4 + 8)) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100004404;
}

BOOL sub_1001C65C4()
{
  return sub_1001F1544(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C65DC()
{
  return sub_1001F1594(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C65F4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C660C(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t (*sub_1001C6624(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C668C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C66A4()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C66BC()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C66D4(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t (*sub_1001C66EC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C6754()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C676C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C6784@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455B8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  sub_100011480(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_1004455B8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return sub_10001ACB8((uint64_t)v5, &qword_1004455B8);
}

uint64_t sub_1001C6918(uint64_t a1)
{
  return sub_1001F0280(a1, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, &qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_CellInfo, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

void (*sub_1001C6960(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455B8);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455B8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[8]];
    uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    sub_10001ACB8((uint64_t)v5, &qword_1004455B8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  }
  return sub_1001C6B68;
}

void sub_1001C6B68(uint64_t a1, char a2)
{
}

BOOL sub_1001C6B9C()
{
  return sub_1001C6BD0(&qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

BOOL sub_1001C6BD0(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 32), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001C6CC4()
{
  return sub_1001C6CF8(type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured, &qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C6CF8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 32);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C6D98@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  unsigned int v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  uint64_t v3 = a1 + v2[5];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  uint64_t v4 = a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + v2[8];
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C6E4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_CellInfo, a1);
}

uint64_t sub_1001C6E64()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6E7C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t (*sub_1001C6E94(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C6EFC()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6F14()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6F2C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6F44(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t (*sub_1001C6F5C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C6FC4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6FDC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C6FF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455B8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  sub_100011480(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1004455B8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return sub_10001ACB8((uint64_t)v5, &qword_1004455B8);
}

uint64_t sub_1001C7188(uint64_t a1)
{
  return sub_1001F1078(a1, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, &qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_CellInfo, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

void (*sub_1001C71D0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455B8);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455B8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[8]];
    uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    sub_10001ACB8((uint64_t)v5, &qword_1004455B8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
  }
  return sub_1001C6B68;
}

BOOL sub_1001C73D8()
{
  return sub_1001C740C(&qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

BOOL sub_1001C740C(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 28), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001C7500()
{
  return sub_1001C7534(type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured, &qword_1004455B8, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
}

uint64_t sub_1001C7534(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 28);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C75D4@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  unsigned int v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[7];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, 1, 1, v6);
}

uint64_t sub_1001C7678()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7690(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C76A8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C7710()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7728()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7740()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7758(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C7770(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C77D8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C77F0()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7808()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7820(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C7838(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C78A0()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C78B8()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C78D0()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C78E8(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C7900(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C7968()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7980()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455B0);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  sub_100011480(v1 + *(int *)(v6 + 36), (uint64_t)v5, &qword_1004455B0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455B0);
}

uint64_t sub_1001C7AE4(uint64_t a1)
{
  return sub_1001C7B2C(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, &qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_Plmn, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C7B2C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 36);
  sub_10001ACB8(v10, a3);
  sub_10024A27C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*sub_1001C7BE8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455B0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 36);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455B0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455B0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_Plmn);
  }
  return sub_1001C6388;
}

BOOL sub_1001C7DA8()
{
  return sub_1001C7DDC(&qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

BOOL sub_1001C7DDC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 36), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001C7ED0()
{
  return sub_1001C7F04(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell, &qword_1004455B0, type metadata accessor for Proto_Gnss_Emergency_Plmn);
}

uint64_t sub_1001C7F04(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 36);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001C7FA4()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C7FBC(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C7FD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C803C()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C8054()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C806C()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C8084(uint64_t (*a1)(void))
{
  unsigned int v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 44));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001C80C0(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C80D8(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001C8114(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C817C()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

BOOL sub_1001C8194(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 44) + 4) & 1) == 0;
}

uint64_t sub_1001C81CC()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C81E4(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 44);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001C821C()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C8234(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C824C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C82B4()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C82CC()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C82E4()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C82FC(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 52));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001C8338(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C8350(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001C838C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C83F4()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

BOOL sub_1001C840C(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 52) + 4) & 1) == 0;
}

uint64_t sub_1001C8444()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C845C(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001C8494()
{
  return sub_1001C84AC(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C84AC(uint64_t (*a1)(void))
{
  uint64_t v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 56));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001C84E8(int a1)
{
  return sub_1001C8500(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C8500(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 56);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001C853C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 56);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C85A4()
{
  return sub_1001C85BC(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

BOOL sub_1001C85BC(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 56) + 4) & 1) == 0;
}

uint64_t sub_1001C85F4()
{
  return sub_1001C860C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C860C(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 56);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001C8644()
{
  return sub_1001E4F3C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C865C(int a1)
{
  return sub_1001E4F90(a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t (*sub_1001C8674(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0) + 60);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001C86DC()
{
  return sub_1001E504C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C86F4()
{
  return sub_1001E509C(type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C870C@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  uint64_t v3 = a1 + v2[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + v2[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[9];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v10 = a1 + v2[10];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v2[11];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v2[12];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v2[13];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  uint64_t v14 = a1 + v2[14];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  uint64_t v15 = a1 + v2[15];
  *(_DWORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 4) = 1;
  return result;
}

uint64_t sub_1001C8830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455C0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  return sub_10001ACB8((uint64_t)v5, &qword_1004455C0);
}

uint64_t sub_1001C89EC(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100216A30(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004455C0);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004455C0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001C8BAC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455C0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455C0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[8]];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    sub_10001ACB8((uint64_t)v5, &qword_1004455C0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
  }
  return sub_1001C8DCC;
}

void sub_1001C8DCC(uint64_t a1, char a2)
{
}

BOOL sub_1001C8DF8()
{
  return sub_1001BA454(&qword_1004455C0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime, type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured);
}

uint64_t sub_1001C8E34()
{
  uint64_t v1 = sub_100002ED4(&qword_1004455C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100216A30(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_UtranGanssTimeMeasured(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__utranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004455C0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001C8F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455C8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_10001ACB8((uint64_t)v5, &qword_1004455C8);
}

uint64_t sub_1001C9140(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455C8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100216A30(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004455C8);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004455C8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001C9300(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455C8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455C8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    sub_10001ACB8((uint64_t)v5, &qword_1004455C8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
  }
  return sub_1001C9510;
}

void sub_1001C9510(uint64_t a1, char a2)
{
}

BOOL sub_1001C953C()
{
  return sub_1001BA454(&qword_1004455C8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
}

uint64_t sub_1001C9578()
{
  uint64_t v1 = sub_100002ED4(&qword_1004455C8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100216A30(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__geranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004455C8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001C96D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455D0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[9];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1 + v7[10];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  uint64_t v15 = a1 + v7[11];
  *(_DWORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 4) = 1;
  uint64_t v16 = a1 + v7[12];
  *(_DWORD *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 4) = 1;
  uint64_t v17 = a1 + v7[13];
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  uint64_t v18 = a1 + v7[14];
  *(_DWORD *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 4) = 1;
  uint64_t v19 = a1 + v7[15];
  *(_DWORD *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455D0);
}

uint64_t sub_1001C990C(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455D0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100216A30(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004455D0);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004455D0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001C9ACC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455D0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455D0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[9]];
    uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = &v9[v6[10]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    uint64_t v18 = &v9[v6[11]];
    *(_DWORD *)uint64_t v18 = 0;
    v18[4] = 1;
    uint64_t v19 = &v9[v6[12]];
    *(_DWORD *)uint64_t v19 = 0;
    v19[4] = 1;
    uint64_t v20 = &v9[v6[13]];
    *(_DWORD *)uint64_t v20 = 0;
    v20[4] = 1;
    uint64_t v21 = &v9[v6[14]];
    *(_DWORD *)uint64_t v21 = 0;
    v21[4] = 1;
    uint64_t v22 = &v9[v6[15]];
    *(_DWORD *)uint64_t v22 = 0;
    v22[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455D0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
  }
  return sub_1001C9D5C;
}

void sub_1001C9D5C(uint64_t a1, char a2)
{
}

BOOL sub_1001C9D88()
{
  return sub_1001BA454(&qword_1004455D0, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime, type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
}

uint64_t sub_1001C9DC4()
{
  uint64_t v1 = sub_100002ED4(&qword_1004455D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100216A30(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_GanssTimeMeasuredP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__eutranTime;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004455D0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001C9F24@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_100480AC0, &qword_100480AC8, a1);
}

uint64_t sub_1001C9F5C()
{
  return sub_1000457A4(&qword_100480AC0);
}

uint64_t sub_1001C9F80()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

uint64_t sub_1001C9F98(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001C9FC8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001CA028()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0) + 20)) != 6;
}

uint64_t sub_1001CA054()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001CA07C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455D8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1004455D8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
  }
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_100480AC0 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_100480AC8;
  swift_retain();
  return sub_10001ACB8((uint64_t)v5, &qword_1004455D8);
}

uint64_t sub_1001CA1D8(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, &qword_1004455D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

void (*sub_1001CA220(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455D8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455D8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = *(int *)(v6 + 20);
    if (qword_100480AC0 != -1) {
      swift_once();
    }
    *(void *)&v10[v12] = qword_100480AC8;
    swift_retain();
    sub_10001ACB8((uint64_t)v5, &qword_1004455D8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
  }
  return sub_1001CA3F0;
}

void sub_1001CA3F0(uint64_t a1, char a2)
{
}

BOOL sub_1001CA424()
{
  return sub_1001C4450(&qword_1004455D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

uint64_t sub_1001CA458()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, &qword_1004455D8, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

uint64_t sub_1001CA48C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, 6, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, a1);
}

uint64_t sub_1001CA4BC@<X0>(uint64_t (*a1)(void)@<X0>, char a2@<W1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  UnknownStorage.init()();
  uint64_t v8 = a1(0);
  *(unsigned char *)(a4 + *(int *)(v8 + 20)) = a2;
  uint64_t v9 = a4 + *(int *)(v8 + 24);
  uint64_t v10 = a3(0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);

  return v11(v9, 1, 1, v10);
}

uint64_t sub_1001CA560@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, a1);
}

uint64_t sub_1001CA578()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA590(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001CA5C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001CA620()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 20)) != 6;
}

uint64_t sub_1001CA64C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001CA674()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA68C(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t (*sub_1001CA6A4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CA70C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA724()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA73C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA754(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t (*sub_1001CA76C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CA7D4()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA7EC()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA804()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA81C(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t (*sub_1001CA834(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CA89C()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA8B4()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA8CC()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 36));
  if (v1 == 4) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001CA8F8(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1001CA928(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 36);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001CA988()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 36)) != 4;
}

uint64_t sub_1001CA9B4()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  *(unsigned char *)(v0 + *(int *)(result + 36)) = 4;
  return result;
}

uint64_t sub_1001CA9DC()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CA9F4(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t (*sub_1001CAA0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CAA74()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001CAA8C()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

int *sub_1001CAAA4@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  *(unsigned char *)(a1 + result[5]) = 6;
  uint64_t v3 = a1 + result[6];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[7];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[8];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  *(unsigned char *)(a1 + result[9]) = 4;
  uint64_t v6 = a1 + result[10];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_1001CAB2C()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CAB44(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t (*sub_1001CAB5C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CABC4()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CABDC()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CABF4()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CAC0C(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t (*sub_1001CAC24(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CAC8C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CACA4()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CACBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CACD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CAD1C(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

void (*sub_1001CAD64(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CAF14;
}

void sub_1001CAF14(uint64_t a1, char a2)
{
}

BOOL sub_1001CAF48()
{
  return sub_1001C06D4(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CAF7C()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CAFB0()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_1001CAFC8(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t (*sub_1001CAFE0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CB048()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_1001CB060()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_1001CB078@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CCA5C(type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, a1);
}

uint64_t sub_1001CB090@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CB0A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CB0F0(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

void (*sub_1001CB138(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CAF14;
}

BOOL sub_1001CB2E8()
{
  return sub_1001C06D4(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CB31C()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CB350()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB368(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t (*sub_1001CB380(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CB3E8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB400()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB418()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB430(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t (*sub_1001CB448(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CB4B0()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB4C8()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB4E0()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB4F8(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t (*sub_1001CB510(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CB578()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB590()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB5A8()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB5C0(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t (*sub_1001CB5D8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CB640()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB658()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CB670@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + v2[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + v2[8];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v2[9];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return result;
}

uint64_t sub_1001CB734@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CB77C(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

void (*sub_1001CB7C4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CAF14;
}

BOOL sub_1001CB974()
{
  return sub_1001C06D4(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CB9A8()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CB9DC()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CB9F4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBA0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBA74()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBA8C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBAA4()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBABC(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBAD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBB3C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBB54()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBB6C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBB84(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBB9C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBC04()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBC1C()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBC34()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBC4C(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBC64(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBCCC()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBCE4()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBCFC()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBD14(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBD2C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBD94()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBDAC()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBDC4()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBDDC(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t (*sub_1001CBDF4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CBE5C()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBE74()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CBE8C@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + v2[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + v2[8];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v2[9];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v2[10];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v2[11];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return result;
}

uint64_t sub_1001CBF70@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CBFB8(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

void (*sub_1001CC000(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CAF14;
}

BOOL sub_1001CC1B0()
{
  return sub_1001C06D4(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CC1E4()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CC218()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC230(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t (*sub_1001CC248(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CC2B0()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC2C8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC2E0()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC2F8(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t (*sub_1001CC310(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CC378()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC390()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC3A8()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC3C0(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t (*sub_1001CC3D8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CC440()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC458()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC470()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC488(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t (*sub_1001CC4A0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CC508()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC520()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC538()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC550(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t (*sub_1001CC568(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CC5D0()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC5E8()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CC600@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + v2[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + v2[8];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v2[9];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v2[10];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_1001CC6D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, a1);
}

uint64_t sub_1001CC71C(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

void (*sub_1001CC764(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CAF14;
}

BOOL sub_1001CC914()
{
  return sub_1001C06D4(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CC948()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_PointAltitude, &qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CC97C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_1001CC994(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t (*sub_1001CC9AC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CCA14()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_1001CCA2C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_1001CCA44@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CCA5C(type metadata accessor for Proto_Gnss_Emergency_PointAltitude, a1);
}

uint64_t sub_1001CCA5C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t v4 = a1(0);
  uint64_t v5 = a2 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v8 = a2 + *(int *)(v4 + 24);
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_1001CCAF8()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t sub_1001CCB10(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t (*sub_1001CCB28(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_Polygon(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001CCB90()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t sub_1001CCBA8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t sub_1001CCBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_Polygon, a1);
}

uint64_t sub_1001CCBD8(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t (*sub_1001CCBF0())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001CCC38@<X0>(void *a1@<X8>)
{
  return sub_1001E1A20(type metadata accessor for Proto_Gnss_Emergency_Polygon, a1);
}

uint64_t sub_1001CCC50@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CF030(&qword_1004455E8, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle, a1);
}

uint64_t sub_1001CCC8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  size_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_1004455E8);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_1004455E8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CCE50(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  size_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455E8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
  }
  return sub_1001CD050;
}

void sub_1001CD050(uint64_t a1, char a2)
{
}

BOOL sub_1001CD07C()
{
  return sub_1001BA454(&qword_1004455E8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle, type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle);
}

uint64_t sub_1001CD0B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_1004455E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainCircle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainCircle;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_1004455E8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CD21C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455F0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[8];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v7[9];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455F0);
}

uint64_t sub_1001CD3F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455F0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_1004455F0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_1004455F0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CD5B4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455F0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455F0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = &v9[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[8]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v9[v6[9]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455F0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
  }
  return sub_1001CD7E4;
}

void sub_1001CD7E4(uint64_t a1, char a2)
{
}

BOOL sub_1001CD810()
{
  return sub_1001BA454(&qword_1004455F0, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
}

uint64_t sub_1001CD84C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_1004455F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointUncertainEllipse;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_1004455F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CD9B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455F8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[8];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v7[9];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  uint64_t v14 = a1 + v7[10];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  uint64_t v15 = a1 + v7[11];
  *(_DWORD *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455F8);
}

uint64_t sub_1001CDBA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455F8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_1004455F8);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_1004455F8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CDD68(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455F8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455F8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = &v9[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[8]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v9[v6[9]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    uint64_t v17 = &v9[v6[10]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    uint64_t v18 = &v9[v6[11]];
    *(_DWORD *)uint64_t v18 = 0;
    v18[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455F8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
  }
  return sub_1001CDFB8;
}

void sub_1001CDFB8(uint64_t a1, char a2)
{
}

BOOL sub_1001CDFE4()
{
  return sub_1001BA454(&qword_1004455F8, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid, type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
}

uint64_t sub_1001CE020()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_1004455F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitudeUncertainEllipsoid;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_1004455F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CE184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445600);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445600);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[8];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v7[9];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  uint64_t v14 = a1 + v7[10];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445600);
}

uint64_t sub_1001CE368(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445600);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445600);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445600);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CE52C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445600);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445600);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = &v9[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[8]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v9[v6[9]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    uint64_t v17 = &v9[v6[10]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445600);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
  }
  return sub_1001CE76C;
}

void sub_1001CE76C(uint64_t a1, char a2)
{
}

BOOL sub_1001CE798()
{
  return sub_1001BA454(&qword_100445600, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
}

uint64_t sub_1001CE7D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445600);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidArc;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445600);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CE938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455E0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
}

uint64_t sub_1001CEA9C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_1004455E0);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_1004455E0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CEC60(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
  }
  return sub_1001CEE28;
}

void sub_1001CEE28(uint64_t a1, char a2)
{
}

BOOL sub_1001CEE54()
{
  return sub_1001BA454(&qword_1004455E0, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001CEE90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_1004455E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ellipsoidPoint;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_1004455E0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CEFF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CF030(&qword_100445608, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, type metadata accessor for Proto_Gnss_Emergency_PointAltitude, a1);
}

uint64_t sub_1001CF030@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100002ED4(a1);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20)) + *a2;
  swift_beginAccess();
  sub_100011480(v14, (uint64_t)v13, a1);
  uint64_t v15 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15) != 1) {
    return sub_10024A27C((uint64_t)v13, a5, a4);
  }
  UnknownStorage.init()();
  uint64_t v16 = a5 + *(int *)(v15 + 20);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = a5 + *(int *)(v15 + 24);
  *(_DWORD *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 4) = 1;
  return sub_10001ACB8((uint64_t)v13, a1);
}

uint64_t sub_1001CF1CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445608);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445608);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445608);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CF390(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445608);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445608);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445608);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
  }
  return sub_1001CF590;
}

void sub_1001CF590(uint64_t a1, char a2)
{
}

BOOL sub_1001CF5BC()
{
  return sub_1001BA454(&qword_100445608, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
}

uint64_t sub_1001CF5F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445608);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PointAltitude(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__pointAltitude;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445608);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CF75C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445610);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445610);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445610);
}

uint64_t sub_1001CF8C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445610);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024AD14(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445610);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445610);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001CFA84(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445610);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445610);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 24);
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445610);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Polygon);
  }
  return sub_1001CFC4C;
}

void sub_1001CFC4C(uint64_t a1, char a2)
{
}

BOOL sub_1001CFC78()
{
  return sub_1001BA454(&qword_100445610, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon, type metadata accessor for Proto_Gnss_Emergency_Polygon);
}

uint64_t sub_1001CFCB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445610);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024AD14(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_Polygon(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__polygon;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445610);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001CFE18()
{
  return sub_1001D4F98(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
}

uint64_t sub_1001CFE38(int a1)
{
  return sub_1001D504C(a1, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass, (void (*)(uint64_t))sub_10024AD14, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
}

void (*sub_1001CFE80(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation;
  swift_beginAccess();
  int v6 = *(_DWORD *)v5;
  if (*(unsigned char *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001CFF20;
}

void sub_1001CFF20(uint64_t *a1, char a2)
{
}

BOOL sub_1001CFF54()
{
  return sub_1001D5328(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
}

uint64_t sub_1001CFF74()
{
  return sub_1001D53D8(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass, (void (*)(uint64_t))sub_10024AD14, &OBJC_IVAR____TtCV10ALProtobuf30Proto_Gnss_Emergency_ShapeInfoP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__noLocation);
}

uint64_t sub_1001CFFBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_100480B20, &qword_100480B28, a1);
}

uint64_t sub_1001CFFF4()
{
  return sub_1000457A4(&qword_100480B20);
}

uint64_t sub_1001D0018()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 20));
  if (v1 == 9) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001D0044(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001D0074(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 9) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001D00D4()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 20)) != 9;
}

uint64_t sub_1001D0100()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 9;
  return result;
}

uint64_t sub_1001D0128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445618);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100445618);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
  }
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_100480B20 != -1) {
    swift_once();
  }
  *(void *)(a1 + v8) = qword_100480B28;
  swift_retain();
  return sub_10001ACB8((uint64_t)v5, &qword_100445618);
}

uint64_t sub_1001D0284(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, &qword_100445618, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
}

void (*sub_1001D02CC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445618);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445618);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = *(int *)(v6 + 20);
    if (qword_100480B20 != -1) {
      swift_once();
    }
    *(void *)&v10[v12] = qword_100480B28;
    swift_retain();
    sub_10001ACB8((uint64_t)v5, &qword_100445618);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
  }
  return sub_1001D049C;
}

void sub_1001D049C(uint64_t a1, char a2)
{
}

BOOL sub_1001D04D0()
{
  return sub_1001C4450(&qword_100445618, type metadata accessor for Proto_Gnss_Emergency_LocEstimate, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
}

uint64_t sub_1001D0504()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_LocEstimate, &qword_100445618, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
}

uint64_t sub_1001D0538@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_LocEstimate, 9, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, a1);
}

uint64_t sub_1001D0568()
{
  return 9;
}

uint64_t sub_1001D0570@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, a1);
}

uint64_t sub_1001D0588()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D05A0(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t (*sub_1001D05B8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0620()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D0638()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D0650()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D0668(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t (*sub_1001D0680(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D06E8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D0700()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D0718@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, a1);
}

uint64_t sub_1001D0730()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D0748(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t (*sub_1001D0760(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D07C8()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D07E0()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D07F8()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D0810(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t (*sub_1001D0828(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0890()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D08A8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D08C0()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D08D8(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t (*sub_1001D08F0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0958()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D0970()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D0988()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D09A0(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t (*sub_1001D09B8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0A20()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D0A38()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

int *sub_1001D0A50@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DD804(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, a1);
}

uint64_t sub_1001D0A68()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0A80(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t (*sub_1001D0A98(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0B00()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0B18()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0B30()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0B48(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t (*sub_1001D0B60(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0BC8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0BE0()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0BF8()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0C10(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t (*sub_1001D0C28(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0C90()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D0CA8()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

int *sub_1001D0CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C546C(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, a1);
}

uint64_t sub_1001D0CD8()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0CF0(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D0D08(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0D70()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0D88()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0DA0()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0DB8(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D0DD0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0E38()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0E50()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0E68()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0E80(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D0E98(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0F00()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0F18()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0F30()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0F48(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D0F60(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D0FC8()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0FE0()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D0FF8()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D1010(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D1028(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D1090()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D10A8()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D10C0()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D10D8(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t (*sub_1001D10F0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D1158()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D1170()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

int *sub_1001D1188@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_1001D1218@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_100445620, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, a1);
}

uint64_t sub_1001D1260(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445620, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

void (*sub_1001D12A8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445620);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445620);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445620);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
  }
  return sub_1001D1458;
}

void sub_1001D1458(uint64_t a1, char a2)
{
}

BOOL sub_1001D148C()
{
  return sub_1001C06D4(&qword_100445620, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D14C0()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445620, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
}

uint64_t sub_1001D14F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445628);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100445628);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445628);
}

uint64_t sub_1001D1650(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445628, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

void (*sub_1001D1698(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445628);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445628);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[8]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445628);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
  }
  return sub_1001D1868;
}

void sub_1001D1868(uint64_t a1, char a2)
{
}

BOOL sub_1001D189C()
{
  return sub_1001C4450(&qword_100445628, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D18D0()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445628, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
}

uint64_t sub_1001D1904@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445630);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_100011480(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_100445630);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445630);
}

uint64_t sub_1001D1A50(uint64_t a1)
{
  return sub_1001F1078(a1, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445630, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

void (*sub_1001D1A98(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445630);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 28);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445630);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445630);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
  }
  return sub_1001D1C58;
}

void sub_1001D1C58(uint64_t a1, char a2)
{
}

BOOL sub_1001D1C8C()
{
  return sub_1001C740C(&qword_100445630, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D1CC0()
{
  return sub_1001C7534(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445630, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
}

uint64_t sub_1001D1CF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445638);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  sub_100011480(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_100445638);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[9];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v7[10];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445638);
}

uint64_t sub_1001D1E70(uint64_t a1)
{
  return sub_1001F0280(a1, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445638, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

void (*sub_1001D1EB8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445638);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0) + 32);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445638);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[8]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v10[v6[9]];
    *(_DWORD *)uint64_t v16 = 0;
    v16[4] = 1;
    uint64_t v17 = &v10[v6[10]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445638);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
  }
  return sub_1001D20A8;
}

void sub_1001D20A8(uint64_t a1, char a2)
{
}

BOOL sub_1001D20DC()
{
  return sub_1001C6BD0(&qword_100445638, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D2110()
{
  return sub_1001C6CF8(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, &qword_100445638, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
}

uint64_t sub_1001D2144@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[6];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = a1 + v2[7];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = a1 + v2[8];
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);

  return v11(v9, 1, 1, v10);
}

uint64_t sub_1001D22A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity, a1);
}

uint64_t sub_1001D22C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity, a1);
}

uint64_t sub_1001D22D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity, a1);
}

uint64_t sub_1001D22F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity, a1);
}

uint64_t sub_1001D2308()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
}

uint64_t sub_1001D2320(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001D2350(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001D23B0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0) + 20)) != 6;
}

uint64_t sub_1001D23DC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001D2404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445640);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100445640);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = a1 + v7[7];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1 + v7[8];
  uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  return sub_10001ACB8((uint64_t)v5, &qword_100445640);
}

uint64_t sub_1001D263C(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, &qword_100445640, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
}

void (*sub_1001D2684(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445640);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445640);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[v6[6]];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = &v10[v6[7]];
    uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    uint64_t v18 = &v10[v6[8]];
    uint64_t v19 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    sub_10001ACB8((uint64_t)v5, &qword_100445640);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
  }
  return sub_1001D2930;
}

void sub_1001D2930(uint64_t a1, char a2)
{
}

BOOL sub_1001D2964()
{
  return sub_1001C4450(&qword_100445640, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
}

uint64_t sub_1001D2998()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, &qword_100445640, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
}

uint64_t sub_1001D29CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate, 6, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, a1);
}

uint64_t sub_1001D29FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_VelocityInfo, a1);
}

uint64_t sub_1001D2A14()
{
  return sub_1001DA38C(type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_1001D2A2C(char a1)
{
  return sub_1001DA428(a1, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620);
}

void (*sub_1001D2A6C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 9) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001D2AFC;
}

void sub_1001D2AFC(uint64_t *a1, char a2)
{
}

BOOL sub_1001D2B28()
{
  return sub_1001DA6C0(type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_1001D2B40()
{
  return sub_1001DA75C(type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620);
}

uint64_t sub_1001D2B80()
{
  return sub_1001DA838(type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_1001D2B98(int a1)
{
  return sub_1001DA8D8(a1, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620);
}

void (*sub_1001D2BD8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 20);
  if (*(unsigned char *)(v5 + 24)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D2C6C;
}

void sub_1001D2C6C(uint64_t *a1, char a2)
{
}

BOOL sub_1001D2C98()
{
  return sub_1001DAB78(type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_1001D2CB0()
{
  return sub_1001DAC14(type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620);
}

uint64_t sub_1001D2CF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F4424(type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, a1);
}

uint64_t sub_1001D2D10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445648);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  size_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024B620(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445648);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D2ED4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445648);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  size_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445648);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    v9[v6[6]] = 7;
    uint64_t v11 = &v9[v6[7]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445648);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  }
  return sub_1001D30A4;
}

void sub_1001D30A4(uint64_t a1, char a2)
{
}

BOOL sub_1001D30D0()
{
  return sub_1001BA454(&qword_100445648, type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001D310C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445648);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024B620(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D3270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445650);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445650);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  *(unsigned char *)(a1 + v7[8]) = 4;
  uint64_t v11 = a1 + v7[9];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[10];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return sub_10001ACB8((uint64_t)v5, &qword_100445650);
}

uint64_t sub_1001D3448(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445650);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024B620(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445650);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445650);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D360C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445650);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445650);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    v9[v6[8]] = 4;
    uint64_t v14 = &v9[v6[9]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[10]];
    uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    sub_10001ACB8((uint64_t)v5, &qword_100445650);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
  }
  return sub_1001D3848;
}

void sub_1001D3848(uint64_t a1, char a2)
{
}

BOOL sub_1001D3874()
{
  return sub_1001BA454(&qword_100445650, type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
}

uint64_t sub_1001D38B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445650);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024B620(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_LocationInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locationInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445650);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D3A14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445658);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445658);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + v7[5]) = 6;
  uint64_t v8 = a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  *(unsigned char *)(a1 + v7[9]) = 4;
  uint64_t v11 = a1 + v7[10];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445658);
}

uint64_t sub_1001D3BB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445658);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024B620(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445658);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445658);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D3D74(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445658);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445658);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    uint64_t v11 = &v9[v6[6]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[7]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    v9[v6[9]] = 4;
    uint64_t v14 = &v9[v6[10]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445658);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
  }
  return sub_1001D3F74;
}

void sub_1001D3F74(uint64_t a1, char a2)
{
}

BOOL sub_1001D3FA0()
{
  return sub_1001BA454(&qword_100445658, type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
}

uint64_t sub_1001D3FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445658);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024B620(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssLocationInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445658);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D4140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445660);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445660);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 9;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_10001ACB8((uint64_t)v5, &qword_100445660);
}

uint64_t sub_1001D42D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445660);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024B620(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445660);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445660);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D4498(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445660);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445660);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 9;
    uint64_t v11 = &v9[*(int *)(v6 + 24)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_ShapeInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10001ACB8((uint64_t)v5, &qword_100445660);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
  }
  return sub_1001D4690;
}

void sub_1001D4690(uint64_t a1, char a2)
{
}

BOOL sub_1001D46BC()
{
  return sub_1001BA454(&qword_100445660, type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
}

uint64_t sub_1001D46F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445660);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024B620(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_LocEstimate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__locEstimate;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445660);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D485C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445668);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445668);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 6;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_10001ACB8((uint64_t)v5, &qword_100445668);
}

uint64_t sub_1001D49F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445668);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024B620(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445668);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445668);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D4BB4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445668);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445668);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 6;
    uint64_t v11 = &v9[*(int *)(v6 + 24)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10001ACB8((uint64_t)v5, &qword_100445668);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
  }
  return sub_1001D4DAC;
}

void sub_1001D4DAC(uint64_t a1, char a2)
{
}

BOOL sub_1001D4DD8()
{
  return sub_1001BA454(&qword_100445668, type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate, type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
}

uint64_t sub_1001D4E14()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445668);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024B620(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__velocityEstimate;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445668);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D4F78()
{
  return sub_1001D4F98(type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
}

uint64_t sub_1001D4F98(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = (unsigned char *)(*(void *)(v2 + *(int *)(a1(0) + 20)) + *a2);
  swift_beginAccess();
  if (v3[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v3;
  }
}

uint64_t sub_1001D5004(int a1)
{
  return sub_1001D504C(a1, type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
}

uint64_t sub_1001D504C(int a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = v5;
  uint64_t v11 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    swift_release();
    *(void *)(v9 + v11) = v12;
    swift_release();
  }
  uint64_t v14 = *(void *)(v9 + v11) + *a5;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)uint64_t v14 = a1;
  *(unsigned char *)(v14 + 4) = 0;
  return result;
}

void (*sub_1001D5124(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_PositionReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource;
  swift_beginAccess();
  int v6 = *(_DWORD *)v5;
  if (*(unsigned char *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D51C4;
}

void sub_1001D51C4(uint64_t *a1, char a2)
{
}

void sub_1001D51F8(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = *a1;
  int v10 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v12 = *(int *)(v9 + 84);
    uint64_t v13 = *(void *)(v9 + 72);
    a3(0);
    uint64_t v14 = swift_allocObject();
    uint64_t v15 = swift_retain();
    a4(v15);
    swift_release();
    *(void *)(v13 + v12) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v16 = *(void *)(*(void *)(v9 + 72) + *(int *)(v9 + 84)) + *a5;
  swift_beginAccess();
  *(_DWORD *)uint64_t v16 = v10;
  *(unsigned char *)(v16 + 4) = 0;

  free((void *)v9);
}

BOOL sub_1001D5308()
{
  return sub_1001D5328(type metadata accessor for Proto_Gnss_Emergency_PositionReport, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
}

BOOL sub_1001D5328(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = *(void *)(v2 + *(int *)(a1(0) + 20)) + *a2;
  swift_beginAccess();
  return (*(unsigned char *)(v3 + 4) & 1) == 0;
}

uint64_t sub_1001D5390()
{
  return sub_1001D53D8(type metadata accessor for Proto_Gnss_Emergency_PositionReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass, (void (*)(uint64_t))sub_10024B620, &OBJC_IVAR____TtCV10ALProtobuf35Proto_Gnss_Emergency_PositionReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__technologySource);
}

uint64_t sub_1001D53D8(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t), void *a4)
{
  uint64_t v8 = v4;
  uint64_t v9 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    a3(v11);
    swift_release();
    *(void *)(v8 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v8 + v9) + *a4;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  return result;
}

uint64_t sub_1001D54B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_PositionReport, &qword_100480B70, &qword_100480B78, a1);
}

uint64_t sub_1001D54EC()
{
  return sub_1000457A4(&qword_100480B70);
}

uint64_t sub_1001D5510()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5528(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5540(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D55A8()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D55C0()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D55D8()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D55F0(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5608(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5670()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5688()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D56A0()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D56B8(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D56D0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5738()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5750()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5768()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5780(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5798(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5800()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5818()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5830()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 36));
  if (v1 == 6) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001D585C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1001D588C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 36);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001D58EC()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 36)) != 6;
}

uint64_t sub_1001D5918()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  *(unsigned char *)(v0 + *(int *)(result + 36)) = 6;
  return result;
}

uint64_t sub_1001D5940()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5958(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5970(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D59D8()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D59F0()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5A08()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5A20(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5A38(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5AA0()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5AB8()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5AD0()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5AE8(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5B00(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5B68()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5B80()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5B98()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5BB0(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t (*sub_1001D5BC8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5C30()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

uint64_t sub_1001D5C48()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement);
}

int *sub_1001D5C60@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementElement(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  *(unsigned char *)(a1 + result[9]) = 6;
  uint64_t v7 = a1 + result[10];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[11];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + result[12];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + result[13];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_1001D5D1C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5D34(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t (*sub_1001D5D4C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5DB4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5DCC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5DE4()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5DFC(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t (*sub_1001D5E14(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5E7C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5E94()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5EAC()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5EC4(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t (*sub_1001D5EDC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D5F44()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5F5C()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D5F74@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, a1);
}

uint64_t sub_1001D5F8C(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t (*sub_1001D5FA4())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001D5FEC@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (char *)a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  v4[4] = 1;
  int v5 = (char *)a1 + v2[7];
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  uint64_t v6 = (char *)a1 + v2[8];
  *(_DWORD *)uint64_t v6 = 0;
  v6[4] = 1;
  return result;
}

uint64_t sub_1001D6064()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0)
                                   + 20));
  if (v1 == 7) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001D6090(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001D60C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100002C18;
}

BOOL sub_1001D6120()
{
  return *(unsigned char *)(v0
                  + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0) + 20)) != 7;
}

uint64_t sub_1001D614C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 7;
  return result;
}

uint64_t sub_1001D6174@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445670);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100445670);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  uint64_t v10 = (char *)a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  v10[4] = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_100445670);
}

uint64_t sub_1001D62D0(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, &qword_100445670, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

void (*sub_1001D6318(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445670);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445670);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    void *v10 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v12 = (char *)v10 + v6[6];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v10 + v6[7];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = (char *)v10 + v6[8];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445670);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
  }
  return sub_1001D64E8;
}

void sub_1001D64E8(uint64_t a1, char a2)
{
}

BOOL sub_1001D651C()
{
  return sub_1001C4450(&qword_100445670, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D6550()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, &qword_100445670, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
}

uint64_t sub_1001D6584@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, 7, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, a1);
}

uint64_t sub_1001D65B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo, a1);
}

uint64_t sub_1001D65CC()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D65E4(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001D6614(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001D6674()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 20)) != 6;
}

uint64_t sub_1001D66A0()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001D66C8()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D66E0(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t (*sub_1001D66F8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D6760()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6778()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6790()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D67A8(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t (*sub_1001D67C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D6828()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6840()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6858()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6870(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t (*sub_1001D6888(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D68F0()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6908()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6920()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D6938(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t (*sub_1001D6950(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D69B8()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D69D0()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D69E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445678);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  sub_100011480(v1 + *(int *)(v6 + 40), (uint64_t)v5, &qword_100445678);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 6;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_10001ACB8((uint64_t)v5, &qword_100445678);
}

uint64_t sub_1001D6B54(uint64_t a1)
{
  return sub_1001D6B9C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, &qword_100445678, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

uint64_t sub_1001D6B9C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v10 = v5 + *(int *)(a2(0) + 40);
  sub_10001ACB8(v10, a3);
  sub_10024A27C(a1, v10, a4);
  uint64_t v11 = a5(0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 0, 1, v11);
}

void (*sub_1001D6C58(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445678);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 40);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445678);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v10[*(int *)(v6 + 20)] = 6;
    uint64_t v12 = &v10[*(int *)(v6 + 24)];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_10001ACB8((uint64_t)v5, &qword_100445678);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
  }
  return sub_1001D6E38;
}

void sub_1001D6E38(uint64_t a1, char a2)
{
}

BOOL sub_1001D6E6C()
{
  return sub_1001D6EA0(&qword_100445678, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

BOOL sub_1001D6EA0(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_100002ED4(a1);
  __chkstk_darwin(v7 - 8);
  size_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2(0);
  sub_100011480(v3 + *(int *)(v10 + 40), (uint64_t)v9, a1);
  uint64_t v11 = a3(0);
  BOOL v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_10001ACB8((uint64_t)v9, a1);
  return v12;
}

uint64_t sub_1001D6F94()
{
  return sub_1001D6FC8(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, &qword_100445678, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
}

uint64_t sub_1001D6FC8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 40);
  sub_10001ACB8(v6, a2);
  uint64_t v7 = a3(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

uint64_t sub_1001D7068()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D7080(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t (*sub_1001D7098(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7100()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D7118()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001D7130@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445680);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  sub_100011480(v1 + *(int *)(v6 + 48), (uint64_t)v5, &qword_100445680);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 7;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_10001ACB8((uint64_t)v5, &qword_100445680);
}

uint64_t sub_1001D729C(uint64_t a1)
{
  return sub_1001F2CB8(a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, &qword_100445680, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
}

void (*sub_1001D72E4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445680);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0) + 48);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_100445680);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v10[*(int *)(v6 + 20)] = 7;
    BOOL v12 = &v10[*(int *)(v6 + 24)];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    sub_10001ACB8((uint64_t)v5, &qword_100445680);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
  }
  return sub_1001D74C4;
}

void sub_1001D74C4(uint64_t a1, char a2)
{
}

BOOL sub_1001D74F8()
{
  return sub_1001F2F9C(&qword_100445680, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
}

uint64_t sub_1001D752C()
{
  return sub_1001F30C4(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements, &qword_100445680, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
}

uint64_t sub_1001D7560@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  *(unsigned char *)(a1 + v2[5]) = 6;
  uint64_t v3 = a1 + v2[6];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + v2[7];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + v2[8];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + v2[9];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[10];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = a1 + v2[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v2[12];
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  BOOL v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(v10, 1, 1, v11);
}

uint64_t sub_1001D7694@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams, a1);
}

uint64_t sub_1001D76AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss, a1);
}

uint64_t sub_1001D76C4()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D76DC(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D76F4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D775C()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7774()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D778C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D77A4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D77BC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7824()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D783C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7854()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D786C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D7884(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D78EC()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7904()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D791C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7934(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D794C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D79B4()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D79CC()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D79E4()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D79FC(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D7A14(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7A7C()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7A94()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7AAC()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7AC4(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D7ADC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7B44()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7B5C()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7B74()
{
  return sub_1001E432C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7B8C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1001D7BBC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 44);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001D7C1C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 44)) != 6;
}

uint64_t sub_1001D7C48()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
  *(unsigned char *)(v0 + *(int *)(result + 44)) = 6;
  return result;
}

uint64_t sub_1001D7C70()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7C88(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D7CA0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7D08()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7D20()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7D38()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7D50(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t (*sub_1001D7D68(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001D7DD0()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

uint64_t sub_1001D7DE8()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement);
}

int *sub_1001D7E00@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsMeasurementElement(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  *(unsigned char *)(a1 + result[11]) = 6;
  uint64_t v9 = a1 + result[12];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + result[13];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_1001D7EBC()
{
  return sub_1001C1290(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001D7ED4(int a1)
{
  return sub_1001D7F14(a1, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass, (void (*)(uint64_t))sub_10022A800);
}

uint64_t sub_1001D7F14(int a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v8 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = swift_retain();
    a4(v10);
    *(void *)(v4 + v8) = v9;
    swift_release();
  }
  uint64_t v11 = *(void *)(v4 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 16) = a1;
  *(unsigned char *)(v11 + 20) = 0;
  return result;
}

void (*sub_1001D7FD4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 16);
  if (*(unsigned char *)(v5 + 20)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D8068;
}

void sub_1001D8068(uint64_t *a1, char a2)
{
}

void sub_1001D8094(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  int v8 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *(int *)(v7 + 84);
    uint64_t v11 = *(void *)(v7 + 72);
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    *(void *)(v11 + v10) = v12;
    swift_release();
  }
LABEL_4:
  uint64_t v14 = *(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 84));
  swift_beginAccess();
  *(_DWORD *)(v14 + 16) = v8;
  *(unsigned char *)(v14 + 20) = 0;

  free((void *)v7);
}

BOOL sub_1001D8188()
{
  return sub_1001C1410(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001D81A0()
{
  return sub_1001D81E0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass, (void (*)(uint64_t))sub_10022A800);
}

uint64_t sub_1001D81E0(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v6 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = swift_retain();
    a3(v8);
    *(void *)(v3 + v6) = v7;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v9 + 16) = 0;
  *(unsigned char *)(v9 + 20) = 1;
  return result;
}

uint64_t sub_1001D82A4()
{
  return sub_1001D82BC(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001D82BC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 28)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 24);
  }
}

uint64_t sub_1001D831C(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10022A800(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 28) = 0;
  return result;
}

void (*sub_1001D83C8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 24);
  if (*(unsigned char *)(v5 + 28)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D845C;
}

void sub_1001D845C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10022A800(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 24) = v4;
  *(unsigned char *)(v10 + 28) = 0;

  free((void *)v3);
}

BOOL sub_1001D8544()
{
  return sub_1001D855C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

BOOL sub_1001D855C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 28) & 1) == 0;
}

uint64_t sub_1001D85B8()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10022A800(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 28) = 1;
  return result;
}

uint64_t sub_1001D865C()
{
  return sub_1001D8674(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001D8674(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 36)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 32);
  }
}

uint64_t sub_1001D86D4(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10022A800(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 32) = a1;
  *(unsigned char *)(v6 + 36) = 0;
  return result;
}

void (*sub_1001D8780(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 32);
  if (*(unsigned char *)(v5 + 36)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D8814;
}

void sub_1001D8814(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10022A800(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 32) = v4;
  *(unsigned char *)(v10 + 36) = 0;

  free((void *)v3);
}

BOOL sub_1001D88FC()
{
  return sub_1001D8914(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

BOOL sub_1001D8914(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 36) & 1) == 0;
}

uint64_t sub_1001D8970()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10022A800(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 36) = 1;
  return result;
}

uint64_t sub_1001D8A14()
{
  return sub_1001D8A2C(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001D8A2C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 44)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 40);
  }
}

uint64_t sub_1001D8A8C(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10022A800(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 40) = a1;
  *(unsigned char *)(v6 + 44) = 0;
  return result;
}

void (*sub_1001D8B38(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 40);
  if (*(unsigned char *)(v5 + 44)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D8BCC;
}

void sub_1001D8BCC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_10022A800(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 40) = v4;
  *(unsigned char *)(v10 + 44) = 0;

  free((void *)v3);
}

BOOL sub_1001D8CB4()
{
  return sub_1001D8CCC(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

BOOL sub_1001D8CCC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 44) & 1) == 0;
}

uint64_t sub_1001D8D28()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_10022A800(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 44) = 1;
  return result;
}

uint64_t sub_1001D8DCC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001D8E1C(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10022A800(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v6 + 48) = a1;
  return swift_bridgeObjectRelease();
}

void (*sub_1001D8ECC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 48);
  swift_bridgeObjectRetain();
  return sub_1001D8F5C;
}

void sub_1001D8F5C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
      uint64_t v6 = swift_allocObject();
      uint64_t v7 = swift_retain();
      sub_10022A800(v7);
      *(void *)(v5 + v4) = v6;
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v8 + 48) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 88);
      uint64_t v10 = *(void *)(v2 + 80);
      type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = swift_retain();
      sub_10022A800(v12);
      *(void *)(v10 + v9) = v11;
      swift_release();
    }
    uint64_t v13 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v13 + 48) = v3;
  }
  swift_bridgeObjectRelease();

  free((void *)v2);
}

uint64_t sub_1001D90C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445688);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445688);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = 6;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return sub_10001ACB8((uint64_t)v5, &qword_100445688);
}

uint64_t sub_1001D9258(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445688);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_10022A800(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445688);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445688);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D9418(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445688);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445688);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 6;
    uint64_t v11 = &v9[*(int *)(v6 + 24)];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasured(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    sub_10001ACB8((uint64_t)v5, &qword_100445688);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  }
  return sub_1001D9610;
}

void sub_1001D9610(uint64_t a1, char a2)
{
}

BOOL sub_1001D963C()
{
  return sub_1001BA454(&qword_100445688, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams, type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
}

uint64_t sub_1001D9678()
{
  uint64_t v1 = sub_100002ED4(&qword_100445688);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_10022A800(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__measuredTimeParams;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445688);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001D97D8()
{
  return sub_1001D4F98(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
}

uint64_t sub_1001D97F8(int a1)
{
  return sub_1001D9908(a1, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
}

void (*sub_1001D9804(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity;
  swift_beginAccess();
  int v6 = *(_DWORD *)v5;
  if (*(unsigned char *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D98A4;
}

void sub_1001D98A4(uint64_t *a1, char a2)
{
}

BOOL sub_1001D98B0()
{
  return sub_1001D5328(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
}

uint64_t sub_1001D98D0()
{
  return sub_1001D9B8C(&OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__codePhaseAmbiguity);
}

uint64_t sub_1001D98DC()
{
  return sub_1001D4F98(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
}

uint64_t sub_1001D98FC(int a1)
{
  return sub_1001D9908(a1, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
}

uint64_t sub_1001D9908(int a1, void *a2)
{
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10022A800(v7);
    *(void *)(v2 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v2 + v5) + *a2;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)uint64_t v8 = a1;
  *(unsigned char *)(v8 + 4) = 0;
  return result;
}

void (*sub_1001D99C0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent;
  swift_beginAccess();
  int v6 = *(_DWORD *)v5;
  if (*(unsigned char *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001D9A60;
}

void sub_1001D9A60(uint64_t *a1, char a2)
{
}

void sub_1001D9A6C(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  int v6 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v8 = *(int *)(v5 + 84);
    uint64_t v9 = *(void *)(v5 + 72);
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_10022A800(v11);
    *(void *)(v9 + v8) = v10;
    swift_release();
  }
LABEL_4:
  uint64_t v12 = *(void *)(*(void *)(v5 + 72) + *(int *)(v5 + 84)) + *a3;
  swift_beginAccess();
  *(_DWORD *)uint64_t v12 = v6;
  *(unsigned char *)(v12 + 4) = 0;

  free((void *)v5);
}

BOOL sub_1001D9B60()
{
  return sub_1001D5328(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
}

uint64_t sub_1001D9B80()
{
  return sub_1001D9B8C(&OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTodpresent);
}

uint64_t sub_1001D9B8C(void *a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_10022A800(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3) + *a1;
  uint64_t result = swift_beginAccess();
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_1001D9C44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004455A8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004455A8);
}

uint64_t sub_1001D9DB8(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004455A8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_10022A800(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004455A8);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004455A8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001D9F78(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004455A8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004455A8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004455A8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
  }
  return sub_1001DA150;
}

void sub_1001DA150(uint64_t a1, char a2)
{
}

BOOL sub_1001DA17C()
{
  return sub_1001BA454(&qword_1004455A8, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
}

uint64_t sub_1001DA1B8()
{
  uint64_t v1 = sub_100002ED4(&qword_1004455A8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_10022A800(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GpsTOD(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf36Proto_Gnss_Emergency_GpsMeasurementsP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsTod;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004455A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DA318@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements, &qword_100480BB0, &qword_100480BB8, a1);
}

uint64_t sub_1001DA350()
{
  return sub_1000457A4(&qword_100480BB0);
}

uint64_t sub_1001DA374()
{
  return sub_1001DA38C(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t sub_1001DA38C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 16) == 9) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v2 + 16);
  }
}

uint64_t sub_1001DA3E8(char a1)
{
  return sub_1001DA428(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80);
}

uint64_t sub_1001DA428(char a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v9 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    a4(v11);
    swift_release();
    *(void *)(v7 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v7 + v9);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v12 + 16) = a1;
  return result;
}

void (*sub_1001DA4F0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 9) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001DA580;
}

void sub_1001DA580(uint64_t *a1, char a2)
{
}

void sub_1001DA5AC(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  char v8 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *(int *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 72);
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    swift_release();
    *(void *)(v11 + v10) = v12;
    swift_release();
  }
LABEL_4:
  uint64_t v14 = (unsigned char *)(*(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 80)) + 16);
  swift_beginAccess();
  unsigned char *v14 = v8;

  free((void *)v7);
}

BOOL sub_1001DA6A8()
{
  return sub_1001DA6C0(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

BOOL sub_1001DA6C0(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v2 + 16) != 9;
}

uint64_t sub_1001DA71C()
{
  return sub_1001DA75C(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80);
}

uint64_t sub_1001DA75C(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v6 = v3;
  uint64_t v7 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    a3(v9);
    swift_release();
    *(void *)(v6 + v7) = v8;
    swift_release();
  }
  uint64_t v10 = *(void *)(v6 + v7);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v10 + 16) = 9;
  return result;
}

uint64_t sub_1001DA820()
{
  return sub_1001DA838(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t sub_1001DA838(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 24)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 20);
  }
}

uint64_t sub_1001DA898(int a1)
{
  return sub_1001DA8D8(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80);
}

uint64_t sub_1001DA8D8(int a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v9 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    a4(v11);
    swift_release();
    *(void *)(v7 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v7 + v9);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v12 + 20) = a1;
  *(unsigned char *)(v12 + 24) = 0;
  return result;
}

void (*sub_1001DA9A4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 20);
  if (*(unsigned char *)(v5 + 24)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001DAA38;
}

void sub_1001DAA38(uint64_t *a1, char a2)
{
}

void sub_1001DAA64(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  int v8 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *(int *)(v7 + 84);
    uint64_t v11 = *(void *)(v7 + 72);
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    swift_release();
    *(void *)(v11 + v10) = v12;
    swift_release();
  }
LABEL_4:
  uint64_t v14 = *(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 84));
  swift_beginAccess();
  *(_DWORD *)(v14 + 20) = v8;
  *(unsigned char *)(v14 + 24) = 0;

  free((void *)v7);
}

BOOL sub_1001DAB60()
{
  return sub_1001DAB78(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

BOOL sub_1001DAB78(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 24) & 1) == 0;
}

uint64_t sub_1001DABD4()
{
  return sub_1001DAC14(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80);
}

uint64_t sub_1001DAC14(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v6 = v3;
  uint64_t v7 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    a3(v9);
    swift_release();
    *(void *)(v6 + v7) = v8;
    swift_release();
  }
  uint64_t v10 = *(void *)(v6 + v7);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v10 + 20) = 0;
  *(unsigned char *)(v10 + 24) = 1;
  return result;
}

uint64_t sub_1001DACDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F4424(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, a1);
}

uint64_t sub_1001DACFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445648);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024BD80(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445648);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DAEC0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445648);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445648);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    v9[v6[6]] = 7;
    uint64_t v11 = &v9[v6[7]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445648);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  }
  return sub_1001DB090;
}

void sub_1001DB090(uint64_t a1, char a2)
{
}

BOOL sub_1001DB0BC()
{
  return sub_1001BA454(&qword_100445648, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001DB0F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445648);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024BD80(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DB25C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F4B20(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, a1);
}

uint64_t sub_1001DB27C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445690);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024BD80(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445690);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445690);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DB440(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445690);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445690);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_100480BB0 != -1) {
      swift_once();
    }
    *(void *)&v9[v11] = qword_100480BB8;
    swift_retain();
    sub_10001ACB8((uint64_t)v5, &qword_100445690);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
  }
  return sub_1001DB628;
}

void sub_1001DB628(uint64_t a1, char a2)
{
}

BOOL sub_1001DB654()
{
  return sub_1001BA454(&qword_100445690, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
}

uint64_t sub_1001DB690()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445690);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024BD80(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__gpsMeasurements;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445690);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DB7F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_100445698);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_100445698);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
  }
  UnknownStorage.init()();
  *(unsigned char *)(a1 + v7[5]) = 6;
  uint64_t v8 = a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[9];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[10];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1 + v7[11];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  uint64_t v15 = a1 + v7[12];
  uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  return sub_10001ACB8((uint64_t)v5, &qword_100445698);
}

uint64_t sub_1001DBA2C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445698);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_retain();
    sub_10024BD80(v12);
    swift_release();
    *(void *)(v2 + v10) = v11;
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v10);
  sub_10024A27C(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_100011278((uint64_t)v9, (uint64_t)v7, &qword_100445698);
  uint64_t v15 = v13
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v7, v15, &qword_100445698);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DBBF0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445698);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445698);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    uint64_t v11 = &v9[v6[6]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[7]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[9]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[10]];
    uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    uint64_t v17 = &v9[v6[11]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    uint64_t v18 = &v9[v6[12]];
    uint64_t v19 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    sub_10001ACB8((uint64_t)v5, &qword_100445698);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
  }
  return sub_1001DBE84;
}

void sub_1001DBE84(uint64_t a1, char a2)
{
}

BOOL sub_1001DBEB0()
{
  return sub_1001BA454(&qword_100445698, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements);
}

uint64_t sub_1001DBEEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100002ED4(&qword_100445698);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0);
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = swift_retain();
    sub_10024BD80(v7);
    swift_release();
    *(void *)(v1 + v5) = v6;
    swift_release();
  }
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurements(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = v8
      + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssMeasurements;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v4, v10, &qword_100445698);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DC050()
{
  return sub_1001D4F98(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements);
}

uint64_t sub_1001DC070(int a1)
{
  return sub_1001D504C(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements);
}

void (*sub_1001DC0B8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements;
  swift_beginAccess();
  int v6 = *(_DWORD *)v5;
  if (*(unsigned char *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001DC158;
}

void sub_1001DC158(uint64_t *a1, char a2)
{
}

BOOL sub_1001DC18C()
{
  return sub_1001D5328(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements);
}

uint64_t sub_1001DC1AC()
{
  return sub_1001D53D8(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__moreGanssMeasurements);
}

uint64_t sub_1001DC1F4()
{
  return sub_1001F5F28(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_1001DC214(char a1)
{
  return sub_1001F5FD4(a1, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

void (*sub_1001DC25C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (unsigned char *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
  swift_beginAccess();
  *((unsigned char *)v3 + 84) = *v5 & 1;
  return sub_1001DC2F4;
}

void sub_1001DC2F4(uint64_t *a1, char a2)
{
}

BOOL sub_1001DC328()
{
  return sub_1001F62A0(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_1001DC348()
{
  return sub_1001F6350(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass, (void (*)(uint64_t))sub_10024BD80, &OBJC_IVAR____TtCV10ALProtobuf38Proto_Gnss_Emergency_MeasurementReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__isMeasInCdmaTime);
}

uint64_t sub_1001DC390@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_MeasurementReport, &qword_100480BC8, &qword_100480BD0, a1);
}

uint64_t sub_1001DC3C8()
{
  return sub_1000457A4(&qword_100480BC8);
}

uint64_t sub_1001DC3EC()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC404(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC41C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC484()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC49C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC4B4()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC4CC(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC4E4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC54C()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC564()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC57C()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC594(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC5AC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC614()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC62C()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC644()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC65C(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC674(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC6DC()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC6F4()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC70C()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC724(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC73C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC7A4()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC7BC()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001DC7D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DFE4C(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, a1);
}

uint64_t sub_1001DC7EC(uint64_t a1)
{
  return sub_1001DFEE4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t (*sub_1001DC804())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001DC84C@<X0>(void *a1@<X8>)
{
  return sub_1001DFFC0(type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, a1);
}

uint64_t sub_1001DC864()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC87C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t (*sub_1001DC894(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC8FC()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC914()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC92C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC944(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t (*sub_1001DC95C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DC9C4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC9DC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem);
}

uint64_t sub_1001DC9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_GanssTimeModelElem, a1);
}

uint64_t sub_1001DCA0C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCA24(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCA3C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCAA4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCABC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCAD4()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCAEC(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCB04(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCB6C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCB84()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCB9C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCBB4(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCBCC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCC34()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCC4C()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCC64()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCC7C(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCC94(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCCFC()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCD14()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCD2C()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCD44(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCD5C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCDC4()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCDDC()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DCDF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist, a1);
}

uint64_t sub_1001DCE0C(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t (*sub_1001DCE24())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001DCE6C@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (char *)a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  v4[4] = 1;
  int v5 = (char *)a1 + v2[7];
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  int v6 = (char *)a1 + v2[8];
  *(_DWORD *)int v6 = 0;
  v6[4] = 1;
  uint64_t v7 = (char *)a1 + v2[9];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  uint64_t v8 = (char *)a1 + v2[10];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  return result;
}

uint64_t sub_1001DCF04()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DCF1C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t (*sub_1001DCF34(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DCF9C()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DCFB4()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DCFCC()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DCFE4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t (*sub_1001DCFFC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD064()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DD07C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem);
}

uint64_t sub_1001DD094@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_GanssStoredSatDataElem, a1);
}

uint64_t sub_1001DD0AC()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD0C4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t (*sub_1001DD0DC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD144()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD15C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD174()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD18C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t (*sub_1001DD1A4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD20C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD224()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD23C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD254(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t (*sub_1001DD26C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD2D4()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD2EC()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD304()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD31C(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t (*sub_1001DD334(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD39C()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD3B4()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DD3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData, a1);
}

uint64_t sub_1001DD3E4(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t (*sub_1001DD3FC())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001DD444@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (char *)a1 + v2[6];
  *(_DWORD *)uint64_t v4 = 0;
  v4[4] = 1;
  int v5 = (char *)a1 + v2[7];
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  int v6 = (char *)a1 + v2[8];
  *(_DWORD *)int v6 = 0;
  v6[4] = 1;
  uint64_t v7 = (char *)a1 + v2[9];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  return result;
}

uint64_t sub_1001DD4CC()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD4E4(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t (*sub_1001DD4FC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD564()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD57C()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD594()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD5AC(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t (*sub_1001DD5C4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD62C()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD644()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD65C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD674(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t (*sub_1001DD68C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD6F4()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD70C()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD724()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD73C(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t (*sub_1001DD754(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DD7BC()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DD7D4()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

int *sub_1001DD7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DD804(type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices, a1);
}

int *sub_1001DD804@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)a1(0);
  uint64_t v5 = a2 + result[5];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a2 + result[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a2 + result[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a2 + result[8];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  return result;
}

uint64_t sub_1001DD87C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 7) {
    return 0;
  }
  else {
    return *(unsigned __int8 *)(v1 + 16);
  }
}

uint64_t sub_1001DD8D0(char a1)
{
  return sub_1001DD910(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass, (void (*)(uint64_t))sub_100231358);
}

uint64_t sub_1001DD910(char a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v8 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = swift_retain();
    a4(v10);
    *(void *)(v4 + v8) = v9;
    swift_release();
  }
  uint64_t v11 = *(void *)(v4 + v8);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v11 + 16) = a1;
  return result;
}

void (*sub_1001DD9CC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 7) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001DDA5C;
}

void sub_1001DDA5C(uint64_t *a1, char a2)
{
}

void sub_1001DDA88(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  char v8 = *(unsigned char *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *(int *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 72);
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    *(void *)(v11 + v10) = v12;
    swift_release();
  }
LABEL_4:
  uint64_t v14 = (unsigned char *)(*(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 80)) + 16);
  swift_beginAccess();
  unsigned char *v14 = v8;

  free((void *)v7);
}

BOOL sub_1001DDB7C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20));
  swift_beginAccess();
  return *(unsigned char *)(v1 + 16) != 7;
}

uint64_t sub_1001DDBD0()
{
  return sub_1001DDC14(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass, (void (*)(uint64_t))sub_100231358, 7);
}

uint64_t sub_1001DDC14(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t), char a4)
{
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = swift_retain();
    a3(v10);
    *(void *)(v4 + v8) = v9;
    swift_release();
  }
  uint64_t v11 = *(void *)(v4 + v8);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v11 + 16) = a4;
  return result;
}

uint64_t sub_1001DDCD4()
{
  return sub_1001DA838(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
}

uint64_t sub_1001DDCEC(int a1)
{
  return sub_1001E0228(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass, (void (*)(uint64_t))sub_100231358);
}

void (*sub_1001DDD2C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 20);
  if (*(unsigned char *)(v5 + 24)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001DDDC0;
}

void sub_1001DDDC0(uint64_t *a1, char a2)
{
}

BOOL sub_1001DDDEC()
{
  return sub_1001DAB78(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss);
}

uint64_t sub_1001DDE04()
{
  return sub_1001E04F4(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass, (void (*)(uint64_t))sub_100231358);
}

uint64_t sub_1001DDE44()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v1 + 28);
  }
}

uint64_t sub_1001DDE9C(int a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_100231358(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v6 + 28) = a1;
  *(unsigned char *)(v6 + 32) = 0;
  return result;
}

void (*sub_1001DDF48(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 28);
  if (*(unsigned char *)(v5 + 32)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001DDFDC;
}

void sub_1001DDFDC(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v6 = *(int *)(v3 + 84);
    uint64_t v7 = *(void *)(v3 + 72);
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = swift_retain();
    sub_100231358(v9);
    *(void *)(v7 + v6) = v8;
    swift_release();
  }
LABEL_4:
  uint64_t v10 = *(void *)(*(void *)(v3 + 72) + *(int *)(v3 + 84));
  swift_beginAccess();
  *(_DWORD *)(v10 + 28) = v4;
  *(unsigned char *)(v10 + 32) = 0;

  free((void *)v3);
}

BOOL sub_1001DE0C4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v1 + 32) & 1) == 0;
}

uint64_t sub_1001DE118()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = swift_retain();
    sub_100231358(v3);
    *(void *)(v0 + v1) = v2;
    swift_release();
  }
  uint64_t v4 = *(void *)(v0 + v1);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v4 + 28) = 0;
  *(unsigned char *)(v4 + 32) = 1;
  return result;
}

uint64_t sub_1001DE1BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1001DE20C(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = swift_retain();
    sub_100231358(v5);
    *(void *)(v1 + v3) = v4;
    swift_release();
  }
  uint64_t v6 = *(void *)(v1 + v3);
  swift_beginAccess();
  *(void *)(v6 + 40) = a1;
  return swift_bridgeObjectRelease();
}

void (*sub_1001DE2BC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  v3[9] = *(void *)(v5 + 40);
  swift_bridgeObjectRetain();
  return sub_1001DE34C;
}

void sub_1001DE34C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  if (a2)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v4 = *(int *)(v2 + 88);
      uint64_t v5 = *(void *)(v2 + 80);
      type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
      uint64_t v6 = swift_allocObject();
      uint64_t v7 = swift_retain();
      sub_100231358(v7);
      *(void *)(v5 + v4) = v6;
      swift_release();
    }
    uint64_t v8 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v8 + 40) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      uint64_t v9 = *(int *)(v2 + 88);
      uint64_t v10 = *(void *)(v2 + 80);
      type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
      uint64_t v11 = swift_allocObject();
      uint64_t v12 = swift_retain();
      sub_100231358(v12);
      *(void *)(v10 + v9) = v11;
      swift_release();
    }
    uint64_t v13 = *(void *)(*(void *)(v2 + 80) + *(int *)(v2 + 88));
    swift_beginAccess();
    *(void *)(v13 + 40) = v3;
  }
  swift_bridgeObjectRelease();

  free((void *)v2);
}

uint64_t sub_1001DE4B4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004456A0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  uint64_t v10 = (char *)a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  v10[4] = 1;
  uint64_t v11 = (char *)a1 + v7[9];
  *(_DWORD *)uint64_t v11 = 0;
  v11[4] = 1;
  uint64_t v12 = (char *)a1 + v7[10];
  *(_DWORD *)uint64_t v12 = 0;
  v12[4] = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004456A0);
}

uint64_t sub_1001DE658(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100231358(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004456A0);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004456A0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DE818(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456A0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004456A0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + v6[6];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + v6[7];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v9 + v6[8];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = (char *)v9 + v6[9];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = (char *)v9 + v6[10];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456A0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  }
  return sub_1001DEA20;
}

void sub_1001DEA20(uint64_t a1, char a2)
{
}

BOOL sub_1001DEA4C()
{
  return sub_1001BA454(&qword_1004456A0, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, &OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
}

uint64_t sub_1001DEA88()
{
  uint64_t v1 = sub_100002ED4(&qword_1004456A0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100231358(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssDataBitAssist;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004456A0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DEBE8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004456A8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
  }
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a1 + v7[7];
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  uint64_t v10 = (char *)a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  v10[4] = 1;
  uint64_t v11 = (char *)a1 + v7[9];
  *(_DWORD *)uint64_t v11 = 0;
  v11[4] = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004456A8);
}

uint64_t sub_1001DED7C(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456A8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100231358(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004456A8);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004456A8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DEF3C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456A8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004456A8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + v6[6];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + v6[7];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v9 + v6[8];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = (char *)v9 + v6[9];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456A8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
  }
  return sub_1001DF134;
}

void sub_1001DF134(uint64_t a1, char a2)
{
}

BOOL sub_1001DF160()
{
  return sub_1001BA454(&qword_1004456A8, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, &OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
}

uint64_t sub_1001DF19C()
{
  uint64_t v1 = sub_100002ED4(&qword_1004456A8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100231358(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssNavModelAddData;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004456A8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DF2FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess();
  sub_100011480(v6, (uint64_t)v5, &qword_1004456B0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004456B0);
}

uint64_t sub_1001DF480(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456B0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_100231358(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004456B0);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004456B0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001DF640(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456B0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004456B0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456B0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
  }
  return sub_1001DF828;
}

void sub_1001DF828(uint64_t a1, char a2)
{
}

BOOL sub_1001DF854()
{
  return sub_1001BA454(&qword_1004456B0, type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, &OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices, type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
}

uint64_t sub_1001DF890()
{
  uint64_t v1 = sub_100002ED4(&qword_1004456B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_100231358(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf44Proto_Gnss_Emergency_GanssAidRequestPerGanssP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAddAssistDataChoices;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004456B0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001DF9F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss, &qword_100480C10, &qword_100480C18, a1);
}

uint64_t sub_1001DFA28()
{
  return sub_1000457A4(&qword_100480C10);
}

uint64_t sub_1001DFA4C()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFA64(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t (*sub_1001DFA7C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DFAE4()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFAFC()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFB14()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFB2C(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t (*sub_1001DFB44(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DFBAC()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFBC4()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFBDC()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFBF4(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t (*sub_1001DFC0C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DFC74()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFC8C()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFCA4()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFCBC(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t (*sub_1001DFCD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DFD3C()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFD54()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFD6C()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFD84(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t (*sub_1001DFD9C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001DFE04()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFE1C()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFE34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001DFE4C(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, a1);
}

uint64_t sub_1001DFE4C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1001DFECC(uint64_t a1)
{
  return sub_1001DFEE4(a1, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001DFEE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t (*sub_1001DFF60())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001DFFA8@<X0>(void *a1@<X8>)
{
  return sub_1001DFFC0(type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, a1);
}

uint64_t sub_1001DFFC0@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  a2[1] = &_swiftEmptyArrayStorage;
  uint64_t v3 = (int *)a1(0);
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = (char *)a2 + v3[7];
  *(_DWORD *)uint64_t v5 = 0;
  v5[4] = 1;
  uint64_t v6 = (char *)a2 + v3[8];
  *(_DWORD *)uint64_t v6 = 0;
  v6[4] = 1;
  uint64_t v7 = (char *)a2 + v3[9];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  uint64_t v8 = (char *)a2 + v3[10];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a2 + v3[11];
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  return result;
}

uint64_t sub_1001E0060()
{
  return sub_1001DA38C(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_1001E0078(char a1)
{
  return sub_1001DD910(a1, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass, (void (*)(uint64_t))sub_1002341A4);
}

void (*sub_1001E00B8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 9) {
    LOBYTE(v6) = 0;
  }
  *((unsigned char *)v3 + 84) = v6;
  return sub_1001E0148;
}

void sub_1001E0148(uint64_t *a1, char a2)
{
}

BOOL sub_1001E0174()
{
  return sub_1001DA6C0(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_1001E018C()
{
  return sub_1001DDC14(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass, (void (*)(uint64_t))sub_1002341A4, 9);
}

uint64_t sub_1001E01D0()
{
  return sub_1001DA838(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_1001E01E8(int a1)
{
  return sub_1001E0228(a1, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass, (void (*)(uint64_t))sub_1002341A4);
}

uint64_t sub_1001E0228(int a1, uint64_t (*a2)(void), void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v8 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a3(0);
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = swift_retain();
    a4(v10);
    *(void *)(v4 + v8) = v9;
    swift_release();
  }
  uint64_t v11 = *(void *)(v4 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 20) = a1;
  *(unsigned char *)(v11 + 24) = 0;
  return result;
}

void (*sub_1001E02E8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 20);
  if (*(unsigned char *)(v5 + 24)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E037C;
}

void sub_1001E037C(uint64_t *a1, char a2)
{
}

void sub_1001E03A8(uint64_t *a1, char a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v7 = *a1;
  int v8 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v10 = *(int *)(v7 + 84);
    uint64_t v11 = *(void *)(v7 + 72);
    a3(0);
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = swift_retain();
    a4(v13);
    *(void *)(v11 + v10) = v12;
    swift_release();
  }
LABEL_4:
  uint64_t v14 = *(void *)(*(void *)(v7 + 72) + *(int *)(v7 + 84));
  swift_beginAccess();
  *(_DWORD *)(v14 + 20) = v8;
  *(unsigned char *)(v14 + 24) = 0;

  free((void *)v7);
}

BOOL sub_1001E049C()
{
  return sub_1001DAB78(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_1001E04B4()
{
  return sub_1001E04F4(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass, (void (*)(uint64_t))sub_1002341A4);
}

uint64_t sub_1001E04F4(uint64_t (*a1)(void), void (*a2)(void), void (*a3)(uint64_t))
{
  uint64_t v6 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a2(0);
    uint64_t v7 = swift_allocObject();
    uint64_t v8 = swift_retain();
    a3(v8);
    *(void *)(v3 + v6) = v7;
    swift_release();
  }
  uint64_t v9 = *(void *)(v3 + v6);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v9 + 20) = 0;
  *(unsigned char *)(v9 + 24) = 1;
  return result;
}

uint64_t sub_1001E05B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F4424(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, a1);
}

uint64_t sub_1001E05D8(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_100445648);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_1002341A4(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_100445648);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001E0798(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_100445648);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_100445648);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 6;
    v9[v6[6]] = 7;
    uint64_t v11 = &v9[v6[7]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_100445648);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  }
  return sub_1001E0968;
}

void sub_1001E0968(uint64_t a1, char a2)
{
}

BOOL sub_1001E0994()
{
  return sub_1001BA454(&qword_100445648, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
}

uint64_t sub_1001E09D0()
{
  uint64_t v1 = sub_100002ED4(&qword_100445648);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_1002341A4(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_SessionInfo(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__sessionInfo;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_100445648);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001E0B30@<X0>(void *a1@<X8>)
{
  return sub_1001E1138(&qword_1004456B8, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest, a1);
}

uint64_t sub_1001E0B6C(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456B8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_1002341A4(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004456B8);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004456B8);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001E0D2C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456B8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004456B8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    v9[1] = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + v6[7];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + v6[8];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v9 + v6[9];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = (char *)v9 + v6[10];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = (char *)v9 + v6[11];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456B8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
  }
  return sub_1001E0F34;
}

void sub_1001E0F34(uint64_t a1, char a2)
{
}

BOOL sub_1001E0F60()
{
  return sub_1001BA454(&qword_1004456B8, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
}

uint64_t sub_1001E0F9C()
{
  uint64_t v1 = sub_100002ED4(&qword_1004456B8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_1002341A4(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__assistanceRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004456B8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001E10FC@<X0>(void *a1@<X8>)
{
  return sub_1001E1138(&qword_1004456C0, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest, a1);
}

uint64_t sub_1001E1138@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v11 = sub_100002ED4(a1);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20))
      + *a2;
  swift_beginAccess();
  sub_100011480(v14, (uint64_t)v13, a1);
  uint64_t v15 = (int *)a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v15 - 1) + 48))(v13, 1, v15) != 1) {
    return sub_10024A27C((uint64_t)v13, (uint64_t)a5, a4);
  }
  *a5 = &_swiftEmptyArrayStorage;
  a5[1] = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v16 = (char *)a5 + v15[7];
  *(_DWORD *)uint64_t v16 = 0;
  v16[4] = 1;
  uint64_t v17 = (char *)a5 + v15[8];
  *(_DWORD *)uint64_t v17 = 0;
  v17[4] = 1;
  uint64_t v18 = (char *)a5 + v15[9];
  *(_DWORD *)uint64_t v18 = 0;
  v18[4] = 1;
  uint64_t v19 = (char *)a5 + v15[10];
  *(_DWORD *)uint64_t v19 = 0;
  v19[4] = 1;
  uint64_t v20 = (char *)a5 + v15[11];
  *(_DWORD *)uint64_t v20 = 0;
  v20[4] = 1;
  return sub_10001ACB8((uint64_t)v13, a1);
}

uint64_t sub_1001E12DC(uint64_t a1)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456C0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = swift_retain();
    sub_1002341A4(v11);
    *(void *)(v1 + v9) = v10;
    swift_release();
  }
  uint64_t v12 = *(void *)(v1 + v9);
  sub_10024A27C(a1, (uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_100011278((uint64_t)v8, (uint64_t)v6, &qword_1004456C0);
  uint64_t v14 = v12
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v6, v14, &qword_1004456C0);
  swift_endAccess();
  return swift_release();
}

void (*sub_1001E149C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456C0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  uint64_t v10 = *(void *)(v1 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20))
      + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  swift_beginAccess();
  sub_100011480(v10, (uint64_t)v5, &qword_1004456C0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    v9[1] = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + v6[7];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + v6[8];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = (char *)v9 + v6[9];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = (char *)v9 + v6[10];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = (char *)v9 + v6[11];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456C0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
  }
  return sub_1001E16A4;
}

void sub_1001E16A4(uint64_t a1, char a2)
{
}

BOOL sub_1001E16D0()
{
  return sub_1001BA454(&qword_1004456C0, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest, type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
}

uint64_t sub_1001E170C()
{
  uint64_t v1 = sub_100002ED4(&qword_1004456C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = swift_retain();
    sub_1002341A4(v6);
    *(void *)(v0 + v4) = v5;
    swift_release();
  }
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = v7
     + OBJC_IVAR____TtCV10ALProtobuf43Proto_Gnss_Emergency_AssistanceNeededReportP33_A557130C73F8FFB56F85D28EDB16AF9913_StorageClass__ganssAssistanceRequest;
  swift_beginAccess();
  swift_retain();
  sub_1000112DC((uint64_t)v3, v9, &qword_1004456C0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1001E186C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BB4B0(type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport, &qword_100480C30, &qword_100480C38, a1);
}

uint64_t sub_1001E18A4()
{
  return sub_1000457A4(&qword_100480C30);
}

uint64_t sub_1001E18C8()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t sub_1001E18E0(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t (*sub_1001E18F8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1960()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t sub_1001E1978()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t sub_1001E1990@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, a1);
}

uint64_t sub_1001E19A8(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_EutranCellTime);
}

uint64_t (*sub_1001E19C0())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001E1A08@<X0>(void *a1@<X8>)
{
  return sub_1001E1A20(type metadata accessor for Proto_Gnss_Emergency_EutranCellTime, a1);
}

uint64_t sub_1001E1A20@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  uint64_t v3 = a1(0);
  uint64_t result = UnknownStorage.init()();
  int v5 = (char *)a2 + *(int *)(v3 + 24);
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t sub_1001E1A80()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1A98(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1AB0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1B18()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1B30()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1B48()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1B60(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1B78(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1BE0()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1BF8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1C10()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1C28(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1C40(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1CA8()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1CC0()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1CD8()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1CF0(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1D08(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1D70()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1D88()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1DA0()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1DB8(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1DD0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1E38()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1E50()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1E68()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1E80(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1E98(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1F00()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1F18()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1F30()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1F48(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t (*sub_1001E1F60(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E1FC8()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

uint64_t sub_1001E1FE0()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime);
}

int *sub_1001E1FF8@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_ClsGeranCellTime(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + result[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  return result;
}

uint64_t sub_1001E2098()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E20B0(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t (*sub_1001E20C8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E2130()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E2148()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E2160()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E2178(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t (*sub_1001E2190(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E21F8()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E2210()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E2228@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C39BC(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_1001E2240()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2258(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_1001E2270(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E22D8()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E22F0()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2308()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2320(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_1001E2338(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E23A0()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E23B8()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E23D0()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E23E8(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t (*sub_1001E2400(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E2468()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2480()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

int *sub_1001E2498@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C546C(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, a1);
}

uint64_t sub_1001E24B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E24F8(&qword_1004456C8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_1001E24F8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100002ED4(a1);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2(0);
  sub_100011480(v5 + *(int *)(v14 + 20), (uint64_t)v13, a1);
  uint64_t v15 = a3(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15) != 1) {
    return sub_10024A27C((uint64_t)v13, a5, a4);
  }
  UnknownStorage.init()();
  uint64_t v16 = a5 + *(int *)(v15 + 20);
  *(_DWORD *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 4) = 1;
  uint64_t v17 = a5 + *(int *)(v15 + 24);
  *(_DWORD *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 4) = 1;
  return sub_10001ACB8((uint64_t)v13, a1);
}

uint64_t sub_1001E263C(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, &qword_1004456C8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

void (*sub_1001E2684(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456C8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004456C8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456C8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
  }
  return sub_1001E2834;
}

void sub_1001E2834(uint64_t a1, char a2)
{
}

BOOL sub_1001E2868()
{
  return sub_1001C06D4(&qword_1004456C8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E289C()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, &qword_1004456C8, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001E28D0()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E28E8(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t (*sub_1001E2900(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E2968()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E2980()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E2998()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E29B0(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t (*sub_1001E29C8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E2A30()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E2A48()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E2A60@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = a1 + v2[6];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[7];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_1001E2B04@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime, a1);
}

uint64_t sub_1001E2B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456D0);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_100011480(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_1004456D0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004456D0);
}

uint64_t sub_1001E2C68(uint64_t a1)
{
  return sub_1001EE0B0(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1004456D0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

void (*sub_1001E2CB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456D0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 20);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004456D0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    *(_DWORD *)uint64_t v12 = 0;
    v12[4] = 1;
    uint64_t v13 = &v10[v6[6]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v10[v6[7]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456D0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
  }
  return sub_1001E2E70;
}

void sub_1001E2E70(uint64_t a1, char a2)
{
}

BOOL sub_1001E2EA4()
{
  return sub_1001C06D4(&qword_1004456D0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2ED8()
{
  return sub_1001C07FC(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1004456D0, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
}

uint64_t sub_1001E2F0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456D8);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1004456D8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[6];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[7];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  return sub_10001ACB8((uint64_t)v5, &qword_1004456D8);
}

uint64_t sub_1001E3098(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1004456D8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

void (*sub_1001E30E0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456D8);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004456D8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[v6[5]];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[v6[6]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v10[v6[7]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    sub_10001ACB8((uint64_t)v5, &qword_1004456D8);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
  }
  return sub_1001E32D8;
}

void sub_1001E32D8(uint64_t a1, char a2)
{
}

BOOL sub_1001E330C()
{
  return sub_1001C4450(&qword_1004456D8, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E3340()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, &qword_1004456D8, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
}

uint64_t sub_1001E3374@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E33B4(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, a1);
}

uint64_t sub_1001E33B4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  UnknownStorage.init()();
  uint64_t v8 = a1(0);
  uint64_t v9 = a4 + *(int *)(v8 + 20);
  uint64_t v10 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = a4 + *(int *)(v8 + 24);
  uint64_t v12 = a3(0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(v11, 1, 1, v12);
}

uint64_t sub_1001E34A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime, a1);
}

uint64_t sub_1001E34C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime, a1);
}

uint64_t sub_1001E34D8()
{
  return sub_1001C4B64(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
}

uint64_t sub_1001E34F0(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_1001E3520(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 20);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001E3580()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 20)) != 6;
}

uint64_t sub_1001E35AC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  *(unsigned char *)(v0 + *(int *)(result + 20)) = 6;
  return result;
}

uint64_t sub_1001E35D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100002ED4(&qword_1004456E0);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0);
  sub_100011480(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_1004456E0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) != 1) {
    return sub_10024A27C((uint64_t)v5, a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  }
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + *(int *)(v7 + 24);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return sub_10001ACB8((uint64_t)v5, &qword_1004456E0);
}

uint64_t sub_1001E377C(uint64_t a1)
{
  return sub_1001EE55C(a1, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, &qword_1004456E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

void (*sub_1001E37C4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100002ED4(&qword_1004456E0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  v3[3] = v7;
  size_t v9 = *(void *)(v7 + 64);
  v3[4] = malloc(v9);
  uint64_t v10 = (char *)malloc(v9);
  v3[5] = v10;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0) + 24);
  *((_DWORD *)v3 + 12) = v11;
  sub_100011480(v1 + v11, (uint64_t)v5, &qword_1004456E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v12 = &v10[*(int *)(v6 + 20)];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = &v10[*(int *)(v6 + 24)];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    sub_10001ACB8((uint64_t)v5, &qword_1004456E0);
  }
  else
  {
    sub_10024A27C((uint64_t)v5, (uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
  }
  return sub_1001E39E0;
}

void sub_1001E39E0(uint64_t a1, char a2)
{
}

BOOL sub_1001E3A14()
{
  return sub_1001C4450(&qword_1004456E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_1001E3A48()
{
  return sub_1001C4578(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, &qword_1004456E0, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
}

uint64_t sub_1001E3A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CA4BC(type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance, 6, type metadata accessor for Proto_Gnss_Emergency_CellTimeData, a1);
}

uint64_t sub_1001E3AAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BC410(type metadata accessor for Proto_Gnss_Emergency_CellTimeData, a1);
}

uint64_t sub_1001E3AC4()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3ADC(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_1001E3AF4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3B5C()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3B74()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3B8C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3BA4(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_1001E3BBC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3C24()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3C3C()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3C54()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3C6C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_1001E3C84(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3CEC()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3D04()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3D1C()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3D34(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_1001E3D4C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3DB4()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3DCC()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3DE4()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3DFC(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t (*sub_1001E3E14(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_TowAssist(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3E7C()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

uint64_t sub_1001E3E94()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_TowAssist);
}

int *sub_1001E3EAC@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_TowAssist(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  return result;
}

uint64_t sub_1001E3F2C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E3F44(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E3F5C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E3FC4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E3FDC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E3FF4()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E400C(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E4024(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E408C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E40A4()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E40BC()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E40D4(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E40EC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4154()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E416C()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E4184()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E419C(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E41B4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E421C()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E4234()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E424C()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E4264(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E427C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E42E4()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E42FC()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E4314()
{
  return sub_1001E432C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E432C(uint64_t (*a1)(void))
{
  unsigned int v2 = *(unsigned __int8 *)(v1 + *(int *)(a1(0) + 44));
  if (v2 == 6) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t sub_1001E4360(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1001E4390(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 44);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001E43F0()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 44)) != 6;
}

uint64_t sub_1001E441C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(unsigned char *)(v0 + *(int *)(result + 44)) = 6;
  return result;
}

uint64_t sub_1001E4444()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48));
  if (v1 == 7) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001E4470(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_1001E44A0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001E4500()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 48)) != 7;
}

uint64_t sub_1001E452C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  *(unsigned char *)(v0 + *(int *)(result + 48)) = 7;
  return result;
}

uint64_t sub_1001E4554()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E456C(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E4584(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E45EC()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E4604()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1001E461C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B8BD4(type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime, a1);
}

uint64_t sub_1001E4634(uint64_t a1)
{
  return sub_1001B8C6C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t (*sub_1001E464C())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1001E4694@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  unsigned int v2 = (int *)type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0);
  uint64_t result = UnknownStorage.init()();
  int v4 = (char *)a1 + v2[6];
  *(_DWORD *)int v4 = 0;
  v4[4] = 1;
  int v5 = (char *)a1 + v2[7];
  *(_DWORD *)int v5 = 0;
  v5[4] = 1;
  uint64_t v6 = (char *)a1 + v2[8];
  *(_DWORD *)uint64_t v6 = 0;
  v6[4] = 1;
  uint64_t v7 = (char *)a1 + v2[9];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  uint64_t v8 = (char *)a1 + v2[10];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  *((unsigned char *)a1 + v2[11]) = 6;
  *((unsigned char *)a1 + v2[12]) = 7;
  size_t v9 = (char *)a1 + v2[13];
  *(_DWORD *)size_t v9 = 0;
  v9[4] = 1;
  return result;
}

uint64_t sub_1001E4754()
{
  return sub_1001B7918(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E476C(int a1)
{
  return sub_1001B796C(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4784(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 20);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E47EC()
{
  return sub_1001B7A28(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4804()
{
  return sub_1001B7A78(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E481C()
{
  return sub_1001B66A0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4834(int a1)
{
  return sub_1001B66F4(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E484C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 24);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E48B4()
{
  return sub_1001B67B0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E48CC()
{
  return sub_1001B6800(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E48E4()
{
  return sub_1001B6850(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E48FC(int a1)
{
  return sub_1001B68A4(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4914(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 28);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E497C()
{
  return sub_1001B6960(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4994()
{
  return sub_1001B69B0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E49AC()
{
  return sub_1001B6A00(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E49C4(int a1)
{
  return sub_1001B6A54(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E49DC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 32);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4A44()
{
  return sub_1001B6B10(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4A5C()
{
  return sub_1001B6B60(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4A74()
{
  return sub_1001B6BB0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4A8C(int a1)
{
  return sub_1001B6C04(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4AA4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4B0C()
{
  return sub_1001B6CC0(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4B24()
{
  return sub_1001B6D10(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4B3C()
{
  return sub_1001B7178(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4B54(int a1)
{
  return sub_1001B71CC(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4B6C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4BD4()
{
  return sub_1001B7288(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4BEC()
{
  return sub_1001B72D8(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4C04()
{
  return sub_1001C8084(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4C1C(int a1)
{
  return sub_1001C80D8(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4C34(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 44);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4C9C()
{
  return sub_1001C8194(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4CB4()
{
  return sub_1001C81E4(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4CCC()
{
  return sub_1001B7438(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4CE4(int a1)
{
  return sub_1001B748C(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4CFC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 48);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4D64()
{
  return sub_1001B7548(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4D7C()
{
  return sub_1001B7598(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4D94()
{
  return sub_1001C82FC(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4DAC(int a1)
{
  return sub_1001C8350(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4DC4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4E2C()
{
  return sub_1001C840C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4E44()
{
  return sub_1001C845C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4E5C()
{
  return sub_1001C84AC(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4E74(int a1)
{
  return sub_1001C8500(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t (*sub_1001E4E8C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 56);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E4EF4()
{
  return sub_1001C85BC(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4F0C()
{
  return sub_1001C860C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4F24()
{
  return sub_1001E4F3C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4F3C(uint64_t (*a1)(void))
{
  unsigned int v2 = (unsigned char *)(v1 + *(int *)(a1(0) + 60));
  if (v2[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v2;
  }
}

uint64_t sub_1001E4F78(int a1)
{
  return sub_1001E4F90(a1, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E4F90(int a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  uint64_t v5 = v2 + *(int *)(result + 60);
  *(_DWORD *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1001E4FCC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 60);
  *(_DWORD *)(a1 + 12) = v3;
  int v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E5034()
{
  return sub_1001E504C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

BOOL sub_1001E504C(uint64_t (*a1)(void))
{
  return (*(unsigned char *)(v1 + *(int *)(a1(0) + 60) + 4) & 1) == 0;
}

uint64_t sub_1001E5084()
{
  return sub_1001E509C(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E509C(uint64_t (*a1)(void))
{
  uint64_t result = a1(0);
  uint64_t v3 = v1 + *(int *)(result + 60);
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_1001E50D4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64));
  if (v1 == 6) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_1001E5100(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(unsigned char *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*sub_1001E5130(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001E5190()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 64)) != 6;
}

uint64_t sub_1001E51BC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(unsigned char *)(v0 + *(int *)(result + 64)) = 6;
  return result;
}

uint64_t sub_1001E51E4()
{
  return sub_1001EFD28(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1001E51FC(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(unsigned char *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_1001E522C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 68);
  *(_DWORD *)(a1 + 8) = v3;
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(unsigned char *)(a1 + 12) = v4;
  return sub_100003BB0;
}

BOOL sub_1001E528C()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 68)) != 7;
}

uint64_t sub_1001E52B8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  *(unsigned char *)(v0 + *(int *)(result + 68)) = 7;
  return result;
}

uint64_t sub_1001E52E0()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72));
  if (v1[4]) {
    return 0;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_1001E5314(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  uint64_t v4 = v1 + *(int *)(result + 72);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_1001E534C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72);
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v4 = (int *)(v1 + v3);
  if (*((unsigned char *)v4 + 4)) {
    int v5 = 0;
  }
  else {
    int v5 = *v4;
  }
  *(_DWORD *)(a1 + 8) = v5;
  return sub_1000029C4;
}

BOOL sub_1001E53B4()
{
  return (*(unsigned char *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0) + 72) + 4) & 1) == 0;
}

uint64_t sub_1001E53E4()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  uint64_t v2 = v0 + *(int *)(result + 72);
  *(_DWORD *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 4) = 1;
  return result;
}

int *sub_1001E5414@<X0>(uint64_t a1@<X8>)
{
  UnknownStorage.init()();
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(unsigned char *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 4) = 1;
  uint64_t v9 = a1 + result[11];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  uint64_t v10 = a1 + result[12];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  uint64_t v11 = a1 + result[13];
  *(_DWORD *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 4) = 1;
  uint64_t v12 = a1 + result[14];
  *(_DWORD *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 4) = 1;
  uint64_t v13 = a1 + result[15];
  *(_DWORD *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 4) = 1;
  *(unsigned char *)(a1 + result[16]) = 6;
  *(unsigned char *)(a1 + result[17]) = 7;
  uint64_t v14 = a1 + result[18];
  *(_DWORD *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 4) = 1;
  return result;
}

uint64_t sub_1001E551C()
{
  return sub_1001C1290(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E5534(int a1)
{
  return sub_1001E5578(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E5578(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 20) = 0;
  return result;
}

void (*sub_1001E563C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 16);
  if (*(unsigned char *)(v5 + 20)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E56D0;
}

void sub_1001E56D0(uint64_t *a1, char a2)
{
}

void sub_1001E5700(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 16) = v9;
  *(unsigned char *)(v15 + 20) = 0;

  free((void *)v8);
}

BOOL sub_1001E57F8()
{
  return sub_1001C1410(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E5810()
{
  return sub_1001E5854(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E5854(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 16) = 0;
  *(unsigned char *)(v11 + 20) = 1;
  return result;
}

uint64_t sub_1001E5914()
{
  return sub_1001D82BC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E592C(int a1)
{
  return sub_1001E5970(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E5970(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 24) = a1;
  *(unsigned char *)(v13 + 28) = 0;
  return result;
}

void (*sub_1001E5A34(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 24);
  if (*(unsigned char *)(v5 + 28)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E5AC8;
}

void sub_1001E5AC8(uint64_t *a1, char a2)
{
}

void sub_1001E5AF8(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 24) = v9;
  *(unsigned char *)(v15 + 28) = 0;

  free((void *)v8);
}

BOOL sub_1001E5BF0()
{
  return sub_1001D855C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E5C08()
{
  return sub_1001E5C4C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E5C4C(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 24) = 0;
  *(unsigned char *)(v11 + 28) = 1;
  return result;
}

uint64_t sub_1001E5D0C()
{
  return sub_1001D8674(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E5D24(int a1)
{
  return sub_1001E5D68(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E5D68(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 32) = a1;
  *(unsigned char *)(v13 + 36) = 0;
  return result;
}

void (*sub_1001E5E2C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 32);
  if (*(unsigned char *)(v5 + 36)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E5EC0;
}

void sub_1001E5EC0(uint64_t *a1, char a2)
{
}

void sub_1001E5EF0(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 32) = v9;
  *(unsigned char *)(v15 + 36) = 0;

  free((void *)v8);
}

BOOL sub_1001E5FE8()
{
  return sub_1001D8914(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E6000()
{
  return sub_1001E6044(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E6044(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 32) = 0;
  *(unsigned char *)(v11 + 36) = 1;
  return result;
}

uint64_t sub_1001E6104()
{
  return sub_1001D8A2C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E611C(int a1)
{
  return sub_1001E6160(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E6160(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 40) = a1;
  *(unsigned char *)(v13 + 44) = 0;
  return result;
}

void (*sub_1001E6224(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 40);
  if (*(unsigned char *)(v5 + 44)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E62B8;
}

void sub_1001E62B8(uint64_t *a1, char a2)
{
}

void sub_1001E62E8(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 40) = v9;
  *(unsigned char *)(v15 + 44) = 0;

  free((void *)v8);
}

BOOL sub_1001E63E0()
{
  return sub_1001D8CCC(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E63F8()
{
  return sub_1001E643C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E643C(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 40) = 0;
  *(unsigned char *)(v11 + 44) = 1;
  return result;
}

uint64_t sub_1001E64FC()
{
  return sub_1001E6514(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E6514(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 52)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 48);
  }
}

uint64_t sub_1001E6574(int a1)
{
  return sub_1001E65B8(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E65B8(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 48) = a1;
  *(unsigned char *)(v13 + 52) = 0;
  return result;
}

void (*sub_1001E667C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 48);
  if (*(unsigned char *)(v5 + 52)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E6710;
}

void sub_1001E6710(uint64_t *a1, char a2)
{
}

void sub_1001E6740(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 48) = v9;
  *(unsigned char *)(v15 + 52) = 0;

  free((void *)v8);
}

BOOL sub_1001E6838()
{
  return sub_1001E6850(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_1001E6850(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 52) & 1) == 0;
}

uint64_t sub_1001E68AC()
{
  return sub_1001E68F0(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E68F0(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 48) = 0;
  *(unsigned char *)(v11 + 52) = 1;
  return result;
}

uint64_t sub_1001E69B0()
{
  return sub_1001E69C8(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E69C8(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 60)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 56);
  }
}

uint64_t sub_1001E6A28(int a1)
{
  return sub_1001E6A6C(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E6A6C(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 56) = a1;
  *(unsigned char *)(v13 + 60) = 0;
  return result;
}

void (*sub_1001E6B30(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 56);
  if (*(unsigned char *)(v5 + 60)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E6BC4;
}

void sub_1001E6BC4(uint64_t *a1, char a2)
{
}

void sub_1001E6BF4(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 56) = v9;
  *(unsigned char *)(v15 + 60) = 0;

  free((void *)v8);
}

BOOL sub_1001E6CEC()
{
  return sub_1001E6D04(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

BOOL sub_1001E6D04(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  return (*(unsigned char *)(v2 + 60) & 1) == 0;
}

uint64_t sub_1001E6D60()
{
  return sub_1001E6DA4(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E6DA4(uint64_t (*a1)(void), void (*a2)(void), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = v4;
  uint64_t v8 = *(int *)(a1(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v9 = *(void *)(v4 + v8);
    a2();
    uint64_t v10 = swift_allocObject();
    a4(v9);
    *(void *)(v7 + v8) = v10;
    swift_release();
  }
  uint64_t v11 = *(void *)(v7 + v8);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v11 + 56) = 0;
  *(unsigned char *)(v11 + 60) = 1;
  return result;
}

uint64_t sub_1001E6E64()
{
  return sub_1001E6E7C(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris);
}

uint64_t sub_1001E6E7C(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 20));
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 68)) {
    return 0;
  }
  else {
    return *(unsigned int *)(v2 + 64);
  }
}

uint64_t sub_1001E6EDC(int a1)
{
  return sub_1001E6F20(a1, type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris, (void (*)(void))type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris._StorageClass, 285, (void (*)(uint64_t))sub_10024C4EC);
}

uint64_t sub_1001E6F20(int a1, uint64_t (*a2)(void), void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5;
  uint64_t v10 = *(int *)(a2(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v11 = *(void *)(v5 + v10);
    a3();
    uint64_t v12 = swift_allocObject();
    a5(v11);
    *(void *)(v8 + v10) = v12;
    swift_release();
  }
  uint64_t v13 = *(void *)(v8 + v10);
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v13 + 64) = a1;
  *(unsigned char *)(v13 + 68) = 0;
  return result;
}

void (*sub_1001E6FE4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Emergency_GpsEphemeris(0) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess();
  int v6 = *(_DWORD *)(v5 + 64);
  if (*(unsigned char *)(v5 + 68)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1001E7078;
}

void sub_1001E7078(uint64_t *a1, char a2)
{
}

void sub_1001E70A8(uint64_t *a1, char a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8 = *a1;
  int v9 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (a2)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v11 = *(int *)(v8 + 84);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = *(void *)(v12 + v11);
    a3();
    uint64_t v14 = swift_allocObject();
    a5(v13);
    *(void *)(v12 + v11) = v14;
    swift_release();
  }
LABEL_4:
  uint64_t v15 = *(void *)(*(void *)(v8 + 72) + *(int *)(v8 + 84));
  swift_beginAccess();
  *(_DWORD *)(v15 + 64) = v9;
  *(unsigned char *)(v15 + 68) = 0;

  free((void *)v8);
}