uint64_t sub_1005B4ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t vars8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 72);
  v5 = type metadata accessor for HardwareAttestationType();
  v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = (void *)(a1 + *(int *)(a2 + 152));
  if (v7[1] != 1)
  {
    swift_bridgeObjectRelease();
    if (v7[104] != 1)
    {
      if (v7[2] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[6] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[10] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[14] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[18] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[22] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[26] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[30] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[34] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[38] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[42] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[46] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[50] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[54] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[58] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[62] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[66] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[70] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[74] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[78] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[82] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[86] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[90] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[94] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[208] != 1)
    {
      if (v7[106] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[110] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[114] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[118] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[122] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[126] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[130] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[134] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[138] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[142] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[146] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[150] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[154] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[158] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[162] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[166] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[170] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[174] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[178] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[182] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[186] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[190] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[194] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[198] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[312] != 1)
    {
      if (v7[210] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[214] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[218] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[222] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[226] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[230] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[234] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[238] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[242] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[246] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[250] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[254] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[258] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[262] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[266] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[270] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[274] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[278] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[282] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[286] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[290] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[294] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[298] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[302] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[416] != 1)
    {
      if (v7[314] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[318] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[322] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[326] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[330] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[334] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[338] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[342] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[346] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[350] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[354] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[358] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[362] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[366] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[370] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[374] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[378] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[382] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[386] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[390] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[394] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[398] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[402] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[406] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[520] != 1)
    {
      if (v7[418] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[422] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[426] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[430] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[434] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[438] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[442] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[446] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[450] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[454] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[458] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[462] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[466] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[470] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[474] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[478] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[482] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[486] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[490] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[494] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[498] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[502] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[506] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[510] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[624] != 1)
    {
      if (v7[522] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[526] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[530] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[534] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[538] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[542] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[546] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[550] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[554] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[558] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[562] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[566] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[570] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[574] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[578] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[582] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[586] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[590] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[594] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[598] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[602] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[606] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[610] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[614] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v7[728] != 1)
    {
      if (v7[626] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[630] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[634] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[638] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[642] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[646] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[650] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[654] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[658] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[662] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[666] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[670] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[674] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[678] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[682] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[686] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[690] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[694] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[698] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[702] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[706] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[710] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[714] != 1) {
        swift_bridgeObjectRelease();
      }
      if (v7[718] != 1) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005B57D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  uint64_t v12 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v12;
  uint64_t v13 = *(void *)(a2 + 168);
  uint64_t v14 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v15 = a3[18];
  __dst = (void *)(a1 + v15);
  v243 = (const void *)(a2 + v15);
  *(void *)(a1 + 168) = v13;
  *(void *)(a1 + 176) = v14;
  uint64_t v16 = type metadata accessor for HardwareAttestationType();
  uint64_t v242 = *(void *)(v16 - 8);
  v244 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v242 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v244(v243, 1, v16))
  {
    uint64_t v17 = sub_100007764(&qword_100722310);
    memcpy(__dst, v243, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v242 + 16))(__dst, v243, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v242 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v18 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[21];
  uint64_t v20 = a3[22];
  v21 = (void *)(a1 + v19);
  v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v24 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[27];
  uint64_t v27 = a3[28];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v30 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  uint64_t v31 = a3[31];
  uint64_t v32 = a3[32];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a3[33];
  uint64_t v38 = a3[34];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(void *)uint64_t v41 = *(void *)v42;
  *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
  uint64_t v43 = a3[35];
  uint64_t v44 = a3[36];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v47 = a3[38];
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  uint64_t v48 = a1 + v47;
  v49 = (void *)(a2 + v47);
  uint64_t v50 = *(void *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50 == 1)
  {
    memcpy((void *)v48, v49, 0x1721uLL);
  }
  else
  {
    *(void *)uint64_t v48 = *v49;
    *(void *)(v48 + 8) = v50;
    v51 = v49 + 2;
    uint64_t v52 = v49[104];
    swift_bridgeObjectRetain();
    uint64_t v53 = v48;
    if (v52 == 1)
    {
      memcpy((void *)(v48 + 16), v49 + 2, 0x340uLL);
    }
    else
    {
      if (*(void *)v51 == 1)
      {
        *(_OWORD *)(v48 + 16) = *v51;
        *(_OWORD *)(v48 + 25) = *(_OWORD *)((char *)v49 + 25);
      }
      else
      {
        *(void *)(v48 + 16) = *(void *)v51;
        *(unsigned char *)(v48 + 24) = *((unsigned char *)v49 + 24);
        *(void *)(v48 + 32) = v49[4];
        *(unsigned char *)(v48 + 40) = *((unsigned char *)v49 + 40);
        swift_bridgeObjectRetain();
      }
      uint64_t v54 = v49[6];
      if (v54 == 1)
      {
        *(_OWORD *)(v48 + 48) = *((_OWORD *)v49 + 3);
        *(_OWORD *)(v48 + 57) = *(_OWORD *)((char *)v49 + 57);
      }
      else
      {
        *(void *)(v48 + 48) = v54;
        *(unsigned char *)(v48 + 56) = *((unsigned char *)v49 + 56);
        *(void *)(v48 + 64) = v49[8];
        *(unsigned char *)(v48 + 72) = *((unsigned char *)v49 + 72);
        swift_bridgeObjectRetain();
      }
      uint64_t v55 = v49[10];
      if (v55 == 1)
      {
        *(_OWORD *)(v48 + 80) = *((_OWORD *)v49 + 5);
        *(_OWORD *)(v48 + 89) = *(_OWORD *)((char *)v49 + 89);
      }
      else
      {
        *(void *)(v48 + 80) = v55;
        *(unsigned char *)(v48 + 88) = *((unsigned char *)v49 + 88);
        *(void *)(v48 + 96) = v49[12];
        *(unsigned char *)(v48 + 104) = *((unsigned char *)v49 + 104);
        swift_bridgeObjectRetain();
      }
      uint64_t v56 = v49[14];
      if (v56 == 1)
      {
        *(_OWORD *)(v48 + 112) = *((_OWORD *)v49 + 7);
        *(_OWORD *)(v48 + 121) = *(_OWORD *)((char *)v49 + 121);
      }
      else
      {
        *(void *)(v48 + 112) = v56;
        *(unsigned char *)(v48 + 120) = *((unsigned char *)v49 + 120);
        *(void *)(v48 + 128) = v49[16];
        *(unsigned char *)(v48 + 136) = *((unsigned char *)v49 + 136);
        swift_bridgeObjectRetain();
      }
      uint64_t v57 = v49[18];
      if (v57 == 1)
      {
        *(_OWORD *)(v48 + 144) = *((_OWORD *)v49 + 9);
        *(_OWORD *)(v48 + 153) = *(_OWORD *)((char *)v49 + 153);
      }
      else
      {
        *(void *)(v48 + 144) = v57;
        *(unsigned char *)(v48 + 152) = *((unsigned char *)v49 + 152);
        *(void *)(v48 + 160) = v49[20];
        *(unsigned char *)(v48 + 168) = *((unsigned char *)v49 + 168);
        swift_bridgeObjectRetain();
      }
      uint64_t v58 = v49[22];
      if (v58 == 1)
      {
        *(_OWORD *)(v48 + 176) = *((_OWORD *)v49 + 11);
        *(_OWORD *)(v48 + 185) = *(_OWORD *)((char *)v49 + 185);
      }
      else
      {
        *(void *)(v48 + 176) = v58;
        *(unsigned char *)(v48 + 184) = *((unsigned char *)v49 + 184);
        *(void *)(v48 + 192) = v49[24];
        *(unsigned char *)(v48 + 200) = *((unsigned char *)v49 + 200);
        swift_bridgeObjectRetain();
      }
      uint64_t v59 = v49[26];
      if (v59 == 1)
      {
        *(_OWORD *)(v48 + 208) = *((_OWORD *)v49 + 13);
        *(_OWORD *)(v48 + 217) = *(_OWORD *)((char *)v49 + 217);
      }
      else
      {
        *(void *)(v48 + 208) = v59;
        *(unsigned char *)(v48 + 216) = *((unsigned char *)v49 + 216);
        *(void *)(v48 + 224) = v49[28];
        *(unsigned char *)(v48 + 232) = *((unsigned char *)v49 + 232);
        swift_bridgeObjectRetain();
      }
      uint64_t v60 = v49[30];
      if (v60 == 1)
      {
        *(_OWORD *)(v48 + 240) = *((_OWORD *)v49 + 15);
        *(_OWORD *)(v48 + 249) = *(_OWORD *)((char *)v49 + 249);
      }
      else
      {
        *(void *)(v48 + 240) = v60;
        *(unsigned char *)(v48 + 248) = *((unsigned char *)v49 + 248);
        *(void *)(v48 + 256) = v49[32];
        *(unsigned char *)(v48 + 264) = *((unsigned char *)v49 + 264);
        swift_bridgeObjectRetain();
      }
      uint64_t v61 = v49[34];
      if (v61 == 1)
      {
        *(_OWORD *)(v48 + 272) = *((_OWORD *)v49 + 17);
        *(_OWORD *)(v48 + 281) = *(_OWORD *)((char *)v49 + 281);
      }
      else
      {
        *(void *)(v48 + 272) = v61;
        *(unsigned char *)(v48 + 280) = *((unsigned char *)v49 + 280);
        *(void *)(v48 + 288) = v49[36];
        *(unsigned char *)(v48 + 296) = *((unsigned char *)v49 + 296);
        swift_bridgeObjectRetain();
      }
      uint64_t v62 = v49[38];
      if (v62 == 1)
      {
        *(_OWORD *)(v48 + 304) = *((_OWORD *)v49 + 19);
        *(_OWORD *)(v48 + 313) = *(_OWORD *)((char *)v49 + 313);
      }
      else
      {
        *(void *)(v48 + 304) = v62;
        *(unsigned char *)(v48 + 312) = *((unsigned char *)v49 + 312);
        *(void *)(v48 + 320) = v49[40];
        *(unsigned char *)(v48 + 328) = *((unsigned char *)v49 + 328);
        swift_bridgeObjectRetain();
      }
      uint64_t v63 = v49[42];
      if (v63 == 1)
      {
        *(_OWORD *)(v48 + 336) = *((_OWORD *)v49 + 21);
        *(_OWORD *)(v48 + 345) = *(_OWORD *)((char *)v49 + 345);
      }
      else
      {
        *(void *)(v48 + 336) = v63;
        *(unsigned char *)(v48 + 344) = *((unsigned char *)v49 + 344);
        *(void *)(v48 + 352) = v49[44];
        *(unsigned char *)(v48 + 360) = *((unsigned char *)v49 + 360);
        swift_bridgeObjectRetain();
      }
      uint64_t v64 = v49[46];
      if (v64 == 1)
      {
        *(_OWORD *)(v48 + 368) = *((_OWORD *)v49 + 23);
        *(_OWORD *)(v48 + 377) = *(_OWORD *)((char *)v49 + 377);
      }
      else
      {
        *(void *)(v48 + 368) = v64;
        *(unsigned char *)(v48 + 376) = *((unsigned char *)v49 + 376);
        *(void *)(v48 + 384) = v49[48];
        *(unsigned char *)(v48 + 392) = *((unsigned char *)v49 + 392);
        swift_bridgeObjectRetain();
      }
      uint64_t v65 = v49[50];
      if (v65 == 1)
      {
        *(_OWORD *)(v48 + 400) = *((_OWORD *)v49 + 25);
        *(_OWORD *)(v48 + 409) = *(_OWORD *)((char *)v49 + 409);
      }
      else
      {
        *(void *)(v48 + 400) = v65;
        *(unsigned char *)(v48 + 408) = *((unsigned char *)v49 + 408);
        *(void *)(v48 + 416) = v49[52];
        *(unsigned char *)(v48 + 424) = *((unsigned char *)v49 + 424);
        swift_bridgeObjectRetain();
      }
      uint64_t v66 = v49[54];
      if (v66 == 1)
      {
        *(_OWORD *)(v48 + 432) = *((_OWORD *)v49 + 27);
        *(_OWORD *)(v48 + 441) = *(_OWORD *)((char *)v49 + 441);
      }
      else
      {
        *(void *)(v48 + 432) = v66;
        *(unsigned char *)(v48 + 440) = *((unsigned char *)v49 + 440);
        *(void *)(v48 + 448) = v49[56];
        *(unsigned char *)(v48 + 456) = *((unsigned char *)v49 + 456);
        swift_bridgeObjectRetain();
      }
      uint64_t v67 = v49[58];
      if (v67 == 1)
      {
        *(_OWORD *)(v48 + 464) = *((_OWORD *)v49 + 29);
        *(_OWORD *)(v48 + 473) = *(_OWORD *)((char *)v49 + 473);
      }
      else
      {
        *(void *)(v48 + 464) = v67;
        *(unsigned char *)(v48 + 472) = *((unsigned char *)v49 + 472);
        *(void *)(v48 + 480) = v49[60];
        *(unsigned char *)(v48 + 488) = *((unsigned char *)v49 + 488);
        swift_bridgeObjectRetain();
      }
      uint64_t v68 = v49[62];
      if (v68 == 1)
      {
        *(_OWORD *)(v48 + 496) = *((_OWORD *)v49 + 31);
        *(_OWORD *)(v48 + 505) = *(_OWORD *)((char *)v49 + 505);
      }
      else
      {
        *(void *)(v48 + 496) = v68;
        *(unsigned char *)(v48 + 504) = *((unsigned char *)v49 + 504);
        *(void *)(v48 + 512) = v49[64];
        *(unsigned char *)(v48 + 520) = *((unsigned char *)v49 + 520);
        swift_bridgeObjectRetain();
      }
      uint64_t v69 = v49[66];
      if (v69 == 1)
      {
        *(_OWORD *)(v48 + 528) = *((_OWORD *)v49 + 33);
        *(_OWORD *)(v48 + 537) = *(_OWORD *)((char *)v49 + 537);
      }
      else
      {
        *(void *)(v48 + 528) = v69;
        *(unsigned char *)(v48 + 536) = *((unsigned char *)v49 + 536);
        *(void *)(v48 + 544) = v49[68];
        *(unsigned char *)(v48 + 552) = *((unsigned char *)v49 + 552);
        swift_bridgeObjectRetain();
      }
      uint64_t v70 = v49[70];
      if (v70 == 1)
      {
        *(_OWORD *)(v48 + 560) = *((_OWORD *)v49 + 35);
        *(_OWORD *)(v48 + 569) = *(_OWORD *)((char *)v49 + 569);
      }
      else
      {
        *(void *)(v48 + 560) = v70;
        *(unsigned char *)(v48 + 568) = *((unsigned char *)v49 + 568);
        *(void *)(v48 + 576) = v49[72];
        *(unsigned char *)(v48 + 584) = *((unsigned char *)v49 + 584);
        swift_bridgeObjectRetain();
      }
      uint64_t v71 = v49[74];
      if (v71 == 1)
      {
        *(_OWORD *)(v48 + 592) = *((_OWORD *)v49 + 37);
        *(_OWORD *)(v48 + 601) = *(_OWORD *)((char *)v49 + 601);
      }
      else
      {
        *(void *)(v48 + 592) = v71;
        *(unsigned char *)(v48 + 600) = *((unsigned char *)v49 + 600);
        *(void *)(v48 + 608) = v49[76];
        *(unsigned char *)(v48 + 616) = *((unsigned char *)v49 + 616);
        swift_bridgeObjectRetain();
      }
      uint64_t v72 = v49[78];
      if (v72 == 1)
      {
        *(_OWORD *)(v48 + 624) = *((_OWORD *)v49 + 39);
        *(_OWORD *)(v48 + 633) = *(_OWORD *)((char *)v49 + 633);
      }
      else
      {
        *(void *)(v48 + 624) = v72;
        *(unsigned char *)(v48 + 632) = *((unsigned char *)v49 + 632);
        *(void *)(v48 + 640) = v49[80];
        *(unsigned char *)(v48 + 648) = *((unsigned char *)v49 + 648);
        swift_bridgeObjectRetain();
      }
      uint64_t v73 = v49[82];
      if (v73 == 1)
      {
        *(_OWORD *)(v48 + 656) = *((_OWORD *)v49 + 41);
        *(_OWORD *)(v48 + 665) = *(_OWORD *)((char *)v49 + 665);
      }
      else
      {
        *(void *)(v48 + 656) = v73;
        *(unsigned char *)(v48 + 664) = *((unsigned char *)v49 + 664);
        *(void *)(v48 + 672) = v49[84];
        *(unsigned char *)(v48 + 680) = *((unsigned char *)v49 + 680);
        swift_bridgeObjectRetain();
      }
      uint64_t v74 = v49[86];
      if (v74 == 1)
      {
        *(_OWORD *)(v48 + 688) = *((_OWORD *)v49 + 43);
        *(_OWORD *)(v48 + 697) = *(_OWORD *)((char *)v49 + 697);
      }
      else
      {
        *(void *)(v48 + 688) = v74;
        *(unsigned char *)(v48 + 696) = *((unsigned char *)v49 + 696);
        *(void *)(v48 + 704) = v49[88];
        *(unsigned char *)(v48 + 712) = *((unsigned char *)v49 + 712);
        swift_bridgeObjectRetain();
      }
      uint64_t v75 = v49[90];
      if (v75 == 1)
      {
        *(_OWORD *)(v48 + 720) = *((_OWORD *)v49 + 45);
        *(_OWORD *)(v48 + 729) = *(_OWORD *)((char *)v49 + 729);
      }
      else
      {
        *(void *)(v48 + 720) = v75;
        *(unsigned char *)(v48 + 728) = *((unsigned char *)v49 + 728);
        *(void *)(v48 + 736) = v49[92];
        *(unsigned char *)(v48 + 744) = *((unsigned char *)v49 + 744);
        swift_bridgeObjectRetain();
      }
      uint64_t v76 = v49[94];
      if (v76 == 1)
      {
        *(_OWORD *)(v48 + 752) = *((_OWORD *)v49 + 47);
        *(_OWORD *)(v48 + 761) = *(_OWORD *)((char *)v49 + 761);
      }
      else
      {
        *(void *)(v48 + 752) = v76;
        *(unsigned char *)(v48 + 760) = *((unsigned char *)v49 + 760);
        *(void *)(v48 + 768) = v49[96];
        *(unsigned char *)(v48 + 776) = *((unsigned char *)v49 + 776);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v48 + 784) = *((_OWORD *)v49 + 49);
      *(unsigned char *)(v48 + 800) = *((unsigned char *)v49 + 800);
      *(unsigned char *)(v48 + 824) = *((unsigned char *)v49 + 824);
      *(_OWORD *)(v48 + 808) = *(_OWORD *)(v49 + 101);
      *(_DWORD *)(v48 + 825) = *(_DWORD *)((char *)v49 + 825);
      *(_WORD *)(v48 + 829) = *(_WORD *)((char *)v49 + 829);
      *(unsigned char *)(v48 + 831) = *((unsigned char *)v49 + 831);
      *(void *)(v48 + 832) = v52;
      *(void *)(v48 + 840) = v49[105];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v77 = (_OWORD *)(v48 + 848);
    v78 = v49 + 106;
    uint64_t v79 = v49[208];
    if (v79 == 1)
    {
      memcpy(v77, v78, 0x340uLL);
    }
    else
    {
      if (*(void *)v78 == 1)
      {
        _OWORD *v77 = *v78;
        *(_OWORD *)(v53 + 857) = *(_OWORD *)((char *)v49 + 857);
      }
      else
      {
        *(void *)(v53 + 848) = *(void *)v78;
        *(unsigned char *)(v53 + 856) = *((unsigned char *)v49 + 856);
        *(void *)(v53 + 864) = v49[108];
        *(unsigned char *)(v53 + 872) = *((unsigned char *)v49 + 872);
        swift_bridgeObjectRetain();
      }
      uint64_t v80 = v49[110];
      if (v80 == 1)
      {
        *(_OWORD *)(v53 + 880) = *((_OWORD *)v49 + 55);
        *(_OWORD *)(v53 + 889) = *(_OWORD *)((char *)v49 + 889);
      }
      else
      {
        *(void *)(v53 + 880) = v80;
        *(unsigned char *)(v53 + 888) = *((unsigned char *)v49 + 888);
        *(void *)(v53 + 896) = v49[112];
        *(unsigned char *)(v53 + 904) = *((unsigned char *)v49 + 904);
        swift_bridgeObjectRetain();
      }
      uint64_t v81 = v49[114];
      if (v81 == 1)
      {
        *(_OWORD *)(v53 + 912) = *((_OWORD *)v49 + 57);
        *(_OWORD *)(v53 + 921) = *(_OWORD *)((char *)v49 + 921);
      }
      else
      {
        *(void *)(v53 + 912) = v81;
        *(unsigned char *)(v53 + 920) = *((unsigned char *)v49 + 920);
        *(void *)(v53 + 928) = v49[116];
        *(unsigned char *)(v53 + 936) = *((unsigned char *)v49 + 936);
        swift_bridgeObjectRetain();
      }
      uint64_t v82 = v49[118];
      if (v82 == 1)
      {
        *(_OWORD *)(v53 + 944) = *((_OWORD *)v49 + 59);
        *(_OWORD *)(v53 + 953) = *(_OWORD *)((char *)v49 + 953);
      }
      else
      {
        *(void *)(v53 + 944) = v82;
        *(unsigned char *)(v53 + 952) = *((unsigned char *)v49 + 952);
        *(void *)(v53 + 960) = v49[120];
        *(unsigned char *)(v53 + 968) = *((unsigned char *)v49 + 968);
        swift_bridgeObjectRetain();
      }
      uint64_t v83 = v49[122];
      if (v83 == 1)
      {
        *(_OWORD *)(v53 + 976) = *((_OWORD *)v49 + 61);
        *(_OWORD *)(v53 + 985) = *(_OWORD *)((char *)v49 + 985);
      }
      else
      {
        *(void *)(v53 + 976) = v83;
        *(unsigned char *)(v53 + 984) = *((unsigned char *)v49 + 984);
        *(void *)(v53 + 992) = v49[124];
        *(unsigned char *)(v53 + 1000) = *((unsigned char *)v49 + 1000);
        swift_bridgeObjectRetain();
      }
      uint64_t v84 = v49[126];
      if (v84 == 1)
      {
        *(_OWORD *)(v53 + 1008) = *((_OWORD *)v49 + 63);
        *(_OWORD *)(v53 + 1017) = *(_OWORD *)((char *)v49 + 1017);
      }
      else
      {
        *(void *)(v53 + 1008) = v84;
        *(unsigned char *)(v53 + 1016) = *((unsigned char *)v49 + 1016);
        *(void *)(v53 + 1024) = v49[128];
        *(unsigned char *)(v53 + 1032) = *((unsigned char *)v49 + 1032);
        swift_bridgeObjectRetain();
      }
      uint64_t v85 = v49[130];
      if (v85 == 1)
      {
        *(_OWORD *)(v53 + 1040) = *((_OWORD *)v49 + 65);
        *(_OWORD *)(v53 + 1049) = *(_OWORD *)((char *)v49 + 1049);
      }
      else
      {
        *(void *)(v53 + 1040) = v85;
        *(unsigned char *)(v53 + 1048) = *((unsigned char *)v49 + 1048);
        *(void *)(v53 + 1056) = v49[132];
        *(unsigned char *)(v53 + 1064) = *((unsigned char *)v49 + 1064);
        swift_bridgeObjectRetain();
      }
      uint64_t v86 = v49[134];
      if (v86 == 1)
      {
        *(_OWORD *)(v53 + 1072) = *((_OWORD *)v49 + 67);
        *(_OWORD *)(v53 + 1081) = *(_OWORD *)((char *)v49 + 1081);
      }
      else
      {
        *(void *)(v53 + 1072) = v86;
        *(unsigned char *)(v53 + 1080) = *((unsigned char *)v49 + 1080);
        *(void *)(v53 + 1088) = v49[136];
        *(unsigned char *)(v53 + 1096) = *((unsigned char *)v49 + 1096);
        swift_bridgeObjectRetain();
      }
      uint64_t v87 = v49[138];
      if (v87 == 1)
      {
        *(_OWORD *)(v53 + 1104) = *((_OWORD *)v49 + 69);
        *(_OWORD *)(v53 + 1113) = *(_OWORD *)((char *)v49 + 1113);
      }
      else
      {
        *(void *)(v53 + 1104) = v87;
        *(unsigned char *)(v53 + 1112) = *((unsigned char *)v49 + 1112);
        *(void *)(v53 + 1120) = v49[140];
        *(unsigned char *)(v53 + 1128) = *((unsigned char *)v49 + 1128);
        swift_bridgeObjectRetain();
      }
      uint64_t v88 = v49[142];
      if (v88 == 1)
      {
        *(_OWORD *)(v53 + 1136) = *((_OWORD *)v49 + 71);
        *(_OWORD *)(v53 + 1145) = *(_OWORD *)((char *)v49 + 1145);
      }
      else
      {
        *(void *)(v53 + 1136) = v88;
        *(unsigned char *)(v53 + 1144) = *((unsigned char *)v49 + 1144);
        *(void *)(v53 + 1152) = v49[144];
        *(unsigned char *)(v53 + 1160) = *((unsigned char *)v49 + 1160);
        swift_bridgeObjectRetain();
      }
      uint64_t v89 = v49[146];
      if (v89 == 1)
      {
        *(_OWORD *)(v53 + 1168) = *((_OWORD *)v49 + 73);
        *(_OWORD *)(v53 + 1177) = *(_OWORD *)((char *)v49 + 1177);
      }
      else
      {
        *(void *)(v53 + 1168) = v89;
        *(unsigned char *)(v53 + 1176) = *((unsigned char *)v49 + 1176);
        *(void *)(v53 + 1184) = v49[148];
        *(unsigned char *)(v53 + 1192) = *((unsigned char *)v49 + 1192);
        swift_bridgeObjectRetain();
      }
      uint64_t v90 = v49[150];
      if (v90 == 1)
      {
        *(_OWORD *)(v53 + 1200) = *((_OWORD *)v49 + 75);
        *(_OWORD *)(v53 + 1209) = *(_OWORD *)((char *)v49 + 1209);
      }
      else
      {
        *(void *)(v53 + 1200) = v90;
        *(unsigned char *)(v53 + 1208) = *((unsigned char *)v49 + 1208);
        *(void *)(v53 + 1216) = v49[152];
        *(unsigned char *)(v53 + 1224) = *((unsigned char *)v49 + 1224);
        swift_bridgeObjectRetain();
      }
      uint64_t v91 = v49[154];
      if (v91 == 1)
      {
        *(_OWORD *)(v53 + 1232) = *((_OWORD *)v49 + 77);
        *(_OWORD *)(v53 + 1241) = *(_OWORD *)((char *)v49 + 1241);
      }
      else
      {
        *(void *)(v53 + 1232) = v91;
        *(unsigned char *)(v53 + 1240) = *((unsigned char *)v49 + 1240);
        *(void *)(v53 + 1248) = v49[156];
        *(unsigned char *)(v53 + 1256) = *((unsigned char *)v49 + 1256);
        swift_bridgeObjectRetain();
      }
      uint64_t v92 = v49[158];
      if (v92 == 1)
      {
        *(_OWORD *)(v53 + 1264) = *((_OWORD *)v49 + 79);
        *(_OWORD *)(v53 + 1273) = *(_OWORD *)((char *)v49 + 1273);
      }
      else
      {
        *(void *)(v53 + 1264) = v92;
        *(unsigned char *)(v53 + 1272) = *((unsigned char *)v49 + 1272);
        *(void *)(v53 + 1280) = v49[160];
        *(unsigned char *)(v53 + 1288) = *((unsigned char *)v49 + 1288);
        swift_bridgeObjectRetain();
      }
      uint64_t v93 = v49[162];
      if (v93 == 1)
      {
        *(_OWORD *)(v53 + 1296) = *((_OWORD *)v49 + 81);
        *(_OWORD *)(v53 + 1305) = *(_OWORD *)((char *)v49 + 1305);
      }
      else
      {
        *(void *)(v53 + 1296) = v93;
        *(unsigned char *)(v53 + 1304) = *((unsigned char *)v49 + 1304);
        *(void *)(v53 + 1312) = v49[164];
        *(unsigned char *)(v53 + 1320) = *((unsigned char *)v49 + 1320);
        swift_bridgeObjectRetain();
      }
      uint64_t v94 = v49[166];
      if (v94 == 1)
      {
        *(_OWORD *)(v53 + 1328) = *((_OWORD *)v49 + 83);
        *(_OWORD *)(v53 + 1337) = *(_OWORD *)((char *)v49 + 1337);
      }
      else
      {
        *(void *)(v53 + 1328) = v94;
        *(unsigned char *)(v53 + 1336) = *((unsigned char *)v49 + 1336);
        *(void *)(v53 + 1344) = v49[168];
        *(unsigned char *)(v53 + 1352) = *((unsigned char *)v49 + 1352);
        swift_bridgeObjectRetain();
      }
      uint64_t v95 = v49[170];
      if (v95 == 1)
      {
        *(_OWORD *)(v53 + 1360) = *((_OWORD *)v49 + 85);
        *(_OWORD *)(v53 + 1369) = *(_OWORD *)((char *)v49 + 1369);
      }
      else
      {
        *(void *)(v53 + 1360) = v95;
        *(unsigned char *)(v53 + 1368) = *((unsigned char *)v49 + 1368);
        *(void *)(v53 + 1376) = v49[172];
        *(unsigned char *)(v53 + 1384) = *((unsigned char *)v49 + 1384);
        swift_bridgeObjectRetain();
      }
      uint64_t v96 = v49[174];
      if (v96 == 1)
      {
        *(_OWORD *)(v53 + 1392) = *((_OWORD *)v49 + 87);
        *(_OWORD *)(v53 + 1401) = *(_OWORD *)((char *)v49 + 1401);
      }
      else
      {
        *(void *)(v53 + 1392) = v96;
        *(unsigned char *)(v53 + 1400) = *((unsigned char *)v49 + 1400);
        *(void *)(v53 + 1408) = v49[176];
        *(unsigned char *)(v53 + 1416) = *((unsigned char *)v49 + 1416);
        swift_bridgeObjectRetain();
      }
      uint64_t v97 = v49[178];
      if (v97 == 1)
      {
        *(_OWORD *)(v53 + 1424) = *((_OWORD *)v49 + 89);
        *(_OWORD *)(v53 + 1433) = *(_OWORD *)((char *)v49 + 1433);
      }
      else
      {
        *(void *)(v53 + 1424) = v97;
        *(unsigned char *)(v53 + 1432) = *((unsigned char *)v49 + 1432);
        *(void *)(v53 + 1440) = v49[180];
        *(unsigned char *)(v53 + 1448) = *((unsigned char *)v49 + 1448);
        swift_bridgeObjectRetain();
      }
      uint64_t v98 = v49[182];
      if (v98 == 1)
      {
        *(_OWORD *)(v53 + 1456) = *((_OWORD *)v49 + 91);
        *(_OWORD *)(v53 + 1465) = *(_OWORD *)((char *)v49 + 1465);
      }
      else
      {
        *(void *)(v53 + 1456) = v98;
        *(unsigned char *)(v53 + 1464) = *((unsigned char *)v49 + 1464);
        *(void *)(v53 + 1472) = v49[184];
        *(unsigned char *)(v53 + 1480) = *((unsigned char *)v49 + 1480);
        swift_bridgeObjectRetain();
      }
      uint64_t v99 = v49[186];
      if (v99 == 1)
      {
        *(_OWORD *)(v53 + 1488) = *((_OWORD *)v49 + 93);
        *(_OWORD *)(v53 + 1497) = *(_OWORD *)((char *)v49 + 1497);
      }
      else
      {
        *(void *)(v53 + 1488) = v99;
        *(unsigned char *)(v53 + 1496) = *((unsigned char *)v49 + 1496);
        *(void *)(v53 + 1504) = v49[188];
        *(unsigned char *)(v53 + 1512) = *((unsigned char *)v49 + 1512);
        swift_bridgeObjectRetain();
      }
      uint64_t v100 = v49[190];
      if (v100 == 1)
      {
        *(_OWORD *)(v53 + 1520) = *((_OWORD *)v49 + 95);
        *(_OWORD *)(v53 + 1529) = *(_OWORD *)((char *)v49 + 1529);
      }
      else
      {
        *(void *)(v53 + 1520) = v100;
        *(unsigned char *)(v53 + 1528) = *((unsigned char *)v49 + 1528);
        *(void *)(v53 + 1536) = v49[192];
        *(unsigned char *)(v53 + 1544) = *((unsigned char *)v49 + 1544);
        swift_bridgeObjectRetain();
      }
      uint64_t v101 = v49[194];
      if (v101 == 1)
      {
        *(_OWORD *)(v53 + 1552) = *((_OWORD *)v49 + 97);
        *(_OWORD *)(v53 + 1561) = *(_OWORD *)((char *)v49 + 1561);
      }
      else
      {
        *(void *)(v53 + 1552) = v101;
        *(unsigned char *)(v53 + 1560) = *((unsigned char *)v49 + 1560);
        *(void *)(v53 + 1568) = v49[196];
        *(unsigned char *)(v53 + 1576) = *((unsigned char *)v49 + 1576);
        swift_bridgeObjectRetain();
      }
      uint64_t v102 = v49[198];
      if (v102 == 1)
      {
        *(_OWORD *)(v53 + 1584) = *((_OWORD *)v49 + 99);
        *(_OWORD *)(v53 + 1593) = *(_OWORD *)((char *)v49 + 1593);
      }
      else
      {
        *(void *)(v53 + 1584) = v102;
        *(unsigned char *)(v53 + 1592) = *((unsigned char *)v49 + 1592);
        *(void *)(v53 + 1600) = v49[200];
        *(unsigned char *)(v53 + 1608) = *((unsigned char *)v49 + 1608);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 1616) = *((_OWORD *)v49 + 101);
      *(unsigned char *)(v53 + 1632) = *((unsigned char *)v49 + 1632);
      *(unsigned char *)(v53 + 1656) = *((unsigned char *)v49 + 1656);
      *(_OWORD *)(v53 + 1640) = *(_OWORD *)(v49 + 205);
      *(_DWORD *)(v53 + 1657) = *(_DWORD *)((char *)v49 + 1657);
      *(_WORD *)(v53 + 1661) = *(_WORD *)((char *)v49 + 1661);
      *(unsigned char *)(v53 + 1663) = *((unsigned char *)v49 + 1663);
      *(void *)(v53 + 1664) = v79;
      *(void *)(v53 + 1672) = v49[209];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v103 = (_OWORD *)(v53 + 1680);
    v104 = v49 + 210;
    uint64_t v105 = v49[312];
    if (v105 == 1)
    {
      memcpy(v103, v104, 0x340uLL);
    }
    else
    {
      if (*(void *)v104 == 1)
      {
        _OWORD *v103 = *v104;
        *(_OWORD *)(v53 + 1689) = *(_OWORD *)((char *)v49 + 1689);
      }
      else
      {
        *(void *)(v53 + 1680) = *(void *)v104;
        *(unsigned char *)(v53 + 1688) = *((unsigned char *)v49 + 1688);
        *(void *)(v53 + 1696) = v49[212];
        *(unsigned char *)(v53 + 1704) = *((unsigned char *)v49 + 1704);
        swift_bridgeObjectRetain();
      }
      uint64_t v106 = v49[214];
      if (v106 == 1)
      {
        *(_OWORD *)(v53 + 1712) = *((_OWORD *)v49 + 107);
        *(_OWORD *)(v53 + 1721) = *(_OWORD *)((char *)v49 + 1721);
      }
      else
      {
        *(void *)(v53 + 1712) = v106;
        *(unsigned char *)(v53 + 1720) = *((unsigned char *)v49 + 1720);
        *(void *)(v53 + 1728) = v49[216];
        *(unsigned char *)(v53 + 1736) = *((unsigned char *)v49 + 1736);
        swift_bridgeObjectRetain();
      }
      uint64_t v107 = v49[218];
      if (v107 == 1)
      {
        *(_OWORD *)(v53 + 1744) = *((_OWORD *)v49 + 109);
        *(_OWORD *)(v53 + 1753) = *(_OWORD *)((char *)v49 + 1753);
      }
      else
      {
        *(void *)(v53 + 1744) = v107;
        *(unsigned char *)(v53 + 1752) = *((unsigned char *)v49 + 1752);
        *(void *)(v53 + 1760) = v49[220];
        *(unsigned char *)(v53 + 1768) = *((unsigned char *)v49 + 1768);
        swift_bridgeObjectRetain();
      }
      uint64_t v108 = v49[222];
      if (v108 == 1)
      {
        *(_OWORD *)(v53 + 1776) = *((_OWORD *)v49 + 111);
        *(_OWORD *)(v53 + 1785) = *(_OWORD *)((char *)v49 + 1785);
      }
      else
      {
        *(void *)(v53 + 1776) = v108;
        *(unsigned char *)(v53 + 1784) = *((unsigned char *)v49 + 1784);
        *(void *)(v53 + 1792) = v49[224];
        *(unsigned char *)(v53 + 1800) = *((unsigned char *)v49 + 1800);
        swift_bridgeObjectRetain();
      }
      uint64_t v109 = v49[226];
      if (v109 == 1)
      {
        *(_OWORD *)(v53 + 1808) = *((_OWORD *)v49 + 113);
        *(_OWORD *)(v53 + 1817) = *(_OWORD *)((char *)v49 + 1817);
      }
      else
      {
        *(void *)(v53 + 1808) = v109;
        *(unsigned char *)(v53 + 1816) = *((unsigned char *)v49 + 1816);
        *(void *)(v53 + 1824) = v49[228];
        *(unsigned char *)(v53 + 1832) = *((unsigned char *)v49 + 1832);
        swift_bridgeObjectRetain();
      }
      uint64_t v110 = v49[230];
      if (v110 == 1)
      {
        *(_OWORD *)(v53 + 1840) = *((_OWORD *)v49 + 115);
        *(_OWORD *)(v53 + 1849) = *(_OWORD *)((char *)v49 + 1849);
      }
      else
      {
        *(void *)(v53 + 1840) = v110;
        *(unsigned char *)(v53 + 1848) = *((unsigned char *)v49 + 1848);
        *(void *)(v53 + 1856) = v49[232];
        *(unsigned char *)(v53 + 1864) = *((unsigned char *)v49 + 1864);
        swift_bridgeObjectRetain();
      }
      uint64_t v111 = v49[234];
      if (v111 == 1)
      {
        *(_OWORD *)(v53 + 1872) = *((_OWORD *)v49 + 117);
        *(_OWORD *)(v53 + 1881) = *(_OWORD *)((char *)v49 + 1881);
      }
      else
      {
        *(void *)(v53 + 1872) = v111;
        *(unsigned char *)(v53 + 1880) = *((unsigned char *)v49 + 1880);
        *(void *)(v53 + 1888) = v49[236];
        *(unsigned char *)(v53 + 1896) = *((unsigned char *)v49 + 1896);
        swift_bridgeObjectRetain();
      }
      uint64_t v112 = v49[238];
      if (v112 == 1)
      {
        *(_OWORD *)(v53 + 1904) = *((_OWORD *)v49 + 119);
        *(_OWORD *)(v53 + 1913) = *(_OWORD *)((char *)v49 + 1913);
      }
      else
      {
        *(void *)(v53 + 1904) = v112;
        *(unsigned char *)(v53 + 1912) = *((unsigned char *)v49 + 1912);
        *(void *)(v53 + 1920) = v49[240];
        *(unsigned char *)(v53 + 1928) = *((unsigned char *)v49 + 1928);
        swift_bridgeObjectRetain();
      }
      uint64_t v113 = v49[242];
      if (v113 == 1)
      {
        *(_OWORD *)(v53 + 1936) = *((_OWORD *)v49 + 121);
        *(_OWORD *)(v53 + 1945) = *(_OWORD *)((char *)v49 + 1945);
      }
      else
      {
        *(void *)(v53 + 1936) = v113;
        *(unsigned char *)(v53 + 1944) = *((unsigned char *)v49 + 1944);
        *(void *)(v53 + 1952) = v49[244];
        *(unsigned char *)(v53 + 1960) = *((unsigned char *)v49 + 1960);
        swift_bridgeObjectRetain();
      }
      uint64_t v114 = v49[246];
      if (v114 == 1)
      {
        *(_OWORD *)(v53 + 1968) = *((_OWORD *)v49 + 123);
        *(_OWORD *)(v53 + 1977) = *(_OWORD *)((char *)v49 + 1977);
      }
      else
      {
        *(void *)(v53 + 1968) = v114;
        *(unsigned char *)(v53 + 1976) = *((unsigned char *)v49 + 1976);
        *(void *)(v53 + 1984) = v49[248];
        *(unsigned char *)(v53 + 1992) = *((unsigned char *)v49 + 1992);
        swift_bridgeObjectRetain();
      }
      uint64_t v115 = v49[250];
      if (v115 == 1)
      {
        *(_OWORD *)(v53 + 2000) = *((_OWORD *)v49 + 125);
        *(_OWORD *)(v53 + 2009) = *(_OWORD *)((char *)v49 + 2009);
      }
      else
      {
        *(void *)(v53 + 2000) = v115;
        *(unsigned char *)(v53 + 2008) = *((unsigned char *)v49 + 2008);
        *(void *)(v53 + 2016) = v49[252];
        *(unsigned char *)(v53 + 2024) = *((unsigned char *)v49 + 2024);
        swift_bridgeObjectRetain();
      }
      uint64_t v116 = v49[254];
      if (v116 == 1)
      {
        *(_OWORD *)(v53 + 2032) = *((_OWORD *)v49 + 127);
        *(_OWORD *)(v53 + 2041) = *(_OWORD *)((char *)v49 + 2041);
      }
      else
      {
        *(void *)(v53 + 2032) = v116;
        *(unsigned char *)(v53 + 2040) = *((unsigned char *)v49 + 2040);
        *(void *)(v53 + 2048) = v49[256];
        *(unsigned char *)(v53 + 2056) = *((unsigned char *)v49 + 2056);
        swift_bridgeObjectRetain();
      }
      uint64_t v117 = v49[258];
      if (v117 == 1)
      {
        *(_OWORD *)(v53 + 2064) = *((_OWORD *)v49 + 129);
        *(_OWORD *)(v53 + 2073) = *(_OWORD *)((char *)v49 + 2073);
      }
      else
      {
        *(void *)(v53 + 2064) = v117;
        *(unsigned char *)(v53 + 2072) = *((unsigned char *)v49 + 2072);
        *(void *)(v53 + 2080) = v49[260];
        *(unsigned char *)(v53 + 2088) = *((unsigned char *)v49 + 2088);
        swift_bridgeObjectRetain();
      }
      uint64_t v118 = v49[262];
      if (v118 == 1)
      {
        *(_OWORD *)(v53 + 2096) = *((_OWORD *)v49 + 131);
        *(_OWORD *)(v53 + 2105) = *(_OWORD *)((char *)v49 + 2105);
      }
      else
      {
        *(void *)(v53 + 2096) = v118;
        *(unsigned char *)(v53 + 2104) = *((unsigned char *)v49 + 2104);
        *(void *)(v53 + 2112) = v49[264];
        *(unsigned char *)(v53 + 2120) = *((unsigned char *)v49 + 2120);
        swift_bridgeObjectRetain();
      }
      uint64_t v119 = v49[266];
      if (v119 == 1)
      {
        *(_OWORD *)(v53 + 2128) = *((_OWORD *)v49 + 133);
        *(_OWORD *)(v53 + 2137) = *(_OWORD *)((char *)v49 + 2137);
      }
      else
      {
        *(void *)(v53 + 2128) = v119;
        *(unsigned char *)(v53 + 2136) = *((unsigned char *)v49 + 2136);
        *(void *)(v53 + 2144) = v49[268];
        *(unsigned char *)(v53 + 2152) = *((unsigned char *)v49 + 2152);
        swift_bridgeObjectRetain();
      }
      uint64_t v120 = v49[270];
      if (v120 == 1)
      {
        *(_OWORD *)(v53 + 2160) = *((_OWORD *)v49 + 135);
        *(_OWORD *)(v53 + 2169) = *(_OWORD *)((char *)v49 + 2169);
      }
      else
      {
        *(void *)(v53 + 2160) = v120;
        *(unsigned char *)(v53 + 2168) = *((unsigned char *)v49 + 2168);
        *(void *)(v53 + 2176) = v49[272];
        *(unsigned char *)(v53 + 2184) = *((unsigned char *)v49 + 2184);
        swift_bridgeObjectRetain();
      }
      uint64_t v121 = v49[274];
      if (v121 == 1)
      {
        *(_OWORD *)(v53 + 2192) = *((_OWORD *)v49 + 137);
        *(_OWORD *)(v53 + 2201) = *(_OWORD *)((char *)v49 + 2201);
      }
      else
      {
        *(void *)(v53 + 2192) = v121;
        *(unsigned char *)(v53 + 2200) = *((unsigned char *)v49 + 2200);
        *(void *)(v53 + 2208) = v49[276];
        *(unsigned char *)(v53 + 2216) = *((unsigned char *)v49 + 2216);
        swift_bridgeObjectRetain();
      }
      uint64_t v122 = v49[278];
      if (v122 == 1)
      {
        *(_OWORD *)(v53 + 2224) = *((_OWORD *)v49 + 139);
        *(_OWORD *)(v53 + 2233) = *(_OWORD *)((char *)v49 + 2233);
      }
      else
      {
        *(void *)(v53 + 2224) = v122;
        *(unsigned char *)(v53 + 2232) = *((unsigned char *)v49 + 2232);
        *(void *)(v53 + 2240) = v49[280];
        *(unsigned char *)(v53 + 2248) = *((unsigned char *)v49 + 2248);
        swift_bridgeObjectRetain();
      }
      uint64_t v123 = v49[282];
      if (v123 == 1)
      {
        *(_OWORD *)(v53 + 2256) = *((_OWORD *)v49 + 141);
        *(_OWORD *)(v53 + 2265) = *(_OWORD *)((char *)v49 + 2265);
      }
      else
      {
        *(void *)(v53 + 2256) = v123;
        *(unsigned char *)(v53 + 2264) = *((unsigned char *)v49 + 2264);
        *(void *)(v53 + 2272) = v49[284];
        *(unsigned char *)(v53 + 2280) = *((unsigned char *)v49 + 2280);
        swift_bridgeObjectRetain();
      }
      uint64_t v124 = v49[286];
      if (v124 == 1)
      {
        *(_OWORD *)(v53 + 2288) = *((_OWORD *)v49 + 143);
        *(_OWORD *)(v53 + 2297) = *(_OWORD *)((char *)v49 + 2297);
      }
      else
      {
        *(void *)(v53 + 2288) = v124;
        *(unsigned char *)(v53 + 2296) = *((unsigned char *)v49 + 2296);
        *(void *)(v53 + 2304) = v49[288];
        *(unsigned char *)(v53 + 2312) = *((unsigned char *)v49 + 2312);
        swift_bridgeObjectRetain();
      }
      uint64_t v125 = v49[290];
      if (v125 == 1)
      {
        *(_OWORD *)(v53 + 2320) = *((_OWORD *)v49 + 145);
        *(_OWORD *)(v53 + 2329) = *(_OWORD *)((char *)v49 + 2329);
      }
      else
      {
        *(void *)(v53 + 2320) = v125;
        *(unsigned char *)(v53 + 2328) = *((unsigned char *)v49 + 2328);
        *(void *)(v53 + 2336) = v49[292];
        *(unsigned char *)(v53 + 2344) = *((unsigned char *)v49 + 2344);
        swift_bridgeObjectRetain();
      }
      uint64_t v126 = v49[294];
      if (v126 == 1)
      {
        *(_OWORD *)(v53 + 2352) = *((_OWORD *)v49 + 147);
        *(_OWORD *)(v53 + 2361) = *(_OWORD *)((char *)v49 + 2361);
      }
      else
      {
        *(void *)(v53 + 2352) = v126;
        *(unsigned char *)(v53 + 2360) = *((unsigned char *)v49 + 2360);
        *(void *)(v53 + 2368) = v49[296];
        *(unsigned char *)(v53 + 2376) = *((unsigned char *)v49 + 2376);
        swift_bridgeObjectRetain();
      }
      uint64_t v127 = v49[298];
      if (v127 == 1)
      {
        *(_OWORD *)(v53 + 2384) = *((_OWORD *)v49 + 149);
        *(_OWORD *)(v53 + 2393) = *(_OWORD *)((char *)v49 + 2393);
      }
      else
      {
        *(void *)(v53 + 2384) = v127;
        *(unsigned char *)(v53 + 2392) = *((unsigned char *)v49 + 2392);
        *(void *)(v53 + 2400) = v49[300];
        *(unsigned char *)(v53 + 2408) = *((unsigned char *)v49 + 2408);
        swift_bridgeObjectRetain();
      }
      uint64_t v128 = v49[302];
      if (v128 == 1)
      {
        *(_OWORD *)(v53 + 2416) = *((_OWORD *)v49 + 151);
        *(_OWORD *)(v53 + 2425) = *(_OWORD *)((char *)v49 + 2425);
      }
      else
      {
        *(void *)(v53 + 2416) = v128;
        *(unsigned char *)(v53 + 2424) = *((unsigned char *)v49 + 2424);
        *(void *)(v53 + 2432) = v49[304];
        *(unsigned char *)(v53 + 2440) = *((unsigned char *)v49 + 2440);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 2448) = *((_OWORD *)v49 + 153);
      *(unsigned char *)(v53 + 2464) = *((unsigned char *)v49 + 2464);
      *(unsigned char *)(v53 + 2488) = *((unsigned char *)v49 + 2488);
      *(_OWORD *)(v53 + 2472) = *(_OWORD *)(v49 + 309);
      *(_DWORD *)(v53 + 2489) = *(_DWORD *)((char *)v49 + 2489);
      *(_WORD *)(v53 + 2493) = *(_WORD *)((char *)v49 + 2493);
      *(unsigned char *)(v53 + 2495) = *((unsigned char *)v49 + 2495);
      *(void *)(v53 + 2496) = v105;
      *(void *)(v53 + 2504) = v49[313];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v129 = (_OWORD *)(v53 + 2512);
    v130 = v49 + 314;
    uint64_t v131 = v49[416];
    if (v131 == 1)
    {
      memcpy(v129, v130, 0x340uLL);
    }
    else
    {
      if (*(void *)v130 == 1)
      {
        _OWORD *v129 = *v130;
        *(_OWORD *)(v53 + 2521) = *(_OWORD *)((char *)v49 + 2521);
      }
      else
      {
        *(void *)(v53 + 2512) = *(void *)v130;
        *(unsigned char *)(v53 + 2520) = *((unsigned char *)v49 + 2520);
        *(void *)(v53 + 2528) = v49[316];
        *(unsigned char *)(v53 + 2536) = *((unsigned char *)v49 + 2536);
        swift_bridgeObjectRetain();
      }
      uint64_t v132 = v49[318];
      if (v132 == 1)
      {
        *(_OWORD *)(v53 + 2544) = *((_OWORD *)v49 + 159);
        *(_OWORD *)(v53 + 2553) = *(_OWORD *)((char *)v49 + 2553);
      }
      else
      {
        *(void *)(v53 + 2544) = v132;
        *(unsigned char *)(v53 + 2552) = *((unsigned char *)v49 + 2552);
        *(void *)(v53 + 2560) = v49[320];
        *(unsigned char *)(v53 + 2568) = *((unsigned char *)v49 + 2568);
        swift_bridgeObjectRetain();
      }
      uint64_t v133 = v49[322];
      if (v133 == 1)
      {
        *(_OWORD *)(v53 + 2576) = *((_OWORD *)v49 + 161);
        *(_OWORD *)(v53 + 2585) = *(_OWORD *)((char *)v49 + 2585);
      }
      else
      {
        *(void *)(v53 + 2576) = v133;
        *(unsigned char *)(v53 + 2584) = *((unsigned char *)v49 + 2584);
        *(void *)(v53 + 2592) = v49[324];
        *(unsigned char *)(v53 + 2600) = *((unsigned char *)v49 + 2600);
        swift_bridgeObjectRetain();
      }
      uint64_t v134 = v49[326];
      if (v134 == 1)
      {
        *(_OWORD *)(v53 + 2608) = *((_OWORD *)v49 + 163);
        *(_OWORD *)(v53 + 2617) = *(_OWORD *)((char *)v49 + 2617);
      }
      else
      {
        *(void *)(v53 + 2608) = v134;
        *(unsigned char *)(v53 + 2616) = *((unsigned char *)v49 + 2616);
        *(void *)(v53 + 2624) = v49[328];
        *(unsigned char *)(v53 + 2632) = *((unsigned char *)v49 + 2632);
        swift_bridgeObjectRetain();
      }
      uint64_t v135 = v49[330];
      if (v135 == 1)
      {
        *(_OWORD *)(v53 + 2640) = *((_OWORD *)v49 + 165);
        *(_OWORD *)(v53 + 2649) = *(_OWORD *)((char *)v49 + 2649);
      }
      else
      {
        *(void *)(v53 + 2640) = v135;
        *(unsigned char *)(v53 + 2648) = *((unsigned char *)v49 + 2648);
        *(void *)(v53 + 2656) = v49[332];
        *(unsigned char *)(v53 + 2664) = *((unsigned char *)v49 + 2664);
        swift_bridgeObjectRetain();
      }
      uint64_t v136 = v49[334];
      if (v136 == 1)
      {
        *(_OWORD *)(v53 + 2672) = *((_OWORD *)v49 + 167);
        *(_OWORD *)(v53 + 2681) = *(_OWORD *)((char *)v49 + 2681);
      }
      else
      {
        *(void *)(v53 + 2672) = v136;
        *(unsigned char *)(v53 + 2680) = *((unsigned char *)v49 + 2680);
        *(void *)(v53 + 2688) = v49[336];
        *(unsigned char *)(v53 + 2696) = *((unsigned char *)v49 + 2696);
        swift_bridgeObjectRetain();
      }
      uint64_t v137 = v49[338];
      if (v137 == 1)
      {
        *(_OWORD *)(v53 + 2704) = *((_OWORD *)v49 + 169);
        *(_OWORD *)(v53 + 2713) = *(_OWORD *)((char *)v49 + 2713);
      }
      else
      {
        *(void *)(v53 + 2704) = v137;
        *(unsigned char *)(v53 + 2712) = *((unsigned char *)v49 + 2712);
        *(void *)(v53 + 2720) = v49[340];
        *(unsigned char *)(v53 + 2728) = *((unsigned char *)v49 + 2728);
        swift_bridgeObjectRetain();
      }
      uint64_t v138 = v49[342];
      if (v138 == 1)
      {
        *(_OWORD *)(v53 + 2736) = *((_OWORD *)v49 + 171);
        *(_OWORD *)(v53 + 2745) = *(_OWORD *)((char *)v49 + 2745);
      }
      else
      {
        *(void *)(v53 + 2736) = v138;
        *(unsigned char *)(v53 + 2744) = *((unsigned char *)v49 + 2744);
        *(void *)(v53 + 2752) = v49[344];
        *(unsigned char *)(v53 + 2760) = *((unsigned char *)v49 + 2760);
        swift_bridgeObjectRetain();
      }
      uint64_t v139 = v49[346];
      if (v139 == 1)
      {
        *(_OWORD *)(v53 + 2768) = *((_OWORD *)v49 + 173);
        *(_OWORD *)(v53 + 2777) = *(_OWORD *)((char *)v49 + 2777);
      }
      else
      {
        *(void *)(v53 + 2768) = v139;
        *(unsigned char *)(v53 + 2776) = *((unsigned char *)v49 + 2776);
        *(void *)(v53 + 2784) = v49[348];
        *(unsigned char *)(v53 + 2792) = *((unsigned char *)v49 + 2792);
        swift_bridgeObjectRetain();
      }
      uint64_t v140 = v49[350];
      if (v140 == 1)
      {
        *(_OWORD *)(v53 + 2800) = *((_OWORD *)v49 + 175);
        *(_OWORD *)(v53 + 2809) = *(_OWORD *)((char *)v49 + 2809);
      }
      else
      {
        *(void *)(v53 + 2800) = v140;
        *(unsigned char *)(v53 + 2808) = *((unsigned char *)v49 + 2808);
        *(void *)(v53 + 2816) = v49[352];
        *(unsigned char *)(v53 + 2824) = *((unsigned char *)v49 + 2824);
        swift_bridgeObjectRetain();
      }
      uint64_t v141 = v49[354];
      if (v141 == 1)
      {
        *(_OWORD *)(v53 + 2832) = *((_OWORD *)v49 + 177);
        *(_OWORD *)(v53 + 2841) = *(_OWORD *)((char *)v49 + 2841);
      }
      else
      {
        *(void *)(v53 + 2832) = v141;
        *(unsigned char *)(v53 + 2840) = *((unsigned char *)v49 + 2840);
        *(void *)(v53 + 2848) = v49[356];
        *(unsigned char *)(v53 + 2856) = *((unsigned char *)v49 + 2856);
        swift_bridgeObjectRetain();
      }
      uint64_t v142 = v49[358];
      if (v142 == 1)
      {
        *(_OWORD *)(v53 + 2864) = *((_OWORD *)v49 + 179);
        *(_OWORD *)(v53 + 2873) = *(_OWORD *)((char *)v49 + 2873);
      }
      else
      {
        *(void *)(v53 + 2864) = v142;
        *(unsigned char *)(v53 + 2872) = *((unsigned char *)v49 + 2872);
        *(void *)(v53 + 2880) = v49[360];
        *(unsigned char *)(v53 + 2888) = *((unsigned char *)v49 + 2888);
        swift_bridgeObjectRetain();
      }
      uint64_t v143 = v49[362];
      if (v143 == 1)
      {
        *(_OWORD *)(v53 + 2896) = *((_OWORD *)v49 + 181);
        *(_OWORD *)(v53 + 2905) = *(_OWORD *)((char *)v49 + 2905);
      }
      else
      {
        *(void *)(v53 + 2896) = v143;
        *(unsigned char *)(v53 + 2904) = *((unsigned char *)v49 + 2904);
        *(void *)(v53 + 2912) = v49[364];
        *(unsigned char *)(v53 + 2920) = *((unsigned char *)v49 + 2920);
        swift_bridgeObjectRetain();
      }
      uint64_t v144 = v49[366];
      if (v144 == 1)
      {
        *(_OWORD *)(v53 + 2928) = *((_OWORD *)v49 + 183);
        *(_OWORD *)(v53 + 2937) = *(_OWORD *)((char *)v49 + 2937);
      }
      else
      {
        *(void *)(v53 + 2928) = v144;
        *(unsigned char *)(v53 + 2936) = *((unsigned char *)v49 + 2936);
        *(void *)(v53 + 2944) = v49[368];
        *(unsigned char *)(v53 + 2952) = *((unsigned char *)v49 + 2952);
        swift_bridgeObjectRetain();
      }
      uint64_t v145 = v49[370];
      if (v145 == 1)
      {
        *(_OWORD *)(v53 + 2960) = *((_OWORD *)v49 + 185);
        *(_OWORD *)(v53 + 2969) = *(_OWORD *)((char *)v49 + 2969);
      }
      else
      {
        *(void *)(v53 + 2960) = v145;
        *(unsigned char *)(v53 + 2968) = *((unsigned char *)v49 + 2968);
        *(void *)(v53 + 2976) = v49[372];
        *(unsigned char *)(v53 + 2984) = *((unsigned char *)v49 + 2984);
        swift_bridgeObjectRetain();
      }
      uint64_t v146 = v49[374];
      if (v146 == 1)
      {
        *(_OWORD *)(v53 + 2992) = *((_OWORD *)v49 + 187);
        *(_OWORD *)(v53 + 3001) = *(_OWORD *)((char *)v49 + 3001);
      }
      else
      {
        *(void *)(v53 + 2992) = v146;
        *(unsigned char *)(v53 + 3000) = *((unsigned char *)v49 + 3000);
        *(void *)(v53 + 3008) = v49[376];
        *(unsigned char *)(v53 + 3016) = *((unsigned char *)v49 + 3016);
        swift_bridgeObjectRetain();
      }
      uint64_t v147 = v49[378];
      if (v147 == 1)
      {
        *(_OWORD *)(v53 + 3024) = *((_OWORD *)v49 + 189);
        *(_OWORD *)(v53 + 3033) = *(_OWORD *)((char *)v49 + 3033);
      }
      else
      {
        *(void *)(v53 + 3024) = v147;
        *(unsigned char *)(v53 + 3032) = *((unsigned char *)v49 + 3032);
        *(void *)(v53 + 3040) = v49[380];
        *(unsigned char *)(v53 + 3048) = *((unsigned char *)v49 + 3048);
        swift_bridgeObjectRetain();
      }
      uint64_t v148 = v49[382];
      if (v148 == 1)
      {
        *(_OWORD *)(v53 + 3056) = *((_OWORD *)v49 + 191);
        *(_OWORD *)(v53 + 3065) = *(_OWORD *)((char *)v49 + 3065);
      }
      else
      {
        *(void *)(v53 + 3056) = v148;
        *(unsigned char *)(v53 + 3064) = *((unsigned char *)v49 + 3064);
        *(void *)(v53 + 3072) = v49[384];
        *(unsigned char *)(v53 + 3080) = *((unsigned char *)v49 + 3080);
        swift_bridgeObjectRetain();
      }
      uint64_t v149 = v49[386];
      if (v149 == 1)
      {
        *(_OWORD *)(v53 + 3088) = *((_OWORD *)v49 + 193);
        *(_OWORD *)(v53 + 3097) = *(_OWORD *)((char *)v49 + 3097);
      }
      else
      {
        *(void *)(v53 + 3088) = v149;
        *(unsigned char *)(v53 + 3096) = *((unsigned char *)v49 + 3096);
        *(void *)(v53 + 3104) = v49[388];
        *(unsigned char *)(v53 + 3112) = *((unsigned char *)v49 + 3112);
        swift_bridgeObjectRetain();
      }
      uint64_t v150 = v49[390];
      if (v150 == 1)
      {
        *(_OWORD *)(v53 + 3120) = *((_OWORD *)v49 + 195);
        *(_OWORD *)(v53 + 3129) = *(_OWORD *)((char *)v49 + 3129);
      }
      else
      {
        *(void *)(v53 + 3120) = v150;
        *(unsigned char *)(v53 + 3128) = *((unsigned char *)v49 + 3128);
        *(void *)(v53 + 3136) = v49[392];
        *(unsigned char *)(v53 + 3144) = *((unsigned char *)v49 + 3144);
        swift_bridgeObjectRetain();
      }
      uint64_t v151 = v49[394];
      if (v151 == 1)
      {
        *(_OWORD *)(v53 + 3152) = *((_OWORD *)v49 + 197);
        *(_OWORD *)(v53 + 3161) = *(_OWORD *)((char *)v49 + 3161);
      }
      else
      {
        *(void *)(v53 + 3152) = v151;
        *(unsigned char *)(v53 + 3160) = *((unsigned char *)v49 + 3160);
        *(void *)(v53 + 3168) = v49[396];
        *(unsigned char *)(v53 + 3176) = *((unsigned char *)v49 + 3176);
        swift_bridgeObjectRetain();
      }
      uint64_t v152 = v49[398];
      if (v152 == 1)
      {
        *(_OWORD *)(v53 + 3184) = *((_OWORD *)v49 + 199);
        *(_OWORD *)(v53 + 3193) = *(_OWORD *)((char *)v49 + 3193);
      }
      else
      {
        *(void *)(v53 + 3184) = v152;
        *(unsigned char *)(v53 + 3192) = *((unsigned char *)v49 + 3192);
        *(void *)(v53 + 3200) = v49[400];
        *(unsigned char *)(v53 + 3208) = *((unsigned char *)v49 + 3208);
        swift_bridgeObjectRetain();
      }
      uint64_t v153 = v49[402];
      if (v153 == 1)
      {
        *(_OWORD *)(v53 + 3216) = *((_OWORD *)v49 + 201);
        *(_OWORD *)(v53 + 3225) = *(_OWORD *)((char *)v49 + 3225);
      }
      else
      {
        *(void *)(v53 + 3216) = v153;
        *(unsigned char *)(v53 + 3224) = *((unsigned char *)v49 + 3224);
        *(void *)(v53 + 3232) = v49[404];
        *(unsigned char *)(v53 + 3240) = *((unsigned char *)v49 + 3240);
        swift_bridgeObjectRetain();
      }
      uint64_t v154 = v49[406];
      if (v154 == 1)
      {
        *(_OWORD *)(v53 + 3248) = *((_OWORD *)v49 + 203);
        *(_OWORD *)(v53 + 3257) = *(_OWORD *)((char *)v49 + 3257);
      }
      else
      {
        *(void *)(v53 + 3248) = v154;
        *(unsigned char *)(v53 + 3256) = *((unsigned char *)v49 + 3256);
        *(void *)(v53 + 3264) = v49[408];
        *(unsigned char *)(v53 + 3272) = *((unsigned char *)v49 + 3272);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 3280) = *((_OWORD *)v49 + 205);
      *(unsigned char *)(v53 + 3296) = *((unsigned char *)v49 + 3296);
      *(unsigned char *)(v53 + 3320) = *((unsigned char *)v49 + 3320);
      *(_OWORD *)(v53 + 3304) = *(_OWORD *)(v49 + 413);
      *(_DWORD *)(v53 + 3321) = *(_DWORD *)((char *)v49 + 3321);
      *(_WORD *)(v53 + 3325) = *(_WORD *)((char *)v49 + 3325);
      *(unsigned char *)(v53 + 3327) = *((unsigned char *)v49 + 3327);
      *(void *)(v53 + 3328) = v131;
      *(void *)(v53 + 3336) = v49[417];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v155 = (_OWORD *)(v53 + 3344);
    v156 = v49 + 418;
    uint64_t v157 = v49[520];
    if (v157 == 1)
    {
      memcpy(v155, v156, 0x340uLL);
    }
    else
    {
      if (*(void *)v156 == 1)
      {
        _OWORD *v155 = *v156;
        *(_OWORD *)(v53 + 3353) = *(_OWORD *)((char *)v49 + 3353);
      }
      else
      {
        *(void *)(v53 + 3344) = *(void *)v156;
        *(unsigned char *)(v53 + 3352) = *((unsigned char *)v49 + 3352);
        *(void *)(v53 + 3360) = v49[420];
        *(unsigned char *)(v53 + 3368) = *((unsigned char *)v49 + 3368);
        swift_bridgeObjectRetain();
      }
      uint64_t v158 = v49[422];
      if (v158 == 1)
      {
        *(_OWORD *)(v53 + 3376) = *((_OWORD *)v49 + 211);
        *(_OWORD *)(v53 + 3385) = *(_OWORD *)((char *)v49 + 3385);
      }
      else
      {
        *(void *)(v53 + 3376) = v158;
        *(unsigned char *)(v53 + 3384) = *((unsigned char *)v49 + 3384);
        *(void *)(v53 + 3392) = v49[424];
        *(unsigned char *)(v53 + 3400) = *((unsigned char *)v49 + 3400);
        swift_bridgeObjectRetain();
      }
      uint64_t v159 = v49[426];
      if (v159 == 1)
      {
        *(_OWORD *)(v53 + 3408) = *((_OWORD *)v49 + 213);
        *(_OWORD *)(v53 + 3417) = *(_OWORD *)((char *)v49 + 3417);
      }
      else
      {
        *(void *)(v53 + 3408) = v159;
        *(unsigned char *)(v53 + 3416) = *((unsigned char *)v49 + 3416);
        *(void *)(v53 + 3424) = v49[428];
        *(unsigned char *)(v53 + 3432) = *((unsigned char *)v49 + 3432);
        swift_bridgeObjectRetain();
      }
      uint64_t v160 = v49[430];
      if (v160 == 1)
      {
        *(_OWORD *)(v53 + 3440) = *((_OWORD *)v49 + 215);
        *(_OWORD *)(v53 + 3449) = *(_OWORD *)((char *)v49 + 3449);
      }
      else
      {
        *(void *)(v53 + 3440) = v160;
        *(unsigned char *)(v53 + 3448) = *((unsigned char *)v49 + 3448);
        *(void *)(v53 + 3456) = v49[432];
        *(unsigned char *)(v53 + 3464) = *((unsigned char *)v49 + 3464);
        swift_bridgeObjectRetain();
      }
      uint64_t v161 = v49[434];
      if (v161 == 1)
      {
        *(_OWORD *)(v53 + 3472) = *((_OWORD *)v49 + 217);
        *(_OWORD *)(v53 + 3481) = *(_OWORD *)((char *)v49 + 3481);
      }
      else
      {
        *(void *)(v53 + 3472) = v161;
        *(unsigned char *)(v53 + 3480) = *((unsigned char *)v49 + 3480);
        *(void *)(v53 + 3488) = v49[436];
        *(unsigned char *)(v53 + 3496) = *((unsigned char *)v49 + 3496);
        swift_bridgeObjectRetain();
      }
      uint64_t v162 = v49[438];
      if (v162 == 1)
      {
        *(_OWORD *)(v53 + 3504) = *((_OWORD *)v49 + 219);
        *(_OWORD *)(v53 + 3513) = *(_OWORD *)((char *)v49 + 3513);
      }
      else
      {
        *(void *)(v53 + 3504) = v162;
        *(unsigned char *)(v53 + 3512) = *((unsigned char *)v49 + 3512);
        *(void *)(v53 + 3520) = v49[440];
        *(unsigned char *)(v53 + 3528) = *((unsigned char *)v49 + 3528);
        swift_bridgeObjectRetain();
      }
      uint64_t v163 = v49[442];
      if (v163 == 1)
      {
        *(_OWORD *)(v53 + 3536) = *((_OWORD *)v49 + 221);
        *(_OWORD *)(v53 + 3545) = *(_OWORD *)((char *)v49 + 3545);
      }
      else
      {
        *(void *)(v53 + 3536) = v163;
        *(unsigned char *)(v53 + 3544) = *((unsigned char *)v49 + 3544);
        *(void *)(v53 + 3552) = v49[444];
        *(unsigned char *)(v53 + 3560) = *((unsigned char *)v49 + 3560);
        swift_bridgeObjectRetain();
      }
      uint64_t v164 = v49[446];
      if (v164 == 1)
      {
        *(_OWORD *)(v53 + 3568) = *((_OWORD *)v49 + 223);
        *(_OWORD *)(v53 + 3577) = *(_OWORD *)((char *)v49 + 3577);
      }
      else
      {
        *(void *)(v53 + 3568) = v164;
        *(unsigned char *)(v53 + 3576) = *((unsigned char *)v49 + 3576);
        *(void *)(v53 + 3584) = v49[448];
        *(unsigned char *)(v53 + 3592) = *((unsigned char *)v49 + 3592);
        swift_bridgeObjectRetain();
      }
      uint64_t v165 = v49[450];
      if (v165 == 1)
      {
        *(_OWORD *)(v53 + 3600) = *((_OWORD *)v49 + 225);
        *(_OWORD *)(v53 + 3609) = *(_OWORD *)((char *)v49 + 3609);
      }
      else
      {
        *(void *)(v53 + 3600) = v165;
        *(unsigned char *)(v53 + 3608) = *((unsigned char *)v49 + 3608);
        *(void *)(v53 + 3616) = v49[452];
        *(unsigned char *)(v53 + 3624) = *((unsigned char *)v49 + 3624);
        swift_bridgeObjectRetain();
      }
      uint64_t v166 = v49[454];
      if (v166 == 1)
      {
        *(_OWORD *)(v53 + 3632) = *((_OWORD *)v49 + 227);
        *(_OWORD *)(v53 + 3641) = *(_OWORD *)((char *)v49 + 3641);
      }
      else
      {
        *(void *)(v53 + 3632) = v166;
        *(unsigned char *)(v53 + 3640) = *((unsigned char *)v49 + 3640);
        *(void *)(v53 + 3648) = v49[456];
        *(unsigned char *)(v53 + 3656) = *((unsigned char *)v49 + 3656);
        swift_bridgeObjectRetain();
      }
      uint64_t v167 = v49[458];
      if (v167 == 1)
      {
        *(_OWORD *)(v53 + 3664) = *((_OWORD *)v49 + 229);
        *(_OWORD *)(v53 + 3673) = *(_OWORD *)((char *)v49 + 3673);
      }
      else
      {
        *(void *)(v53 + 3664) = v167;
        *(unsigned char *)(v53 + 3672) = *((unsigned char *)v49 + 3672);
        *(void *)(v53 + 3680) = v49[460];
        *(unsigned char *)(v53 + 3688) = *((unsigned char *)v49 + 3688);
        swift_bridgeObjectRetain();
      }
      uint64_t v168 = v49[462];
      if (v168 == 1)
      {
        *(_OWORD *)(v53 + 3696) = *((_OWORD *)v49 + 231);
        *(_OWORD *)(v53 + 3705) = *(_OWORD *)((char *)v49 + 3705);
      }
      else
      {
        *(void *)(v53 + 3696) = v168;
        *(unsigned char *)(v53 + 3704) = *((unsigned char *)v49 + 3704);
        *(void *)(v53 + 3712) = v49[464];
        *(unsigned char *)(v53 + 3720) = *((unsigned char *)v49 + 3720);
        swift_bridgeObjectRetain();
      }
      uint64_t v169 = v49[466];
      if (v169 == 1)
      {
        *(_OWORD *)(v53 + 3728) = *((_OWORD *)v49 + 233);
        *(_OWORD *)(v53 + 3737) = *(_OWORD *)((char *)v49 + 3737);
      }
      else
      {
        *(void *)(v53 + 3728) = v169;
        *(unsigned char *)(v53 + 3736) = *((unsigned char *)v49 + 3736);
        *(void *)(v53 + 3744) = v49[468];
        *(unsigned char *)(v53 + 3752) = *((unsigned char *)v49 + 3752);
        swift_bridgeObjectRetain();
      }
      uint64_t v170 = v49[470];
      if (v170 == 1)
      {
        *(_OWORD *)(v53 + 3760) = *((_OWORD *)v49 + 235);
        *(_OWORD *)(v53 + 3769) = *(_OWORD *)((char *)v49 + 3769);
      }
      else
      {
        *(void *)(v53 + 3760) = v170;
        *(unsigned char *)(v53 + 3768) = *((unsigned char *)v49 + 3768);
        *(void *)(v53 + 3776) = v49[472];
        *(unsigned char *)(v53 + 3784) = *((unsigned char *)v49 + 3784);
        swift_bridgeObjectRetain();
      }
      uint64_t v171 = v49[474];
      if (v171 == 1)
      {
        *(_OWORD *)(v53 + 3792) = *((_OWORD *)v49 + 237);
        *(_OWORD *)(v53 + 3801) = *(_OWORD *)((char *)v49 + 3801);
      }
      else
      {
        *(void *)(v53 + 3792) = v171;
        *(unsigned char *)(v53 + 3800) = *((unsigned char *)v49 + 3800);
        *(void *)(v53 + 3808) = v49[476];
        *(unsigned char *)(v53 + 3816) = *((unsigned char *)v49 + 3816);
        swift_bridgeObjectRetain();
      }
      uint64_t v172 = v49[478];
      if (v172 == 1)
      {
        *(_OWORD *)(v53 + 3824) = *((_OWORD *)v49 + 239);
        *(_OWORD *)(v53 + 3833) = *(_OWORD *)((char *)v49 + 3833);
      }
      else
      {
        *(void *)(v53 + 3824) = v172;
        *(unsigned char *)(v53 + 3832) = *((unsigned char *)v49 + 3832);
        *(void *)(v53 + 3840) = v49[480];
        *(unsigned char *)(v53 + 3848) = *((unsigned char *)v49 + 3848);
        swift_bridgeObjectRetain();
      }
      uint64_t v173 = v49[482];
      if (v173 == 1)
      {
        *(_OWORD *)(v53 + 3856) = *((_OWORD *)v49 + 241);
        *(_OWORD *)(v53 + 3865) = *(_OWORD *)((char *)v49 + 3865);
      }
      else
      {
        *(void *)(v53 + 3856) = v173;
        *(unsigned char *)(v53 + 3864) = *((unsigned char *)v49 + 3864);
        *(void *)(v53 + 3872) = v49[484];
        *(unsigned char *)(v53 + 3880) = *((unsigned char *)v49 + 3880);
        swift_bridgeObjectRetain();
      }
      uint64_t v174 = v49[486];
      if (v174 == 1)
      {
        *(_OWORD *)(v53 + 3888) = *((_OWORD *)v49 + 243);
        *(_OWORD *)(v53 + 3897) = *(_OWORD *)((char *)v49 + 3897);
      }
      else
      {
        *(void *)(v53 + 3888) = v174;
        *(unsigned char *)(v53 + 3896) = *((unsigned char *)v49 + 3896);
        *(void *)(v53 + 3904) = v49[488];
        *(unsigned char *)(v53 + 3912) = *((unsigned char *)v49 + 3912);
        swift_bridgeObjectRetain();
      }
      uint64_t v175 = v49[490];
      if (v175 == 1)
      {
        *(_OWORD *)(v53 + 3920) = *((_OWORD *)v49 + 245);
        *(_OWORD *)(v53 + 3929) = *(_OWORD *)((char *)v49 + 3929);
      }
      else
      {
        *(void *)(v53 + 3920) = v175;
        *(unsigned char *)(v53 + 3928) = *((unsigned char *)v49 + 3928);
        *(void *)(v53 + 3936) = v49[492];
        *(unsigned char *)(v53 + 3944) = *((unsigned char *)v49 + 3944);
        swift_bridgeObjectRetain();
      }
      uint64_t v176 = v49[494];
      if (v176 == 1)
      {
        *(_OWORD *)(v53 + 3952) = *((_OWORD *)v49 + 247);
        *(_OWORD *)(v53 + 3961) = *(_OWORD *)((char *)v49 + 3961);
      }
      else
      {
        *(void *)(v53 + 3952) = v176;
        *(unsigned char *)(v53 + 3960) = *((unsigned char *)v49 + 3960);
        *(void *)(v53 + 3968) = v49[496];
        *(unsigned char *)(v53 + 3976) = *((unsigned char *)v49 + 3976);
        swift_bridgeObjectRetain();
      }
      uint64_t v177 = v49[498];
      if (v177 == 1)
      {
        *(_OWORD *)(v53 + 3984) = *((_OWORD *)v49 + 249);
        *(_OWORD *)(v53 + 3993) = *(_OWORD *)((char *)v49 + 3993);
      }
      else
      {
        *(void *)(v53 + 3984) = v177;
        *(unsigned char *)(v53 + 3992) = *((unsigned char *)v49 + 3992);
        *(void *)(v53 + 4000) = v49[500];
        *(unsigned char *)(v53 + 4008) = *((unsigned char *)v49 + 4008);
        swift_bridgeObjectRetain();
      }
      uint64_t v178 = v49[502];
      if (v178 == 1)
      {
        *(_OWORD *)(v53 + 4016) = *((_OWORD *)v49 + 251);
        *(_OWORD *)(v53 + 4025) = *(_OWORD *)((char *)v49 + 4025);
      }
      else
      {
        *(void *)(v53 + 4016) = v178;
        *(unsigned char *)(v53 + 4024) = *((unsigned char *)v49 + 4024);
        *(void *)(v53 + 4032) = v49[504];
        *(unsigned char *)(v53 + 4040) = *((unsigned char *)v49 + 4040);
        swift_bridgeObjectRetain();
      }
      uint64_t v179 = v49[506];
      if (v179 == 1)
      {
        *(_OWORD *)(v53 + 4048) = *((_OWORD *)v49 + 253);
        *(_OWORD *)(v53 + 4057) = *(_OWORD *)((char *)v49 + 4057);
      }
      else
      {
        *(void *)(v53 + 4048) = v179;
        *(unsigned char *)(v53 + 4056) = *((unsigned char *)v49 + 4056);
        *(void *)(v53 + 4064) = v49[508];
        *(unsigned char *)(v53 + 4072) = *((unsigned char *)v49 + 4072);
        swift_bridgeObjectRetain();
      }
      uint64_t v180 = v49[510];
      if (v180 == 1)
      {
        *(_OWORD *)(v53 + 4080) = *((_OWORD *)v49 + 255);
        *(_OWORD *)(v53 + 4089) = *(_OWORD *)((char *)v49 + 4089);
      }
      else
      {
        *(void *)(v53 + 4080) = v180;
        *(unsigned char *)(v53 + 4088) = *((unsigned char *)v49 + 4088);
        *(unsigned char *)(v53 + 4104) = *((unsigned char *)v49 + 4104);
        *(void *)(v53 + 4096) = v49[512];
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 4112) = *((_OWORD *)v49 + 257);
      *(unsigned char *)(v53 + 4128) = *((unsigned char *)v49 + 4128);
      *(_OWORD *)(v53 + 4136) = *(_OWORD *)(v49 + 517);
      *(unsigned char *)(v53 + 4152) = *((unsigned char *)v49 + 4152);
      *(_DWORD *)(v53 + 4153) = *(_DWORD *)((char *)v49 + 4153);
      *(_WORD *)(v53 + 4157) = *(_WORD *)((char *)v49 + 4157);
      *(unsigned char *)(v53 + 4159) = *((unsigned char *)v49 + 4159);
      *(void *)(v53 + 4160) = v157;
      *(void *)(v53 + 4168) = v49[521];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v181 = (_OWORD *)(v53 + 4176);
    v182 = v49 + 522;
    uint64_t v183 = v49[624];
    if (v183 == 1)
    {
      memcpy(v181, v182, 0x340uLL);
    }
    else
    {
      if (*(void *)v182 == 1)
      {
        _OWORD *v181 = *v182;
        *(_OWORD *)(v53 + 4185) = *(_OWORD *)((char *)v49 + 4185);
      }
      else
      {
        *(void *)(v53 + 4176) = *(void *)v182;
        *(unsigned char *)(v53 + 4184) = *((unsigned char *)v49 + 4184);
        *(void *)(v53 + 4192) = v49[524];
        *(unsigned char *)(v53 + 4200) = *((unsigned char *)v49 + 4200);
        swift_bridgeObjectRetain();
      }
      uint64_t v184 = v49[526];
      if (v184 == 1)
      {
        *(_OWORD *)(v53 + 4208) = *((_OWORD *)v49 + 263);
        *(_OWORD *)(v53 + 4217) = *(_OWORD *)((char *)v49 + 4217);
      }
      else
      {
        *(void *)(v53 + 4208) = v184;
        *(unsigned char *)(v53 + 4216) = *((unsigned char *)v49 + 4216);
        *(void *)(v53 + 4224) = v49[528];
        *(unsigned char *)(v53 + 4232) = *((unsigned char *)v49 + 4232);
        swift_bridgeObjectRetain();
      }
      uint64_t v185 = v49[530];
      if (v185 == 1)
      {
        *(_OWORD *)(v53 + 4240) = *((_OWORD *)v49 + 265);
        *(_OWORD *)(v53 + 4249) = *(_OWORD *)((char *)v49 + 4249);
      }
      else
      {
        *(void *)(v53 + 4240) = v185;
        *(unsigned char *)(v53 + 4248) = *((unsigned char *)v49 + 4248);
        *(void *)(v53 + 4256) = v49[532];
        *(unsigned char *)(v53 + 4264) = *((unsigned char *)v49 + 4264);
        swift_bridgeObjectRetain();
      }
      uint64_t v186 = v49[534];
      if (v186 == 1)
      {
        *(_OWORD *)(v53 + 4272) = *((_OWORD *)v49 + 267);
        *(_OWORD *)(v53 + 4281) = *(_OWORD *)((char *)v49 + 4281);
      }
      else
      {
        *(void *)(v53 + 4272) = v186;
        *(unsigned char *)(v53 + 4280) = *((unsigned char *)v49 + 4280);
        *(void *)(v53 + 4288) = v49[536];
        *(unsigned char *)(v53 + 4296) = *((unsigned char *)v49 + 4296);
        swift_bridgeObjectRetain();
      }
      uint64_t v187 = v49[538];
      if (v187 == 1)
      {
        *(_OWORD *)(v53 + 4304) = *((_OWORD *)v49 + 269);
        *(_OWORD *)(v53 + 4313) = *(_OWORD *)((char *)v49 + 4313);
      }
      else
      {
        *(void *)(v53 + 4304) = v187;
        *(unsigned char *)(v53 + 4312) = *((unsigned char *)v49 + 4312);
        *(void *)(v53 + 4320) = v49[540];
        *(unsigned char *)(v53 + 4328) = *((unsigned char *)v49 + 4328);
        swift_bridgeObjectRetain();
      }
      uint64_t v188 = v49[542];
      if (v188 == 1)
      {
        *(_OWORD *)(v53 + 4336) = *((_OWORD *)v49 + 271);
        *(_OWORD *)(v53 + 4345) = *(_OWORD *)((char *)v49 + 4345);
      }
      else
      {
        *(void *)(v53 + 4336) = v188;
        *(unsigned char *)(v53 + 4344) = *((unsigned char *)v49 + 4344);
        *(void *)(v53 + 4352) = v49[544];
        *(unsigned char *)(v53 + 4360) = *((unsigned char *)v49 + 4360);
        swift_bridgeObjectRetain();
      }
      uint64_t v189 = v49[546];
      if (v189 == 1)
      {
        *(_OWORD *)(v53 + 4368) = *((_OWORD *)v49 + 273);
        *(_OWORD *)(v53 + 4377) = *(_OWORD *)((char *)v49 + 4377);
      }
      else
      {
        *(void *)(v53 + 4368) = v189;
        *(unsigned char *)(v53 + 4376) = *((unsigned char *)v49 + 4376);
        *(void *)(v53 + 4384) = v49[548];
        *(unsigned char *)(v53 + 4392) = *((unsigned char *)v49 + 4392);
        swift_bridgeObjectRetain();
      }
      uint64_t v190 = v49[550];
      if (v190 == 1)
      {
        *(_OWORD *)(v53 + 4400) = *((_OWORD *)v49 + 275);
        *(_OWORD *)(v53 + 4409) = *(_OWORD *)((char *)v49 + 4409);
      }
      else
      {
        *(void *)(v53 + 4400) = v190;
        *(unsigned char *)(v53 + 4408) = *((unsigned char *)v49 + 4408);
        *(void *)(v53 + 4416) = v49[552];
        *(unsigned char *)(v53 + 4424) = *((unsigned char *)v49 + 4424);
        swift_bridgeObjectRetain();
      }
      uint64_t v191 = v49[554];
      if (v191 == 1)
      {
        *(_OWORD *)(v53 + 4432) = *((_OWORD *)v49 + 277);
        *(_OWORD *)(v53 + 4441) = *(_OWORD *)((char *)v49 + 4441);
      }
      else
      {
        *(void *)(v53 + 4432) = v191;
        *(unsigned char *)(v53 + 4440) = *((unsigned char *)v49 + 4440);
        *(void *)(v53 + 4448) = v49[556];
        *(unsigned char *)(v53 + 4456) = *((unsigned char *)v49 + 4456);
        swift_bridgeObjectRetain();
      }
      uint64_t v192 = v49[558];
      if (v192 == 1)
      {
        *(_OWORD *)(v53 + 4464) = *((_OWORD *)v49 + 279);
        *(_OWORD *)(v53 + 4473) = *(_OWORD *)((char *)v49 + 4473);
      }
      else
      {
        *(void *)(v53 + 4464) = v192;
        *(unsigned char *)(v53 + 4472) = *((unsigned char *)v49 + 4472);
        *(void *)(v53 + 4480) = v49[560];
        *(unsigned char *)(v53 + 4488) = *((unsigned char *)v49 + 4488);
        swift_bridgeObjectRetain();
      }
      uint64_t v193 = v49[562];
      if (v193 == 1)
      {
        *(_OWORD *)(v53 + 4496) = *((_OWORD *)v49 + 281);
        *(_OWORD *)(v53 + 4505) = *(_OWORD *)((char *)v49 + 4505);
      }
      else
      {
        *(void *)(v53 + 4496) = v193;
        *(unsigned char *)(v53 + 4504) = *((unsigned char *)v49 + 4504);
        *(void *)(v53 + 4512) = v49[564];
        *(unsigned char *)(v53 + 4520) = *((unsigned char *)v49 + 4520);
        swift_bridgeObjectRetain();
      }
      uint64_t v194 = v49[566];
      if (v194 == 1)
      {
        *(_OWORD *)(v53 + 4528) = *((_OWORD *)v49 + 283);
        *(_OWORD *)(v53 + 4537) = *(_OWORD *)((char *)v49 + 4537);
      }
      else
      {
        *(void *)(v53 + 4528) = v194;
        *(unsigned char *)(v53 + 4536) = *((unsigned char *)v49 + 4536);
        *(void *)(v53 + 4544) = v49[568];
        *(unsigned char *)(v53 + 4552) = *((unsigned char *)v49 + 4552);
        swift_bridgeObjectRetain();
      }
      uint64_t v195 = v49[570];
      if (v195 == 1)
      {
        *(_OWORD *)(v53 + 4560) = *((_OWORD *)v49 + 285);
        *(_OWORD *)(v53 + 4569) = *(_OWORD *)((char *)v49 + 4569);
      }
      else
      {
        *(void *)(v53 + 4560) = v195;
        *(unsigned char *)(v53 + 4568) = *((unsigned char *)v49 + 4568);
        *(void *)(v53 + 4576) = v49[572];
        *(unsigned char *)(v53 + 4584) = *((unsigned char *)v49 + 4584);
        swift_bridgeObjectRetain();
      }
      uint64_t v196 = v49[574];
      if (v196 == 1)
      {
        *(_OWORD *)(v53 + 4592) = *((_OWORD *)v49 + 287);
        *(_OWORD *)(v53 + 4601) = *(_OWORD *)((char *)v49 + 4601);
      }
      else
      {
        *(void *)(v53 + 4592) = v196;
        *(unsigned char *)(v53 + 4600) = *((unsigned char *)v49 + 4600);
        *(void *)(v53 + 4608) = v49[576];
        *(unsigned char *)(v53 + 4616) = *((unsigned char *)v49 + 4616);
        swift_bridgeObjectRetain();
      }
      uint64_t v197 = v49[578];
      if (v197 == 1)
      {
        *(_OWORD *)(v53 + 4624) = *((_OWORD *)v49 + 289);
        *(_OWORD *)(v53 + 4633) = *(_OWORD *)((char *)v49 + 4633);
      }
      else
      {
        *(void *)(v53 + 4624) = v197;
        *(unsigned char *)(v53 + 4632) = *((unsigned char *)v49 + 4632);
        *(void *)(v53 + 4640) = v49[580];
        *(unsigned char *)(v53 + 4648) = *((unsigned char *)v49 + 4648);
        swift_bridgeObjectRetain();
      }
      uint64_t v198 = v49[582];
      if (v198 == 1)
      {
        *(_OWORD *)(v53 + 4656) = *((_OWORD *)v49 + 291);
        *(_OWORD *)(v53 + 4665) = *(_OWORD *)((char *)v49 + 4665);
      }
      else
      {
        *(void *)(v53 + 4656) = v198;
        *(unsigned char *)(v53 + 4664) = *((unsigned char *)v49 + 4664);
        *(void *)(v53 + 4672) = v49[584];
        *(unsigned char *)(v53 + 4680) = *((unsigned char *)v49 + 4680);
        swift_bridgeObjectRetain();
      }
      uint64_t v199 = v49[586];
      if (v199 == 1)
      {
        *(_OWORD *)(v53 + 4688) = *((_OWORD *)v49 + 293);
        *(_OWORD *)(v53 + 4697) = *(_OWORD *)((char *)v49 + 4697);
      }
      else
      {
        *(void *)(v53 + 4688) = v199;
        *(unsigned char *)(v53 + 4696) = *((unsigned char *)v49 + 4696);
        *(void *)(v53 + 4704) = v49[588];
        *(unsigned char *)(v53 + 4712) = *((unsigned char *)v49 + 4712);
        swift_bridgeObjectRetain();
      }
      uint64_t v200 = v49[590];
      if (v200 == 1)
      {
        *(_OWORD *)(v53 + 4720) = *((_OWORD *)v49 + 295);
        *(_OWORD *)(v53 + 4729) = *(_OWORD *)((char *)v49 + 4729);
      }
      else
      {
        *(void *)(v53 + 4720) = v200;
        *(unsigned char *)(v53 + 4728) = *((unsigned char *)v49 + 4728);
        *(void *)(v53 + 4736) = v49[592];
        *(unsigned char *)(v53 + 4744) = *((unsigned char *)v49 + 4744);
        swift_bridgeObjectRetain();
      }
      uint64_t v201 = v49[594];
      if (v201 == 1)
      {
        *(_OWORD *)(v53 + 4752) = *((_OWORD *)v49 + 297);
        *(_OWORD *)(v53 + 4761) = *(_OWORD *)((char *)v49 + 4761);
      }
      else
      {
        *(void *)(v53 + 4752) = v201;
        *(unsigned char *)(v53 + 4760) = *((unsigned char *)v49 + 4760);
        *(void *)(v53 + 4768) = v49[596];
        *(unsigned char *)(v53 + 4776) = *((unsigned char *)v49 + 4776);
        swift_bridgeObjectRetain();
      }
      uint64_t v202 = v49[598];
      if (v202 == 1)
      {
        *(_OWORD *)(v53 + 4784) = *((_OWORD *)v49 + 299);
        *(_OWORD *)(v53 + 4793) = *(_OWORD *)((char *)v49 + 4793);
      }
      else
      {
        *(void *)(v53 + 4784) = v202;
        *(unsigned char *)(v53 + 4792) = *((unsigned char *)v49 + 4792);
        *(void *)(v53 + 4800) = v49[600];
        *(unsigned char *)(v53 + 4808) = *((unsigned char *)v49 + 4808);
        swift_bridgeObjectRetain();
      }
      uint64_t v203 = v49[602];
      if (v203 == 1)
      {
        *(_OWORD *)(v53 + 4816) = *((_OWORD *)v49 + 301);
        *(_OWORD *)(v53 + 4825) = *(_OWORD *)((char *)v49 + 4825);
      }
      else
      {
        *(void *)(v53 + 4816) = v203;
        *(unsigned char *)(v53 + 4824) = *((unsigned char *)v49 + 4824);
        *(void *)(v53 + 4832) = v49[604];
        *(unsigned char *)(v53 + 4840) = *((unsigned char *)v49 + 4840);
        swift_bridgeObjectRetain();
      }
      uint64_t v204 = v49[606];
      if (v204 == 1)
      {
        *(_OWORD *)(v53 + 4848) = *((_OWORD *)v49 + 303);
        *(_OWORD *)(v53 + 4857) = *(_OWORD *)((char *)v49 + 4857);
      }
      else
      {
        *(void *)(v53 + 4848) = v204;
        *(unsigned char *)(v53 + 4856) = *((unsigned char *)v49 + 4856);
        *(void *)(v53 + 4864) = v49[608];
        *(unsigned char *)(v53 + 4872) = *((unsigned char *)v49 + 4872);
        swift_bridgeObjectRetain();
      }
      uint64_t v205 = v49[610];
      if (v205 == 1)
      {
        *(_OWORD *)(v53 + 4880) = *((_OWORD *)v49 + 305);
        *(_OWORD *)(v53 + 4889) = *(_OWORD *)((char *)v49 + 4889);
      }
      else
      {
        *(void *)(v53 + 4880) = v205;
        *(unsigned char *)(v53 + 4888) = *((unsigned char *)v49 + 4888);
        *(void *)(v53 + 4896) = v49[612];
        *(unsigned char *)(v53 + 4904) = *((unsigned char *)v49 + 4904);
        swift_bridgeObjectRetain();
      }
      uint64_t v206 = v49[614];
      if (v206 == 1)
      {
        *(_OWORD *)(v53 + 4912) = *((_OWORD *)v49 + 307);
        *(_OWORD *)(v53 + 4921) = *(_OWORD *)((char *)v49 + 4921);
      }
      else
      {
        *(void *)(v53 + 4912) = v206;
        *(unsigned char *)(v53 + 4920) = *((unsigned char *)v49 + 4920);
        *(void *)(v53 + 4928) = v49[616];
        *(unsigned char *)(v53 + 4936) = *((unsigned char *)v49 + 4936);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 4944) = *((_OWORD *)v49 + 309);
      *(unsigned char *)(v53 + 4960) = *((unsigned char *)v49 + 4960);
      *(_OWORD *)(v53 + 4968) = *(_OWORD *)(v49 + 621);
      *(unsigned char *)(v53 + 4984) = *((unsigned char *)v49 + 4984);
      *(_DWORD *)(v53 + 4985) = *(_DWORD *)((char *)v49 + 4985);
      *(_WORD *)(v53 + 4989) = *(_WORD *)((char *)v49 + 4989);
      *(unsigned char *)(v53 + 4991) = *((unsigned char *)v49 + 4991);
      *(void *)(v53 + 4992) = v183;
      *(void *)(v53 + 5000) = v49[625];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v207 = (_OWORD *)(v53 + 5008);
    v208 = v49 + 626;
    uint64_t v209 = v49[728];
    if (v209 == 1)
    {
      memcpy(v207, v208, 0x340uLL);
    }
    else
    {
      if (*(void *)v208 == 1)
      {
        _OWORD *v207 = *v208;
        *(_OWORD *)(v53 + 5017) = *(_OWORD *)((char *)v49 + 5017);
      }
      else
      {
        *(void *)(v53 + 5008) = *(void *)v208;
        *(unsigned char *)(v53 + 5016) = *((unsigned char *)v49 + 5016);
        *(void *)(v53 + 5024) = v49[628];
        *(unsigned char *)(v53 + 5032) = *((unsigned char *)v49 + 5032);
        swift_bridgeObjectRetain();
      }
      uint64_t v210 = v49[630];
      if (v210 == 1)
      {
        *(_OWORD *)(v53 + 5040) = *((_OWORD *)v49 + 315);
        *(_OWORD *)(v53 + 5049) = *(_OWORD *)((char *)v49 + 5049);
      }
      else
      {
        *(void *)(v53 + 5040) = v210;
        *(unsigned char *)(v53 + 5048) = *((unsigned char *)v49 + 5048);
        *(void *)(v53 + 5056) = v49[632];
        *(unsigned char *)(v53 + 5064) = *((unsigned char *)v49 + 5064);
        swift_bridgeObjectRetain();
      }
      uint64_t v211 = v49[634];
      if (v211 == 1)
      {
        *(_OWORD *)(v53 + 5072) = *((_OWORD *)v49 + 317);
        *(_OWORD *)(v53 + 5081) = *(_OWORD *)((char *)v49 + 5081);
      }
      else
      {
        *(void *)(v53 + 5072) = v211;
        *(unsigned char *)(v53 + 5080) = *((unsigned char *)v49 + 5080);
        *(void *)(v53 + 5088) = v49[636];
        *(unsigned char *)(v53 + 5096) = *((unsigned char *)v49 + 5096);
        swift_bridgeObjectRetain();
      }
      uint64_t v212 = v49[638];
      if (v212 == 1)
      {
        *(_OWORD *)(v53 + 5104) = *((_OWORD *)v49 + 319);
        *(_OWORD *)(v53 + 5113) = *(_OWORD *)((char *)v49 + 5113);
      }
      else
      {
        *(void *)(v53 + 5104) = v212;
        *(unsigned char *)(v53 + 5112) = *((unsigned char *)v49 + 5112);
        *(void *)(v53 + 5120) = v49[640];
        *(unsigned char *)(v53 + 5128) = *((unsigned char *)v49 + 5128);
        swift_bridgeObjectRetain();
      }
      uint64_t v213 = v49[642];
      if (v213 == 1)
      {
        *(_OWORD *)(v53 + 5136) = *((_OWORD *)v49 + 321);
        *(_OWORD *)(v53 + 5145) = *(_OWORD *)((char *)v49 + 5145);
      }
      else
      {
        *(void *)(v53 + 5136) = v213;
        *(unsigned char *)(v53 + 5144) = *((unsigned char *)v49 + 5144);
        *(void *)(v53 + 5152) = v49[644];
        *(unsigned char *)(v53 + 5160) = *((unsigned char *)v49 + 5160);
        swift_bridgeObjectRetain();
      }
      uint64_t v214 = v49[646];
      if (v214 == 1)
      {
        *(_OWORD *)(v53 + 5168) = *((_OWORD *)v49 + 323);
        *(_OWORD *)(v53 + 5177) = *(_OWORD *)((char *)v49 + 5177);
      }
      else
      {
        *(void *)(v53 + 5168) = v214;
        *(unsigned char *)(v53 + 5176) = *((unsigned char *)v49 + 5176);
        *(void *)(v53 + 5184) = v49[648];
        *(unsigned char *)(v53 + 5192) = *((unsigned char *)v49 + 5192);
        swift_bridgeObjectRetain();
      }
      uint64_t v215 = v49[650];
      if (v215 == 1)
      {
        *(_OWORD *)(v53 + 5200) = *((_OWORD *)v49 + 325);
        *(_OWORD *)(v53 + 5209) = *(_OWORD *)((char *)v49 + 5209);
      }
      else
      {
        *(void *)(v53 + 5200) = v215;
        *(unsigned char *)(v53 + 5208) = *((unsigned char *)v49 + 5208);
        *(void *)(v53 + 5216) = v49[652];
        *(unsigned char *)(v53 + 5224) = *((unsigned char *)v49 + 5224);
        swift_bridgeObjectRetain();
      }
      uint64_t v216 = v49[654];
      if (v216 == 1)
      {
        *(_OWORD *)(v53 + 5232) = *((_OWORD *)v49 + 327);
        *(_OWORD *)(v53 + 5241) = *(_OWORD *)((char *)v49 + 5241);
      }
      else
      {
        *(void *)(v53 + 5232) = v216;
        *(unsigned char *)(v53 + 5240) = *((unsigned char *)v49 + 5240);
        *(void *)(v53 + 5248) = v49[656];
        *(unsigned char *)(v53 + 5256) = *((unsigned char *)v49 + 5256);
        swift_bridgeObjectRetain();
      }
      uint64_t v217 = v49[658];
      if (v217 == 1)
      {
        *(_OWORD *)(v53 + 5264) = *((_OWORD *)v49 + 329);
        *(_OWORD *)(v53 + 5273) = *(_OWORD *)((char *)v49 + 5273);
      }
      else
      {
        *(void *)(v53 + 5264) = v217;
        *(unsigned char *)(v53 + 5272) = *((unsigned char *)v49 + 5272);
        *(void *)(v53 + 5280) = v49[660];
        *(unsigned char *)(v53 + 5288) = *((unsigned char *)v49 + 5288);
        swift_bridgeObjectRetain();
      }
      uint64_t v218 = v49[662];
      if (v218 == 1)
      {
        *(_OWORD *)(v53 + 5296) = *((_OWORD *)v49 + 331);
        *(_OWORD *)(v53 + 5305) = *(_OWORD *)((char *)v49 + 5305);
      }
      else
      {
        *(void *)(v53 + 5296) = v218;
        *(unsigned char *)(v53 + 5304) = *((unsigned char *)v49 + 5304);
        *(void *)(v53 + 5312) = v49[664];
        *(unsigned char *)(v53 + 5320) = *((unsigned char *)v49 + 5320);
        swift_bridgeObjectRetain();
      }
      uint64_t v219 = v49[666];
      if (v219 == 1)
      {
        *(_OWORD *)(v53 + 5328) = *((_OWORD *)v49 + 333);
        *(_OWORD *)(v53 + 5337) = *(_OWORD *)((char *)v49 + 5337);
      }
      else
      {
        *(void *)(v53 + 5328) = v219;
        *(unsigned char *)(v53 + 5336) = *((unsigned char *)v49 + 5336);
        *(void *)(v53 + 5344) = v49[668];
        *(unsigned char *)(v53 + 5352) = *((unsigned char *)v49 + 5352);
        swift_bridgeObjectRetain();
      }
      uint64_t v220 = v49[670];
      if (v220 == 1)
      {
        *(_OWORD *)(v53 + 5360) = *((_OWORD *)v49 + 335);
        *(_OWORD *)(v53 + 5369) = *(_OWORD *)((char *)v49 + 5369);
      }
      else
      {
        *(void *)(v53 + 5360) = v220;
        *(unsigned char *)(v53 + 5368) = *((unsigned char *)v49 + 5368);
        *(void *)(v53 + 5376) = v49[672];
        *(unsigned char *)(v53 + 5384) = *((unsigned char *)v49 + 5384);
        swift_bridgeObjectRetain();
      }
      uint64_t v221 = v49[674];
      if (v221 == 1)
      {
        *(_OWORD *)(v53 + 5392) = *((_OWORD *)v49 + 337);
        *(_OWORD *)(v53 + 5401) = *(_OWORD *)((char *)v49 + 5401);
      }
      else
      {
        *(void *)(v53 + 5392) = v221;
        *(unsigned char *)(v53 + 5400) = *((unsigned char *)v49 + 5400);
        *(void *)(v53 + 5408) = v49[676];
        *(unsigned char *)(v53 + 5416) = *((unsigned char *)v49 + 5416);
        swift_bridgeObjectRetain();
      }
      uint64_t v222 = v49[678];
      if (v222 == 1)
      {
        *(_OWORD *)(v53 + 5424) = *((_OWORD *)v49 + 339);
        *(_OWORD *)(v53 + 5433) = *(_OWORD *)((char *)v49 + 5433);
      }
      else
      {
        *(void *)(v53 + 5424) = v222;
        *(unsigned char *)(v53 + 5432) = *((unsigned char *)v49 + 5432);
        *(void *)(v53 + 5440) = v49[680];
        *(unsigned char *)(v53 + 5448) = *((unsigned char *)v49 + 5448);
        swift_bridgeObjectRetain();
      }
      uint64_t v223 = v49[682];
      if (v223 == 1)
      {
        *(_OWORD *)(v53 + 5456) = *((_OWORD *)v49 + 341);
        *(_OWORD *)(v53 + 5465) = *(_OWORD *)((char *)v49 + 5465);
      }
      else
      {
        *(void *)(v53 + 5456) = v223;
        *(unsigned char *)(v53 + 5464) = *((unsigned char *)v49 + 5464);
        *(void *)(v53 + 5472) = v49[684];
        *(unsigned char *)(v53 + 5480) = *((unsigned char *)v49 + 5480);
        swift_bridgeObjectRetain();
      }
      uint64_t v224 = v49[686];
      if (v224 == 1)
      {
        *(_OWORD *)(v53 + 5488) = *((_OWORD *)v49 + 343);
        *(_OWORD *)(v53 + 5497) = *(_OWORD *)((char *)v49 + 5497);
      }
      else
      {
        *(void *)(v53 + 5488) = v224;
        *(unsigned char *)(v53 + 5496) = *((unsigned char *)v49 + 5496);
        *(void *)(v53 + 5504) = v49[688];
        *(unsigned char *)(v53 + 5512) = *((unsigned char *)v49 + 5512);
        swift_bridgeObjectRetain();
      }
      uint64_t v225 = v49[690];
      if (v225 == 1)
      {
        *(_OWORD *)(v53 + 5520) = *((_OWORD *)v49 + 345);
        *(_OWORD *)(v53 + 5529) = *(_OWORD *)((char *)v49 + 5529);
      }
      else
      {
        *(void *)(v53 + 5520) = v225;
        *(unsigned char *)(v53 + 5528) = *((unsigned char *)v49 + 5528);
        *(void *)(v53 + 5536) = v49[692];
        *(unsigned char *)(v53 + 5544) = *((unsigned char *)v49 + 5544);
        swift_bridgeObjectRetain();
      }
      uint64_t v226 = v49[694];
      if (v226 == 1)
      {
        *(_OWORD *)(v53 + 5552) = *((_OWORD *)v49 + 347);
        *(_OWORD *)(v53 + 5561) = *(_OWORD *)((char *)v49 + 5561);
      }
      else
      {
        *(void *)(v53 + 5552) = v226;
        *(unsigned char *)(v53 + 5560) = *((unsigned char *)v49 + 5560);
        *(void *)(v53 + 5568) = v49[696];
        *(unsigned char *)(v53 + 5576) = *((unsigned char *)v49 + 5576);
        swift_bridgeObjectRetain();
      }
      uint64_t v227 = v49[698];
      if (v227 == 1)
      {
        *(_OWORD *)(v53 + 5584) = *((_OWORD *)v49 + 349);
        *(_OWORD *)(v53 + 5593) = *(_OWORD *)((char *)v49 + 5593);
      }
      else
      {
        *(void *)(v53 + 5584) = v227;
        *(unsigned char *)(v53 + 5592) = *((unsigned char *)v49 + 5592);
        *(void *)(v53 + 5600) = v49[700];
        *(unsigned char *)(v53 + 5608) = *((unsigned char *)v49 + 5608);
        swift_bridgeObjectRetain();
      }
      uint64_t v228 = v49[702];
      if (v228 == 1)
      {
        *(_OWORD *)(v53 + 5616) = *((_OWORD *)v49 + 351);
        *(_OWORD *)(v53 + 5625) = *(_OWORD *)((char *)v49 + 5625);
      }
      else
      {
        *(void *)(v53 + 5616) = v228;
        *(unsigned char *)(v53 + 5624) = *((unsigned char *)v49 + 5624);
        *(void *)(v53 + 5632) = v49[704];
        *(unsigned char *)(v53 + 5640) = *((unsigned char *)v49 + 5640);
        swift_bridgeObjectRetain();
      }
      uint64_t v229 = v49[706];
      if (v229 == 1)
      {
        *(_OWORD *)(v53 + 5648) = *((_OWORD *)v49 + 353);
        *(_OWORD *)(v53 + 5657) = *(_OWORD *)((char *)v49 + 5657);
      }
      else
      {
        *(void *)(v53 + 5648) = v229;
        *(unsigned char *)(v53 + 5656) = *((unsigned char *)v49 + 5656);
        *(void *)(v53 + 5664) = v49[708];
        *(unsigned char *)(v53 + 5672) = *((unsigned char *)v49 + 5672);
        swift_bridgeObjectRetain();
      }
      uint64_t v230 = v49[710];
      if (v230 == 1)
      {
        *(_OWORD *)(v53 + 5680) = *((_OWORD *)v49 + 355);
        *(_OWORD *)(v53 + 5689) = *(_OWORD *)((char *)v49 + 5689);
      }
      else
      {
        *(void *)(v53 + 5680) = v230;
        *(unsigned char *)(v53 + 5688) = *((unsigned char *)v49 + 5688);
        *(void *)(v53 + 5696) = v49[712];
        *(unsigned char *)(v53 + 5704) = *((unsigned char *)v49 + 5704);
        swift_bridgeObjectRetain();
      }
      uint64_t v231 = v49[714];
      if (v231 == 1)
      {
        *(_OWORD *)(v53 + 5712) = *((_OWORD *)v49 + 357);
        *(_OWORD *)(v53 + 5721) = *(_OWORD *)((char *)v49 + 5721);
      }
      else
      {
        *(void *)(v53 + 5712) = v231;
        *(unsigned char *)(v53 + 5720) = *((unsigned char *)v49 + 5720);
        *(void *)(v53 + 5728) = v49[716];
        *(unsigned char *)(v53 + 5736) = *((unsigned char *)v49 + 5736);
        swift_bridgeObjectRetain();
      }
      uint64_t v232 = v49[718];
      if (v232 == 1)
      {
        *(_OWORD *)(v53 + 5744) = *((_OWORD *)v49 + 359);
        *(_OWORD *)(v53 + 5753) = *(_OWORD *)((char *)v49 + 5753);
      }
      else
      {
        *(void *)(v53 + 5744) = v232;
        *(unsigned char *)(v53 + 5752) = *((unsigned char *)v49 + 5752);
        *(void *)(v53 + 5760) = v49[720];
        *(unsigned char *)(v53 + 5768) = *((unsigned char *)v49 + 5768);
        swift_bridgeObjectRetain();
      }
      *(_OWORD *)(v53 + 5776) = *((_OWORD *)v49 + 361);
      *(unsigned char *)(v53 + 5792) = *((unsigned char *)v49 + 5792);
      *(_OWORD *)(v53 + 5800) = *(_OWORD *)(v49 + 725);
      *(unsigned char *)(v53 + 5816) = *((unsigned char *)v49 + 5816);
      *(_DWORD *)(v53 + 5817) = *(_DWORD *)((char *)v49 + 5817);
      *(_WORD *)(v53 + 5821) = *(_WORD *)((char *)v49 + 5821);
      *(unsigned char *)(v53 + 5823) = *((unsigned char *)v49 + 5823);
      *(void *)(v53 + 5824) = v209;
      *(void *)(v53 + 5832) = v49[729];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)(v53 + 5840) = v49[730];
    *(_DWORD *)(v53 + 5848) = *((_DWORD *)v49 + 1462);
    *(unsigned char *)(v53 + 5852) = *((unsigned char *)v49 + 5852);
    *(void *)(v53 + 5856) = v49[732];
    *(unsigned char *)(v53 + 5864) = *((unsigned char *)v49 + 5864);
    *(void *)(v53 + 5872) = v49[734];
    *(unsigned char *)(v53 + 5880) = *((unsigned char *)v49 + 5880);
    *(void *)(v53 + 5888) = v49[736];
    *(unsigned char *)(v53 + 5896) = *((unsigned char *)v49 + 5896);
    *(unsigned char *)(v53 + 5912) = *((unsigned char *)v49 + 5912);
    *(void *)(v53 + 5904) = v49[738];
    *(unsigned char *)(v53 + 5920) = *((unsigned char *)v49 + 5920);
    *(_DWORD *)(v53 + 5916) = *((_DWORD *)v49 + 1479);
    swift_bridgeObjectRetain();
  }
  uint64_t v233 = a3[40];
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  v234 = (void *)(a1 + v233);
  v235 = (void *)(a2 + v233);
  uint64_t v236 = v235[1];
  void *v234 = *v235;
  v234[1] = v236;
  uint64_t v237 = a3[41];
  v238 = (void *)(a1 + v237);
  v239 = (void *)(a2 + v237);
  uint64_t v240 = v239[1];
  void *v238 = *v239;
  v238[1] = v240;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005B929C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v6 = a3[18];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for HardwareAttestationType();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007764(&qword_100722310);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[21];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  uint64_t v18 = a3[27];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  char v21 = *(unsigned char *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = v21;
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[31];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[32];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  *(unsigned char *)(v27 + 8) = *((unsigned char *)v28 + 8);
  *(void *)uint64_t v27 = v29;
  uint64_t v30 = a3[33];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  *(unsigned char *)(v31 + 8) = *((unsigned char *)v32 + 8);
  *(void *)uint64_t v31 = v33;
  uint64_t v34 = a3[34];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  uint64_t v38 = a3[35];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v41 = *v40;
  *(unsigned char *)(v39 + 8) = *((unsigned char *)v40 + 8);
  *(void *)uint64_t v39 = v41;
  *(unsigned char *)(a1 + a3[36]) = *(unsigned char *)(a2 + a3[36]);
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  uint64_t v42 = a3[38];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)(a1 + v42 + 8);
  uint64_t v46 = *(void *)(a2 + v42 + 8);
  if (v45 != 1)
  {
    if (v46 == 1)
    {
      sub_1002336FC(v43);
      goto LABEL_13;
    }
    *(void *)uint64_t v43 = *(void *)v44;
    *(void *)(v43 + 8) = *(void *)(v44 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v49 = (long long *)(v43 + 16);
    uint64_t v50 = (long long *)(v44 + 16);
    uint64_t v51 = *(void *)(v44 + 832);
    if (*(void *)(v43 + 832) == 1)
    {
      if (v51 != 1)
      {
        if (*(void *)v50 == 1)
        {
          long long v52 = *v50;
          *(_OWORD *)(v43 + 25) = *(_OWORD *)(v44 + 25);
          long long *v49 = v52;
        }
        else
        {
          *(void *)(v43 + 16) = *(void *)v50;
          *(unsigned char *)(v43 + 24) = *(unsigned char *)(v44 + 24);
          uint64_t v583 = *(void *)(v44 + 32);
          *(unsigned char *)(v43 + 40) = *(unsigned char *)(v44 + 40);
          *(void *)(v43 + 32) = v583;
          swift_bridgeObjectRetain();
        }
        uint64_t v584 = *(void *)(v44 + 48);
        if (v584 == 1)
        {
          long long v585 = *(_OWORD *)(v44 + 48);
          *(_OWORD *)(v43 + 57) = *(_OWORD *)(v44 + 57);
          *(_OWORD *)(v43 + 48) = v585;
        }
        else
        {
          *(void *)(v43 + 48) = v584;
          *(unsigned char *)(v43 + 56) = *(unsigned char *)(v44 + 56);
          uint64_t v587 = *(void *)(v44 + 64);
          *(unsigned char *)(v43 + 72) = *(unsigned char *)(v44 + 72);
          *(void *)(v43 + 64) = v587;
          swift_bridgeObjectRetain();
        }
        uint64_t v588 = *(void *)(v44 + 80);
        if (v588 == 1)
        {
          long long v589 = *(_OWORD *)(v44 + 80);
          *(_OWORD *)(v43 + 89) = *(_OWORD *)(v44 + 89);
          *(_OWORD *)(v43 + 80) = v589;
        }
        else
        {
          *(void *)(v43 + 80) = v588;
          *(unsigned char *)(v43 + 88) = *(unsigned char *)(v44 + 88);
          uint64_t v590 = *(void *)(v44 + 96);
          *(unsigned char *)(v43 + 104) = *(unsigned char *)(v44 + 104);
          *(void *)(v43 + 96) = v590;
          swift_bridgeObjectRetain();
        }
        uint64_t v591 = *(void *)(v44 + 112);
        if (v591 == 1)
        {
          long long v592 = *(_OWORD *)(v44 + 112);
          *(_OWORD *)(v43 + 121) = *(_OWORD *)(v44 + 121);
          *(_OWORD *)(v43 + 112) = v592;
        }
        else
        {
          *(void *)(v43 + 112) = v591;
          *(unsigned char *)(v43 + 120) = *(unsigned char *)(v44 + 120);
          uint64_t v593 = *(void *)(v44 + 128);
          *(unsigned char *)(v43 + 136) = *(unsigned char *)(v44 + 136);
          *(void *)(v43 + 128) = v593;
          swift_bridgeObjectRetain();
        }
        uint64_t v594 = *(void *)(v44 + 144);
        if (v594 == 1)
        {
          long long v595 = *(_OWORD *)(v44 + 144);
          *(_OWORD *)(v43 + 153) = *(_OWORD *)(v44 + 153);
          *(_OWORD *)(v43 + 144) = v595;
        }
        else
        {
          *(void *)(v43 + 144) = v594;
          *(unsigned char *)(v43 + 152) = *(unsigned char *)(v44 + 152);
          uint64_t v596 = *(void *)(v44 + 160);
          *(unsigned char *)(v43 + 168) = *(unsigned char *)(v44 + 168);
          *(void *)(v43 + 160) = v596;
          swift_bridgeObjectRetain();
        }
        uint64_t v597 = *(void *)(v44 + 176);
        if (v597 == 1)
        {
          long long v598 = *(_OWORD *)(v44 + 176);
          *(_OWORD *)(v43 + 185) = *(_OWORD *)(v44 + 185);
          *(_OWORD *)(v43 + 176) = v598;
        }
        else
        {
          *(void *)(v43 + 176) = v597;
          *(unsigned char *)(v43 + 184) = *(unsigned char *)(v44 + 184);
          uint64_t v599 = *(void *)(v44 + 192);
          *(unsigned char *)(v43 + 200) = *(unsigned char *)(v44 + 200);
          *(void *)(v43 + 192) = v599;
          swift_bridgeObjectRetain();
        }
        uint64_t v600 = *(void *)(v44 + 208);
        if (v600 == 1)
        {
          long long v601 = *(_OWORD *)(v44 + 208);
          *(_OWORD *)(v43 + 217) = *(_OWORD *)(v44 + 217);
          *(_OWORD *)(v43 + 208) = v601;
        }
        else
        {
          *(void *)(v43 + 208) = v600;
          *(unsigned char *)(v43 + 216) = *(unsigned char *)(v44 + 216);
          uint64_t v602 = *(void *)(v44 + 224);
          *(unsigned char *)(v43 + 232) = *(unsigned char *)(v44 + 232);
          *(void *)(v43 + 224) = v602;
          swift_bridgeObjectRetain();
        }
        uint64_t v603 = *(void *)(v44 + 240);
        if (v603 == 1)
        {
          long long v604 = *(_OWORD *)(v44 + 240);
          *(_OWORD *)(v43 + 249) = *(_OWORD *)(v44 + 249);
          *(_OWORD *)(v43 + 240) = v604;
        }
        else
        {
          *(void *)(v43 + 240) = v603;
          *(unsigned char *)(v43 + 248) = *(unsigned char *)(v44 + 248);
          uint64_t v605 = *(void *)(v44 + 256);
          *(unsigned char *)(v43 + 264) = *(unsigned char *)(v44 + 264);
          *(void *)(v43 + 256) = v605;
          swift_bridgeObjectRetain();
        }
        uint64_t v606 = *(void *)(v44 + 272);
        if (v606 == 1)
        {
          long long v607 = *(_OWORD *)(v44 + 272);
          *(_OWORD *)(v43 + 281) = *(_OWORD *)(v44 + 281);
          *(_OWORD *)(v43 + 272) = v607;
        }
        else
        {
          *(void *)(v43 + 272) = v606;
          *(unsigned char *)(v43 + 280) = *(unsigned char *)(v44 + 280);
          uint64_t v608 = *(void *)(v44 + 288);
          *(unsigned char *)(v43 + 296) = *(unsigned char *)(v44 + 296);
          *(void *)(v43 + 288) = v608;
          swift_bridgeObjectRetain();
        }
        uint64_t v609 = *(void *)(v44 + 304);
        if (v609 == 1)
        {
          long long v610 = *(_OWORD *)(v44 + 304);
          *(_OWORD *)(v43 + 313) = *(_OWORD *)(v44 + 313);
          *(_OWORD *)(v43 + 304) = v610;
        }
        else
        {
          *(void *)(v43 + 304) = v609;
          *(unsigned char *)(v43 + 312) = *(unsigned char *)(v44 + 312);
          uint64_t v611 = *(void *)(v44 + 320);
          *(unsigned char *)(v43 + 328) = *(unsigned char *)(v44 + 328);
          *(void *)(v43 + 320) = v611;
          swift_bridgeObjectRetain();
        }
        uint64_t v612 = *(void *)(v44 + 336);
        if (v612 == 1)
        {
          long long v613 = *(_OWORD *)(v44 + 336);
          *(_OWORD *)(v43 + 345) = *(_OWORD *)(v44 + 345);
          *(_OWORD *)(v43 + 336) = v613;
        }
        else
        {
          *(void *)(v43 + 336) = v612;
          *(unsigned char *)(v43 + 344) = *(unsigned char *)(v44 + 344);
          uint64_t v614 = *(void *)(v44 + 352);
          *(unsigned char *)(v43 + 360) = *(unsigned char *)(v44 + 360);
          *(void *)(v43 + 352) = v614;
          swift_bridgeObjectRetain();
        }
        uint64_t v615 = *(void *)(v44 + 368);
        if (v615 == 1)
        {
          long long v616 = *(_OWORD *)(v44 + 368);
          *(_OWORD *)(v43 + 377) = *(_OWORD *)(v44 + 377);
          *(_OWORD *)(v43 + 368) = v616;
        }
        else
        {
          *(void *)(v43 + 368) = v615;
          *(unsigned char *)(v43 + 376) = *(unsigned char *)(v44 + 376);
          uint64_t v617 = *(void *)(v44 + 384);
          *(unsigned char *)(v43 + 392) = *(unsigned char *)(v44 + 392);
          *(void *)(v43 + 384) = v617;
          swift_bridgeObjectRetain();
        }
        uint64_t v618 = *(void *)(v44 + 400);
        if (v618 == 1)
        {
          long long v619 = *(_OWORD *)(v44 + 400);
          *(_OWORD *)(v43 + 409) = *(_OWORD *)(v44 + 409);
          *(_OWORD *)(v43 + 400) = v619;
        }
        else
        {
          *(void *)(v43 + 400) = v618;
          *(unsigned char *)(v43 + 408) = *(unsigned char *)(v44 + 408);
          uint64_t v620 = *(void *)(v44 + 416);
          *(unsigned char *)(v43 + 424) = *(unsigned char *)(v44 + 424);
          *(void *)(v43 + 416) = v620;
          swift_bridgeObjectRetain();
        }
        uint64_t v621 = *(void *)(v44 + 432);
        if (v621 == 1)
        {
          long long v622 = *(_OWORD *)(v44 + 432);
          *(_OWORD *)(v43 + 441) = *(_OWORD *)(v44 + 441);
          *(_OWORD *)(v43 + 432) = v622;
        }
        else
        {
          *(void *)(v43 + 432) = v621;
          *(unsigned char *)(v43 + 440) = *(unsigned char *)(v44 + 440);
          uint64_t v623 = *(void *)(v44 + 448);
          *(unsigned char *)(v43 + 456) = *(unsigned char *)(v44 + 456);
          *(void *)(v43 + 448) = v623;
          swift_bridgeObjectRetain();
        }
        uint64_t v624 = *(void *)(v44 + 464);
        if (v624 == 1)
        {
          long long v625 = *(_OWORD *)(v44 + 464);
          *(_OWORD *)(v43 + 473) = *(_OWORD *)(v44 + 473);
          *(_OWORD *)(v43 + 464) = v625;
        }
        else
        {
          *(void *)(v43 + 464) = v624;
          *(unsigned char *)(v43 + 472) = *(unsigned char *)(v44 + 472);
          uint64_t v626 = *(void *)(v44 + 480);
          *(unsigned char *)(v43 + 488) = *(unsigned char *)(v44 + 488);
          *(void *)(v43 + 480) = v626;
          swift_bridgeObjectRetain();
        }
        uint64_t v627 = *(void *)(v44 + 496);
        if (v627 == 1)
        {
          long long v628 = *(_OWORD *)(v44 + 496);
          *(_OWORD *)(v43 + 505) = *(_OWORD *)(v44 + 505);
          *(_OWORD *)(v43 + 496) = v628;
        }
        else
        {
          *(void *)(v43 + 496) = v627;
          *(unsigned char *)(v43 + 504) = *(unsigned char *)(v44 + 504);
          uint64_t v629 = *(void *)(v44 + 512);
          *(unsigned char *)(v43 + 520) = *(unsigned char *)(v44 + 520);
          *(void *)(v43 + 512) = v629;
          swift_bridgeObjectRetain();
        }
        uint64_t v630 = *(void *)(v44 + 528);
        if (v630 == 1)
        {
          long long v631 = *(_OWORD *)(v44 + 528);
          *(_OWORD *)(v43 + 537) = *(_OWORD *)(v44 + 537);
          *(_OWORD *)(v43 + 528) = v631;
        }
        else
        {
          *(void *)(v43 + 528) = v630;
          *(unsigned char *)(v43 + 536) = *(unsigned char *)(v44 + 536);
          uint64_t v632 = *(void *)(v44 + 544);
          *(unsigned char *)(v43 + 552) = *(unsigned char *)(v44 + 552);
          *(void *)(v43 + 544) = v632;
          swift_bridgeObjectRetain();
        }
        uint64_t v633 = *(void *)(v44 + 560);
        if (v633 == 1)
        {
          long long v634 = *(_OWORD *)(v44 + 560);
          *(_OWORD *)(v43 + 569) = *(_OWORD *)(v44 + 569);
          *(_OWORD *)(v43 + 560) = v634;
        }
        else
        {
          *(void *)(v43 + 560) = v633;
          *(unsigned char *)(v43 + 568) = *(unsigned char *)(v44 + 568);
          uint64_t v635 = *(void *)(v44 + 576);
          *(unsigned char *)(v43 + 584) = *(unsigned char *)(v44 + 584);
          *(void *)(v43 + 576) = v635;
          swift_bridgeObjectRetain();
        }
        uint64_t v636 = *(void *)(v44 + 592);
        if (v636 == 1)
        {
          long long v637 = *(_OWORD *)(v44 + 592);
          *(_OWORD *)(v43 + 601) = *(_OWORD *)(v44 + 601);
          *(_OWORD *)(v43 + 592) = v637;
        }
        else
        {
          *(void *)(v43 + 592) = v636;
          *(unsigned char *)(v43 + 600) = *(unsigned char *)(v44 + 600);
          uint64_t v638 = *(void *)(v44 + 608);
          *(unsigned char *)(v43 + 616) = *(unsigned char *)(v44 + 616);
          *(void *)(v43 + 608) = v638;
          swift_bridgeObjectRetain();
        }
        uint64_t v639 = *(void *)(v44 + 624);
        if (v639 == 1)
        {
          long long v640 = *(_OWORD *)(v44 + 624);
          *(_OWORD *)(v43 + 633) = *(_OWORD *)(v44 + 633);
          *(_OWORD *)(v43 + 624) = v640;
        }
        else
        {
          *(void *)(v43 + 624) = v639;
          *(unsigned char *)(v43 + 632) = *(unsigned char *)(v44 + 632);
          uint64_t v641 = *(void *)(v44 + 640);
          *(unsigned char *)(v43 + 648) = *(unsigned char *)(v44 + 648);
          *(void *)(v43 + 640) = v641;
          swift_bridgeObjectRetain();
        }
        uint64_t v642 = *(void *)(v44 + 656);
        if (v642 == 1)
        {
          long long v643 = *(_OWORD *)(v44 + 656);
          *(_OWORD *)(v43 + 665) = *(_OWORD *)(v44 + 665);
          *(_OWORD *)(v43 + 656) = v643;
        }
        else
        {
          *(void *)(v43 + 656) = v642;
          *(unsigned char *)(v43 + 664) = *(unsigned char *)(v44 + 664);
          uint64_t v644 = *(void *)(v44 + 672);
          *(unsigned char *)(v43 + 680) = *(unsigned char *)(v44 + 680);
          *(void *)(v43 + 672) = v644;
          swift_bridgeObjectRetain();
        }
        uint64_t v645 = *(void *)(v44 + 688);
        if (v645 == 1)
        {
          long long v646 = *(_OWORD *)(v44 + 688);
          *(_OWORD *)(v43 + 697) = *(_OWORD *)(v44 + 697);
          *(_OWORD *)(v43 + 688) = v646;
        }
        else
        {
          *(void *)(v43 + 688) = v645;
          *(unsigned char *)(v43 + 696) = *(unsigned char *)(v44 + 696);
          uint64_t v647 = *(void *)(v44 + 704);
          *(unsigned char *)(v43 + 712) = *(unsigned char *)(v44 + 712);
          *(void *)(v43 + 704) = v647;
          swift_bridgeObjectRetain();
        }
        uint64_t v648 = *(void *)(v44 + 720);
        if (v648 == 1)
        {
          long long v649 = *(_OWORD *)(v44 + 720);
          *(_OWORD *)(v43 + 729) = *(_OWORD *)(v44 + 729);
          *(_OWORD *)(v43 + 720) = v649;
        }
        else
        {
          *(void *)(v43 + 720) = v648;
          *(unsigned char *)(v43 + 728) = *(unsigned char *)(v44 + 728);
          uint64_t v650 = *(void *)(v44 + 736);
          *(unsigned char *)(v43 + 744) = *(unsigned char *)(v44 + 744);
          *(void *)(v43 + 736) = v650;
          swift_bridgeObjectRetain();
        }
        uint64_t v651 = *(void *)(v44 + 752);
        if (v651 == 1)
        {
          long long v652 = *(_OWORD *)(v44 + 752);
          *(_OWORD *)(v43 + 761) = *(_OWORD *)(v44 + 761);
          *(_OWORD *)(v43 + 752) = v652;
        }
        else
        {
          *(void *)(v43 + 752) = v651;
          *(unsigned char *)(v43 + 760) = *(unsigned char *)(v44 + 760);
          uint64_t v653 = *(void *)(v44 + 768);
          *(unsigned char *)(v43 + 776) = *(unsigned char *)(v44 + 776);
          *(void *)(v43 + 768) = v653;
          swift_bridgeObjectRetain();
        }
        long long v654 = *(_OWORD *)(v44 + 784);
        *(unsigned char *)(v43 + 800) = *(unsigned char *)(v44 + 800);
        *(_OWORD *)(v43 + 784) = v654;
        long long v655 = *(_OWORD *)(v44 + 808);
        *(unsigned char *)(v43 + 824) = *(unsigned char *)(v44 + 824);
        *(_OWORD *)(v43 + 808) = v655;
        *(unsigned char *)(v43 + 825) = *(unsigned char *)(v44 + 825);
        *(unsigned char *)(v43 + 826) = *(unsigned char *)(v44 + 826);
        *(unsigned char *)(v43 + 827) = *(unsigned char *)(v44 + 827);
        *(unsigned char *)(v43 + 828) = *(unsigned char *)(v44 + 828);
        *(unsigned char *)(v43 + 829) = *(unsigned char *)(v44 + 829);
        *(unsigned char *)(v43 + 830) = *(unsigned char *)(v44 + 830);
        *(unsigned char *)(v43 + 831) = *(unsigned char *)(v44 + 831);
        *(void *)(v43 + 832) = *(void *)(v44 + 832);
        *(void *)(v43 + 840) = *(void *)(v44 + 840);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_786;
      }
    }
    else
    {
      if (v51 != 1)
      {
        uint64_t v57 = *(void *)v50;
        if (*(void *)v49 == 1)
        {
          if (v57 == 1)
          {
            long long v58 = *v50;
            *(_OWORD *)(v43 + 25) = *(_OWORD *)(v44 + 25);
            long long *v49 = v58;
          }
          else
          {
            *(void *)(v43 + 16) = v57;
            *(unsigned char *)(v43 + 24) = *(unsigned char *)(v44 + 24);
            uint64_t v656 = *(void *)(v44 + 32);
            *(unsigned char *)(v43 + 40) = *(unsigned char *)(v44 + 40);
            *(void *)(v43 + 32) = v656;
            swift_bridgeObjectRetain();
          }
        }
        else if (v57 == 1)
        {
          sub_10009F534(v43 + 16);
          long long v586 = *(_OWORD *)(v44 + 25);
          long long *v49 = *v50;
          *(_OWORD *)(v43 + 25) = v586;
        }
        else
        {
          *(void *)(v43 + 16) = v57;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 24) = *(unsigned char *)(v44 + 24);
          uint64_t v657 = *(void *)(v44 + 32);
          *(unsigned char *)(v43 + 40) = *(unsigned char *)(v44 + 40);
          *(void *)(v43 + 32) = v657;
        }
        v658 = (long long *)(v43 + 48);
        v660 = (long long *)(v44 + 48);
        uint64_t v659 = *(void *)(v44 + 48);
        if (*(void *)(v43 + 48) == 1)
        {
          if (v659 == 1)
          {
            long long v661 = *v660;
            *(_OWORD *)(v43 + 57) = *(_OWORD *)(v44 + 57);
            long long *v658 = v661;
          }
          else
          {
            *(void *)(v43 + 48) = v659;
            *(unsigned char *)(v43 + 56) = *(unsigned char *)(v44 + 56);
            uint64_t v663 = *(void *)(v44 + 64);
            *(unsigned char *)(v43 + 72) = *(unsigned char *)(v44 + 72);
            *(void *)(v43 + 64) = v663;
            swift_bridgeObjectRetain();
          }
        }
        else if (v659 == 1)
        {
          sub_10009F534(v43 + 48);
          long long v662 = *(_OWORD *)(v44 + 57);
          long long *v658 = *v660;
          *(_OWORD *)(v43 + 57) = v662;
        }
        else
        {
          *(void *)(v43 + 48) = v659;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 56) = *(unsigned char *)(v44 + 56);
          uint64_t v664 = *(void *)(v44 + 64);
          *(unsigned char *)(v43 + 72) = *(unsigned char *)(v44 + 72);
          *(void *)(v43 + 64) = v664;
        }
        v665 = (long long *)(v43 + 80);
        v667 = (long long *)(v44 + 80);
        uint64_t v666 = *(void *)(v44 + 80);
        if (*(void *)(v43 + 80) == 1)
        {
          if (v666 == 1)
          {
            long long v668 = *v667;
            *(_OWORD *)(v43 + 89) = *(_OWORD *)(v44 + 89);
            long long *v665 = v668;
          }
          else
          {
            *(void *)(v43 + 80) = v666;
            *(unsigned char *)(v43 + 88) = *(unsigned char *)(v44 + 88);
            uint64_t v670 = *(void *)(v44 + 96);
            *(unsigned char *)(v43 + 104) = *(unsigned char *)(v44 + 104);
            *(void *)(v43 + 96) = v670;
            swift_bridgeObjectRetain();
          }
        }
        else if (v666 == 1)
        {
          sub_10009F534(v43 + 80);
          long long v669 = *(_OWORD *)(v44 + 89);
          long long *v665 = *v667;
          *(_OWORD *)(v43 + 89) = v669;
        }
        else
        {
          *(void *)(v43 + 80) = v666;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 88) = *(unsigned char *)(v44 + 88);
          uint64_t v671 = *(void *)(v44 + 96);
          *(unsigned char *)(v43 + 104) = *(unsigned char *)(v44 + 104);
          *(void *)(v43 + 96) = v671;
        }
        v672 = (long long *)(v43 + 112);
        v674 = (long long *)(v44 + 112);
        uint64_t v673 = *(void *)(v44 + 112);
        if (*(void *)(v43 + 112) == 1)
        {
          if (v673 == 1)
          {
            long long v675 = *v674;
            *(_OWORD *)(v43 + 121) = *(_OWORD *)(v44 + 121);
            long long *v672 = v675;
          }
          else
          {
            *(void *)(v43 + 112) = v673;
            *(unsigned char *)(v43 + 120) = *(unsigned char *)(v44 + 120);
            uint64_t v677 = *(void *)(v44 + 128);
            *(unsigned char *)(v43 + 136) = *(unsigned char *)(v44 + 136);
            *(void *)(v43 + 128) = v677;
            swift_bridgeObjectRetain();
          }
        }
        else if (v673 == 1)
        {
          sub_10009F534(v43 + 112);
          long long v676 = *(_OWORD *)(v44 + 121);
          long long *v672 = *v674;
          *(_OWORD *)(v43 + 121) = v676;
        }
        else
        {
          *(void *)(v43 + 112) = v673;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 120) = *(unsigned char *)(v44 + 120);
          uint64_t v678 = *(void *)(v44 + 128);
          *(unsigned char *)(v43 + 136) = *(unsigned char *)(v44 + 136);
          *(void *)(v43 + 128) = v678;
        }
        v679 = (long long *)(v43 + 144);
        v681 = (long long *)(v44 + 144);
        uint64_t v680 = *(void *)(v44 + 144);
        if (*(void *)(v43 + 144) == 1)
        {
          if (v680 == 1)
          {
            long long v682 = *v681;
            *(_OWORD *)(v43 + 153) = *(_OWORD *)(v44 + 153);
            long long *v679 = v682;
          }
          else
          {
            *(void *)(v43 + 144) = v680;
            *(unsigned char *)(v43 + 152) = *(unsigned char *)(v44 + 152);
            uint64_t v684 = *(void *)(v44 + 160);
            *(unsigned char *)(v43 + 168) = *(unsigned char *)(v44 + 168);
            *(void *)(v43 + 160) = v684;
            swift_bridgeObjectRetain();
          }
        }
        else if (v680 == 1)
        {
          sub_10009F534(v43 + 144);
          long long v683 = *(_OWORD *)(v44 + 153);
          long long *v679 = *v681;
          *(_OWORD *)(v43 + 153) = v683;
        }
        else
        {
          *(void *)(v43 + 144) = v680;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 152) = *(unsigned char *)(v44 + 152);
          uint64_t v685 = *(void *)(v44 + 160);
          *(unsigned char *)(v43 + 168) = *(unsigned char *)(v44 + 168);
          *(void *)(v43 + 160) = v685;
        }
        v686 = (long long *)(v43 + 176);
        v688 = (long long *)(v44 + 176);
        uint64_t v687 = *(void *)(v44 + 176);
        if (*(void *)(v43 + 176) == 1)
        {
          if (v687 == 1)
          {
            long long v689 = *v688;
            *(_OWORD *)(v43 + 185) = *(_OWORD *)(v44 + 185);
            long long *v686 = v689;
          }
          else
          {
            *(void *)(v43 + 176) = v687;
            *(unsigned char *)(v43 + 184) = *(unsigned char *)(v44 + 184);
            uint64_t v691 = *(void *)(v44 + 192);
            *(unsigned char *)(v43 + 200) = *(unsigned char *)(v44 + 200);
            *(void *)(v43 + 192) = v691;
            swift_bridgeObjectRetain();
          }
        }
        else if (v687 == 1)
        {
          sub_10009F534(v43 + 176);
          long long v690 = *(_OWORD *)(v44 + 185);
          long long *v686 = *v688;
          *(_OWORD *)(v43 + 185) = v690;
        }
        else
        {
          *(void *)(v43 + 176) = v687;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 184) = *(unsigned char *)(v44 + 184);
          uint64_t v692 = *(void *)(v44 + 192);
          *(unsigned char *)(v43 + 200) = *(unsigned char *)(v44 + 200);
          *(void *)(v43 + 192) = v692;
        }
        v693 = (long long *)(v43 + 208);
        v695 = (long long *)(v44 + 208);
        uint64_t v694 = *(void *)(v44 + 208);
        if (*(void *)(v43 + 208) == 1)
        {
          if (v694 == 1)
          {
            long long v696 = *v695;
            *(_OWORD *)(v43 + 217) = *(_OWORD *)(v44 + 217);
            long long *v693 = v696;
          }
          else
          {
            *(void *)(v43 + 208) = v694;
            *(unsigned char *)(v43 + 216) = *(unsigned char *)(v44 + 216);
            uint64_t v698 = *(void *)(v44 + 224);
            *(unsigned char *)(v43 + 232) = *(unsigned char *)(v44 + 232);
            *(void *)(v43 + 224) = v698;
            swift_bridgeObjectRetain();
          }
        }
        else if (v694 == 1)
        {
          sub_10009F534(v43 + 208);
          long long v697 = *(_OWORD *)(v44 + 217);
          long long *v693 = *v695;
          *(_OWORD *)(v43 + 217) = v697;
        }
        else
        {
          *(void *)(v43 + 208) = v694;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 216) = *(unsigned char *)(v44 + 216);
          uint64_t v699 = *(void *)(v44 + 224);
          *(unsigned char *)(v43 + 232) = *(unsigned char *)(v44 + 232);
          *(void *)(v43 + 224) = v699;
        }
        v700 = (long long *)(v43 + 240);
        v702 = (long long *)(v44 + 240);
        uint64_t v701 = *(void *)(v44 + 240);
        if (*(void *)(v43 + 240) == 1)
        {
          if (v701 == 1)
          {
            long long v703 = *v702;
            *(_OWORD *)(v43 + 249) = *(_OWORD *)(v44 + 249);
            long long *v700 = v703;
          }
          else
          {
            *(void *)(v43 + 240) = v701;
            *(unsigned char *)(v43 + 248) = *(unsigned char *)(v44 + 248);
            uint64_t v705 = *(void *)(v44 + 256);
            *(unsigned char *)(v43 + 264) = *(unsigned char *)(v44 + 264);
            *(void *)(v43 + 256) = v705;
            swift_bridgeObjectRetain();
          }
        }
        else if (v701 == 1)
        {
          sub_10009F534(v43 + 240);
          long long v704 = *(_OWORD *)(v44 + 249);
          long long *v700 = *v702;
          *(_OWORD *)(v43 + 249) = v704;
        }
        else
        {
          *(void *)(v43 + 240) = v701;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 248) = *(unsigned char *)(v44 + 248);
          uint64_t v706 = *(void *)(v44 + 256);
          *(unsigned char *)(v43 + 264) = *(unsigned char *)(v44 + 264);
          *(void *)(v43 + 256) = v706;
        }
        v707 = (long long *)(v43 + 272);
        v708 = (long long *)(v44 + 272);
        uint64_t v709 = *(void *)(v44 + 272);
        if (*(void *)(v43 + 272) == 1)
        {
          if (v709 == 1)
          {
            long long v710 = *v708;
            *(_OWORD *)(v43 + 281) = *(_OWORD *)(v44 + 281);
            long long *v707 = v710;
          }
          else
          {
            *(void *)(v43 + 272) = v709;
            *(unsigned char *)(v43 + 280) = *(unsigned char *)(v44 + 280);
            uint64_t v712 = *(void *)(v44 + 288);
            *(unsigned char *)(v43 + 296) = *(unsigned char *)(v44 + 296);
            *(void *)(v43 + 288) = v712;
            swift_bridgeObjectRetain();
          }
        }
        else if (v709 == 1)
        {
          sub_10009F534(v43 + 272);
          long long v711 = *(_OWORD *)(v44 + 281);
          long long *v707 = *v708;
          *(_OWORD *)(v43 + 281) = v711;
        }
        else
        {
          *(void *)(v43 + 272) = v709;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 280) = *(unsigned char *)(v44 + 280);
          uint64_t v713 = *(void *)(v44 + 288);
          *(unsigned char *)(v43 + 296) = *(unsigned char *)(v44 + 296);
          *(void *)(v43 + 288) = v713;
        }
        v714 = (long long *)(v43 + 304);
        v715 = (long long *)(v44 + 304);
        uint64_t v716 = *(void *)(v44 + 304);
        if (*(void *)(v43 + 304) == 1)
        {
          if (v716 == 1)
          {
            long long v717 = *v715;
            *(_OWORD *)(v43 + 313) = *(_OWORD *)(v44 + 313);
            long long *v714 = v717;
          }
          else
          {
            *(void *)(v43 + 304) = v716;
            *(unsigned char *)(v43 + 312) = *(unsigned char *)(v44 + 312);
            uint64_t v719 = *(void *)(v44 + 320);
            *(unsigned char *)(v43 + 328) = *(unsigned char *)(v44 + 328);
            *(void *)(v43 + 320) = v719;
            swift_bridgeObjectRetain();
          }
        }
        else if (v716 == 1)
        {
          sub_10009F534(v43 + 304);
          long long v718 = *(_OWORD *)(v44 + 313);
          long long *v714 = *v715;
          *(_OWORD *)(v43 + 313) = v718;
        }
        else
        {
          *(void *)(v43 + 304) = v716;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 312) = *(unsigned char *)(v44 + 312);
          uint64_t v720 = *(void *)(v44 + 320);
          *(unsigned char *)(v43 + 328) = *(unsigned char *)(v44 + 328);
          *(void *)(v43 + 320) = v720;
        }
        v721 = (long long *)(v43 + 336);
        v722 = (long long *)(v44 + 336);
        uint64_t v723 = *(void *)(v44 + 336);
        if (*(void *)(v43 + 336) == 1)
        {
          if (v723 == 1)
          {
            long long v724 = *v722;
            *(_OWORD *)(v43 + 345) = *(_OWORD *)(v44 + 345);
            long long *v721 = v724;
          }
          else
          {
            *(void *)(v43 + 336) = v723;
            *(unsigned char *)(v43 + 344) = *(unsigned char *)(v44 + 344);
            uint64_t v726 = *(void *)(v44 + 352);
            *(unsigned char *)(v43 + 360) = *(unsigned char *)(v44 + 360);
            *(void *)(v43 + 352) = v726;
            swift_bridgeObjectRetain();
          }
        }
        else if (v723 == 1)
        {
          sub_10009F534(v43 + 336);
          long long v725 = *(_OWORD *)(v44 + 345);
          long long *v721 = *v722;
          *(_OWORD *)(v43 + 345) = v725;
        }
        else
        {
          *(void *)(v43 + 336) = v723;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 344) = *(unsigned char *)(v44 + 344);
          uint64_t v727 = *(void *)(v44 + 352);
          *(unsigned char *)(v43 + 360) = *(unsigned char *)(v44 + 360);
          *(void *)(v43 + 352) = v727;
        }
        v728 = (long long *)(v43 + 368);
        v729 = (long long *)(v44 + 368);
        uint64_t v730 = *(void *)(v44 + 368);
        if (*(void *)(v43 + 368) == 1)
        {
          if (v730 == 1)
          {
            long long v731 = *v729;
            *(_OWORD *)(v43 + 377) = *(_OWORD *)(v44 + 377);
            long long *v728 = v731;
          }
          else
          {
            *(void *)(v43 + 368) = v730;
            *(unsigned char *)(v43 + 376) = *(unsigned char *)(v44 + 376);
            uint64_t v733 = *(void *)(v44 + 384);
            *(unsigned char *)(v43 + 392) = *(unsigned char *)(v44 + 392);
            *(void *)(v43 + 384) = v733;
            swift_bridgeObjectRetain();
          }
        }
        else if (v730 == 1)
        {
          sub_10009F534(v43 + 368);
          long long v732 = *(_OWORD *)(v44 + 377);
          long long *v728 = *v729;
          *(_OWORD *)(v43 + 377) = v732;
        }
        else
        {
          *(void *)(v43 + 368) = v730;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 376) = *(unsigned char *)(v44 + 376);
          uint64_t v734 = *(void *)(v44 + 384);
          *(unsigned char *)(v43 + 392) = *(unsigned char *)(v44 + 392);
          *(void *)(v43 + 384) = v734;
        }
        v735 = (long long *)(v43 + 400);
        v736 = (long long *)(v44 + 400);
        uint64_t v737 = *(void *)(v44 + 400);
        if (*(void *)(v43 + 400) == 1)
        {
          if (v737 == 1)
          {
            long long v738 = *v736;
            *(_OWORD *)(v43 + 409) = *(_OWORD *)(v44 + 409);
            long long *v735 = v738;
          }
          else
          {
            *(void *)(v43 + 400) = v737;
            *(unsigned char *)(v43 + 408) = *(unsigned char *)(v44 + 408);
            uint64_t v740 = *(void *)(v44 + 416);
            *(unsigned char *)(v43 + 424) = *(unsigned char *)(v44 + 424);
            *(void *)(v43 + 416) = v740;
            swift_bridgeObjectRetain();
          }
        }
        else if (v737 == 1)
        {
          sub_10009F534(v43 + 400);
          long long v739 = *(_OWORD *)(v44 + 409);
          long long *v735 = *v736;
          *(_OWORD *)(v43 + 409) = v739;
        }
        else
        {
          *(void *)(v43 + 400) = v737;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 408) = *(unsigned char *)(v44 + 408);
          uint64_t v741 = *(void *)(v44 + 416);
          *(unsigned char *)(v43 + 424) = *(unsigned char *)(v44 + 424);
          *(void *)(v43 + 416) = v741;
        }
        v742 = (long long *)(v43 + 432);
        v743 = (long long *)(v44 + 432);
        uint64_t v744 = *(void *)(v44 + 432);
        if (*(void *)(v43 + 432) == 1)
        {
          if (v744 == 1)
          {
            long long v745 = *v743;
            *(_OWORD *)(v43 + 441) = *(_OWORD *)(v44 + 441);
            long long *v742 = v745;
          }
          else
          {
            *(void *)(v43 + 432) = v744;
            *(unsigned char *)(v43 + 440) = *(unsigned char *)(v44 + 440);
            uint64_t v747 = *(void *)(v44 + 448);
            *(unsigned char *)(v43 + 456) = *(unsigned char *)(v44 + 456);
            *(void *)(v43 + 448) = v747;
            swift_bridgeObjectRetain();
          }
        }
        else if (v744 == 1)
        {
          sub_10009F534(v43 + 432);
          long long v746 = *(_OWORD *)(v44 + 441);
          long long *v742 = *v743;
          *(_OWORD *)(v43 + 441) = v746;
        }
        else
        {
          *(void *)(v43 + 432) = v744;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 440) = *(unsigned char *)(v44 + 440);
          uint64_t v748 = *(void *)(v44 + 448);
          *(unsigned char *)(v43 + 456) = *(unsigned char *)(v44 + 456);
          *(void *)(v43 + 448) = v748;
        }
        v749 = (long long *)(v43 + 464);
        v750 = (long long *)(v44 + 464);
        uint64_t v751 = *(void *)(v44 + 464);
        if (*(void *)(v43 + 464) == 1)
        {
          if (v751 == 1)
          {
            long long v752 = *v750;
            *(_OWORD *)(v43 + 473) = *(_OWORD *)(v44 + 473);
            long long *v749 = v752;
          }
          else
          {
            *(void *)(v43 + 464) = v751;
            *(unsigned char *)(v43 + 472) = *(unsigned char *)(v44 + 472);
            uint64_t v754 = *(void *)(v44 + 480);
            *(unsigned char *)(v43 + 488) = *(unsigned char *)(v44 + 488);
            *(void *)(v43 + 480) = v754;
            swift_bridgeObjectRetain();
          }
        }
        else if (v751 == 1)
        {
          sub_10009F534(v43 + 464);
          long long v753 = *(_OWORD *)(v44 + 473);
          long long *v749 = *v750;
          *(_OWORD *)(v43 + 473) = v753;
        }
        else
        {
          *(void *)(v43 + 464) = v751;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 472) = *(unsigned char *)(v44 + 472);
          uint64_t v755 = *(void *)(v44 + 480);
          *(unsigned char *)(v43 + 488) = *(unsigned char *)(v44 + 488);
          *(void *)(v43 + 480) = v755;
        }
        v756 = (long long *)(v43 + 496);
        v757 = (long long *)(v44 + 496);
        uint64_t v758 = *(void *)(v44 + 496);
        if (*(void *)(v43 + 496) == 1)
        {
          if (v758 == 1)
          {
            long long v759 = *v757;
            *(_OWORD *)(v43 + 505) = *(_OWORD *)(v44 + 505);
            long long *v756 = v759;
          }
          else
          {
            *(void *)(v43 + 496) = v758;
            *(unsigned char *)(v43 + 504) = *(unsigned char *)(v44 + 504);
            uint64_t v761 = *(void *)(v44 + 512);
            *(unsigned char *)(v43 + 520) = *(unsigned char *)(v44 + 520);
            *(void *)(v43 + 512) = v761;
            swift_bridgeObjectRetain();
          }
        }
        else if (v758 == 1)
        {
          sub_10009F534(v43 + 496);
          long long v760 = *(_OWORD *)(v44 + 505);
          long long *v756 = *v757;
          *(_OWORD *)(v43 + 505) = v760;
        }
        else
        {
          *(void *)(v43 + 496) = v758;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 504) = *(unsigned char *)(v44 + 504);
          uint64_t v762 = *(void *)(v44 + 512);
          *(unsigned char *)(v43 + 520) = *(unsigned char *)(v44 + 520);
          *(void *)(v43 + 512) = v762;
        }
        v763 = (long long *)(v43 + 528);
        v764 = (long long *)(v44 + 528);
        uint64_t v765 = *(void *)(v44 + 528);
        if (*(void *)(v43 + 528) == 1)
        {
          if (v765 == 1)
          {
            long long v766 = *v764;
            *(_OWORD *)(v43 + 537) = *(_OWORD *)(v44 + 537);
            long long *v763 = v766;
          }
          else
          {
            *(void *)(v43 + 528) = v765;
            *(unsigned char *)(v43 + 536) = *(unsigned char *)(v44 + 536);
            uint64_t v768 = *(void *)(v44 + 544);
            *(unsigned char *)(v43 + 552) = *(unsigned char *)(v44 + 552);
            *(void *)(v43 + 544) = v768;
            swift_bridgeObjectRetain();
          }
        }
        else if (v765 == 1)
        {
          sub_10009F534(v43 + 528);
          long long v767 = *(_OWORD *)(v44 + 537);
          long long *v763 = *v764;
          *(_OWORD *)(v43 + 537) = v767;
        }
        else
        {
          *(void *)(v43 + 528) = v765;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 536) = *(unsigned char *)(v44 + 536);
          uint64_t v769 = *(void *)(v44 + 544);
          *(unsigned char *)(v43 + 552) = *(unsigned char *)(v44 + 552);
          *(void *)(v43 + 544) = v769;
        }
        v770 = (long long *)(v43 + 560);
        v771 = (long long *)(v44 + 560);
        uint64_t v772 = *(void *)(v44 + 560);
        if (*(void *)(v43 + 560) == 1)
        {
          if (v772 == 1)
          {
            long long v773 = *v771;
            *(_OWORD *)(v43 + 569) = *(_OWORD *)(v44 + 569);
            long long *v770 = v773;
          }
          else
          {
            *(void *)(v43 + 560) = v772;
            *(unsigned char *)(v43 + 568) = *(unsigned char *)(v44 + 568);
            uint64_t v775 = *(void *)(v44 + 576);
            *(unsigned char *)(v43 + 584) = *(unsigned char *)(v44 + 584);
            *(void *)(v43 + 576) = v775;
            swift_bridgeObjectRetain();
          }
        }
        else if (v772 == 1)
        {
          sub_10009F534(v43 + 560);
          long long v774 = *(_OWORD *)(v44 + 569);
          long long *v770 = *v771;
          *(_OWORD *)(v43 + 569) = v774;
        }
        else
        {
          *(void *)(v43 + 560) = v772;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 568) = *(unsigned char *)(v44 + 568);
          uint64_t v776 = *(void *)(v44 + 576);
          *(unsigned char *)(v43 + 584) = *(unsigned char *)(v44 + 584);
          *(void *)(v43 + 576) = v776;
        }
        v777 = (long long *)(v43 + 592);
        v778 = (long long *)(v44 + 592);
        uint64_t v779 = *(void *)(v44 + 592);
        if (*(void *)(v43 + 592) == 1)
        {
          if (v779 == 1)
          {
            long long v780 = *v778;
            *(_OWORD *)(v43 + 601) = *(_OWORD *)(v44 + 601);
            long long *v777 = v780;
          }
          else
          {
            *(void *)(v43 + 592) = v779;
            *(unsigned char *)(v43 + 600) = *(unsigned char *)(v44 + 600);
            uint64_t v782 = *(void *)(v44 + 608);
            *(unsigned char *)(v43 + 616) = *(unsigned char *)(v44 + 616);
            *(void *)(v43 + 608) = v782;
            swift_bridgeObjectRetain();
          }
        }
        else if (v779 == 1)
        {
          sub_10009F534(v43 + 592);
          long long v781 = *(_OWORD *)(v44 + 601);
          long long *v777 = *v778;
          *(_OWORD *)(v43 + 601) = v781;
        }
        else
        {
          *(void *)(v43 + 592) = v779;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 600) = *(unsigned char *)(v44 + 600);
          uint64_t v783 = *(void *)(v44 + 608);
          *(unsigned char *)(v43 + 616) = *(unsigned char *)(v44 + 616);
          *(void *)(v43 + 608) = v783;
        }
        v784 = (long long *)(v43 + 624);
        v785 = (long long *)(v44 + 624);
        uint64_t v786 = *(void *)(v44 + 624);
        if (*(void *)(v43 + 624) == 1)
        {
          if (v786 == 1)
          {
            long long v787 = *v785;
            *(_OWORD *)(v43 + 633) = *(_OWORD *)(v44 + 633);
            long long *v784 = v787;
          }
          else
          {
            *(void *)(v43 + 624) = v786;
            *(unsigned char *)(v43 + 632) = *(unsigned char *)(v44 + 632);
            uint64_t v789 = *(void *)(v44 + 640);
            *(unsigned char *)(v43 + 648) = *(unsigned char *)(v44 + 648);
            *(void *)(v43 + 640) = v789;
            swift_bridgeObjectRetain();
          }
        }
        else if (v786 == 1)
        {
          sub_10009F534(v43 + 624);
          long long v788 = *(_OWORD *)(v44 + 633);
          long long *v784 = *v785;
          *(_OWORD *)(v43 + 633) = v788;
        }
        else
        {
          *(void *)(v43 + 624) = v786;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 632) = *(unsigned char *)(v44 + 632);
          uint64_t v790 = *(void *)(v44 + 640);
          *(unsigned char *)(v43 + 648) = *(unsigned char *)(v44 + 648);
          *(void *)(v43 + 640) = v790;
        }
        v791 = (long long *)(v43 + 656);
        v792 = (long long *)(v44 + 656);
        uint64_t v793 = *(void *)(v44 + 656);
        if (*(void *)(v43 + 656) == 1)
        {
          if (v793 == 1)
          {
            long long v794 = *v792;
            *(_OWORD *)(v43 + 665) = *(_OWORD *)(v44 + 665);
            long long *v791 = v794;
          }
          else
          {
            *(void *)(v43 + 656) = v793;
            *(unsigned char *)(v43 + 664) = *(unsigned char *)(v44 + 664);
            uint64_t v796 = *(void *)(v44 + 672);
            *(unsigned char *)(v43 + 680) = *(unsigned char *)(v44 + 680);
            *(void *)(v43 + 672) = v796;
            swift_bridgeObjectRetain();
          }
        }
        else if (v793 == 1)
        {
          sub_10009F534(v43 + 656);
          long long v795 = *(_OWORD *)(v44 + 665);
          long long *v791 = *v792;
          *(_OWORD *)(v43 + 665) = v795;
        }
        else
        {
          *(void *)(v43 + 656) = v793;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 664) = *(unsigned char *)(v44 + 664);
          uint64_t v797 = *(void *)(v44 + 672);
          *(unsigned char *)(v43 + 680) = *(unsigned char *)(v44 + 680);
          *(void *)(v43 + 672) = v797;
        }
        v798 = (long long *)(v43 + 688);
        v799 = (long long *)(v44 + 688);
        uint64_t v800 = *(void *)(v44 + 688);
        if (*(void *)(v43 + 688) == 1)
        {
          if (v800 == 1)
          {
            long long v801 = *v799;
            *(_OWORD *)(v43 + 697) = *(_OWORD *)(v44 + 697);
            long long *v798 = v801;
          }
          else
          {
            *(void *)(v43 + 688) = v800;
            *(unsigned char *)(v43 + 696) = *(unsigned char *)(v44 + 696);
            uint64_t v803 = *(void *)(v44 + 704);
            *(unsigned char *)(v43 + 712) = *(unsigned char *)(v44 + 712);
            *(void *)(v43 + 704) = v803;
            swift_bridgeObjectRetain();
          }
        }
        else if (v800 == 1)
        {
          sub_10009F534(v43 + 688);
          long long v802 = *(_OWORD *)(v44 + 697);
          long long *v798 = *v799;
          *(_OWORD *)(v43 + 697) = v802;
        }
        else
        {
          *(void *)(v43 + 688) = v800;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 696) = *(unsigned char *)(v44 + 696);
          uint64_t v804 = *(void *)(v44 + 704);
          *(unsigned char *)(v43 + 712) = *(unsigned char *)(v44 + 712);
          *(void *)(v43 + 704) = v804;
        }
        v805 = (long long *)(v43 + 720);
        v806 = (long long *)(v44 + 720);
        uint64_t v807 = *(void *)(v44 + 720);
        if (*(void *)(v43 + 720) == 1)
        {
          if (v807 == 1)
          {
            long long v808 = *v806;
            *(_OWORD *)(v43 + 729) = *(_OWORD *)(v44 + 729);
            long long *v805 = v808;
          }
          else
          {
            *(void *)(v43 + 720) = v807;
            *(unsigned char *)(v43 + 728) = *(unsigned char *)(v44 + 728);
            uint64_t v810 = *(void *)(v44 + 736);
            *(unsigned char *)(v43 + 744) = *(unsigned char *)(v44 + 744);
            *(void *)(v43 + 736) = v810;
            swift_bridgeObjectRetain();
          }
        }
        else if (v807 == 1)
        {
          sub_10009F534(v43 + 720);
          long long v809 = *(_OWORD *)(v44 + 729);
          long long *v805 = *v806;
          *(_OWORD *)(v43 + 729) = v809;
        }
        else
        {
          *(void *)(v43 + 720) = v807;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 728) = *(unsigned char *)(v44 + 728);
          uint64_t v811 = *(void *)(v44 + 736);
          *(unsigned char *)(v43 + 744) = *(unsigned char *)(v44 + 744);
          *(void *)(v43 + 736) = v811;
        }
        v812 = (long long *)(v43 + 752);
        v813 = (long long *)(v44 + 752);
        uint64_t v814 = *(void *)(v44 + 752);
        if (*(void *)(v43 + 752) == 1)
        {
          if (v814 == 1)
          {
            long long v815 = *v813;
            *(_OWORD *)(v43 + 761) = *(_OWORD *)(v44 + 761);
            long long *v812 = v815;
          }
          else
          {
            *(void *)(v43 + 752) = v814;
            *(unsigned char *)(v43 + 760) = *(unsigned char *)(v44 + 760);
            uint64_t v817 = *(void *)(v44 + 768);
            *(unsigned char *)(v43 + 776) = *(unsigned char *)(v44 + 776);
            *(void *)(v43 + 768) = v817;
            swift_bridgeObjectRetain();
          }
        }
        else if (v814 == 1)
        {
          sub_10009F534(v43 + 752);
          long long v816 = *(_OWORD *)(v44 + 761);
          long long *v812 = *v813;
          *(_OWORD *)(v43 + 761) = v816;
        }
        else
        {
          *(void *)(v43 + 752) = v814;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v43 + 760) = *(unsigned char *)(v44 + 760);
          uint64_t v818 = *(void *)(v44 + 768);
          *(unsigned char *)(v43 + 776) = *(unsigned char *)(v44 + 776);
          *(void *)(v43 + 768) = v818;
        }
        long long v819 = *(_OWORD *)(v44 + 784);
        *(unsigned char *)(v43 + 800) = *(unsigned char *)(v44 + 800);
        *(_OWORD *)(v43 + 784) = v819;
        long long v820 = *(_OWORD *)(v44 + 808);
        *(unsigned char *)(v43 + 824) = *(unsigned char *)(v44 + 824);
        *(_OWORD *)(v43 + 808) = v820;
        *(unsigned char *)(v43 + 825) = *(unsigned char *)(v44 + 825);
        *(unsigned char *)(v43 + 826) = *(unsigned char *)(v44 + 826);
        *(unsigned char *)(v43 + 827) = *(unsigned char *)(v44 + 827);
        *(unsigned char *)(v43 + 828) = *(unsigned char *)(v44 + 828);
        *(unsigned char *)(v43 + 829) = *(unsigned char *)(v44 + 829);
        *(unsigned char *)(v43 + 830) = *(unsigned char *)(v44 + 830);
        *(unsigned char *)(v43 + 831) = *(unsigned char *)(v44 + 831);
        *(void *)(v43 + 832) = *(void *)(v44 + 832);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v43 + 840) = *(void *)(v44 + 840);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_786:
        v821 = (long long *)(v43 + 848);
        v822 = (long long *)(v44 + 848);
        uint64_t v823 = *(void *)(v44 + 1664);
        if (*(void *)(v43 + 1664) == 1)
        {
          if (v823 != 1)
          {
            if (*(void *)v822 == 1)
            {
              long long v824 = *v822;
              *(_OWORD *)(v43 + 857) = *(_OWORD *)(v44 + 857);
              long long *v821 = v824;
            }
            else
            {
              *(void *)(v43 + 848) = *(void *)v822;
              *(unsigned char *)(v43 + 856) = *(unsigned char *)(v44 + 856);
              uint64_t v827 = *(void *)(v44 + 864);
              *(unsigned char *)(v43 + 872) = *(unsigned char *)(v44 + 872);
              *(void *)(v43 + 864) = v827;
              swift_bridgeObjectRetain();
            }
            uint64_t v828 = *(void *)(v44 + 880);
            if (v828 == 1)
            {
              long long v829 = *(_OWORD *)(v44 + 880);
              *(_OWORD *)(v43 + 889) = *(_OWORD *)(v44 + 889);
              *(_OWORD *)(v43 + 880) = v829;
            }
            else
            {
              *(void *)(v43 + 880) = v828;
              *(unsigned char *)(v43 + 888) = *(unsigned char *)(v44 + 888);
              uint64_t v831 = *(void *)(v44 + 896);
              *(unsigned char *)(v43 + 904) = *(unsigned char *)(v44 + 904);
              *(void *)(v43 + 896) = v831;
              swift_bridgeObjectRetain();
            }
            uint64_t v832 = *(void *)(v44 + 912);
            if (v832 == 1)
            {
              long long v833 = *(_OWORD *)(v44 + 912);
              *(_OWORD *)(v43 + 921) = *(_OWORD *)(v44 + 921);
              *(_OWORD *)(v43 + 912) = v833;
            }
            else
            {
              *(void *)(v43 + 912) = v832;
              *(unsigned char *)(v43 + 920) = *(unsigned char *)(v44 + 920);
              uint64_t v834 = *(void *)(v44 + 928);
              *(unsigned char *)(v43 + 936) = *(unsigned char *)(v44 + 936);
              *(void *)(v43 + 928) = v834;
              swift_bridgeObjectRetain();
            }
            uint64_t v835 = *(void *)(v44 + 944);
            if (v835 == 1)
            {
              long long v836 = *(_OWORD *)(v44 + 944);
              *(_OWORD *)(v43 + 953) = *(_OWORD *)(v44 + 953);
              *(_OWORD *)(v43 + 944) = v836;
            }
            else
            {
              *(void *)(v43 + 944) = v835;
              *(unsigned char *)(v43 + 952) = *(unsigned char *)(v44 + 952);
              uint64_t v837 = *(void *)(v44 + 960);
              *(unsigned char *)(v43 + 968) = *(unsigned char *)(v44 + 968);
              *(void *)(v43 + 960) = v837;
              swift_bridgeObjectRetain();
            }
            uint64_t v838 = *(void *)(v44 + 976);
            if (v838 == 1)
            {
              long long v839 = *(_OWORD *)(v44 + 976);
              *(_OWORD *)(v43 + 985) = *(_OWORD *)(v44 + 985);
              *(_OWORD *)(v43 + 976) = v839;
            }
            else
            {
              *(void *)(v43 + 976) = v838;
              *(unsigned char *)(v43 + 984) = *(unsigned char *)(v44 + 984);
              uint64_t v840 = *(void *)(v44 + 992);
              *(unsigned char *)(v43 + 1000) = *(unsigned char *)(v44 + 1000);
              *(void *)(v43 + 992) = v840;
              swift_bridgeObjectRetain();
            }
            uint64_t v841 = *(void *)(v44 + 1008);
            if (v841 == 1)
            {
              long long v842 = *(_OWORD *)(v44 + 1008);
              *(_OWORD *)(v43 + 1017) = *(_OWORD *)(v44 + 1017);
              *(_OWORD *)(v43 + 1008) = v842;
            }
            else
            {
              *(void *)(v43 + 1008) = v841;
              *(unsigned char *)(v43 + 1016) = *(unsigned char *)(v44 + 1016);
              uint64_t v843 = *(void *)(v44 + 1024);
              *(unsigned char *)(v43 + 1032) = *(unsigned char *)(v44 + 1032);
              *(void *)(v43 + 1024) = v843;
              swift_bridgeObjectRetain();
            }
            uint64_t v844 = *(void *)(v44 + 1040);
            if (v844 == 1)
            {
              long long v845 = *(_OWORD *)(v44 + 1040);
              *(_OWORD *)(v43 + 1049) = *(_OWORD *)(v44 + 1049);
              *(_OWORD *)(v43 + 1040) = v845;
            }
            else
            {
              *(void *)(v43 + 1040) = v844;
              *(unsigned char *)(v43 + 1048) = *(unsigned char *)(v44 + 1048);
              uint64_t v846 = *(void *)(v44 + 1056);
              *(unsigned char *)(v43 + 1064) = *(unsigned char *)(v44 + 1064);
              *(void *)(v43 + 1056) = v846;
              swift_bridgeObjectRetain();
            }
            uint64_t v847 = *(void *)(v44 + 1072);
            if (v847 == 1)
            {
              long long v848 = *(_OWORD *)(v44 + 1072);
              *(_OWORD *)(v43 + 1081) = *(_OWORD *)(v44 + 1081);
              *(_OWORD *)(v43 + 1072) = v848;
            }
            else
            {
              *(void *)(v43 + 1072) = v847;
              *(unsigned char *)(v43 + 1080) = *(unsigned char *)(v44 + 1080);
              uint64_t v849 = *(void *)(v44 + 1088);
              *(unsigned char *)(v43 + 1096) = *(unsigned char *)(v44 + 1096);
              *(void *)(v43 + 1088) = v849;
              swift_bridgeObjectRetain();
            }
            uint64_t v850 = *(void *)(v44 + 1104);
            if (v850 == 1)
            {
              long long v851 = *(_OWORD *)(v44 + 1104);
              *(_OWORD *)(v43 + 1113) = *(_OWORD *)(v44 + 1113);
              *(_OWORD *)(v43 + 1104) = v851;
            }
            else
            {
              *(void *)(v43 + 1104) = v850;
              *(unsigned char *)(v43 + 1112) = *(unsigned char *)(v44 + 1112);
              uint64_t v852 = *(void *)(v44 + 1120);
              *(unsigned char *)(v43 + 1128) = *(unsigned char *)(v44 + 1128);
              *(void *)(v43 + 1120) = v852;
              swift_bridgeObjectRetain();
            }
            uint64_t v853 = *(void *)(v44 + 1136);
            if (v853 == 1)
            {
              long long v854 = *(_OWORD *)(v44 + 1136);
              *(_OWORD *)(v43 + 1145) = *(_OWORD *)(v44 + 1145);
              *(_OWORD *)(v43 + 1136) = v854;
            }
            else
            {
              *(void *)(v43 + 1136) = v853;
              *(unsigned char *)(v43 + 1144) = *(unsigned char *)(v44 + 1144);
              uint64_t v855 = *(void *)(v44 + 1152);
              *(unsigned char *)(v43 + 1160) = *(unsigned char *)(v44 + 1160);
              *(void *)(v43 + 1152) = v855;
              swift_bridgeObjectRetain();
            }
            uint64_t v856 = *(void *)(v44 + 1168);
            if (v856 == 1)
            {
              long long v857 = *(_OWORD *)(v44 + 1168);
              *(_OWORD *)(v43 + 1177) = *(_OWORD *)(v44 + 1177);
              *(_OWORD *)(v43 + 1168) = v857;
            }
            else
            {
              *(void *)(v43 + 1168) = v856;
              *(unsigned char *)(v43 + 1176) = *(unsigned char *)(v44 + 1176);
              uint64_t v858 = *(void *)(v44 + 1184);
              *(unsigned char *)(v43 + 1192) = *(unsigned char *)(v44 + 1192);
              *(void *)(v43 + 1184) = v858;
              swift_bridgeObjectRetain();
            }
            uint64_t v859 = *(void *)(v44 + 1200);
            if (v859 == 1)
            {
              long long v860 = *(_OWORD *)(v44 + 1200);
              *(_OWORD *)(v43 + 1209) = *(_OWORD *)(v44 + 1209);
              *(_OWORD *)(v43 + 1200) = v860;
            }
            else
            {
              *(void *)(v43 + 1200) = v859;
              *(unsigned char *)(v43 + 1208) = *(unsigned char *)(v44 + 1208);
              uint64_t v861 = *(void *)(v44 + 1216);
              *(unsigned char *)(v43 + 1224) = *(unsigned char *)(v44 + 1224);
              *(void *)(v43 + 1216) = v861;
              swift_bridgeObjectRetain();
            }
            uint64_t v862 = *(void *)(v44 + 1232);
            if (v862 == 1)
            {
              long long v863 = *(_OWORD *)(v44 + 1232);
              *(_OWORD *)(v43 + 1241) = *(_OWORD *)(v44 + 1241);
              *(_OWORD *)(v43 + 1232) = v863;
            }
            else
            {
              *(void *)(v43 + 1232) = v862;
              *(unsigned char *)(v43 + 1240) = *(unsigned char *)(v44 + 1240);
              uint64_t v864 = *(void *)(v44 + 1248);
              *(unsigned char *)(v43 + 1256) = *(unsigned char *)(v44 + 1256);
              *(void *)(v43 + 1248) = v864;
              swift_bridgeObjectRetain();
            }
            uint64_t v865 = *(void *)(v44 + 1264);
            if (v865 == 1)
            {
              long long v866 = *(_OWORD *)(v44 + 1264);
              *(_OWORD *)(v43 + 1273) = *(_OWORD *)(v44 + 1273);
              *(_OWORD *)(v43 + 1264) = v866;
            }
            else
            {
              *(void *)(v43 + 1264) = v865;
              *(unsigned char *)(v43 + 1272) = *(unsigned char *)(v44 + 1272);
              uint64_t v867 = *(void *)(v44 + 1280);
              *(unsigned char *)(v43 + 1288) = *(unsigned char *)(v44 + 1288);
              *(void *)(v43 + 1280) = v867;
              swift_bridgeObjectRetain();
            }
            uint64_t v868 = *(void *)(v44 + 1296);
            if (v868 == 1)
            {
              long long v869 = *(_OWORD *)(v44 + 1296);
              *(_OWORD *)(v43 + 1305) = *(_OWORD *)(v44 + 1305);
              *(_OWORD *)(v43 + 1296) = v869;
            }
            else
            {
              *(void *)(v43 + 1296) = v868;
              *(unsigned char *)(v43 + 1304) = *(unsigned char *)(v44 + 1304);
              uint64_t v870 = *(void *)(v44 + 1312);
              *(unsigned char *)(v43 + 1320) = *(unsigned char *)(v44 + 1320);
              *(void *)(v43 + 1312) = v870;
              swift_bridgeObjectRetain();
            }
            uint64_t v871 = *(void *)(v44 + 1328);
            if (v871 == 1)
            {
              long long v872 = *(_OWORD *)(v44 + 1328);
              *(_OWORD *)(v43 + 1337) = *(_OWORD *)(v44 + 1337);
              *(_OWORD *)(v43 + 1328) = v872;
            }
            else
            {
              *(void *)(v43 + 1328) = v871;
              *(unsigned char *)(v43 + 1336) = *(unsigned char *)(v44 + 1336);
              uint64_t v873 = *(void *)(v44 + 1344);
              *(unsigned char *)(v43 + 1352) = *(unsigned char *)(v44 + 1352);
              *(void *)(v43 + 1344) = v873;
              swift_bridgeObjectRetain();
            }
            uint64_t v874 = *(void *)(v44 + 1360);
            if (v874 == 1)
            {
              long long v875 = *(_OWORD *)(v44 + 1360);
              *(_OWORD *)(v43 + 1369) = *(_OWORD *)(v44 + 1369);
              *(_OWORD *)(v43 + 1360) = v875;
            }
            else
            {
              *(void *)(v43 + 1360) = v874;
              *(unsigned char *)(v43 + 1368) = *(unsigned char *)(v44 + 1368);
              uint64_t v876 = *(void *)(v44 + 1376);
              *(unsigned char *)(v43 + 1384) = *(unsigned char *)(v44 + 1384);
              *(void *)(v43 + 1376) = v876;
              swift_bridgeObjectRetain();
            }
            uint64_t v877 = *(void *)(v44 + 1392);
            if (v877 == 1)
            {
              long long v878 = *(_OWORD *)(v44 + 1392);
              *(_OWORD *)(v43 + 1401) = *(_OWORD *)(v44 + 1401);
              *(_OWORD *)(v43 + 1392) = v878;
            }
            else
            {
              *(void *)(v43 + 1392) = v877;
              *(unsigned char *)(v43 + 1400) = *(unsigned char *)(v44 + 1400);
              uint64_t v879 = *(void *)(v44 + 1408);
              *(unsigned char *)(v43 + 1416) = *(unsigned char *)(v44 + 1416);
              *(void *)(v43 + 1408) = v879;
              swift_bridgeObjectRetain();
            }
            uint64_t v880 = *(void *)(v44 + 1424);
            if (v880 == 1)
            {
              long long v881 = *(_OWORD *)(v44 + 1424);
              *(_OWORD *)(v43 + 1433) = *(_OWORD *)(v44 + 1433);
              *(_OWORD *)(v43 + 1424) = v881;
            }
            else
            {
              *(void *)(v43 + 1424) = v880;
              *(unsigned char *)(v43 + 1432) = *(unsigned char *)(v44 + 1432);
              uint64_t v882 = *(void *)(v44 + 1440);
              *(unsigned char *)(v43 + 1448) = *(unsigned char *)(v44 + 1448);
              *(void *)(v43 + 1440) = v882;
              swift_bridgeObjectRetain();
            }
            uint64_t v883 = *(void *)(v44 + 1456);
            if (v883 == 1)
            {
              long long v884 = *(_OWORD *)(v44 + 1456);
              *(_OWORD *)(v43 + 1465) = *(_OWORD *)(v44 + 1465);
              *(_OWORD *)(v43 + 1456) = v884;
            }
            else
            {
              *(void *)(v43 + 1456) = v883;
              *(unsigned char *)(v43 + 1464) = *(unsigned char *)(v44 + 1464);
              uint64_t v885 = *(void *)(v44 + 1472);
              *(unsigned char *)(v43 + 1480) = *(unsigned char *)(v44 + 1480);
              *(void *)(v43 + 1472) = v885;
              swift_bridgeObjectRetain();
            }
            uint64_t v886 = *(void *)(v44 + 1488);
            if (v886 == 1)
            {
              long long v887 = *(_OWORD *)(v44 + 1488);
              *(_OWORD *)(v43 + 1497) = *(_OWORD *)(v44 + 1497);
              *(_OWORD *)(v43 + 1488) = v887;
            }
            else
            {
              *(void *)(v43 + 1488) = v886;
              *(unsigned char *)(v43 + 1496) = *(unsigned char *)(v44 + 1496);
              uint64_t v888 = *(void *)(v44 + 1504);
              *(unsigned char *)(v43 + 1512) = *(unsigned char *)(v44 + 1512);
              *(void *)(v43 + 1504) = v888;
              swift_bridgeObjectRetain();
            }
            uint64_t v889 = *(void *)(v44 + 1520);
            if (v889 == 1)
            {
              long long v890 = *(_OWORD *)(v44 + 1520);
              *(_OWORD *)(v43 + 1529) = *(_OWORD *)(v44 + 1529);
              *(_OWORD *)(v43 + 1520) = v890;
            }
            else
            {
              *(void *)(v43 + 1520) = v889;
              *(unsigned char *)(v43 + 1528) = *(unsigned char *)(v44 + 1528);
              uint64_t v891 = *(void *)(v44 + 1536);
              *(unsigned char *)(v43 + 1544) = *(unsigned char *)(v44 + 1544);
              *(void *)(v43 + 1536) = v891;
              swift_bridgeObjectRetain();
            }
            uint64_t v892 = *(void *)(v44 + 1552);
            if (v892 == 1)
            {
              long long v893 = *(_OWORD *)(v44 + 1552);
              *(_OWORD *)(v43 + 1561) = *(_OWORD *)(v44 + 1561);
              *(_OWORD *)(v43 + 1552) = v893;
            }
            else
            {
              *(void *)(v43 + 1552) = v892;
              *(unsigned char *)(v43 + 1560) = *(unsigned char *)(v44 + 1560);
              uint64_t v894 = *(void *)(v44 + 1568);
              *(unsigned char *)(v43 + 1576) = *(unsigned char *)(v44 + 1576);
              *(void *)(v43 + 1568) = v894;
              swift_bridgeObjectRetain();
            }
            uint64_t v895 = *(void *)(v44 + 1584);
            if (v895 == 1)
            {
              long long v896 = *(_OWORD *)(v44 + 1584);
              *(_OWORD *)(v43 + 1593) = *(_OWORD *)(v44 + 1593);
              *(_OWORD *)(v43 + 1584) = v896;
            }
            else
            {
              *(void *)(v43 + 1584) = v895;
              *(unsigned char *)(v43 + 1592) = *(unsigned char *)(v44 + 1592);
              uint64_t v897 = *(void *)(v44 + 1600);
              *(unsigned char *)(v43 + 1608) = *(unsigned char *)(v44 + 1608);
              *(void *)(v43 + 1600) = v897;
              swift_bridgeObjectRetain();
            }
            long long v898 = *(_OWORD *)(v44 + 1616);
            *(unsigned char *)(v43 + 1632) = *(unsigned char *)(v44 + 1632);
            *(_OWORD *)(v43 + 1616) = v898;
            long long v899 = *(_OWORD *)(v44 + 1640);
            *(unsigned char *)(v43 + 1656) = *(unsigned char *)(v44 + 1656);
            *(_OWORD *)(v43 + 1640) = v899;
            *(unsigned char *)(v43 + 1657) = *(unsigned char *)(v44 + 1657);
            *(unsigned char *)(v43 + 1658) = *(unsigned char *)(v44 + 1658);
            *(unsigned char *)(v43 + 1659) = *(unsigned char *)(v44 + 1659);
            *(unsigned char *)(v43 + 1660) = *(unsigned char *)(v44 + 1660);
            *(unsigned char *)(v43 + 1661) = *(unsigned char *)(v44 + 1661);
            *(unsigned char *)(v43 + 1662) = *(unsigned char *)(v44 + 1662);
            *(unsigned char *)(v43 + 1663) = *(unsigned char *)(v44 + 1663);
            *(void *)(v43 + 1664) = *(void *)(v44 + 1664);
            *(void *)(v43 + 1672) = *(void *)(v44 + 1672);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_1033;
          }
        }
        else
        {
          if (v823 != 1)
          {
            uint64_t v825 = *(void *)v822;
            if (*(void *)v821 == 1)
            {
              if (v825 == 1)
              {
                long long v826 = *v822;
                *(_OWORD *)(v43 + 857) = *(_OWORD *)(v44 + 857);
                long long *v821 = v826;
              }
              else
              {
                *(void *)(v43 + 848) = v825;
                *(unsigned char *)(v43 + 856) = *(unsigned char *)(v44 + 856);
                uint64_t v900 = *(void *)(v44 + 864);
                *(unsigned char *)(v43 + 872) = *(unsigned char *)(v44 + 872);
                *(void *)(v43 + 864) = v900;
                swift_bridgeObjectRetain();
              }
            }
            else if (v825 == 1)
            {
              sub_10009F534(v43 + 848);
              long long v830 = *(_OWORD *)(v44 + 857);
              long long *v821 = *v822;
              *(_OWORD *)(v43 + 857) = v830;
            }
            else
            {
              *(void *)(v43 + 848) = v825;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 856) = *(unsigned char *)(v44 + 856);
              uint64_t v901 = *(void *)(v44 + 864);
              *(unsigned char *)(v43 + 872) = *(unsigned char *)(v44 + 872);
              *(void *)(v43 + 864) = v901;
            }
            v902 = (long long *)(v43 + 880);
            v903 = (long long *)(v44 + 880);
            uint64_t v904 = *(void *)(v44 + 880);
            if (*(void *)(v43 + 880) == 1)
            {
              if (v904 == 1)
              {
                long long v905 = *v903;
                *(_OWORD *)(v43 + 889) = *(_OWORD *)(v44 + 889);
                long long *v902 = v905;
              }
              else
              {
                *(void *)(v43 + 880) = v904;
                *(unsigned char *)(v43 + 888) = *(unsigned char *)(v44 + 888);
                uint64_t v907 = *(void *)(v44 + 896);
                *(unsigned char *)(v43 + 904) = *(unsigned char *)(v44 + 904);
                *(void *)(v43 + 896) = v907;
                swift_bridgeObjectRetain();
              }
            }
            else if (v904 == 1)
            {
              sub_10009F534(v43 + 880);
              long long v906 = *(_OWORD *)(v44 + 889);
              long long *v902 = *v903;
              *(_OWORD *)(v43 + 889) = v906;
            }
            else
            {
              *(void *)(v43 + 880) = v904;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 888) = *(unsigned char *)(v44 + 888);
              uint64_t v908 = *(void *)(v44 + 896);
              *(unsigned char *)(v43 + 904) = *(unsigned char *)(v44 + 904);
              *(void *)(v43 + 896) = v908;
            }
            v909 = (long long *)(v43 + 912);
            v910 = (long long *)(v44 + 912);
            uint64_t v911 = *(void *)(v44 + 912);
            if (*(void *)(v43 + 912) == 1)
            {
              if (v911 == 1)
              {
                long long v912 = *v910;
                *(_OWORD *)(v43 + 921) = *(_OWORD *)(v44 + 921);
                long long *v909 = v912;
              }
              else
              {
                *(void *)(v43 + 912) = v911;
                *(unsigned char *)(v43 + 920) = *(unsigned char *)(v44 + 920);
                uint64_t v914 = *(void *)(v44 + 928);
                *(unsigned char *)(v43 + 936) = *(unsigned char *)(v44 + 936);
                *(void *)(v43 + 928) = v914;
                swift_bridgeObjectRetain();
              }
            }
            else if (v911 == 1)
            {
              sub_10009F534(v43 + 912);
              long long v913 = *(_OWORD *)(v44 + 921);
              long long *v909 = *v910;
              *(_OWORD *)(v43 + 921) = v913;
            }
            else
            {
              *(void *)(v43 + 912) = v911;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 920) = *(unsigned char *)(v44 + 920);
              uint64_t v915 = *(void *)(v44 + 928);
              *(unsigned char *)(v43 + 936) = *(unsigned char *)(v44 + 936);
              *(void *)(v43 + 928) = v915;
            }
            v916 = (long long *)(v43 + 944);
            v917 = (long long *)(v44 + 944);
            uint64_t v918 = *(void *)(v44 + 944);
            if (*(void *)(v43 + 944) == 1)
            {
              if (v918 == 1)
              {
                long long v919 = *v917;
                *(_OWORD *)(v43 + 953) = *(_OWORD *)(v44 + 953);
                long long *v916 = v919;
              }
              else
              {
                *(void *)(v43 + 944) = v918;
                *(unsigned char *)(v43 + 952) = *(unsigned char *)(v44 + 952);
                uint64_t v921 = *(void *)(v44 + 960);
                *(unsigned char *)(v43 + 968) = *(unsigned char *)(v44 + 968);
                *(void *)(v43 + 960) = v921;
                swift_bridgeObjectRetain();
              }
            }
            else if (v918 == 1)
            {
              sub_10009F534(v43 + 944);
              long long v920 = *(_OWORD *)(v44 + 953);
              long long *v916 = *v917;
              *(_OWORD *)(v43 + 953) = v920;
            }
            else
            {
              *(void *)(v43 + 944) = v918;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 952) = *(unsigned char *)(v44 + 952);
              uint64_t v922 = *(void *)(v44 + 960);
              *(unsigned char *)(v43 + 968) = *(unsigned char *)(v44 + 968);
              *(void *)(v43 + 960) = v922;
            }
            v923 = (long long *)(v43 + 976);
            v924 = (long long *)(v44 + 976);
            uint64_t v925 = *(void *)(v44 + 976);
            if (*(void *)(v43 + 976) == 1)
            {
              if (v925 == 1)
              {
                long long v926 = *v924;
                *(_OWORD *)(v43 + 985) = *(_OWORD *)(v44 + 985);
                long long *v923 = v926;
              }
              else
              {
                *(void *)(v43 + 976) = v925;
                *(unsigned char *)(v43 + 984) = *(unsigned char *)(v44 + 984);
                uint64_t v928 = *(void *)(v44 + 992);
                *(unsigned char *)(v43 + 1000) = *(unsigned char *)(v44 + 1000);
                *(void *)(v43 + 992) = v928;
                swift_bridgeObjectRetain();
              }
            }
            else if (v925 == 1)
            {
              sub_10009F534(v43 + 976);
              long long v927 = *(_OWORD *)(v44 + 985);
              long long *v923 = *v924;
              *(_OWORD *)(v43 + 985) = v927;
            }
            else
            {
              *(void *)(v43 + 976) = v925;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 984) = *(unsigned char *)(v44 + 984);
              uint64_t v929 = *(void *)(v44 + 992);
              *(unsigned char *)(v43 + 1000) = *(unsigned char *)(v44 + 1000);
              *(void *)(v43 + 992) = v929;
            }
            v930 = (long long *)(v43 + 1008);
            v931 = (long long *)(v44 + 1008);
            uint64_t v932 = *(void *)(v44 + 1008);
            if (*(void *)(v43 + 1008) == 1)
            {
              if (v932 == 1)
              {
                long long v933 = *v931;
                *(_OWORD *)(v43 + 1017) = *(_OWORD *)(v44 + 1017);
                long long *v930 = v933;
              }
              else
              {
                *(void *)(v43 + 1008) = v932;
                *(unsigned char *)(v43 + 1016) = *(unsigned char *)(v44 + 1016);
                uint64_t v935 = *(void *)(v44 + 1024);
                *(unsigned char *)(v43 + 1032) = *(unsigned char *)(v44 + 1032);
                *(void *)(v43 + 1024) = v935;
                swift_bridgeObjectRetain();
              }
            }
            else if (v932 == 1)
            {
              sub_10009F534(v43 + 1008);
              long long v934 = *(_OWORD *)(v44 + 1017);
              long long *v930 = *v931;
              *(_OWORD *)(v43 + 1017) = v934;
            }
            else
            {
              *(void *)(v43 + 1008) = v932;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1016) = *(unsigned char *)(v44 + 1016);
              uint64_t v936 = *(void *)(v44 + 1024);
              *(unsigned char *)(v43 + 1032) = *(unsigned char *)(v44 + 1032);
              *(void *)(v43 + 1024) = v936;
            }
            v937 = (long long *)(v43 + 1040);
            v938 = (long long *)(v44 + 1040);
            uint64_t v939 = *(void *)(v44 + 1040);
            if (*(void *)(v43 + 1040) == 1)
            {
              if (v939 == 1)
              {
                long long v940 = *v938;
                *(_OWORD *)(v43 + 1049) = *(_OWORD *)(v44 + 1049);
                long long *v937 = v940;
              }
              else
              {
                *(void *)(v43 + 1040) = v939;
                *(unsigned char *)(v43 + 1048) = *(unsigned char *)(v44 + 1048);
                uint64_t v942 = *(void *)(v44 + 1056);
                *(unsigned char *)(v43 + 1064) = *(unsigned char *)(v44 + 1064);
                *(void *)(v43 + 1056) = v942;
                swift_bridgeObjectRetain();
              }
            }
            else if (v939 == 1)
            {
              sub_10009F534(v43 + 1040);
              long long v941 = *(_OWORD *)(v44 + 1049);
              long long *v937 = *v938;
              *(_OWORD *)(v43 + 1049) = v941;
            }
            else
            {
              *(void *)(v43 + 1040) = v939;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1048) = *(unsigned char *)(v44 + 1048);
              uint64_t v943 = *(void *)(v44 + 1056);
              *(unsigned char *)(v43 + 1064) = *(unsigned char *)(v44 + 1064);
              *(void *)(v43 + 1056) = v943;
            }
            v944 = (long long *)(v43 + 1072);
            v945 = (long long *)(v44 + 1072);
            uint64_t v946 = *(void *)(v44 + 1072);
            if (*(void *)(v43 + 1072) == 1)
            {
              if (v946 == 1)
              {
                long long v947 = *v945;
                *(_OWORD *)(v43 + 1081) = *(_OWORD *)(v44 + 1081);
                long long *v944 = v947;
              }
              else
              {
                *(void *)(v43 + 1072) = v946;
                *(unsigned char *)(v43 + 1080) = *(unsigned char *)(v44 + 1080);
                uint64_t v949 = *(void *)(v44 + 1088);
                *(unsigned char *)(v43 + 1096) = *(unsigned char *)(v44 + 1096);
                *(void *)(v43 + 1088) = v949;
                swift_bridgeObjectRetain();
              }
            }
            else if (v946 == 1)
            {
              sub_10009F534(v43 + 1072);
              long long v948 = *(_OWORD *)(v44 + 1081);
              long long *v944 = *v945;
              *(_OWORD *)(v43 + 1081) = v948;
            }
            else
            {
              *(void *)(v43 + 1072) = v946;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1080) = *(unsigned char *)(v44 + 1080);
              uint64_t v950 = *(void *)(v44 + 1088);
              *(unsigned char *)(v43 + 1096) = *(unsigned char *)(v44 + 1096);
              *(void *)(v43 + 1088) = v950;
            }
            v951 = (long long *)(v43 + 1104);
            v952 = (long long *)(v44 + 1104);
            uint64_t v953 = *(void *)(v44 + 1104);
            if (*(void *)(v43 + 1104) == 1)
            {
              if (v953 == 1)
              {
                long long v954 = *v952;
                *(_OWORD *)(v43 + 1113) = *(_OWORD *)(v44 + 1113);
                long long *v951 = v954;
              }
              else
              {
                *(void *)(v43 + 1104) = v953;
                *(unsigned char *)(v43 + 1112) = *(unsigned char *)(v44 + 1112);
                uint64_t v956 = *(void *)(v44 + 1120);
                *(unsigned char *)(v43 + 1128) = *(unsigned char *)(v44 + 1128);
                *(void *)(v43 + 1120) = v956;
                swift_bridgeObjectRetain();
              }
            }
            else if (v953 == 1)
            {
              sub_10009F534(v43 + 1104);
              long long v955 = *(_OWORD *)(v44 + 1113);
              long long *v951 = *v952;
              *(_OWORD *)(v43 + 1113) = v955;
            }
            else
            {
              *(void *)(v43 + 1104) = v953;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1112) = *(unsigned char *)(v44 + 1112);
              uint64_t v957 = *(void *)(v44 + 1120);
              *(unsigned char *)(v43 + 1128) = *(unsigned char *)(v44 + 1128);
              *(void *)(v43 + 1120) = v957;
            }
            v958 = (long long *)(v43 + 1136);
            v959 = (long long *)(v44 + 1136);
            uint64_t v960 = *(void *)(v44 + 1136);
            if (*(void *)(v43 + 1136) == 1)
            {
              if (v960 == 1)
              {
                long long v961 = *v959;
                *(_OWORD *)(v43 + 1145) = *(_OWORD *)(v44 + 1145);
                long long *v958 = v961;
              }
              else
              {
                *(void *)(v43 + 1136) = v960;
                *(unsigned char *)(v43 + 1144) = *(unsigned char *)(v44 + 1144);
                uint64_t v963 = *(void *)(v44 + 1152);
                *(unsigned char *)(v43 + 1160) = *(unsigned char *)(v44 + 1160);
                *(void *)(v43 + 1152) = v963;
                swift_bridgeObjectRetain();
              }
            }
            else if (v960 == 1)
            {
              sub_10009F534(v43 + 1136);
              long long v962 = *(_OWORD *)(v44 + 1145);
              long long *v958 = *v959;
              *(_OWORD *)(v43 + 1145) = v962;
            }
            else
            {
              *(void *)(v43 + 1136) = v960;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1144) = *(unsigned char *)(v44 + 1144);
              uint64_t v964 = *(void *)(v44 + 1152);
              *(unsigned char *)(v43 + 1160) = *(unsigned char *)(v44 + 1160);
              *(void *)(v43 + 1152) = v964;
            }
            v965 = (long long *)(v43 + 1168);
            v966 = (long long *)(v44 + 1168);
            uint64_t v967 = *(void *)(v44 + 1168);
            if (*(void *)(v43 + 1168) == 1)
            {
              if (v967 == 1)
              {
                long long v968 = *v966;
                *(_OWORD *)(v43 + 1177) = *(_OWORD *)(v44 + 1177);
                long long *v965 = v968;
              }
              else
              {
                *(void *)(v43 + 1168) = v967;
                *(unsigned char *)(v43 + 1176) = *(unsigned char *)(v44 + 1176);
                uint64_t v970 = *(void *)(v44 + 1184);
                *(unsigned char *)(v43 + 1192) = *(unsigned char *)(v44 + 1192);
                *(void *)(v43 + 1184) = v970;
                swift_bridgeObjectRetain();
              }
            }
            else if (v967 == 1)
            {
              sub_10009F534(v43 + 1168);
              long long v969 = *(_OWORD *)(v44 + 1177);
              long long *v965 = *v966;
              *(_OWORD *)(v43 + 1177) = v969;
            }
            else
            {
              *(void *)(v43 + 1168) = v967;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1176) = *(unsigned char *)(v44 + 1176);
              uint64_t v971 = *(void *)(v44 + 1184);
              *(unsigned char *)(v43 + 1192) = *(unsigned char *)(v44 + 1192);
              *(void *)(v43 + 1184) = v971;
            }
            v972 = (long long *)(v43 + 1200);
            v973 = (long long *)(v44 + 1200);
            uint64_t v974 = *(void *)(v44 + 1200);
            if (*(void *)(v43 + 1200) == 1)
            {
              if (v974 == 1)
              {
                long long v975 = *v973;
                *(_OWORD *)(v43 + 1209) = *(_OWORD *)(v44 + 1209);
                long long *v972 = v975;
              }
              else
              {
                *(void *)(v43 + 1200) = v974;
                *(unsigned char *)(v43 + 1208) = *(unsigned char *)(v44 + 1208);
                uint64_t v977 = *(void *)(v44 + 1216);
                *(unsigned char *)(v43 + 1224) = *(unsigned char *)(v44 + 1224);
                *(void *)(v43 + 1216) = v977;
                swift_bridgeObjectRetain();
              }
            }
            else if (v974 == 1)
            {
              sub_10009F534(v43 + 1200);
              long long v976 = *(_OWORD *)(v44 + 1209);
              long long *v972 = *v973;
              *(_OWORD *)(v43 + 1209) = v976;
            }
            else
            {
              *(void *)(v43 + 1200) = v974;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1208) = *(unsigned char *)(v44 + 1208);
              uint64_t v978 = *(void *)(v44 + 1216);
              *(unsigned char *)(v43 + 1224) = *(unsigned char *)(v44 + 1224);
              *(void *)(v43 + 1216) = v978;
            }
            v979 = (long long *)(v43 + 1232);
            v980 = (long long *)(v44 + 1232);
            uint64_t v981 = *(void *)(v44 + 1232);
            if (*(void *)(v43 + 1232) == 1)
            {
              if (v981 == 1)
              {
                long long v982 = *v980;
                *(_OWORD *)(v43 + 1241) = *(_OWORD *)(v44 + 1241);
                long long *v979 = v982;
              }
              else
              {
                *(void *)(v43 + 1232) = v981;
                *(unsigned char *)(v43 + 1240) = *(unsigned char *)(v44 + 1240);
                uint64_t v984 = *(void *)(v44 + 1248);
                *(unsigned char *)(v43 + 1256) = *(unsigned char *)(v44 + 1256);
                *(void *)(v43 + 1248) = v984;
                swift_bridgeObjectRetain();
              }
            }
            else if (v981 == 1)
            {
              sub_10009F534(v43 + 1232);
              long long v983 = *(_OWORD *)(v44 + 1241);
              long long *v979 = *v980;
              *(_OWORD *)(v43 + 1241) = v983;
            }
            else
            {
              *(void *)(v43 + 1232) = v981;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1240) = *(unsigned char *)(v44 + 1240);
              uint64_t v985 = *(void *)(v44 + 1248);
              *(unsigned char *)(v43 + 1256) = *(unsigned char *)(v44 + 1256);
              *(void *)(v43 + 1248) = v985;
            }
            v986 = (long long *)(v43 + 1264);
            v987 = (long long *)(v44 + 1264);
            uint64_t v988 = *(void *)(v44 + 1264);
            if (*(void *)(v43 + 1264) == 1)
            {
              if (v988 == 1)
              {
                long long v989 = *v987;
                *(_OWORD *)(v43 + 1273) = *(_OWORD *)(v44 + 1273);
                long long *v986 = v989;
              }
              else
              {
                *(void *)(v43 + 1264) = v988;
                *(unsigned char *)(v43 + 1272) = *(unsigned char *)(v44 + 1272);
                uint64_t v991 = *(void *)(v44 + 1280);
                *(unsigned char *)(v43 + 1288) = *(unsigned char *)(v44 + 1288);
                *(void *)(v43 + 1280) = v991;
                swift_bridgeObjectRetain();
              }
            }
            else if (v988 == 1)
            {
              sub_10009F534(v43 + 1264);
              long long v990 = *(_OWORD *)(v44 + 1273);
              long long *v986 = *v987;
              *(_OWORD *)(v43 + 1273) = v990;
            }
            else
            {
              *(void *)(v43 + 1264) = v988;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1272) = *(unsigned char *)(v44 + 1272);
              uint64_t v992 = *(void *)(v44 + 1280);
              *(unsigned char *)(v43 + 1288) = *(unsigned char *)(v44 + 1288);
              *(void *)(v43 + 1280) = v992;
            }
            v993 = (long long *)(v43 + 1296);
            v994 = (long long *)(v44 + 1296);
            uint64_t v995 = *(void *)(v44 + 1296);
            if (*(void *)(v43 + 1296) == 1)
            {
              if (v995 == 1)
              {
                long long v996 = *v994;
                *(_OWORD *)(v43 + 1305) = *(_OWORD *)(v44 + 1305);
                long long *v993 = v996;
              }
              else
              {
                *(void *)(v43 + 1296) = v995;
                *(unsigned char *)(v43 + 1304) = *(unsigned char *)(v44 + 1304);
                uint64_t v998 = *(void *)(v44 + 1312);
                *(unsigned char *)(v43 + 1320) = *(unsigned char *)(v44 + 1320);
                *(void *)(v43 + 1312) = v998;
                swift_bridgeObjectRetain();
              }
            }
            else if (v995 == 1)
            {
              sub_10009F534(v43 + 1296);
              long long v997 = *(_OWORD *)(v44 + 1305);
              long long *v993 = *v994;
              *(_OWORD *)(v43 + 1305) = v997;
            }
            else
            {
              *(void *)(v43 + 1296) = v995;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1304) = *(unsigned char *)(v44 + 1304);
              uint64_t v999 = *(void *)(v44 + 1312);
              *(unsigned char *)(v43 + 1320) = *(unsigned char *)(v44 + 1320);
              *(void *)(v43 + 1312) = v999;
            }
            v1000 = (long long *)(v43 + 1328);
            v1001 = (long long *)(v44 + 1328);
            uint64_t v1002 = *(void *)(v44 + 1328);
            if (*(void *)(v43 + 1328) == 1)
            {
              if (v1002 == 1)
              {
                long long v1003 = *v1001;
                *(_OWORD *)(v43 + 1337) = *(_OWORD *)(v44 + 1337);
                long long *v1000 = v1003;
              }
              else
              {
                *(void *)(v43 + 1328) = v1002;
                *(unsigned char *)(v43 + 1336) = *(unsigned char *)(v44 + 1336);
                uint64_t v1005 = *(void *)(v44 + 1344);
                *(unsigned char *)(v43 + 1352) = *(unsigned char *)(v44 + 1352);
                *(void *)(v43 + 1344) = v1005;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1002 == 1)
            {
              sub_10009F534(v43 + 1328);
              long long v1004 = *(_OWORD *)(v44 + 1337);
              long long *v1000 = *v1001;
              *(_OWORD *)(v43 + 1337) = v1004;
            }
            else
            {
              *(void *)(v43 + 1328) = v1002;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1336) = *(unsigned char *)(v44 + 1336);
              uint64_t v1006 = *(void *)(v44 + 1344);
              *(unsigned char *)(v43 + 1352) = *(unsigned char *)(v44 + 1352);
              *(void *)(v43 + 1344) = v1006;
            }
            v1007 = (long long *)(v43 + 1360);
            v1008 = (long long *)(v44 + 1360);
            uint64_t v1009 = *(void *)(v44 + 1360);
            if (*(void *)(v43 + 1360) == 1)
            {
              if (v1009 == 1)
              {
                long long v1010 = *v1008;
                *(_OWORD *)(v43 + 1369) = *(_OWORD *)(v44 + 1369);
                long long *v1007 = v1010;
              }
              else
              {
                *(void *)(v43 + 1360) = v1009;
                *(unsigned char *)(v43 + 1368) = *(unsigned char *)(v44 + 1368);
                uint64_t v1012 = *(void *)(v44 + 1376);
                *(unsigned char *)(v43 + 1384) = *(unsigned char *)(v44 + 1384);
                *(void *)(v43 + 1376) = v1012;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1009 == 1)
            {
              sub_10009F534(v43 + 1360);
              long long v1011 = *(_OWORD *)(v44 + 1369);
              long long *v1007 = *v1008;
              *(_OWORD *)(v43 + 1369) = v1011;
            }
            else
            {
              *(void *)(v43 + 1360) = v1009;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1368) = *(unsigned char *)(v44 + 1368);
              uint64_t v1013 = *(void *)(v44 + 1376);
              *(unsigned char *)(v43 + 1384) = *(unsigned char *)(v44 + 1384);
              *(void *)(v43 + 1376) = v1013;
            }
            v1014 = (long long *)(v43 + 1392);
            v1015 = (long long *)(v44 + 1392);
            uint64_t v1016 = *(void *)(v44 + 1392);
            if (*(void *)(v43 + 1392) == 1)
            {
              if (v1016 == 1)
              {
                long long v1017 = *v1015;
                *(_OWORD *)(v43 + 1401) = *(_OWORD *)(v44 + 1401);
                long long *v1014 = v1017;
              }
              else
              {
                *(void *)(v43 + 1392) = v1016;
                *(unsigned char *)(v43 + 1400) = *(unsigned char *)(v44 + 1400);
                uint64_t v1019 = *(void *)(v44 + 1408);
                *(unsigned char *)(v43 + 1416) = *(unsigned char *)(v44 + 1416);
                *(void *)(v43 + 1408) = v1019;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1016 == 1)
            {
              sub_10009F534(v43 + 1392);
              long long v1018 = *(_OWORD *)(v44 + 1401);
              long long *v1014 = *v1015;
              *(_OWORD *)(v43 + 1401) = v1018;
            }
            else
            {
              *(void *)(v43 + 1392) = v1016;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1400) = *(unsigned char *)(v44 + 1400);
              uint64_t v1020 = *(void *)(v44 + 1408);
              *(unsigned char *)(v43 + 1416) = *(unsigned char *)(v44 + 1416);
              *(void *)(v43 + 1408) = v1020;
            }
            v1021 = (long long *)(v43 + 1424);
            v1022 = (long long *)(v44 + 1424);
            uint64_t v1023 = *(void *)(v44 + 1424);
            if (*(void *)(v43 + 1424) == 1)
            {
              if (v1023 == 1)
              {
                long long v1024 = *v1022;
                *(_OWORD *)(v43 + 1433) = *(_OWORD *)(v44 + 1433);
                long long *v1021 = v1024;
              }
              else
              {
                *(void *)(v43 + 1424) = v1023;
                *(unsigned char *)(v43 + 1432) = *(unsigned char *)(v44 + 1432);
                uint64_t v1026 = *(void *)(v44 + 1440);
                *(unsigned char *)(v43 + 1448) = *(unsigned char *)(v44 + 1448);
                *(void *)(v43 + 1440) = v1026;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1023 == 1)
            {
              sub_10009F534(v43 + 1424);
              long long v1025 = *(_OWORD *)(v44 + 1433);
              long long *v1021 = *v1022;
              *(_OWORD *)(v43 + 1433) = v1025;
            }
            else
            {
              *(void *)(v43 + 1424) = v1023;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1432) = *(unsigned char *)(v44 + 1432);
              uint64_t v1027 = *(void *)(v44 + 1440);
              *(unsigned char *)(v43 + 1448) = *(unsigned char *)(v44 + 1448);
              *(void *)(v43 + 1440) = v1027;
            }
            v1028 = (long long *)(v43 + 1456);
            v1029 = (long long *)(v44 + 1456);
            uint64_t v1030 = *(void *)(v44 + 1456);
            if (*(void *)(v43 + 1456) == 1)
            {
              if (v1030 == 1)
              {
                long long v1031 = *v1029;
                *(_OWORD *)(v43 + 1465) = *(_OWORD *)(v44 + 1465);
                long long *v1028 = v1031;
              }
              else
              {
                *(void *)(v43 + 1456) = v1030;
                *(unsigned char *)(v43 + 1464) = *(unsigned char *)(v44 + 1464);
                uint64_t v1033 = *(void *)(v44 + 1472);
                *(unsigned char *)(v43 + 1480) = *(unsigned char *)(v44 + 1480);
                *(void *)(v43 + 1472) = v1033;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1030 == 1)
            {
              sub_10009F534(v43 + 1456);
              long long v1032 = *(_OWORD *)(v44 + 1465);
              long long *v1028 = *v1029;
              *(_OWORD *)(v43 + 1465) = v1032;
            }
            else
            {
              *(void *)(v43 + 1456) = v1030;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1464) = *(unsigned char *)(v44 + 1464);
              uint64_t v1034 = *(void *)(v44 + 1472);
              *(unsigned char *)(v43 + 1480) = *(unsigned char *)(v44 + 1480);
              *(void *)(v43 + 1472) = v1034;
            }
            v1035 = (long long *)(v43 + 1488);
            v1036 = (long long *)(v44 + 1488);
            uint64_t v1037 = *(void *)(v44 + 1488);
            if (*(void *)(v43 + 1488) == 1)
            {
              if (v1037 == 1)
              {
                long long v1038 = *v1036;
                *(_OWORD *)(v43 + 1497) = *(_OWORD *)(v44 + 1497);
                long long *v1035 = v1038;
              }
              else
              {
                *(void *)(v43 + 1488) = v1037;
                *(unsigned char *)(v43 + 1496) = *(unsigned char *)(v44 + 1496);
                uint64_t v1040 = *(void *)(v44 + 1504);
                *(unsigned char *)(v43 + 1512) = *(unsigned char *)(v44 + 1512);
                *(void *)(v43 + 1504) = v1040;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1037 == 1)
            {
              sub_10009F534(v43 + 1488);
              long long v1039 = *(_OWORD *)(v44 + 1497);
              long long *v1035 = *v1036;
              *(_OWORD *)(v43 + 1497) = v1039;
            }
            else
            {
              *(void *)(v43 + 1488) = v1037;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1496) = *(unsigned char *)(v44 + 1496);
              uint64_t v1041 = *(void *)(v44 + 1504);
              *(unsigned char *)(v43 + 1512) = *(unsigned char *)(v44 + 1512);
              *(void *)(v43 + 1504) = v1041;
            }
            v1042 = (long long *)(v43 + 1520);
            v1043 = (long long *)(v44 + 1520);
            uint64_t v1044 = *(void *)(v44 + 1520);
            if (*(void *)(v43 + 1520) == 1)
            {
              if (v1044 == 1)
              {
                long long v1045 = *v1043;
                *(_OWORD *)(v43 + 1529) = *(_OWORD *)(v44 + 1529);
                long long *v1042 = v1045;
              }
              else
              {
                *(void *)(v43 + 1520) = v1044;
                *(unsigned char *)(v43 + 1528) = *(unsigned char *)(v44 + 1528);
                uint64_t v1047 = *(void *)(v44 + 1536);
                *(unsigned char *)(v43 + 1544) = *(unsigned char *)(v44 + 1544);
                *(void *)(v43 + 1536) = v1047;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1044 == 1)
            {
              sub_10009F534(v43 + 1520);
              long long v1046 = *(_OWORD *)(v44 + 1529);
              long long *v1042 = *v1043;
              *(_OWORD *)(v43 + 1529) = v1046;
            }
            else
            {
              *(void *)(v43 + 1520) = v1044;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1528) = *(unsigned char *)(v44 + 1528);
              uint64_t v1048 = *(void *)(v44 + 1536);
              *(unsigned char *)(v43 + 1544) = *(unsigned char *)(v44 + 1544);
              *(void *)(v43 + 1536) = v1048;
            }
            v1049 = (long long *)(v43 + 1552);
            v1050 = (long long *)(v44 + 1552);
            uint64_t v1051 = *(void *)(v44 + 1552);
            if (*(void *)(v43 + 1552) == 1)
            {
              if (v1051 == 1)
              {
                long long v1052 = *v1050;
                *(_OWORD *)(v43 + 1561) = *(_OWORD *)(v44 + 1561);
                long long *v1049 = v1052;
              }
              else
              {
                *(void *)(v43 + 1552) = v1051;
                *(unsigned char *)(v43 + 1560) = *(unsigned char *)(v44 + 1560);
                uint64_t v1054 = *(void *)(v44 + 1568);
                *(unsigned char *)(v43 + 1576) = *(unsigned char *)(v44 + 1576);
                *(void *)(v43 + 1568) = v1054;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1051 == 1)
            {
              sub_10009F534(v43 + 1552);
              long long v1053 = *(_OWORD *)(v44 + 1561);
              long long *v1049 = *v1050;
              *(_OWORD *)(v43 + 1561) = v1053;
            }
            else
            {
              *(void *)(v43 + 1552) = v1051;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1560) = *(unsigned char *)(v44 + 1560);
              uint64_t v1055 = *(void *)(v44 + 1568);
              *(unsigned char *)(v43 + 1576) = *(unsigned char *)(v44 + 1576);
              *(void *)(v43 + 1568) = v1055;
            }
            v1056 = (long long *)(v43 + 1584);
            v1057 = (long long *)(v44 + 1584);
            uint64_t v1058 = *(void *)(v44 + 1584);
            if (*(void *)(v43 + 1584) == 1)
            {
              if (v1058 == 1)
              {
                long long v1059 = *v1057;
                *(_OWORD *)(v43 + 1593) = *(_OWORD *)(v44 + 1593);
                long long *v1056 = v1059;
              }
              else
              {
                *(void *)(v43 + 1584) = v1058;
                *(unsigned char *)(v43 + 1592) = *(unsigned char *)(v44 + 1592);
                uint64_t v1061 = *(void *)(v44 + 1600);
                *(unsigned char *)(v43 + 1608) = *(unsigned char *)(v44 + 1608);
                *(void *)(v43 + 1600) = v1061;
                swift_bridgeObjectRetain();
              }
            }
            else if (v1058 == 1)
            {
              sub_10009F534(v43 + 1584);
              long long v1060 = *(_OWORD *)(v44 + 1593);
              long long *v1056 = *v1057;
              *(_OWORD *)(v43 + 1593) = v1060;
            }
            else
            {
              *(void *)(v43 + 1584) = v1058;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(unsigned char *)(v43 + 1592) = *(unsigned char *)(v44 + 1592);
              uint64_t v1062 = *(void *)(v44 + 1600);
              *(unsigned char *)(v43 + 1608) = *(unsigned char *)(v44 + 1608);
              *(void *)(v43 + 1600) = v1062;
            }
            long long v1063 = *(_OWORD *)(v44 + 1616);
            *(unsigned char *)(v43 + 1632) = *(unsigned char *)(v44 + 1632);
            *(_OWORD *)(v43 + 1616) = v1063;
            long long v1064 = *(_OWORD *)(v44 + 1640);
            *(unsigned char *)(v43 + 1656) = *(unsigned char *)(v44 + 1656);
            *(_OWORD *)(v43 + 1640) = v1064;
            *(unsigned char *)(v43 + 1657) = *(unsigned char *)(v44 + 1657);
            *(unsigned char *)(v43 + 1658) = *(unsigned char *)(v44 + 1658);
            *(unsigned char *)(v43 + 1659) = *(unsigned char *)(v44 + 1659);
            *(unsigned char *)(v43 + 1660) = *(unsigned char *)(v44 + 1660);
            *(unsigned char *)(v43 + 1661) = *(unsigned char *)(v44 + 1661);
            *(unsigned char *)(v43 + 1662) = *(unsigned char *)(v44 + 1662);
            *(unsigned char *)(v43 + 1663) = *(unsigned char *)(v44 + 1663);
            *(void *)(v43 + 1664) = *(void *)(v44 + 1664);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v43 + 1672) = *(void *)(v44 + 1672);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_1033:
            v1065 = (long long *)(v43 + 1680);
            v1066 = (long long *)(v44 + 1680);
            uint64_t v1067 = *(void *)(v44 + 2496);
            if (*(void *)(v43 + 2496) == 1)
            {
              if (v1067 != 1)
              {
                if (*(void *)v1066 == 1)
                {
                  long long v1068 = *v1066;
                  *(_OWORD *)(v43 + 1689) = *(_OWORD *)(v44 + 1689);
                  long long *v1065 = v1068;
                }
                else
                {
                  *(void *)(v43 + 1680) = *(void *)v1066;
                  *(unsigned char *)(v43 + 1688) = *(unsigned char *)(v44 + 1688);
                  uint64_t v1071 = *(void *)(v44 + 1696);
                  *(unsigned char *)(v43 + 1704) = *(unsigned char *)(v44 + 1704);
                  *(void *)(v43 + 1696) = v1071;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1072 = *(void *)(v44 + 1712);
                if (v1072 == 1)
                {
                  long long v1073 = *(_OWORD *)(v44 + 1712);
                  *(_OWORD *)(v43 + 1721) = *(_OWORD *)(v44 + 1721);
                  *(_OWORD *)(v43 + 1712) = v1073;
                }
                else
                {
                  *(void *)(v43 + 1712) = v1072;
                  *(unsigned char *)(v43 + 1720) = *(unsigned char *)(v44 + 1720);
                  uint64_t v1075 = *(void *)(v44 + 1728);
                  *(unsigned char *)(v43 + 1736) = *(unsigned char *)(v44 + 1736);
                  *(void *)(v43 + 1728) = v1075;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1076 = *(void *)(v44 + 1744);
                if (v1076 == 1)
                {
                  long long v1077 = *(_OWORD *)(v44 + 1744);
                  *(_OWORD *)(v43 + 1753) = *(_OWORD *)(v44 + 1753);
                  *(_OWORD *)(v43 + 1744) = v1077;
                }
                else
                {
                  *(void *)(v43 + 1744) = v1076;
                  *(unsigned char *)(v43 + 1752) = *(unsigned char *)(v44 + 1752);
                  uint64_t v1078 = *(void *)(v44 + 1760);
                  *(unsigned char *)(v43 + 1768) = *(unsigned char *)(v44 + 1768);
                  *(void *)(v43 + 1760) = v1078;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1079 = *(void *)(v44 + 1776);
                if (v1079 == 1)
                {
                  long long v1080 = *(_OWORD *)(v44 + 1776);
                  *(_OWORD *)(v43 + 1785) = *(_OWORD *)(v44 + 1785);
                  *(_OWORD *)(v43 + 1776) = v1080;
                }
                else
                {
                  *(void *)(v43 + 1776) = v1079;
                  *(unsigned char *)(v43 + 1784) = *(unsigned char *)(v44 + 1784);
                  uint64_t v1081 = *(void *)(v44 + 1792);
                  *(unsigned char *)(v43 + 1800) = *(unsigned char *)(v44 + 1800);
                  *(void *)(v43 + 1792) = v1081;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1082 = *(void *)(v44 + 1808);
                if (v1082 == 1)
                {
                  long long v1083 = *(_OWORD *)(v44 + 1808);
                  *(_OWORD *)(v43 + 1817) = *(_OWORD *)(v44 + 1817);
                  *(_OWORD *)(v43 + 1808) = v1083;
                }
                else
                {
                  *(void *)(v43 + 1808) = v1082;
                  *(unsigned char *)(v43 + 1816) = *(unsigned char *)(v44 + 1816);
                  uint64_t v1084 = *(void *)(v44 + 1824);
                  *(unsigned char *)(v43 + 1832) = *(unsigned char *)(v44 + 1832);
                  *(void *)(v43 + 1824) = v1084;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1085 = *(void *)(v44 + 1840);
                if (v1085 == 1)
                {
                  long long v1086 = *(_OWORD *)(v44 + 1840);
                  *(_OWORD *)(v43 + 1849) = *(_OWORD *)(v44 + 1849);
                  *(_OWORD *)(v43 + 1840) = v1086;
                }
                else
                {
                  *(void *)(v43 + 1840) = v1085;
                  *(unsigned char *)(v43 + 1848) = *(unsigned char *)(v44 + 1848);
                  uint64_t v1087 = *(void *)(v44 + 1856);
                  *(unsigned char *)(v43 + 1864) = *(unsigned char *)(v44 + 1864);
                  *(void *)(v43 + 1856) = v1087;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1088 = *(void *)(v44 + 1872);
                if (v1088 == 1)
                {
                  long long v1089 = *(_OWORD *)(v44 + 1872);
                  *(_OWORD *)(v43 + 1881) = *(_OWORD *)(v44 + 1881);
                  *(_OWORD *)(v43 + 1872) = v1089;
                }
                else
                {
                  *(void *)(v43 + 1872) = v1088;
                  *(unsigned char *)(v43 + 1880) = *(unsigned char *)(v44 + 1880);
                  uint64_t v1090 = *(void *)(v44 + 1888);
                  *(unsigned char *)(v43 + 1896) = *(unsigned char *)(v44 + 1896);
                  *(void *)(v43 + 1888) = v1090;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1091 = *(void *)(v44 + 1904);
                if (v1091 == 1)
                {
                  long long v1092 = *(_OWORD *)(v44 + 1904);
                  *(_OWORD *)(v43 + 1913) = *(_OWORD *)(v44 + 1913);
                  *(_OWORD *)(v43 + 1904) = v1092;
                }
                else
                {
                  *(void *)(v43 + 1904) = v1091;
                  *(unsigned char *)(v43 + 1912) = *(unsigned char *)(v44 + 1912);
                  uint64_t v1093 = *(void *)(v44 + 1920);
                  *(unsigned char *)(v43 + 1928) = *(unsigned char *)(v44 + 1928);
                  *(void *)(v43 + 1920) = v1093;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1094 = *(void *)(v44 + 1936);
                if (v1094 == 1)
                {
                  long long v1095 = *(_OWORD *)(v44 + 1936);
                  *(_OWORD *)(v43 + 1945) = *(_OWORD *)(v44 + 1945);
                  *(_OWORD *)(v43 + 1936) = v1095;
                }
                else
                {
                  *(void *)(v43 + 1936) = v1094;
                  *(unsigned char *)(v43 + 1944) = *(unsigned char *)(v44 + 1944);
                  uint64_t v1096 = *(void *)(v44 + 1952);
                  *(unsigned char *)(v43 + 1960) = *(unsigned char *)(v44 + 1960);
                  *(void *)(v43 + 1952) = v1096;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1097 = *(void *)(v44 + 1968);
                if (v1097 == 1)
                {
                  long long v1098 = *(_OWORD *)(v44 + 1968);
                  *(_OWORD *)(v43 + 1977) = *(_OWORD *)(v44 + 1977);
                  *(_OWORD *)(v43 + 1968) = v1098;
                }
                else
                {
                  *(void *)(v43 + 1968) = v1097;
                  *(unsigned char *)(v43 + 1976) = *(unsigned char *)(v44 + 1976);
                  uint64_t v1099 = *(void *)(v44 + 1984);
                  *(unsigned char *)(v43 + 1992) = *(unsigned char *)(v44 + 1992);
                  *(void *)(v43 + 1984) = v1099;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1100 = *(void *)(v44 + 2000);
                if (v1100 == 1)
                {
                  long long v1101 = *(_OWORD *)(v44 + 2000);
                  *(_OWORD *)(v43 + 2009) = *(_OWORD *)(v44 + 2009);
                  *(_OWORD *)(v43 + 2000) = v1101;
                }
                else
                {
                  *(void *)(v43 + 2000) = v1100;
                  *(unsigned char *)(v43 + 2008) = *(unsigned char *)(v44 + 2008);
                  uint64_t v1102 = *(void *)(v44 + 2016);
                  *(unsigned char *)(v43 + 2024) = *(unsigned char *)(v44 + 2024);
                  *(void *)(v43 + 2016) = v1102;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1103 = *(void *)(v44 + 2032);
                if (v1103 == 1)
                {
                  long long v1104 = *(_OWORD *)(v44 + 2032);
                  *(_OWORD *)(v43 + 2041) = *(_OWORD *)(v44 + 2041);
                  *(_OWORD *)(v43 + 2032) = v1104;
                }
                else
                {
                  *(void *)(v43 + 2032) = v1103;
                  *(unsigned char *)(v43 + 2040) = *(unsigned char *)(v44 + 2040);
                  uint64_t v1105 = *(void *)(v44 + 2048);
                  *(unsigned char *)(v43 + 2056) = *(unsigned char *)(v44 + 2056);
                  *(void *)(v43 + 2048) = v1105;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1106 = *(void *)(v44 + 2064);
                if (v1106 == 1)
                {
                  long long v1107 = *(_OWORD *)(v44 + 2064);
                  *(_OWORD *)(v43 + 2073) = *(_OWORD *)(v44 + 2073);
                  *(_OWORD *)(v43 + 2064) = v1107;
                }
                else
                {
                  *(void *)(v43 + 2064) = v1106;
                  *(unsigned char *)(v43 + 2072) = *(unsigned char *)(v44 + 2072);
                  uint64_t v1108 = *(void *)(v44 + 2080);
                  *(unsigned char *)(v43 + 2088) = *(unsigned char *)(v44 + 2088);
                  *(void *)(v43 + 2080) = v1108;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1109 = *(void *)(v44 + 2096);
                if (v1109 == 1)
                {
                  long long v1110 = *(_OWORD *)(v44 + 2096);
                  *(_OWORD *)(v43 + 2105) = *(_OWORD *)(v44 + 2105);
                  *(_OWORD *)(v43 + 2096) = v1110;
                }
                else
                {
                  *(void *)(v43 + 2096) = v1109;
                  *(unsigned char *)(v43 + 2104) = *(unsigned char *)(v44 + 2104);
                  uint64_t v1111 = *(void *)(v44 + 2112);
                  *(unsigned char *)(v43 + 2120) = *(unsigned char *)(v44 + 2120);
                  *(void *)(v43 + 2112) = v1111;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1112 = *(void *)(v44 + 2128);
                if (v1112 == 1)
                {
                  long long v1113 = *(_OWORD *)(v44 + 2128);
                  *(_OWORD *)(v43 + 2137) = *(_OWORD *)(v44 + 2137);
                  *(_OWORD *)(v43 + 2128) = v1113;
                }
                else
                {
                  *(void *)(v43 + 2128) = v1112;
                  *(unsigned char *)(v43 + 2136) = *(unsigned char *)(v44 + 2136);
                  uint64_t v1114 = *(void *)(v44 + 2144);
                  *(unsigned char *)(v43 + 2152) = *(unsigned char *)(v44 + 2152);
                  *(void *)(v43 + 2144) = v1114;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1115 = *(void *)(v44 + 2160);
                if (v1115 == 1)
                {
                  long long v1116 = *(_OWORD *)(v44 + 2160);
                  *(_OWORD *)(v43 + 2169) = *(_OWORD *)(v44 + 2169);
                  *(_OWORD *)(v43 + 2160) = v1116;
                }
                else
                {
                  *(void *)(v43 + 2160) = v1115;
                  *(unsigned char *)(v43 + 2168) = *(unsigned char *)(v44 + 2168);
                  uint64_t v1117 = *(void *)(v44 + 2176);
                  *(unsigned char *)(v43 + 2184) = *(unsigned char *)(v44 + 2184);
                  *(void *)(v43 + 2176) = v1117;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1118 = *(void *)(v44 + 2192);
                if (v1118 == 1)
                {
                  long long v1119 = *(_OWORD *)(v44 + 2192);
                  *(_OWORD *)(v43 + 2201) = *(_OWORD *)(v44 + 2201);
                  *(_OWORD *)(v43 + 2192) = v1119;
                }
                else
                {
                  *(void *)(v43 + 2192) = v1118;
                  *(unsigned char *)(v43 + 2200) = *(unsigned char *)(v44 + 2200);
                  uint64_t v1120 = *(void *)(v44 + 2208);
                  *(unsigned char *)(v43 + 2216) = *(unsigned char *)(v44 + 2216);
                  *(void *)(v43 + 2208) = v1120;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1121 = *(void *)(v44 + 2224);
                if (v1121 == 1)
                {
                  long long v1122 = *(_OWORD *)(v44 + 2224);
                  *(_OWORD *)(v43 + 2233) = *(_OWORD *)(v44 + 2233);
                  *(_OWORD *)(v43 + 2224) = v1122;
                }
                else
                {
                  *(void *)(v43 + 2224) = v1121;
                  *(unsigned char *)(v43 + 2232) = *(unsigned char *)(v44 + 2232);
                  uint64_t v1123 = *(void *)(v44 + 2240);
                  *(unsigned char *)(v43 + 2248) = *(unsigned char *)(v44 + 2248);
                  *(void *)(v43 + 2240) = v1123;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1124 = *(void *)(v44 + 2256);
                if (v1124 == 1)
                {
                  long long v1125 = *(_OWORD *)(v44 + 2256);
                  *(_OWORD *)(v43 + 2265) = *(_OWORD *)(v44 + 2265);
                  *(_OWORD *)(v43 + 2256) = v1125;
                }
                else
                {
                  *(void *)(v43 + 2256) = v1124;
                  *(unsigned char *)(v43 + 2264) = *(unsigned char *)(v44 + 2264);
                  uint64_t v1126 = *(void *)(v44 + 2272);
                  *(unsigned char *)(v43 + 2280) = *(unsigned char *)(v44 + 2280);
                  *(void *)(v43 + 2272) = v1126;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1127 = *(void *)(v44 + 2288);
                if (v1127 == 1)
                {
                  long long v1128 = *(_OWORD *)(v44 + 2288);
                  *(_OWORD *)(v43 + 2297) = *(_OWORD *)(v44 + 2297);
                  *(_OWORD *)(v43 + 2288) = v1128;
                }
                else
                {
                  *(void *)(v43 + 2288) = v1127;
                  *(unsigned char *)(v43 + 2296) = *(unsigned char *)(v44 + 2296);
                  uint64_t v1129 = *(void *)(v44 + 2304);
                  *(unsigned char *)(v43 + 2312) = *(unsigned char *)(v44 + 2312);
                  *(void *)(v43 + 2304) = v1129;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1130 = *(void *)(v44 + 2320);
                if (v1130 == 1)
                {
                  long long v1131 = *(_OWORD *)(v44 + 2320);
                  *(_OWORD *)(v43 + 2329) = *(_OWORD *)(v44 + 2329);
                  *(_OWORD *)(v43 + 2320) = v1131;
                }
                else
                {
                  *(void *)(v43 + 2320) = v1130;
                  *(unsigned char *)(v43 + 2328) = *(unsigned char *)(v44 + 2328);
                  uint64_t v1132 = *(void *)(v44 + 2336);
                  *(unsigned char *)(v43 + 2344) = *(unsigned char *)(v44 + 2344);
                  *(void *)(v43 + 2336) = v1132;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1133 = *(void *)(v44 + 2352);
                if (v1133 == 1)
                {
                  long long v1134 = *(_OWORD *)(v44 + 2352);
                  *(_OWORD *)(v43 + 2361) = *(_OWORD *)(v44 + 2361);
                  *(_OWORD *)(v43 + 2352) = v1134;
                }
                else
                {
                  *(void *)(v43 + 2352) = v1133;
                  *(unsigned char *)(v43 + 2360) = *(unsigned char *)(v44 + 2360);
                  uint64_t v1135 = *(void *)(v44 + 2368);
                  *(unsigned char *)(v43 + 2376) = *(unsigned char *)(v44 + 2376);
                  *(void *)(v43 + 2368) = v1135;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1136 = *(void *)(v44 + 2384);
                if (v1136 == 1)
                {
                  long long v1137 = *(_OWORD *)(v44 + 2384);
                  *(_OWORD *)(v43 + 2393) = *(_OWORD *)(v44 + 2393);
                  *(_OWORD *)(v43 + 2384) = v1137;
                }
                else
                {
                  *(void *)(v43 + 2384) = v1136;
                  *(unsigned char *)(v43 + 2392) = *(unsigned char *)(v44 + 2392);
                  uint64_t v1138 = *(void *)(v44 + 2400);
                  *(unsigned char *)(v43 + 2408) = *(unsigned char *)(v44 + 2408);
                  *(void *)(v43 + 2400) = v1138;
                  swift_bridgeObjectRetain();
                }
                uint64_t v1139 = *(void *)(v44 + 2416);
                if (v1139 == 1)
                {
                  long long v1140 = *(_OWORD *)(v44 + 2416);
                  *(_OWORD *)(v43 + 2425) = *(_OWORD *)(v44 + 2425);
                  *(_OWORD *)(v43 + 2416) = v1140;
                }
                else
                {
                  *(void *)(v43 + 2416) = v1139;
                  *(unsigned char *)(v43 + 2424) = *(unsigned char *)(v44 + 2424);
                  uint64_t v1141 = *(void *)(v44 + 2432);
                  *(unsigned char *)(v43 + 2440) = *(unsigned char *)(v44 + 2440);
                  *(void *)(v43 + 2432) = v1141;
                  swift_bridgeObjectRetain();
                }
                long long v1142 = *(_OWORD *)(v44 + 2448);
                *(unsigned char *)(v43 + 2464) = *(unsigned char *)(v44 + 2464);
                *(_OWORD *)(v43 + 2448) = v1142;
                long long v1143 = *(_OWORD *)(v44 + 2472);
                *(unsigned char *)(v43 + 2488) = *(unsigned char *)(v44 + 2488);
                *(_OWORD *)(v43 + 2472) = v1143;
                *(unsigned char *)(v43 + 2489) = *(unsigned char *)(v44 + 2489);
                *(unsigned char *)(v43 + 2490) = *(unsigned char *)(v44 + 2490);
                *(unsigned char *)(v43 + 2491) = *(unsigned char *)(v44 + 2491);
                *(unsigned char *)(v43 + 2492) = *(unsigned char *)(v44 + 2492);
                *(unsigned char *)(v43 + 2493) = *(unsigned char *)(v44 + 2493);
                *(unsigned char *)(v43 + 2494) = *(unsigned char *)(v44 + 2494);
                *(unsigned char *)(v43 + 2495) = *(unsigned char *)(v44 + 2495);
                *(void *)(v43 + 2496) = *(void *)(v44 + 2496);
                *(void *)(v43 + 2504) = *(void *)(v44 + 2504);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_1280;
              }
            }
            else
            {
              if (v1067 != 1)
              {
                uint64_t v1069 = *(void *)v1066;
                if (*(void *)v1065 == 1)
                {
                  if (v1069 == 1)
                  {
                    long long v1070 = *v1066;
                    *(_OWORD *)(v43 + 1689) = *(_OWORD *)(v44 + 1689);
                    long long *v1065 = v1070;
                  }
                  else
                  {
                    *(void *)(v43 + 1680) = v1069;
                    *(unsigned char *)(v43 + 1688) = *(unsigned char *)(v44 + 1688);
                    uint64_t v1144 = *(void *)(v44 + 1696);
                    *(unsigned char *)(v43 + 1704) = *(unsigned char *)(v44 + 1704);
                    *(void *)(v43 + 1696) = v1144;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1069 == 1)
                {
                  sub_10009F534(v43 + 1680);
                  long long v1074 = *(_OWORD *)(v44 + 1689);
                  long long *v1065 = *v1066;
                  *(_OWORD *)(v43 + 1689) = v1074;
                }
                else
                {
                  *(void *)(v43 + 1680) = v1069;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1688) = *(unsigned char *)(v44 + 1688);
                  uint64_t v1145 = *(void *)(v44 + 1696);
                  *(unsigned char *)(v43 + 1704) = *(unsigned char *)(v44 + 1704);
                  *(void *)(v43 + 1696) = v1145;
                }
                v1146 = (long long *)(v43 + 1712);
                v1147 = (long long *)(v44 + 1712);
                uint64_t v1148 = *(void *)(v44 + 1712);
                if (*(void *)(v43 + 1712) == 1)
                {
                  if (v1148 == 1)
                  {
                    long long v1149 = *v1147;
                    *(_OWORD *)(v43 + 1721) = *(_OWORD *)(v44 + 1721);
                    long long *v1146 = v1149;
                  }
                  else
                  {
                    *(void *)(v43 + 1712) = v1148;
                    *(unsigned char *)(v43 + 1720) = *(unsigned char *)(v44 + 1720);
                    uint64_t v1151 = *(void *)(v44 + 1728);
                    *(unsigned char *)(v43 + 1736) = *(unsigned char *)(v44 + 1736);
                    *(void *)(v43 + 1728) = v1151;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1148 == 1)
                {
                  sub_10009F534(v43 + 1712);
                  long long v1150 = *(_OWORD *)(v44 + 1721);
                  long long *v1146 = *v1147;
                  *(_OWORD *)(v43 + 1721) = v1150;
                }
                else
                {
                  *(void *)(v43 + 1712) = v1148;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1720) = *(unsigned char *)(v44 + 1720);
                  uint64_t v1152 = *(void *)(v44 + 1728);
                  *(unsigned char *)(v43 + 1736) = *(unsigned char *)(v44 + 1736);
                  *(void *)(v43 + 1728) = v1152;
                }
                v1153 = (long long *)(v43 + 1744);
                v1154 = (long long *)(v44 + 1744);
                uint64_t v1155 = *(void *)(v44 + 1744);
                if (*(void *)(v43 + 1744) == 1)
                {
                  if (v1155 == 1)
                  {
                    long long v1156 = *v1154;
                    *(_OWORD *)(v43 + 1753) = *(_OWORD *)(v44 + 1753);
                    long long *v1153 = v1156;
                  }
                  else
                  {
                    *(void *)(v43 + 1744) = v1155;
                    *(unsigned char *)(v43 + 1752) = *(unsigned char *)(v44 + 1752);
                    uint64_t v1158 = *(void *)(v44 + 1760);
                    *(unsigned char *)(v43 + 1768) = *(unsigned char *)(v44 + 1768);
                    *(void *)(v43 + 1760) = v1158;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1155 == 1)
                {
                  sub_10009F534(v43 + 1744);
                  long long v1157 = *(_OWORD *)(v44 + 1753);
                  long long *v1153 = *v1154;
                  *(_OWORD *)(v43 + 1753) = v1157;
                }
                else
                {
                  *(void *)(v43 + 1744) = v1155;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1752) = *(unsigned char *)(v44 + 1752);
                  uint64_t v1159 = *(void *)(v44 + 1760);
                  *(unsigned char *)(v43 + 1768) = *(unsigned char *)(v44 + 1768);
                  *(void *)(v43 + 1760) = v1159;
                }
                v1160 = (long long *)(v43 + 1776);
                v1161 = (long long *)(v44 + 1776);
                uint64_t v1162 = *(void *)(v44 + 1776);
                if (*(void *)(v43 + 1776) == 1)
                {
                  if (v1162 == 1)
                  {
                    long long v1163 = *v1161;
                    *(_OWORD *)(v43 + 1785) = *(_OWORD *)(v44 + 1785);
                    long long *v1160 = v1163;
                  }
                  else
                  {
                    *(void *)(v43 + 1776) = v1162;
                    *(unsigned char *)(v43 + 1784) = *(unsigned char *)(v44 + 1784);
                    uint64_t v1165 = *(void *)(v44 + 1792);
                    *(unsigned char *)(v43 + 1800) = *(unsigned char *)(v44 + 1800);
                    *(void *)(v43 + 1792) = v1165;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1162 == 1)
                {
                  sub_10009F534(v43 + 1776);
                  long long v1164 = *(_OWORD *)(v44 + 1785);
                  long long *v1160 = *v1161;
                  *(_OWORD *)(v43 + 1785) = v1164;
                }
                else
                {
                  *(void *)(v43 + 1776) = v1162;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1784) = *(unsigned char *)(v44 + 1784);
                  uint64_t v1166 = *(void *)(v44 + 1792);
                  *(unsigned char *)(v43 + 1800) = *(unsigned char *)(v44 + 1800);
                  *(void *)(v43 + 1792) = v1166;
                }
                v1167 = (long long *)(v43 + 1808);
                v1168 = (long long *)(v44 + 1808);
                uint64_t v1169 = *(void *)(v44 + 1808);
                if (*(void *)(v43 + 1808) == 1)
                {
                  if (v1169 == 1)
                  {
                    long long v1170 = *v1168;
                    *(_OWORD *)(v43 + 1817) = *(_OWORD *)(v44 + 1817);
                    long long *v1167 = v1170;
                  }
                  else
                  {
                    *(void *)(v43 + 1808) = v1169;
                    *(unsigned char *)(v43 + 1816) = *(unsigned char *)(v44 + 1816);
                    uint64_t v1172 = *(void *)(v44 + 1824);
                    *(unsigned char *)(v43 + 1832) = *(unsigned char *)(v44 + 1832);
                    *(void *)(v43 + 1824) = v1172;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1169 == 1)
                {
                  sub_10009F534(v43 + 1808);
                  long long v1171 = *(_OWORD *)(v44 + 1817);
                  long long *v1167 = *v1168;
                  *(_OWORD *)(v43 + 1817) = v1171;
                }
                else
                {
                  *(void *)(v43 + 1808) = v1169;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1816) = *(unsigned char *)(v44 + 1816);
                  uint64_t v1173 = *(void *)(v44 + 1824);
                  *(unsigned char *)(v43 + 1832) = *(unsigned char *)(v44 + 1832);
                  *(void *)(v43 + 1824) = v1173;
                }
                v1174 = (long long *)(v43 + 1840);
                v1175 = (long long *)(v44 + 1840);
                uint64_t v1176 = *(void *)(v44 + 1840);
                if (*(void *)(v43 + 1840) == 1)
                {
                  if (v1176 == 1)
                  {
                    long long v1177 = *v1175;
                    *(_OWORD *)(v43 + 1849) = *(_OWORD *)(v44 + 1849);
                    long long *v1174 = v1177;
                  }
                  else
                  {
                    *(void *)(v43 + 1840) = v1176;
                    *(unsigned char *)(v43 + 1848) = *(unsigned char *)(v44 + 1848);
                    uint64_t v1179 = *(void *)(v44 + 1856);
                    *(unsigned char *)(v43 + 1864) = *(unsigned char *)(v44 + 1864);
                    *(void *)(v43 + 1856) = v1179;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1176 == 1)
                {
                  sub_10009F534(v43 + 1840);
                  long long v1178 = *(_OWORD *)(v44 + 1849);
                  long long *v1174 = *v1175;
                  *(_OWORD *)(v43 + 1849) = v1178;
                }
                else
                {
                  *(void *)(v43 + 1840) = v1176;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1848) = *(unsigned char *)(v44 + 1848);
                  uint64_t v1180 = *(void *)(v44 + 1856);
                  *(unsigned char *)(v43 + 1864) = *(unsigned char *)(v44 + 1864);
                  *(void *)(v43 + 1856) = v1180;
                }
                v1181 = (long long *)(v43 + 1872);
                v1182 = (long long *)(v44 + 1872);
                uint64_t v1183 = *(void *)(v44 + 1872);
                if (*(void *)(v43 + 1872) == 1)
                {
                  if (v1183 == 1)
                  {
                    long long v1184 = *v1182;
                    *(_OWORD *)(v43 + 1881) = *(_OWORD *)(v44 + 1881);
                    long long *v1181 = v1184;
                  }
                  else
                  {
                    *(void *)(v43 + 1872) = v1183;
                    *(unsigned char *)(v43 + 1880) = *(unsigned char *)(v44 + 1880);
                    uint64_t v1186 = *(void *)(v44 + 1888);
                    *(unsigned char *)(v43 + 1896) = *(unsigned char *)(v44 + 1896);
                    *(void *)(v43 + 1888) = v1186;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1183 == 1)
                {
                  sub_10009F534(v43 + 1872);
                  long long v1185 = *(_OWORD *)(v44 + 1881);
                  long long *v1181 = *v1182;
                  *(_OWORD *)(v43 + 1881) = v1185;
                }
                else
                {
                  *(void *)(v43 + 1872) = v1183;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1880) = *(unsigned char *)(v44 + 1880);
                  uint64_t v1187 = *(void *)(v44 + 1888);
                  *(unsigned char *)(v43 + 1896) = *(unsigned char *)(v44 + 1896);
                  *(void *)(v43 + 1888) = v1187;
                }
                v1188 = (long long *)(v43 + 1904);
                v1189 = (long long *)(v44 + 1904);
                uint64_t v1190 = *(void *)(v44 + 1904);
                if (*(void *)(v43 + 1904) == 1)
                {
                  if (v1190 == 1)
                  {
                    long long v1191 = *v1189;
                    *(_OWORD *)(v43 + 1913) = *(_OWORD *)(v44 + 1913);
                    long long *v1188 = v1191;
                  }
                  else
                  {
                    *(void *)(v43 + 1904) = v1190;
                    *(unsigned char *)(v43 + 1912) = *(unsigned char *)(v44 + 1912);
                    uint64_t v1193 = *(void *)(v44 + 1920);
                    *(unsigned char *)(v43 + 1928) = *(unsigned char *)(v44 + 1928);
                    *(void *)(v43 + 1920) = v1193;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1190 == 1)
                {
                  sub_10009F534(v43 + 1904);
                  long long v1192 = *(_OWORD *)(v44 + 1913);
                  long long *v1188 = *v1189;
                  *(_OWORD *)(v43 + 1913) = v1192;
                }
                else
                {
                  *(void *)(v43 + 1904) = v1190;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1912) = *(unsigned char *)(v44 + 1912);
                  uint64_t v1194 = *(void *)(v44 + 1920);
                  *(unsigned char *)(v43 + 1928) = *(unsigned char *)(v44 + 1928);
                  *(void *)(v43 + 1920) = v1194;
                }
                v1195 = (long long *)(v43 + 1936);
                v1196 = (long long *)(v44 + 1936);
                uint64_t v1197 = *(void *)(v44 + 1936);
                if (*(void *)(v43 + 1936) == 1)
                {
                  if (v1197 == 1)
                  {
                    long long v1198 = *v1196;
                    *(_OWORD *)(v43 + 1945) = *(_OWORD *)(v44 + 1945);
                    long long *v1195 = v1198;
                  }
                  else
                  {
                    *(void *)(v43 + 1936) = v1197;
                    *(unsigned char *)(v43 + 1944) = *(unsigned char *)(v44 + 1944);
                    uint64_t v1200 = *(void *)(v44 + 1952);
                    *(unsigned char *)(v43 + 1960) = *(unsigned char *)(v44 + 1960);
                    *(void *)(v43 + 1952) = v1200;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1197 == 1)
                {
                  sub_10009F534(v43 + 1936);
                  long long v1199 = *(_OWORD *)(v44 + 1945);
                  long long *v1195 = *v1196;
                  *(_OWORD *)(v43 + 1945) = v1199;
                }
                else
                {
                  *(void *)(v43 + 1936) = v1197;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1944) = *(unsigned char *)(v44 + 1944);
                  uint64_t v1201 = *(void *)(v44 + 1952);
                  *(unsigned char *)(v43 + 1960) = *(unsigned char *)(v44 + 1960);
                  *(void *)(v43 + 1952) = v1201;
                }
                v1202 = (long long *)(v43 + 1968);
                v1203 = (long long *)(v44 + 1968);
                uint64_t v1204 = *(void *)(v44 + 1968);
                if (*(void *)(v43 + 1968) == 1)
                {
                  if (v1204 == 1)
                  {
                    long long v1205 = *v1203;
                    *(_OWORD *)(v43 + 1977) = *(_OWORD *)(v44 + 1977);
                    long long *v1202 = v1205;
                  }
                  else
                  {
                    *(void *)(v43 + 1968) = v1204;
                    *(unsigned char *)(v43 + 1976) = *(unsigned char *)(v44 + 1976);
                    uint64_t v1207 = *(void *)(v44 + 1984);
                    *(unsigned char *)(v43 + 1992) = *(unsigned char *)(v44 + 1992);
                    *(void *)(v43 + 1984) = v1207;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1204 == 1)
                {
                  sub_10009F534(v43 + 1968);
                  long long v1206 = *(_OWORD *)(v44 + 1977);
                  long long *v1202 = *v1203;
                  *(_OWORD *)(v43 + 1977) = v1206;
                }
                else
                {
                  *(void *)(v43 + 1968) = v1204;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 1976) = *(unsigned char *)(v44 + 1976);
                  uint64_t v1208 = *(void *)(v44 + 1984);
                  *(unsigned char *)(v43 + 1992) = *(unsigned char *)(v44 + 1992);
                  *(void *)(v43 + 1984) = v1208;
                }
                v1209 = (long long *)(v43 + 2000);
                v1210 = (long long *)(v44 + 2000);
                uint64_t v1211 = *(void *)(v44 + 2000);
                if (*(void *)(v43 + 2000) == 1)
                {
                  if (v1211 == 1)
                  {
                    long long v1212 = *v1210;
                    *(_OWORD *)(v43 + 2009) = *(_OWORD *)(v44 + 2009);
                    long long *v1209 = v1212;
                  }
                  else
                  {
                    *(void *)(v43 + 2000) = v1211;
                    *(unsigned char *)(v43 + 2008) = *(unsigned char *)(v44 + 2008);
                    uint64_t v1214 = *(void *)(v44 + 2016);
                    *(unsigned char *)(v43 + 2024) = *(unsigned char *)(v44 + 2024);
                    *(void *)(v43 + 2016) = v1214;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1211 == 1)
                {
                  sub_10009F534(v43 + 2000);
                  long long v1213 = *(_OWORD *)(v44 + 2009);
                  long long *v1209 = *v1210;
                  *(_OWORD *)(v43 + 2009) = v1213;
                }
                else
                {
                  *(void *)(v43 + 2000) = v1211;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2008) = *(unsigned char *)(v44 + 2008);
                  uint64_t v1215 = *(void *)(v44 + 2016);
                  *(unsigned char *)(v43 + 2024) = *(unsigned char *)(v44 + 2024);
                  *(void *)(v43 + 2016) = v1215;
                }
                v1216 = (long long *)(v43 + 2032);
                v1217 = (long long *)(v44 + 2032);
                uint64_t v1218 = *(void *)(v44 + 2032);
                if (*(void *)(v43 + 2032) == 1)
                {
                  if (v1218 == 1)
                  {
                    long long v1219 = *v1217;
                    *(_OWORD *)(v43 + 2041) = *(_OWORD *)(v44 + 2041);
                    long long *v1216 = v1219;
                  }
                  else
                  {
                    *(void *)(v43 + 2032) = v1218;
                    *(unsigned char *)(v43 + 2040) = *(unsigned char *)(v44 + 2040);
                    uint64_t v1221 = *(void *)(v44 + 2048);
                    *(unsigned char *)(v43 + 2056) = *(unsigned char *)(v44 + 2056);
                    *(void *)(v43 + 2048) = v1221;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1218 == 1)
                {
                  sub_10009F534(v43 + 2032);
                  long long v1220 = *(_OWORD *)(v44 + 2041);
                  long long *v1216 = *v1217;
                  *(_OWORD *)(v43 + 2041) = v1220;
                }
                else
                {
                  *(void *)(v43 + 2032) = v1218;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2040) = *(unsigned char *)(v44 + 2040);
                  uint64_t v1222 = *(void *)(v44 + 2048);
                  *(unsigned char *)(v43 + 2056) = *(unsigned char *)(v44 + 2056);
                  *(void *)(v43 + 2048) = v1222;
                }
                v1223 = (long long *)(v43 + 2064);
                v1224 = (long long *)(v44 + 2064);
                uint64_t v1225 = *(void *)(v44 + 2064);
                if (*(void *)(v43 + 2064) == 1)
                {
                  if (v1225 == 1)
                  {
                    long long v1226 = *v1224;
                    *(_OWORD *)(v43 + 2073) = *(_OWORD *)(v44 + 2073);
                    long long *v1223 = v1226;
                  }
                  else
                  {
                    *(void *)(v43 + 2064) = v1225;
                    *(unsigned char *)(v43 + 2072) = *(unsigned char *)(v44 + 2072);
                    uint64_t v1228 = *(void *)(v44 + 2080);
                    *(unsigned char *)(v43 + 2088) = *(unsigned char *)(v44 + 2088);
                    *(void *)(v43 + 2080) = v1228;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1225 == 1)
                {
                  sub_10009F534(v43 + 2064);
                  long long v1227 = *(_OWORD *)(v44 + 2073);
                  long long *v1223 = *v1224;
                  *(_OWORD *)(v43 + 2073) = v1227;
                }
                else
                {
                  *(void *)(v43 + 2064) = v1225;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2072) = *(unsigned char *)(v44 + 2072);
                  uint64_t v1229 = *(void *)(v44 + 2080);
                  *(unsigned char *)(v43 + 2088) = *(unsigned char *)(v44 + 2088);
                  *(void *)(v43 + 2080) = v1229;
                }
                v1230 = (long long *)(v43 + 2096);
                v1231 = (long long *)(v44 + 2096);
                uint64_t v1232 = *(void *)(v44 + 2096);
                if (*(void *)(v43 + 2096) == 1)
                {
                  if (v1232 == 1)
                  {
                    long long v1233 = *v1231;
                    *(_OWORD *)(v43 + 2105) = *(_OWORD *)(v44 + 2105);
                    long long *v1230 = v1233;
                  }
                  else
                  {
                    *(void *)(v43 + 2096) = v1232;
                    *(unsigned char *)(v43 + 2104) = *(unsigned char *)(v44 + 2104);
                    uint64_t v1235 = *(void *)(v44 + 2112);
                    *(unsigned char *)(v43 + 2120) = *(unsigned char *)(v44 + 2120);
                    *(void *)(v43 + 2112) = v1235;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1232 == 1)
                {
                  sub_10009F534(v43 + 2096);
                  long long v1234 = *(_OWORD *)(v44 + 2105);
                  long long *v1230 = *v1231;
                  *(_OWORD *)(v43 + 2105) = v1234;
                }
                else
                {
                  *(void *)(v43 + 2096) = v1232;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2104) = *(unsigned char *)(v44 + 2104);
                  uint64_t v1236 = *(void *)(v44 + 2112);
                  *(unsigned char *)(v43 + 2120) = *(unsigned char *)(v44 + 2120);
                  *(void *)(v43 + 2112) = v1236;
                }
                v1237 = (long long *)(v43 + 2128);
                v1238 = (long long *)(v44 + 2128);
                uint64_t v1239 = *(void *)(v44 + 2128);
                if (*(void *)(v43 + 2128) == 1)
                {
                  if (v1239 == 1)
                  {
                    long long v1240 = *v1238;
                    *(_OWORD *)(v43 + 2137) = *(_OWORD *)(v44 + 2137);
                    long long *v1237 = v1240;
                  }
                  else
                  {
                    *(void *)(v43 + 2128) = v1239;
                    *(unsigned char *)(v43 + 2136) = *(unsigned char *)(v44 + 2136);
                    uint64_t v1242 = *(void *)(v44 + 2144);
                    *(unsigned char *)(v43 + 2152) = *(unsigned char *)(v44 + 2152);
                    *(void *)(v43 + 2144) = v1242;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1239 == 1)
                {
                  sub_10009F534(v43 + 2128);
                  long long v1241 = *(_OWORD *)(v44 + 2137);
                  long long *v1237 = *v1238;
                  *(_OWORD *)(v43 + 2137) = v1241;
                }
                else
                {
                  *(void *)(v43 + 2128) = v1239;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2136) = *(unsigned char *)(v44 + 2136);
                  uint64_t v1243 = *(void *)(v44 + 2144);
                  *(unsigned char *)(v43 + 2152) = *(unsigned char *)(v44 + 2152);
                  *(void *)(v43 + 2144) = v1243;
                }
                v1244 = (long long *)(v43 + 2160);
                v1245 = (long long *)(v44 + 2160);
                uint64_t v1246 = *(void *)(v44 + 2160);
                if (*(void *)(v43 + 2160) == 1)
                {
                  if (v1246 == 1)
                  {
                    long long v1247 = *v1245;
                    *(_OWORD *)(v43 + 2169) = *(_OWORD *)(v44 + 2169);
                    long long *v1244 = v1247;
                  }
                  else
                  {
                    *(void *)(v43 + 2160) = v1246;
                    *(unsigned char *)(v43 + 2168) = *(unsigned char *)(v44 + 2168);
                    uint64_t v1249 = *(void *)(v44 + 2176);
                    *(unsigned char *)(v43 + 2184) = *(unsigned char *)(v44 + 2184);
                    *(void *)(v43 + 2176) = v1249;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1246 == 1)
                {
                  sub_10009F534(v43 + 2160);
                  long long v1248 = *(_OWORD *)(v44 + 2169);
                  long long *v1244 = *v1245;
                  *(_OWORD *)(v43 + 2169) = v1248;
                }
                else
                {
                  *(void *)(v43 + 2160) = v1246;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2168) = *(unsigned char *)(v44 + 2168);
                  uint64_t v1250 = *(void *)(v44 + 2176);
                  *(unsigned char *)(v43 + 2184) = *(unsigned char *)(v44 + 2184);
                  *(void *)(v43 + 2176) = v1250;
                }
                v1251 = (long long *)(v43 + 2192);
                v1252 = (long long *)(v44 + 2192);
                uint64_t v1253 = *(void *)(v44 + 2192);
                if (*(void *)(v43 + 2192) == 1)
                {
                  if (v1253 == 1)
                  {
                    long long v1254 = *v1252;
                    *(_OWORD *)(v43 + 2201) = *(_OWORD *)(v44 + 2201);
                    long long *v1251 = v1254;
                  }
                  else
                  {
                    *(void *)(v43 + 2192) = v1253;
                    *(unsigned char *)(v43 + 2200) = *(unsigned char *)(v44 + 2200);
                    uint64_t v1256 = *(void *)(v44 + 2208);
                    *(unsigned char *)(v43 + 2216) = *(unsigned char *)(v44 + 2216);
                    *(void *)(v43 + 2208) = v1256;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1253 == 1)
                {
                  sub_10009F534(v43 + 2192);
                  long long v1255 = *(_OWORD *)(v44 + 2201);
                  long long *v1251 = *v1252;
                  *(_OWORD *)(v43 + 2201) = v1255;
                }
                else
                {
                  *(void *)(v43 + 2192) = v1253;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2200) = *(unsigned char *)(v44 + 2200);
                  uint64_t v1257 = *(void *)(v44 + 2208);
                  *(unsigned char *)(v43 + 2216) = *(unsigned char *)(v44 + 2216);
                  *(void *)(v43 + 2208) = v1257;
                }
                v1258 = (long long *)(v43 + 2224);
                v1259 = (long long *)(v44 + 2224);
                uint64_t v1260 = *(void *)(v44 + 2224);
                if (*(void *)(v43 + 2224) == 1)
                {
                  if (v1260 == 1)
                  {
                    long long v1261 = *v1259;
                    *(_OWORD *)(v43 + 2233) = *(_OWORD *)(v44 + 2233);
                    long long *v1258 = v1261;
                  }
                  else
                  {
                    *(void *)(v43 + 2224) = v1260;
                    *(unsigned char *)(v43 + 2232) = *(unsigned char *)(v44 + 2232);
                    uint64_t v1263 = *(void *)(v44 + 2240);
                    *(unsigned char *)(v43 + 2248) = *(unsigned char *)(v44 + 2248);
                    *(void *)(v43 + 2240) = v1263;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1260 == 1)
                {
                  sub_10009F534(v43 + 2224);
                  long long v1262 = *(_OWORD *)(v44 + 2233);
                  long long *v1258 = *v1259;
                  *(_OWORD *)(v43 + 2233) = v1262;
                }
                else
                {
                  *(void *)(v43 + 2224) = v1260;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2232) = *(unsigned char *)(v44 + 2232);
                  uint64_t v1264 = *(void *)(v44 + 2240);
                  *(unsigned char *)(v43 + 2248) = *(unsigned char *)(v44 + 2248);
                  *(void *)(v43 + 2240) = v1264;
                }
                v1265 = (long long *)(v43 + 2256);
                v1266 = (long long *)(v44 + 2256);
                uint64_t v1267 = *(void *)(v44 + 2256);
                if (*(void *)(v43 + 2256) == 1)
                {
                  if (v1267 == 1)
                  {
                    long long v1268 = *v1266;
                    *(_OWORD *)(v43 + 2265) = *(_OWORD *)(v44 + 2265);
                    long long *v1265 = v1268;
                  }
                  else
                  {
                    *(void *)(v43 + 2256) = v1267;
                    *(unsigned char *)(v43 + 2264) = *(unsigned char *)(v44 + 2264);
                    uint64_t v1270 = *(void *)(v44 + 2272);
                    *(unsigned char *)(v43 + 2280) = *(unsigned char *)(v44 + 2280);
                    *(void *)(v43 + 2272) = v1270;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1267 == 1)
                {
                  sub_10009F534(v43 + 2256);
                  long long v1269 = *(_OWORD *)(v44 + 2265);
                  long long *v1265 = *v1266;
                  *(_OWORD *)(v43 + 2265) = v1269;
                }
                else
                {
                  *(void *)(v43 + 2256) = v1267;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2264) = *(unsigned char *)(v44 + 2264);
                  uint64_t v1271 = *(void *)(v44 + 2272);
                  *(unsigned char *)(v43 + 2280) = *(unsigned char *)(v44 + 2280);
                  *(void *)(v43 + 2272) = v1271;
                }
                v1272 = (long long *)(v43 + 2288);
                v1273 = (long long *)(v44 + 2288);
                uint64_t v1274 = *(void *)(v44 + 2288);
                if (*(void *)(v43 + 2288) == 1)
                {
                  if (v1274 == 1)
                  {
                    long long v1275 = *v1273;
                    *(_OWORD *)(v43 + 2297) = *(_OWORD *)(v44 + 2297);
                    long long *v1272 = v1275;
                  }
                  else
                  {
                    *(void *)(v43 + 2288) = v1274;
                    *(unsigned char *)(v43 + 2296) = *(unsigned char *)(v44 + 2296);
                    uint64_t v1277 = *(void *)(v44 + 2304);
                    *(unsigned char *)(v43 + 2312) = *(unsigned char *)(v44 + 2312);
                    *(void *)(v43 + 2304) = v1277;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1274 == 1)
                {
                  sub_10009F534(v43 + 2288);
                  long long v1276 = *(_OWORD *)(v44 + 2297);
                  long long *v1272 = *v1273;
                  *(_OWORD *)(v43 + 2297) = v1276;
                }
                else
                {
                  *(void *)(v43 + 2288) = v1274;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2296) = *(unsigned char *)(v44 + 2296);
                  uint64_t v1278 = *(void *)(v44 + 2304);
                  *(unsigned char *)(v43 + 2312) = *(unsigned char *)(v44 + 2312);
                  *(void *)(v43 + 2304) = v1278;
                }
                v1279 = (long long *)(v43 + 2320);
                v1280 = (long long *)(v44 + 2320);
                uint64_t v1281 = *(void *)(v44 + 2320);
                if (*(void *)(v43 + 2320) == 1)
                {
                  if (v1281 == 1)
                  {
                    long long v1282 = *v1280;
                    *(_OWORD *)(v43 + 2329) = *(_OWORD *)(v44 + 2329);
                    long long *v1279 = v1282;
                  }
                  else
                  {
                    *(void *)(v43 + 2320) = v1281;
                    *(unsigned char *)(v43 + 2328) = *(unsigned char *)(v44 + 2328);
                    uint64_t v1284 = *(void *)(v44 + 2336);
                    *(unsigned char *)(v43 + 2344) = *(unsigned char *)(v44 + 2344);
                    *(void *)(v43 + 2336) = v1284;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1281 == 1)
                {
                  sub_10009F534(v43 + 2320);
                  long long v1283 = *(_OWORD *)(v44 + 2329);
                  long long *v1279 = *v1280;
                  *(_OWORD *)(v43 + 2329) = v1283;
                }
                else
                {
                  *(void *)(v43 + 2320) = v1281;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2328) = *(unsigned char *)(v44 + 2328);
                  uint64_t v1285 = *(void *)(v44 + 2336);
                  *(unsigned char *)(v43 + 2344) = *(unsigned char *)(v44 + 2344);
                  *(void *)(v43 + 2336) = v1285;
                }
                v1286 = (long long *)(v43 + 2352);
                v1287 = (long long *)(v44 + 2352);
                uint64_t v1288 = *(void *)(v44 + 2352);
                if (*(void *)(v43 + 2352) == 1)
                {
                  if (v1288 == 1)
                  {
                    long long v1289 = *v1287;
                    *(_OWORD *)(v43 + 2361) = *(_OWORD *)(v44 + 2361);
                    long long *v1286 = v1289;
                  }
                  else
                  {
                    *(void *)(v43 + 2352) = v1288;
                    *(unsigned char *)(v43 + 2360) = *(unsigned char *)(v44 + 2360);
                    uint64_t v1291 = *(void *)(v44 + 2368);
                    *(unsigned char *)(v43 + 2376) = *(unsigned char *)(v44 + 2376);
                    *(void *)(v43 + 2368) = v1291;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1288 == 1)
                {
                  sub_10009F534(v43 + 2352);
                  long long v1290 = *(_OWORD *)(v44 + 2361);
                  long long *v1286 = *v1287;
                  *(_OWORD *)(v43 + 2361) = v1290;
                }
                else
                {
                  *(void *)(v43 + 2352) = v1288;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2360) = *(unsigned char *)(v44 + 2360);
                  uint64_t v1292 = *(void *)(v44 + 2368);
                  *(unsigned char *)(v43 + 2376) = *(unsigned char *)(v44 + 2376);
                  *(void *)(v43 + 2368) = v1292;
                }
                v1293 = (long long *)(v43 + 2384);
                v1294 = (long long *)(v44 + 2384);
                uint64_t v1295 = *(void *)(v44 + 2384);
                if (*(void *)(v43 + 2384) == 1)
                {
                  if (v1295 == 1)
                  {
                    long long v1296 = *v1294;
                    *(_OWORD *)(v43 + 2393) = *(_OWORD *)(v44 + 2393);
                    long long *v1293 = v1296;
                  }
                  else
                  {
                    *(void *)(v43 + 2384) = v1295;
                    *(unsigned char *)(v43 + 2392) = *(unsigned char *)(v44 + 2392);
                    uint64_t v1298 = *(void *)(v44 + 2400);
                    *(unsigned char *)(v43 + 2408) = *(unsigned char *)(v44 + 2408);
                    *(void *)(v43 + 2400) = v1298;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1295 == 1)
                {
                  sub_10009F534(v43 + 2384);
                  long long v1297 = *(_OWORD *)(v44 + 2393);
                  long long *v1293 = *v1294;
                  *(_OWORD *)(v43 + 2393) = v1297;
                }
                else
                {
                  *(void *)(v43 + 2384) = v1295;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2392) = *(unsigned char *)(v44 + 2392);
                  uint64_t v1299 = *(void *)(v44 + 2400);
                  *(unsigned char *)(v43 + 2408) = *(unsigned char *)(v44 + 2408);
                  *(void *)(v43 + 2400) = v1299;
                }
                v1300 = (long long *)(v43 + 2416);
                v1301 = (long long *)(v44 + 2416);
                uint64_t v1302 = *(void *)(v44 + 2416);
                if (*(void *)(v43 + 2416) == 1)
                {
                  if (v1302 == 1)
                  {
                    long long v1303 = *v1301;
                    *(_OWORD *)(v43 + 2425) = *(_OWORD *)(v44 + 2425);
                    long long *v1300 = v1303;
                  }
                  else
                  {
                    *(void *)(v43 + 2416) = v1302;
                    *(unsigned char *)(v43 + 2424) = *(unsigned char *)(v44 + 2424);
                    uint64_t v1305 = *(void *)(v44 + 2432);
                    *(unsigned char *)(v43 + 2440) = *(unsigned char *)(v44 + 2440);
                    *(void *)(v43 + 2432) = v1305;
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v1302 == 1)
                {
                  sub_10009F534(v43 + 2416);
                  long long v1304 = *(_OWORD *)(v44 + 2425);
                  long long *v1300 = *v1301;
                  *(_OWORD *)(v43 + 2425) = v1304;
                }
                else
                {
                  *(void *)(v43 + 2416) = v1302;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(unsigned char *)(v43 + 2424) = *(unsigned char *)(v44 + 2424);
                  uint64_t v1306 = *(void *)(v44 + 2432);
                  *(unsigned char *)(v43 + 2440) = *(unsigned char *)(v44 + 2440);
                  *(void *)(v43 + 2432) = v1306;
                }
                long long v1307 = *(_OWORD *)(v44 + 2448);
                *(unsigned char *)(v43 + 2464) = *(unsigned char *)(v44 + 2464);
                *(_OWORD *)(v43 + 2448) = v1307;
                long long v1308 = *(_OWORD *)(v44 + 2472);
                *(unsigned char *)(v43 + 2488) = *(unsigned char *)(v44 + 2488);
                *(_OWORD *)(v43 + 2472) = v1308;
                *(unsigned char *)(v43 + 2489) = *(unsigned char *)(v44 + 2489);
                *(unsigned char *)(v43 + 2490) = *(unsigned char *)(v44 + 2490);
                *(unsigned char *)(v43 + 2491) = *(unsigned char *)(v44 + 2491);
                *(unsigned char *)(v43 + 2492) = *(unsigned char *)(v44 + 2492);
                *(unsigned char *)(v43 + 2493) = *(unsigned char *)(v44 + 2493);
                *(unsigned char *)(v43 + 2494) = *(unsigned char *)(v44 + 2494);
                *(unsigned char *)(v43 + 2495) = *(unsigned char *)(v44 + 2495);
                *(void *)(v43 + 2496) = *(void *)(v44 + 2496);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)(v43 + 2504) = *(void *)(v44 + 2504);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
LABEL_1280:
                v1309 = (long long *)(v43 + 2512);
                v1310 = (long long *)(v44 + 2512);
                uint64_t v1311 = *(void *)(v44 + 3328);
                if (*(void *)(v43 + 3328) == 1)
                {
                  if (v1311 != 1)
                  {
                    if (*(void *)v1310 == 1)
                    {
                      long long v1312 = *v1310;
                      *(_OWORD *)(v43 + 2521) = *(_OWORD *)(v44 + 2521);
                      long long *v1309 = v1312;
                    }
                    else
                    {
                      *(void *)(v43 + 2512) = *(void *)v1310;
                      *(unsigned char *)(v43 + 2520) = *(unsigned char *)(v44 + 2520);
                      uint64_t v1315 = *(void *)(v44 + 2528);
                      *(unsigned char *)(v43 + 2536) = *(unsigned char *)(v44 + 2536);
                      *(void *)(v43 + 2528) = v1315;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1316 = *(void *)(v44 + 2544);
                    if (v1316 == 1)
                    {
                      long long v1317 = *(_OWORD *)(v44 + 2544);
                      *(_OWORD *)(v43 + 2553) = *(_OWORD *)(v44 + 2553);
                      *(_OWORD *)(v43 + 2544) = v1317;
                    }
                    else
                    {
                      *(void *)(v43 + 2544) = v1316;
                      *(unsigned char *)(v43 + 2552) = *(unsigned char *)(v44 + 2552);
                      uint64_t v1319 = *(void *)(v44 + 2560);
                      *(unsigned char *)(v43 + 2568) = *(unsigned char *)(v44 + 2568);
                      *(void *)(v43 + 2560) = v1319;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1320 = *(void *)(v44 + 2576);
                    if (v1320 == 1)
                    {
                      long long v1321 = *(_OWORD *)(v44 + 2576);
                      *(_OWORD *)(v43 + 2585) = *(_OWORD *)(v44 + 2585);
                      *(_OWORD *)(v43 + 2576) = v1321;
                    }
                    else
                    {
                      *(void *)(v43 + 2576) = v1320;
                      *(unsigned char *)(v43 + 2584) = *(unsigned char *)(v44 + 2584);
                      uint64_t v1322 = *(void *)(v44 + 2592);
                      *(unsigned char *)(v43 + 2600) = *(unsigned char *)(v44 + 2600);
                      *(void *)(v43 + 2592) = v1322;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1323 = *(void *)(v44 + 2608);
                    if (v1323 == 1)
                    {
                      long long v1324 = *(_OWORD *)(v44 + 2608);
                      *(_OWORD *)(v43 + 2617) = *(_OWORD *)(v44 + 2617);
                      *(_OWORD *)(v43 + 2608) = v1324;
                    }
                    else
                    {
                      *(void *)(v43 + 2608) = v1323;
                      *(unsigned char *)(v43 + 2616) = *(unsigned char *)(v44 + 2616);
                      uint64_t v1325 = *(void *)(v44 + 2624);
                      *(unsigned char *)(v43 + 2632) = *(unsigned char *)(v44 + 2632);
                      *(void *)(v43 + 2624) = v1325;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1326 = *(void *)(v44 + 2640);
                    if (v1326 == 1)
                    {
                      long long v1327 = *(_OWORD *)(v44 + 2640);
                      *(_OWORD *)(v43 + 2649) = *(_OWORD *)(v44 + 2649);
                      *(_OWORD *)(v43 + 2640) = v1327;
                    }
                    else
                    {
                      *(void *)(v43 + 2640) = v1326;
                      *(unsigned char *)(v43 + 2648) = *(unsigned char *)(v44 + 2648);
                      uint64_t v1328 = *(void *)(v44 + 2656);
                      *(unsigned char *)(v43 + 2664) = *(unsigned char *)(v44 + 2664);
                      *(void *)(v43 + 2656) = v1328;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1329 = *(void *)(v44 + 2672);
                    if (v1329 == 1)
                    {
                      long long v1330 = *(_OWORD *)(v44 + 2672);
                      *(_OWORD *)(v43 + 2681) = *(_OWORD *)(v44 + 2681);
                      *(_OWORD *)(v43 + 2672) = v1330;
                    }
                    else
                    {
                      *(void *)(v43 + 2672) = v1329;
                      *(unsigned char *)(v43 + 2680) = *(unsigned char *)(v44 + 2680);
                      uint64_t v1331 = *(void *)(v44 + 2688);
                      *(unsigned char *)(v43 + 2696) = *(unsigned char *)(v44 + 2696);
                      *(void *)(v43 + 2688) = v1331;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1332 = *(void *)(v44 + 2704);
                    if (v1332 == 1)
                    {
                      long long v1333 = *(_OWORD *)(v44 + 2704);
                      *(_OWORD *)(v43 + 2713) = *(_OWORD *)(v44 + 2713);
                      *(_OWORD *)(v43 + 2704) = v1333;
                    }
                    else
                    {
                      *(void *)(v43 + 2704) = v1332;
                      *(unsigned char *)(v43 + 2712) = *(unsigned char *)(v44 + 2712);
                      uint64_t v1334 = *(void *)(v44 + 2720);
                      *(unsigned char *)(v43 + 2728) = *(unsigned char *)(v44 + 2728);
                      *(void *)(v43 + 2720) = v1334;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1335 = *(void *)(v44 + 2736);
                    if (v1335 == 1)
                    {
                      long long v1336 = *(_OWORD *)(v44 + 2736);
                      *(_OWORD *)(v43 + 2745) = *(_OWORD *)(v44 + 2745);
                      *(_OWORD *)(v43 + 2736) = v1336;
                    }
                    else
                    {
                      *(void *)(v43 + 2736) = v1335;
                      *(unsigned char *)(v43 + 2744) = *(unsigned char *)(v44 + 2744);
                      uint64_t v1337 = *(void *)(v44 + 2752);
                      *(unsigned char *)(v43 + 2760) = *(unsigned char *)(v44 + 2760);
                      *(void *)(v43 + 2752) = v1337;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1338 = *(void *)(v44 + 2768);
                    if (v1338 == 1)
                    {
                      long long v1339 = *(_OWORD *)(v44 + 2768);
                      *(_OWORD *)(v43 + 2777) = *(_OWORD *)(v44 + 2777);
                      *(_OWORD *)(v43 + 2768) = v1339;
                    }
                    else
                    {
                      *(void *)(v43 + 2768) = v1338;
                      *(unsigned char *)(v43 + 2776) = *(unsigned char *)(v44 + 2776);
                      uint64_t v1340 = *(void *)(v44 + 2784);
                      *(unsigned char *)(v43 + 2792) = *(unsigned char *)(v44 + 2792);
                      *(void *)(v43 + 2784) = v1340;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1341 = *(void *)(v44 + 2800);
                    if (v1341 == 1)
                    {
                      long long v1342 = *(_OWORD *)(v44 + 2800);
                      *(_OWORD *)(v43 + 2809) = *(_OWORD *)(v44 + 2809);
                      *(_OWORD *)(v43 + 2800) = v1342;
                    }
                    else
                    {
                      *(void *)(v43 + 2800) = v1341;
                      *(unsigned char *)(v43 + 2808) = *(unsigned char *)(v44 + 2808);
                      uint64_t v1343 = *(void *)(v44 + 2816);
                      *(unsigned char *)(v43 + 2824) = *(unsigned char *)(v44 + 2824);
                      *(void *)(v43 + 2816) = v1343;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1344 = *(void *)(v44 + 2832);
                    if (v1344 == 1)
                    {
                      long long v1345 = *(_OWORD *)(v44 + 2832);
                      *(_OWORD *)(v43 + 2841) = *(_OWORD *)(v44 + 2841);
                      *(_OWORD *)(v43 + 2832) = v1345;
                    }
                    else
                    {
                      *(void *)(v43 + 2832) = v1344;
                      *(unsigned char *)(v43 + 2840) = *(unsigned char *)(v44 + 2840);
                      uint64_t v1346 = *(void *)(v44 + 2848);
                      *(unsigned char *)(v43 + 2856) = *(unsigned char *)(v44 + 2856);
                      *(void *)(v43 + 2848) = v1346;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1347 = *(void *)(v44 + 2864);
                    if (v1347 == 1)
                    {
                      long long v1348 = *(_OWORD *)(v44 + 2864);
                      *(_OWORD *)(v43 + 2873) = *(_OWORD *)(v44 + 2873);
                      *(_OWORD *)(v43 + 2864) = v1348;
                    }
                    else
                    {
                      *(void *)(v43 + 2864) = v1347;
                      *(unsigned char *)(v43 + 2872) = *(unsigned char *)(v44 + 2872);
                      uint64_t v1349 = *(void *)(v44 + 2880);
                      *(unsigned char *)(v43 + 2888) = *(unsigned char *)(v44 + 2888);
                      *(void *)(v43 + 2880) = v1349;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1350 = *(void *)(v44 + 2896);
                    if (v1350 == 1)
                    {
                      long long v1351 = *(_OWORD *)(v44 + 2896);
                      *(_OWORD *)(v43 + 2905) = *(_OWORD *)(v44 + 2905);
                      *(_OWORD *)(v43 + 2896) = v1351;
                    }
                    else
                    {
                      *(void *)(v43 + 2896) = v1350;
                      *(unsigned char *)(v43 + 2904) = *(unsigned char *)(v44 + 2904);
                      uint64_t v1352 = *(void *)(v44 + 2912);
                      *(unsigned char *)(v43 + 2920) = *(unsigned char *)(v44 + 2920);
                      *(void *)(v43 + 2912) = v1352;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1353 = *(void *)(v44 + 2928);
                    if (v1353 == 1)
                    {
                      long long v1354 = *(_OWORD *)(v44 + 2928);
                      *(_OWORD *)(v43 + 2937) = *(_OWORD *)(v44 + 2937);
                      *(_OWORD *)(v43 + 2928) = v1354;
                    }
                    else
                    {
                      *(void *)(v43 + 2928) = v1353;
                      *(unsigned char *)(v43 + 2936) = *(unsigned char *)(v44 + 2936);
                      uint64_t v1355 = *(void *)(v44 + 2944);
                      *(unsigned char *)(v43 + 2952) = *(unsigned char *)(v44 + 2952);
                      *(void *)(v43 + 2944) = v1355;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1356 = *(void *)(v44 + 2960);
                    if (v1356 == 1)
                    {
                      long long v1357 = *(_OWORD *)(v44 + 2960);
                      *(_OWORD *)(v43 + 2969) = *(_OWORD *)(v44 + 2969);
                      *(_OWORD *)(v43 + 2960) = v1357;
                    }
                    else
                    {
                      *(void *)(v43 + 2960) = v1356;
                      *(unsigned char *)(v43 + 2968) = *(unsigned char *)(v44 + 2968);
                      uint64_t v1358 = *(void *)(v44 + 2976);
                      *(unsigned char *)(v43 + 2984) = *(unsigned char *)(v44 + 2984);
                      *(void *)(v43 + 2976) = v1358;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1359 = *(void *)(v44 + 2992);
                    if (v1359 == 1)
                    {
                      long long v1360 = *(_OWORD *)(v44 + 2992);
                      *(_OWORD *)(v43 + 3001) = *(_OWORD *)(v44 + 3001);
                      *(_OWORD *)(v43 + 2992) = v1360;
                    }
                    else
                    {
                      *(void *)(v43 + 2992) = v1359;
                      *(unsigned char *)(v43 + 3000) = *(unsigned char *)(v44 + 3000);
                      uint64_t v1361 = *(void *)(v44 + 3008);
                      *(unsigned char *)(v43 + 3016) = *(unsigned char *)(v44 + 3016);
                      *(void *)(v43 + 3008) = v1361;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1362 = *(void *)(v44 + 3024);
                    if (v1362 == 1)
                    {
                      long long v1363 = *(_OWORD *)(v44 + 3024);
                      *(_OWORD *)(v43 + 3033) = *(_OWORD *)(v44 + 3033);
                      *(_OWORD *)(v43 + 3024) = v1363;
                    }
                    else
                    {
                      *(void *)(v43 + 3024) = v1362;
                      *(unsigned char *)(v43 + 3032) = *(unsigned char *)(v44 + 3032);
                      uint64_t v1364 = *(void *)(v44 + 3040);
                      *(unsigned char *)(v43 + 3048) = *(unsigned char *)(v44 + 3048);
                      *(void *)(v43 + 3040) = v1364;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1365 = *(void *)(v44 + 3056);
                    if (v1365 == 1)
                    {
                      long long v1366 = *(_OWORD *)(v44 + 3056);
                      *(_OWORD *)(v43 + 3065) = *(_OWORD *)(v44 + 3065);
                      *(_OWORD *)(v43 + 3056) = v1366;
                    }
                    else
                    {
                      *(void *)(v43 + 3056) = v1365;
                      *(unsigned char *)(v43 + 3064) = *(unsigned char *)(v44 + 3064);
                      uint64_t v1367 = *(void *)(v44 + 3072);
                      *(unsigned char *)(v43 + 3080) = *(unsigned char *)(v44 + 3080);
                      *(void *)(v43 + 3072) = v1367;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1368 = *(void *)(v44 + 3088);
                    if (v1368 == 1)
                    {
                      long long v1369 = *(_OWORD *)(v44 + 3088);
                      *(_OWORD *)(v43 + 3097) = *(_OWORD *)(v44 + 3097);
                      *(_OWORD *)(v43 + 3088) = v1369;
                    }
                    else
                    {
                      *(void *)(v43 + 3088) = v1368;
                      *(unsigned char *)(v43 + 3096) = *(unsigned char *)(v44 + 3096);
                      uint64_t v1370 = *(void *)(v44 + 3104);
                      *(unsigned char *)(v43 + 3112) = *(unsigned char *)(v44 + 3112);
                      *(void *)(v43 + 3104) = v1370;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1371 = *(void *)(v44 + 3120);
                    if (v1371 == 1)
                    {
                      long long v1372 = *(_OWORD *)(v44 + 3120);
                      *(_OWORD *)(v43 + 3129) = *(_OWORD *)(v44 + 3129);
                      *(_OWORD *)(v43 + 3120) = v1372;
                    }
                    else
                    {
                      *(void *)(v43 + 3120) = v1371;
                      *(unsigned char *)(v43 + 3128) = *(unsigned char *)(v44 + 3128);
                      uint64_t v1373 = *(void *)(v44 + 3136);
                      *(unsigned char *)(v43 + 3144) = *(unsigned char *)(v44 + 3144);
                      *(void *)(v43 + 3136) = v1373;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1374 = *(void *)(v44 + 3152);
                    if (v1374 == 1)
                    {
                      long long v1375 = *(_OWORD *)(v44 + 3152);
                      *(_OWORD *)(v43 + 3161) = *(_OWORD *)(v44 + 3161);
                      *(_OWORD *)(v43 + 3152) = v1375;
                    }
                    else
                    {
                      *(void *)(v43 + 3152) = v1374;
                      *(unsigned char *)(v43 + 3160) = *(unsigned char *)(v44 + 3160);
                      uint64_t v1376 = *(void *)(v44 + 3168);
                      *(unsigned char *)(v43 + 3176) = *(unsigned char *)(v44 + 3176);
                      *(void *)(v43 + 3168) = v1376;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1377 = *(void *)(v44 + 3184);
                    if (v1377 == 1)
                    {
                      long long v1378 = *(_OWORD *)(v44 + 3184);
                      *(_OWORD *)(v43 + 3193) = *(_OWORD *)(v44 + 3193);
                      *(_OWORD *)(v43 + 3184) = v1378;
                    }
                    else
                    {
                      *(void *)(v43 + 3184) = v1377;
                      *(unsigned char *)(v43 + 3192) = *(unsigned char *)(v44 + 3192);
                      uint64_t v1379 = *(void *)(v44 + 3200);
                      *(unsigned char *)(v43 + 3208) = *(unsigned char *)(v44 + 3208);
                      *(void *)(v43 + 3200) = v1379;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1380 = *(void *)(v44 + 3216);
                    if (v1380 == 1)
                    {
                      long long v1381 = *(_OWORD *)(v44 + 3216);
                      *(_OWORD *)(v43 + 3225) = *(_OWORD *)(v44 + 3225);
                      *(_OWORD *)(v43 + 3216) = v1381;
                    }
                    else
                    {
                      *(void *)(v43 + 3216) = v1380;
                      *(unsigned char *)(v43 + 3224) = *(unsigned char *)(v44 + 3224);
                      uint64_t v1382 = *(void *)(v44 + 3232);
                      *(unsigned char *)(v43 + 3240) = *(unsigned char *)(v44 + 3240);
                      *(void *)(v43 + 3232) = v1382;
                      swift_bridgeObjectRetain();
                    }
                    uint64_t v1383 = *(void *)(v44 + 3248);
                    if (v1383 == 1)
                    {
                      long long v1384 = *(_OWORD *)(v44 + 3248);
                      *(_OWORD *)(v43 + 3257) = *(_OWORD *)(v44 + 3257);
                      *(_OWORD *)(v43 + 3248) = v1384;
                    }
                    else
                    {
                      *(void *)(v43 + 3248) = v1383;
                      *(unsigned char *)(v43 + 3256) = *(unsigned char *)(v44 + 3256);
                      uint64_t v1385 = *(void *)(v44 + 3264);
                      *(unsigned char *)(v43 + 3272) = *(unsigned char *)(v44 + 3272);
                      *(void *)(v43 + 3264) = v1385;
                      swift_bridgeObjectRetain();
                    }
                    long long v1386 = *(_OWORD *)(v44 + 3280);
                    *(unsigned char *)(v43 + 3296) = *(unsigned char *)(v44 + 3296);
                    *(_OWORD *)(v43 + 3280) = v1386;
                    long long v1387 = *(_OWORD *)(v44 + 3304);
                    *(unsigned char *)(v43 + 3320) = *(unsigned char *)(v44 + 3320);
                    *(_OWORD *)(v43 + 3304) = v1387;
                    *(unsigned char *)(v43 + 3321) = *(unsigned char *)(v44 + 3321);
                    *(unsigned char *)(v43 + 3322) = *(unsigned char *)(v44 + 3322);
                    *(unsigned char *)(v43 + 3323) = *(unsigned char *)(v44 + 3323);
                    *(unsigned char *)(v43 + 3324) = *(unsigned char *)(v44 + 3324);
                    *(unsigned char *)(v43 + 3325) = *(unsigned char *)(v44 + 3325);
                    *(unsigned char *)(v43 + 3326) = *(unsigned char *)(v44 + 3326);
                    *(unsigned char *)(v43 + 3327) = *(unsigned char *)(v44 + 3327);
                    *(void *)(v43 + 3328) = *(void *)(v44 + 3328);
                    *(void *)(v43 + 3336) = *(void *)(v44 + 3336);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    goto LABEL_1527;
                  }
                }
                else
                {
                  if (v1311 != 1)
                  {
                    uint64_t v1313 = *(void *)v1310;
                    if (*(void *)v1309 == 1)
                    {
                      if (v1313 == 1)
                      {
                        long long v1314 = *v1310;
                        *(_OWORD *)(v43 + 2521) = *(_OWORD *)(v44 + 2521);
                        long long *v1309 = v1314;
                      }
                      else
                      {
                        *(void *)(v43 + 2512) = v1313;
                        *(unsigned char *)(v43 + 2520) = *(unsigned char *)(v44 + 2520);
                        uint64_t v1388 = *(void *)(v44 + 2528);
                        *(unsigned char *)(v43 + 2536) = *(unsigned char *)(v44 + 2536);
                        *(void *)(v43 + 2528) = v1388;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1313 == 1)
                    {
                      sub_10009F534(v43 + 2512);
                      long long v1318 = *(_OWORD *)(v44 + 2521);
                      long long *v1309 = *v1310;
                      *(_OWORD *)(v43 + 2521) = v1318;
                    }
                    else
                    {
                      *(void *)(v43 + 2512) = v1313;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2520) = *(unsigned char *)(v44 + 2520);
                      uint64_t v1389 = *(void *)(v44 + 2528);
                      *(unsigned char *)(v43 + 2536) = *(unsigned char *)(v44 + 2536);
                      *(void *)(v43 + 2528) = v1389;
                    }
                    v1390 = (long long *)(v43 + 2544);
                    v1391 = (long long *)(v44 + 2544);
                    uint64_t v1392 = *(void *)(v44 + 2544);
                    if (*(void *)(v43 + 2544) == 1)
                    {
                      if (v1392 == 1)
                      {
                        long long v1393 = *v1391;
                        *(_OWORD *)(v43 + 2553) = *(_OWORD *)(v44 + 2553);
                        long long *v1390 = v1393;
                      }
                      else
                      {
                        *(void *)(v43 + 2544) = v1392;
                        *(unsigned char *)(v43 + 2552) = *(unsigned char *)(v44 + 2552);
                        uint64_t v1395 = *(void *)(v44 + 2560);
                        *(unsigned char *)(v43 + 2568) = *(unsigned char *)(v44 + 2568);
                        *(void *)(v43 + 2560) = v1395;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1392 == 1)
                    {
                      sub_10009F534(v43 + 2544);
                      long long v1394 = *(_OWORD *)(v44 + 2553);
                      long long *v1390 = *v1391;
                      *(_OWORD *)(v43 + 2553) = v1394;
                    }
                    else
                    {
                      *(void *)(v43 + 2544) = v1392;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2552) = *(unsigned char *)(v44 + 2552);
                      uint64_t v1396 = *(void *)(v44 + 2560);
                      *(unsigned char *)(v43 + 2568) = *(unsigned char *)(v44 + 2568);
                      *(void *)(v43 + 2560) = v1396;
                    }
                    v1397 = (long long *)(v43 + 2576);
                    v1398 = (long long *)(v44 + 2576);
                    uint64_t v1399 = *(void *)(v44 + 2576);
                    if (*(void *)(v43 + 2576) == 1)
                    {
                      if (v1399 == 1)
                      {
                        long long v1400 = *v1398;
                        *(_OWORD *)(v43 + 2585) = *(_OWORD *)(v44 + 2585);
                        long long *v1397 = v1400;
                      }
                      else
                      {
                        *(void *)(v43 + 2576) = v1399;
                        *(unsigned char *)(v43 + 2584) = *(unsigned char *)(v44 + 2584);
                        uint64_t v1402 = *(void *)(v44 + 2592);
                        *(unsigned char *)(v43 + 2600) = *(unsigned char *)(v44 + 2600);
                        *(void *)(v43 + 2592) = v1402;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1399 == 1)
                    {
                      sub_10009F534(v43 + 2576);
                      long long v1401 = *(_OWORD *)(v44 + 2585);
                      long long *v1397 = *v1398;
                      *(_OWORD *)(v43 + 2585) = v1401;
                    }
                    else
                    {
                      *(void *)(v43 + 2576) = v1399;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2584) = *(unsigned char *)(v44 + 2584);
                      uint64_t v1403 = *(void *)(v44 + 2592);
                      *(unsigned char *)(v43 + 2600) = *(unsigned char *)(v44 + 2600);
                      *(void *)(v43 + 2592) = v1403;
                    }
                    v1404 = (long long *)(v43 + 2608);
                    v1405 = (long long *)(v44 + 2608);
                    uint64_t v1406 = *(void *)(v44 + 2608);
                    if (*(void *)(v43 + 2608) == 1)
                    {
                      if (v1406 == 1)
                      {
                        long long v1407 = *v1405;
                        *(_OWORD *)(v43 + 2617) = *(_OWORD *)(v44 + 2617);
                        long long *v1404 = v1407;
                      }
                      else
                      {
                        *(void *)(v43 + 2608) = v1406;
                        *(unsigned char *)(v43 + 2616) = *(unsigned char *)(v44 + 2616);
                        uint64_t v1409 = *(void *)(v44 + 2624);
                        *(unsigned char *)(v43 + 2632) = *(unsigned char *)(v44 + 2632);
                        *(void *)(v43 + 2624) = v1409;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1406 == 1)
                    {
                      sub_10009F534(v43 + 2608);
                      long long v1408 = *(_OWORD *)(v44 + 2617);
                      long long *v1404 = *v1405;
                      *(_OWORD *)(v43 + 2617) = v1408;
                    }
                    else
                    {
                      *(void *)(v43 + 2608) = v1406;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2616) = *(unsigned char *)(v44 + 2616);
                      uint64_t v1410 = *(void *)(v44 + 2624);
                      *(unsigned char *)(v43 + 2632) = *(unsigned char *)(v44 + 2632);
                      *(void *)(v43 + 2624) = v1410;
                    }
                    v1411 = (long long *)(v43 + 2640);
                    v1412 = (long long *)(v44 + 2640);
                    uint64_t v1413 = *(void *)(v44 + 2640);
                    if (*(void *)(v43 + 2640) == 1)
                    {
                      if (v1413 == 1)
                      {
                        long long v1414 = *v1412;
                        *(_OWORD *)(v43 + 2649) = *(_OWORD *)(v44 + 2649);
                        long long *v1411 = v1414;
                      }
                      else
                      {
                        *(void *)(v43 + 2640) = v1413;
                        *(unsigned char *)(v43 + 2648) = *(unsigned char *)(v44 + 2648);
                        uint64_t v1416 = *(void *)(v44 + 2656);
                        *(unsigned char *)(v43 + 2664) = *(unsigned char *)(v44 + 2664);
                        *(void *)(v43 + 2656) = v1416;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1413 == 1)
                    {
                      sub_10009F534(v43 + 2640);
                      long long v1415 = *(_OWORD *)(v44 + 2649);
                      long long *v1411 = *v1412;
                      *(_OWORD *)(v43 + 2649) = v1415;
                    }
                    else
                    {
                      *(void *)(v43 + 2640) = v1413;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2648) = *(unsigned char *)(v44 + 2648);
                      uint64_t v1417 = *(void *)(v44 + 2656);
                      *(unsigned char *)(v43 + 2664) = *(unsigned char *)(v44 + 2664);
                      *(void *)(v43 + 2656) = v1417;
                    }
                    v1418 = (long long *)(v43 + 2672);
                    v1419 = (long long *)(v44 + 2672);
                    uint64_t v1420 = *(void *)(v44 + 2672);
                    if (*(void *)(v43 + 2672) == 1)
                    {
                      if (v1420 == 1)
                      {
                        long long v1421 = *v1419;
                        *(_OWORD *)(v43 + 2681) = *(_OWORD *)(v44 + 2681);
                        long long *v1418 = v1421;
                      }
                      else
                      {
                        *(void *)(v43 + 2672) = v1420;
                        *(unsigned char *)(v43 + 2680) = *(unsigned char *)(v44 + 2680);
                        uint64_t v1423 = *(void *)(v44 + 2688);
                        *(unsigned char *)(v43 + 2696) = *(unsigned char *)(v44 + 2696);
                        *(void *)(v43 + 2688) = v1423;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1420 == 1)
                    {
                      sub_10009F534(v43 + 2672);
                      long long v1422 = *(_OWORD *)(v44 + 2681);
                      long long *v1418 = *v1419;
                      *(_OWORD *)(v43 + 2681) = v1422;
                    }
                    else
                    {
                      *(void *)(v43 + 2672) = v1420;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2680) = *(unsigned char *)(v44 + 2680);
                      uint64_t v1424 = *(void *)(v44 + 2688);
                      *(unsigned char *)(v43 + 2696) = *(unsigned char *)(v44 + 2696);
                      *(void *)(v43 + 2688) = v1424;
                    }
                    v1425 = (long long *)(v43 + 2704);
                    v1426 = (long long *)(v44 + 2704);
                    uint64_t v1427 = *(void *)(v44 + 2704);
                    if (*(void *)(v43 + 2704) == 1)
                    {
                      if (v1427 == 1)
                      {
                        long long v1428 = *v1426;
                        *(_OWORD *)(v43 + 2713) = *(_OWORD *)(v44 + 2713);
                        long long *v1425 = v1428;
                      }
                      else
                      {
                        *(void *)(v43 + 2704) = v1427;
                        *(unsigned char *)(v43 + 2712) = *(unsigned char *)(v44 + 2712);
                        uint64_t v1430 = *(void *)(v44 + 2720);
                        *(unsigned char *)(v43 + 2728) = *(unsigned char *)(v44 + 2728);
                        *(void *)(v43 + 2720) = v1430;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1427 == 1)
                    {
                      sub_10009F534(v43 + 2704);
                      long long v1429 = *(_OWORD *)(v44 + 2713);
                      long long *v1425 = *v1426;
                      *(_OWORD *)(v43 + 2713) = v1429;
                    }
                    else
                    {
                      *(void *)(v43 + 2704) = v1427;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2712) = *(unsigned char *)(v44 + 2712);
                      uint64_t v1431 = *(void *)(v44 + 2720);
                      *(unsigned char *)(v43 + 2728) = *(unsigned char *)(v44 + 2728);
                      *(void *)(v43 + 2720) = v1431;
                    }
                    v1432 = (long long *)(v43 + 2736);
                    v1433 = (long long *)(v44 + 2736);
                    uint64_t v1434 = *(void *)(v44 + 2736);
                    if (*(void *)(v43 + 2736) == 1)
                    {
                      if (v1434 == 1)
                      {
                        long long v1435 = *v1433;
                        *(_OWORD *)(v43 + 2745) = *(_OWORD *)(v44 + 2745);
                        long long *v1432 = v1435;
                      }
                      else
                      {
                        *(void *)(v43 + 2736) = v1434;
                        *(unsigned char *)(v43 + 2744) = *(unsigned char *)(v44 + 2744);
                        uint64_t v1437 = *(void *)(v44 + 2752);
                        *(unsigned char *)(v43 + 2760) = *(unsigned char *)(v44 + 2760);
                        *(void *)(v43 + 2752) = v1437;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1434 == 1)
                    {
                      sub_10009F534(v43 + 2736);
                      long long v1436 = *(_OWORD *)(v44 + 2745);
                      long long *v1432 = *v1433;
                      *(_OWORD *)(v43 + 2745) = v1436;
                    }
                    else
                    {
                      *(void *)(v43 + 2736) = v1434;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2744) = *(unsigned char *)(v44 + 2744);
                      uint64_t v1438 = *(void *)(v44 + 2752);
                      *(unsigned char *)(v43 + 2760) = *(unsigned char *)(v44 + 2760);
                      *(void *)(v43 + 2752) = v1438;
                    }
                    v1439 = (long long *)(v43 + 2768);
                    v1440 = (long long *)(v44 + 2768);
                    uint64_t v1441 = *(void *)(v44 + 2768);
                    if (*(void *)(v43 + 2768) == 1)
                    {
                      if (v1441 == 1)
                      {
                        long long v1442 = *v1440;
                        *(_OWORD *)(v43 + 2777) = *(_OWORD *)(v44 + 2777);
                        long long *v1439 = v1442;
                      }
                      else
                      {
                        *(void *)(v43 + 2768) = v1441;
                        *(unsigned char *)(v43 + 2776) = *(unsigned char *)(v44 + 2776);
                        uint64_t v1444 = *(void *)(v44 + 2784);
                        *(unsigned char *)(v43 + 2792) = *(unsigned char *)(v44 + 2792);
                        *(void *)(v43 + 2784) = v1444;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1441 == 1)
                    {
                      sub_10009F534(v43 + 2768);
                      long long v1443 = *(_OWORD *)(v44 + 2777);
                      long long *v1439 = *v1440;
                      *(_OWORD *)(v43 + 2777) = v1443;
                    }
                    else
                    {
                      *(void *)(v43 + 2768) = v1441;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2776) = *(unsigned char *)(v44 + 2776);
                      uint64_t v1445 = *(void *)(v44 + 2784);
                      *(unsigned char *)(v43 + 2792) = *(unsigned char *)(v44 + 2792);
                      *(void *)(v43 + 2784) = v1445;
                    }
                    v1446 = (long long *)(v43 + 2800);
                    v1447 = (long long *)(v44 + 2800);
                    uint64_t v1448 = *(void *)(v44 + 2800);
                    if (*(void *)(v43 + 2800) == 1)
                    {
                      if (v1448 == 1)
                      {
                        long long v1449 = *v1447;
                        *(_OWORD *)(v43 + 2809) = *(_OWORD *)(v44 + 2809);
                        long long *v1446 = v1449;
                      }
                      else
                      {
                        *(void *)(v43 + 2800) = v1448;
                        *(unsigned char *)(v43 + 2808) = *(unsigned char *)(v44 + 2808);
                        uint64_t v1451 = *(void *)(v44 + 2816);
                        *(unsigned char *)(v43 + 2824) = *(unsigned char *)(v44 + 2824);
                        *(void *)(v43 + 2816) = v1451;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1448 == 1)
                    {
                      sub_10009F534(v43 + 2800);
                      long long v1450 = *(_OWORD *)(v44 + 2809);
                      long long *v1446 = *v1447;
                      *(_OWORD *)(v43 + 2809) = v1450;
                    }
                    else
                    {
                      *(void *)(v43 + 2800) = v1448;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2808) = *(unsigned char *)(v44 + 2808);
                      uint64_t v1452 = *(void *)(v44 + 2816);
                      *(unsigned char *)(v43 + 2824) = *(unsigned char *)(v44 + 2824);
                      *(void *)(v43 + 2816) = v1452;
                    }
                    v1453 = (long long *)(v43 + 2832);
                    v1454 = (long long *)(v44 + 2832);
                    uint64_t v1455 = *(void *)(v44 + 2832);
                    if (*(void *)(v43 + 2832) == 1)
                    {
                      if (v1455 == 1)
                      {
                        long long v1456 = *v1454;
                        *(_OWORD *)(v43 + 2841) = *(_OWORD *)(v44 + 2841);
                        long long *v1453 = v1456;
                      }
                      else
                      {
                        *(void *)(v43 + 2832) = v1455;
                        *(unsigned char *)(v43 + 2840) = *(unsigned char *)(v44 + 2840);
                        uint64_t v1458 = *(void *)(v44 + 2848);
                        *(unsigned char *)(v43 + 2856) = *(unsigned char *)(v44 + 2856);
                        *(void *)(v43 + 2848) = v1458;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1455 == 1)
                    {
                      sub_10009F534(v43 + 2832);
                      long long v1457 = *(_OWORD *)(v44 + 2841);
                      long long *v1453 = *v1454;
                      *(_OWORD *)(v43 + 2841) = v1457;
                    }
                    else
                    {
                      *(void *)(v43 + 2832) = v1455;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2840) = *(unsigned char *)(v44 + 2840);
                      uint64_t v1459 = *(void *)(v44 + 2848);
                      *(unsigned char *)(v43 + 2856) = *(unsigned char *)(v44 + 2856);
                      *(void *)(v43 + 2848) = v1459;
                    }
                    v1460 = (long long *)(v43 + 2864);
                    v1461 = (long long *)(v44 + 2864);
                    uint64_t v1462 = *(void *)(v44 + 2864);
                    if (*(void *)(v43 + 2864) == 1)
                    {
                      if (v1462 == 1)
                      {
                        long long v1463 = *v1461;
                        *(_OWORD *)(v43 + 2873) = *(_OWORD *)(v44 + 2873);
                        long long *v1460 = v1463;
                      }
                      else
                      {
                        *(void *)(v43 + 2864) = v1462;
                        *(unsigned char *)(v43 + 2872) = *(unsigned char *)(v44 + 2872);
                        uint64_t v1465 = *(void *)(v44 + 2880);
                        *(unsigned char *)(v43 + 2888) = *(unsigned char *)(v44 + 2888);
                        *(void *)(v43 + 2880) = v1465;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1462 == 1)
                    {
                      sub_10009F534(v43 + 2864);
                      long long v1464 = *(_OWORD *)(v44 + 2873);
                      long long *v1460 = *v1461;
                      *(_OWORD *)(v43 + 2873) = v1464;
                    }
                    else
                    {
                      *(void *)(v43 + 2864) = v1462;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2872) = *(unsigned char *)(v44 + 2872);
                      uint64_t v1466 = *(void *)(v44 + 2880);
                      *(unsigned char *)(v43 + 2888) = *(unsigned char *)(v44 + 2888);
                      *(void *)(v43 + 2880) = v1466;
                    }
                    v1467 = (long long *)(v43 + 2896);
                    v1468 = (long long *)(v44 + 2896);
                    uint64_t v1469 = *(void *)(v44 + 2896);
                    if (*(void *)(v43 + 2896) == 1)
                    {
                      if (v1469 == 1)
                      {
                        long long v1470 = *v1468;
                        *(_OWORD *)(v43 + 2905) = *(_OWORD *)(v44 + 2905);
                        long long *v1467 = v1470;
                      }
                      else
                      {
                        *(void *)(v43 + 2896) = v1469;
                        *(unsigned char *)(v43 + 2904) = *(unsigned char *)(v44 + 2904);
                        uint64_t v1472 = *(void *)(v44 + 2912);
                        *(unsigned char *)(v43 + 2920) = *(unsigned char *)(v44 + 2920);
                        *(void *)(v43 + 2912) = v1472;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1469 == 1)
                    {
                      sub_10009F534(v43 + 2896);
                      long long v1471 = *(_OWORD *)(v44 + 2905);
                      long long *v1467 = *v1468;
                      *(_OWORD *)(v43 + 2905) = v1471;
                    }
                    else
                    {
                      *(void *)(v43 + 2896) = v1469;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2904) = *(unsigned char *)(v44 + 2904);
                      uint64_t v1473 = *(void *)(v44 + 2912);
                      *(unsigned char *)(v43 + 2920) = *(unsigned char *)(v44 + 2920);
                      *(void *)(v43 + 2912) = v1473;
                    }
                    v1474 = (long long *)(v43 + 2928);
                    v1475 = (long long *)(v44 + 2928);
                    uint64_t v1476 = *(void *)(v44 + 2928);
                    if (*(void *)(v43 + 2928) == 1)
                    {
                      if (v1476 == 1)
                      {
                        long long v1477 = *v1475;
                        *(_OWORD *)(v43 + 2937) = *(_OWORD *)(v44 + 2937);
                        long long *v1474 = v1477;
                      }
                      else
                      {
                        *(void *)(v43 + 2928) = v1476;
                        *(unsigned char *)(v43 + 2936) = *(unsigned char *)(v44 + 2936);
                        uint64_t v1479 = *(void *)(v44 + 2944);
                        *(unsigned char *)(v43 + 2952) = *(unsigned char *)(v44 + 2952);
                        *(void *)(v43 + 2944) = v1479;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1476 == 1)
                    {
                      sub_10009F534(v43 + 2928);
                      long long v1478 = *(_OWORD *)(v44 + 2937);
                      long long *v1474 = *v1475;
                      *(_OWORD *)(v43 + 2937) = v1478;
                    }
                    else
                    {
                      *(void *)(v43 + 2928) = v1476;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2936) = *(unsigned char *)(v44 + 2936);
                      uint64_t v1480 = *(void *)(v44 + 2944);
                      *(unsigned char *)(v43 + 2952) = *(unsigned char *)(v44 + 2952);
                      *(void *)(v43 + 2944) = v1480;
                    }
                    v1481 = (long long *)(v43 + 2960);
                    v1482 = (long long *)(v44 + 2960);
                    uint64_t v1483 = *(void *)(v44 + 2960);
                    if (*(void *)(v43 + 2960) == 1)
                    {
                      if (v1483 == 1)
                      {
                        long long v1484 = *v1482;
                        *(_OWORD *)(v43 + 2969) = *(_OWORD *)(v44 + 2969);
                        long long *v1481 = v1484;
                      }
                      else
                      {
                        *(void *)(v43 + 2960) = v1483;
                        *(unsigned char *)(v43 + 2968) = *(unsigned char *)(v44 + 2968);
                        uint64_t v1486 = *(void *)(v44 + 2976);
                        *(unsigned char *)(v43 + 2984) = *(unsigned char *)(v44 + 2984);
                        *(void *)(v43 + 2976) = v1486;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1483 == 1)
                    {
                      sub_10009F534(v43 + 2960);
                      long long v1485 = *(_OWORD *)(v44 + 2969);
                      long long *v1481 = *v1482;
                      *(_OWORD *)(v43 + 2969) = v1485;
                    }
                    else
                    {
                      *(void *)(v43 + 2960) = v1483;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 2968) = *(unsigned char *)(v44 + 2968);
                      uint64_t v1487 = *(void *)(v44 + 2976);
                      *(unsigned char *)(v43 + 2984) = *(unsigned char *)(v44 + 2984);
                      *(void *)(v43 + 2976) = v1487;
                    }
                    v1488 = (long long *)(v43 + 2992);
                    v1489 = (long long *)(v44 + 2992);
                    uint64_t v1490 = *(void *)(v44 + 2992);
                    if (*(void *)(v43 + 2992) == 1)
                    {
                      if (v1490 == 1)
                      {
                        long long v1491 = *v1489;
                        *(_OWORD *)(v43 + 3001) = *(_OWORD *)(v44 + 3001);
                        long long *v1488 = v1491;
                      }
                      else
                      {
                        *(void *)(v43 + 2992) = v1490;
                        *(unsigned char *)(v43 + 3000) = *(unsigned char *)(v44 + 3000);
                        uint64_t v1493 = *(void *)(v44 + 3008);
                        *(unsigned char *)(v43 + 3016) = *(unsigned char *)(v44 + 3016);
                        *(void *)(v43 + 3008) = v1493;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1490 == 1)
                    {
                      sub_10009F534(v43 + 2992);
                      long long v1492 = *(_OWORD *)(v44 + 3001);
                      long long *v1488 = *v1489;
                      *(_OWORD *)(v43 + 3001) = v1492;
                    }
                    else
                    {
                      *(void *)(v43 + 2992) = v1490;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3000) = *(unsigned char *)(v44 + 3000);
                      uint64_t v1494 = *(void *)(v44 + 3008);
                      *(unsigned char *)(v43 + 3016) = *(unsigned char *)(v44 + 3016);
                      *(void *)(v43 + 3008) = v1494;
                    }
                    v1495 = (long long *)(v43 + 3024);
                    v1496 = (long long *)(v44 + 3024);
                    uint64_t v1497 = *(void *)(v44 + 3024);
                    if (*(void *)(v43 + 3024) == 1)
                    {
                      if (v1497 == 1)
                      {
                        long long v1498 = *v1496;
                        *(_OWORD *)(v43 + 3033) = *(_OWORD *)(v44 + 3033);
                        long long *v1495 = v1498;
                      }
                      else
                      {
                        *(void *)(v43 + 3024) = v1497;
                        *(unsigned char *)(v43 + 3032) = *(unsigned char *)(v44 + 3032);
                        uint64_t v1500 = *(void *)(v44 + 3040);
                        *(unsigned char *)(v43 + 3048) = *(unsigned char *)(v44 + 3048);
                        *(void *)(v43 + 3040) = v1500;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1497 == 1)
                    {
                      sub_10009F534(v43 + 3024);
                      long long v1499 = *(_OWORD *)(v44 + 3033);
                      long long *v1495 = *v1496;
                      *(_OWORD *)(v43 + 3033) = v1499;
                    }
                    else
                    {
                      *(void *)(v43 + 3024) = v1497;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3032) = *(unsigned char *)(v44 + 3032);
                      uint64_t v1501 = *(void *)(v44 + 3040);
                      *(unsigned char *)(v43 + 3048) = *(unsigned char *)(v44 + 3048);
                      *(void *)(v43 + 3040) = v1501;
                    }
                    v1502 = (long long *)(v43 + 3056);
                    v1503 = (long long *)(v44 + 3056);
                    uint64_t v1504 = *(void *)(v44 + 3056);
                    if (*(void *)(v43 + 3056) == 1)
                    {
                      if (v1504 == 1)
                      {
                        long long v1505 = *v1503;
                        *(_OWORD *)(v43 + 3065) = *(_OWORD *)(v44 + 3065);
                        long long *v1502 = v1505;
                      }
                      else
                      {
                        *(void *)(v43 + 3056) = v1504;
                        *(unsigned char *)(v43 + 3064) = *(unsigned char *)(v44 + 3064);
                        uint64_t v1507 = *(void *)(v44 + 3072);
                        *(unsigned char *)(v43 + 3080) = *(unsigned char *)(v44 + 3080);
                        *(void *)(v43 + 3072) = v1507;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1504 == 1)
                    {
                      sub_10009F534(v43 + 3056);
                      long long v1506 = *(_OWORD *)(v44 + 3065);
                      long long *v1502 = *v1503;
                      *(_OWORD *)(v43 + 3065) = v1506;
                    }
                    else
                    {
                      *(void *)(v43 + 3056) = v1504;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3064) = *(unsigned char *)(v44 + 3064);
                      uint64_t v1508 = *(void *)(v44 + 3072);
                      *(unsigned char *)(v43 + 3080) = *(unsigned char *)(v44 + 3080);
                      *(void *)(v43 + 3072) = v1508;
                    }
                    v1509 = (long long *)(v43 + 3088);
                    v1510 = (long long *)(v44 + 3088);
                    uint64_t v1511 = *(void *)(v44 + 3088);
                    if (*(void *)(v43 + 3088) == 1)
                    {
                      if (v1511 == 1)
                      {
                        long long v1512 = *v1510;
                        *(_OWORD *)(v43 + 3097) = *(_OWORD *)(v44 + 3097);
                        long long *v1509 = v1512;
                      }
                      else
                      {
                        *(void *)(v43 + 3088) = v1511;
                        *(unsigned char *)(v43 + 3096) = *(unsigned char *)(v44 + 3096);
                        uint64_t v1514 = *(void *)(v44 + 3104);
                        *(unsigned char *)(v43 + 3112) = *(unsigned char *)(v44 + 3112);
                        *(void *)(v43 + 3104) = v1514;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1511 == 1)
                    {
                      sub_10009F534(v43 + 3088);
                      long long v1513 = *(_OWORD *)(v44 + 3097);
                      long long *v1509 = *v1510;
                      *(_OWORD *)(v43 + 3097) = v1513;
                    }
                    else
                    {
                      *(void *)(v43 + 3088) = v1511;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3096) = *(unsigned char *)(v44 + 3096);
                      uint64_t v1515 = *(void *)(v44 + 3104);
                      *(unsigned char *)(v43 + 3112) = *(unsigned char *)(v44 + 3112);
                      *(void *)(v43 + 3104) = v1515;
                    }
                    v1516 = (long long *)(v43 + 3120);
                    v1517 = (long long *)(v44 + 3120);
                    uint64_t v1518 = *(void *)(v44 + 3120);
                    if (*(void *)(v43 + 3120) == 1)
                    {
                      if (v1518 == 1)
                      {
                        long long v1519 = *v1517;
                        *(_OWORD *)(v43 + 3129) = *(_OWORD *)(v44 + 3129);
                        long long *v1516 = v1519;
                      }
                      else
                      {
                        *(void *)(v43 + 3120) = v1518;
                        *(unsigned char *)(v43 + 3128) = *(unsigned char *)(v44 + 3128);
                        uint64_t v1521 = *(void *)(v44 + 3136);
                        *(unsigned char *)(v43 + 3144) = *(unsigned char *)(v44 + 3144);
                        *(void *)(v43 + 3136) = v1521;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1518 == 1)
                    {
                      sub_10009F534(v43 + 3120);
                      long long v1520 = *(_OWORD *)(v44 + 3129);
                      long long *v1516 = *v1517;
                      *(_OWORD *)(v43 + 3129) = v1520;
                    }
                    else
                    {
                      *(void *)(v43 + 3120) = v1518;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3128) = *(unsigned char *)(v44 + 3128);
                      uint64_t v1522 = *(void *)(v44 + 3136);
                      *(unsigned char *)(v43 + 3144) = *(unsigned char *)(v44 + 3144);
                      *(void *)(v43 + 3136) = v1522;
                    }
                    v1523 = (long long *)(v43 + 3152);
                    v1524 = (long long *)(v44 + 3152);
                    uint64_t v1525 = *(void *)(v44 + 3152);
                    if (*(void *)(v43 + 3152) == 1)
                    {
                      if (v1525 == 1)
                      {
                        long long v1526 = *v1524;
                        *(_OWORD *)(v43 + 3161) = *(_OWORD *)(v44 + 3161);
                        long long *v1523 = v1526;
                      }
                      else
                      {
                        *(void *)(v43 + 3152) = v1525;
                        *(unsigned char *)(v43 + 3160) = *(unsigned char *)(v44 + 3160);
                        uint64_t v1528 = *(void *)(v44 + 3168);
                        *(unsigned char *)(v43 + 3176) = *(unsigned char *)(v44 + 3176);
                        *(void *)(v43 + 3168) = v1528;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1525 == 1)
                    {
                      sub_10009F534(v43 + 3152);
                      long long v1527 = *(_OWORD *)(v44 + 3161);
                      long long *v1523 = *v1524;
                      *(_OWORD *)(v43 + 3161) = v1527;
                    }
                    else
                    {
                      *(void *)(v43 + 3152) = v1525;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3160) = *(unsigned char *)(v44 + 3160);
                      uint64_t v1529 = *(void *)(v44 + 3168);
                      *(unsigned char *)(v43 + 3176) = *(unsigned char *)(v44 + 3176);
                      *(void *)(v43 + 3168) = v1529;
                    }
                    v1530 = (long long *)(v43 + 3184);
                    v1531 = (long long *)(v44 + 3184);
                    uint64_t v1532 = *(void *)(v44 + 3184);
                    if (*(void *)(v43 + 3184) == 1)
                    {
                      if (v1532 == 1)
                      {
                        long long v1533 = *v1531;
                        *(_OWORD *)(v43 + 3193) = *(_OWORD *)(v44 + 3193);
                        long long *v1530 = v1533;
                      }
                      else
                      {
                        *(void *)(v43 + 3184) = v1532;
                        *(unsigned char *)(v43 + 3192) = *(unsigned char *)(v44 + 3192);
                        uint64_t v1535 = *(void *)(v44 + 3200);
                        *(unsigned char *)(v43 + 3208) = *(unsigned char *)(v44 + 3208);
                        *(void *)(v43 + 3200) = v1535;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1532 == 1)
                    {
                      sub_10009F534(v43 + 3184);
                      long long v1534 = *(_OWORD *)(v44 + 3193);
                      long long *v1530 = *v1531;
                      *(_OWORD *)(v43 + 3193) = v1534;
                    }
                    else
                    {
                      *(void *)(v43 + 3184) = v1532;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3192) = *(unsigned char *)(v44 + 3192);
                      uint64_t v1536 = *(void *)(v44 + 3200);
                      *(unsigned char *)(v43 + 3208) = *(unsigned char *)(v44 + 3208);
                      *(void *)(v43 + 3200) = v1536;
                    }
                    v1537 = (long long *)(v43 + 3216);
                    v1538 = (long long *)(v44 + 3216);
                    uint64_t v1539 = *(void *)(v44 + 3216);
                    if (*(void *)(v43 + 3216) == 1)
                    {
                      if (v1539 == 1)
                      {
                        long long v1540 = *v1538;
                        *(_OWORD *)(v43 + 3225) = *(_OWORD *)(v44 + 3225);
                        long long *v1537 = v1540;
                      }
                      else
                      {
                        *(void *)(v43 + 3216) = v1539;
                        *(unsigned char *)(v43 + 3224) = *(unsigned char *)(v44 + 3224);
                        uint64_t v1542 = *(void *)(v44 + 3232);
                        *(unsigned char *)(v43 + 3240) = *(unsigned char *)(v44 + 3240);
                        *(void *)(v43 + 3232) = v1542;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1539 == 1)
                    {
                      sub_10009F534(v43 + 3216);
                      long long v1541 = *(_OWORD *)(v44 + 3225);
                      long long *v1537 = *v1538;
                      *(_OWORD *)(v43 + 3225) = v1541;
                    }
                    else
                    {
                      *(void *)(v43 + 3216) = v1539;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3224) = *(unsigned char *)(v44 + 3224);
                      uint64_t v1543 = *(void *)(v44 + 3232);
                      *(unsigned char *)(v43 + 3240) = *(unsigned char *)(v44 + 3240);
                      *(void *)(v43 + 3232) = v1543;
                    }
                    v1544 = (long long *)(v43 + 3248);
                    v1545 = (long long *)(v44 + 3248);
                    uint64_t v1546 = *(void *)(v44 + 3248);
                    if (*(void *)(v43 + 3248) == 1)
                    {
                      if (v1546 == 1)
                      {
                        long long v1547 = *v1545;
                        *(_OWORD *)(v43 + 3257) = *(_OWORD *)(v44 + 3257);
                        long long *v1544 = v1547;
                      }
                      else
                      {
                        *(void *)(v43 + 3248) = v1546;
                        *(unsigned char *)(v43 + 3256) = *(unsigned char *)(v44 + 3256);
                        uint64_t v1549 = *(void *)(v44 + 3264);
                        *(unsigned char *)(v43 + 3272) = *(unsigned char *)(v44 + 3272);
                        *(void *)(v43 + 3264) = v1549;
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v1546 == 1)
                    {
                      sub_10009F534(v43 + 3248);
                      long long v1548 = *(_OWORD *)(v44 + 3257);
                      long long *v1544 = *v1545;
                      *(_OWORD *)(v43 + 3257) = v1548;
                    }
                    else
                    {
                      *(void *)(v43 + 3248) = v1546;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(unsigned char *)(v43 + 3256) = *(unsigned char *)(v44 + 3256);
                      uint64_t v1550 = *(void *)(v44 + 3264);
                      *(unsigned char *)(v43 + 3272) = *(unsigned char *)(v44 + 3272);
                      *(void *)(v43 + 3264) = v1550;
                    }
                    long long v1551 = *(_OWORD *)(v44 + 3280);
                    *(unsigned char *)(v43 + 3296) = *(unsigned char *)(v44 + 3296);
                    *(_OWORD *)(v43 + 3280) = v1551;
                    long long v1552 = *(_OWORD *)(v44 + 3304);
                    *(unsigned char *)(v43 + 3320) = *(unsigned char *)(v44 + 3320);
                    *(_OWORD *)(v43 + 3304) = v1552;
                    *(unsigned char *)(v43 + 3321) = *(unsigned char *)(v44 + 3321);
                    *(unsigned char *)(v43 + 3322) = *(unsigned char *)(v44 + 3322);
                    *(unsigned char *)(v43 + 3323) = *(unsigned char *)(v44 + 3323);
                    *(unsigned char *)(v43 + 3324) = *(unsigned char *)(v44 + 3324);
                    *(unsigned char *)(v43 + 3325) = *(unsigned char *)(v44 + 3325);
                    *(unsigned char *)(v43 + 3326) = *(unsigned char *)(v44 + 3326);
                    *(unsigned char *)(v43 + 3327) = *(unsigned char *)(v44 + 3327);
                    *(void *)(v43 + 3328) = *(void *)(v44 + 3328);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)(v43 + 3336) = *(void *)(v44 + 3336);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
LABEL_1527:
                    v1553 = (long long *)(v43 + 3344);
                    v1554 = (long long *)(v44 + 3344);
                    uint64_t v1555 = *(void *)(v44 + 4160);
                    if (*(void *)(v43 + 4160) == 1)
                    {
                      if (v1555 != 1)
                      {
                        if (*(void *)v1554 == 1)
                        {
                          long long v1556 = *v1554;
                          *(_OWORD *)(v43 + 3353) = *(_OWORD *)(v44 + 3353);
                          long long *v1553 = v1556;
                        }
                        else
                        {
                          *(void *)(v43 + 3344) = *(void *)v1554;
                          *(unsigned char *)(v43 + 3352) = *(unsigned char *)(v44 + 3352);
                          uint64_t v1559 = *(void *)(v44 + 3360);
                          *(unsigned char *)(v43 + 3368) = *(unsigned char *)(v44 + 3368);
                          *(void *)(v43 + 3360) = v1559;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1560 = *(void *)(v44 + 3376);
                        if (v1560 == 1)
                        {
                          long long v1561 = *(_OWORD *)(v44 + 3376);
                          *(_OWORD *)(v43 + 3385) = *(_OWORD *)(v44 + 3385);
                          *(_OWORD *)(v43 + 3376) = v1561;
                        }
                        else
                        {
                          *(void *)(v43 + 3376) = v1560;
                          *(unsigned char *)(v43 + 3384) = *(unsigned char *)(v44 + 3384);
                          uint64_t v1563 = *(void *)(v44 + 3392);
                          *(unsigned char *)(v43 + 3400) = *(unsigned char *)(v44 + 3400);
                          *(void *)(v43 + 3392) = v1563;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1564 = *(void *)(v44 + 3408);
                        if (v1564 == 1)
                        {
                          long long v1565 = *(_OWORD *)(v44 + 3408);
                          *(_OWORD *)(v43 + 3417) = *(_OWORD *)(v44 + 3417);
                          *(_OWORD *)(v43 + 3408) = v1565;
                        }
                        else
                        {
                          *(void *)(v43 + 3408) = v1564;
                          *(unsigned char *)(v43 + 3416) = *(unsigned char *)(v44 + 3416);
                          uint64_t v1566 = *(void *)(v44 + 3424);
                          *(unsigned char *)(v43 + 3432) = *(unsigned char *)(v44 + 3432);
                          *(void *)(v43 + 3424) = v1566;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1567 = *(void *)(v44 + 3440);
                        if (v1567 == 1)
                        {
                          long long v1568 = *(_OWORD *)(v44 + 3440);
                          *(_OWORD *)(v43 + 3449) = *(_OWORD *)(v44 + 3449);
                          *(_OWORD *)(v43 + 3440) = v1568;
                        }
                        else
                        {
                          *(void *)(v43 + 3440) = v1567;
                          *(unsigned char *)(v43 + 3448) = *(unsigned char *)(v44 + 3448);
                          uint64_t v1569 = *(void *)(v44 + 3456);
                          *(unsigned char *)(v43 + 3464) = *(unsigned char *)(v44 + 3464);
                          *(void *)(v43 + 3456) = v1569;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1570 = *(void *)(v44 + 3472);
                        if (v1570 == 1)
                        {
                          long long v1571 = *(_OWORD *)(v44 + 3472);
                          *(_OWORD *)(v43 + 3481) = *(_OWORD *)(v44 + 3481);
                          *(_OWORD *)(v43 + 3472) = v1571;
                        }
                        else
                        {
                          *(void *)(v43 + 3472) = v1570;
                          *(unsigned char *)(v43 + 3480) = *(unsigned char *)(v44 + 3480);
                          uint64_t v1572 = *(void *)(v44 + 3488);
                          *(unsigned char *)(v43 + 3496) = *(unsigned char *)(v44 + 3496);
                          *(void *)(v43 + 3488) = v1572;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1573 = *(void *)(v44 + 3504);
                        if (v1573 == 1)
                        {
                          long long v1574 = *(_OWORD *)(v44 + 3504);
                          *(_OWORD *)(v43 + 3513) = *(_OWORD *)(v44 + 3513);
                          *(_OWORD *)(v43 + 3504) = v1574;
                        }
                        else
                        {
                          *(void *)(v43 + 3504) = v1573;
                          *(unsigned char *)(v43 + 3512) = *(unsigned char *)(v44 + 3512);
                          uint64_t v1575 = *(void *)(v44 + 3520);
                          *(unsigned char *)(v43 + 3528) = *(unsigned char *)(v44 + 3528);
                          *(void *)(v43 + 3520) = v1575;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1576 = *(void *)(v44 + 3536);
                        if (v1576 == 1)
                        {
                          long long v1577 = *(_OWORD *)(v44 + 3536);
                          *(_OWORD *)(v43 + 3545) = *(_OWORD *)(v44 + 3545);
                          *(_OWORD *)(v43 + 3536) = v1577;
                        }
                        else
                        {
                          *(void *)(v43 + 3536) = v1576;
                          *(unsigned char *)(v43 + 3544) = *(unsigned char *)(v44 + 3544);
                          uint64_t v1578 = *(void *)(v44 + 3552);
                          *(unsigned char *)(v43 + 3560) = *(unsigned char *)(v44 + 3560);
                          *(void *)(v43 + 3552) = v1578;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1579 = *(void *)(v44 + 3568);
                        if (v1579 == 1)
                        {
                          long long v1580 = *(_OWORD *)(v44 + 3568);
                          *(_OWORD *)(v43 + 3577) = *(_OWORD *)(v44 + 3577);
                          *(_OWORD *)(v43 + 3568) = v1580;
                        }
                        else
                        {
                          *(void *)(v43 + 3568) = v1579;
                          *(unsigned char *)(v43 + 3576) = *(unsigned char *)(v44 + 3576);
                          uint64_t v1581 = *(void *)(v44 + 3584);
                          *(unsigned char *)(v43 + 3592) = *(unsigned char *)(v44 + 3592);
                          *(void *)(v43 + 3584) = v1581;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1582 = *(void *)(v44 + 3600);
                        if (v1582 == 1)
                        {
                          long long v1583 = *(_OWORD *)(v44 + 3600);
                          *(_OWORD *)(v43 + 3609) = *(_OWORD *)(v44 + 3609);
                          *(_OWORD *)(v43 + 3600) = v1583;
                        }
                        else
                        {
                          *(void *)(v43 + 3600) = v1582;
                          *(unsigned char *)(v43 + 3608) = *(unsigned char *)(v44 + 3608);
                          uint64_t v1584 = *(void *)(v44 + 3616);
                          *(unsigned char *)(v43 + 3624) = *(unsigned char *)(v44 + 3624);
                          *(void *)(v43 + 3616) = v1584;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1585 = *(void *)(v44 + 3632);
                        if (v1585 == 1)
                        {
                          long long v1586 = *(_OWORD *)(v44 + 3632);
                          *(_OWORD *)(v43 + 3641) = *(_OWORD *)(v44 + 3641);
                          *(_OWORD *)(v43 + 3632) = v1586;
                        }
                        else
                        {
                          *(void *)(v43 + 3632) = v1585;
                          *(unsigned char *)(v43 + 3640) = *(unsigned char *)(v44 + 3640);
                          uint64_t v1587 = *(void *)(v44 + 3648);
                          *(unsigned char *)(v43 + 3656) = *(unsigned char *)(v44 + 3656);
                          *(void *)(v43 + 3648) = v1587;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1588 = *(void *)(v44 + 3664);
                        if (v1588 == 1)
                        {
                          long long v1589 = *(_OWORD *)(v44 + 3664);
                          *(_OWORD *)(v43 + 3673) = *(_OWORD *)(v44 + 3673);
                          *(_OWORD *)(v43 + 3664) = v1589;
                        }
                        else
                        {
                          *(void *)(v43 + 3664) = v1588;
                          *(unsigned char *)(v43 + 3672) = *(unsigned char *)(v44 + 3672);
                          uint64_t v1590 = *(void *)(v44 + 3680);
                          *(unsigned char *)(v43 + 3688) = *(unsigned char *)(v44 + 3688);
                          *(void *)(v43 + 3680) = v1590;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1591 = *(void *)(v44 + 3696);
                        if (v1591 == 1)
                        {
                          long long v1592 = *(_OWORD *)(v44 + 3696);
                          *(_OWORD *)(v43 + 3705) = *(_OWORD *)(v44 + 3705);
                          *(_OWORD *)(v43 + 3696) = v1592;
                        }
                        else
                        {
                          *(void *)(v43 + 3696) = v1591;
                          *(unsigned char *)(v43 + 3704) = *(unsigned char *)(v44 + 3704);
                          uint64_t v1593 = *(void *)(v44 + 3712);
                          *(unsigned char *)(v43 + 3720) = *(unsigned char *)(v44 + 3720);
                          *(void *)(v43 + 3712) = v1593;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1594 = *(void *)(v44 + 3728);
                        if (v1594 == 1)
                        {
                          long long v1595 = *(_OWORD *)(v44 + 3728);
                          *(_OWORD *)(v43 + 3737) = *(_OWORD *)(v44 + 3737);
                          *(_OWORD *)(v43 + 3728) = v1595;
                        }
                        else
                        {
                          *(void *)(v43 + 3728) = v1594;
                          *(unsigned char *)(v43 + 3736) = *(unsigned char *)(v44 + 3736);
                          uint64_t v1596 = *(void *)(v44 + 3744);
                          *(unsigned char *)(v43 + 3752) = *(unsigned char *)(v44 + 3752);
                          *(void *)(v43 + 3744) = v1596;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1597 = *(void *)(v44 + 3760);
                        if (v1597 == 1)
                        {
                          long long v1598 = *(_OWORD *)(v44 + 3760);
                          *(_OWORD *)(v43 + 3769) = *(_OWORD *)(v44 + 3769);
                          *(_OWORD *)(v43 + 3760) = v1598;
                        }
                        else
                        {
                          *(void *)(v43 + 3760) = v1597;
                          *(unsigned char *)(v43 + 3768) = *(unsigned char *)(v44 + 3768);
                          uint64_t v1599 = *(void *)(v44 + 3776);
                          *(unsigned char *)(v43 + 3784) = *(unsigned char *)(v44 + 3784);
                          *(void *)(v43 + 3776) = v1599;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1600 = *(void *)(v44 + 3792);
                        if (v1600 == 1)
                        {
                          long long v1601 = *(_OWORD *)(v44 + 3792);
                          *(_OWORD *)(v43 + 3801) = *(_OWORD *)(v44 + 3801);
                          *(_OWORD *)(v43 + 3792) = v1601;
                        }
                        else
                        {
                          *(void *)(v43 + 3792) = v1600;
                          *(unsigned char *)(v43 + 3800) = *(unsigned char *)(v44 + 3800);
                          uint64_t v1602 = *(void *)(v44 + 3808);
                          *(unsigned char *)(v43 + 3816) = *(unsigned char *)(v44 + 3816);
                          *(void *)(v43 + 3808) = v1602;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1603 = *(void *)(v44 + 3824);
                        if (v1603 == 1)
                        {
                          long long v1604 = *(_OWORD *)(v44 + 3824);
                          *(_OWORD *)(v43 + 3833) = *(_OWORD *)(v44 + 3833);
                          *(_OWORD *)(v43 + 3824) = v1604;
                        }
                        else
                        {
                          *(void *)(v43 + 3824) = v1603;
                          *(unsigned char *)(v43 + 3832) = *(unsigned char *)(v44 + 3832);
                          uint64_t v1605 = *(void *)(v44 + 3840);
                          *(unsigned char *)(v43 + 3848) = *(unsigned char *)(v44 + 3848);
                          *(void *)(v43 + 3840) = v1605;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1606 = *(void *)(v44 + 3856);
                        if (v1606 == 1)
                        {
                          long long v1607 = *(_OWORD *)(v44 + 3856);
                          *(_OWORD *)(v43 + 3865) = *(_OWORD *)(v44 + 3865);
                          *(_OWORD *)(v43 + 3856) = v1607;
                        }
                        else
                        {
                          *(void *)(v43 + 3856) = v1606;
                          *(unsigned char *)(v43 + 3864) = *(unsigned char *)(v44 + 3864);
                          uint64_t v1608 = *(void *)(v44 + 3872);
                          *(unsigned char *)(v43 + 3880) = *(unsigned char *)(v44 + 3880);
                          *(void *)(v43 + 3872) = v1608;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1609 = *(void *)(v44 + 3888);
                        if (v1609 == 1)
                        {
                          long long v1610 = *(_OWORD *)(v44 + 3888);
                          *(_OWORD *)(v43 + 3897) = *(_OWORD *)(v44 + 3897);
                          *(_OWORD *)(v43 + 3888) = v1610;
                        }
                        else
                        {
                          *(void *)(v43 + 3888) = v1609;
                          *(unsigned char *)(v43 + 3896) = *(unsigned char *)(v44 + 3896);
                          uint64_t v1611 = *(void *)(v44 + 3904);
                          *(unsigned char *)(v43 + 3912) = *(unsigned char *)(v44 + 3912);
                          *(void *)(v43 + 3904) = v1611;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1612 = *(void *)(v44 + 3920);
                        if (v1612 == 1)
                        {
                          long long v1613 = *(_OWORD *)(v44 + 3920);
                          *(_OWORD *)(v43 + 3929) = *(_OWORD *)(v44 + 3929);
                          *(_OWORD *)(v43 + 3920) = v1613;
                        }
                        else
                        {
                          *(void *)(v43 + 3920) = v1612;
                          *(unsigned char *)(v43 + 3928) = *(unsigned char *)(v44 + 3928);
                          uint64_t v1614 = *(void *)(v44 + 3936);
                          *(unsigned char *)(v43 + 3944) = *(unsigned char *)(v44 + 3944);
                          *(void *)(v43 + 3936) = v1614;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1615 = *(void *)(v44 + 3952);
                        if (v1615 == 1)
                        {
                          long long v1616 = *(_OWORD *)(v44 + 3952);
                          *(_OWORD *)(v43 + 3961) = *(_OWORD *)(v44 + 3961);
                          *(_OWORD *)(v43 + 3952) = v1616;
                        }
                        else
                        {
                          *(void *)(v43 + 3952) = v1615;
                          *(unsigned char *)(v43 + 3960) = *(unsigned char *)(v44 + 3960);
                          uint64_t v1617 = *(void *)(v44 + 3968);
                          *(unsigned char *)(v43 + 3976) = *(unsigned char *)(v44 + 3976);
                          *(void *)(v43 + 3968) = v1617;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1618 = *(void *)(v44 + 3984);
                        if (v1618 == 1)
                        {
                          long long v1619 = *(_OWORD *)(v44 + 3984);
                          *(_OWORD *)(v43 + 3993) = *(_OWORD *)(v44 + 3993);
                          *(_OWORD *)(v43 + 3984) = v1619;
                        }
                        else
                        {
                          *(void *)(v43 + 3984) = v1618;
                          *(unsigned char *)(v43 + 3992) = *(unsigned char *)(v44 + 3992);
                          uint64_t v1620 = *(void *)(v44 + 4000);
                          *(unsigned char *)(v43 + 4008) = *(unsigned char *)(v44 + 4008);
                          *(void *)(v43 + 4000) = v1620;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1621 = *(void *)(v44 + 4016);
                        if (v1621 == 1)
                        {
                          long long v1622 = *(_OWORD *)(v44 + 4016);
                          *(_OWORD *)(v43 + 4025) = *(_OWORD *)(v44 + 4025);
                          *(_OWORD *)(v43 + 4016) = v1622;
                        }
                        else
                        {
                          *(void *)(v43 + 4016) = v1621;
                          *(unsigned char *)(v43 + 4024) = *(unsigned char *)(v44 + 4024);
                          uint64_t v1623 = *(void *)(v44 + 4032);
                          *(unsigned char *)(v43 + 4040) = *(unsigned char *)(v44 + 4040);
                          *(void *)(v43 + 4032) = v1623;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1624 = *(void *)(v44 + 4048);
                        if (v1624 == 1)
                        {
                          long long v1625 = *(_OWORD *)(v44 + 4048);
                          *(_OWORD *)(v43 + 4057) = *(_OWORD *)(v44 + 4057);
                          *(_OWORD *)(v43 + 4048) = v1625;
                        }
                        else
                        {
                          *(void *)(v43 + 4048) = v1624;
                          *(unsigned char *)(v43 + 4056) = *(unsigned char *)(v44 + 4056);
                          uint64_t v1626 = *(void *)(v44 + 4064);
                          *(unsigned char *)(v43 + 4072) = *(unsigned char *)(v44 + 4072);
                          *(void *)(v43 + 4064) = v1626;
                          swift_bridgeObjectRetain();
                        }
                        uint64_t v1627 = *(void *)(v44 + 4080);
                        if (v1627 == 1)
                        {
                          long long v1628 = *(_OWORD *)(v44 + 4080);
                          *(_OWORD *)(v43 + 4089) = *(_OWORD *)(v44 + 4089);
                          *(_OWORD *)(v43 + 4080) = v1628;
                        }
                        else
                        {
                          *(void *)(v43 + 4080) = v1627;
                          *(unsigned char *)(v43 + 4088) = *(unsigned char *)(v44 + 4088);
                          uint64_t v1629 = *(void *)(v44 + 4096);
                          *(unsigned char *)(v43 + 4104) = *(unsigned char *)(v44 + 4104);
                          *(void *)(v43 + 4096) = v1629;
                          swift_bridgeObjectRetain();
                        }
                        long long v1630 = *(_OWORD *)(v44 + 4112);
                        *(unsigned char *)(v43 + 4128) = *(unsigned char *)(v44 + 4128);
                        *(_OWORD *)(v43 + 4112) = v1630;
                        char v1631 = *(unsigned char *)(v44 + 4152);
                        *(_OWORD *)(v43 + 4136) = *(_OWORD *)(v44 + 4136);
                        *(unsigned char *)(v43 + 4152) = v1631;
                        *(unsigned char *)(v43 + 4153) = *(unsigned char *)(v44 + 4153);
                        *(unsigned char *)(v43 + 4154) = *(unsigned char *)(v44 + 4154);
                        *(unsigned char *)(v43 + 4155) = *(unsigned char *)(v44 + 4155);
                        *(unsigned char *)(v43 + 4156) = *(unsigned char *)(v44 + 4156);
                        *(unsigned char *)(v43 + 4157) = *(unsigned char *)(v44 + 4157);
                        *(unsigned char *)(v43 + 4158) = *(unsigned char *)(v44 + 4158);
                        *(unsigned char *)(v43 + 4159) = *(unsigned char *)(v44 + 4159);
                        *(void *)(v43 + 4160) = *(void *)(v44 + 4160);
                        *(void *)(v43 + 4168) = *(void *)(v44 + 4168);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        goto LABEL_1774;
                      }
                    }
                    else
                    {
                      if (v1555 != 1)
                      {
                        uint64_t v1557 = *(void *)v1554;
                        if (*(void *)v1553 == 1)
                        {
                          if (v1557 == 1)
                          {
                            long long v1558 = *v1554;
                            *(_OWORD *)(v43 + 3353) = *(_OWORD *)(v44 + 3353);
                            long long *v1553 = v1558;
                          }
                          else
                          {
                            *(void *)(v43 + 3344) = v1557;
                            *(unsigned char *)(v43 + 3352) = *(unsigned char *)(v44 + 3352);
                            uint64_t v1632 = *(void *)(v44 + 3360);
                            *(unsigned char *)(v43 + 3368) = *(unsigned char *)(v44 + 3368);
                            *(void *)(v43 + 3360) = v1632;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1557 == 1)
                        {
                          sub_10009F534(v43 + 3344);
                          long long v1562 = *(_OWORD *)(v44 + 3353);
                          long long *v1553 = *v1554;
                          *(_OWORD *)(v43 + 3353) = v1562;
                        }
                        else
                        {
                          *(void *)(v43 + 3344) = v1557;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3352) = *(unsigned char *)(v44 + 3352);
                          uint64_t v1633 = *(void *)(v44 + 3360);
                          *(unsigned char *)(v43 + 3368) = *(unsigned char *)(v44 + 3368);
                          *(void *)(v43 + 3360) = v1633;
                        }
                        v1634 = (long long *)(v43 + 3376);
                        v1635 = (long long *)(v44 + 3376);
                        uint64_t v1636 = *(void *)(v44 + 3376);
                        if (*(void *)(v43 + 3376) == 1)
                        {
                          if (v1636 == 1)
                          {
                            long long v1637 = *v1635;
                            *(_OWORD *)(v43 + 3385) = *(_OWORD *)(v44 + 3385);
                            long long *v1634 = v1637;
                          }
                          else
                          {
                            *(void *)(v43 + 3376) = v1636;
                            *(unsigned char *)(v43 + 3384) = *(unsigned char *)(v44 + 3384);
                            uint64_t v1639 = *(void *)(v44 + 3392);
                            *(unsigned char *)(v43 + 3400) = *(unsigned char *)(v44 + 3400);
                            *(void *)(v43 + 3392) = v1639;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1636 == 1)
                        {
                          sub_10009F534(v43 + 3376);
                          long long v1638 = *(_OWORD *)(v44 + 3385);
                          long long *v1634 = *v1635;
                          *(_OWORD *)(v43 + 3385) = v1638;
                        }
                        else
                        {
                          *(void *)(v43 + 3376) = v1636;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3384) = *(unsigned char *)(v44 + 3384);
                          uint64_t v1640 = *(void *)(v44 + 3392);
                          *(unsigned char *)(v43 + 3400) = *(unsigned char *)(v44 + 3400);
                          *(void *)(v43 + 3392) = v1640;
                        }
                        v1641 = (long long *)(v43 + 3408);
                        v1642 = (long long *)(v44 + 3408);
                        uint64_t v1643 = *(void *)(v44 + 3408);
                        if (*(void *)(v43 + 3408) == 1)
                        {
                          if (v1643 == 1)
                          {
                            long long v1644 = *v1642;
                            *(_OWORD *)(v43 + 3417) = *(_OWORD *)(v44 + 3417);
                            long long *v1641 = v1644;
                          }
                          else
                          {
                            *(void *)(v43 + 3408) = v1643;
                            *(unsigned char *)(v43 + 3416) = *(unsigned char *)(v44 + 3416);
                            uint64_t v1646 = *(void *)(v44 + 3424);
                            *(unsigned char *)(v43 + 3432) = *(unsigned char *)(v44 + 3432);
                            *(void *)(v43 + 3424) = v1646;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1643 == 1)
                        {
                          sub_10009F534(v43 + 3408);
                          long long v1645 = *(_OWORD *)(v44 + 3417);
                          long long *v1641 = *v1642;
                          *(_OWORD *)(v43 + 3417) = v1645;
                        }
                        else
                        {
                          *(void *)(v43 + 3408) = v1643;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3416) = *(unsigned char *)(v44 + 3416);
                          uint64_t v1647 = *(void *)(v44 + 3424);
                          *(unsigned char *)(v43 + 3432) = *(unsigned char *)(v44 + 3432);
                          *(void *)(v43 + 3424) = v1647;
                        }
                        v1648 = (long long *)(v43 + 3440);
                        v1649 = (long long *)(v44 + 3440);
                        uint64_t v1650 = *(void *)(v44 + 3440);
                        if (*(void *)(v43 + 3440) == 1)
                        {
                          if (v1650 == 1)
                          {
                            long long v1651 = *v1649;
                            *(_OWORD *)(v43 + 3449) = *(_OWORD *)(v44 + 3449);
                            long long *v1648 = v1651;
                          }
                          else
                          {
                            *(void *)(v43 + 3440) = v1650;
                            *(unsigned char *)(v43 + 3448) = *(unsigned char *)(v44 + 3448);
                            uint64_t v1653 = *(void *)(v44 + 3456);
                            *(unsigned char *)(v43 + 3464) = *(unsigned char *)(v44 + 3464);
                            *(void *)(v43 + 3456) = v1653;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1650 == 1)
                        {
                          sub_10009F534(v43 + 3440);
                          long long v1652 = *(_OWORD *)(v44 + 3449);
                          long long *v1648 = *v1649;
                          *(_OWORD *)(v43 + 3449) = v1652;
                        }
                        else
                        {
                          *(void *)(v43 + 3440) = v1650;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3448) = *(unsigned char *)(v44 + 3448);
                          uint64_t v1654 = *(void *)(v44 + 3456);
                          *(unsigned char *)(v43 + 3464) = *(unsigned char *)(v44 + 3464);
                          *(void *)(v43 + 3456) = v1654;
                        }
                        v1655 = (long long *)(v43 + 3472);
                        v1656 = (long long *)(v44 + 3472);
                        uint64_t v1657 = *(void *)(v44 + 3472);
                        if (*(void *)(v43 + 3472) == 1)
                        {
                          if (v1657 == 1)
                          {
                            long long v1658 = *v1656;
                            *(_OWORD *)(v43 + 3481) = *(_OWORD *)(v44 + 3481);
                            long long *v1655 = v1658;
                          }
                          else
                          {
                            *(void *)(v43 + 3472) = v1657;
                            *(unsigned char *)(v43 + 3480) = *(unsigned char *)(v44 + 3480);
                            uint64_t v1660 = *(void *)(v44 + 3488);
                            *(unsigned char *)(v43 + 3496) = *(unsigned char *)(v44 + 3496);
                            *(void *)(v43 + 3488) = v1660;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1657 == 1)
                        {
                          sub_10009F534(v43 + 3472);
                          long long v1659 = *(_OWORD *)(v44 + 3481);
                          long long *v1655 = *v1656;
                          *(_OWORD *)(v43 + 3481) = v1659;
                        }
                        else
                        {
                          *(void *)(v43 + 3472) = v1657;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3480) = *(unsigned char *)(v44 + 3480);
                          uint64_t v1661 = *(void *)(v44 + 3488);
                          *(unsigned char *)(v43 + 3496) = *(unsigned char *)(v44 + 3496);
                          *(void *)(v43 + 3488) = v1661;
                        }
                        v1662 = (long long *)(v43 + 3504);
                        v1663 = (long long *)(v44 + 3504);
                        uint64_t v1664 = *(void *)(v44 + 3504);
                        if (*(void *)(v43 + 3504) == 1)
                        {
                          if (v1664 == 1)
                          {
                            long long v1665 = *v1663;
                            *(_OWORD *)(v43 + 3513) = *(_OWORD *)(v44 + 3513);
                            long long *v1662 = v1665;
                          }
                          else
                          {
                            *(void *)(v43 + 3504) = v1664;
                            *(unsigned char *)(v43 + 3512) = *(unsigned char *)(v44 + 3512);
                            uint64_t v1667 = *(void *)(v44 + 3520);
                            *(unsigned char *)(v43 + 3528) = *(unsigned char *)(v44 + 3528);
                            *(void *)(v43 + 3520) = v1667;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1664 == 1)
                        {
                          sub_10009F534(v43 + 3504);
                          long long v1666 = *(_OWORD *)(v44 + 3513);
                          long long *v1662 = *v1663;
                          *(_OWORD *)(v43 + 3513) = v1666;
                        }
                        else
                        {
                          *(void *)(v43 + 3504) = v1664;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3512) = *(unsigned char *)(v44 + 3512);
                          uint64_t v1668 = *(void *)(v44 + 3520);
                          *(unsigned char *)(v43 + 3528) = *(unsigned char *)(v44 + 3528);
                          *(void *)(v43 + 3520) = v1668;
                        }
                        v1669 = (long long *)(v43 + 3536);
                        v1670 = (long long *)(v44 + 3536);
                        uint64_t v1671 = *(void *)(v44 + 3536);
                        if (*(void *)(v43 + 3536) == 1)
                        {
                          if (v1671 == 1)
                          {
                            long long v1672 = *v1670;
                            *(_OWORD *)(v43 + 3545) = *(_OWORD *)(v44 + 3545);
                            long long *v1669 = v1672;
                          }
                          else
                          {
                            *(void *)(v43 + 3536) = v1671;
                            *(unsigned char *)(v43 + 3544) = *(unsigned char *)(v44 + 3544);
                            uint64_t v1674 = *(void *)(v44 + 3552);
                            *(unsigned char *)(v43 + 3560) = *(unsigned char *)(v44 + 3560);
                            *(void *)(v43 + 3552) = v1674;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1671 == 1)
                        {
                          sub_10009F534(v43 + 3536);
                          long long v1673 = *(_OWORD *)(v44 + 3545);
                          long long *v1669 = *v1670;
                          *(_OWORD *)(v43 + 3545) = v1673;
                        }
                        else
                        {
                          *(void *)(v43 + 3536) = v1671;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3544) = *(unsigned char *)(v44 + 3544);
                          uint64_t v1675 = *(void *)(v44 + 3552);
                          *(unsigned char *)(v43 + 3560) = *(unsigned char *)(v44 + 3560);
                          *(void *)(v43 + 3552) = v1675;
                        }
                        v1676 = (long long *)(v43 + 3568);
                        v1677 = (long long *)(v44 + 3568);
                        uint64_t v1678 = *(void *)(v44 + 3568);
                        if (*(void *)(v43 + 3568) == 1)
                        {
                          if (v1678 == 1)
                          {
                            long long v1679 = *v1677;
                            *(_OWORD *)(v43 + 3577) = *(_OWORD *)(v44 + 3577);
                            long long *v1676 = v1679;
                          }
                          else
                          {
                            *(void *)(v43 + 3568) = v1678;
                            *(unsigned char *)(v43 + 3576) = *(unsigned char *)(v44 + 3576);
                            uint64_t v1681 = *(void *)(v44 + 3584);
                            *(unsigned char *)(v43 + 3592) = *(unsigned char *)(v44 + 3592);
                            *(void *)(v43 + 3584) = v1681;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1678 == 1)
                        {
                          sub_10009F534(v43 + 3568);
                          long long v1680 = *(_OWORD *)(v44 + 3577);
                          long long *v1676 = *v1677;
                          *(_OWORD *)(v43 + 3577) = v1680;
                        }
                        else
                        {
                          *(void *)(v43 + 3568) = v1678;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3576) = *(unsigned char *)(v44 + 3576);
                          uint64_t v1682 = *(void *)(v44 + 3584);
                          *(unsigned char *)(v43 + 3592) = *(unsigned char *)(v44 + 3592);
                          *(void *)(v43 + 3584) = v1682;
                        }
                        v1683 = (long long *)(v43 + 3600);
                        v1684 = (long long *)(v44 + 3600);
                        uint64_t v1685 = *(void *)(v44 + 3600);
                        if (*(void *)(v43 + 3600) == 1)
                        {
                          if (v1685 == 1)
                          {
                            long long v1686 = *v1684;
                            *(_OWORD *)(v43 + 3609) = *(_OWORD *)(v44 + 3609);
                            long long *v1683 = v1686;
                          }
                          else
                          {
                            *(void *)(v43 + 3600) = v1685;
                            *(unsigned char *)(v43 + 3608) = *(unsigned char *)(v44 + 3608);
                            uint64_t v1688 = *(void *)(v44 + 3616);
                            *(unsigned char *)(v43 + 3624) = *(unsigned char *)(v44 + 3624);
                            *(void *)(v43 + 3616) = v1688;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1685 == 1)
                        {
                          sub_10009F534(v43 + 3600);
                          long long v1687 = *(_OWORD *)(v44 + 3609);
                          long long *v1683 = *v1684;
                          *(_OWORD *)(v43 + 3609) = v1687;
                        }
                        else
                        {
                          *(void *)(v43 + 3600) = v1685;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3608) = *(unsigned char *)(v44 + 3608);
                          uint64_t v1689 = *(void *)(v44 + 3616);
                          *(unsigned char *)(v43 + 3624) = *(unsigned char *)(v44 + 3624);
                          *(void *)(v43 + 3616) = v1689;
                        }
                        v1690 = (long long *)(v43 + 3632);
                        v1691 = (long long *)(v44 + 3632);
                        uint64_t v1692 = *(void *)(v44 + 3632);
                        if (*(void *)(v43 + 3632) == 1)
                        {
                          if (v1692 == 1)
                          {
                            long long v1693 = *v1691;
                            *(_OWORD *)(v43 + 3641) = *(_OWORD *)(v44 + 3641);
                            long long *v1690 = v1693;
                          }
                          else
                          {
                            *(void *)(v43 + 3632) = v1692;
                            *(unsigned char *)(v43 + 3640) = *(unsigned char *)(v44 + 3640);
                            uint64_t v1695 = *(void *)(v44 + 3648);
                            *(unsigned char *)(v43 + 3656) = *(unsigned char *)(v44 + 3656);
                            *(void *)(v43 + 3648) = v1695;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1692 == 1)
                        {
                          sub_10009F534(v43 + 3632);
                          long long v1694 = *(_OWORD *)(v44 + 3641);
                          long long *v1690 = *v1691;
                          *(_OWORD *)(v43 + 3641) = v1694;
                        }
                        else
                        {
                          *(void *)(v43 + 3632) = v1692;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3640) = *(unsigned char *)(v44 + 3640);
                          uint64_t v1696 = *(void *)(v44 + 3648);
                          *(unsigned char *)(v43 + 3656) = *(unsigned char *)(v44 + 3656);
                          *(void *)(v43 + 3648) = v1696;
                        }
                        v1697 = (long long *)(v43 + 3664);
                        v1698 = (long long *)(v44 + 3664);
                        uint64_t v1699 = *(void *)(v44 + 3664);
                        if (*(void *)(v43 + 3664) == 1)
                        {
                          if (v1699 == 1)
                          {
                            long long v1700 = *v1698;
                            *(_OWORD *)(v43 + 3673) = *(_OWORD *)(v44 + 3673);
                            long long *v1697 = v1700;
                          }
                          else
                          {
                            *(void *)(v43 + 3664) = v1699;
                            *(unsigned char *)(v43 + 3672) = *(unsigned char *)(v44 + 3672);
                            uint64_t v1702 = *(void *)(v44 + 3680);
                            *(unsigned char *)(v43 + 3688) = *(unsigned char *)(v44 + 3688);
                            *(void *)(v43 + 3680) = v1702;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1699 == 1)
                        {
                          sub_10009F534(v43 + 3664);
                          long long v1701 = *(_OWORD *)(v44 + 3673);
                          long long *v1697 = *v1698;
                          *(_OWORD *)(v43 + 3673) = v1701;
                        }
                        else
                        {
                          *(void *)(v43 + 3664) = v1699;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3672) = *(unsigned char *)(v44 + 3672);
                          uint64_t v1703 = *(void *)(v44 + 3680);
                          *(unsigned char *)(v43 + 3688) = *(unsigned char *)(v44 + 3688);
                          *(void *)(v43 + 3680) = v1703;
                        }
                        v1704 = (long long *)(v43 + 3696);
                        v1705 = (long long *)(v44 + 3696);
                        uint64_t v1706 = *(void *)(v44 + 3696);
                        if (*(void *)(v43 + 3696) == 1)
                        {
                          if (v1706 == 1)
                          {
                            long long v1707 = *v1705;
                            *(_OWORD *)(v43 + 3705) = *(_OWORD *)(v44 + 3705);
                            long long *v1704 = v1707;
                          }
                          else
                          {
                            *(void *)(v43 + 3696) = v1706;
                            *(unsigned char *)(v43 + 3704) = *(unsigned char *)(v44 + 3704);
                            uint64_t v1709 = *(void *)(v44 + 3712);
                            *(unsigned char *)(v43 + 3720) = *(unsigned char *)(v44 + 3720);
                            *(void *)(v43 + 3712) = v1709;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1706 == 1)
                        {
                          sub_10009F534(v43 + 3696);
                          long long v1708 = *(_OWORD *)(v44 + 3705);
                          long long *v1704 = *v1705;
                          *(_OWORD *)(v43 + 3705) = v1708;
                        }
                        else
                        {
                          *(void *)(v43 + 3696) = v1706;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3704) = *(unsigned char *)(v44 + 3704);
                          uint64_t v1710 = *(void *)(v44 + 3712);
                          *(unsigned char *)(v43 + 3720) = *(unsigned char *)(v44 + 3720);
                          *(void *)(v43 + 3712) = v1710;
                        }
                        v1711 = (long long *)(v43 + 3728);
                        v1712 = (long long *)(v44 + 3728);
                        uint64_t v1713 = *(void *)(v44 + 3728);
                        if (*(void *)(v43 + 3728) == 1)
                        {
                          if (v1713 == 1)
                          {
                            long long v1714 = *v1712;
                            *(_OWORD *)(v43 + 3737) = *(_OWORD *)(v44 + 3737);
                            long long *v1711 = v1714;
                          }
                          else
                          {
                            *(void *)(v43 + 3728) = v1713;
                            *(unsigned char *)(v43 + 3736) = *(unsigned char *)(v44 + 3736);
                            uint64_t v1716 = *(void *)(v44 + 3744);
                            *(unsigned char *)(v43 + 3752) = *(unsigned char *)(v44 + 3752);
                            *(void *)(v43 + 3744) = v1716;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1713 == 1)
                        {
                          sub_10009F534(v43 + 3728);
                          long long v1715 = *(_OWORD *)(v44 + 3737);
                          long long *v1711 = *v1712;
                          *(_OWORD *)(v43 + 3737) = v1715;
                        }
                        else
                        {
                          *(void *)(v43 + 3728) = v1713;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3736) = *(unsigned char *)(v44 + 3736);
                          uint64_t v1717 = *(void *)(v44 + 3744);
                          *(unsigned char *)(v43 + 3752) = *(unsigned char *)(v44 + 3752);
                          *(void *)(v43 + 3744) = v1717;
                        }
                        v1718 = (long long *)(v43 + 3760);
                        v1719 = (long long *)(v44 + 3760);
                        uint64_t v1720 = *(void *)(v44 + 3760);
                        if (*(void *)(v43 + 3760) == 1)
                        {
                          if (v1720 == 1)
                          {
                            long long v1721 = *v1719;
                            *(_OWORD *)(v43 + 3769) = *(_OWORD *)(v44 + 3769);
                            long long *v1718 = v1721;
                          }
                          else
                          {
                            *(void *)(v43 + 3760) = v1720;
                            *(unsigned char *)(v43 + 3768) = *(unsigned char *)(v44 + 3768);
                            uint64_t v1723 = *(void *)(v44 + 3776);
                            *(unsigned char *)(v43 + 3784) = *(unsigned char *)(v44 + 3784);
                            *(void *)(v43 + 3776) = v1723;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1720 == 1)
                        {
                          sub_10009F534(v43 + 3760);
                          long long v1722 = *(_OWORD *)(v44 + 3769);
                          long long *v1718 = *v1719;
                          *(_OWORD *)(v43 + 3769) = v1722;
                        }
                        else
                        {
                          *(void *)(v43 + 3760) = v1720;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3768) = *(unsigned char *)(v44 + 3768);
                          uint64_t v1724 = *(void *)(v44 + 3776);
                          *(unsigned char *)(v43 + 3784) = *(unsigned char *)(v44 + 3784);
                          *(void *)(v43 + 3776) = v1724;
                        }
                        v1725 = (long long *)(v43 + 3792);
                        v1726 = (long long *)(v44 + 3792);
                        uint64_t v1727 = *(void *)(v44 + 3792);
                        if (*(void *)(v43 + 3792) == 1)
                        {
                          if (v1727 == 1)
                          {
                            long long v1728 = *v1726;
                            *(_OWORD *)(v43 + 3801) = *(_OWORD *)(v44 + 3801);
                            long long *v1725 = v1728;
                          }
                          else
                          {
                            *(void *)(v43 + 3792) = v1727;
                            *(unsigned char *)(v43 + 3800) = *(unsigned char *)(v44 + 3800);
                            uint64_t v1730 = *(void *)(v44 + 3808);
                            *(unsigned char *)(v43 + 3816) = *(unsigned char *)(v44 + 3816);
                            *(void *)(v43 + 3808) = v1730;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1727 == 1)
                        {
                          sub_10009F534(v43 + 3792);
                          long long v1729 = *(_OWORD *)(v44 + 3801);
                          long long *v1725 = *v1726;
                          *(_OWORD *)(v43 + 3801) = v1729;
                        }
                        else
                        {
                          *(void *)(v43 + 3792) = v1727;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3800) = *(unsigned char *)(v44 + 3800);
                          uint64_t v1731 = *(void *)(v44 + 3808);
                          *(unsigned char *)(v43 + 3816) = *(unsigned char *)(v44 + 3816);
                          *(void *)(v43 + 3808) = v1731;
                        }
                        v1732 = (long long *)(v43 + 3824);
                        v1733 = (long long *)(v44 + 3824);
                        uint64_t v1734 = *(void *)(v44 + 3824);
                        if (*(void *)(v43 + 3824) == 1)
                        {
                          if (v1734 == 1)
                          {
                            long long v1735 = *v1733;
                            *(_OWORD *)(v43 + 3833) = *(_OWORD *)(v44 + 3833);
                            long long *v1732 = v1735;
                          }
                          else
                          {
                            *(void *)(v43 + 3824) = v1734;
                            *(unsigned char *)(v43 + 3832) = *(unsigned char *)(v44 + 3832);
                            uint64_t v1737 = *(void *)(v44 + 3840);
                            *(unsigned char *)(v43 + 3848) = *(unsigned char *)(v44 + 3848);
                            *(void *)(v43 + 3840) = v1737;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1734 == 1)
                        {
                          sub_10009F534(v43 + 3824);
                          long long v1736 = *(_OWORD *)(v44 + 3833);
                          long long *v1732 = *v1733;
                          *(_OWORD *)(v43 + 3833) = v1736;
                        }
                        else
                        {
                          *(void *)(v43 + 3824) = v1734;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3832) = *(unsigned char *)(v44 + 3832);
                          uint64_t v1738 = *(void *)(v44 + 3840);
                          *(unsigned char *)(v43 + 3848) = *(unsigned char *)(v44 + 3848);
                          *(void *)(v43 + 3840) = v1738;
                        }
                        v1739 = (long long *)(v43 + 3856);
                        v1740 = (long long *)(v44 + 3856);
                        uint64_t v1741 = *(void *)(v44 + 3856);
                        if (*(void *)(v43 + 3856) == 1)
                        {
                          if (v1741 == 1)
                          {
                            long long v1742 = *v1740;
                            *(_OWORD *)(v43 + 3865) = *(_OWORD *)(v44 + 3865);
                            long long *v1739 = v1742;
                          }
                          else
                          {
                            *(void *)(v43 + 3856) = v1741;
                            *(unsigned char *)(v43 + 3864) = *(unsigned char *)(v44 + 3864);
                            uint64_t v1744 = *(void *)(v44 + 3872);
                            *(unsigned char *)(v43 + 3880) = *(unsigned char *)(v44 + 3880);
                            *(void *)(v43 + 3872) = v1744;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1741 == 1)
                        {
                          sub_10009F534(v43 + 3856);
                          long long v1743 = *(_OWORD *)(v44 + 3865);
                          long long *v1739 = *v1740;
                          *(_OWORD *)(v43 + 3865) = v1743;
                        }
                        else
                        {
                          *(void *)(v43 + 3856) = v1741;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3864) = *(unsigned char *)(v44 + 3864);
                          uint64_t v1745 = *(void *)(v44 + 3872);
                          *(unsigned char *)(v43 + 3880) = *(unsigned char *)(v44 + 3880);
                          *(void *)(v43 + 3872) = v1745;
                        }
                        v1746 = (long long *)(v43 + 3888);
                        v1747 = (long long *)(v44 + 3888);
                        uint64_t v1748 = *(void *)(v44 + 3888);
                        if (*(void *)(v43 + 3888) == 1)
                        {
                          if (v1748 == 1)
                          {
                            long long v1749 = *v1747;
                            *(_OWORD *)(v43 + 3897) = *(_OWORD *)(v44 + 3897);
                            long long *v1746 = v1749;
                          }
                          else
                          {
                            *(void *)(v43 + 3888) = v1748;
                            *(unsigned char *)(v43 + 3896) = *(unsigned char *)(v44 + 3896);
                            uint64_t v1751 = *(void *)(v44 + 3904);
                            *(unsigned char *)(v43 + 3912) = *(unsigned char *)(v44 + 3912);
                            *(void *)(v43 + 3904) = v1751;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1748 == 1)
                        {
                          sub_10009F534(v43 + 3888);
                          long long v1750 = *(_OWORD *)(v44 + 3897);
                          long long *v1746 = *v1747;
                          *(_OWORD *)(v43 + 3897) = v1750;
                        }
                        else
                        {
                          *(void *)(v43 + 3888) = v1748;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3896) = *(unsigned char *)(v44 + 3896);
                          uint64_t v1752 = *(void *)(v44 + 3904);
                          *(unsigned char *)(v43 + 3912) = *(unsigned char *)(v44 + 3912);
                          *(void *)(v43 + 3904) = v1752;
                        }
                        v1753 = (long long *)(v43 + 3920);
                        v1754 = (long long *)(v44 + 3920);
                        uint64_t v1755 = *(void *)(v44 + 3920);
                        if (*(void *)(v43 + 3920) == 1)
                        {
                          if (v1755 == 1)
                          {
                            long long v1756 = *v1754;
                            *(_OWORD *)(v43 + 3929) = *(_OWORD *)(v44 + 3929);
                            long long *v1753 = v1756;
                          }
                          else
                          {
                            *(void *)(v43 + 3920) = v1755;
                            *(unsigned char *)(v43 + 3928) = *(unsigned char *)(v44 + 3928);
                            uint64_t v1758 = *(void *)(v44 + 3936);
                            *(unsigned char *)(v43 + 3944) = *(unsigned char *)(v44 + 3944);
                            *(void *)(v43 + 3936) = v1758;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1755 == 1)
                        {
                          sub_10009F534(v43 + 3920);
                          long long v1757 = *(_OWORD *)(v44 + 3929);
                          long long *v1753 = *v1754;
                          *(_OWORD *)(v43 + 3929) = v1757;
                        }
                        else
                        {
                          *(void *)(v43 + 3920) = v1755;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3928) = *(unsigned char *)(v44 + 3928);
                          uint64_t v1759 = *(void *)(v44 + 3936);
                          *(unsigned char *)(v43 + 3944) = *(unsigned char *)(v44 + 3944);
                          *(void *)(v43 + 3936) = v1759;
                        }
                        v1760 = (long long *)(v43 + 3952);
                        v1761 = (long long *)(v44 + 3952);
                        uint64_t v1762 = *(void *)(v44 + 3952);
                        if (*(void *)(v43 + 3952) == 1)
                        {
                          if (v1762 == 1)
                          {
                            long long v1763 = *v1761;
                            *(_OWORD *)(v43 + 3961) = *(_OWORD *)(v44 + 3961);
                            long long *v1760 = v1763;
                          }
                          else
                          {
                            *(void *)(v43 + 3952) = v1762;
                            *(unsigned char *)(v43 + 3960) = *(unsigned char *)(v44 + 3960);
                            uint64_t v1765 = *(void *)(v44 + 3968);
                            *(unsigned char *)(v43 + 3976) = *(unsigned char *)(v44 + 3976);
                            *(void *)(v43 + 3968) = v1765;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1762 == 1)
                        {
                          sub_10009F534(v43 + 3952);
                          long long v1764 = *(_OWORD *)(v44 + 3961);
                          long long *v1760 = *v1761;
                          *(_OWORD *)(v43 + 3961) = v1764;
                        }
                        else
                        {
                          *(void *)(v43 + 3952) = v1762;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3960) = *(unsigned char *)(v44 + 3960);
                          uint64_t v1766 = *(void *)(v44 + 3968);
                          *(unsigned char *)(v43 + 3976) = *(unsigned char *)(v44 + 3976);
                          *(void *)(v43 + 3968) = v1766;
                        }
                        v1767 = (long long *)(v43 + 3984);
                        v1768 = (long long *)(v44 + 3984);
                        uint64_t v1769 = *(void *)(v44 + 3984);
                        if (*(void *)(v43 + 3984) == 1)
                        {
                          if (v1769 == 1)
                          {
                            long long v1770 = *v1768;
                            *(_OWORD *)(v43 + 3993) = *(_OWORD *)(v44 + 3993);
                            long long *v1767 = v1770;
                          }
                          else
                          {
                            *(void *)(v43 + 3984) = v1769;
                            *(unsigned char *)(v43 + 3992) = *(unsigned char *)(v44 + 3992);
                            uint64_t v1772 = *(void *)(v44 + 4000);
                            *(unsigned char *)(v43 + 4008) = *(unsigned char *)(v44 + 4008);
                            *(void *)(v43 + 4000) = v1772;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1769 == 1)
                        {
                          sub_10009F534(v43 + 3984);
                          long long v1771 = *(_OWORD *)(v44 + 3993);
                          long long *v1767 = *v1768;
                          *(_OWORD *)(v43 + 3993) = v1771;
                        }
                        else
                        {
                          *(void *)(v43 + 3984) = v1769;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 3992) = *(unsigned char *)(v44 + 3992);
                          uint64_t v1773 = *(void *)(v44 + 4000);
                          *(unsigned char *)(v43 + 4008) = *(unsigned char *)(v44 + 4008);
                          *(void *)(v43 + 4000) = v1773;
                        }
                        v1774 = (long long *)(v43 + 4016);
                        v1775 = (long long *)(v44 + 4016);
                        uint64_t v1776 = *(void *)(v44 + 4016);
                        if (*(void *)(v43 + 4016) == 1)
                        {
                          if (v1776 == 1)
                          {
                            long long v1777 = *v1775;
                            *(_OWORD *)(v43 + 4025) = *(_OWORD *)(v44 + 4025);
                            long long *v1774 = v1777;
                          }
                          else
                          {
                            *(void *)(v43 + 4016) = v1776;
                            *(unsigned char *)(v43 + 4024) = *(unsigned char *)(v44 + 4024);
                            uint64_t v1779 = *(void *)(v44 + 4032);
                            *(unsigned char *)(v43 + 4040) = *(unsigned char *)(v44 + 4040);
                            *(void *)(v43 + 4032) = v1779;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1776 == 1)
                        {
                          sub_10009F534(v43 + 4016);
                          long long v1778 = *(_OWORD *)(v44 + 4025);
                          long long *v1774 = *v1775;
                          *(_OWORD *)(v43 + 4025) = v1778;
                        }
                        else
                        {
                          *(void *)(v43 + 4016) = v1776;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 4024) = *(unsigned char *)(v44 + 4024);
                          uint64_t v1780 = *(void *)(v44 + 4032);
                          *(unsigned char *)(v43 + 4040) = *(unsigned char *)(v44 + 4040);
                          *(void *)(v43 + 4032) = v1780;
                        }
                        v1781 = (long long *)(v43 + 4048);
                        v1782 = (long long *)(v44 + 4048);
                        uint64_t v1783 = *(void *)(v44 + 4048);
                        if (*(void *)(v43 + 4048) == 1)
                        {
                          if (v1783 == 1)
                          {
                            long long v1784 = *v1782;
                            *(_OWORD *)(v43 + 4057) = *(_OWORD *)(v44 + 4057);
                            long long *v1781 = v1784;
                          }
                          else
                          {
                            *(void *)(v43 + 4048) = v1783;
                            *(unsigned char *)(v43 + 4056) = *(unsigned char *)(v44 + 4056);
                            uint64_t v1786 = *(void *)(v44 + 4064);
                            *(unsigned char *)(v43 + 4072) = *(unsigned char *)(v44 + 4072);
                            *(void *)(v43 + 4064) = v1786;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1783 == 1)
                        {
                          sub_10009F534(v43 + 4048);
                          long long v1785 = *(_OWORD *)(v44 + 4057);
                          long long *v1781 = *v1782;
                          *(_OWORD *)(v43 + 4057) = v1785;
                        }
                        else
                        {
                          *(void *)(v43 + 4048) = v1783;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 4056) = *(unsigned char *)(v44 + 4056);
                          uint64_t v1787 = *(void *)(v44 + 4064);
                          *(unsigned char *)(v43 + 4072) = *(unsigned char *)(v44 + 4072);
                          *(void *)(v43 + 4064) = v1787;
                        }
                        v1788 = (long long *)(v43 + 4080);
                        v1789 = (long long *)(v44 + 4080);
                        uint64_t v1790 = *(void *)(v44 + 4080);
                        if (*(void *)(v43 + 4080) == 1)
                        {
                          if (v1790 == 1)
                          {
                            long long v1791 = *v1789;
                            *(_OWORD *)(v43 + 4089) = *(_OWORD *)(v44 + 4089);
                            long long *v1788 = v1791;
                          }
                          else
                          {
                            *(void *)(v43 + 4080) = v1790;
                            *(unsigned char *)(v43 + 4088) = *(unsigned char *)(v44 + 4088);
                            uint64_t v1793 = *(void *)(v44 + 4096);
                            *(unsigned char *)(v43 + 4104) = *(unsigned char *)(v44 + 4104);
                            *(void *)(v43 + 4096) = v1793;
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v1790 == 1)
                        {
                          sub_10009F534(v43 + 4080);
                          long long v1792 = *(_OWORD *)(v44 + 4089);
                          long long *v1788 = *v1789;
                          *(_OWORD *)(v43 + 4089) = v1792;
                        }
                        else
                        {
                          *(void *)(v43 + 4080) = v1790;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(unsigned char *)(v43 + 4088) = *(unsigned char *)(v44 + 4088);
                          uint64_t v1794 = *(void *)(v44 + 4096);
                          *(unsigned char *)(v43 + 4104) = *(unsigned char *)(v44 + 4104);
                          *(void *)(v43 + 4096) = v1794;
                        }
                        long long v1795 = *(_OWORD *)(v44 + 4112);
                        *(unsigned char *)(v43 + 4128) = *(unsigned char *)(v44 + 4128);
                        *(_OWORD *)(v43 + 4112) = v1795;
                        char v1796 = *(unsigned char *)(v44 + 4152);
                        *(_OWORD *)(v43 + 4136) = *(_OWORD *)(v44 + 4136);
                        *(unsigned char *)(v43 + 4152) = v1796;
                        *(unsigned char *)(v43 + 4153) = *(unsigned char *)(v44 + 4153);
                        *(unsigned char *)(v43 + 4154) = *(unsigned char *)(v44 + 4154);
                        *(unsigned char *)(v43 + 4155) = *(unsigned char *)(v44 + 4155);
                        *(unsigned char *)(v43 + 4156) = *(unsigned char *)(v44 + 4156);
                        *(unsigned char *)(v43 + 4157) = *(unsigned char *)(v44 + 4157);
                        *(unsigned char *)(v43 + 4158) = *(unsigned char *)(v44 + 4158);
                        *(unsigned char *)(v43 + 4159) = *(unsigned char *)(v44 + 4159);
                        *(void *)(v43 + 4160) = *(void *)(v44 + 4160);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        *(void *)(v43 + 4168) = *(void *)(v44 + 4168);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
LABEL_1774:
                        v1797 = (long long *)(v43 + 4176);
                        v1798 = (long long *)(v44 + 4176);
                        uint64_t v1799 = *(void *)(v44 + 4992);
                        if (*(void *)(v43 + 4992) == 1)
                        {
                          if (v1799 != 1)
                          {
                            if (*(void *)v1798 == 1)
                            {
                              long long v1800 = *v1798;
                              *(_OWORD *)(v43 + 4185) = *(_OWORD *)(v44 + 4185);
                              long long *v1797 = v1800;
                            }
                            else
                            {
                              *(void *)(v43 + 4176) = *(void *)v1798;
                              *(unsigned char *)(v43 + 4184) = *(unsigned char *)(v44 + 4184);
                              uint64_t v1803 = *(void *)(v44 + 4192);
                              *(unsigned char *)(v43 + 4200) = *(unsigned char *)(v44 + 4200);
                              *(void *)(v43 + 4192) = v1803;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1804 = *(void *)(v44 + 4208);
                            if (v1804 == 1)
                            {
                              long long v1805 = *(_OWORD *)(v44 + 4208);
                              *(_OWORD *)(v43 + 4217) = *(_OWORD *)(v44 + 4217);
                              *(_OWORD *)(v43 + 4208) = v1805;
                            }
                            else
                            {
                              *(void *)(v43 + 4208) = v1804;
                              *(unsigned char *)(v43 + 4216) = *(unsigned char *)(v44 + 4216);
                              uint64_t v1807 = *(void *)(v44 + 4224);
                              *(unsigned char *)(v43 + 4232) = *(unsigned char *)(v44 + 4232);
                              *(void *)(v43 + 4224) = v1807;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1808 = *(void *)(v44 + 4240);
                            if (v1808 == 1)
                            {
                              long long v1809 = *(_OWORD *)(v44 + 4240);
                              *(_OWORD *)(v43 + 4249) = *(_OWORD *)(v44 + 4249);
                              *(_OWORD *)(v43 + 4240) = v1809;
                            }
                            else
                            {
                              *(void *)(v43 + 4240) = v1808;
                              *(unsigned char *)(v43 + 4248) = *(unsigned char *)(v44 + 4248);
                              uint64_t v1810 = *(void *)(v44 + 4256);
                              *(unsigned char *)(v43 + 4264) = *(unsigned char *)(v44 + 4264);
                              *(void *)(v43 + 4256) = v1810;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1811 = *(void *)(v44 + 4272);
                            if (v1811 == 1)
                            {
                              long long v1812 = *(_OWORD *)(v44 + 4272);
                              *(_OWORD *)(v43 + 4281) = *(_OWORD *)(v44 + 4281);
                              *(_OWORD *)(v43 + 4272) = v1812;
                            }
                            else
                            {
                              *(void *)(v43 + 4272) = v1811;
                              *(unsigned char *)(v43 + 4280) = *(unsigned char *)(v44 + 4280);
                              uint64_t v1813 = *(void *)(v44 + 4288);
                              *(unsigned char *)(v43 + 4296) = *(unsigned char *)(v44 + 4296);
                              *(void *)(v43 + 4288) = v1813;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1814 = *(void *)(v44 + 4304);
                            if (v1814 == 1)
                            {
                              long long v1815 = *(_OWORD *)(v44 + 4304);
                              *(_OWORD *)(v43 + 4313) = *(_OWORD *)(v44 + 4313);
                              *(_OWORD *)(v43 + 4304) = v1815;
                            }
                            else
                            {
                              *(void *)(v43 + 4304) = v1814;
                              *(unsigned char *)(v43 + 4312) = *(unsigned char *)(v44 + 4312);
                              uint64_t v1816 = *(void *)(v44 + 4320);
                              *(unsigned char *)(v43 + 4328) = *(unsigned char *)(v44 + 4328);
                              *(void *)(v43 + 4320) = v1816;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1817 = *(void *)(v44 + 4336);
                            if (v1817 == 1)
                            {
                              long long v1818 = *(_OWORD *)(v44 + 4336);
                              *(_OWORD *)(v43 + 4345) = *(_OWORD *)(v44 + 4345);
                              *(_OWORD *)(v43 + 4336) = v1818;
                            }
                            else
                            {
                              *(void *)(v43 + 4336) = v1817;
                              *(unsigned char *)(v43 + 4344) = *(unsigned char *)(v44 + 4344);
                              uint64_t v1819 = *(void *)(v44 + 4352);
                              *(unsigned char *)(v43 + 4360) = *(unsigned char *)(v44 + 4360);
                              *(void *)(v43 + 4352) = v1819;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1820 = *(void *)(v44 + 4368);
                            if (v1820 == 1)
                            {
                              long long v1821 = *(_OWORD *)(v44 + 4368);
                              *(_OWORD *)(v43 + 4377) = *(_OWORD *)(v44 + 4377);
                              *(_OWORD *)(v43 + 4368) = v1821;
                            }
                            else
                            {
                              *(void *)(v43 + 4368) = v1820;
                              *(unsigned char *)(v43 + 4376) = *(unsigned char *)(v44 + 4376);
                              uint64_t v1822 = *(void *)(v44 + 4384);
                              *(unsigned char *)(v43 + 4392) = *(unsigned char *)(v44 + 4392);
                              *(void *)(v43 + 4384) = v1822;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1823 = *(void *)(v44 + 4400);
                            if (v1823 == 1)
                            {
                              long long v1824 = *(_OWORD *)(v44 + 4400);
                              *(_OWORD *)(v43 + 4409) = *(_OWORD *)(v44 + 4409);
                              *(_OWORD *)(v43 + 4400) = v1824;
                            }
                            else
                            {
                              *(void *)(v43 + 4400) = v1823;
                              *(unsigned char *)(v43 + 4408) = *(unsigned char *)(v44 + 4408);
                              uint64_t v1825 = *(void *)(v44 + 4416);
                              *(unsigned char *)(v43 + 4424) = *(unsigned char *)(v44 + 4424);
                              *(void *)(v43 + 4416) = v1825;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1826 = *(void *)(v44 + 4432);
                            if (v1826 == 1)
                            {
                              long long v1827 = *(_OWORD *)(v44 + 4432);
                              *(_OWORD *)(v43 + 4441) = *(_OWORD *)(v44 + 4441);
                              *(_OWORD *)(v43 + 4432) = v1827;
                            }
                            else
                            {
                              *(void *)(v43 + 4432) = v1826;
                              *(unsigned char *)(v43 + 4440) = *(unsigned char *)(v44 + 4440);
                              uint64_t v1828 = *(void *)(v44 + 4448);
                              *(unsigned char *)(v43 + 4456) = *(unsigned char *)(v44 + 4456);
                              *(void *)(v43 + 4448) = v1828;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1829 = *(void *)(v44 + 4464);
                            if (v1829 == 1)
                            {
                              long long v1830 = *(_OWORD *)(v44 + 4464);
                              *(_OWORD *)(v43 + 4473) = *(_OWORD *)(v44 + 4473);
                              *(_OWORD *)(v43 + 4464) = v1830;
                            }
                            else
                            {
                              *(void *)(v43 + 4464) = v1829;
                              *(unsigned char *)(v43 + 4472) = *(unsigned char *)(v44 + 4472);
                              uint64_t v1831 = *(void *)(v44 + 4480);
                              *(unsigned char *)(v43 + 4488) = *(unsigned char *)(v44 + 4488);
                              *(void *)(v43 + 4480) = v1831;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1832 = *(void *)(v44 + 4496);
                            if (v1832 == 1)
                            {
                              long long v1833 = *(_OWORD *)(v44 + 4496);
                              *(_OWORD *)(v43 + 4505) = *(_OWORD *)(v44 + 4505);
                              *(_OWORD *)(v43 + 4496) = v1833;
                            }
                            else
                            {
                              *(void *)(v43 + 4496) = v1832;
                              *(unsigned char *)(v43 + 4504) = *(unsigned char *)(v44 + 4504);
                              uint64_t v1834 = *(void *)(v44 + 4512);
                              *(unsigned char *)(v43 + 4520) = *(unsigned char *)(v44 + 4520);
                              *(void *)(v43 + 4512) = v1834;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1835 = *(void *)(v44 + 4528);
                            if (v1835 == 1)
                            {
                              long long v1836 = *(_OWORD *)(v44 + 4528);
                              *(_OWORD *)(v43 + 4537) = *(_OWORD *)(v44 + 4537);
                              *(_OWORD *)(v43 + 4528) = v1836;
                            }
                            else
                            {
                              *(void *)(v43 + 4528) = v1835;
                              *(unsigned char *)(v43 + 4536) = *(unsigned char *)(v44 + 4536);
                              uint64_t v1837 = *(void *)(v44 + 4544);
                              *(unsigned char *)(v43 + 4552) = *(unsigned char *)(v44 + 4552);
                              *(void *)(v43 + 4544) = v1837;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1838 = *(void *)(v44 + 4560);
                            if (v1838 == 1)
                            {
                              long long v1839 = *(_OWORD *)(v44 + 4560);
                              *(_OWORD *)(v43 + 4569) = *(_OWORD *)(v44 + 4569);
                              *(_OWORD *)(v43 + 4560) = v1839;
                            }
                            else
                            {
                              *(void *)(v43 + 4560) = v1838;
                              *(unsigned char *)(v43 + 4568) = *(unsigned char *)(v44 + 4568);
                              uint64_t v1840 = *(void *)(v44 + 4576);
                              *(unsigned char *)(v43 + 4584) = *(unsigned char *)(v44 + 4584);
                              *(void *)(v43 + 4576) = v1840;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1841 = *(void *)(v44 + 4592);
                            if (v1841 == 1)
                            {
                              long long v1842 = *(_OWORD *)(v44 + 4592);
                              *(_OWORD *)(v43 + 4601) = *(_OWORD *)(v44 + 4601);
                              *(_OWORD *)(v43 + 4592) = v1842;
                            }
                            else
                            {
                              *(void *)(v43 + 4592) = v1841;
                              *(unsigned char *)(v43 + 4600) = *(unsigned char *)(v44 + 4600);
                              uint64_t v1843 = *(void *)(v44 + 4608);
                              *(unsigned char *)(v43 + 4616) = *(unsigned char *)(v44 + 4616);
                              *(void *)(v43 + 4608) = v1843;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1844 = *(void *)(v44 + 4624);
                            if (v1844 == 1)
                            {
                              long long v1845 = *(_OWORD *)(v44 + 4624);
                              *(_OWORD *)(v43 + 4633) = *(_OWORD *)(v44 + 4633);
                              *(_OWORD *)(v43 + 4624) = v1845;
                            }
                            else
                            {
                              *(void *)(v43 + 4624) = v1844;
                              *(unsigned char *)(v43 + 4632) = *(unsigned char *)(v44 + 4632);
                              uint64_t v1846 = *(void *)(v44 + 4640);
                              *(unsigned char *)(v43 + 4648) = *(unsigned char *)(v44 + 4648);
                              *(void *)(v43 + 4640) = v1846;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1847 = *(void *)(v44 + 4656);
                            if (v1847 == 1)
                            {
                              long long v1848 = *(_OWORD *)(v44 + 4656);
                              *(_OWORD *)(v43 + 4665) = *(_OWORD *)(v44 + 4665);
                              *(_OWORD *)(v43 + 4656) = v1848;
                            }
                            else
                            {
                              *(void *)(v43 + 4656) = v1847;
                              *(unsigned char *)(v43 + 4664) = *(unsigned char *)(v44 + 4664);
                              uint64_t v1849 = *(void *)(v44 + 4672);
                              *(unsigned char *)(v43 + 4680) = *(unsigned char *)(v44 + 4680);
                              *(void *)(v43 + 4672) = v1849;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1850 = *(void *)(v44 + 4688);
                            if (v1850 == 1)
                            {
                              long long v1851 = *(_OWORD *)(v44 + 4688);
                              *(_OWORD *)(v43 + 4697) = *(_OWORD *)(v44 + 4697);
                              *(_OWORD *)(v43 + 4688) = v1851;
                            }
                            else
                            {
                              *(void *)(v43 + 4688) = v1850;
                              *(unsigned char *)(v43 + 4696) = *(unsigned char *)(v44 + 4696);
                              uint64_t v1852 = *(void *)(v44 + 4704);
                              *(unsigned char *)(v43 + 4712) = *(unsigned char *)(v44 + 4712);
                              *(void *)(v43 + 4704) = v1852;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1853 = *(void *)(v44 + 4720);
                            if (v1853 == 1)
                            {
                              long long v1854 = *(_OWORD *)(v44 + 4720);
                              *(_OWORD *)(v43 + 4729) = *(_OWORD *)(v44 + 4729);
                              *(_OWORD *)(v43 + 4720) = v1854;
                            }
                            else
                            {
                              *(void *)(v43 + 4720) = v1853;
                              *(unsigned char *)(v43 + 4728) = *(unsigned char *)(v44 + 4728);
                              uint64_t v1855 = *(void *)(v44 + 4736);
                              *(unsigned char *)(v43 + 4744) = *(unsigned char *)(v44 + 4744);
                              *(void *)(v43 + 4736) = v1855;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1856 = *(void *)(v44 + 4752);
                            if (v1856 == 1)
                            {
                              long long v1857 = *(_OWORD *)(v44 + 4752);
                              *(_OWORD *)(v43 + 4761) = *(_OWORD *)(v44 + 4761);
                              *(_OWORD *)(v43 + 4752) = v1857;
                            }
                            else
                            {
                              *(void *)(v43 + 4752) = v1856;
                              *(unsigned char *)(v43 + 4760) = *(unsigned char *)(v44 + 4760);
                              uint64_t v1858 = *(void *)(v44 + 4768);
                              *(unsigned char *)(v43 + 4776) = *(unsigned char *)(v44 + 4776);
                              *(void *)(v43 + 4768) = v1858;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1859 = *(void *)(v44 + 4784);
                            if (v1859 == 1)
                            {
                              long long v1860 = *(_OWORD *)(v44 + 4784);
                              *(_OWORD *)(v43 + 4793) = *(_OWORD *)(v44 + 4793);
                              *(_OWORD *)(v43 + 4784) = v1860;
                            }
                            else
                            {
                              *(void *)(v43 + 4784) = v1859;
                              *(unsigned char *)(v43 + 4792) = *(unsigned char *)(v44 + 4792);
                              uint64_t v1861 = *(void *)(v44 + 4800);
                              *(unsigned char *)(v43 + 4808) = *(unsigned char *)(v44 + 4808);
                              *(void *)(v43 + 4800) = v1861;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1862 = *(void *)(v44 + 4816);
                            if (v1862 == 1)
                            {
                              long long v1863 = *(_OWORD *)(v44 + 4816);
                              *(_OWORD *)(v43 + 4825) = *(_OWORD *)(v44 + 4825);
                              *(_OWORD *)(v43 + 4816) = v1863;
                            }
                            else
                            {
                              *(void *)(v43 + 4816) = v1862;
                              *(unsigned char *)(v43 + 4824) = *(unsigned char *)(v44 + 4824);
                              uint64_t v1864 = *(void *)(v44 + 4832);
                              *(unsigned char *)(v43 + 4840) = *(unsigned char *)(v44 + 4840);
                              *(void *)(v43 + 4832) = v1864;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1865 = *(void *)(v44 + 4848);
                            if (v1865 == 1)
                            {
                              long long v1866 = *(_OWORD *)(v44 + 4848);
                              *(_OWORD *)(v43 + 4857) = *(_OWORD *)(v44 + 4857);
                              *(_OWORD *)(v43 + 4848) = v1866;
                            }
                            else
                            {
                              *(void *)(v43 + 4848) = v1865;
                              *(unsigned char *)(v43 + 4856) = *(unsigned char *)(v44 + 4856);
                              uint64_t v1867 = *(void *)(v44 + 4864);
                              *(unsigned char *)(v43 + 4872) = *(unsigned char *)(v44 + 4872);
                              *(void *)(v43 + 4864) = v1867;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1868 = *(void *)(v44 + 4880);
                            if (v1868 == 1)
                            {
                              long long v1869 = *(_OWORD *)(v44 + 4880);
                              *(_OWORD *)(v43 + 4889) = *(_OWORD *)(v44 + 4889);
                              *(_OWORD *)(v43 + 4880) = v1869;
                            }
                            else
                            {
                              *(void *)(v43 + 4880) = v1868;
                              *(unsigned char *)(v43 + 4888) = *(unsigned char *)(v44 + 4888);
                              uint64_t v1870 = *(void *)(v44 + 4896);
                              *(unsigned char *)(v43 + 4904) = *(unsigned char *)(v44 + 4904);
                              *(void *)(v43 + 4896) = v1870;
                              swift_bridgeObjectRetain();
                            }
                            uint64_t v1871 = *(void *)(v44 + 4912);
                            if (v1871 == 1)
                            {
                              long long v1872 = *(_OWORD *)(v44 + 4912);
                              *(_OWORD *)(v43 + 4921) = *(_OWORD *)(v44 + 4921);
                              *(_OWORD *)(v43 + 4912) = v1872;
                            }
                            else
                            {
                              *(void *)(v43 + 4912) = v1871;
                              *(unsigned char *)(v43 + 4920) = *(unsigned char *)(v44 + 4920);
                              uint64_t v1873 = *(void *)(v44 + 4928);
                              *(unsigned char *)(v43 + 4936) = *(unsigned char *)(v44 + 4936);
                              *(void *)(v43 + 4928) = v1873;
                              swift_bridgeObjectRetain();
                            }
                            long long v1874 = *(_OWORD *)(v44 + 4944);
                            *(unsigned char *)(v43 + 4960) = *(unsigned char *)(v44 + 4960);
                            *(_OWORD *)(v43 + 4944) = v1874;
                            char v1875 = *(unsigned char *)(v44 + 4984);
                            *(_OWORD *)(v43 + 4968) = *(_OWORD *)(v44 + 4968);
                            *(unsigned char *)(v43 + 4984) = v1875;
                            *(unsigned char *)(v43 + 4985) = *(unsigned char *)(v44 + 4985);
                            *(unsigned char *)(v43 + 4986) = *(unsigned char *)(v44 + 4986);
                            *(unsigned char *)(v43 + 4987) = *(unsigned char *)(v44 + 4987);
                            *(unsigned char *)(v43 + 4988) = *(unsigned char *)(v44 + 4988);
                            *(unsigned char *)(v43 + 4989) = *(unsigned char *)(v44 + 4989);
                            *(unsigned char *)(v43 + 4990) = *(unsigned char *)(v44 + 4990);
                            *(unsigned char *)(v43 + 4991) = *(unsigned char *)(v44 + 4991);
                            *(void *)(v43 + 4992) = *(void *)(v44 + 4992);
                            *(void *)(v43 + 5000) = *(void *)(v44 + 5000);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            goto LABEL_2021;
                          }
                        }
                        else
                        {
                          if (v1799 != 1)
                          {
                            uint64_t v1801 = *(void *)v1798;
                            if (*(void *)v1797 == 1)
                            {
                              if (v1801 == 1)
                              {
                                long long v1802 = *v1798;
                                *(_OWORD *)(v43 + 4185) = *(_OWORD *)(v44 + 4185);
                                long long *v1797 = v1802;
                              }
                              else
                              {
                                *(void *)(v43 + 4176) = v1801;
                                *(unsigned char *)(v43 + 4184) = *(unsigned char *)(v44 + 4184);
                                uint64_t v1876 = *(void *)(v44 + 4192);
                                *(unsigned char *)(v43 + 4200) = *(unsigned char *)(v44 + 4200);
                                *(void *)(v43 + 4192) = v1876;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1801 == 1)
                            {
                              sub_10009F534(v43 + 4176);
                              long long v1806 = *(_OWORD *)(v44 + 4185);
                              long long *v1797 = *v1798;
                              *(_OWORD *)(v43 + 4185) = v1806;
                            }
                            else
                            {
                              *(void *)(v43 + 4176) = v1801;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4184) = *(unsigned char *)(v44 + 4184);
                              uint64_t v1877 = *(void *)(v44 + 4192);
                              *(unsigned char *)(v43 + 4200) = *(unsigned char *)(v44 + 4200);
                              *(void *)(v43 + 4192) = v1877;
                            }
                            v1878 = (long long *)(v43 + 4208);
                            v1879 = (long long *)(v44 + 4208);
                            uint64_t v1880 = *(void *)(v44 + 4208);
                            if (*(void *)(v43 + 4208) == 1)
                            {
                              if (v1880 == 1)
                              {
                                long long v1881 = *v1879;
                                *(_OWORD *)(v43 + 4217) = *(_OWORD *)(v44 + 4217);
                                long long *v1878 = v1881;
                              }
                              else
                              {
                                *(void *)(v43 + 4208) = v1880;
                                *(unsigned char *)(v43 + 4216) = *(unsigned char *)(v44 + 4216);
                                uint64_t v1883 = *(void *)(v44 + 4224);
                                *(unsigned char *)(v43 + 4232) = *(unsigned char *)(v44 + 4232);
                                *(void *)(v43 + 4224) = v1883;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1880 == 1)
                            {
                              sub_10009F534(v43 + 4208);
                              long long v1882 = *(_OWORD *)(v44 + 4217);
                              long long *v1878 = *v1879;
                              *(_OWORD *)(v43 + 4217) = v1882;
                            }
                            else
                            {
                              *(void *)(v43 + 4208) = v1880;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4216) = *(unsigned char *)(v44 + 4216);
                              uint64_t v1884 = *(void *)(v44 + 4224);
                              *(unsigned char *)(v43 + 4232) = *(unsigned char *)(v44 + 4232);
                              *(void *)(v43 + 4224) = v1884;
                            }
                            v1885 = (long long *)(v43 + 4240);
                            v1886 = (long long *)(v44 + 4240);
                            uint64_t v1887 = *(void *)(v44 + 4240);
                            if (*(void *)(v43 + 4240) == 1)
                            {
                              if (v1887 == 1)
                              {
                                long long v1888 = *v1886;
                                *(_OWORD *)(v43 + 4249) = *(_OWORD *)(v44 + 4249);
                                long long *v1885 = v1888;
                              }
                              else
                              {
                                *(void *)(v43 + 4240) = v1887;
                                *(unsigned char *)(v43 + 4248) = *(unsigned char *)(v44 + 4248);
                                uint64_t v1890 = *(void *)(v44 + 4256);
                                *(unsigned char *)(v43 + 4264) = *(unsigned char *)(v44 + 4264);
                                *(void *)(v43 + 4256) = v1890;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1887 == 1)
                            {
                              sub_10009F534(v43 + 4240);
                              long long v1889 = *(_OWORD *)(v44 + 4249);
                              long long *v1885 = *v1886;
                              *(_OWORD *)(v43 + 4249) = v1889;
                            }
                            else
                            {
                              *(void *)(v43 + 4240) = v1887;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4248) = *(unsigned char *)(v44 + 4248);
                              uint64_t v1891 = *(void *)(v44 + 4256);
                              *(unsigned char *)(v43 + 4264) = *(unsigned char *)(v44 + 4264);
                              *(void *)(v43 + 4256) = v1891;
                            }
                            v1892 = (long long *)(v43 + 4272);
                            v1893 = (long long *)(v44 + 4272);
                            uint64_t v1894 = *(void *)(v44 + 4272);
                            if (*(void *)(v43 + 4272) == 1)
                            {
                              if (v1894 == 1)
                              {
                                long long v1895 = *v1893;
                                *(_OWORD *)(v43 + 4281) = *(_OWORD *)(v44 + 4281);
                                long long *v1892 = v1895;
                              }
                              else
                              {
                                *(void *)(v43 + 4272) = v1894;
                                *(unsigned char *)(v43 + 4280) = *(unsigned char *)(v44 + 4280);
                                uint64_t v1897 = *(void *)(v44 + 4288);
                                *(unsigned char *)(v43 + 4296) = *(unsigned char *)(v44 + 4296);
                                *(void *)(v43 + 4288) = v1897;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1894 == 1)
                            {
                              sub_10009F534(v43 + 4272);
                              long long v1896 = *(_OWORD *)(v44 + 4281);
                              long long *v1892 = *v1893;
                              *(_OWORD *)(v43 + 4281) = v1896;
                            }
                            else
                            {
                              *(void *)(v43 + 4272) = v1894;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4280) = *(unsigned char *)(v44 + 4280);
                              uint64_t v1898 = *(void *)(v44 + 4288);
                              *(unsigned char *)(v43 + 4296) = *(unsigned char *)(v44 + 4296);
                              *(void *)(v43 + 4288) = v1898;
                            }
                            v1899 = (long long *)(v43 + 4304);
                            v1900 = (long long *)(v44 + 4304);
                            uint64_t v1901 = *(void *)(v44 + 4304);
                            if (*(void *)(v43 + 4304) == 1)
                            {
                              if (v1901 == 1)
                              {
                                long long v1902 = *v1900;
                                *(_OWORD *)(v43 + 4313) = *(_OWORD *)(v44 + 4313);
                                long long *v1899 = v1902;
                              }
                              else
                              {
                                *(void *)(v43 + 4304) = v1901;
                                *(unsigned char *)(v43 + 4312) = *(unsigned char *)(v44 + 4312);
                                uint64_t v1904 = *(void *)(v44 + 4320);
                                *(unsigned char *)(v43 + 4328) = *(unsigned char *)(v44 + 4328);
                                *(void *)(v43 + 4320) = v1904;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1901 == 1)
                            {
                              sub_10009F534(v43 + 4304);
                              long long v1903 = *(_OWORD *)(v44 + 4313);
                              long long *v1899 = *v1900;
                              *(_OWORD *)(v43 + 4313) = v1903;
                            }
                            else
                            {
                              *(void *)(v43 + 4304) = v1901;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4312) = *(unsigned char *)(v44 + 4312);
                              uint64_t v1905 = *(void *)(v44 + 4320);
                              *(unsigned char *)(v43 + 4328) = *(unsigned char *)(v44 + 4328);
                              *(void *)(v43 + 4320) = v1905;
                            }
                            v1906 = (long long *)(v43 + 4336);
                            v1907 = (long long *)(v44 + 4336);
                            uint64_t v1908 = *(void *)(v44 + 4336);
                            if (*(void *)(v43 + 4336) == 1)
                            {
                              if (v1908 == 1)
                              {
                                long long v1909 = *v1907;
                                *(_OWORD *)(v43 + 4345) = *(_OWORD *)(v44 + 4345);
                                long long *v1906 = v1909;
                              }
                              else
                              {
                                *(void *)(v43 + 4336) = v1908;
                                *(unsigned char *)(v43 + 4344) = *(unsigned char *)(v44 + 4344);
                                uint64_t v1911 = *(void *)(v44 + 4352);
                                *(unsigned char *)(v43 + 4360) = *(unsigned char *)(v44 + 4360);
                                *(void *)(v43 + 4352) = v1911;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1908 == 1)
                            {
                              sub_10009F534(v43 + 4336);
                              long long v1910 = *(_OWORD *)(v44 + 4345);
                              long long *v1906 = *v1907;
                              *(_OWORD *)(v43 + 4345) = v1910;
                            }
                            else
                            {
                              *(void *)(v43 + 4336) = v1908;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4344) = *(unsigned char *)(v44 + 4344);
                              uint64_t v1912 = *(void *)(v44 + 4352);
                              *(unsigned char *)(v43 + 4360) = *(unsigned char *)(v44 + 4360);
                              *(void *)(v43 + 4352) = v1912;
                            }
                            v1913 = (long long *)(v43 + 4368);
                            v1914 = (long long *)(v44 + 4368);
                            uint64_t v1915 = *(void *)(v44 + 4368);
                            if (*(void *)(v43 + 4368) == 1)
                            {
                              if (v1915 == 1)
                              {
                                long long v1916 = *v1914;
                                *(_OWORD *)(v43 + 4377) = *(_OWORD *)(v44 + 4377);
                                long long *v1913 = v1916;
                              }
                              else
                              {
                                *(void *)(v43 + 4368) = v1915;
                                *(unsigned char *)(v43 + 4376) = *(unsigned char *)(v44 + 4376);
                                uint64_t v1918 = *(void *)(v44 + 4384);
                                *(unsigned char *)(v43 + 4392) = *(unsigned char *)(v44 + 4392);
                                *(void *)(v43 + 4384) = v1918;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1915 == 1)
                            {
                              sub_10009F534(v43 + 4368);
                              long long v1917 = *(_OWORD *)(v44 + 4377);
                              long long *v1913 = *v1914;
                              *(_OWORD *)(v43 + 4377) = v1917;
                            }
                            else
                            {
                              *(void *)(v43 + 4368) = v1915;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4376) = *(unsigned char *)(v44 + 4376);
                              uint64_t v1919 = *(void *)(v44 + 4384);
                              *(unsigned char *)(v43 + 4392) = *(unsigned char *)(v44 + 4392);
                              *(void *)(v43 + 4384) = v1919;
                            }
                            v1920 = (long long *)(v43 + 4400);
                            v1921 = (long long *)(v44 + 4400);
                            uint64_t v1922 = *(void *)(v44 + 4400);
                            if (*(void *)(v43 + 4400) == 1)
                            {
                              if (v1922 == 1)
                              {
                                long long v1923 = *v1921;
                                *(_OWORD *)(v43 + 4409) = *(_OWORD *)(v44 + 4409);
                                long long *v1920 = v1923;
                              }
                              else
                              {
                                *(void *)(v43 + 4400) = v1922;
                                *(unsigned char *)(v43 + 4408) = *(unsigned char *)(v44 + 4408);
                                uint64_t v1925 = *(void *)(v44 + 4416);
                                *(unsigned char *)(v43 + 4424) = *(unsigned char *)(v44 + 4424);
                                *(void *)(v43 + 4416) = v1925;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1922 == 1)
                            {
                              sub_10009F534(v43 + 4400);
                              long long v1924 = *(_OWORD *)(v44 + 4409);
                              long long *v1920 = *v1921;
                              *(_OWORD *)(v43 + 4409) = v1924;
                            }
                            else
                            {
                              *(void *)(v43 + 4400) = v1922;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4408) = *(unsigned char *)(v44 + 4408);
                              uint64_t v1926 = *(void *)(v44 + 4416);
                              *(unsigned char *)(v43 + 4424) = *(unsigned char *)(v44 + 4424);
                              *(void *)(v43 + 4416) = v1926;
                            }
                            v1927 = (long long *)(v43 + 4432);
                            v1928 = (long long *)(v44 + 4432);
                            uint64_t v1929 = *(void *)(v44 + 4432);
                            if (*(void *)(v43 + 4432) == 1)
                            {
                              if (v1929 == 1)
                              {
                                long long v1930 = *v1928;
                                *(_OWORD *)(v43 + 4441) = *(_OWORD *)(v44 + 4441);
                                long long *v1927 = v1930;
                              }
                              else
                              {
                                *(void *)(v43 + 4432) = v1929;
                                *(unsigned char *)(v43 + 4440) = *(unsigned char *)(v44 + 4440);
                                uint64_t v1932 = *(void *)(v44 + 4448);
                                *(unsigned char *)(v43 + 4456) = *(unsigned char *)(v44 + 4456);
                                *(void *)(v43 + 4448) = v1932;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1929 == 1)
                            {
                              sub_10009F534(v43 + 4432);
                              long long v1931 = *(_OWORD *)(v44 + 4441);
                              long long *v1927 = *v1928;
                              *(_OWORD *)(v43 + 4441) = v1931;
                            }
                            else
                            {
                              *(void *)(v43 + 4432) = v1929;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4440) = *(unsigned char *)(v44 + 4440);
                              uint64_t v1933 = *(void *)(v44 + 4448);
                              *(unsigned char *)(v43 + 4456) = *(unsigned char *)(v44 + 4456);
                              *(void *)(v43 + 4448) = v1933;
                            }
                            v1934 = (long long *)(v43 + 4464);
                            v1935 = (long long *)(v44 + 4464);
                            uint64_t v1936 = *(void *)(v44 + 4464);
                            if (*(void *)(v43 + 4464) == 1)
                            {
                              if (v1936 == 1)
                              {
                                long long v1937 = *v1935;
                                *(_OWORD *)(v43 + 4473) = *(_OWORD *)(v44 + 4473);
                                long long *v1934 = v1937;
                              }
                              else
                              {
                                *(void *)(v43 + 4464) = v1936;
                                *(unsigned char *)(v43 + 4472) = *(unsigned char *)(v44 + 4472);
                                uint64_t v1939 = *(void *)(v44 + 4480);
                                *(unsigned char *)(v43 + 4488) = *(unsigned char *)(v44 + 4488);
                                *(void *)(v43 + 4480) = v1939;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1936 == 1)
                            {
                              sub_10009F534(v43 + 4464);
                              long long v1938 = *(_OWORD *)(v44 + 4473);
                              long long *v1934 = *v1935;
                              *(_OWORD *)(v43 + 4473) = v1938;
                            }
                            else
                            {
                              *(void *)(v43 + 4464) = v1936;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4472) = *(unsigned char *)(v44 + 4472);
                              uint64_t v1940 = *(void *)(v44 + 4480);
                              *(unsigned char *)(v43 + 4488) = *(unsigned char *)(v44 + 4488);
                              *(void *)(v43 + 4480) = v1940;
                            }
                            v1941 = (long long *)(v43 + 4496);
                            v1942 = (long long *)(v44 + 4496);
                            uint64_t v1943 = *(void *)(v44 + 4496);
                            if (*(void *)(v43 + 4496) == 1)
                            {
                              if (v1943 == 1)
                              {
                                long long v1944 = *v1942;
                                *(_OWORD *)(v43 + 4505) = *(_OWORD *)(v44 + 4505);
                                long long *v1941 = v1944;
                              }
                              else
                              {
                                *(void *)(v43 + 4496) = v1943;
                                *(unsigned char *)(v43 + 4504) = *(unsigned char *)(v44 + 4504);
                                uint64_t v1946 = *(void *)(v44 + 4512);
                                *(unsigned char *)(v43 + 4520) = *(unsigned char *)(v44 + 4520);
                                *(void *)(v43 + 4512) = v1946;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1943 == 1)
                            {
                              sub_10009F534(v43 + 4496);
                              long long v1945 = *(_OWORD *)(v44 + 4505);
                              long long *v1941 = *v1942;
                              *(_OWORD *)(v43 + 4505) = v1945;
                            }
                            else
                            {
                              *(void *)(v43 + 4496) = v1943;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4504) = *(unsigned char *)(v44 + 4504);
                              uint64_t v1947 = *(void *)(v44 + 4512);
                              *(unsigned char *)(v43 + 4520) = *(unsigned char *)(v44 + 4520);
                              *(void *)(v43 + 4512) = v1947;
                            }
                            v1948 = (long long *)(v43 + 4528);
                            v1949 = (long long *)(v44 + 4528);
                            uint64_t v1950 = *(void *)(v44 + 4528);
                            if (*(void *)(v43 + 4528) == 1)
                            {
                              if (v1950 == 1)
                              {
                                long long v1951 = *v1949;
                                *(_OWORD *)(v43 + 4537) = *(_OWORD *)(v44 + 4537);
                                long long *v1948 = v1951;
                              }
                              else
                              {
                                *(void *)(v43 + 4528) = v1950;
                                *(unsigned char *)(v43 + 4536) = *(unsigned char *)(v44 + 4536);
                                uint64_t v1953 = *(void *)(v44 + 4544);
                                *(unsigned char *)(v43 + 4552) = *(unsigned char *)(v44 + 4552);
                                *(void *)(v43 + 4544) = v1953;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1950 == 1)
                            {
                              sub_10009F534(v43 + 4528);
                              long long v1952 = *(_OWORD *)(v44 + 4537);
                              long long *v1948 = *v1949;
                              *(_OWORD *)(v43 + 4537) = v1952;
                            }
                            else
                            {
                              *(void *)(v43 + 4528) = v1950;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4536) = *(unsigned char *)(v44 + 4536);
                              uint64_t v1954 = *(void *)(v44 + 4544);
                              *(unsigned char *)(v43 + 4552) = *(unsigned char *)(v44 + 4552);
                              *(void *)(v43 + 4544) = v1954;
                            }
                            v1955 = (long long *)(v43 + 4560);
                            v1956 = (long long *)(v44 + 4560);
                            uint64_t v1957 = *(void *)(v44 + 4560);
                            if (*(void *)(v43 + 4560) == 1)
                            {
                              if (v1957 == 1)
                              {
                                long long v1958 = *v1956;
                                *(_OWORD *)(v43 + 4569) = *(_OWORD *)(v44 + 4569);
                                long long *v1955 = v1958;
                              }
                              else
                              {
                                *(void *)(v43 + 4560) = v1957;
                                *(unsigned char *)(v43 + 4568) = *(unsigned char *)(v44 + 4568);
                                uint64_t v1960 = *(void *)(v44 + 4576);
                                *(unsigned char *)(v43 + 4584) = *(unsigned char *)(v44 + 4584);
                                *(void *)(v43 + 4576) = v1960;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1957 == 1)
                            {
                              sub_10009F534(v43 + 4560);
                              long long v1959 = *(_OWORD *)(v44 + 4569);
                              long long *v1955 = *v1956;
                              *(_OWORD *)(v43 + 4569) = v1959;
                            }
                            else
                            {
                              *(void *)(v43 + 4560) = v1957;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4568) = *(unsigned char *)(v44 + 4568);
                              uint64_t v1961 = *(void *)(v44 + 4576);
                              *(unsigned char *)(v43 + 4584) = *(unsigned char *)(v44 + 4584);
                              *(void *)(v43 + 4576) = v1961;
                            }
                            v1962 = (long long *)(v43 + 4592);
                            v1963 = (long long *)(v44 + 4592);
                            uint64_t v1964 = *(void *)(v44 + 4592);
                            if (*(void *)(v43 + 4592) == 1)
                            {
                              if (v1964 == 1)
                              {
                                long long v1965 = *v1963;
                                *(_OWORD *)(v43 + 4601) = *(_OWORD *)(v44 + 4601);
                                long long *v1962 = v1965;
                              }
                              else
                              {
                                *(void *)(v43 + 4592) = v1964;
                                *(unsigned char *)(v43 + 4600) = *(unsigned char *)(v44 + 4600);
                                uint64_t v1967 = *(void *)(v44 + 4608);
                                *(unsigned char *)(v43 + 4616) = *(unsigned char *)(v44 + 4616);
                                *(void *)(v43 + 4608) = v1967;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1964 == 1)
                            {
                              sub_10009F534(v43 + 4592);
                              long long v1966 = *(_OWORD *)(v44 + 4601);
                              long long *v1962 = *v1963;
                              *(_OWORD *)(v43 + 4601) = v1966;
                            }
                            else
                            {
                              *(void *)(v43 + 4592) = v1964;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4600) = *(unsigned char *)(v44 + 4600);
                              uint64_t v1968 = *(void *)(v44 + 4608);
                              *(unsigned char *)(v43 + 4616) = *(unsigned char *)(v44 + 4616);
                              *(void *)(v43 + 4608) = v1968;
                            }
                            v1969 = (long long *)(v43 + 4624);
                            v1970 = (long long *)(v44 + 4624);
                            uint64_t v1971 = *(void *)(v44 + 4624);
                            if (*(void *)(v43 + 4624) == 1)
                            {
                              if (v1971 == 1)
                              {
                                long long v1972 = *v1970;
                                *(_OWORD *)(v43 + 4633) = *(_OWORD *)(v44 + 4633);
                                long long *v1969 = v1972;
                              }
                              else
                              {
                                *(void *)(v43 + 4624) = v1971;
                                *(unsigned char *)(v43 + 4632) = *(unsigned char *)(v44 + 4632);
                                uint64_t v1974 = *(void *)(v44 + 4640);
                                *(unsigned char *)(v43 + 4648) = *(unsigned char *)(v44 + 4648);
                                *(void *)(v43 + 4640) = v1974;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1971 == 1)
                            {
                              sub_10009F534(v43 + 4624);
                              long long v1973 = *(_OWORD *)(v44 + 4633);
                              long long *v1969 = *v1970;
                              *(_OWORD *)(v43 + 4633) = v1973;
                            }
                            else
                            {
                              *(void *)(v43 + 4624) = v1971;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4632) = *(unsigned char *)(v44 + 4632);
                              uint64_t v1975 = *(void *)(v44 + 4640);
                              *(unsigned char *)(v43 + 4648) = *(unsigned char *)(v44 + 4648);
                              *(void *)(v43 + 4640) = v1975;
                            }
                            v1976 = (long long *)(v43 + 4656);
                            v1977 = (long long *)(v44 + 4656);
                            uint64_t v1978 = *(void *)(v44 + 4656);
                            if (*(void *)(v43 + 4656) == 1)
                            {
                              if (v1978 == 1)
                              {
                                long long v1979 = *v1977;
                                *(_OWORD *)(v43 + 4665) = *(_OWORD *)(v44 + 4665);
                                long long *v1976 = v1979;
                              }
                              else
                              {
                                *(void *)(v43 + 4656) = v1978;
                                *(unsigned char *)(v43 + 4664) = *(unsigned char *)(v44 + 4664);
                                uint64_t v1981 = *(void *)(v44 + 4672);
                                *(unsigned char *)(v43 + 4680) = *(unsigned char *)(v44 + 4680);
                                *(void *)(v43 + 4672) = v1981;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1978 == 1)
                            {
                              sub_10009F534(v43 + 4656);
                              long long v1980 = *(_OWORD *)(v44 + 4665);
                              long long *v1976 = *v1977;
                              *(_OWORD *)(v43 + 4665) = v1980;
                            }
                            else
                            {
                              *(void *)(v43 + 4656) = v1978;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4664) = *(unsigned char *)(v44 + 4664);
                              uint64_t v1982 = *(void *)(v44 + 4672);
                              *(unsigned char *)(v43 + 4680) = *(unsigned char *)(v44 + 4680);
                              *(void *)(v43 + 4672) = v1982;
                            }
                            v1983 = (long long *)(v43 + 4688);
                            v1984 = (long long *)(v44 + 4688);
                            uint64_t v1985 = *(void *)(v44 + 4688);
                            if (*(void *)(v43 + 4688) == 1)
                            {
                              if (v1985 == 1)
                              {
                                long long v1986 = *v1984;
                                *(_OWORD *)(v43 + 4697) = *(_OWORD *)(v44 + 4697);
                                long long *v1983 = v1986;
                              }
                              else
                              {
                                *(void *)(v43 + 4688) = v1985;
                                *(unsigned char *)(v43 + 4696) = *(unsigned char *)(v44 + 4696);
                                uint64_t v1988 = *(void *)(v44 + 4704);
                                *(unsigned char *)(v43 + 4712) = *(unsigned char *)(v44 + 4712);
                                *(void *)(v43 + 4704) = v1988;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1985 == 1)
                            {
                              sub_10009F534(v43 + 4688);
                              long long v1987 = *(_OWORD *)(v44 + 4697);
                              long long *v1983 = *v1984;
                              *(_OWORD *)(v43 + 4697) = v1987;
                            }
                            else
                            {
                              *(void *)(v43 + 4688) = v1985;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4696) = *(unsigned char *)(v44 + 4696);
                              uint64_t v1989 = *(void *)(v44 + 4704);
                              *(unsigned char *)(v43 + 4712) = *(unsigned char *)(v44 + 4712);
                              *(void *)(v43 + 4704) = v1989;
                            }
                            v1990 = (long long *)(v43 + 4720);
                            v1991 = (long long *)(v44 + 4720);
                            uint64_t v1992 = *(void *)(v44 + 4720);
                            if (*(void *)(v43 + 4720) == 1)
                            {
                              if (v1992 == 1)
                              {
                                long long v1993 = *v1991;
                                *(_OWORD *)(v43 + 4729) = *(_OWORD *)(v44 + 4729);
                                long long *v1990 = v1993;
                              }
                              else
                              {
                                *(void *)(v43 + 4720) = v1992;
                                *(unsigned char *)(v43 + 4728) = *(unsigned char *)(v44 + 4728);
                                uint64_t v1995 = *(void *)(v44 + 4736);
                                *(unsigned char *)(v43 + 4744) = *(unsigned char *)(v44 + 4744);
                                *(void *)(v43 + 4736) = v1995;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1992 == 1)
                            {
                              sub_10009F534(v43 + 4720);
                              long long v1994 = *(_OWORD *)(v44 + 4729);
                              long long *v1990 = *v1991;
                              *(_OWORD *)(v43 + 4729) = v1994;
                            }
                            else
                            {
                              *(void *)(v43 + 4720) = v1992;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4728) = *(unsigned char *)(v44 + 4728);
                              uint64_t v1996 = *(void *)(v44 + 4736);
                              *(unsigned char *)(v43 + 4744) = *(unsigned char *)(v44 + 4744);
                              *(void *)(v43 + 4736) = v1996;
                            }
                            v1997 = (long long *)(v43 + 4752);
                            v1998 = (long long *)(v44 + 4752);
                            uint64_t v1999 = *(void *)(v44 + 4752);
                            if (*(void *)(v43 + 4752) == 1)
                            {
                              if (v1999 == 1)
                              {
                                long long v2000 = *v1998;
                                *(_OWORD *)(v43 + 4761) = *(_OWORD *)(v44 + 4761);
                                long long *v1997 = v2000;
                              }
                              else
                              {
                                *(void *)(v43 + 4752) = v1999;
                                *(unsigned char *)(v43 + 4760) = *(unsigned char *)(v44 + 4760);
                                uint64_t v2002 = *(void *)(v44 + 4768);
                                *(unsigned char *)(v43 + 4776) = *(unsigned char *)(v44 + 4776);
                                *(void *)(v43 + 4768) = v2002;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v1999 == 1)
                            {
                              sub_10009F534(v43 + 4752);
                              long long v2001 = *(_OWORD *)(v44 + 4761);
                              long long *v1997 = *v1998;
                              *(_OWORD *)(v43 + 4761) = v2001;
                            }
                            else
                            {
                              *(void *)(v43 + 4752) = v1999;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4760) = *(unsigned char *)(v44 + 4760);
                              uint64_t v2003 = *(void *)(v44 + 4768);
                              *(unsigned char *)(v43 + 4776) = *(unsigned char *)(v44 + 4776);
                              *(void *)(v43 + 4768) = v2003;
                            }
                            v2004 = (long long *)(v43 + 4784);
                            v2005 = (long long *)(v44 + 4784);
                            uint64_t v2006 = *(void *)(v44 + 4784);
                            if (*(void *)(v43 + 4784) == 1)
                            {
                              if (v2006 == 1)
                              {
                                long long v2007 = *v2005;
                                *(_OWORD *)(v43 + 4793) = *(_OWORD *)(v44 + 4793);
                                long long *v2004 = v2007;
                              }
                              else
                              {
                                *(void *)(v43 + 4784) = v2006;
                                *(unsigned char *)(v43 + 4792) = *(unsigned char *)(v44 + 4792);
                                uint64_t v2009 = *(void *)(v44 + 4800);
                                *(unsigned char *)(v43 + 4808) = *(unsigned char *)(v44 + 4808);
                                *(void *)(v43 + 4800) = v2009;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v2006 == 1)
                            {
                              sub_10009F534(v43 + 4784);
                              long long v2008 = *(_OWORD *)(v44 + 4793);
                              long long *v2004 = *v2005;
                              *(_OWORD *)(v43 + 4793) = v2008;
                            }
                            else
                            {
                              *(void *)(v43 + 4784) = v2006;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4792) = *(unsigned char *)(v44 + 4792);
                              uint64_t v2010 = *(void *)(v44 + 4800);
                              *(unsigned char *)(v43 + 4808) = *(unsigned char *)(v44 + 4808);
                              *(void *)(v43 + 4800) = v2010;
                            }
                            v2011 = (long long *)(v43 + 4816);
                            v2012 = (long long *)(v44 + 4816);
                            uint64_t v2013 = *(void *)(v44 + 4816);
                            if (*(void *)(v43 + 4816) == 1)
                            {
                              if (v2013 == 1)
                              {
                                long long v2014 = *v2012;
                                *(_OWORD *)(v43 + 4825) = *(_OWORD *)(v44 + 4825);
                                long long *v2011 = v2014;
                              }
                              else
                              {
                                *(void *)(v43 + 4816) = v2013;
                                *(unsigned char *)(v43 + 4824) = *(unsigned char *)(v44 + 4824);
                                uint64_t v2016 = *(void *)(v44 + 4832);
                                *(unsigned char *)(v43 + 4840) = *(unsigned char *)(v44 + 4840);
                                *(void *)(v43 + 4832) = v2016;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v2013 == 1)
                            {
                              sub_10009F534(v43 + 4816);
                              long long v2015 = *(_OWORD *)(v44 + 4825);
                              long long *v2011 = *v2012;
                              *(_OWORD *)(v43 + 4825) = v2015;
                            }
                            else
                            {
                              *(void *)(v43 + 4816) = v2013;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4824) = *(unsigned char *)(v44 + 4824);
                              uint64_t v2017 = *(void *)(v44 + 4832);
                              *(unsigned char *)(v43 + 4840) = *(unsigned char *)(v44 + 4840);
                              *(void *)(v43 + 4832) = v2017;
                            }
                            v2018 = (long long *)(v43 + 4848);
                            v2019 = (long long *)(v44 + 4848);
                            uint64_t v2020 = *(void *)(v44 + 4848);
                            if (*(void *)(v43 + 4848) == 1)
                            {
                              if (v2020 == 1)
                              {
                                long long v2021 = *v2019;
                                *(_OWORD *)(v43 + 4857) = *(_OWORD *)(v44 + 4857);
                                long long *v2018 = v2021;
                              }
                              else
                              {
                                *(void *)(v43 + 4848) = v2020;
                                *(unsigned char *)(v43 + 4856) = *(unsigned char *)(v44 + 4856);
                                uint64_t v2023 = *(void *)(v44 + 4864);
                                *(unsigned char *)(v43 + 4872) = *(unsigned char *)(v44 + 4872);
                                *(void *)(v43 + 4864) = v2023;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v2020 == 1)
                            {
                              sub_10009F534(v43 + 4848);
                              long long v2022 = *(_OWORD *)(v44 + 4857);
                              long long *v2018 = *v2019;
                              *(_OWORD *)(v43 + 4857) = v2022;
                            }
                            else
                            {
                              *(void *)(v43 + 4848) = v2020;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4856) = *(unsigned char *)(v44 + 4856);
                              uint64_t v2024 = *(void *)(v44 + 4864);
                              *(unsigned char *)(v43 + 4872) = *(unsigned char *)(v44 + 4872);
                              *(void *)(v43 + 4864) = v2024;
                            }
                            v2025 = (long long *)(v43 + 4880);
                            v2026 = (long long *)(v44 + 4880);
                            uint64_t v2027 = *(void *)(v44 + 4880);
                            if (*(void *)(v43 + 4880) == 1)
                            {
                              if (v2027 == 1)
                              {
                                long long v2028 = *v2026;
                                *(_OWORD *)(v43 + 4889) = *(_OWORD *)(v44 + 4889);
                                long long *v2025 = v2028;
                              }
                              else
                              {
                                *(void *)(v43 + 4880) = v2027;
                                *(unsigned char *)(v43 + 4888) = *(unsigned char *)(v44 + 4888);
                                uint64_t v2030 = *(void *)(v44 + 4896);
                                *(unsigned char *)(v43 + 4904) = *(unsigned char *)(v44 + 4904);
                                *(void *)(v43 + 4896) = v2030;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v2027 == 1)
                            {
                              sub_10009F534(v43 + 4880);
                              long long v2029 = *(_OWORD *)(v44 + 4889);
                              long long *v2025 = *v2026;
                              *(_OWORD *)(v43 + 4889) = v2029;
                            }
                            else
                            {
                              *(void *)(v43 + 4880) = v2027;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4888) = *(unsigned char *)(v44 + 4888);
                              uint64_t v2031 = *(void *)(v44 + 4896);
                              *(unsigned char *)(v43 + 4904) = *(unsigned char *)(v44 + 4904);
                              *(void *)(v43 + 4896) = v2031;
                            }
                            v2032 = (long long *)(v43 + 4912);
                            v2033 = (long long *)(v44 + 4912);
                            uint64_t v2034 = *(void *)(v44 + 4912);
                            if (*(void *)(v43 + 4912) == 1)
                            {
                              if (v2034 == 1)
                              {
                                long long v2035 = *v2033;
                                *(_OWORD *)(v43 + 4921) = *(_OWORD *)(v44 + 4921);
                                long long *v2032 = v2035;
                              }
                              else
                              {
                                *(void *)(v43 + 4912) = v2034;
                                *(unsigned char *)(v43 + 4920) = *(unsigned char *)(v44 + 4920);
                                uint64_t v2037 = *(void *)(v44 + 4928);
                                *(unsigned char *)(v43 + 4936) = *(unsigned char *)(v44 + 4936);
                                *(void *)(v43 + 4928) = v2037;
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v2034 == 1)
                            {
                              sub_10009F534(v43 + 4912);
                              long long v2036 = *(_OWORD *)(v44 + 4921);
                              long long *v2032 = *v2033;
                              *(_OWORD *)(v43 + 4921) = v2036;
                            }
                            else
                            {
                              *(void *)(v43 + 4912) = v2034;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                              *(unsigned char *)(v43 + 4920) = *(unsigned char *)(v44 + 4920);
                              uint64_t v2038 = *(void *)(v44 + 4928);
                              *(unsigned char *)(v43 + 4936) = *(unsigned char *)(v44 + 4936);
                              *(void *)(v43 + 4928) = v2038;
                            }
                            long long v2039 = *(_OWORD *)(v44 + 4944);
                            *(unsigned char *)(v43 + 4960) = *(unsigned char *)(v44 + 4960);
                            *(_OWORD *)(v43 + 4944) = v2039;
                            char v2040 = *(unsigned char *)(v44 + 4984);
                            *(_OWORD *)(v43 + 4968) = *(_OWORD *)(v44 + 4968);
                            *(unsigned char *)(v43 + 4984) = v2040;
                            *(unsigned char *)(v43 + 4985) = *(unsigned char *)(v44 + 4985);
                            *(unsigned char *)(v43 + 4986) = *(unsigned char *)(v44 + 4986);
                            *(unsigned char *)(v43 + 4987) = *(unsigned char *)(v44 + 4987);
                            *(unsigned char *)(v43 + 4988) = *(unsigned char *)(v44 + 4988);
                            *(unsigned char *)(v43 + 4989) = *(unsigned char *)(v44 + 4989);
                            *(unsigned char *)(v43 + 4990) = *(unsigned char *)(v44 + 4990);
                            *(unsigned char *)(v43 + 4991) = *(unsigned char *)(v44 + 4991);
                            *(void *)(v43 + 4992) = *(void *)(v44 + 4992);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            *(void *)(v43 + 5000) = *(void *)(v44 + 5000);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
LABEL_2021:
                            v2041 = (long long *)(v43 + 5008);
                            v2042 = (long long *)(v44 + 5008);
                            uint64_t v2043 = *(void *)(v44 + 5824);
                            if (*(void *)(v43 + 5824) == 1)
                            {
                              if (v2043 != 1)
                              {
                                if (*(void *)v2042 == 1)
                                {
                                  long long v2044 = *v2042;
                                  *(_OWORD *)(v43 + 5017) = *(_OWORD *)(v44 + 5017);
                                  long long *v2041 = v2044;
                                }
                                else
                                {
                                  *(void *)(v43 + 5008) = *(void *)v2042;
                                  *(unsigned char *)(v43 + 5016) = *(unsigned char *)(v44 + 5016);
                                  uint64_t v2047 = *(void *)(v44 + 5024);
                                  *(unsigned char *)(v43 + 5032) = *(unsigned char *)(v44 + 5032);
                                  *(void *)(v43 + 5024) = v2047;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2048 = *(void *)(v44 + 5040);
                                if (v2048 == 1)
                                {
                                  long long v2049 = *(_OWORD *)(v44 + 5040);
                                  *(_OWORD *)(v43 + 5049) = *(_OWORD *)(v44 + 5049);
                                  *(_OWORD *)(v43 + 5040) = v2049;
                                }
                                else
                                {
                                  *(void *)(v43 + 5040) = v2048;
                                  *(unsigned char *)(v43 + 5048) = *(unsigned char *)(v44 + 5048);
                                  uint64_t v2051 = *(void *)(v44 + 5056);
                                  *(unsigned char *)(v43 + 5064) = *(unsigned char *)(v44 + 5064);
                                  *(void *)(v43 + 5056) = v2051;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2052 = *(void *)(v44 + 5072);
                                if (v2052 == 1)
                                {
                                  long long v2053 = *(_OWORD *)(v44 + 5072);
                                  *(_OWORD *)(v43 + 5081) = *(_OWORD *)(v44 + 5081);
                                  *(_OWORD *)(v43 + 5072) = v2053;
                                }
                                else
                                {
                                  *(void *)(v43 + 5072) = v2052;
                                  *(unsigned char *)(v43 + 5080) = *(unsigned char *)(v44 + 5080);
                                  uint64_t v2054 = *(void *)(v44 + 5088);
                                  *(unsigned char *)(v43 + 5096) = *(unsigned char *)(v44 + 5096);
                                  *(void *)(v43 + 5088) = v2054;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2055 = *(void *)(v44 + 5104);
                                if (v2055 == 1)
                                {
                                  long long v2056 = *(_OWORD *)(v44 + 5104);
                                  *(_OWORD *)(v43 + 5113) = *(_OWORD *)(v44 + 5113);
                                  *(_OWORD *)(v43 + 5104) = v2056;
                                }
                                else
                                {
                                  *(void *)(v43 + 5104) = v2055;
                                  *(unsigned char *)(v43 + 5112) = *(unsigned char *)(v44 + 5112);
                                  uint64_t v2057 = *(void *)(v44 + 5120);
                                  *(unsigned char *)(v43 + 5128) = *(unsigned char *)(v44 + 5128);
                                  *(void *)(v43 + 5120) = v2057;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2058 = *(void *)(v44 + 5136);
                                if (v2058 == 1)
                                {
                                  long long v2059 = *(_OWORD *)(v44 + 5136);
                                  *(_OWORD *)(v43 + 5145) = *(_OWORD *)(v44 + 5145);
                                  *(_OWORD *)(v43 + 5136) = v2059;
                                }
                                else
                                {
                                  *(void *)(v43 + 5136) = v2058;
                                  *(unsigned char *)(v43 + 5144) = *(unsigned char *)(v44 + 5144);
                                  uint64_t v2060 = *(void *)(v44 + 5152);
                                  *(unsigned char *)(v43 + 5160) = *(unsigned char *)(v44 + 5160);
                                  *(void *)(v43 + 5152) = v2060;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2061 = *(void *)(v44 + 5168);
                                if (v2061 == 1)
                                {
                                  long long v2062 = *(_OWORD *)(v44 + 5168);
                                  *(_OWORD *)(v43 + 5177) = *(_OWORD *)(v44 + 5177);
                                  *(_OWORD *)(v43 + 5168) = v2062;
                                }
                                else
                                {
                                  *(void *)(v43 + 5168) = v2061;
                                  *(unsigned char *)(v43 + 5176) = *(unsigned char *)(v44 + 5176);
                                  uint64_t v2063 = *(void *)(v44 + 5184);
                                  *(unsigned char *)(v43 + 5192) = *(unsigned char *)(v44 + 5192);
                                  *(void *)(v43 + 5184) = v2063;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2064 = *(void *)(v44 + 5200);
                                if (v2064 == 1)
                                {
                                  long long v2065 = *(_OWORD *)(v44 + 5200);
                                  *(_OWORD *)(v43 + 5209) = *(_OWORD *)(v44 + 5209);
                                  *(_OWORD *)(v43 + 5200) = v2065;
                                }
                                else
                                {
                                  *(void *)(v43 + 5200) = v2064;
                                  *(unsigned char *)(v43 + 5208) = *(unsigned char *)(v44 + 5208);
                                  uint64_t v2066 = *(void *)(v44 + 5216);
                                  *(unsigned char *)(v43 + 5224) = *(unsigned char *)(v44 + 5224);
                                  *(void *)(v43 + 5216) = v2066;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2067 = *(void *)(v44 + 5232);
                                if (v2067 == 1)
                                {
                                  long long v2068 = *(_OWORD *)(v44 + 5232);
                                  *(_OWORD *)(v43 + 5241) = *(_OWORD *)(v44 + 5241);
                                  *(_OWORD *)(v43 + 5232) = v2068;
                                }
                                else
                                {
                                  *(void *)(v43 + 5232) = v2067;
                                  *(unsigned char *)(v43 + 5240) = *(unsigned char *)(v44 + 5240);
                                  uint64_t v2069 = *(void *)(v44 + 5248);
                                  *(unsigned char *)(v43 + 5256) = *(unsigned char *)(v44 + 5256);
                                  *(void *)(v43 + 5248) = v2069;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2070 = *(void *)(v44 + 5264);
                                if (v2070 == 1)
                                {
                                  long long v2071 = *(_OWORD *)(v44 + 5264);
                                  *(_OWORD *)(v43 + 5273) = *(_OWORD *)(v44 + 5273);
                                  *(_OWORD *)(v43 + 5264) = v2071;
                                }
                                else
                                {
                                  *(void *)(v43 + 5264) = v2070;
                                  *(unsigned char *)(v43 + 5272) = *(unsigned char *)(v44 + 5272);
                                  uint64_t v2072 = *(void *)(v44 + 5280);
                                  *(unsigned char *)(v43 + 5288) = *(unsigned char *)(v44 + 5288);
                                  *(void *)(v43 + 5280) = v2072;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2073 = *(void *)(v44 + 5296);
                                if (v2073 == 1)
                                {
                                  long long v2074 = *(_OWORD *)(v44 + 5296);
                                  *(_OWORD *)(v43 + 5305) = *(_OWORD *)(v44 + 5305);
                                  *(_OWORD *)(v43 + 5296) = v2074;
                                }
                                else
                                {
                                  *(void *)(v43 + 5296) = v2073;
                                  *(unsigned char *)(v43 + 5304) = *(unsigned char *)(v44 + 5304);
                                  uint64_t v2075 = *(void *)(v44 + 5312);
                                  *(unsigned char *)(v43 + 5320) = *(unsigned char *)(v44 + 5320);
                                  *(void *)(v43 + 5312) = v2075;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2076 = *(void *)(v44 + 5328);
                                if (v2076 == 1)
                                {
                                  long long v2077 = *(_OWORD *)(v44 + 5328);
                                  *(_OWORD *)(v43 + 5337) = *(_OWORD *)(v44 + 5337);
                                  *(_OWORD *)(v43 + 5328) = v2077;
                                }
                                else
                                {
                                  *(void *)(v43 + 5328) = v2076;
                                  *(unsigned char *)(v43 + 5336) = *(unsigned char *)(v44 + 5336);
                                  uint64_t v2078 = *(void *)(v44 + 5344);
                                  *(unsigned char *)(v43 + 5352) = *(unsigned char *)(v44 + 5352);
                                  *(void *)(v43 + 5344) = v2078;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2079 = *(void *)(v44 + 5360);
                                if (v2079 == 1)
                                {
                                  long long v2080 = *(_OWORD *)(v44 + 5360);
                                  *(_OWORD *)(v43 + 5369) = *(_OWORD *)(v44 + 5369);
                                  *(_OWORD *)(v43 + 5360) = v2080;
                                }
                                else
                                {
                                  *(void *)(v43 + 5360) = v2079;
                                  *(unsigned char *)(v43 + 5368) = *(unsigned char *)(v44 + 5368);
                                  uint64_t v2081 = *(void *)(v44 + 5376);
                                  *(unsigned char *)(v43 + 5384) = *(unsigned char *)(v44 + 5384);
                                  *(void *)(v43 + 5376) = v2081;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2082 = *(void *)(v44 + 5392);
                                if (v2082 == 1)
                                {
                                  long long v2083 = *(_OWORD *)(v44 + 5392);
                                  *(_OWORD *)(v43 + 5401) = *(_OWORD *)(v44 + 5401);
                                  *(_OWORD *)(v43 + 5392) = v2083;
                                }
                                else
                                {
                                  *(void *)(v43 + 5392) = v2082;
                                  *(unsigned char *)(v43 + 5400) = *(unsigned char *)(v44 + 5400);
                                  uint64_t v2084 = *(void *)(v44 + 5408);
                                  *(unsigned char *)(v43 + 5416) = *(unsigned char *)(v44 + 5416);
                                  *(void *)(v43 + 5408) = v2084;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2085 = *(void *)(v44 + 5424);
                                if (v2085 == 1)
                                {
                                  long long v2086 = *(_OWORD *)(v44 + 5424);
                                  *(_OWORD *)(v43 + 5433) = *(_OWORD *)(v44 + 5433);
                                  *(_OWORD *)(v43 + 5424) = v2086;
                                }
                                else
                                {
                                  *(void *)(v43 + 5424) = v2085;
                                  *(unsigned char *)(v43 + 5432) = *(unsigned char *)(v44 + 5432);
                                  uint64_t v2087 = *(void *)(v44 + 5440);
                                  *(unsigned char *)(v43 + 5448) = *(unsigned char *)(v44 + 5448);
                                  *(void *)(v43 + 5440) = v2087;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2088 = *(void *)(v44 + 5456);
                                if (v2088 == 1)
                                {
                                  long long v2089 = *(_OWORD *)(v44 + 5456);
                                  *(_OWORD *)(v43 + 5465) = *(_OWORD *)(v44 + 5465);
                                  *(_OWORD *)(v43 + 5456) = v2089;
                                }
                                else
                                {
                                  *(void *)(v43 + 5456) = v2088;
                                  *(unsigned char *)(v43 + 5464) = *(unsigned char *)(v44 + 5464);
                                  uint64_t v2090 = *(void *)(v44 + 5472);
                                  *(unsigned char *)(v43 + 5480) = *(unsigned char *)(v44 + 5480);
                                  *(void *)(v43 + 5472) = v2090;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2091 = *(void *)(v44 + 5488);
                                if (v2091 == 1)
                                {
                                  long long v2092 = *(_OWORD *)(v44 + 5488);
                                  *(_OWORD *)(v43 + 5497) = *(_OWORD *)(v44 + 5497);
                                  *(_OWORD *)(v43 + 5488) = v2092;
                                }
                                else
                                {
                                  *(void *)(v43 + 5488) = v2091;
                                  *(unsigned char *)(v43 + 5496) = *(unsigned char *)(v44 + 5496);
                                  uint64_t v2093 = *(void *)(v44 + 5504);
                                  *(unsigned char *)(v43 + 5512) = *(unsigned char *)(v44 + 5512);
                                  *(void *)(v43 + 5504) = v2093;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2094 = *(void *)(v44 + 5520);
                                if (v2094 == 1)
                                {
                                  long long v2095 = *(_OWORD *)(v44 + 5520);
                                  *(_OWORD *)(v43 + 5529) = *(_OWORD *)(v44 + 5529);
                                  *(_OWORD *)(v43 + 5520) = v2095;
                                }
                                else
                                {
                                  *(void *)(v43 + 5520) = v2094;
                                  *(unsigned char *)(v43 + 5528) = *(unsigned char *)(v44 + 5528);
                                  uint64_t v2096 = *(void *)(v44 + 5536);
                                  *(unsigned char *)(v43 + 5544) = *(unsigned char *)(v44 + 5544);
                                  *(void *)(v43 + 5536) = v2096;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2097 = *(void *)(v44 + 5552);
                                if (v2097 == 1)
                                {
                                  long long v2098 = *(_OWORD *)(v44 + 5552);
                                  *(_OWORD *)(v43 + 5561) = *(_OWORD *)(v44 + 5561);
                                  *(_OWORD *)(v43 + 5552) = v2098;
                                }
                                else
                                {
                                  *(void *)(v43 + 5552) = v2097;
                                  *(unsigned char *)(v43 + 5560) = *(unsigned char *)(v44 + 5560);
                                  uint64_t v2099 = *(void *)(v44 + 5568);
                                  *(unsigned char *)(v43 + 5576) = *(unsigned char *)(v44 + 5576);
                                  *(void *)(v43 + 5568) = v2099;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2100 = *(void *)(v44 + 5584);
                                if (v2100 == 1)
                                {
                                  long long v2101 = *(_OWORD *)(v44 + 5584);
                                  *(_OWORD *)(v43 + 5593) = *(_OWORD *)(v44 + 5593);
                                  *(_OWORD *)(v43 + 5584) = v2101;
                                }
                                else
                                {
                                  *(void *)(v43 + 5584) = v2100;
                                  *(unsigned char *)(v43 + 5592) = *(unsigned char *)(v44 + 5592);
                                  uint64_t v2102 = *(void *)(v44 + 5600);
                                  *(unsigned char *)(v43 + 5608) = *(unsigned char *)(v44 + 5608);
                                  *(void *)(v43 + 5600) = v2102;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2103 = *(void *)(v44 + 5616);
                                if (v2103 == 1)
                                {
                                  long long v2104 = *(_OWORD *)(v44 + 5616);
                                  *(_OWORD *)(v43 + 5625) = *(_OWORD *)(v44 + 5625);
                                  *(_OWORD *)(v43 + 5616) = v2104;
                                }
                                else
                                {
                                  *(void *)(v43 + 5616) = v2103;
                                  *(unsigned char *)(v43 + 5624) = *(unsigned char *)(v44 + 5624);
                                  uint64_t v2105 = *(void *)(v44 + 5632);
                                  *(unsigned char *)(v43 + 5640) = *(unsigned char *)(v44 + 5640);
                                  *(void *)(v43 + 5632) = v2105;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2106 = *(void *)(v44 + 5648);
                                if (v2106 == 1)
                                {
                                  long long v2107 = *(_OWORD *)(v44 + 5648);
                                  *(_OWORD *)(v43 + 5657) = *(_OWORD *)(v44 + 5657);
                                  *(_OWORD *)(v43 + 5648) = v2107;
                                }
                                else
                                {
                                  *(void *)(v43 + 5648) = v2106;
                                  *(unsigned char *)(v43 + 5656) = *(unsigned char *)(v44 + 5656);
                                  uint64_t v2108 = *(void *)(v44 + 5664);
                                  *(unsigned char *)(v43 + 5672) = *(unsigned char *)(v44 + 5672);
                                  *(void *)(v43 + 5664) = v2108;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2109 = *(void *)(v44 + 5680);
                                if (v2109 == 1)
                                {
                                  long long v2110 = *(_OWORD *)(v44 + 5680);
                                  *(_OWORD *)(v43 + 5689) = *(_OWORD *)(v44 + 5689);
                                  *(_OWORD *)(v43 + 5680) = v2110;
                                }
                                else
                                {
                                  *(void *)(v43 + 5680) = v2109;
                                  *(unsigned char *)(v43 + 5688) = *(unsigned char *)(v44 + 5688);
                                  uint64_t v2111 = *(void *)(v44 + 5696);
                                  *(unsigned char *)(v43 + 5704) = *(unsigned char *)(v44 + 5704);
                                  *(void *)(v43 + 5696) = v2111;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2112 = *(void *)(v44 + 5712);
                                if (v2112 == 1)
                                {
                                  long long v2113 = *(_OWORD *)(v44 + 5712);
                                  *(_OWORD *)(v43 + 5721) = *(_OWORD *)(v44 + 5721);
                                  *(_OWORD *)(v43 + 5712) = v2113;
                                }
                                else
                                {
                                  *(void *)(v43 + 5712) = v2112;
                                  *(unsigned char *)(v43 + 5720) = *(unsigned char *)(v44 + 5720);
                                  uint64_t v2114 = *(void *)(v44 + 5728);
                                  *(unsigned char *)(v43 + 5736) = *(unsigned char *)(v44 + 5736);
                                  *(void *)(v43 + 5728) = v2114;
                                  swift_bridgeObjectRetain();
                                }
                                uint64_t v2115 = *(void *)(v44 + 5744);
                                if (v2115 == 1)
                                {
                                  long long v2116 = *(_OWORD *)(v44 + 5744);
                                  *(_OWORD *)(v43 + 5753) = *(_OWORD *)(v44 + 5753);
                                  *(_OWORD *)(v43 + 5744) = v2116;
                                }
                                else
                                {
                                  *(void *)(v43 + 5744) = v2115;
                                  *(unsigned char *)(v43 + 5752) = *(unsigned char *)(v44 + 5752);
                                  uint64_t v2117 = *(void *)(v44 + 5760);
                                  *(unsigned char *)(v43 + 5768) = *(unsigned char *)(v44 + 5768);
                                  *(void *)(v43 + 5760) = v2117;
                                  swift_bridgeObjectRetain();
                                }
                                long long v2118 = *(_OWORD *)(v44 + 5776);
                                *(unsigned char *)(v43 + 5792) = *(unsigned char *)(v44 + 5792);
                                *(_OWORD *)(v43 + 5776) = v2118;
                                char v2119 = *(unsigned char *)(v44 + 5816);
                                *(_OWORD *)(v43 + 5800) = *(_OWORD *)(v44 + 5800);
                                *(unsigned char *)(v43 + 5816) = v2119;
                                *(unsigned char *)(v43 + 5817) = *(unsigned char *)(v44 + 5817);
                                *(unsigned char *)(v43 + 5818) = *(unsigned char *)(v44 + 5818);
                                *(unsigned char *)(v43 + 5819) = *(unsigned char *)(v44 + 5819);
                                *(unsigned char *)(v43 + 5820) = *(unsigned char *)(v44 + 5820);
                                *(unsigned char *)(v43 + 5821) = *(unsigned char *)(v44 + 5821);
                                *(unsigned char *)(v43 + 5822) = *(unsigned char *)(v44 + 5822);
                                *(unsigned char *)(v43 + 5823) = *(unsigned char *)(v44 + 5823);
                                *(void *)(v43 + 5824) = *(void *)(v44 + 5824);
                                *(void *)(v43 + 5832) = *(void *)(v44 + 5832);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                goto LABEL_2268;
                              }
                            }
                            else
                            {
                              if (v2043 != 1)
                              {
                                uint64_t v2045 = *(void *)v2042;
                                if (*(void *)v2041 == 1)
                                {
                                  if (v2045 == 1)
                                  {
                                    long long v2046 = *v2042;
                                    *(_OWORD *)(v43 + 5017) = *(_OWORD *)(v44 + 5017);
                                    long long *v2041 = v2046;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5008) = v2045;
                                    *(unsigned char *)(v43 + 5016) = *(unsigned char *)(v44 + 5016);
                                    uint64_t v2120 = *(void *)(v44 + 5024);
                                    *(unsigned char *)(v43 + 5032) = *(unsigned char *)(v44 + 5032);
                                    *(void *)(v43 + 5024) = v2120;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2045 == 1)
                                {
                                  sub_10009F534(v43 + 5008);
                                  long long v2050 = *(_OWORD *)(v44 + 5017);
                                  long long *v2041 = *v2042;
                                  *(_OWORD *)(v43 + 5017) = v2050;
                                }
                                else
                                {
                                  *(void *)(v43 + 5008) = v2045;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5016) = *(unsigned char *)(v44 + 5016);
                                  uint64_t v2121 = *(void *)(v44 + 5024);
                                  *(unsigned char *)(v43 + 5032) = *(unsigned char *)(v44 + 5032);
                                  *(void *)(v43 + 5024) = v2121;
                                }
                                v2122 = (long long *)(v43 + 5040);
                                v2123 = (long long *)(v44 + 5040);
                                uint64_t v2124 = *(void *)(v44 + 5040);
                                if (*(void *)(v43 + 5040) == 1)
                                {
                                  if (v2124 == 1)
                                  {
                                    long long v2125 = *v2123;
                                    *(_OWORD *)(v43 + 5049) = *(_OWORD *)(v44 + 5049);
                                    long long *v2122 = v2125;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5040) = v2124;
                                    *(unsigned char *)(v43 + 5048) = *(unsigned char *)(v44 + 5048);
                                    uint64_t v2127 = *(void *)(v44 + 5056);
                                    *(unsigned char *)(v43 + 5064) = *(unsigned char *)(v44 + 5064);
                                    *(void *)(v43 + 5056) = v2127;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2124 == 1)
                                {
                                  sub_10009F534(v43 + 5040);
                                  long long v2126 = *(_OWORD *)(v44 + 5049);
                                  long long *v2122 = *v2123;
                                  *(_OWORD *)(v43 + 5049) = v2126;
                                }
                                else
                                {
                                  *(void *)(v43 + 5040) = v2124;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5048) = *(unsigned char *)(v44 + 5048);
                                  uint64_t v2128 = *(void *)(v44 + 5056);
                                  *(unsigned char *)(v43 + 5064) = *(unsigned char *)(v44 + 5064);
                                  *(void *)(v43 + 5056) = v2128;
                                }
                                v2129 = (long long *)(v43 + 5072);
                                v2130 = (long long *)(v44 + 5072);
                                uint64_t v2131 = *(void *)(v44 + 5072);
                                if (*(void *)(v43 + 5072) == 1)
                                {
                                  if (v2131 == 1)
                                  {
                                    long long v2132 = *v2130;
                                    *(_OWORD *)(v43 + 5081) = *(_OWORD *)(v44 + 5081);
                                    long long *v2129 = v2132;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5072) = v2131;
                                    *(unsigned char *)(v43 + 5080) = *(unsigned char *)(v44 + 5080);
                                    uint64_t v2134 = *(void *)(v44 + 5088);
                                    *(unsigned char *)(v43 + 5096) = *(unsigned char *)(v44 + 5096);
                                    *(void *)(v43 + 5088) = v2134;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2131 == 1)
                                {
                                  sub_10009F534(v43 + 5072);
                                  long long v2133 = *(_OWORD *)(v44 + 5081);
                                  long long *v2129 = *v2130;
                                  *(_OWORD *)(v43 + 5081) = v2133;
                                }
                                else
                                {
                                  *(void *)(v43 + 5072) = v2131;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5080) = *(unsigned char *)(v44 + 5080);
                                  uint64_t v2135 = *(void *)(v44 + 5088);
                                  *(unsigned char *)(v43 + 5096) = *(unsigned char *)(v44 + 5096);
                                  *(void *)(v43 + 5088) = v2135;
                                }
                                v2136 = (long long *)(v43 + 5104);
                                v2137 = (long long *)(v44 + 5104);
                                uint64_t v2138 = *(void *)(v44 + 5104);
                                if (*(void *)(v43 + 5104) == 1)
                                {
                                  if (v2138 == 1)
                                  {
                                    long long v2139 = *v2137;
                                    *(_OWORD *)(v43 + 5113) = *(_OWORD *)(v44 + 5113);
                                    long long *v2136 = v2139;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5104) = v2138;
                                    *(unsigned char *)(v43 + 5112) = *(unsigned char *)(v44 + 5112);
                                    uint64_t v2141 = *(void *)(v44 + 5120);
                                    *(unsigned char *)(v43 + 5128) = *(unsigned char *)(v44 + 5128);
                                    *(void *)(v43 + 5120) = v2141;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2138 == 1)
                                {
                                  sub_10009F534(v43 + 5104);
                                  long long v2140 = *(_OWORD *)(v44 + 5113);
                                  long long *v2136 = *v2137;
                                  *(_OWORD *)(v43 + 5113) = v2140;
                                }
                                else
                                {
                                  *(void *)(v43 + 5104) = v2138;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5112) = *(unsigned char *)(v44 + 5112);
                                  uint64_t v2142 = *(void *)(v44 + 5120);
                                  *(unsigned char *)(v43 + 5128) = *(unsigned char *)(v44 + 5128);
                                  *(void *)(v43 + 5120) = v2142;
                                }
                                v2143 = (long long *)(v43 + 5136);
                                v2144 = (long long *)(v44 + 5136);
                                uint64_t v2145 = *(void *)(v44 + 5136);
                                if (*(void *)(v43 + 5136) == 1)
                                {
                                  if (v2145 == 1)
                                  {
                                    long long v2146 = *v2144;
                                    *(_OWORD *)(v43 + 5145) = *(_OWORD *)(v44 + 5145);
                                    long long *v2143 = v2146;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5136) = v2145;
                                    *(unsigned char *)(v43 + 5144) = *(unsigned char *)(v44 + 5144);
                                    uint64_t v2148 = *(void *)(v44 + 5152);
                                    *(unsigned char *)(v43 + 5160) = *(unsigned char *)(v44 + 5160);
                                    *(void *)(v43 + 5152) = v2148;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2145 == 1)
                                {
                                  sub_10009F534(v43 + 5136);
                                  long long v2147 = *(_OWORD *)(v44 + 5145);
                                  long long *v2143 = *v2144;
                                  *(_OWORD *)(v43 + 5145) = v2147;
                                }
                                else
                                {
                                  *(void *)(v43 + 5136) = v2145;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5144) = *(unsigned char *)(v44 + 5144);
                                  uint64_t v2149 = *(void *)(v44 + 5152);
                                  *(unsigned char *)(v43 + 5160) = *(unsigned char *)(v44 + 5160);
                                  *(void *)(v43 + 5152) = v2149;
                                }
                                v2150 = (long long *)(v43 + 5168);
                                v2151 = (long long *)(v44 + 5168);
                                uint64_t v2152 = *(void *)(v44 + 5168);
                                if (*(void *)(v43 + 5168) == 1)
                                {
                                  if (v2152 == 1)
                                  {
                                    long long v2153 = *v2151;
                                    *(_OWORD *)(v43 + 5177) = *(_OWORD *)(v44 + 5177);
                                    long long *v2150 = v2153;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5168) = v2152;
                                    *(unsigned char *)(v43 + 5176) = *(unsigned char *)(v44 + 5176);
                                    uint64_t v2155 = *(void *)(v44 + 5184);
                                    *(unsigned char *)(v43 + 5192) = *(unsigned char *)(v44 + 5192);
                                    *(void *)(v43 + 5184) = v2155;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2152 == 1)
                                {
                                  sub_10009F534(v43 + 5168);
                                  long long v2154 = *(_OWORD *)(v44 + 5177);
                                  long long *v2150 = *v2151;
                                  *(_OWORD *)(v43 + 5177) = v2154;
                                }
                                else
                                {
                                  *(void *)(v43 + 5168) = v2152;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5176) = *(unsigned char *)(v44 + 5176);
                                  uint64_t v2156 = *(void *)(v44 + 5184);
                                  *(unsigned char *)(v43 + 5192) = *(unsigned char *)(v44 + 5192);
                                  *(void *)(v43 + 5184) = v2156;
                                }
                                v2157 = (long long *)(v43 + 5200);
                                v2158 = (long long *)(v44 + 5200);
                                uint64_t v2159 = *(void *)(v44 + 5200);
                                if (*(void *)(v43 + 5200) == 1)
                                {
                                  if (v2159 == 1)
                                  {
                                    long long v2160 = *v2158;
                                    *(_OWORD *)(v43 + 5209) = *(_OWORD *)(v44 + 5209);
                                    long long *v2157 = v2160;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5200) = v2159;
                                    *(unsigned char *)(v43 + 5208) = *(unsigned char *)(v44 + 5208);
                                    uint64_t v2162 = *(void *)(v44 + 5216);
                                    *(unsigned char *)(v43 + 5224) = *(unsigned char *)(v44 + 5224);
                                    *(void *)(v43 + 5216) = v2162;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2159 == 1)
                                {
                                  sub_10009F534(v43 + 5200);
                                  long long v2161 = *(_OWORD *)(v44 + 5209);
                                  long long *v2157 = *v2158;
                                  *(_OWORD *)(v43 + 5209) = v2161;
                                }
                                else
                                {
                                  *(void *)(v43 + 5200) = v2159;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5208) = *(unsigned char *)(v44 + 5208);
                                  uint64_t v2163 = *(void *)(v44 + 5216);
                                  *(unsigned char *)(v43 + 5224) = *(unsigned char *)(v44 + 5224);
                                  *(void *)(v43 + 5216) = v2163;
                                }
                                v2164 = (long long *)(v43 + 5232);
                                v2165 = (long long *)(v44 + 5232);
                                uint64_t v2166 = *(void *)(v44 + 5232);
                                if (*(void *)(v43 + 5232) == 1)
                                {
                                  if (v2166 == 1)
                                  {
                                    long long v2167 = *v2165;
                                    *(_OWORD *)(v43 + 5241) = *(_OWORD *)(v44 + 5241);
                                    long long *v2164 = v2167;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5232) = v2166;
                                    *(unsigned char *)(v43 + 5240) = *(unsigned char *)(v44 + 5240);
                                    uint64_t v2169 = *(void *)(v44 + 5248);
                                    *(unsigned char *)(v43 + 5256) = *(unsigned char *)(v44 + 5256);
                                    *(void *)(v43 + 5248) = v2169;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2166 == 1)
                                {
                                  sub_10009F534(v43 + 5232);
                                  long long v2168 = *(_OWORD *)(v44 + 5241);
                                  long long *v2164 = *v2165;
                                  *(_OWORD *)(v43 + 5241) = v2168;
                                }
                                else
                                {
                                  *(void *)(v43 + 5232) = v2166;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5240) = *(unsigned char *)(v44 + 5240);
                                  uint64_t v2170 = *(void *)(v44 + 5248);
                                  *(unsigned char *)(v43 + 5256) = *(unsigned char *)(v44 + 5256);
                                  *(void *)(v43 + 5248) = v2170;
                                }
                                v2171 = (long long *)(v43 + 5264);
                                v2172 = (long long *)(v44 + 5264);
                                uint64_t v2173 = *(void *)(v44 + 5264);
                                if (*(void *)(v43 + 5264) == 1)
                                {
                                  if (v2173 == 1)
                                  {
                                    long long v2174 = *v2172;
                                    *(_OWORD *)(v43 + 5273) = *(_OWORD *)(v44 + 5273);
                                    long long *v2171 = v2174;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5264) = v2173;
                                    *(unsigned char *)(v43 + 5272) = *(unsigned char *)(v44 + 5272);
                                    uint64_t v2176 = *(void *)(v44 + 5280);
                                    *(unsigned char *)(v43 + 5288) = *(unsigned char *)(v44 + 5288);
                                    *(void *)(v43 + 5280) = v2176;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2173 == 1)
                                {
                                  sub_10009F534(v43 + 5264);
                                  long long v2175 = *(_OWORD *)(v44 + 5273);
                                  long long *v2171 = *v2172;
                                  *(_OWORD *)(v43 + 5273) = v2175;
                                }
                                else
                                {
                                  *(void *)(v43 + 5264) = v2173;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5272) = *(unsigned char *)(v44 + 5272);
                                  uint64_t v2177 = *(void *)(v44 + 5280);
                                  *(unsigned char *)(v43 + 5288) = *(unsigned char *)(v44 + 5288);
                                  *(void *)(v43 + 5280) = v2177;
                                }
                                v2178 = (long long *)(v43 + 5296);
                                v2179 = (long long *)(v44 + 5296);
                                uint64_t v2180 = *(void *)(v44 + 5296);
                                if (*(void *)(v43 + 5296) == 1)
                                {
                                  if (v2180 == 1)
                                  {
                                    long long v2181 = *v2179;
                                    *(_OWORD *)(v43 + 5305) = *(_OWORD *)(v44 + 5305);
                                    long long *v2178 = v2181;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5296) = v2180;
                                    *(unsigned char *)(v43 + 5304) = *(unsigned char *)(v44 + 5304);
                                    uint64_t v2183 = *(void *)(v44 + 5312);
                                    *(unsigned char *)(v43 + 5320) = *(unsigned char *)(v44 + 5320);
                                    *(void *)(v43 + 5312) = v2183;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2180 == 1)
                                {
                                  sub_10009F534(v43 + 5296);
                                  long long v2182 = *(_OWORD *)(v44 + 5305);
                                  long long *v2178 = *v2179;
                                  *(_OWORD *)(v43 + 5305) = v2182;
                                }
                                else
                                {
                                  *(void *)(v43 + 5296) = v2180;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5304) = *(unsigned char *)(v44 + 5304);
                                  uint64_t v2184 = *(void *)(v44 + 5312);
                                  *(unsigned char *)(v43 + 5320) = *(unsigned char *)(v44 + 5320);
                                  *(void *)(v43 + 5312) = v2184;
                                }
                                v2185 = (long long *)(v43 + 5328);
                                v2186 = (long long *)(v44 + 5328);
                                uint64_t v2187 = *(void *)(v44 + 5328);
                                if (*(void *)(v43 + 5328) == 1)
                                {
                                  if (v2187 == 1)
                                  {
                                    long long v2188 = *v2186;
                                    *(_OWORD *)(v43 + 5337) = *(_OWORD *)(v44 + 5337);
                                    long long *v2185 = v2188;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5328) = v2187;
                                    *(unsigned char *)(v43 + 5336) = *(unsigned char *)(v44 + 5336);
                                    uint64_t v2190 = *(void *)(v44 + 5344);
                                    *(unsigned char *)(v43 + 5352) = *(unsigned char *)(v44 + 5352);
                                    *(void *)(v43 + 5344) = v2190;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2187 == 1)
                                {
                                  sub_10009F534(v43 + 5328);
                                  long long v2189 = *(_OWORD *)(v44 + 5337);
                                  long long *v2185 = *v2186;
                                  *(_OWORD *)(v43 + 5337) = v2189;
                                }
                                else
                                {
                                  *(void *)(v43 + 5328) = v2187;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5336) = *(unsigned char *)(v44 + 5336);
                                  uint64_t v2191 = *(void *)(v44 + 5344);
                                  *(unsigned char *)(v43 + 5352) = *(unsigned char *)(v44 + 5352);
                                  *(void *)(v43 + 5344) = v2191;
                                }
                                v2192 = (long long *)(v43 + 5360);
                                v2193 = (long long *)(v44 + 5360);
                                uint64_t v2194 = *(void *)(v44 + 5360);
                                if (*(void *)(v43 + 5360) == 1)
                                {
                                  if (v2194 == 1)
                                  {
                                    long long v2195 = *v2193;
                                    *(_OWORD *)(v43 + 5369) = *(_OWORD *)(v44 + 5369);
                                    long long *v2192 = v2195;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5360) = v2194;
                                    *(unsigned char *)(v43 + 5368) = *(unsigned char *)(v44 + 5368);
                                    uint64_t v2197 = *(void *)(v44 + 5376);
                                    *(unsigned char *)(v43 + 5384) = *(unsigned char *)(v44 + 5384);
                                    *(void *)(v43 + 5376) = v2197;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2194 == 1)
                                {
                                  sub_10009F534(v43 + 5360);
                                  long long v2196 = *(_OWORD *)(v44 + 5369);
                                  long long *v2192 = *v2193;
                                  *(_OWORD *)(v43 + 5369) = v2196;
                                }
                                else
                                {
                                  *(void *)(v43 + 5360) = v2194;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5368) = *(unsigned char *)(v44 + 5368);
                                  uint64_t v2198 = *(void *)(v44 + 5376);
                                  *(unsigned char *)(v43 + 5384) = *(unsigned char *)(v44 + 5384);
                                  *(void *)(v43 + 5376) = v2198;
                                }
                                v2199 = (long long *)(v43 + 5392);
                                v2200 = (long long *)(v44 + 5392);
                                uint64_t v2201 = *(void *)(v44 + 5392);
                                if (*(void *)(v43 + 5392) == 1)
                                {
                                  if (v2201 == 1)
                                  {
                                    long long v2202 = *v2200;
                                    *(_OWORD *)(v43 + 5401) = *(_OWORD *)(v44 + 5401);
                                    long long *v2199 = v2202;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5392) = v2201;
                                    *(unsigned char *)(v43 + 5400) = *(unsigned char *)(v44 + 5400);
                                    uint64_t v2204 = *(void *)(v44 + 5408);
                                    *(unsigned char *)(v43 + 5416) = *(unsigned char *)(v44 + 5416);
                                    *(void *)(v43 + 5408) = v2204;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2201 == 1)
                                {
                                  sub_10009F534(v43 + 5392);
                                  long long v2203 = *(_OWORD *)(v44 + 5401);
                                  long long *v2199 = *v2200;
                                  *(_OWORD *)(v43 + 5401) = v2203;
                                }
                                else
                                {
                                  *(void *)(v43 + 5392) = v2201;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5400) = *(unsigned char *)(v44 + 5400);
                                  uint64_t v2205 = *(void *)(v44 + 5408);
                                  *(unsigned char *)(v43 + 5416) = *(unsigned char *)(v44 + 5416);
                                  *(void *)(v43 + 5408) = v2205;
                                }
                                v2206 = (long long *)(v43 + 5424);
                                v2207 = (long long *)(v44 + 5424);
                                uint64_t v2208 = *(void *)(v44 + 5424);
                                if (*(void *)(v43 + 5424) == 1)
                                {
                                  if (v2208 == 1)
                                  {
                                    long long v2209 = *v2207;
                                    *(_OWORD *)(v43 + 5433) = *(_OWORD *)(v44 + 5433);
                                    long long *v2206 = v2209;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5424) = v2208;
                                    *(unsigned char *)(v43 + 5432) = *(unsigned char *)(v44 + 5432);
                                    uint64_t v2211 = *(void *)(v44 + 5440);
                                    *(unsigned char *)(v43 + 5448) = *(unsigned char *)(v44 + 5448);
                                    *(void *)(v43 + 5440) = v2211;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2208 == 1)
                                {
                                  sub_10009F534(v43 + 5424);
                                  long long v2210 = *(_OWORD *)(v44 + 5433);
                                  long long *v2206 = *v2207;
                                  *(_OWORD *)(v43 + 5433) = v2210;
                                }
                                else
                                {
                                  *(void *)(v43 + 5424) = v2208;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5432) = *(unsigned char *)(v44 + 5432);
                                  uint64_t v2212 = *(void *)(v44 + 5440);
                                  *(unsigned char *)(v43 + 5448) = *(unsigned char *)(v44 + 5448);
                                  *(void *)(v43 + 5440) = v2212;
                                }
                                v2213 = (long long *)(v43 + 5456);
                                v2214 = (long long *)(v44 + 5456);
                                uint64_t v2215 = *(void *)(v44 + 5456);
                                if (*(void *)(v43 + 5456) == 1)
                                {
                                  if (v2215 == 1)
                                  {
                                    long long v2216 = *v2214;
                                    *(_OWORD *)(v43 + 5465) = *(_OWORD *)(v44 + 5465);
                                    long long *v2213 = v2216;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5456) = v2215;
                                    *(unsigned char *)(v43 + 5464) = *(unsigned char *)(v44 + 5464);
                                    uint64_t v2218 = *(void *)(v44 + 5472);
                                    *(unsigned char *)(v43 + 5480) = *(unsigned char *)(v44 + 5480);
                                    *(void *)(v43 + 5472) = v2218;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2215 == 1)
                                {
                                  sub_10009F534(v43 + 5456);
                                  long long v2217 = *(_OWORD *)(v44 + 5465);
                                  long long *v2213 = *v2214;
                                  *(_OWORD *)(v43 + 5465) = v2217;
                                }
                                else
                                {
                                  *(void *)(v43 + 5456) = v2215;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5464) = *(unsigned char *)(v44 + 5464);
                                  uint64_t v2219 = *(void *)(v44 + 5472);
                                  *(unsigned char *)(v43 + 5480) = *(unsigned char *)(v44 + 5480);
                                  *(void *)(v43 + 5472) = v2219;
                                }
                                v2220 = (long long *)(v43 + 5488);
                                v2221 = (long long *)(v44 + 5488);
                                uint64_t v2222 = *(void *)(v44 + 5488);
                                if (*(void *)(v43 + 5488) == 1)
                                {
                                  if (v2222 == 1)
                                  {
                                    long long v2223 = *v2221;
                                    *(_OWORD *)(v43 + 5497) = *(_OWORD *)(v44 + 5497);
                                    long long *v2220 = v2223;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5488) = v2222;
                                    *(unsigned char *)(v43 + 5496) = *(unsigned char *)(v44 + 5496);
                                    uint64_t v2225 = *(void *)(v44 + 5504);
                                    *(unsigned char *)(v43 + 5512) = *(unsigned char *)(v44 + 5512);
                                    *(void *)(v43 + 5504) = v2225;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2222 == 1)
                                {
                                  sub_10009F534(v43 + 5488);
                                  long long v2224 = *(_OWORD *)(v44 + 5497);
                                  long long *v2220 = *v2221;
                                  *(_OWORD *)(v43 + 5497) = v2224;
                                }
                                else
                                {
                                  *(void *)(v43 + 5488) = v2222;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5496) = *(unsigned char *)(v44 + 5496);
                                  uint64_t v2226 = *(void *)(v44 + 5504);
                                  *(unsigned char *)(v43 + 5512) = *(unsigned char *)(v44 + 5512);
                                  *(void *)(v43 + 5504) = v2226;
                                }
                                v2227 = (long long *)(v43 + 5520);
                                v2228 = (long long *)(v44 + 5520);
                                uint64_t v2229 = *(void *)(v44 + 5520);
                                if (*(void *)(v43 + 5520) == 1)
                                {
                                  if (v2229 == 1)
                                  {
                                    long long v2230 = *v2228;
                                    *(_OWORD *)(v43 + 5529) = *(_OWORD *)(v44 + 5529);
                                    long long *v2227 = v2230;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5520) = v2229;
                                    *(unsigned char *)(v43 + 5528) = *(unsigned char *)(v44 + 5528);
                                    uint64_t v2232 = *(void *)(v44 + 5536);
                                    *(unsigned char *)(v43 + 5544) = *(unsigned char *)(v44 + 5544);
                                    *(void *)(v43 + 5536) = v2232;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2229 == 1)
                                {
                                  sub_10009F534(v43 + 5520);
                                  long long v2231 = *(_OWORD *)(v44 + 5529);
                                  long long *v2227 = *v2228;
                                  *(_OWORD *)(v43 + 5529) = v2231;
                                }
                                else
                                {
                                  *(void *)(v43 + 5520) = v2229;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5528) = *(unsigned char *)(v44 + 5528);
                                  uint64_t v2233 = *(void *)(v44 + 5536);
                                  *(unsigned char *)(v43 + 5544) = *(unsigned char *)(v44 + 5544);
                                  *(void *)(v43 + 5536) = v2233;
                                }
                                v2234 = (long long *)(v43 + 5552);
                                v2235 = (long long *)(v44 + 5552);
                                uint64_t v2236 = *(void *)(v44 + 5552);
                                if (*(void *)(v43 + 5552) == 1)
                                {
                                  if (v2236 == 1)
                                  {
                                    long long v2237 = *v2235;
                                    *(_OWORD *)(v43 + 5561) = *(_OWORD *)(v44 + 5561);
                                    long long *v2234 = v2237;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5552) = v2236;
                                    *(unsigned char *)(v43 + 5560) = *(unsigned char *)(v44 + 5560);
                                    uint64_t v2239 = *(void *)(v44 + 5568);
                                    *(unsigned char *)(v43 + 5576) = *(unsigned char *)(v44 + 5576);
                                    *(void *)(v43 + 5568) = v2239;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2236 == 1)
                                {
                                  sub_10009F534(v43 + 5552);
                                  long long v2238 = *(_OWORD *)(v44 + 5561);
                                  long long *v2234 = *v2235;
                                  *(_OWORD *)(v43 + 5561) = v2238;
                                }
                                else
                                {
                                  *(void *)(v43 + 5552) = v2236;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5560) = *(unsigned char *)(v44 + 5560);
                                  uint64_t v2240 = *(void *)(v44 + 5568);
                                  *(unsigned char *)(v43 + 5576) = *(unsigned char *)(v44 + 5576);
                                  *(void *)(v43 + 5568) = v2240;
                                }
                                v2241 = (long long *)(v43 + 5584);
                                v2242 = (long long *)(v44 + 5584);
                                uint64_t v2243 = *(void *)(v44 + 5584);
                                if (*(void *)(v43 + 5584) == 1)
                                {
                                  if (v2243 == 1)
                                  {
                                    long long v2244 = *v2242;
                                    *(_OWORD *)(v43 + 5593) = *(_OWORD *)(v44 + 5593);
                                    long long *v2241 = v2244;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5584) = v2243;
                                    *(unsigned char *)(v43 + 5592) = *(unsigned char *)(v44 + 5592);
                                    uint64_t v2246 = *(void *)(v44 + 5600);
                                    *(unsigned char *)(v43 + 5608) = *(unsigned char *)(v44 + 5608);
                                    *(void *)(v43 + 5600) = v2246;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2243 == 1)
                                {
                                  sub_10009F534(v43 + 5584);
                                  long long v2245 = *(_OWORD *)(v44 + 5593);
                                  long long *v2241 = *v2242;
                                  *(_OWORD *)(v43 + 5593) = v2245;
                                }
                                else
                                {
                                  *(void *)(v43 + 5584) = v2243;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5592) = *(unsigned char *)(v44 + 5592);
                                  uint64_t v2247 = *(void *)(v44 + 5600);
                                  *(unsigned char *)(v43 + 5608) = *(unsigned char *)(v44 + 5608);
                                  *(void *)(v43 + 5600) = v2247;
                                }
                                v2248 = (long long *)(v43 + 5616);
                                v2249 = (long long *)(v44 + 5616);
                                uint64_t v2250 = *(void *)(v44 + 5616);
                                if (*(void *)(v43 + 5616) == 1)
                                {
                                  if (v2250 == 1)
                                  {
                                    long long v2251 = *v2249;
                                    *(_OWORD *)(v43 + 5625) = *(_OWORD *)(v44 + 5625);
                                    long long *v2248 = v2251;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5616) = v2250;
                                    *(unsigned char *)(v43 + 5624) = *(unsigned char *)(v44 + 5624);
                                    uint64_t v2253 = *(void *)(v44 + 5632);
                                    *(unsigned char *)(v43 + 5640) = *(unsigned char *)(v44 + 5640);
                                    *(void *)(v43 + 5632) = v2253;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2250 == 1)
                                {
                                  sub_10009F534(v43 + 5616);
                                  long long v2252 = *(_OWORD *)(v44 + 5625);
                                  long long *v2248 = *v2249;
                                  *(_OWORD *)(v43 + 5625) = v2252;
                                }
                                else
                                {
                                  *(void *)(v43 + 5616) = v2250;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5624) = *(unsigned char *)(v44 + 5624);
                                  uint64_t v2254 = *(void *)(v44 + 5632);
                                  *(unsigned char *)(v43 + 5640) = *(unsigned char *)(v44 + 5640);
                                  *(void *)(v43 + 5632) = v2254;
                                }
                                v2255 = (long long *)(v43 + 5648);
                                v2256 = (long long *)(v44 + 5648);
                                uint64_t v2257 = *(void *)(v44 + 5648);
                                if (*(void *)(v43 + 5648) == 1)
                                {
                                  if (v2257 == 1)
                                  {
                                    long long v2258 = *v2256;
                                    *(_OWORD *)(v43 + 5657) = *(_OWORD *)(v44 + 5657);
                                    long long *v2255 = v2258;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5648) = v2257;
                                    *(unsigned char *)(v43 + 5656) = *(unsigned char *)(v44 + 5656);
                                    uint64_t v2260 = *(void *)(v44 + 5664);
                                    *(unsigned char *)(v43 + 5672) = *(unsigned char *)(v44 + 5672);
                                    *(void *)(v43 + 5664) = v2260;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2257 == 1)
                                {
                                  sub_10009F534(v43 + 5648);
                                  long long v2259 = *(_OWORD *)(v44 + 5657);
                                  long long *v2255 = *v2256;
                                  *(_OWORD *)(v43 + 5657) = v2259;
                                }
                                else
                                {
                                  *(void *)(v43 + 5648) = v2257;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5656) = *(unsigned char *)(v44 + 5656);
                                  uint64_t v2261 = *(void *)(v44 + 5664);
                                  *(unsigned char *)(v43 + 5672) = *(unsigned char *)(v44 + 5672);
                                  *(void *)(v43 + 5664) = v2261;
                                }
                                v2262 = (long long *)(v43 + 5680);
                                v2263 = (long long *)(v44 + 5680);
                                uint64_t v2264 = *(void *)(v44 + 5680);
                                if (*(void *)(v43 + 5680) == 1)
                                {
                                  if (v2264 == 1)
                                  {
                                    long long v2265 = *v2263;
                                    *(_OWORD *)(v43 + 5689) = *(_OWORD *)(v44 + 5689);
                                    long long *v2262 = v2265;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5680) = v2264;
                                    *(unsigned char *)(v43 + 5688) = *(unsigned char *)(v44 + 5688);
                                    uint64_t v2267 = *(void *)(v44 + 5696);
                                    *(unsigned char *)(v43 + 5704) = *(unsigned char *)(v44 + 5704);
                                    *(void *)(v43 + 5696) = v2267;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2264 == 1)
                                {
                                  sub_10009F534(v43 + 5680);
                                  long long v2266 = *(_OWORD *)(v44 + 5689);
                                  long long *v2262 = *v2263;
                                  *(_OWORD *)(v43 + 5689) = v2266;
                                }
                                else
                                {
                                  *(void *)(v43 + 5680) = v2264;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5688) = *(unsigned char *)(v44 + 5688);
                                  uint64_t v2268 = *(void *)(v44 + 5696);
                                  *(unsigned char *)(v43 + 5704) = *(unsigned char *)(v44 + 5704);
                                  *(void *)(v43 + 5696) = v2268;
                                }
                                v2269 = (long long *)(v43 + 5712);
                                v2270 = (long long *)(v44 + 5712);
                                uint64_t v2271 = *(void *)(v44 + 5712);
                                if (*(void *)(v43 + 5712) == 1)
                                {
                                  if (v2271 == 1)
                                  {
                                    long long v2272 = *v2270;
                                    *(_OWORD *)(v43 + 5721) = *(_OWORD *)(v44 + 5721);
                                    long long *v2269 = v2272;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5712) = v2271;
                                    *(unsigned char *)(v43 + 5720) = *(unsigned char *)(v44 + 5720);
                                    uint64_t v2274 = *(void *)(v44 + 5728);
                                    *(unsigned char *)(v43 + 5736) = *(unsigned char *)(v44 + 5736);
                                    *(void *)(v43 + 5728) = v2274;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2271 == 1)
                                {
                                  sub_10009F534(v43 + 5712);
                                  long long v2273 = *(_OWORD *)(v44 + 5721);
                                  long long *v2269 = *v2270;
                                  *(_OWORD *)(v43 + 5721) = v2273;
                                }
                                else
                                {
                                  *(void *)(v43 + 5712) = v2271;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5720) = *(unsigned char *)(v44 + 5720);
                                  uint64_t v2275 = *(void *)(v44 + 5728);
                                  *(unsigned char *)(v43 + 5736) = *(unsigned char *)(v44 + 5736);
                                  *(void *)(v43 + 5728) = v2275;
                                }
                                v2276 = (long long *)(v43 + 5744);
                                v2277 = (long long *)(v44 + 5744);
                                uint64_t v2278 = *(void *)(v44 + 5744);
                                if (*(void *)(v43 + 5744) == 1)
                                {
                                  if (v2278 == 1)
                                  {
                                    long long v2279 = *v2277;
                                    *(_OWORD *)(v43 + 5753) = *(_OWORD *)(v44 + 5753);
                                    long long *v2276 = v2279;
                                  }
                                  else
                                  {
                                    *(void *)(v43 + 5744) = v2278;
                                    *(unsigned char *)(v43 + 5752) = *(unsigned char *)(v44 + 5752);
                                    uint64_t v2281 = *(void *)(v44 + 5760);
                                    *(unsigned char *)(v43 + 5768) = *(unsigned char *)(v44 + 5768);
                                    *(void *)(v43 + 5760) = v2281;
                                    swift_bridgeObjectRetain();
                                  }
                                }
                                else if (v2278 == 1)
                                {
                                  sub_10009F534(v43 + 5744);
                                  long long v2280 = *(_OWORD *)(v44 + 5753);
                                  long long *v2276 = *v2277;
                                  *(_OWORD *)(v43 + 5753) = v2280;
                                }
                                else
                                {
                                  *(void *)(v43 + 5744) = v2278;
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRelease();
                                  *(unsigned char *)(v43 + 5752) = *(unsigned char *)(v44 + 5752);
                                  uint64_t v2282 = *(void *)(v44 + 5760);
                                  *(unsigned char *)(v43 + 5768) = *(unsigned char *)(v44 + 5768);
                                  *(void *)(v43 + 5760) = v2282;
                                }
                                long long v2283 = *(_OWORD *)(v44 + 5776);
                                *(unsigned char *)(v43 + 5792) = *(unsigned char *)(v44 + 5792);
                                *(_OWORD *)(v43 + 5776) = v2283;
                                char v2284 = *(unsigned char *)(v44 + 5816);
                                *(_OWORD *)(v43 + 5800) = *(_OWORD *)(v44 + 5800);
                                *(unsigned char *)(v43 + 5816) = v2284;
                                *(unsigned char *)(v43 + 5817) = *(unsigned char *)(v44 + 5817);
                                *(unsigned char *)(v43 + 5818) = *(unsigned char *)(v44 + 5818);
                                *(unsigned char *)(v43 + 5819) = *(unsigned char *)(v44 + 5819);
                                *(unsigned char *)(v43 + 5820) = *(unsigned char *)(v44 + 5820);
                                *(unsigned char *)(v43 + 5821) = *(unsigned char *)(v44 + 5821);
                                *(unsigned char *)(v43 + 5822) = *(unsigned char *)(v44 + 5822);
                                *(unsigned char *)(v43 + 5823) = *(unsigned char *)(v44 + 5823);
                                *(void *)(v43 + 5824) = *(void *)(v44 + 5824);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                *(void *)(v43 + 5832) = *(void *)(v44 + 5832);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                goto LABEL_2268;
                              }
                              sub_10009F560((void *)(v43 + 5008));
                            }
                            memcpy((void *)(v43 + 5008), (const void *)(v44 + 5008), 0x340uLL);
LABEL_2268:
                            *(void *)(v43 + 5840) = *(void *)(v44 + 5840);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            char v2285 = *(unsigned char *)(v44 + 5852);
                            *(_DWORD *)(v43 + 5848) = *(_DWORD *)(v44 + 5848);
                            *(unsigned char *)(v43 + 5852) = v2285;
                            uint64_t v2286 = *(void *)(v44 + 5856);
                            *(unsigned char *)(v43 + 5864) = *(unsigned char *)(v44 + 5864);
                            *(void *)(v43 + 5856) = v2286;
                            uint64_t v2287 = *(void *)(v44 + 5872);
                            *(unsigned char *)(v43 + 5880) = *(unsigned char *)(v44 + 5880);
                            *(void *)(v43 + 5872) = v2287;
                            uint64_t v2288 = *(void *)(v44 + 5888);
                            *(unsigned char *)(v43 + 5896) = *(unsigned char *)(v44 + 5896);
                            *(void *)(v43 + 5888) = v2288;
                            uint64_t v2289 = *(void *)(v44 + 5904);
                            *(unsigned char *)(v43 + 5912) = *(unsigned char *)(v44 + 5912);
                            *(void *)(v43 + 5904) = v2289;
                            LODWORD(v2289) = *(_DWORD *)(v44 + 5916);
                            *(unsigned char *)(v43 + 5920) = *(unsigned char *)(v44 + 5920);
                            *(_DWORD *)(v43 + 5916) = v2289;
                            goto LABEL_2269;
                          }
                          sub_10009F560((void *)(v43 + 4176));
                        }
                        memcpy((void *)(v43 + 4176), (const void *)(v44 + 4176), 0x340uLL);
                        goto LABEL_2021;
                      }
                      sub_10009F560((void *)(v43 + 3344));
                    }
                    memcpy((void *)(v43 + 3344), (const void *)(v44 + 3344), 0x340uLL);
                    goto LABEL_1774;
                  }
                  sub_10009F560((void *)(v43 + 2512));
                }
                memcpy((void *)(v43 + 2512), (const void *)(v44 + 2512), 0x340uLL);
                goto LABEL_1527;
              }
              sub_10009F560((void *)(v43 + 1680));
            }
            memcpy((void *)(v43 + 1680), (const void *)(v44 + 1680), 0x340uLL);
            goto LABEL_1280;
          }
          sub_10009F560((void *)(v43 + 848));
        }
        memcpy((void *)(v43 + 848), (const void *)(v44 + 848), 0x340uLL);
        goto LABEL_1033;
      }
      sub_10009F560((void *)(v43 + 16));
    }
    memcpy((void *)(v43 + 16), (const void *)(v44 + 16), 0x340uLL);
    goto LABEL_786;
  }
  if (v46 == 1)
  {
LABEL_13:
    memcpy((void *)v43, (const void *)v44, 0x1721uLL);
    goto LABEL_2269;
  }
  *(void *)uint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = *(void *)(v44 + 8);
  uint64_t v47 = (long long *)(v44 + 16);
  uint64_t v48 = *(void *)(v44 + 832);
  swift_bridgeObjectRetain();
  if (v48 == 1)
  {
    memcpy((void *)(v43 + 16), (const void *)(v44 + 16), 0x340uLL);
  }
  else
  {
    if (*(void *)v47 == 1)
    {
      long long v53 = *v47;
      *(_OWORD *)(v43 + 25) = *(_OWORD *)(v44 + 25);
      *(_OWORD *)(v43 + 16) = v53;
    }
    else
    {
      *(void *)(v43 + 16) = *(void *)v47;
      *(unsigned char *)(v43 + 24) = *(unsigned char *)(v44 + 24);
      uint64_t v54 = *(void *)(v44 + 32);
      *(unsigned char *)(v43 + 40) = *(unsigned char *)(v44 + 40);
      *(void *)(v43 + 32) = v54;
      swift_bridgeObjectRetain();
    }
    uint64_t v55 = *(void *)(v44 + 48);
    if (v55 == 1)
    {
      long long v56 = *(_OWORD *)(v44 + 48);
      *(_OWORD *)(v43 + 57) = *(_OWORD *)(v44 + 57);
      *(_OWORD *)(v43 + 48) = v56;
    }
    else
    {
      *(void *)(v43 + 48) = v55;
      *(unsigned char *)(v43 + 56) = *(unsigned char *)(v44 + 56);
      uint64_t v59 = *(void *)(v44 + 64);
      *(unsigned char *)(v43 + 72) = *(unsigned char *)(v44 + 72);
      *(void *)(v43 + 64) = v59;
      swift_bridgeObjectRetain();
    }
    uint64_t v60 = *(void *)(v44 + 80);
    if (v60 == 1)
    {
      long long v61 = *(_OWORD *)(v44 + 80);
      *(_OWORD *)(v43 + 89) = *(_OWORD *)(v44 + 89);
      *(_OWORD *)(v43 + 80) = v61;
    }
    else
    {
      *(void *)(v43 + 80) = v60;
      *(unsigned char *)(v43 + 88) = *(unsigned char *)(v44 + 88);
      uint64_t v62 = *(void *)(v44 + 96);
      *(unsigned char *)(v43 + 104) = *(unsigned char *)(v44 + 104);
      *(void *)(v43 + 96) = v62;
      swift_bridgeObjectRetain();
    }
    uint64_t v63 = *(void *)(v44 + 112);
    if (v63 == 1)
    {
      long long v64 = *(_OWORD *)(v44 + 112);
      *(_OWORD *)(v43 + 121) = *(_OWORD *)(v44 + 121);
      *(_OWORD *)(v43 + 112) = v64;
    }
    else
    {
      *(void *)(v43 + 112) = v63;
      *(unsigned char *)(v43 + 120) = *(unsigned char *)(v44 + 120);
      uint64_t v65 = *(void *)(v44 + 128);
      *(unsigned char *)(v43 + 136) = *(unsigned char *)(v44 + 136);
      *(void *)(v43 + 128) = v65;
      swift_bridgeObjectRetain();
    }
    uint64_t v66 = *(void *)(v44 + 144);
    if (v66 == 1)
    {
      long long v67 = *(_OWORD *)(v44 + 144);
      *(_OWORD *)(v43 + 153) = *(_OWORD *)(v44 + 153);
      *(_OWORD *)(v43 + 144) = v67;
    }
    else
    {
      *(void *)(v43 + 144) = v66;
      *(unsigned char *)(v43 + 152) = *(unsigned char *)(v44 + 152);
      uint64_t v68 = *(void *)(v44 + 160);
      *(unsigned char *)(v43 + 168) = *(unsigned char *)(v44 + 168);
      *(void *)(v43 + 160) = v68;
      swift_bridgeObjectRetain();
    }
    uint64_t v69 = *(void *)(v44 + 176);
    if (v69 == 1)
    {
      long long v70 = *(_OWORD *)(v44 + 176);
      *(_OWORD *)(v43 + 185) = *(_OWORD *)(v44 + 185);
      *(_OWORD *)(v43 + 176) = v70;
    }
    else
    {
      *(void *)(v43 + 176) = v69;
      *(unsigned char *)(v43 + 184) = *(unsigned char *)(v44 + 184);
      uint64_t v71 = *(void *)(v44 + 192);
      *(unsigned char *)(v43 + 200) = *(unsigned char *)(v44 + 200);
      *(void *)(v43 + 192) = v71;
      swift_bridgeObjectRetain();
    }
    uint64_t v72 = *(void *)(v44 + 208);
    if (v72 == 1)
    {
      long long v73 = *(_OWORD *)(v44 + 208);
      *(_OWORD *)(v43 + 217) = *(_OWORD *)(v44 + 217);
      *(_OWORD *)(v43 + 208) = v73;
    }
    else
    {
      *(void *)(v43 + 208) = v72;
      *(unsigned char *)(v43 + 216) = *(unsigned char *)(v44 + 216);
      uint64_t v74 = *(void *)(v44 + 224);
      *(unsigned char *)(v43 + 232) = *(unsigned char *)(v44 + 232);
      *(void *)(v43 + 224) = v74;
      swift_bridgeObjectRetain();
    }
    uint64_t v75 = *(void *)(v44 + 240);
    if (v75 == 1)
    {
      long long v76 = *(_OWORD *)(v44 + 240);
      *(_OWORD *)(v43 + 249) = *(_OWORD *)(v44 + 249);
      *(_OWORD *)(v43 + 240) = v76;
    }
    else
    {
      *(void *)(v43 + 240) = v75;
      *(unsigned char *)(v43 + 248) = *(unsigned char *)(v44 + 248);
      uint64_t v77 = *(void *)(v44 + 256);
      *(unsigned char *)(v43 + 264) = *(unsigned char *)(v44 + 264);
      *(void *)(v43 + 256) = v77;
      swift_bridgeObjectRetain();
    }
    uint64_t v78 = *(void *)(v44 + 272);
    if (v78 == 1)
    {
      long long v79 = *(_OWORD *)(v44 + 272);
      *(_OWORD *)(v43 + 281) = *(_OWORD *)(v44 + 281);
      *(_OWORD *)(v43 + 272) = v79;
    }
    else
    {
      *(void *)(v43 + 272) = v78;
      *(unsigned char *)(v43 + 280) = *(unsigned char *)(v44 + 280);
      uint64_t v80 = *(void *)(v44 + 288);
      *(unsigned char *)(v43 + 296) = *(unsigned char *)(v44 + 296);
      *(void *)(v43 + 288) = v80;
      swift_bridgeObjectRetain();
    }
    uint64_t v81 = *(void *)(v44 + 304);
    if (v81 == 1)
    {
      long long v82 = *(_OWORD *)(v44 + 304);
      *(_OWORD *)(v43 + 313) = *(_OWORD *)(v44 + 313);
      *(_OWORD *)(v43 + 304) = v82;
    }
    else
    {
      *(void *)(v43 + 304) = v81;
      *(unsigned char *)(v43 + 312) = *(unsigned char *)(v44 + 312);
      uint64_t v83 = *(void *)(v44 + 320);
      *(unsigned char *)(v43 + 328) = *(unsigned char *)(v44 + 328);
      *(void *)(v43 + 320) = v83;
      swift_bridgeObjectRetain();
    }
    uint64_t v84 = *(void *)(v44 + 336);
    if (v84 == 1)
    {
      long long v85 = *(_OWORD *)(v44 + 336);
      *(_OWORD *)(v43 + 345) = *(_OWORD *)(v44 + 345);
      *(_OWORD *)(v43 + 336) = v85;
    }
    else
    {
      *(void *)(v43 + 336) = v84;
      *(unsigned char *)(v43 + 344) = *(unsigned char *)(v44 + 344);
      uint64_t v86 = *(void *)(v44 + 352);
      *(unsigned char *)(v43 + 360) = *(unsigned char *)(v44 + 360);
      *(void *)(v43 + 352) = v86;
      swift_bridgeObjectRetain();
    }
    uint64_t v87 = *(void *)(v44 + 368);
    if (v87 == 1)
    {
      long long v88 = *(_OWORD *)(v44 + 368);
      *(_OWORD *)(v43 + 377) = *(_OWORD *)(v44 + 377);
      *(_OWORD *)(v43 + 368) = v88;
    }
    else
    {
      *(void *)(v43 + 368) = v87;
      *(unsigned char *)(v43 + 376) = *(unsigned char *)(v44 + 376);
      uint64_t v89 = *(void *)(v44 + 384);
      *(unsigned char *)(v43 + 392) = *(unsigned char *)(v44 + 392);
      *(void *)(v43 + 384) = v89;
      swift_bridgeObjectRetain();
    }
    uint64_t v90 = *(void *)(v44 + 400);
    if (v90 == 1)
    {
      long long v91 = *(_OWORD *)(v44 + 400);
      *(_OWORD *)(v43 + 409) = *(_OWORD *)(v44 + 409);
      *(_OWORD *)(v43 + 400) = v91;
    }
    else
    {
      *(void *)(v43 + 400) = v90;
      *(unsigned char *)(v43 + 408) = *(unsigned char *)(v44 + 408);
      uint64_t v92 = *(void *)(v44 + 416);
      *(unsigned char *)(v43 + 424) = *(unsigned char *)(v44 + 424);
      *(void *)(v43 + 416) = v92;
      swift_bridgeObjectRetain();
    }
    uint64_t v93 = *(void *)(v44 + 432);
    if (v93 == 1)
    {
      long long v94 = *(_OWORD *)(v44 + 432);
      *(_OWORD *)(v43 + 441) = *(_OWORD *)(v44 + 441);
      *(_OWORD *)(v43 + 432) = v94;
    }
    else
    {
      *(void *)(v43 + 432) = v93;
      *(unsigned char *)(v43 + 440) = *(unsigned char *)(v44 + 440);
      uint64_t v95 = *(void *)(v44 + 448);
      *(unsigned char *)(v43 + 456) = *(unsigned char *)(v44 + 456);
      *(void *)(v43 + 448) = v95;
      swift_bridgeObjectRetain();
    }
    uint64_t v96 = *(void *)(v44 + 464);
    if (v96 == 1)
    {
      long long v97 = *(_OWORD *)(v44 + 464);
      *(_OWORD *)(v43 + 473) = *(_OWORD *)(v44 + 473);
      *(_OWORD *)(v43 + 464) = v97;
    }
    else
    {
      *(void *)(v43 + 464) = v96;
      *(unsigned char *)(v43 + 472) = *(unsigned char *)(v44 + 472);
      uint64_t v98 = *(void *)(v44 + 480);
      *(unsigned char *)(v43 + 488) = *(unsigned char *)(v44 + 488);
      *(void *)(v43 + 480) = v98;
      swift_bridgeObjectRetain();
    }
    uint64_t v99 = *(void *)(v44 + 496);
    if (v99 == 1)
    {
      long long v100 = *(_OWORD *)(v44 + 496);
      *(_OWORD *)(v43 + 505) = *(_OWORD *)(v44 + 505);
      *(_OWORD *)(v43 + 496) = v100;
    }
    else
    {
      *(void *)(v43 + 496) = v99;
      *(unsigned char *)(v43 + 504) = *(unsigned char *)(v44 + 504);
      uint64_t v101 = *(void *)(v44 + 512);
      *(unsigned char *)(v43 + 520) = *(unsigned char *)(v44 + 520);
      *(void *)(v43 + 512) = v101;
      swift_bridgeObjectRetain();
    }
    uint64_t v102 = *(void *)(v44 + 528);
    if (v102 == 1)
    {
      long long v103 = *(_OWORD *)(v44 + 528);
      *(_OWORD *)(v43 + 537) = *(_OWORD *)(v44 + 537);
      *(_OWORD *)(v43 + 528) = v103;
    }
    else
    {
      *(void *)(v43 + 528) = v102;
      *(unsigned char *)(v43 + 536) = *(unsigned char *)(v44 + 536);
      uint64_t v104 = *(void *)(v44 + 544);
      *(unsigned char *)(v43 + 552) = *(unsigned char *)(v44 + 552);
      *(void *)(v43 + 544) = v104;
      swift_bridgeObjectRetain();
    }
    uint64_t v105 = *(void *)(v44 + 560);
    if (v105 == 1)
    {
      long long v106 = *(_OWORD *)(v44 + 560);
      *(_OWORD *)(v43 + 569) = *(_OWORD *)(v44 + 569);
      *(_OWORD *)(v43 + 560) = v106;
    }
    else
    {
      *(void *)(v43 + 560) = v105;
      *(unsigned char *)(v43 + 568) = *(unsigned char *)(v44 + 568);
      uint64_t v107 = *(void *)(v44 + 576);
      *(unsigned char *)(v43 + 584) = *(unsigned char *)(v44 + 584);
      *(void *)(v43 + 576) = v107;
      swift_bridgeObjectRetain();
    }
    uint64_t v108 = *(void *)(v44 + 592);
    if (v108 == 1)
    {
      long long v109 = *(_OWORD *)(v44 + 592);
      *(_OWORD *)(v43 + 601) = *(_OWORD *)(v44 + 601);
      *(_OWORD *)(v43 + 592) = v109;
    }
    else
    {
      *(void *)(v43 + 592) = v108;
      *(unsigned char *)(v43 + 600) = *(unsigned char *)(v44 + 600);
      uint64_t v110 = *(void *)(v44 + 608);
      *(unsigned char *)(v43 + 616) = *(unsigned char *)(v44 + 616);
      *(void *)(v43 + 608) = v110;
      swift_bridgeObjectRetain();
    }
    uint64_t v111 = *(void *)(v44 + 624);
    if (v111 == 1)
    {
      long long v112 = *(_OWORD *)(v44 + 624);
      *(_OWORD *)(v43 + 633) = *(_OWORD *)(v44 + 633);
      *(_OWORD *)(v43 + 624) = v112;
    }
    else
    {
      *(void *)(v43 + 624) = v111;
      *(unsigned char *)(v43 + 632) = *(unsigned char *)(v44 + 632);
      uint64_t v113 = *(void *)(v44 + 640);
      *(unsigned char *)(v43 + 648) = *(unsigned char *)(v44 + 648);
      *(void *)(v43 + 640) = v113;
      swift_bridgeObjectRetain();
    }
    uint64_t v114 = *(void *)(v44 + 656);
    if (v114 == 1)
    {
      long long v115 = *(_OWORD *)(v44 + 656);
      *(_OWORD *)(v43 + 665) = *(_OWORD *)(v44 + 665);
      *(_OWORD *)(v43 + 656) = v115;
    }
    else
    {
      *(void *)(v43 + 656) = v114;
      *(unsigned char *)(v43 + 664) = *(unsigned char *)(v44 + 664);
      uint64_t v116 = *(void *)(v44 + 672);
      *(unsigned char *)(v43 + 680) = *(unsigned char *)(v44 + 680);
      *(void *)(v43 + 672) = v116;
      swift_bridgeObjectRetain();
    }
    uint64_t v117 = *(void *)(v44 + 688);
    if (v117 == 1)
    {
      long long v118 = *(_OWORD *)(v44 + 688);
      *(_OWORD *)(v43 + 697) = *(_OWORD *)(v44 + 697);
      *(_OWORD *)(v43 + 688) = v118;
    }
    else
    {
      *(void *)(v43 + 688) = v117;
      *(unsigned char *)(v43 + 696) = *(unsigned char *)(v44 + 696);
      uint64_t v119 = *(void *)(v44 + 704);
      *(unsigned char *)(v43 + 712) = *(unsigned char *)(v44 + 712);
      *(void *)(v43 + 704) = v119;
      swift_bridgeObjectRetain();
    }
    uint64_t v120 = *(void *)(v44 + 720);
    if (v120 == 1)
    {
      long long v121 = *(_OWORD *)(v44 + 720);
      *(_OWORD *)(v43 + 729) = *(_OWORD *)(v44 + 729);
      *(_OWORD *)(v43 + 720) = v121;
    }
    else
    {
      *(void *)(v43 + 720) = v120;
      *(unsigned char *)(v43 + 728) = *(unsigned char *)(v44 + 728);
      uint64_t v122 = *(void *)(v44 + 736);
      *(unsigned char *)(v43 + 744) = *(unsigned char *)(v44 + 744);
      *(void *)(v43 + 736) = v122;
      swift_bridgeObjectRetain();
    }
    uint64_t v123 = *(void *)(v44 + 752);
    if (v123 == 1)
    {
      long long v124 = *(_OWORD *)(v44 + 752);
      *(_OWORD *)(v43 + 761) = *(_OWORD *)(v44 + 761);
      *(_OWORD *)(v43 + 752) = v124;
    }
    else
    {
      *(void *)(v43 + 752) = v123;
      *(unsigned char *)(v43 + 760) = *(unsigned char *)(v44 + 760);
      uint64_t v125 = *(void *)(v44 + 768);
      *(unsigned char *)(v43 + 776) = *(unsigned char *)(v44 + 776);
      *(void *)(v43 + 768) = v125;
      swift_bridgeObjectRetain();
    }
    long long v126 = *(_OWORD *)(v44 + 784);
    *(unsigned char *)(v43 + 800) = *(unsigned char *)(v44 + 800);
    *(_OWORD *)(v43 + 784) = v126;
    long long v127 = *(_OWORD *)(v44 + 808);
    *(unsigned char *)(v43 + 824) = *(unsigned char *)(v44 + 824);
    *(_OWORD *)(v43 + 808) = v127;
    *(unsigned char *)(v43 + 825) = *(unsigned char *)(v44 + 825);
    *(unsigned char *)(v43 + 826) = *(unsigned char *)(v44 + 826);
    *(unsigned char *)(v43 + 827) = *(unsigned char *)(v44 + 827);
    *(unsigned char *)(v43 + 828) = *(unsigned char *)(v44 + 828);
    *(unsigned char *)(v43 + 829) = *(unsigned char *)(v44 + 829);
    *(unsigned char *)(v43 + 830) = *(unsigned char *)(v44 + 830);
    *(unsigned char *)(v43 + 831) = *(unsigned char *)(v44 + 831);
    *(void *)(v43 + 832) = *(void *)(v44 + 832);
    *(void *)(v43 + 840) = *(void *)(v44 + 840);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v128 = (_OWORD *)(v43 + 848);
  v129 = (long long *)(v44 + 848);
  if (*(void *)(v44 + 1664) == 1)
  {
    memcpy(v128, v129, 0x340uLL);
  }
  else
  {
    if (*(void *)v129 == 1)
    {
      long long v130 = *v129;
      *(_OWORD *)(v43 + 857) = *(_OWORD *)(v44 + 857);
      *uint64_t v128 = v130;
    }
    else
    {
      *(void *)(v43 + 848) = *(void *)v129;
      *(unsigned char *)(v43 + 856) = *(unsigned char *)(v44 + 856);
      uint64_t v131 = *(void *)(v44 + 864);
      *(unsigned char *)(v43 + 872) = *(unsigned char *)(v44 + 872);
      *(void *)(v43 + 864) = v131;
      swift_bridgeObjectRetain();
    }
    uint64_t v132 = *(void *)(v44 + 880);
    if (v132 == 1)
    {
      long long v133 = *(_OWORD *)(v44 + 880);
      *(_OWORD *)(v43 + 889) = *(_OWORD *)(v44 + 889);
      *(_OWORD *)(v43 + 880) = v133;
    }
    else
    {
      *(void *)(v43 + 880) = v132;
      *(unsigned char *)(v43 + 888) = *(unsigned char *)(v44 + 888);
      uint64_t v134 = *(void *)(v44 + 896);
      *(unsigned char *)(v43 + 904) = *(unsigned char *)(v44 + 904);
      *(void *)(v43 + 896) = v134;
      swift_bridgeObjectRetain();
    }
    uint64_t v135 = *(void *)(v44 + 912);
    if (v135 == 1)
    {
      long long v136 = *(_OWORD *)(v44 + 912);
      *(_OWORD *)(v43 + 921) = *(_OWORD *)(v44 + 921);
      *(_OWORD *)(v43 + 912) = v136;
    }
    else
    {
      *(void *)(v43 + 912) = v135;
      *(unsigned char *)(v43 + 920) = *(unsigned char *)(v44 + 920);
      uint64_t v137 = *(void *)(v44 + 928);
      *(unsigned char *)(v43 + 936) = *(unsigned char *)(v44 + 936);
      *(void *)(v43 + 928) = v137;
      swift_bridgeObjectRetain();
    }
    uint64_t v138 = *(void *)(v44 + 944);
    if (v138 == 1)
    {
      long long v139 = *(_OWORD *)(v44 + 944);
      *(_OWORD *)(v43 + 953) = *(_OWORD *)(v44 + 953);
      *(_OWORD *)(v43 + 944) = v139;
    }
    else
    {
      *(void *)(v43 + 944) = v138;
      *(unsigned char *)(v43 + 952) = *(unsigned char *)(v44 + 952);
      uint64_t v140 = *(void *)(v44 + 960);
      *(unsigned char *)(v43 + 968) = *(unsigned char *)(v44 + 968);
      *(void *)(v43 + 960) = v140;
      swift_bridgeObjectRetain();
    }
    uint64_t v141 = *(void *)(v44 + 976);
    if (v141 == 1)
    {
      long long v142 = *(_OWORD *)(v44 + 976);
      *(_OWORD *)(v43 + 985) = *(_OWORD *)(v44 + 985);
      *(_OWORD *)(v43 + 976) = v142;
    }
    else
    {
      *(void *)(v43 + 976) = v141;
      *(unsigned char *)(v43 + 984) = *(unsigned char *)(v44 + 984);
      uint64_t v143 = *(void *)(v44 + 992);
      *(unsigned char *)(v43 + 1000) = *(unsigned char *)(v44 + 1000);
      *(void *)(v43 + 992) = v143;
      swift_bridgeObjectRetain();
    }
    uint64_t v144 = *(void *)(v44 + 1008);
    if (v144 == 1)
    {
      long long v145 = *(_OWORD *)(v44 + 1008);
      *(_OWORD *)(v43 + 1017) = *(_OWORD *)(v44 + 1017);
      *(_OWORD *)(v43 + 1008) = v145;
    }
    else
    {
      *(void *)(v43 + 1008) = v144;
      *(unsigned char *)(v43 + 1016) = *(unsigned char *)(v44 + 1016);
      uint64_t v146 = *(void *)(v44 + 1024);
      *(unsigned char *)(v43 + 1032) = *(unsigned char *)(v44 + 1032);
      *(void *)(v43 + 1024) = v146;
      swift_bridgeObjectRetain();
    }
    uint64_t v147 = *(void *)(v44 + 1040);
    if (v147 == 1)
    {
      long long v148 = *(_OWORD *)(v44 + 1040);
      *(_OWORD *)(v43 + 1049) = *(_OWORD *)(v44 + 1049);
      *(_OWORD *)(v43 + 1040) = v148;
    }
    else
    {
      *(void *)(v43 + 1040) = v147;
      *(unsigned char *)(v43 + 1048) = *(unsigned char *)(v44 + 1048);
      uint64_t v149 = *(void *)(v44 + 1056);
      *(unsigned char *)(v43 + 1064) = *(unsigned char *)(v44 + 1064);
      *(void *)(v43 + 1056) = v149;
      swift_bridgeObjectRetain();
    }
    uint64_t v150 = *(void *)(v44 + 1072);
    if (v150 == 1)
    {
      long long v151 = *(_OWORD *)(v44 + 1072);
      *(_OWORD *)(v43 + 1081) = *(_OWORD *)(v44 + 1081);
      *(_OWORD *)(v43 + 1072) = v151;
    }
    else
    {
      *(void *)(v43 + 1072) = v150;
      *(unsigned char *)(v43 + 1080) = *(unsigned char *)(v44 + 1080);
      uint64_t v152 = *(void *)(v44 + 1088);
      *(unsigned char *)(v43 + 1096) = *(unsigned char *)(v44 + 1096);
      *(void *)(v43 + 1088) = v152;
      swift_bridgeObjectRetain();
    }
    uint64_t v153 = *(void *)(v44 + 1104);
    if (v153 == 1)
    {
      long long v154 = *(_OWORD *)(v44 + 1104);
      *(_OWORD *)(v43 + 1113) = *(_OWORD *)(v44 + 1113);
      *(_OWORD *)(v43 + 1104) = v154;
    }
    else
    {
      *(void *)(v43 + 1104) = v153;
      *(unsigned char *)(v43 + 1112) = *(unsigned char *)(v44 + 1112);
      uint64_t v155 = *(void *)(v44 + 1120);
      *(unsigned char *)(v43 + 1128) = *(unsigned char *)(v44 + 1128);
      *(void *)(v43 + 1120) = v155;
      swift_bridgeObjectRetain();
    }
    uint64_t v156 = *(void *)(v44 + 1136);
    if (v156 == 1)
    {
      long long v157 = *(_OWORD *)(v44 + 1136);
      *(_OWORD *)(v43 + 1145) = *(_OWORD *)(v44 + 1145);
      *(_OWORD *)(v43 + 1136) = v157;
    }
    else
    {
      *(void *)(v43 + 1136) = v156;
      *(unsigned char *)(v43 + 1144) = *(unsigned char *)(v44 + 1144);
      uint64_t v158 = *(void *)(v44 + 1152);
      *(unsigned char *)(v43 + 1160) = *(unsigned char *)(v44 + 1160);
      *(void *)(v43 + 1152) = v158;
      swift_bridgeObjectRetain();
    }
    uint64_t v159 = *(void *)(v44 + 1168);
    if (v159 == 1)
    {
      long long v160 = *(_OWORD *)(v44 + 1168);
      *(_OWORD *)(v43 + 1177) = *(_OWORD *)(v44 + 1177);
      *(_OWORD *)(v43 + 1168) = v160;
    }
    else
    {
      *(void *)(v43 + 1168) = v159;
      *(unsigned char *)(v43 + 1176) = *(unsigned char *)(v44 + 1176);
      uint64_t v161 = *(void *)(v44 + 1184);
      *(unsigned char *)(v43 + 1192) = *(unsigned char *)(v44 + 1192);
      *(void *)(v43 + 1184) = v161;
      swift_bridgeObjectRetain();
    }
    uint64_t v162 = *(void *)(v44 + 1200);
    if (v162 == 1)
    {
      long long v163 = *(_OWORD *)(v44 + 1200);
      *(_OWORD *)(v43 + 1209) = *(_OWORD *)(v44 + 1209);
      *(_OWORD *)(v43 + 1200) = v163;
    }
    else
    {
      *(void *)(v43 + 1200) = v162;
      *(unsigned char *)(v43 + 1208) = *(unsigned char *)(v44 + 1208);
      uint64_t v164 = *(void *)(v44 + 1216);
      *(unsigned char *)(v43 + 1224) = *(unsigned char *)(v44 + 1224);
      *(void *)(v43 + 1216) = v164;
      swift_bridgeObjectRetain();
    }
    uint64_t v165 = *(void *)(v44 + 1232);
    if (v165 == 1)
    {
      long long v166 = *(_OWORD *)(v44 + 1232);
      *(_OWORD *)(v43 + 1241) = *(_OWORD *)(v44 + 1241);
      *(_OWORD *)(v43 + 1232) = v166;
    }
    else
    {
      *(void *)(v43 + 1232) = v165;
      *(unsigned char *)(v43 + 1240) = *(unsigned char *)(v44 + 1240);
      uint64_t v167 = *(void *)(v44 + 1248);
      *(unsigned char *)(v43 + 1256) = *(unsigned char *)(v44 + 1256);
      *(void *)(v43 + 1248) = v167;
      swift_bridgeObjectRetain();
    }
    uint64_t v168 = *(void *)(v44 + 1264);
    if (v168 == 1)
    {
      long long v169 = *(_OWORD *)(v44 + 1264);
      *(_OWORD *)(v43 + 1273) = *(_OWORD *)(v44 + 1273);
      *(_OWORD *)(v43 + 1264) = v169;
    }
    else
    {
      *(void *)(v43 + 1264) = v168;
      *(unsigned char *)(v43 + 1272) = *(unsigned char *)(v44 + 1272);
      uint64_t v170 = *(void *)(v44 + 1280);
      *(unsigned char *)(v43 + 1288) = *(unsigned char *)(v44 + 1288);
      *(void *)(v43 + 1280) = v170;
      swift_bridgeObjectRetain();
    }
    uint64_t v171 = *(void *)(v44 + 1296);
    if (v171 == 1)
    {
      long long v172 = *(_OWORD *)(v44 + 1296);
      *(_OWORD *)(v43 + 1305) = *(_OWORD *)(v44 + 1305);
      *(_OWORD *)(v43 + 1296) = v172;
    }
    else
    {
      *(void *)(v43 + 1296) = v171;
      *(unsigned char *)(v43 + 1304) = *(unsigned char *)(v44 + 1304);
      uint64_t v173 = *(void *)(v44 + 1312);
      *(unsigned char *)(v43 + 1320) = *(unsigned char *)(v44 + 1320);
      *(void *)(v43 + 1312) = v173;
      swift_bridgeObjectRetain();
    }
    uint64_t v174 = *(void *)(v44 + 1328);
    if (v174 == 1)
    {
      long long v175 = *(_OWORD *)(v44 + 1328);
      *(_OWORD *)(v43 + 1337) = *(_OWORD *)(v44 + 1337);
      *(_OWORD *)(v43 + 1328) = v175;
    }
    else
    {
      *(void *)(v43 + 1328) = v174;
      *(unsigned char *)(v43 + 1336) = *(unsigned char *)(v44 + 1336);
      uint64_t v176 = *(void *)(v44 + 1344);
      *(unsigned char *)(v43 + 1352) = *(unsigned char *)(v44 + 1352);
      *(void *)(v43 + 1344) = v176;
      swift_bridgeObjectRetain();
    }
    uint64_t v177 = *(void *)(v44 + 1360);
    if (v177 == 1)
    {
      long long v178 = *(_OWORD *)(v44 + 1360);
      *(_OWORD *)(v43 + 1369) = *(_OWORD *)(v44 + 1369);
      *(_OWORD *)(v43 + 1360) = v178;
    }
    else
    {
      *(void *)(v43 + 1360) = v177;
      *(unsigned char *)(v43 + 1368) = *(unsigned char *)(v44 + 1368);
      uint64_t v179 = *(void *)(v44 + 1376);
      *(unsigned char *)(v43 + 1384) = *(unsigned char *)(v44 + 1384);
      *(void *)(v43 + 1376) = v179;
      swift_bridgeObjectRetain();
    }
    uint64_t v180 = *(void *)(v44 + 1392);
    if (v180 == 1)
    {
      long long v181 = *(_OWORD *)(v44 + 1392);
      *(_OWORD *)(v43 + 1401) = *(_OWORD *)(v44 + 1401);
      *(_OWORD *)(v43 + 1392) = v181;
    }
    else
    {
      *(void *)(v43 + 1392) = v180;
      *(unsigned char *)(v43 + 1400) = *(unsigned char *)(v44 + 1400);
      uint64_t v182 = *(void *)(v44 + 1408);
      *(unsigned char *)(v43 + 1416) = *(unsigned char *)(v44 + 1416);
      *(void *)(v43 + 1408) = v182;
      swift_bridgeObjectRetain();
    }
    uint64_t v183 = *(void *)(v44 + 1424);
    if (v183 == 1)
    {
      long long v184 = *(_OWORD *)(v44 + 1424);
      *(_OWORD *)(v43 + 1433) = *(_OWORD *)(v44 + 1433);
      *(_OWORD *)(v43 + 1424) = v184;
    }
    else
    {
      *(void *)(v43 + 1424) = v183;
      *(unsigned char *)(v43 + 1432) = *(unsigned char *)(v44 + 1432);
      uint64_t v185 = *(void *)(v44 + 1440);
      *(unsigned char *)(v43 + 1448) = *(unsigned char *)(v44 + 1448);
      *(void *)(v43 + 1440) = v185;
      swift_bridgeObjectRetain();
    }
    uint64_t v186 = *(void *)(v44 + 1456);
    if (v186 == 1)
    {
      long long v187 = *(_OWORD *)(v44 + 1456);
      *(_OWORD *)(v43 + 1465) = *(_OWORD *)(v44 + 1465);
      *(_OWORD *)(v43 + 1456) = v187;
    }
    else
    {
      *(void *)(v43 + 1456) = v186;
      *(unsigned char *)(v43 + 1464) = *(unsigned char *)(v44 + 1464);
      uint64_t v188 = *(void *)(v44 + 1472);
      *(unsigned char *)(v43 + 1480) = *(unsigned char *)(v44 + 1480);
      *(void *)(v43 + 1472) = v188;
      swift_bridgeObjectRetain();
    }
    uint64_t v189 = *(void *)(v44 + 1488);
    if (v189 == 1)
    {
      long long v190 = *(_OWORD *)(v44 + 1488);
      *(_OWORD *)(v43 + 1497) = *(_OWORD *)(v44 + 1497);
      *(_OWORD *)(v43 + 1488) = v190;
    }
    else
    {
      *(void *)(v43 + 1488) = v189;
      *(unsigned char *)(v43 + 1496) = *(unsigned char *)(v44 + 1496);
      uint64_t v191 = *(void *)(v44 + 1504);
      *(unsigned char *)(v43 + 1512) = *(unsigned char *)(v44 + 1512);
      *(void *)(v43 + 1504) = v191;
      swift_bridgeObjectRetain();
    }
    uint64_t v192 = *(void *)(v44 + 1520);
    if (v192 == 1)
    {
      long long v193 = *(_OWORD *)(v44 + 1520);
      *(_OWORD *)(v43 + 1529) = *(_OWORD *)(v44 + 1529);
      *(_OWORD *)(v43 + 1520) = v193;
    }
    else
    {
      *(void *)(v43 + 1520) = v192;
      *(unsigned char *)(v43 + 1528) = *(unsigned char *)(v44 + 1528);
      uint64_t v194 = *(void *)(v44 + 1536);
      *(unsigned char *)(v43 + 1544) = *(unsigned char *)(v44 + 1544);
      *(void *)(v43 + 1536) = v194;
      swift_bridgeObjectRetain();
    }
    uint64_t v195 = *(void *)(v44 + 1552);
    if (v195 == 1)
    {
      long long v196 = *(_OWORD *)(v44 + 1552);
      *(_OWORD *)(v43 + 1561) = *(_OWORD *)(v44 + 1561);
      *(_OWORD *)(v43 + 1552) = v196;
    }
    else
    {
      *(void *)(v43 + 1552) = v195;
      *(unsigned char *)(v43 + 1560) = *(unsigned char *)(v44 + 1560);
      uint64_t v197 = *(void *)(v44 + 1568);
      *(unsigned char *)(v43 + 1576) = *(unsigned char *)(v44 + 1576);
      *(void *)(v43 + 1568) = v197;
      swift_bridgeObjectRetain();
    }
    uint64_t v198 = *(void *)(v44 + 1584);
    if (v198 == 1)
    {
      long long v199 = *(_OWORD *)(v44 + 1584);
      *(_OWORD *)(v43 + 1593) = *(_OWORD *)(v44 + 1593);
      *(_OWORD *)(v43 + 1584) = v199;
    }
    else
    {
      *(void *)(v43 + 1584) = v198;
      *(unsigned char *)(v43 + 1592) = *(unsigned char *)(v44 + 1592);
      uint64_t v200 = *(void *)(v44 + 1600);
      *(unsigned char *)(v43 + 1608) = *(unsigned char *)(v44 + 1608);
      *(void *)(v43 + 1600) = v200;
      swift_bridgeObjectRetain();
    }
    long long v201 = *(_OWORD *)(v44 + 1616);
    *(unsigned char *)(v43 + 1632) = *(unsigned char *)(v44 + 1632);
    *(_OWORD *)(v43 + 1616) = v201;
    long long v202 = *(_OWORD *)(v44 + 1640);
    *(unsigned char *)(v43 + 1656) = *(unsigned char *)(v44 + 1656);
    *(_OWORD *)(v43 + 1640) = v202;
    *(unsigned char *)(v43 + 1657) = *(unsigned char *)(v44 + 1657);
    *(unsigned char *)(v43 + 1658) = *(unsigned char *)(v44 + 1658);
    *(unsigned char *)(v43 + 1659) = *(unsigned char *)(v44 + 1659);
    *(unsigned char *)(v43 + 1660) = *(unsigned char *)(v44 + 1660);
    *(unsigned char *)(v43 + 1661) = *(unsigned char *)(v44 + 1661);
    *(unsigned char *)(v43 + 1662) = *(unsigned char *)(v44 + 1662);
    *(unsigned char *)(v43 + 1663) = *(unsigned char *)(v44 + 1663);
    *(void *)(v43 + 1664) = *(void *)(v44 + 1664);
    *(void *)(v43 + 1672) = *(void *)(v44 + 1672);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v203 = (_OWORD *)(v43 + 1680);
  uint64_t v204 = (long long *)(v44 + 1680);
  if (*(void *)(v44 + 2496) == 1)
  {
    memcpy(v203, v204, 0x340uLL);
  }
  else
  {
    if (*(void *)v204 == 1)
    {
      long long v205 = *v204;
      *(_OWORD *)(v43 + 1689) = *(_OWORD *)(v44 + 1689);
      *uint64_t v203 = v205;
    }
    else
    {
      *(void *)(v43 + 1680) = *(void *)v204;
      *(unsigned char *)(v43 + 1688) = *(unsigned char *)(v44 + 1688);
      uint64_t v206 = *(void *)(v44 + 1696);
      *(unsigned char *)(v43 + 1704) = *(unsigned char *)(v44 + 1704);
      *(void *)(v43 + 1696) = v206;
      swift_bridgeObjectRetain();
    }
    uint64_t v207 = *(void *)(v44 + 1712);
    if (v207 == 1)
    {
      long long v208 = *(_OWORD *)(v44 + 1712);
      *(_OWORD *)(v43 + 1721) = *(_OWORD *)(v44 + 1721);
      *(_OWORD *)(v43 + 1712) = v208;
    }
    else
    {
      *(void *)(v43 + 1712) = v207;
      *(unsigned char *)(v43 + 1720) = *(unsigned char *)(v44 + 1720);
      uint64_t v209 = *(void *)(v44 + 1728);
      *(unsigned char *)(v43 + 1736) = *(unsigned char *)(v44 + 1736);
      *(void *)(v43 + 1728) = v209;
      swift_bridgeObjectRetain();
    }
    uint64_t v210 = *(void *)(v44 + 1744);
    if (v210 == 1)
    {
      long long v211 = *(_OWORD *)(v44 + 1744);
      *(_OWORD *)(v43 + 1753) = *(_OWORD *)(v44 + 1753);
      *(_OWORD *)(v43 + 1744) = v211;
    }
    else
    {
      *(void *)(v43 + 1744) = v210;
      *(unsigned char *)(v43 + 1752) = *(unsigned char *)(v44 + 1752);
      uint64_t v212 = *(void *)(v44 + 1760);
      *(unsigned char *)(v43 + 1768) = *(unsigned char *)(v44 + 1768);
      *(void *)(v43 + 1760) = v212;
      swift_bridgeObjectRetain();
    }
    uint64_t v213 = *(void *)(v44 + 1776);
    if (v213 == 1)
    {
      long long v214 = *(_OWORD *)(v44 + 1776);
      *(_OWORD *)(v43 + 1785) = *(_OWORD *)(v44 + 1785);
      *(_OWORD *)(v43 + 1776) = v214;
    }
    else
    {
      *(void *)(v43 + 1776) = v213;
      *(unsigned char *)(v43 + 1784) = *(unsigned char *)(v44 + 1784);
      uint64_t v215 = *(void *)(v44 + 1792);
      *(unsigned char *)(v43 + 1800) = *(unsigned char *)(v44 + 1800);
      *(void *)(v43 + 1792) = v215;
      swift_bridgeObjectRetain();
    }
    uint64_t v216 = *(void *)(v44 + 1808);
    if (v216 == 1)
    {
      long long v217 = *(_OWORD *)(v44 + 1808);
      *(_OWORD *)(v43 + 1817) = *(_OWORD *)(v44 + 1817);
      *(_OWORD *)(v43 + 1808) = v217;
    }
    else
    {
      *(void *)(v43 + 1808) = v216;
      *(unsigned char *)(v43 + 1816) = *(unsigned char *)(v44 + 1816);
      uint64_t v218 = *(void *)(v44 + 1824);
      *(unsigned char *)(v43 + 1832) = *(unsigned char *)(v44 + 1832);
      *(void *)(v43 + 1824) = v218;
      swift_bridgeObjectRetain();
    }
    uint64_t v219 = *(void *)(v44 + 1840);
    if (v219 == 1)
    {
      long long v220 = *(_OWORD *)(v44 + 1840);
      *(_OWORD *)(v43 + 1849) = *(_OWORD *)(v44 + 1849);
      *(_OWORD *)(v43 + 1840) = v220;
    }
    else
    {
      *(void *)(v43 + 1840) = v219;
      *(unsigned char *)(v43 + 1848) = *(unsigned char *)(v44 + 1848);
      uint64_t v221 = *(void *)(v44 + 1856);
      *(unsigned char *)(v43 + 1864) = *(unsigned char *)(v44 + 1864);
      *(void *)(v43 + 1856) = v221;
      swift_bridgeObjectRetain();
    }
    uint64_t v222 = *(void *)(v44 + 1872);
    if (v222 == 1)
    {
      long long v223 = *(_OWORD *)(v44 + 1872);
      *(_OWORD *)(v43 + 1881) = *(_OWORD *)(v44 + 1881);
      *(_OWORD *)(v43 + 1872) = v223;
    }
    else
    {
      *(void *)(v43 + 1872) = v222;
      *(unsigned char *)(v43 + 1880) = *(unsigned char *)(v44 + 1880);
      uint64_t v224 = *(void *)(v44 + 1888);
      *(unsigned char *)(v43 + 1896) = *(unsigned char *)(v44 + 1896);
      *(void *)(v43 + 1888) = v224;
      swift_bridgeObjectRetain();
    }
    uint64_t v225 = *(void *)(v44 + 1904);
    if (v225 == 1)
    {
      long long v226 = *(_OWORD *)(v44 + 1904);
      *(_OWORD *)(v43 + 1913) = *(_OWORD *)(v44 + 1913);
      *(_OWORD *)(v43 + 1904) = v226;
    }
    else
    {
      *(void *)(v43 + 1904) = v225;
      *(unsigned char *)(v43 + 1912) = *(unsigned char *)(v44 + 1912);
      uint64_t v227 = *(void *)(v44 + 1920);
      *(unsigned char *)(v43 + 1928) = *(unsigned char *)(v44 + 1928);
      *(void *)(v43 + 1920) = v227;
      swift_bridgeObjectRetain();
    }
    uint64_t v228 = *(void *)(v44 + 1936);
    if (v228 == 1)
    {
      long long v229 = *(_OWORD *)(v44 + 1936);
      *(_OWORD *)(v43 + 1945) = *(_OWORD *)(v44 + 1945);
      *(_OWORD *)(v43 + 1936) = v229;
    }
    else
    {
      *(void *)(v43 + 1936) = v228;
      *(unsigned char *)(v43 + 1944) = *(unsigned char *)(v44 + 1944);
      uint64_t v230 = *(void *)(v44 + 1952);
      *(unsigned char *)(v43 + 1960) = *(unsigned char *)(v44 + 1960);
      *(void *)(v43 + 1952) = v230;
      swift_bridgeObjectRetain();
    }
    uint64_t v231 = *(void *)(v44 + 1968);
    if (v231 == 1)
    {
      long long v232 = *(_OWORD *)(v44 + 1968);
      *(_OWORD *)(v43 + 1977) = *(_OWORD *)(v44 + 1977);
      *(_OWORD *)(v43 + 1968) = v232;
    }
    else
    {
      *(void *)(v43 + 1968) = v231;
      *(unsigned char *)(v43 + 1976) = *(unsigned char *)(v44 + 1976);
      uint64_t v233 = *(void *)(v44 + 1984);
      *(unsigned char *)(v43 + 1992) = *(unsigned char *)(v44 + 1992);
      *(void *)(v43 + 1984) = v233;
      swift_bridgeObjectRetain();
    }
    uint64_t v234 = *(void *)(v44 + 2000);
    if (v234 == 1)
    {
      long long v235 = *(_OWORD *)(v44 + 2000);
      *(_OWORD *)(v43 + 2009) = *(_OWORD *)(v44 + 2009);
      *(_OWORD *)(v43 + 2000) = v235;
    }
    else
    {
      *(void *)(v43 + 2000) = v234;
      *(unsigned char *)(v43 + 2008) = *(unsigned char *)(v44 + 2008);
      uint64_t v236 = *(void *)(v44 + 2016);
      *(unsigned char *)(v43 + 2024) = *(unsigned char *)(v44 + 2024);
      *(void *)(v43 + 2016) = v236;
      swift_bridgeObjectRetain();
    }
    uint64_t v237 = *(void *)(v44 + 2032);
    if (v237 == 1)
    {
      long long v238 = *(_OWORD *)(v44 + 2032);
      *(_OWORD *)(v43 + 2041) = *(_OWORD *)(v44 + 2041);
      *(_OWORD *)(v43 + 2032) = v238;
    }
    else
    {
      *(void *)(v43 + 2032) = v237;
      *(unsigned char *)(v43 + 2040) = *(unsigned char *)(v44 + 2040);
      uint64_t v239 = *(void *)(v44 + 2048);
      *(unsigned char *)(v43 + 2056) = *(unsigned char *)(v44 + 2056);
      *(void *)(v43 + 2048) = v239;
      swift_bridgeObjectRetain();
    }
    uint64_t v240 = *(void *)(v44 + 2064);
    if (v240 == 1)
    {
      long long v241 = *(_OWORD *)(v44 + 2064);
      *(_OWORD *)(v43 + 2073) = *(_OWORD *)(v44 + 2073);
      *(_OWORD *)(v43 + 2064) = v241;
    }
    else
    {
      *(void *)(v43 + 2064) = v240;
      *(unsigned char *)(v43 + 2072) = *(unsigned char *)(v44 + 2072);
      uint64_t v242 = *(void *)(v44 + 2080);
      *(unsigned char *)(v43 + 2088) = *(unsigned char *)(v44 + 2088);
      *(void *)(v43 + 2080) = v242;
      swift_bridgeObjectRetain();
    }
    uint64_t v243 = *(void *)(v44 + 2096);
    if (v243 == 1)
    {
      long long v244 = *(_OWORD *)(v44 + 2096);
      *(_OWORD *)(v43 + 2105) = *(_OWORD *)(v44 + 2105);
      *(_OWORD *)(v43 + 2096) = v244;
    }
    else
    {
      *(void *)(v43 + 2096) = v243;
      *(unsigned char *)(v43 + 2104) = *(unsigned char *)(v44 + 2104);
      uint64_t v245 = *(void *)(v44 + 2112);
      *(unsigned char *)(v43 + 2120) = *(unsigned char *)(v44 + 2120);
      *(void *)(v43 + 2112) = v245;
      swift_bridgeObjectRetain();
    }
    uint64_t v246 = *(void *)(v44 + 2128);
    if (v246 == 1)
    {
      long long v247 = *(_OWORD *)(v44 + 2128);
      *(_OWORD *)(v43 + 2137) = *(_OWORD *)(v44 + 2137);
      *(_OWORD *)(v43 + 2128) = v247;
    }
    else
    {
      *(void *)(v43 + 2128) = v246;
      *(unsigned char *)(v43 + 2136) = *(unsigned char *)(v44 + 2136);
      uint64_t v248 = *(void *)(v44 + 2144);
      *(unsigned char *)(v43 + 2152) = *(unsigned char *)(v44 + 2152);
      *(void *)(v43 + 2144) = v248;
      swift_bridgeObjectRetain();
    }
    uint64_t v249 = *(void *)(v44 + 2160);
    if (v249 == 1)
    {
      long long v250 = *(_OWORD *)(v44 + 2160);
      *(_OWORD *)(v43 + 2169) = *(_OWORD *)(v44 + 2169);
      *(_OWORD *)(v43 + 2160) = v250;
    }
    else
    {
      *(void *)(v43 + 2160) = v249;
      *(unsigned char *)(v43 + 2168) = *(unsigned char *)(v44 + 2168);
      uint64_t v251 = *(void *)(v44 + 2176);
      *(unsigned char *)(v43 + 2184) = *(unsigned char *)(v44 + 2184);
      *(void *)(v43 + 2176) = v251;
      swift_bridgeObjectRetain();
    }
    uint64_t v252 = *(void *)(v44 + 2192);
    if (v252 == 1)
    {
      long long v253 = *(_OWORD *)(v44 + 2192);
      *(_OWORD *)(v43 + 2201) = *(_OWORD *)(v44 + 2201);
      *(_OWORD *)(v43 + 2192) = v253;
    }
    else
    {
      *(void *)(v43 + 2192) = v252;
      *(unsigned char *)(v43 + 2200) = *(unsigned char *)(v44 + 2200);
      uint64_t v254 = *(void *)(v44 + 2208);
      *(unsigned char *)(v43 + 2216) = *(unsigned char *)(v44 + 2216);
      *(void *)(v43 + 2208) = v254;
      swift_bridgeObjectRetain();
    }
    uint64_t v255 = *(void *)(v44 + 2224);
    if (v255 == 1)
    {
      long long v256 = *(_OWORD *)(v44 + 2224);
      *(_OWORD *)(v43 + 2233) = *(_OWORD *)(v44 + 2233);
      *(_OWORD *)(v43 + 2224) = v256;
    }
    else
    {
      *(void *)(v43 + 2224) = v255;
      *(unsigned char *)(v43 + 2232) = *(unsigned char *)(v44 + 2232);
      uint64_t v257 = *(void *)(v44 + 2240);
      *(unsigned char *)(v43 + 2248) = *(unsigned char *)(v44 + 2248);
      *(void *)(v43 + 2240) = v257;
      swift_bridgeObjectRetain();
    }
    uint64_t v258 = *(void *)(v44 + 2256);
    if (v258 == 1)
    {
      long long v259 = *(_OWORD *)(v44 + 2256);
      *(_OWORD *)(v43 + 2265) = *(_OWORD *)(v44 + 2265);
      *(_OWORD *)(v43 + 2256) = v259;
    }
    else
    {
      *(void *)(v43 + 2256) = v258;
      *(unsigned char *)(v43 + 2264) = *(unsigned char *)(v44 + 2264);
      uint64_t v260 = *(void *)(v44 + 2272);
      *(unsigned char *)(v43 + 2280) = *(unsigned char *)(v44 + 2280);
      *(void *)(v43 + 2272) = v260;
      swift_bridgeObjectRetain();
    }
    uint64_t v261 = *(void *)(v44 + 2288);
    if (v261 == 1)
    {
      long long v262 = *(_OWORD *)(v44 + 2288);
      *(_OWORD *)(v43 + 2297) = *(_OWORD *)(v44 + 2297);
      *(_OWORD *)(v43 + 2288) = v262;
    }
    else
    {
      *(void *)(v43 + 2288) = v261;
      *(unsigned char *)(v43 + 2296) = *(unsigned char *)(v44 + 2296);
      uint64_t v263 = *(void *)(v44 + 2304);
      *(unsigned char *)(v43 + 2312) = *(unsigned char *)(v44 + 2312);
      *(void *)(v43 + 2304) = v263;
      swift_bridgeObjectRetain();
    }
    uint64_t v264 = *(void *)(v44 + 2320);
    if (v264 == 1)
    {
      long long v265 = *(_OWORD *)(v44 + 2320);
      *(_OWORD *)(v43 + 2329) = *(_OWORD *)(v44 + 2329);
      *(_OWORD *)(v43 + 2320) = v265;
    }
    else
    {
      *(void *)(v43 + 2320) = v264;
      *(unsigned char *)(v43 + 2328) = *(unsigned char *)(v44 + 2328);
      uint64_t v266 = *(void *)(v44 + 2336);
      *(unsigned char *)(v43 + 2344) = *(unsigned char *)(v44 + 2344);
      *(void *)(v43 + 2336) = v266;
      swift_bridgeObjectRetain();
    }
    uint64_t v267 = *(void *)(v44 + 2352);
    if (v267 == 1)
    {
      long long v268 = *(_OWORD *)(v44 + 2352);
      *(_OWORD *)(v43 + 2361) = *(_OWORD *)(v44 + 2361);
      *(_OWORD *)(v43 + 2352) = v268;
    }
    else
    {
      *(void *)(v43 + 2352) = v267;
      *(unsigned char *)(v43 + 2360) = *(unsigned char *)(v44 + 2360);
      uint64_t v269 = *(void *)(v44 + 2368);
      *(unsigned char *)(v43 + 2376) = *(unsigned char *)(v44 + 2376);
      *(void *)(v43 + 2368) = v269;
      swift_bridgeObjectRetain();
    }
    uint64_t v270 = *(void *)(v44 + 2384);
    if (v270 == 1)
    {
      long long v271 = *(_OWORD *)(v44 + 2384);
      *(_OWORD *)(v43 + 2393) = *(_OWORD *)(v44 + 2393);
      *(_OWORD *)(v43 + 2384) = v271;
    }
    else
    {
      *(void *)(v43 + 2384) = v270;
      *(unsigned char *)(v43 + 2392) = *(unsigned char *)(v44 + 2392);
      uint64_t v272 = *(void *)(v44 + 2400);
      *(unsigned char *)(v43 + 2408) = *(unsigned char *)(v44 + 2408);
      *(void *)(v43 + 2400) = v272;
      swift_bridgeObjectRetain();
    }
    uint64_t v273 = *(void *)(v44 + 2416);
    if (v273 == 1)
    {
      long long v274 = *(_OWORD *)(v44 + 2416);
      *(_OWORD *)(v43 + 2425) = *(_OWORD *)(v44 + 2425);
      *(_OWORD *)(v43 + 2416) = v274;
    }
    else
    {
      *(void *)(v43 + 2416) = v273;
      *(unsigned char *)(v43 + 2424) = *(unsigned char *)(v44 + 2424);
      uint64_t v275 = *(void *)(v44 + 2432);
      *(unsigned char *)(v43 + 2440) = *(unsigned char *)(v44 + 2440);
      *(void *)(v43 + 2432) = v275;
      swift_bridgeObjectRetain();
    }
    long long v276 = *(_OWORD *)(v44 + 2448);
    *(unsigned char *)(v43 + 2464) = *(unsigned char *)(v44 + 2464);
    *(_OWORD *)(v43 + 2448) = v276;
    long long v277 = *(_OWORD *)(v44 + 2472);
    *(unsigned char *)(v43 + 2488) = *(unsigned char *)(v44 + 2488);
    *(_OWORD *)(v43 + 2472) = v277;
    *(unsigned char *)(v43 + 2489) = *(unsigned char *)(v44 + 2489);
    *(unsigned char *)(v43 + 2490) = *(unsigned char *)(v44 + 2490);
    *(unsigned char *)(v43 + 2491) = *(unsigned char *)(v44 + 2491);
    *(unsigned char *)(v43 + 2492) = *(unsigned char *)(v44 + 2492);
    *(unsigned char *)(v43 + 2493) = *(unsigned char *)(v44 + 2493);
    *(unsigned char *)(v43 + 2494) = *(unsigned char *)(v44 + 2494);
    *(unsigned char *)(v43 + 2495) = *(unsigned char *)(v44 + 2495);
    *(void *)(v43 + 2496) = *(void *)(v44 + 2496);
    *(void *)(v43 + 2504) = *(void *)(v44 + 2504);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v278 = (_OWORD *)(v43 + 2512);
  v279 = (long long *)(v44 + 2512);
  if (*(void *)(v44 + 3328) == 1)
  {
    memcpy(v278, v279, 0x340uLL);
  }
  else
  {
    if (*(void *)v279 == 1)
    {
      long long v280 = *v279;
      *(_OWORD *)(v43 + 2521) = *(_OWORD *)(v44 + 2521);
      _OWORD *v278 = v280;
    }
    else
    {
      *(void *)(v43 + 2512) = *(void *)v279;
      *(unsigned char *)(v43 + 2520) = *(unsigned char *)(v44 + 2520);
      uint64_t v281 = *(void *)(v44 + 2528);
      *(unsigned char *)(v43 + 2536) = *(unsigned char *)(v44 + 2536);
      *(void *)(v43 + 2528) = v281;
      swift_bridgeObjectRetain();
    }
    uint64_t v282 = *(void *)(v44 + 2544);
    if (v282 == 1)
    {
      long long v283 = *(_OWORD *)(v44 + 2544);
      *(_OWORD *)(v43 + 2553) = *(_OWORD *)(v44 + 2553);
      *(_OWORD *)(v43 + 2544) = v283;
    }
    else
    {
      *(void *)(v43 + 2544) = v282;
      *(unsigned char *)(v43 + 2552) = *(unsigned char *)(v44 + 2552);
      uint64_t v284 = *(void *)(v44 + 2560);
      *(unsigned char *)(v43 + 2568) = *(unsigned char *)(v44 + 2568);
      *(void *)(v43 + 2560) = v284;
      swift_bridgeObjectRetain();
    }
    uint64_t v285 = *(void *)(v44 + 2576);
    if (v285 == 1)
    {
      long long v286 = *(_OWORD *)(v44 + 2576);
      *(_OWORD *)(v43 + 2585) = *(_OWORD *)(v44 + 2585);
      *(_OWORD *)(v43 + 2576) = v286;
    }
    else
    {
      *(void *)(v43 + 2576) = v285;
      *(unsigned char *)(v43 + 2584) = *(unsigned char *)(v44 + 2584);
      uint64_t v287 = *(void *)(v44 + 2592);
      *(unsigned char *)(v43 + 2600) = *(unsigned char *)(v44 + 2600);
      *(void *)(v43 + 2592) = v287;
      swift_bridgeObjectRetain();
    }
    uint64_t v288 = *(void *)(v44 + 2608);
    if (v288 == 1)
    {
      long long v289 = *(_OWORD *)(v44 + 2608);
      *(_OWORD *)(v43 + 2617) = *(_OWORD *)(v44 + 2617);
      *(_OWORD *)(v43 + 2608) = v289;
    }
    else
    {
      *(void *)(v43 + 2608) = v288;
      *(unsigned char *)(v43 + 2616) = *(unsigned char *)(v44 + 2616);
      uint64_t v290 = *(void *)(v44 + 2624);
      *(unsigned char *)(v43 + 2632) = *(unsigned char *)(v44 + 2632);
      *(void *)(v43 + 2624) = v290;
      swift_bridgeObjectRetain();
    }
    uint64_t v291 = *(void *)(v44 + 2640);
    if (v291 == 1)
    {
      long long v292 = *(_OWORD *)(v44 + 2640);
      *(_OWORD *)(v43 + 2649) = *(_OWORD *)(v44 + 2649);
      *(_OWORD *)(v43 + 2640) = v292;
    }
    else
    {
      *(void *)(v43 + 2640) = v291;
      *(unsigned char *)(v43 + 2648) = *(unsigned char *)(v44 + 2648);
      uint64_t v293 = *(void *)(v44 + 2656);
      *(unsigned char *)(v43 + 2664) = *(unsigned char *)(v44 + 2664);
      *(void *)(v43 + 2656) = v293;
      swift_bridgeObjectRetain();
    }
    uint64_t v294 = *(void *)(v44 + 2672);
    if (v294 == 1)
    {
      long long v295 = *(_OWORD *)(v44 + 2672);
      *(_OWORD *)(v43 + 2681) = *(_OWORD *)(v44 + 2681);
      *(_OWORD *)(v43 + 2672) = v295;
    }
    else
    {
      *(void *)(v43 + 2672) = v294;
      *(unsigned char *)(v43 + 2680) = *(unsigned char *)(v44 + 2680);
      uint64_t v296 = *(void *)(v44 + 2688);
      *(unsigned char *)(v43 + 2696) = *(unsigned char *)(v44 + 2696);
      *(void *)(v43 + 2688) = v296;
      swift_bridgeObjectRetain();
    }
    uint64_t v297 = *(void *)(v44 + 2704);
    if (v297 == 1)
    {
      long long v298 = *(_OWORD *)(v44 + 2704);
      *(_OWORD *)(v43 + 2713) = *(_OWORD *)(v44 + 2713);
      *(_OWORD *)(v43 + 2704) = v298;
    }
    else
    {
      *(void *)(v43 + 2704) = v297;
      *(unsigned char *)(v43 + 2712) = *(unsigned char *)(v44 + 2712);
      uint64_t v299 = *(void *)(v44 + 2720);
      *(unsigned char *)(v43 + 2728) = *(unsigned char *)(v44 + 2728);
      *(void *)(v43 + 2720) = v299;
      swift_bridgeObjectRetain();
    }
    uint64_t v300 = *(void *)(v44 + 2736);
    if (v300 == 1)
    {
      long long v301 = *(_OWORD *)(v44 + 2736);
      *(_OWORD *)(v43 + 2745) = *(_OWORD *)(v44 + 2745);
      *(_OWORD *)(v43 + 2736) = v301;
    }
    else
    {
      *(void *)(v43 + 2736) = v300;
      *(unsigned char *)(v43 + 2744) = *(unsigned char *)(v44 + 2744);
      uint64_t v302 = *(void *)(v44 + 2752);
      *(unsigned char *)(v43 + 2760) = *(unsigned char *)(v44 + 2760);
      *(void *)(v43 + 2752) = v302;
      swift_bridgeObjectRetain();
    }
    uint64_t v303 = *(void *)(v44 + 2768);
    if (v303 == 1)
    {
      long long v304 = *(_OWORD *)(v44 + 2768);
      *(_OWORD *)(v43 + 2777) = *(_OWORD *)(v44 + 2777);
      *(_OWORD *)(v43 + 2768) = v304;
    }
    else
    {
      *(void *)(v43 + 2768) = v303;
      *(unsigned char *)(v43 + 2776) = *(unsigned char *)(v44 + 2776);
      uint64_t v305 = *(void *)(v44 + 2784);
      *(unsigned char *)(v43 + 2792) = *(unsigned char *)(v44 + 2792);
      *(void *)(v43 + 2784) = v305;
      swift_bridgeObjectRetain();
    }
    uint64_t v306 = *(void *)(v44 + 2800);
    if (v306 == 1)
    {
      long long v307 = *(_OWORD *)(v44 + 2800);
      *(_OWORD *)(v43 + 2809) = *(_OWORD *)(v44 + 2809);
      *(_OWORD *)(v43 + 2800) = v307;
    }
    else
    {
      *(void *)(v43 + 2800) = v306;
      *(unsigned char *)(v43 + 2808) = *(unsigned char *)(v44 + 2808);
      uint64_t v308 = *(void *)(v44 + 2816);
      *(unsigned char *)(v43 + 2824) = *(unsigned char *)(v44 + 2824);
      *(void *)(v43 + 2816) = v308;
      swift_bridgeObjectRetain();
    }
    uint64_t v309 = *(void *)(v44 + 2832);
    if (v309 == 1)
    {
      long long v310 = *(_OWORD *)(v44 + 2832);
      *(_OWORD *)(v43 + 2841) = *(_OWORD *)(v44 + 2841);
      *(_OWORD *)(v43 + 2832) = v310;
    }
    else
    {
      *(void *)(v43 + 2832) = v309;
      *(unsigned char *)(v43 + 2840) = *(unsigned char *)(v44 + 2840);
      uint64_t v311 = *(void *)(v44 + 2848);
      *(unsigned char *)(v43 + 2856) = *(unsigned char *)(v44 + 2856);
      *(void *)(v43 + 2848) = v311;
      swift_bridgeObjectRetain();
    }
    uint64_t v312 = *(void *)(v44 + 2864);
    if (v312 == 1)
    {
      long long v313 = *(_OWORD *)(v44 + 2864);
      *(_OWORD *)(v43 + 2873) = *(_OWORD *)(v44 + 2873);
      *(_OWORD *)(v43 + 2864) = v313;
    }
    else
    {
      *(void *)(v43 + 2864) = v312;
      *(unsigned char *)(v43 + 2872) = *(unsigned char *)(v44 + 2872);
      uint64_t v314 = *(void *)(v44 + 2880);
      *(unsigned char *)(v43 + 2888) = *(unsigned char *)(v44 + 2888);
      *(void *)(v43 + 2880) = v314;
      swift_bridgeObjectRetain();
    }
    uint64_t v315 = *(void *)(v44 + 2896);
    if (v315 == 1)
    {
      long long v316 = *(_OWORD *)(v44 + 2896);
      *(_OWORD *)(v43 + 2905) = *(_OWORD *)(v44 + 2905);
      *(_OWORD *)(v43 + 2896) = v316;
    }
    else
    {
      *(void *)(v43 + 2896) = v315;
      *(unsigned char *)(v43 + 2904) = *(unsigned char *)(v44 + 2904);
      uint64_t v317 = *(void *)(v44 + 2912);
      *(unsigned char *)(v43 + 2920) = *(unsigned char *)(v44 + 2920);
      *(void *)(v43 + 2912) = v317;
      swift_bridgeObjectRetain();
    }
    uint64_t v318 = *(void *)(v44 + 2928);
    if (v318 == 1)
    {
      long long v319 = *(_OWORD *)(v44 + 2928);
      *(_OWORD *)(v43 + 2937) = *(_OWORD *)(v44 + 2937);
      *(_OWORD *)(v43 + 2928) = v319;
    }
    else
    {
      *(void *)(v43 + 2928) = v318;
      *(unsigned char *)(v43 + 2936) = *(unsigned char *)(v44 + 2936);
      uint64_t v320 = *(void *)(v44 + 2944);
      *(unsigned char *)(v43 + 2952) = *(unsigned char *)(v44 + 2952);
      *(void *)(v43 + 2944) = v320;
      swift_bridgeObjectRetain();
    }
    uint64_t v321 = *(void *)(v44 + 2960);
    if (v321 == 1)
    {
      long long v322 = *(_OWORD *)(v44 + 2960);
      *(_OWORD *)(v43 + 2969) = *(_OWORD *)(v44 + 2969);
      *(_OWORD *)(v43 + 2960) = v322;
    }
    else
    {
      *(void *)(v43 + 2960) = v321;
      *(unsigned char *)(v43 + 2968) = *(unsigned char *)(v44 + 2968);
      uint64_t v323 = *(void *)(v44 + 2976);
      *(unsigned char *)(v43 + 2984) = *(unsigned char *)(v44 + 2984);
      *(void *)(v43 + 2976) = v323;
      swift_bridgeObjectRetain();
    }
    uint64_t v324 = *(void *)(v44 + 2992);
    if (v324 == 1)
    {
      long long v325 = *(_OWORD *)(v44 + 2992);
      *(_OWORD *)(v43 + 3001) = *(_OWORD *)(v44 + 3001);
      *(_OWORD *)(v43 + 2992) = v325;
    }
    else
    {
      *(void *)(v43 + 2992) = v324;
      *(unsigned char *)(v43 + 3000) = *(unsigned char *)(v44 + 3000);
      uint64_t v326 = *(void *)(v44 + 3008);
      *(unsigned char *)(v43 + 3016) = *(unsigned char *)(v44 + 3016);
      *(void *)(v43 + 3008) = v326;
      swift_bridgeObjectRetain();
    }
    uint64_t v327 = *(void *)(v44 + 3024);
    if (v327 == 1)
    {
      long long v328 = *(_OWORD *)(v44 + 3024);
      *(_OWORD *)(v43 + 3033) = *(_OWORD *)(v44 + 3033);
      *(_OWORD *)(v43 + 3024) = v328;
    }
    else
    {
      *(void *)(v43 + 3024) = v327;
      *(unsigned char *)(v43 + 3032) = *(unsigned char *)(v44 + 3032);
      uint64_t v329 = *(void *)(v44 + 3040);
      *(unsigned char *)(v43 + 3048) = *(unsigned char *)(v44 + 3048);
      *(void *)(v43 + 3040) = v329;
      swift_bridgeObjectRetain();
    }
    uint64_t v330 = *(void *)(v44 + 3056);
    if (v330 == 1)
    {
      long long v331 = *(_OWORD *)(v44 + 3056);
      *(_OWORD *)(v43 + 3065) = *(_OWORD *)(v44 + 3065);
      *(_OWORD *)(v43 + 3056) = v331;
    }
    else
    {
      *(void *)(v43 + 3056) = v330;
      *(unsigned char *)(v43 + 3064) = *(unsigned char *)(v44 + 3064);
      uint64_t v332 = *(void *)(v44 + 3072);
      *(unsigned char *)(v43 + 3080) = *(unsigned char *)(v44 + 3080);
      *(void *)(v43 + 3072) = v332;
      swift_bridgeObjectRetain();
    }
    uint64_t v333 = *(void *)(v44 + 3088);
    if (v333 == 1)
    {
      long long v334 = *(_OWORD *)(v44 + 3088);
      *(_OWORD *)(v43 + 3097) = *(_OWORD *)(v44 + 3097);
      *(_OWORD *)(v43 + 3088) = v334;
    }
    else
    {
      *(void *)(v43 + 3088) = v333;
      *(unsigned char *)(v43 + 3096) = *(unsigned char *)(v44 + 3096);
      uint64_t v335 = *(void *)(v44 + 3104);
      *(unsigned char *)(v43 + 3112) = *(unsigned char *)(v44 + 3112);
      *(void *)(v43 + 3104) = v335;
      swift_bridgeObjectRetain();
    }
    uint64_t v336 = *(void *)(v44 + 3120);
    if (v336 == 1)
    {
      long long v337 = *(_OWORD *)(v44 + 3120);
      *(_OWORD *)(v43 + 3129) = *(_OWORD *)(v44 + 3129);
      *(_OWORD *)(v43 + 3120) = v337;
    }
    else
    {
      *(void *)(v43 + 3120) = v336;
      *(unsigned char *)(v43 + 3128) = *(unsigned char *)(v44 + 3128);
      uint64_t v338 = *(void *)(v44 + 3136);
      *(unsigned char *)(v43 + 3144) = *(unsigned char *)(v44 + 3144);
      *(void *)(v43 + 3136) = v338;
      swift_bridgeObjectRetain();
    }
    uint64_t v339 = *(void *)(v44 + 3152);
    if (v339 == 1)
    {
      long long v340 = *(_OWORD *)(v44 + 3152);
      *(_OWORD *)(v43 + 3161) = *(_OWORD *)(v44 + 3161);
      *(_OWORD *)(v43 + 3152) = v340;
    }
    else
    {
      *(void *)(v43 + 3152) = v339;
      *(unsigned char *)(v43 + 3160) = *(unsigned char *)(v44 + 3160);
      uint64_t v341 = *(void *)(v44 + 3168);
      *(unsigned char *)(v43 + 3176) = *(unsigned char *)(v44 + 3176);
      *(void *)(v43 + 3168) = v341;
      swift_bridgeObjectRetain();
    }
    uint64_t v342 = *(void *)(v44 + 3184);
    if (v342 == 1)
    {
      long long v343 = *(_OWORD *)(v44 + 3184);
      *(_OWORD *)(v43 + 3193) = *(_OWORD *)(v44 + 3193);
      *(_OWORD *)(v43 + 3184) = v343;
    }
    else
    {
      *(void *)(v43 + 3184) = v342;
      *(unsigned char *)(v43 + 3192) = *(unsigned char *)(v44 + 3192);
      uint64_t v344 = *(void *)(v44 + 3200);
      *(unsigned char *)(v43 + 3208) = *(unsigned char *)(v44 + 3208);
      *(void *)(v43 + 3200) = v344;
      swift_bridgeObjectRetain();
    }
    uint64_t v345 = *(void *)(v44 + 3216);
    if (v345 == 1)
    {
      long long v346 = *(_OWORD *)(v44 + 3216);
      *(_OWORD *)(v43 + 3225) = *(_OWORD *)(v44 + 3225);
      *(_OWORD *)(v43 + 3216) = v346;
    }
    else
    {
      *(void *)(v43 + 3216) = v345;
      *(unsigned char *)(v43 + 3224) = *(unsigned char *)(v44 + 3224);
      uint64_t v347 = *(void *)(v44 + 3232);
      *(unsigned char *)(v43 + 3240) = *(unsigned char *)(v44 + 3240);
      *(void *)(v43 + 3232) = v347;
      swift_bridgeObjectRetain();
    }
    uint64_t v348 = *(void *)(v44 + 3248);
    if (v348 == 1)
    {
      long long v349 = *(_OWORD *)(v44 + 3248);
      *(_OWORD *)(v43 + 3257) = *(_OWORD *)(v44 + 3257);
      *(_OWORD *)(v43 + 3248) = v349;
    }
    else
    {
      *(void *)(v43 + 3248) = v348;
      *(unsigned char *)(v43 + 3256) = *(unsigned char *)(v44 + 3256);
      uint64_t v350 = *(void *)(v44 + 3264);
      *(unsigned char *)(v43 + 3272) = *(unsigned char *)(v44 + 3272);
      *(void *)(v43 + 3264) = v350;
      swift_bridgeObjectRetain();
    }
    long long v351 = *(_OWORD *)(v44 + 3280);
    *(unsigned char *)(v43 + 3296) = *(unsigned char *)(v44 + 3296);
    *(_OWORD *)(v43 + 3280) = v351;
    long long v352 = *(_OWORD *)(v44 + 3304);
    *(unsigned char *)(v43 + 3320) = *(unsigned char *)(v44 + 3320);
    *(_OWORD *)(v43 + 3304) = v352;
    *(unsigned char *)(v43 + 3321) = *(unsigned char *)(v44 + 3321);
    *(unsigned char *)(v43 + 3322) = *(unsigned char *)(v44 + 3322);
    *(unsigned char *)(v43 + 3323) = *(unsigned char *)(v44 + 3323);
    *(unsigned char *)(v43 + 3324) = *(unsigned char *)(v44 + 3324);
    *(unsigned char *)(v43 + 3325) = *(unsigned char *)(v44 + 3325);
    *(unsigned char *)(v43 + 3326) = *(unsigned char *)(v44 + 3326);
    *(unsigned char *)(v43 + 3327) = *(unsigned char *)(v44 + 3327);
    *(void *)(v43 + 3328) = *(void *)(v44 + 3328);
    *(void *)(v43 + 3336) = *(void *)(v44 + 3336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v353 = (_OWORD *)(v43 + 3344);
  v354 = (long long *)(v44 + 3344);
  if (*(void *)(v44 + 4160) == 1)
  {
    memcpy(v353, v354, 0x340uLL);
  }
  else
  {
    if (*(void *)v354 == 1)
    {
      long long v355 = *v354;
      *(_OWORD *)(v43 + 3353) = *(_OWORD *)(v44 + 3353);
      _OWORD *v353 = v355;
    }
    else
    {
      *(void *)(v43 + 3344) = *(void *)v354;
      *(unsigned char *)(v43 + 3352) = *(unsigned char *)(v44 + 3352);
      uint64_t v356 = *(void *)(v44 + 3360);
      *(unsigned char *)(v43 + 3368) = *(unsigned char *)(v44 + 3368);
      *(void *)(v43 + 3360) = v356;
      swift_bridgeObjectRetain();
    }
    uint64_t v357 = *(void *)(v44 + 3376);
    if (v357 == 1)
    {
      long long v358 = *(_OWORD *)(v44 + 3376);
      *(_OWORD *)(v43 + 3385) = *(_OWORD *)(v44 + 3385);
      *(_OWORD *)(v43 + 3376) = v358;
    }
    else
    {
      *(void *)(v43 + 3376) = v357;
      *(unsigned char *)(v43 + 3384) = *(unsigned char *)(v44 + 3384);
      uint64_t v359 = *(void *)(v44 + 3392);
      *(unsigned char *)(v43 + 3400) = *(unsigned char *)(v44 + 3400);
      *(void *)(v43 + 3392) = v359;
      swift_bridgeObjectRetain();
    }
    uint64_t v360 = *(void *)(v44 + 3408);
    if (v360 == 1)
    {
      long long v361 = *(_OWORD *)(v44 + 3408);
      *(_OWORD *)(v43 + 3417) = *(_OWORD *)(v44 + 3417);
      *(_OWORD *)(v43 + 3408) = v361;
    }
    else
    {
      *(void *)(v43 + 3408) = v360;
      *(unsigned char *)(v43 + 3416) = *(unsigned char *)(v44 + 3416);
      uint64_t v362 = *(void *)(v44 + 3424);
      *(unsigned char *)(v43 + 3432) = *(unsigned char *)(v44 + 3432);
      *(void *)(v43 + 3424) = v362;
      swift_bridgeObjectRetain();
    }
    uint64_t v363 = *(void *)(v44 + 3440);
    if (v363 == 1)
    {
      long long v364 = *(_OWORD *)(v44 + 3440);
      *(_OWORD *)(v43 + 3449) = *(_OWORD *)(v44 + 3449);
      *(_OWORD *)(v43 + 3440) = v364;
    }
    else
    {
      *(void *)(v43 + 3440) = v363;
      *(unsigned char *)(v43 + 3448) = *(unsigned char *)(v44 + 3448);
      uint64_t v365 = *(void *)(v44 + 3456);
      *(unsigned char *)(v43 + 3464) = *(unsigned char *)(v44 + 3464);
      *(void *)(v43 + 3456) = v365;
      swift_bridgeObjectRetain();
    }
    uint64_t v366 = *(void *)(v44 + 3472);
    if (v366 == 1)
    {
      long long v367 = *(_OWORD *)(v44 + 3472);
      *(_OWORD *)(v43 + 3481) = *(_OWORD *)(v44 + 3481);
      *(_OWORD *)(v43 + 3472) = v367;
    }
    else
    {
      *(void *)(v43 + 3472) = v366;
      *(unsigned char *)(v43 + 3480) = *(unsigned char *)(v44 + 3480);
      uint64_t v368 = *(void *)(v44 + 3488);
      *(unsigned char *)(v43 + 3496) = *(unsigned char *)(v44 + 3496);
      *(void *)(v43 + 3488) = v368;
      swift_bridgeObjectRetain();
    }
    uint64_t v369 = *(void *)(v44 + 3504);
    if (v369 == 1)
    {
      long long v370 = *(_OWORD *)(v44 + 3504);
      *(_OWORD *)(v43 + 3513) = *(_OWORD *)(v44 + 3513);
      *(_OWORD *)(v43 + 3504) = v370;
    }
    else
    {
      *(void *)(v43 + 3504) = v369;
      *(unsigned char *)(v43 + 3512) = *(unsigned char *)(v44 + 3512);
      uint64_t v371 = *(void *)(v44 + 3520);
      *(unsigned char *)(v43 + 3528) = *(unsigned char *)(v44 + 3528);
      *(void *)(v43 + 3520) = v371;
      swift_bridgeObjectRetain();
    }
    uint64_t v372 = *(void *)(v44 + 3536);
    if (v372 == 1)
    {
      long long v373 = *(_OWORD *)(v44 + 3536);
      *(_OWORD *)(v43 + 3545) = *(_OWORD *)(v44 + 3545);
      *(_OWORD *)(v43 + 3536) = v373;
    }
    else
    {
      *(void *)(v43 + 3536) = v372;
      *(unsigned char *)(v43 + 3544) = *(unsigned char *)(v44 + 3544);
      uint64_t v374 = *(void *)(v44 + 3552);
      *(unsigned char *)(v43 + 3560) = *(unsigned char *)(v44 + 3560);
      *(void *)(v43 + 3552) = v374;
      swift_bridgeObjectRetain();
    }
    uint64_t v375 = *(void *)(v44 + 3568);
    if (v375 == 1)
    {
      long long v376 = *(_OWORD *)(v44 + 3568);
      *(_OWORD *)(v43 + 3577) = *(_OWORD *)(v44 + 3577);
      *(_OWORD *)(v43 + 3568) = v376;
    }
    else
    {
      *(void *)(v43 + 3568) = v375;
      *(unsigned char *)(v43 + 3576) = *(unsigned char *)(v44 + 3576);
      uint64_t v377 = *(void *)(v44 + 3584);
      *(unsigned char *)(v43 + 3592) = *(unsigned char *)(v44 + 3592);
      *(void *)(v43 + 3584) = v377;
      swift_bridgeObjectRetain();
    }
    uint64_t v378 = *(void *)(v44 + 3600);
    if (v378 == 1)
    {
      long long v379 = *(_OWORD *)(v44 + 3600);
      *(_OWORD *)(v43 + 3609) = *(_OWORD *)(v44 + 3609);
      *(_OWORD *)(v43 + 3600) = v379;
    }
    else
    {
      *(void *)(v43 + 3600) = v378;
      *(unsigned char *)(v43 + 3608) = *(unsigned char *)(v44 + 3608);
      uint64_t v380 = *(void *)(v44 + 3616);
      *(unsigned char *)(v43 + 3624) = *(unsigned char *)(v44 + 3624);
      *(void *)(v43 + 3616) = v380;
      swift_bridgeObjectRetain();
    }
    uint64_t v381 = *(void *)(v44 + 3632);
    if (v381 == 1)
    {
      long long v382 = *(_OWORD *)(v44 + 3632);
      *(_OWORD *)(v43 + 3641) = *(_OWORD *)(v44 + 3641);
      *(_OWORD *)(v43 + 3632) = v382;
    }
    else
    {
      *(void *)(v43 + 3632) = v381;
      *(unsigned char *)(v43 + 3640) = *(unsigned char *)(v44 + 3640);
      uint64_t v383 = *(void *)(v44 + 3648);
      *(unsigned char *)(v43 + 3656) = *(unsigned char *)(v44 + 3656);
      *(void *)(v43 + 3648) = v383;
      swift_bridgeObjectRetain();
    }
    uint64_t v384 = *(void *)(v44 + 3664);
    if (v384 == 1)
    {
      long long v385 = *(_OWORD *)(v44 + 3664);
      *(_OWORD *)(v43 + 3673) = *(_OWORD *)(v44 + 3673);
      *(_OWORD *)(v43 + 3664) = v385;
    }
    else
    {
      *(void *)(v43 + 3664) = v384;
      *(unsigned char *)(v43 + 3672) = *(unsigned char *)(v44 + 3672);
      uint64_t v386 = *(void *)(v44 + 3680);
      *(unsigned char *)(v43 + 3688) = *(unsigned char *)(v44 + 3688);
      *(void *)(v43 + 3680) = v386;
      swift_bridgeObjectRetain();
    }
    uint64_t v387 = *(void *)(v44 + 3696);
    if (v387 == 1)
    {
      long long v388 = *(_OWORD *)(v44 + 3696);
      *(_OWORD *)(v43 + 3705) = *(_OWORD *)(v44 + 3705);
      *(_OWORD *)(v43 + 3696) = v388;
    }
    else
    {
      *(void *)(v43 + 3696) = v387;
      *(unsigned char *)(v43 + 3704) = *(unsigned char *)(v44 + 3704);
      uint64_t v389 = *(void *)(v44 + 3712);
      *(unsigned char *)(v43 + 3720) = *(unsigned char *)(v44 + 3720);
      *(void *)(v43 + 3712) = v389;
      swift_bridgeObjectRetain();
    }
    uint64_t v390 = *(void *)(v44 + 3728);
    if (v390 == 1)
    {
      long long v391 = *(_OWORD *)(v44 + 3728);
      *(_OWORD *)(v43 + 3737) = *(_OWORD *)(v44 + 3737);
      *(_OWORD *)(v43 + 3728) = v391;
    }
    else
    {
      *(void *)(v43 + 3728) = v390;
      *(unsigned char *)(v43 + 3736) = *(unsigned char *)(v44 + 3736);
      uint64_t v392 = *(void *)(v44 + 3744);
      *(unsigned char *)(v43 + 3752) = *(unsigned char *)(v44 + 3752);
      *(void *)(v43 + 3744) = v392;
      swift_bridgeObjectRetain();
    }
    uint64_t v393 = *(void *)(v44 + 3760);
    if (v393 == 1)
    {
      long long v394 = *(_OWORD *)(v44 + 3760);
      *(_OWORD *)(v43 + 3769) = *(_OWORD *)(v44 + 3769);
      *(_OWORD *)(v43 + 3760) = v394;
    }
    else
    {
      *(void *)(v43 + 3760) = v393;
      *(unsigned char *)(v43 + 3768) = *(unsigned char *)(v44 + 3768);
      uint64_t v395 = *(void *)(v44 + 3776);
      *(unsigned char *)(v43 + 3784) = *(unsigned char *)(v44 + 3784);
      *(void *)(v43 + 3776) = v395;
      swift_bridgeObjectRetain();
    }
    uint64_t v396 = *(void *)(v44 + 3792);
    if (v396 == 1)
    {
      long long v397 = *(_OWORD *)(v44 + 3792);
      *(_OWORD *)(v43 + 3801) = *(_OWORD *)(v44 + 3801);
      *(_OWORD *)(v43 + 3792) = v397;
    }
    else
    {
      *(void *)(v43 + 3792) = v396;
      *(unsigned char *)(v43 + 3800) = *(unsigned char *)(v44 + 3800);
      uint64_t v398 = *(void *)(v44 + 3808);
      *(unsigned char *)(v43 + 3816) = *(unsigned char *)(v44 + 3816);
      *(void *)(v43 + 3808) = v398;
      swift_bridgeObjectRetain();
    }
    uint64_t v399 = *(void *)(v44 + 3824);
    if (v399 == 1)
    {
      long long v400 = *(_OWORD *)(v44 + 3824);
      *(_OWORD *)(v43 + 3833) = *(_OWORD *)(v44 + 3833);
      *(_OWORD *)(v43 + 3824) = v400;
    }
    else
    {
      *(void *)(v43 + 3824) = v399;
      *(unsigned char *)(v43 + 3832) = *(unsigned char *)(v44 + 3832);
      uint64_t v401 = *(void *)(v44 + 3840);
      *(unsigned char *)(v43 + 3848) = *(unsigned char *)(v44 + 3848);
      *(void *)(v43 + 3840) = v401;
      swift_bridgeObjectRetain();
    }
    uint64_t v402 = *(void *)(v44 + 3856);
    if (v402 == 1)
    {
      long long v403 = *(_OWORD *)(v44 + 3856);
      *(_OWORD *)(v43 + 3865) = *(_OWORD *)(v44 + 3865);
      *(_OWORD *)(v43 + 3856) = v403;
    }
    else
    {
      *(void *)(v43 + 3856) = v402;
      *(unsigned char *)(v43 + 3864) = *(unsigned char *)(v44 + 3864);
      uint64_t v404 = *(void *)(v44 + 3872);
      *(unsigned char *)(v43 + 3880) = *(unsigned char *)(v44 + 3880);
      *(void *)(v43 + 3872) = v404;
      swift_bridgeObjectRetain();
    }
    uint64_t v405 = *(void *)(v44 + 3888);
    if (v405 == 1)
    {
      long long v406 = *(_OWORD *)(v44 + 3888);
      *(_OWORD *)(v43 + 3897) = *(_OWORD *)(v44 + 3897);
      *(_OWORD *)(v43 + 3888) = v406;
    }
    else
    {
      *(void *)(v43 + 3888) = v405;
      *(unsigned char *)(v43 + 3896) = *(unsigned char *)(v44 + 3896);
      uint64_t v407 = *(void *)(v44 + 3904);
      *(unsigned char *)(v43 + 3912) = *(unsigned char *)(v44 + 3912);
      *(void *)(v43 + 3904) = v407;
      swift_bridgeObjectRetain();
    }
    uint64_t v408 = *(void *)(v44 + 3920);
    if (v408 == 1)
    {
      long long v409 = *(_OWORD *)(v44 + 3920);
      *(_OWORD *)(v43 + 3929) = *(_OWORD *)(v44 + 3929);
      *(_OWORD *)(v43 + 3920) = v409;
    }
    else
    {
      *(void *)(v43 + 3920) = v408;
      *(unsigned char *)(v43 + 3928) = *(unsigned char *)(v44 + 3928);
      uint64_t v410 = *(void *)(v44 + 3936);
      *(unsigned char *)(v43 + 3944) = *(unsigned char *)(v44 + 3944);
      *(void *)(v43 + 3936) = v410;
      swift_bridgeObjectRetain();
    }
    uint64_t v411 = *(void *)(v44 + 3952);
    if (v411 == 1)
    {
      long long v412 = *(_OWORD *)(v44 + 3952);
      *(_OWORD *)(v43 + 3961) = *(_OWORD *)(v44 + 3961);
      *(_OWORD *)(v43 + 3952) = v412;
    }
    else
    {
      *(void *)(v43 + 3952) = v411;
      *(unsigned char *)(v43 + 3960) = *(unsigned char *)(v44 + 3960);
      uint64_t v413 = *(void *)(v44 + 3968);
      *(unsigned char *)(v43 + 3976) = *(unsigned char *)(v44 + 3976);
      *(void *)(v43 + 3968) = v413;
      swift_bridgeObjectRetain();
    }
    uint64_t v414 = *(void *)(v44 + 3984);
    if (v414 == 1)
    {
      long long v415 = *(_OWORD *)(v44 + 3984);
      *(_OWORD *)(v43 + 3993) = *(_OWORD *)(v44 + 3993);
      *(_OWORD *)(v43 + 3984) = v415;
    }
    else
    {
      *(void *)(v43 + 3984) = v414;
      *(unsigned char *)(v43 + 3992) = *(unsigned char *)(v44 + 3992);
      uint64_t v416 = *(void *)(v44 + 4000);
      *(unsigned char *)(v43 + 4008) = *(unsigned char *)(v44 + 4008);
      *(void *)(v43 + 4000) = v416;
      swift_bridgeObjectRetain();
    }
    uint64_t v417 = *(void *)(v44 + 4016);
    if (v417 == 1)
    {
      long long v418 = *(_OWORD *)(v44 + 4016);
      *(_OWORD *)(v43 + 4025) = *(_OWORD *)(v44 + 4025);
      *(_OWORD *)(v43 + 4016) = v418;
    }
    else
    {
      *(void *)(v43 + 4016) = v417;
      *(unsigned char *)(v43 + 4024) = *(unsigned char *)(v44 + 4024);
      uint64_t v419 = *(void *)(v44 + 4032);
      *(unsigned char *)(v43 + 4040) = *(unsigned char *)(v44 + 4040);
      *(void *)(v43 + 4032) = v419;
      swift_bridgeObjectRetain();
    }
    uint64_t v420 = *(void *)(v44 + 4048);
    if (v420 == 1)
    {
      long long v421 = *(_OWORD *)(v44 + 4048);
      *(_OWORD *)(v43 + 4057) = *(_OWORD *)(v44 + 4057);
      *(_OWORD *)(v43 + 4048) = v421;
    }
    else
    {
      *(void *)(v43 + 4048) = v420;
      *(unsigned char *)(v43 + 4056) = *(unsigned char *)(v44 + 4056);
      uint64_t v422 = *(void *)(v44 + 4064);
      *(unsigned char *)(v43 + 4072) = *(unsigned char *)(v44 + 4072);
      *(void *)(v43 + 4064) = v422;
      swift_bridgeObjectRetain();
    }
    uint64_t v423 = *(void *)(v44 + 4080);
    if (v423 == 1)
    {
      long long v424 = *(_OWORD *)(v44 + 4080);
      *(_OWORD *)(v43 + 4089) = *(_OWORD *)(v44 + 4089);
      *(_OWORD *)(v43 + 4080) = v424;
    }
    else
    {
      *(void *)(v43 + 4080) = v423;
      *(unsigned char *)(v43 + 4088) = *(unsigned char *)(v44 + 4088);
      uint64_t v425 = *(void *)(v44 + 4096);
      *(unsigned char *)(v43 + 4104) = *(unsigned char *)(v44 + 4104);
      *(void *)(v43 + 4096) = v425;
      swift_bridgeObjectRetain();
    }
    long long v426 = *(_OWORD *)(v44 + 4112);
    *(unsigned char *)(v43 + 4128) = *(unsigned char *)(v44 + 4128);
    *(_OWORD *)(v43 + 4112) = v426;
    char v427 = *(unsigned char *)(v44 + 4152);
    *(_OWORD *)(v43 + 4136) = *(_OWORD *)(v44 + 4136);
    *(unsigned char *)(v43 + 4152) = v427;
    *(unsigned char *)(v43 + 4153) = *(unsigned char *)(v44 + 4153);
    *(unsigned char *)(v43 + 4154) = *(unsigned char *)(v44 + 4154);
    *(unsigned char *)(v43 + 4155) = *(unsigned char *)(v44 + 4155);
    *(unsigned char *)(v43 + 4156) = *(unsigned char *)(v44 + 4156);
    *(unsigned char *)(v43 + 4157) = *(unsigned char *)(v44 + 4157);
    *(unsigned char *)(v43 + 4158) = *(unsigned char *)(v44 + 4158);
    *(unsigned char *)(v43 + 4159) = *(unsigned char *)(v44 + 4159);
    *(void *)(v43 + 4160) = *(void *)(v44 + 4160);
    *(void *)(v43 + 4168) = *(void *)(v44 + 4168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v428 = (_OWORD *)(v43 + 4176);
  v429 = (long long *)(v44 + 4176);
  if (*(void *)(v44 + 4992) == 1)
  {
    memcpy(v428, v429, 0x340uLL);
  }
  else
  {
    if (*(void *)v429 == 1)
    {
      long long v430 = *v429;
      *(_OWORD *)(v43 + 4185) = *(_OWORD *)(v44 + 4185);
      _OWORD *v428 = v430;
    }
    else
    {
      *(void *)(v43 + 4176) = *(void *)v429;
      *(unsigned char *)(v43 + 4184) = *(unsigned char *)(v44 + 4184);
      uint64_t v431 = *(void *)(v44 + 4192);
      *(unsigned char *)(v43 + 4200) = *(unsigned char *)(v44 + 4200);
      *(void *)(v43 + 4192) = v431;
      swift_bridgeObjectRetain();
    }
    uint64_t v432 = *(void *)(v44 + 4208);
    if (v432 == 1)
    {
      long long v433 = *(_OWORD *)(v44 + 4208);
      *(_OWORD *)(v43 + 4217) = *(_OWORD *)(v44 + 4217);
      *(_OWORD *)(v43 + 4208) = v433;
    }
    else
    {
      *(void *)(v43 + 4208) = v432;
      *(unsigned char *)(v43 + 4216) = *(unsigned char *)(v44 + 4216);
      uint64_t v434 = *(void *)(v44 + 4224);
      *(unsigned char *)(v43 + 4232) = *(unsigned char *)(v44 + 4232);
      *(void *)(v43 + 4224) = v434;
      swift_bridgeObjectRetain();
    }
    uint64_t v435 = *(void *)(v44 + 4240);
    if (v435 == 1)
    {
      long long v436 = *(_OWORD *)(v44 + 4240);
      *(_OWORD *)(v43 + 4249) = *(_OWORD *)(v44 + 4249);
      *(_OWORD *)(v43 + 4240) = v436;
    }
    else
    {
      *(void *)(v43 + 4240) = v435;
      *(unsigned char *)(v43 + 4248) = *(unsigned char *)(v44 + 4248);
      uint64_t v437 = *(void *)(v44 + 4256);
      *(unsigned char *)(v43 + 4264) = *(unsigned char *)(v44 + 4264);
      *(void *)(v43 + 4256) = v437;
      swift_bridgeObjectRetain();
    }
    uint64_t v438 = *(void *)(v44 + 4272);
    if (v438 == 1)
    {
      long long v439 = *(_OWORD *)(v44 + 4272);
      *(_OWORD *)(v43 + 4281) = *(_OWORD *)(v44 + 4281);
      *(_OWORD *)(v43 + 4272) = v439;
    }
    else
    {
      *(void *)(v43 + 4272) = v438;
      *(unsigned char *)(v43 + 4280) = *(unsigned char *)(v44 + 4280);
      uint64_t v440 = *(void *)(v44 + 4288);
      *(unsigned char *)(v43 + 4296) = *(unsigned char *)(v44 + 4296);
      *(void *)(v43 + 4288) = v440;
      swift_bridgeObjectRetain();
    }
    uint64_t v441 = *(void *)(v44 + 4304);
    if (v441 == 1)
    {
      long long v442 = *(_OWORD *)(v44 + 4304);
      *(_OWORD *)(v43 + 4313) = *(_OWORD *)(v44 + 4313);
      *(_OWORD *)(v43 + 4304) = v442;
    }
    else
    {
      *(void *)(v43 + 4304) = v441;
      *(unsigned char *)(v43 + 4312) = *(unsigned char *)(v44 + 4312);
      uint64_t v443 = *(void *)(v44 + 4320);
      *(unsigned char *)(v43 + 4328) = *(unsigned char *)(v44 + 4328);
      *(void *)(v43 + 4320) = v443;
      swift_bridgeObjectRetain();
    }
    uint64_t v444 = *(void *)(v44 + 4336);
    if (v444 == 1)
    {
      long long v445 = *(_OWORD *)(v44 + 4336);
      *(_OWORD *)(v43 + 4345) = *(_OWORD *)(v44 + 4345);
      *(_OWORD *)(v43 + 4336) = v445;
    }
    else
    {
      *(void *)(v43 + 4336) = v444;
      *(unsigned char *)(v43 + 4344) = *(unsigned char *)(v44 + 4344);
      uint64_t v446 = *(void *)(v44 + 4352);
      *(unsigned char *)(v43 + 4360) = *(unsigned char *)(v44 + 4360);
      *(void *)(v43 + 4352) = v446;
      swift_bridgeObjectRetain();
    }
    uint64_t v447 = *(void *)(v44 + 4368);
    if (v447 == 1)
    {
      long long v448 = *(_OWORD *)(v44 + 4368);
      *(_OWORD *)(v43 + 4377) = *(_OWORD *)(v44 + 4377);
      *(_OWORD *)(v43 + 4368) = v448;
    }
    else
    {
      *(void *)(v43 + 4368) = v447;
      *(unsigned char *)(v43 + 4376) = *(unsigned char *)(v44 + 4376);
      uint64_t v449 = *(void *)(v44 + 4384);
      *(unsigned char *)(v43 + 4392) = *(unsigned char *)(v44 + 4392);
      *(void *)(v43 + 4384) = v449;
      swift_bridgeObjectRetain();
    }
    uint64_t v450 = *(void *)(v44 + 4400);
    if (v450 == 1)
    {
      long long v451 = *(_OWORD *)(v44 + 4400);
      *(_OWORD *)(v43 + 4409) = *(_OWORD *)(v44 + 4409);
      *(_OWORD *)(v43 + 4400) = v451;
    }
    else
    {
      *(void *)(v43 + 4400) = v450;
      *(unsigned char *)(v43 + 4408) = *(unsigned char *)(v44 + 4408);
      uint64_t v452 = *(void *)(v44 + 4416);
      *(unsigned char *)(v43 + 4424) = *(unsigned char *)(v44 + 4424);
      *(void *)(v43 + 4416) = v452;
      swift_bridgeObjectRetain();
    }
    uint64_t v453 = *(void *)(v44 + 4432);
    if (v453 == 1)
    {
      long long v454 = *(_OWORD *)(v44 + 4432);
      *(_OWORD *)(v43 + 4441) = *(_OWORD *)(v44 + 4441);
      *(_OWORD *)(v43 + 4432) = v454;
    }
    else
    {
      *(void *)(v43 + 4432) = v453;
      *(unsigned char *)(v43 + 4440) = *(unsigned char *)(v44 + 4440);
      uint64_t v455 = *(void *)(v44 + 4448);
      *(unsigned char *)(v43 + 4456) = *(unsigned char *)(v44 + 4456);
      *(void *)(v43 + 4448) = v455;
      swift_bridgeObjectRetain();
    }
    uint64_t v456 = *(void *)(v44 + 4464);
    if (v456 == 1)
    {
      long long v457 = *(_OWORD *)(v44 + 4464);
      *(_OWORD *)(v43 + 4473) = *(_OWORD *)(v44 + 4473);
      *(_OWORD *)(v43 + 4464) = v457;
    }
    else
    {
      *(void *)(v43 + 4464) = v456;
      *(unsigned char *)(v43 + 4472) = *(unsigned char *)(v44 + 4472);
      uint64_t v458 = *(void *)(v44 + 4480);
      *(unsigned char *)(v43 + 4488) = *(unsigned char *)(v44 + 4488);
      *(void *)(v43 + 4480) = v458;
      swift_bridgeObjectRetain();
    }
    uint64_t v459 = *(void *)(v44 + 4496);
    if (v459 == 1)
    {
      long long v460 = *(_OWORD *)(v44 + 4496);
      *(_OWORD *)(v43 + 4505) = *(_OWORD *)(v44 + 4505);
      *(_OWORD *)(v43 + 4496) = v460;
    }
    else
    {
      *(void *)(v43 + 4496) = v459;
      *(unsigned char *)(v43 + 4504) = *(unsigned char *)(v44 + 4504);
      uint64_t v461 = *(void *)(v44 + 4512);
      *(unsigned char *)(v43 + 4520) = *(unsigned char *)(v44 + 4520);
      *(void *)(v43 + 4512) = v461;
      swift_bridgeObjectRetain();
    }
    uint64_t v462 = *(void *)(v44 + 4528);
    if (v462 == 1)
    {
      long long v463 = *(_OWORD *)(v44 + 4528);
      *(_OWORD *)(v43 + 4537) = *(_OWORD *)(v44 + 4537);
      *(_OWORD *)(v43 + 4528) = v463;
    }
    else
    {
      *(void *)(v43 + 4528) = v462;
      *(unsigned char *)(v43 + 4536) = *(unsigned char *)(v44 + 4536);
      uint64_t v464 = *(void *)(v44 + 4544);
      *(unsigned char *)(v43 + 4552) = *(unsigned char *)(v44 + 4552);
      *(void *)(v43 + 4544) = v464;
      swift_bridgeObjectRetain();
    }
    uint64_t v465 = *(void *)(v44 + 4560);
    if (v465 == 1)
    {
      long long v466 = *(_OWORD *)(v44 + 4560);
      *(_OWORD *)(v43 + 4569) = *(_OWORD *)(v44 + 4569);
      *(_OWORD *)(v43 + 4560) = v466;
    }
    else
    {
      *(void *)(v43 + 4560) = v465;
      *(unsigned char *)(v43 + 4568) = *(unsigned char *)(v44 + 4568);
      uint64_t v467 = *(void *)(v44 + 4576);
      *(unsigned char *)(v43 + 4584) = *(unsigned char *)(v44 + 4584);
      *(void *)(v43 + 4576) = v467;
      swift_bridgeObjectRetain();
    }
    uint64_t v468 = *(void *)(v44 + 4592);
    if (v468 == 1)
    {
      long long v469 = *(_OWORD *)(v44 + 4592);
      *(_OWORD *)(v43 + 4601) = *(_OWORD *)(v44 + 4601);
      *(_OWORD *)(v43 + 4592) = v469;
    }
    else
    {
      *(void *)(v43 + 4592) = v468;
      *(unsigned char *)(v43 + 4600) = *(unsigned char *)(v44 + 4600);
      uint64_t v470 = *(void *)(v44 + 4608);
      *(unsigned char *)(v43 + 4616) = *(unsigned char *)(v44 + 4616);
      *(void *)(v43 + 4608) = v470;
      swift_bridgeObjectRetain();
    }
    uint64_t v471 = *(void *)(v44 + 4624);
    if (v471 == 1)
    {
      long long v472 = *(_OWORD *)(v44 + 4624);
      *(_OWORD *)(v43 + 4633) = *(_OWORD *)(v44 + 4633);
      *(_OWORD *)(v43 + 4624) = v472;
    }
    else
    {
      *(void *)(v43 + 4624) = v471;
      *(unsigned char *)(v43 + 4632) = *(unsigned char *)(v44 + 4632);
      uint64_t v473 = *(void *)(v44 + 4640);
      *(unsigned char *)(v43 + 4648) = *(unsigned char *)(v44 + 4648);
      *(void *)(v43 + 4640) = v473;
      swift_bridgeObjectRetain();
    }
    uint64_t v474 = *(void *)(v44 + 4656);
    if (v474 == 1)
    {
      long long v475 = *(_OWORD *)(v44 + 4656);
      *(_OWORD *)(v43 + 4665) = *(_OWORD *)(v44 + 4665);
      *(_OWORD *)(v43 + 4656) = v475;
    }
    else
    {
      *(void *)(v43 + 4656) = v474;
      *(unsigned char *)(v43 + 4664) = *(unsigned char *)(v44 + 4664);
      uint64_t v476 = *(void *)(v44 + 4672);
      *(unsigned char *)(v43 + 4680) = *(unsigned char *)(v44 + 4680);
      *(void *)(v43 + 4672) = v476;
      swift_bridgeObjectRetain();
    }
    uint64_t v477 = *(void *)(v44 + 4688);
    if (v477 == 1)
    {
      long long v478 = *(_OWORD *)(v44 + 4688);
      *(_OWORD *)(v43 + 4697) = *(_OWORD *)(v44 + 4697);
      *(_OWORD *)(v43 + 4688) = v478;
    }
    else
    {
      *(void *)(v43 + 4688) = v477;
      *(unsigned char *)(v43 + 4696) = *(unsigned char *)(v44 + 4696);
      uint64_t v479 = *(void *)(v44 + 4704);
      *(unsigned char *)(v43 + 4712) = *(unsigned char *)(v44 + 4712);
      *(void *)(v43 + 4704) = v479;
      swift_bridgeObjectRetain();
    }
    uint64_t v480 = *(void *)(v44 + 4720);
    if (v480 == 1)
    {
      long long v481 = *(_OWORD *)(v44 + 4720);
      *(_OWORD *)(v43 + 4729) = *(_OWORD *)(v44 + 4729);
      *(_OWORD *)(v43 + 4720) = v481;
    }
    else
    {
      *(void *)(v43 + 4720) = v480;
      *(unsigned char *)(v43 + 4728) = *(unsigned char *)(v44 + 4728);
      uint64_t v482 = *(void *)(v44 + 4736);
      *(unsigned char *)(v43 + 4744) = *(unsigned char *)(v44 + 4744);
      *(void *)(v43 + 4736) = v482;
      swift_bridgeObjectRetain();
    }
    uint64_t v483 = *(void *)(v44 + 4752);
    if (v483 == 1)
    {
      long long v484 = *(_OWORD *)(v44 + 4752);
      *(_OWORD *)(v43 + 4761) = *(_OWORD *)(v44 + 4761);
      *(_OWORD *)(v43 + 4752) = v484;
    }
    else
    {
      *(void *)(v43 + 4752) = v483;
      *(unsigned char *)(v43 + 4760) = *(unsigned char *)(v44 + 4760);
      uint64_t v485 = *(void *)(v44 + 4768);
      *(unsigned char *)(v43 + 4776) = *(unsigned char *)(v44 + 4776);
      *(void *)(v43 + 4768) = v485;
      swift_bridgeObjectRetain();
    }
    uint64_t v486 = *(void *)(v44 + 4784);
    if (v486 == 1)
    {
      long long v487 = *(_OWORD *)(v44 + 4784);
      *(_OWORD *)(v43 + 4793) = *(_OWORD *)(v44 + 4793);
      *(_OWORD *)(v43 + 4784) = v487;
    }
    else
    {
      *(void *)(v43 + 4784) = v486;
      *(unsigned char *)(v43 + 4792) = *(unsigned char *)(v44 + 4792);
      uint64_t v488 = *(void *)(v44 + 4800);
      *(unsigned char *)(v43 + 4808) = *(unsigned char *)(v44 + 4808);
      *(void *)(v43 + 4800) = v488;
      swift_bridgeObjectRetain();
    }
    uint64_t v489 = *(void *)(v44 + 4816);
    if (v489 == 1)
    {
      long long v490 = *(_OWORD *)(v44 + 4816);
      *(_OWORD *)(v43 + 4825) = *(_OWORD *)(v44 + 4825);
      *(_OWORD *)(v43 + 4816) = v490;
    }
    else
    {
      *(void *)(v43 + 4816) = v489;
      *(unsigned char *)(v43 + 4824) = *(unsigned char *)(v44 + 4824);
      uint64_t v491 = *(void *)(v44 + 4832);
      *(unsigned char *)(v43 + 4840) = *(unsigned char *)(v44 + 4840);
      *(void *)(v43 + 4832) = v491;
      swift_bridgeObjectRetain();
    }
    uint64_t v492 = *(void *)(v44 + 4848);
    if (v492 == 1)
    {
      long long v493 = *(_OWORD *)(v44 + 4848);
      *(_OWORD *)(v43 + 4857) = *(_OWORD *)(v44 + 4857);
      *(_OWORD *)(v43 + 4848) = v493;
    }
    else
    {
      *(void *)(v43 + 4848) = v492;
      *(unsigned char *)(v43 + 4856) = *(unsigned char *)(v44 + 4856);
      uint64_t v494 = *(void *)(v44 + 4864);
      *(unsigned char *)(v43 + 4872) = *(unsigned char *)(v44 + 4872);
      *(void *)(v43 + 4864) = v494;
      swift_bridgeObjectRetain();
    }
    uint64_t v495 = *(void *)(v44 + 4880);
    if (v495 == 1)
    {
      long long v496 = *(_OWORD *)(v44 + 4880);
      *(_OWORD *)(v43 + 4889) = *(_OWORD *)(v44 + 4889);
      *(_OWORD *)(v43 + 4880) = v496;
    }
    else
    {
      *(void *)(v43 + 4880) = v495;
      *(unsigned char *)(v43 + 4888) = *(unsigned char *)(v44 + 4888);
      uint64_t v497 = *(void *)(v44 + 4896);
      *(unsigned char *)(v43 + 4904) = *(unsigned char *)(v44 + 4904);
      *(void *)(v43 + 4896) = v497;
      swift_bridgeObjectRetain();
    }
    uint64_t v498 = *(void *)(v44 + 4912);
    if (v498 == 1)
    {
      long long v499 = *(_OWORD *)(v44 + 4912);
      *(_OWORD *)(v43 + 4921) = *(_OWORD *)(v44 + 4921);
      *(_OWORD *)(v43 + 4912) = v499;
    }
    else
    {
      *(void *)(v43 + 4912) = v498;
      *(unsigned char *)(v43 + 4920) = *(unsigned char *)(v44 + 4920);
      uint64_t v500 = *(void *)(v44 + 4928);
      *(unsigned char *)(v43 + 4936) = *(unsigned char *)(v44 + 4936);
      *(void *)(v43 + 4928) = v500;
      swift_bridgeObjectRetain();
    }
    long long v501 = *(_OWORD *)(v44 + 4944);
    *(unsigned char *)(v43 + 4960) = *(unsigned char *)(v44 + 4960);
    *(_OWORD *)(v43 + 4944) = v501;
    char v502 = *(unsigned char *)(v44 + 4984);
    *(_OWORD *)(v43 + 4968) = *(_OWORD *)(v44 + 4968);
    *(unsigned char *)(v43 + 4984) = v502;
    *(unsigned char *)(v43 + 4985) = *(unsigned char *)(v44 + 4985);
    *(unsigned char *)(v43 + 4986) = *(unsigned char *)(v44 + 4986);
    *(unsigned char *)(v43 + 4987) = *(unsigned char *)(v44 + 4987);
    *(unsigned char *)(v43 + 4988) = *(unsigned char *)(v44 + 4988);
    *(unsigned char *)(v43 + 4989) = *(unsigned char *)(v44 + 4989);
    *(unsigned char *)(v43 + 4990) = *(unsigned char *)(v44 + 4990);
    *(unsigned char *)(v43 + 4991) = *(unsigned char *)(v44 + 4991);
    *(void *)(v43 + 4992) = *(void *)(v44 + 4992);
    *(void *)(v43 + 5000) = *(void *)(v44 + 5000);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v503 = (_OWORD *)(v43 + 5008);
  v504 = (long long *)(v44 + 5008);
  if (*(void *)(v44 + 5824) == 1)
  {
    memcpy(v503, v504, 0x340uLL);
  }
  else
  {
    if (*(void *)v504 == 1)
    {
      long long v505 = *v504;
      *(_OWORD *)(v43 + 5017) = *(_OWORD *)(v44 + 5017);
      _OWORD *v503 = v505;
    }
    else
    {
      *(void *)(v43 + 5008) = *(void *)v504;
      *(unsigned char *)(v43 + 5016) = *(unsigned char *)(v44 + 5016);
      uint64_t v506 = *(void *)(v44 + 5024);
      *(unsigned char *)(v43 + 5032) = *(unsigned char *)(v44 + 5032);
      *(void *)(v43 + 5024) = v506;
      swift_bridgeObjectRetain();
    }
    uint64_t v507 = *(void *)(v44 + 5040);
    if (v507 == 1)
    {
      long long v508 = *(_OWORD *)(v44 + 5040);
      *(_OWORD *)(v43 + 5049) = *(_OWORD *)(v44 + 5049);
      *(_OWORD *)(v43 + 5040) = v508;
    }
    else
    {
      *(void *)(v43 + 5040) = v507;
      *(unsigned char *)(v43 + 5048) = *(unsigned char *)(v44 + 5048);
      uint64_t v509 = *(void *)(v44 + 5056);
      *(unsigned char *)(v43 + 5064) = *(unsigned char *)(v44 + 5064);
      *(void *)(v43 + 5056) = v509;
      swift_bridgeObjectRetain();
    }
    uint64_t v510 = *(void *)(v44 + 5072);
    if (v510 == 1)
    {
      long long v511 = *(_OWORD *)(v44 + 5072);
      *(_OWORD *)(v43 + 5081) = *(_OWORD *)(v44 + 5081);
      *(_OWORD *)(v43 + 5072) = v511;
    }
    else
    {
      *(void *)(v43 + 5072) = v510;
      *(unsigned char *)(v43 + 5080) = *(unsigned char *)(v44 + 5080);
      uint64_t v512 = *(void *)(v44 + 5088);
      *(unsigned char *)(v43 + 5096) = *(unsigned char *)(v44 + 5096);
      *(void *)(v43 + 5088) = v512;
      swift_bridgeObjectRetain();
    }
    uint64_t v513 = *(void *)(v44 + 5104);
    if (v513 == 1)
    {
      long long v514 = *(_OWORD *)(v44 + 5104);
      *(_OWORD *)(v43 + 5113) = *(_OWORD *)(v44 + 5113);
      *(_OWORD *)(v43 + 5104) = v514;
    }
    else
    {
      *(void *)(v43 + 5104) = v513;
      *(unsigned char *)(v43 + 5112) = *(unsigned char *)(v44 + 5112);
      uint64_t v515 = *(void *)(v44 + 5120);
      *(unsigned char *)(v43 + 5128) = *(unsigned char *)(v44 + 5128);
      *(void *)(v43 + 5120) = v515;
      swift_bridgeObjectRetain();
    }
    uint64_t v516 = *(void *)(v44 + 5136);
    if (v516 == 1)
    {
      long long v517 = *(_OWORD *)(v44 + 5136);
      *(_OWORD *)(v43 + 5145) = *(_OWORD *)(v44 + 5145);
      *(_OWORD *)(v43 + 5136) = v517;
    }
    else
    {
      *(void *)(v43 + 5136) = v516;
      *(unsigned char *)(v43 + 5144) = *(unsigned char *)(v44 + 5144);
      uint64_t v518 = *(void *)(v44 + 5152);
      *(unsigned char *)(v43 + 5160) = *(unsigned char *)(v44 + 5160);
      *(void *)(v43 + 5152) = v518;
      swift_bridgeObjectRetain();
    }
    uint64_t v519 = *(void *)(v44 + 5168);
    if (v519 == 1)
    {
      long long v520 = *(_OWORD *)(v44 + 5168);
      *(_OWORD *)(v43 + 5177) = *(_OWORD *)(v44 + 5177);
      *(_OWORD *)(v43 + 5168) = v520;
    }
    else
    {
      *(void *)(v43 + 5168) = v519;
      *(unsigned char *)(v43 + 5176) = *(unsigned char *)(v44 + 5176);
      uint64_t v521 = *(void *)(v44 + 5184);
      *(unsigned char *)(v43 + 5192) = *(unsigned char *)(v44 + 5192);
      *(void *)(v43 + 5184) = v521;
      swift_bridgeObjectRetain();
    }
    uint64_t v522 = *(void *)(v44 + 5200);
    if (v522 == 1)
    {
      long long v523 = *(_OWORD *)(v44 + 5200);
      *(_OWORD *)(v43 + 5209) = *(_OWORD *)(v44 + 5209);
      *(_OWORD *)(v43 + 5200) = v523;
    }
    else
    {
      *(void *)(v43 + 5200) = v522;
      *(unsigned char *)(v43 + 5208) = *(unsigned char *)(v44 + 5208);
      uint64_t v524 = *(void *)(v44 + 5216);
      *(unsigned char *)(v43 + 5224) = *(unsigned char *)(v44 + 5224);
      *(void *)(v43 + 5216) = v524;
      swift_bridgeObjectRetain();
    }
    uint64_t v525 = *(void *)(v44 + 5232);
    if (v525 == 1)
    {
      long long v526 = *(_OWORD *)(v44 + 5232);
      *(_OWORD *)(v43 + 5241) = *(_OWORD *)(v44 + 5241);
      *(_OWORD *)(v43 + 5232) = v526;
    }
    else
    {
      *(void *)(v43 + 5232) = v525;
      *(unsigned char *)(v43 + 5240) = *(unsigned char *)(v44 + 5240);
      uint64_t v527 = *(void *)(v44 + 5248);
      *(unsigned char *)(v43 + 5256) = *(unsigned char *)(v44 + 5256);
      *(void *)(v43 + 5248) = v527;
      swift_bridgeObjectRetain();
    }
    uint64_t v528 = *(void *)(v44 + 5264);
    if (v528 == 1)
    {
      long long v529 = *(_OWORD *)(v44 + 5264);
      *(_OWORD *)(v43 + 5273) = *(_OWORD *)(v44 + 5273);
      *(_OWORD *)(v43 + 5264) = v529;
    }
    else
    {
      *(void *)(v43 + 5264) = v528;
      *(unsigned char *)(v43 + 5272) = *(unsigned char *)(v44 + 5272);
      uint64_t v530 = *(void *)(v44 + 5280);
      *(unsigned char *)(v43 + 5288) = *(unsigned char *)(v44 + 5288);
      *(void *)(v43 + 5280) = v530;
      swift_bridgeObjectRetain();
    }
    uint64_t v531 = *(void *)(v44 + 5296);
    if (v531 == 1)
    {
      long long v532 = *(_OWORD *)(v44 + 5296);
      *(_OWORD *)(v43 + 5305) = *(_OWORD *)(v44 + 5305);
      *(_OWORD *)(v43 + 5296) = v532;
    }
    else
    {
      *(void *)(v43 + 5296) = v531;
      *(unsigned char *)(v43 + 5304) = *(unsigned char *)(v44 + 5304);
      uint64_t v533 = *(void *)(v44 + 5312);
      *(unsigned char *)(v43 + 5320) = *(unsigned char *)(v44 + 5320);
      *(void *)(v43 + 5312) = v533;
      swift_bridgeObjectRetain();
    }
    uint64_t v534 = *(void *)(v44 + 5328);
    if (v534 == 1)
    {
      long long v535 = *(_OWORD *)(v44 + 5328);
      *(_OWORD *)(v43 + 5337) = *(_OWORD *)(v44 + 5337);
      *(_OWORD *)(v43 + 5328) = v535;
    }
    else
    {
      *(void *)(v43 + 5328) = v534;
      *(unsigned char *)(v43 + 5336) = *(unsigned char *)(v44 + 5336);
      uint64_t v536 = *(void *)(v44 + 5344);
      *(unsigned char *)(v43 + 5352) = *(unsigned char *)(v44 + 5352);
      *(void *)(v43 + 5344) = v536;
      swift_bridgeObjectRetain();
    }
    uint64_t v537 = *(void *)(v44 + 5360);
    if (v537 == 1)
    {
      long long v538 = *(_OWORD *)(v44 + 5360);
      *(_OWORD *)(v43 + 5369) = *(_OWORD *)(v44 + 5369);
      *(_OWORD *)(v43 + 5360) = v538;
    }
    else
    {
      *(void *)(v43 + 5360) = v537;
      *(unsigned char *)(v43 + 5368) = *(unsigned char *)(v44 + 5368);
      uint64_t v539 = *(void *)(v44 + 5376);
      *(unsigned char *)(v43 + 5384) = *(unsigned char *)(v44 + 5384);
      *(void *)(v43 + 5376) = v539;
      swift_bridgeObjectRetain();
    }
    uint64_t v540 = *(void *)(v44 + 5392);
    if (v540 == 1)
    {
      long long v541 = *(_OWORD *)(v44 + 5392);
      *(_OWORD *)(v43 + 5401) = *(_OWORD *)(v44 + 5401);
      *(_OWORD *)(v43 + 5392) = v541;
    }
    else
    {
      *(void *)(v43 + 5392) = v540;
      *(unsigned char *)(v43 + 5400) = *(unsigned char *)(v44 + 5400);
      uint64_t v542 = *(void *)(v44 + 5408);
      *(unsigned char *)(v43 + 5416) = *(unsigned char *)(v44 + 5416);
      *(void *)(v43 + 5408) = v542;
      swift_bridgeObjectRetain();
    }
    uint64_t v543 = *(void *)(v44 + 5424);
    if (v543 == 1)
    {
      long long v544 = *(_OWORD *)(v44 + 5424);
      *(_OWORD *)(v43 + 5433) = *(_OWORD *)(v44 + 5433);
      *(_OWORD *)(v43 + 5424) = v544;
    }
    else
    {
      *(void *)(v43 + 5424) = v543;
      *(unsigned char *)(v43 + 5432) = *(unsigned char *)(v44 + 5432);
      uint64_t v545 = *(void *)(v44 + 5440);
      *(unsigned char *)(v43 + 5448) = *(unsigned char *)(v44 + 5448);
      *(void *)(v43 + 5440) = v545;
      swift_bridgeObjectRetain();
    }
    uint64_t v546 = *(void *)(v44 + 5456);
    if (v546 == 1)
    {
      long long v547 = *(_OWORD *)(v44 + 5456);
      *(_OWORD *)(v43 + 5465) = *(_OWORD *)(v44 + 5465);
      *(_OWORD *)(v43 + 5456) = v547;
    }
    else
    {
      *(void *)(v43 + 5456) = v546;
      *(unsigned char *)(v43 + 5464) = *(unsigned char *)(v44 + 5464);
      uint64_t v548 = *(void *)(v44 + 5472);
      *(unsigned char *)(v43 + 5480) = *(unsigned char *)(v44 + 5480);
      *(void *)(v43 + 5472) = v548;
      swift_bridgeObjectRetain();
    }
    uint64_t v549 = *(void *)(v44 + 5488);
    if (v549 == 1)
    {
      long long v550 = *(_OWORD *)(v44 + 5488);
      *(_OWORD *)(v43 + 5497) = *(_OWORD *)(v44 + 5497);
      *(_OWORD *)(v43 + 5488) = v550;
    }
    else
    {
      *(void *)(v43 + 5488) = v549;
      *(unsigned char *)(v43 + 5496) = *(unsigned char *)(v44 + 5496);
      uint64_t v551 = *(void *)(v44 + 5504);
      *(unsigned char *)(v43 + 5512) = *(unsigned char *)(v44 + 5512);
      *(void *)(v43 + 5504) = v551;
      swift_bridgeObjectRetain();
    }
    uint64_t v552 = *(void *)(v44 + 5520);
    if (v552 == 1)
    {
      long long v553 = *(_OWORD *)(v44 + 5520);
      *(_OWORD *)(v43 + 5529) = *(_OWORD *)(v44 + 5529);
      *(_OWORD *)(v43 + 5520) = v553;
    }
    else
    {
      *(void *)(v43 + 5520) = v552;
      *(unsigned char *)(v43 + 5528) = *(unsigned char *)(v44 + 5528);
      uint64_t v554 = *(void *)(v44 + 5536);
      *(unsigned char *)(v43 + 5544) = *(unsigned char *)(v44 + 5544);
      *(void *)(v43 + 5536) = v554;
      swift_bridgeObjectRetain();
    }
    uint64_t v555 = *(void *)(v44 + 5552);
    if (v555 == 1)
    {
      long long v556 = *(_OWORD *)(v44 + 5552);
      *(_OWORD *)(v43 + 5561) = *(_OWORD *)(v44 + 5561);
      *(_OWORD *)(v43 + 5552) = v556;
    }
    else
    {
      *(void *)(v43 + 5552) = v555;
      *(unsigned char *)(v43 + 5560) = *(unsigned char *)(v44 + 5560);
      uint64_t v557 = *(void *)(v44 + 5568);
      *(unsigned char *)(v43 + 5576) = *(unsigned char *)(v44 + 5576);
      *(void *)(v43 + 5568) = v557;
      swift_bridgeObjectRetain();
    }
    uint64_t v558 = *(void *)(v44 + 5584);
    if (v558 == 1)
    {
      long long v559 = *(_OWORD *)(v44 + 5584);
      *(_OWORD *)(v43 + 5593) = *(_OWORD *)(v44 + 5593);
      *(_OWORD *)(v43 + 5584) = v559;
    }
    else
    {
      *(void *)(v43 + 5584) = v558;
      *(unsigned char *)(v43 + 5592) = *(unsigned char *)(v44 + 5592);
      uint64_t v560 = *(void *)(v44 + 5600);
      *(unsigned char *)(v43 + 5608) = *(unsigned char *)(v44 + 5608);
      *(void *)(v43 + 5600) = v560;
      swift_bridgeObjectRetain();
    }
    uint64_t v561 = *(void *)(v44 + 5616);
    if (v561 == 1)
    {
      long long v562 = *(_OWORD *)(v44 + 5616);
      *(_OWORD *)(v43 + 5625) = *(_OWORD *)(v44 + 5625);
      *(_OWORD *)(v43 + 5616) = v562;
    }
    else
    {
      *(void *)(v43 + 5616) = v561;
      *(unsigned char *)(v43 + 5624) = *(unsigned char *)(v44 + 5624);
      uint64_t v563 = *(void *)(v44 + 5632);
      *(unsigned char *)(v43 + 5640) = *(unsigned char *)(v44 + 5640);
      *(void *)(v43 + 5632) = v563;
      swift_bridgeObjectRetain();
    }
    uint64_t v564 = *(void *)(v44 + 5648);
    if (v564 == 1)
    {
      long long v565 = *(_OWORD *)(v44 + 5648);
      *(_OWORD *)(v43 + 5657) = *(_OWORD *)(v44 + 5657);
      *(_OWORD *)(v43 + 5648) = v565;
    }
    else
    {
      *(void *)(v43 + 5648) = v564;
      *(unsigned char *)(v43 + 5656) = *(unsigned char *)(v44 + 5656);
      uint64_t v566 = *(void *)(v44 + 5664);
      *(unsigned char *)(v43 + 5672) = *(unsigned char *)(v44 + 5672);
      *(void *)(v43 + 5664) = v566;
      swift_bridgeObjectRetain();
    }
    uint64_t v567 = *(void *)(v44 + 5680);
    if (v567 == 1)
    {
      long long v568 = *(_OWORD *)(v44 + 5680);
      *(_OWORD *)(v43 + 5689) = *(_OWORD *)(v44 + 5689);
      *(_OWORD *)(v43 + 5680) = v568;
    }
    else
    {
      *(void *)(v43 + 5680) = v567;
      *(unsigned char *)(v43 + 5688) = *(unsigned char *)(v44 + 5688);
      uint64_t v569 = *(void *)(v44 + 5696);
      *(unsigned char *)(v43 + 5704) = *(unsigned char *)(v44 + 5704);
      *(void *)(v43 + 5696) = v569;
      swift_bridgeObjectRetain();
    }
    uint64_t v570 = *(void *)(v44 + 5712);
    if (v570 == 1)
    {
      long long v571 = *(_OWORD *)(v44 + 5712);
      *(_OWORD *)(v43 + 5721) = *(_OWORD *)(v44 + 5721);
      *(_OWORD *)(v43 + 5712) = v571;
    }
    else
    {
      *(void *)(v43 + 5712) = v570;
      *(unsigned char *)(v43 + 5720) = *(unsigned char *)(v44 + 5720);
      uint64_t v572 = *(void *)(v44 + 5728);
      *(unsigned char *)(v43 + 5736) = *(unsigned char *)(v44 + 5736);
      *(void *)(v43 + 5728) = v572;
      swift_bridgeObjectRetain();
    }
    uint64_t v573 = *(void *)(v44 + 5744);
    if (v573 == 1)
    {
      long long v574 = *(_OWORD *)(v44 + 5744);
      *(_OWORD *)(v43 + 5753) = *(_OWORD *)(v44 + 5753);
      *(_OWORD *)(v43 + 5744) = v574;
    }
    else
    {
      *(void *)(v43 + 5744) = v573;
      *(unsigned char *)(v43 + 5752) = *(unsigned char *)(v44 + 5752);
      uint64_t v575 = *(void *)(v44 + 5760);
      *(unsigned char *)(v43 + 5768) = *(unsigned char *)(v44 + 5768);
      *(void *)(v43 + 5760) = v575;
      swift_bridgeObjectRetain();
    }
    long long v576 = *(_OWORD *)(v44 + 5776);
    *(unsigned char *)(v43 + 5792) = *(unsigned char *)(v44 + 5792);
    *(_OWORD *)(v43 + 5776) = v576;
    char v577 = *(unsigned char *)(v44 + 5816);
    *(_OWORD *)(v43 + 5800) = *(_OWORD *)(v44 + 5800);
    *(unsigned char *)(v43 + 5816) = v577;
    *(unsigned char *)(v43 + 5817) = *(unsigned char *)(v44 + 5817);
    *(unsigned char *)(v43 + 5818) = *(unsigned char *)(v44 + 5818);
    *(unsigned char *)(v43 + 5819) = *(unsigned char *)(v44 + 5819);
    *(unsigned char *)(v43 + 5820) = *(unsigned char *)(v44 + 5820);
    *(unsigned char *)(v43 + 5821) = *(unsigned char *)(v44 + 5821);
    *(unsigned char *)(v43 + 5822) = *(unsigned char *)(v44 + 5822);
    *(unsigned char *)(v43 + 5823) = *(unsigned char *)(v44 + 5823);
    *(void *)(v43 + 5824) = *(void *)(v44 + 5824);
    *(void *)(v43 + 5832) = *(void *)(v44 + 5832);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(v43 + 5840) = *(void *)(v44 + 5840);
  char v578 = *(unsigned char *)(v44 + 5852);
  *(_DWORD *)(v43 + 5848) = *(_DWORD *)(v44 + 5848);
  *(unsigned char *)(v43 + 5852) = v578;
  uint64_t v579 = *(void *)(v44 + 5856);
  *(unsigned char *)(v43 + 5864) = *(unsigned char *)(v44 + 5864);
  *(void *)(v43 + 5856) = v579;
  uint64_t v580 = *(void *)(v44 + 5872);
  *(unsigned char *)(v43 + 5880) = *(unsigned char *)(v44 + 5880);
  *(void *)(v43 + 5872) = v580;
  uint64_t v581 = *(void *)(v44 + 5888);
  *(unsigned char *)(v43 + 5896) = *(unsigned char *)(v44 + 5896);
  *(void *)(v43 + 5888) = v581;
  uint64_t v582 = *(void *)(v44 + 5904);
  *(unsigned char *)(v43 + 5912) = *(unsigned char *)(v44 + 5912);
  *(void *)(v43 + 5904) = v582;
  LODWORD(v582) = *(_DWORD *)(v44 + 5916);
  *(unsigned char *)(v43 + 5920) = *(unsigned char *)(v44 + 5920);
  *(_DWORD *)(v43 + 5916) = v582;
  swift_bridgeObjectRetain();
LABEL_2269:
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v2290 = a3[40];
  v2291 = (void *)(a1 + v2290);
  v2292 = (void *)(a2 + v2290);
  void *v2291 = *v2292;
  v2291[1] = v2292[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v2293 = a3[41];
  v2294 = (void *)(a1 + v2293);
  v2295 = (void *)(a2 + v2293);
  void *v2294 = *v2295;
  v2294[1] = v2295[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005C7D10(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v10 = a3[18];
  uint64_t v11 = (void *)(a1 + v10);
  int v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 168) = v9;
  uint64_t v13 = type metadata accessor for HardwareAttestationType();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100007764(&qword_100722310);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[27];
  uint64_t v21 = a3[28];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v24 = a3[30];
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[31];
  uint64_t v26 = a3[32];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  uint64_t v31 = a3[33];
  uint64_t v32 = a3[34];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(void *)uint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = a3[35];
  uint64_t v38 = a3[36];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v41 = a3[38];
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  memcpy((void *)(a1 + v41), (const void *)(a2 + v41), 0x1721uLL);
  uint64_t v42 = a3[40];
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  *(_OWORD *)(a1 + a3[41]) = *(_OWORD *)(a2 + a3[41]);
  return a1;
}

uint64_t sub_1005C7FD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v16 = a3[18];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for HardwareAttestationType();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_6:
    uint64_t v24 = sub_100007764(&qword_100722310);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_7:
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[21];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[29]) = *(void *)(a2 + a3[29]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[31];
  uint64_t v35 = a3[32];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a1 + v35;
  uint64_t v39 = a2 + v35;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  uint64_t v40 = a3[33];
  uint64_t v41 = a3[34];
  uint64_t v42 = a1 + v40;
  uint64_t v43 = a2 + v40;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  uint64_t v44 = a1 + v41;
  uint64_t v45 = a2 + v41;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v46 = a3[35];
  uint64_t v47 = a3[36];
  uint64_t v48 = a1 + v46;
  uint64_t v49 = a2 + v46;
  *(void *)uint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v50 = a3[38];
  *(unsigned char *)(a1 + a3[37]) = *(unsigned char *)(a2 + a3[37]);
  uint64_t v51 = (void *)(a1 + v50);
  long long v52 = (char *)(a2 + v50);
  if (*(void *)(a1 + v50 + 8) != 1)
  {
    uint64_t v53 = *((void *)v52 + 1);
    if (v53 == 1)
    {
      sub_1002336FC(a1 + v50);
      goto LABEL_10;
    }
    uint64_t v54 = v52 + 16;
    void *v51 = *(void *)v52;
    v51[1] = v53;
    swift_bridgeObjectRelease();
    uint64_t v55 = v51 + 2;
    if (v51[104] == 1) {
      goto LABEL_14;
    }
    if (*((void *)v52 + 104) == 1)
    {
      sub_10009F560(v51 + 2);
LABEL_14:
      memcpy(v51 + 2, v52 + 16, 0x340uLL);
      goto LABEL_137;
    }
    if (*v55 != 1)
    {
      if (*v54 != 1)
      {
        v51[2] = *v54;
        swift_bridgeObjectRelease();
        *((unsigned char *)v51 + 24) = v52[24];
        v51[4] = *((void *)v52 + 4);
        *((unsigned char *)v51 + 40) = v52[40];
LABEL_21:
        uint64_t v56 = *((void *)v52 + 6);
        if (v51[6] != 1)
        {
          if (v56 != 1)
          {
            v51[6] = v56;
            swift_bridgeObjectRelease();
            *((unsigned char *)v51 + 56) = v52[56];
            v51[8] = *((void *)v52 + 8);
            *((unsigned char *)v51 + 72) = v52[72];
LABEL_26:
            uint64_t v57 = *((void *)v52 + 10);
            if (v51[10] != 1)
            {
              if (v57 != 1)
              {
                v51[10] = v57;
                swift_bridgeObjectRelease();
                *((unsigned char *)v51 + 88) = v52[88];
                v51[12] = *((void *)v52 + 12);
                *((unsigned char *)v51 + 104) = v52[104];
LABEL_31:
                uint64_t v58 = *((void *)v52 + 14);
                if (v51[14] != 1)
                {
                  if (v58 != 1)
                  {
                    v51[14] = v58;
                    swift_bridgeObjectRelease();
                    *((unsigned char *)v51 + 120) = v52[120];
                    v51[16] = *((void *)v52 + 16);
                    *((unsigned char *)v51 + 136) = v52[136];
LABEL_36:
                    uint64_t v59 = *((void *)v52 + 18);
                    if (v51[18] != 1)
                    {
                      if (v59 != 1)
                      {
                        v51[18] = v59;
                        swift_bridgeObjectRelease();
                        *((unsigned char *)v51 + 152) = v52[152];
                        v51[20] = *((void *)v52 + 20);
                        *((unsigned char *)v51 + 168) = v52[168];
LABEL_41:
                        uint64_t v60 = *((void *)v52 + 22);
                        if (v51[22] != 1)
                        {
                          if (v60 != 1)
                          {
                            v51[22] = v60;
                            swift_bridgeObjectRelease();
                            *((unsigned char *)v51 + 184) = v52[184];
                            v51[24] = *((void *)v52 + 24);
                            *((unsigned char *)v51 + 200) = v52[200];
LABEL_46:
                            uint64_t v61 = *((void *)v52 + 26);
                            if (v51[26] != 1)
                            {
                              if (v61 != 1)
                              {
                                v51[26] = v61;
                                swift_bridgeObjectRelease();
                                *((unsigned char *)v51 + 216) = v52[216];
                                v51[28] = *((void *)v52 + 28);
                                *((unsigned char *)v51 + 232) = v52[232];
LABEL_51:
                                uint64_t v62 = *((void *)v52 + 30);
                                if (v51[30] != 1)
                                {
                                  if (v62 != 1)
                                  {
                                    v51[30] = v62;
                                    swift_bridgeObjectRelease();
                                    *((unsigned char *)v51 + 248) = v52[248];
                                    v51[32] = *((void *)v52 + 32);
                                    *((unsigned char *)v51 + 264) = v52[264];
LABEL_56:
                                    if (v51[34] != 1)
                                    {
                                      uint64_t v63 = *((void *)v52 + 34);
                                      if (v63 != 1)
                                      {
                                        v51[34] = v63;
                                        swift_bridgeObjectRelease();
                                        *((unsigned char *)v51 + 280) = v52[280];
                                        v51[36] = *((void *)v52 + 36);
                                        *((unsigned char *)v51 + 296) = v52[296];
LABEL_61:
                                        if (v51[38] != 1)
                                        {
                                          uint64_t v64 = *((void *)v52 + 38);
                                          if (v64 != 1)
                                          {
                                            v51[38] = v64;
                                            swift_bridgeObjectRelease();
                                            *((unsigned char *)v51 + 312) = v52[312];
                                            v51[40] = *((void *)v52 + 40);
                                            *((unsigned char *)v51 + 328) = v52[328];
LABEL_66:
                                            if (v51[42] != 1)
                                            {
                                              uint64_t v65 = *((void *)v52 + 42);
                                              if (v65 != 1)
                                              {
                                                v51[42] = v65;
                                                swift_bridgeObjectRelease();
                                                *((unsigned char *)v51 + 344) = v52[344];
                                                v51[44] = *((void *)v52 + 44);
                                                *((unsigned char *)v51 + 360) = v52[360];
LABEL_71:
                                                if (v51[46] != 1)
                                                {
                                                  uint64_t v66 = *((void *)v52 + 46);
                                                  if (v66 != 1)
                                                  {
                                                    v51[46] = v66;
                                                    swift_bridgeObjectRelease();
                                                    *((unsigned char *)v51 + 376) = v52[376];
                                                    v51[48] = *((void *)v52 + 48);
                                                    *((unsigned char *)v51 + 392) = v52[392];
LABEL_76:
                                                    if (v51[50] != 1)
                                                    {
                                                      uint64_t v67 = *((void *)v52 + 50);
                                                      if (v67 != 1)
                                                      {
                                                        v51[50] = v67;
                                                        swift_bridgeObjectRelease();
                                                        *((unsigned char *)v51 + 408) = v52[408];
                                                        v51[52] = *((void *)v52 + 52);
                                                        *((unsigned char *)v51 + 424) = v52[424];
LABEL_81:
                                                        if (v51[54] != 1)
                                                        {
                                                          uint64_t v68 = *((void *)v52 + 54);
                                                          if (v68 != 1)
                                                          {
                                                            v51[54] = v68;
                                                            swift_bridgeObjectRelease();
                                                            *((unsigned char *)v51 + 440) = v52[440];
                                                            v51[56] = *((void *)v52 + 56);
                                                            *((unsigned char *)v51 + 456) = v52[456];
LABEL_86:
                                                            if (v51[58] != 1)
                                                            {
                                                              uint64_t v69 = *((void *)v52 + 58);
                                                              if (v69 != 1)
                                                              {
                                                                v51[58] = v69;
                                                                swift_bridgeObjectRelease();
                                                                *((unsigned char *)v51 + 472) = v52[472];
                                                                v51[60] = *((void *)v52 + 60);
                                                                *((unsigned char *)v51 + 488) = v52[488];
LABEL_91:
                                                                if (v51[62] != 1)
                                                                {
                                                                  uint64_t v70 = *((void *)v52 + 62);
                                                                  if (v70 != 1)
                                                                  {
                                                                    v51[62] = v70;
                                                                    swift_bridgeObjectRelease();
                                                                    *((unsigned char *)v51 + 504) = v52[504];
                                                                    v51[64] = *((void *)v52 + 64);
                                                                    *((unsigned char *)v51 + 520) = v52[520];
LABEL_96:
                                                                    if (v51[66] != 1)
                                                                    {
                                                                      uint64_t v71 = *((void *)v52 + 66);
                                                                      if (v71 != 1)
                                                                      {
                                                                        v51[66] = v71;
                                                                        swift_bridgeObjectRelease();
                                                                        *((unsigned char *)v51 + 536) = v52[536];
                                                                        v51[68] = *((void *)v52 + 68);
                                                                        *((unsigned char *)v51 + 552) = v52[552];
LABEL_101:
                                                                        if (v51[70] != 1)
                                                                        {
                                                                          uint64_t v72 = *((void *)v52 + 70);
                                                                          if (v72 != 1)
                                                                          {
                                                                            v51[70] = v72;
                                                                            swift_bridgeObjectRelease();
                                                                            *((unsigned char *)v51 + 568) = v52[568];
                                                                            v51[72] = *((void *)v52 + 72);
                                                                            *((unsigned char *)v51 + 584) = v52[584];
LABEL_106:
                                                                            if (v51[74] != 1)
                                                                            {
                                                                              uint64_t v73 = *((void *)v52 + 74);
                                                                              if (v73 != 1)
                                                                              {
                                                                                v51[74] = v73;
                                                                                swift_bridgeObjectRelease();
                                                                                *((unsigned char *)v51 + 600) = v52[600];
                                                                                v51[76] = *((void *)v52 + 76);
                                                                                *((unsigned char *)v51 + 616) = v52[616];
LABEL_111:
                                                                                if (v51[78] != 1)
                                                                                {
                                                                                  uint64_t v74 = *((void *)v52 + 78);
                                                                                  if (v74 != 1)
                                                                                  {
                                                                                    v51[78] = v74;
                                                                                    swift_bridgeObjectRelease();
                                                                                    *((unsigned char *)v51 + 632) = v52[632];
                                                                                    v51[80] = *((void *)v52 + 80);
                                                                                    *((unsigned char *)v51 + 648) = v52[648];
LABEL_116:
                                                                                    if (v51[82] != 1)
                                                                                    {
                                                                                      uint64_t v75 = *((void *)v52 + 82);
                                                                                      if (v75 != 1)
                                                                                      {
                                                                                        v51[82] = v75;
                                                                                        swift_bridgeObjectRelease();
                                                                                        *((unsigned char *)v51 + 664) = v52[664];
                                                                                        v51[84] = *((void *)v52 + 84);
                                                                                        *((unsigned char *)v51 + 680) = v52[680];
LABEL_121:
                                                                                        if (v51[86] != 1)
                                                                                        {
                                                                                          uint64_t v76 = *((void *)v52 + 86);
                                                                                          if (v76 != 1)
                                                                                          {
                                                                                            v51[86] = v76;
                                                                                            swift_bridgeObjectRelease();
                                                                                            *((unsigned char *)v51 + 696) = v52[696];
                                                                                            v51[88] = *((void *)v52 + 88);
                                                                                            *((unsigned char *)v51 + 712) = v52[712];
LABEL_126:
                                                                                            if (v51[90] != 1)
                                                                                            {
                                                                                              uint64_t v77 = *((void *)v52 + 90);
                                                                                              if (v77 != 1)
                                                                                              {
                                                                                                v51[90] = v77;
                                                                                                swift_bridgeObjectRelease();
                                                                                                *((unsigned char *)v51 + 728) = v52[728];
                                                                                                v51[92] = *((void *)v52 + 92);
                                                                                                *((unsigned char *)v51 + 744) = v52[744];
LABEL_131:
                                                                                                if (v51[94] != 1)
                                                                                                {
                                                                                                  uint64_t v78 = *((void *)v52 + 94);
                                                                                                  if (v78 != 1)
                                                                                                  {
                                                                                                    v51[94] = v78;
                                                                                                    swift_bridgeObjectRelease();
                                                                                                    *((unsigned char *)v51 + 760) = v52[760];
                                                                                                    v51[96] = *((void *)v52 + 96);
                                                                                                    *((unsigned char *)v51 + 776) = v52[776];
                                                                                                    goto LABEL_136;
                                                                                                  }
                                                                                                  sub_10009F534((uint64_t)(v51 + 94));
                                                                                                }
                                                                                                *((_OWORD *)v51 + 47) = *((_OWORD *)v52 + 47);
                                                                                                *(_OWORD *)((char *)v51 + 761) = *(_OWORD *)(v52 + 761);
LABEL_136:
                                                                                                *((_OWORD *)v51 + 49) = *((_OWORD *)v52 + 49);
                                                                                                *((unsigned char *)v51 + 800) = v52[800];
                                                                                                *((unsigned char *)v51 + 824) = v52[824];
                                                                                                *(_OWORD *)(v51 + 101) = *(_OWORD *)(v52 + 808);
                                                                                                *(_DWORD *)((char *)v51 + 825) = *(_DWORD *)(v52 + 825);
                                                                                                *(_WORD *)((char *)v51 + 829) = *(_WORD *)(v52 + 829);
                                                                                                *((unsigned char *)v51 + 831) = v52[831];
                                                                                                v51[104] = *((void *)v52 + 104);
                                                                                                swift_bridgeObjectRelease();
                                                                                                v51[105] = *((void *)v52 + 105);
                                                                                                swift_bridgeObjectRelease();
LABEL_137:
                                                                                                long long v79 = v51 + 106;
                                                                                                uint64_t v80 = v52 + 848;
                                                                                                if (v51[208] == 1)
                                                                                                {
LABEL_140:
                                                                                                  memcpy(v51 + 106, v52 + 848, 0x340uLL);
                                                                                                  goto LABEL_262;
                                                                                                }
                                                                                                if (*((void *)v52 + 208) == 1)
                                                                                                {
                                                                                                  sub_10009F560(v51 + 106);
                                                                                                  goto LABEL_140;
                                                                                                }
                                                                                                if (*v79 != 1)
                                                                                                {
                                                                                                  if (*v80 != 1)
                                                                                                  {
                                                                                                    v51[106] = *v80;
                                                                                                    swift_bridgeObjectRelease();
                                                                                                    *((unsigned char *)v51 + 856) = v52[856];
                                                                                                    v51[108] = *((void *)v52 + 108);
                                                                                                    *((unsigned char *)v51 + 872) = v52[872];
LABEL_146:
                                                                                                    if (v51[110] != 1)
                                                                                                    {
                                                                                                      uint64_t v81 = *((void *)v52 + 110);
                                                                                                      if (v81 != 1)
                                                                                                      {
                                                                                                        v51[110] = v81;
                                                                                                        swift_bridgeObjectRelease();
                                                                                                        *((unsigned char *)v51 + 888) = v52[888];
                                                                                                        v51[112] = *((void *)v52 + 112);
                                                                                                        *((unsigned char *)v51 + 904) = v52[904];
LABEL_151:
                                                                                                        if (v51[114] != 1)
                                                                                                        {
                                                                                                          uint64_t v82 = *((void *)v52 + 114);
                                                                                                          if (v82 != 1)
                                                                                                          {
                                                                                                            v51[114] = v82;
                                                                                                            swift_bridgeObjectRelease();
                                                                                                            *((unsigned char *)v51 + 920) = v52[920];
                                                                                                            v51[116] = *((void *)v52 + 116);
                                                                                                            *((unsigned char *)v51 + 936) = v52[936];
LABEL_156:
                                                                                                            if (v51[118] != 1)
                                                                                                            {
                                                                                                              uint64_t v83 = *((void *)v52 + 118);
                                                                                                              if (v83 != 1)
                                                                                                              {
                                                                                                                v51[118] = v83;
                                                                                                                swift_bridgeObjectRelease();
                                                                                                                *((unsigned char *)v51 + 952) = v52[952];
                                                                                                                v51[120] = *((void *)v52 + 120);
                                                                                                                *((unsigned char *)v51 + 968) = v52[968];
LABEL_161:
                                                                                                                if (v51[122] != 1)
                                                                                                                {
                                                                                                                  uint64_t v84 = *((void *)v52 + 122);
                                                                                                                  if (v84 != 1)
                                                                                                                  {
                                                                                                                    v51[122] = v84;
                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                    *((unsigned char *)v51 + 984) = v52[984];
                                                                                                                    v51[124] = *((void *)v52 + 124);
                                                                                                                    *((unsigned char *)v51 + 1000) = v52[1000];
LABEL_166:
                                                                                                                    if (v51[126] != 1)
                                                                                                                    {
                                                                                                                      uint64_t v85 = *((void *)v52 + 126);
                                                                                                                      if (v85 != 1)
                                                                                                                      {
                                                                                                                        v51[126] = v85;
                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                        *((unsigned char *)v51 + 1016) = v52[1016];
                                                                                                                        v51[128] = *((void *)v52 + 128);
                                                                                                                        *((unsigned char *)v51 + 1032) = v52[1032];
LABEL_171:
                                                                                                                        if (v51[130] != 1)
                                                                                                                        {
                                                                                                                          uint64_t v86 = *((void *)v52 + 130);
                                                                                                                          if (v86 != 1)
                                                                                                                          {
                                                                                                                            v51[130] = v86;
                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                            *((unsigned char *)v51 + 1048) = v52[1048];
                                                                                                                            v51[132] = *((void *)v52 + 132);
                                                                                                                            *((unsigned char *)v51 + 1064) = v52[1064];
LABEL_176:
                                                                                                                            if (v51[134] != 1)
                                                                                                                            {
                                                                                                                              uint64_t v87 = *((void *)v52 + 134);
                                                                                                                              if (v87 != 1)
                                                                                                                              {
                                                                                                                                v51[134] = v87;
                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                *((unsigned char *)v51 + 1080) = v52[1080];
                                                                                                                                v51[136] = *((void *)v52 + 136);
                                                                                                                                *((unsigned char *)v51 + 1096) = v52[1096];
LABEL_181:
                                                                                                                                if (v51[138] != 1)
                                                                                                                                {
                                                                                                                                  uint64_t v88 = *((void *)v52 + 138);
                                                                                                                                  if (v88 != 1)
                                                                                                                                  {
                                                                                                                                    v51[138] = v88;
                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                    *((unsigned char *)v51 + 1112) = v52[1112];
                                                                                                                                    v51[140] = *((void *)v52 + 140);
                                                                                                                                    *((unsigned char *)v51 + 1128) = v52[1128];
LABEL_186:
                                                                                                                                    if (v51[142] != 1)
                                                                                                                                    {
                                                                                                                                      uint64_t v89 = *((void *)v52 + 142);
                                                                                                                                      if (v89 != 1)
                                                                                                                                      {
                                                                                                                                        v51[142] = v89;
                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                        *((unsigned char *)v51 + 1144) = v52[1144];
                                                                                                                                        v51[144] = *((void *)v52 + 144);
                                                                                                                                        *((unsigned char *)v51 + 1160) = v52[1160];
LABEL_191:
                                                                                                                                        if (v51[146] != 1)
                                                                                                                                        {
                                                                                                                                          uint64_t v90 = *((void *)v52 + 146);
                                                                                                                                          if (v90 != 1)
                                                                                                                                          {
                                                                                                                                            v51[146] = v90;
                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                            *((unsigned char *)v51 + 1176) = v52[1176];
                                                                                                                                            v51[148] = *((void *)v52 + 148);
                                                                                                                                            *((unsigned char *)v51 + 1192) = v52[1192];
LABEL_196:
                                                                                                                                            if (v51[150] != 1)
                                                                                                                                            {
                                                                                                                                              uint64_t v91 = *((void *)v52 + 150);
                                                                                                                                              if (v91 != 1)
                                                                                                                                              {
                                                                                                                                                v51[150] = v91;
                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                *((unsigned char *)v51 + 1208) = v52[1208];
                                                                                                                                                v51[152] = *((void *)v52 + 152);
                                                                                                                                                *((unsigned char *)v51 + 1224) = v52[1224];
LABEL_201:
                                                                                                                                                if (v51[154] != 1)
                                                                                                                                                {
                                                                                                                                                  uint64_t v92 = *((void *)v52 + 154);
                                                                                                                                                  if (v92 != 1)
                                                                                                                                                  {
                                                                                                                                                    v51[154] = v92;
                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                    *((unsigned char *)v51 + 1240) = v52[1240];
                                                                                                                                                    v51[156] = *((void *)v52 + 156);
                                                                                                                                                    *((unsigned char *)v51 + 1256) = v52[1256];
LABEL_206:
                                                                                                                                                    if (v51[158] != 1)
                                                                                                                                                    {
                                                                                                                                                      uint64_t v93 = *((void *)v52 + 158);
                                                                                                                                                      if (v93 != 1)
                                                                                                                                                      {
                                                                                                                                                        v51[158] = v93;
                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                        *((unsigned char *)v51 + 1272) = v52[1272];
                                                                                                                                                        v51[160] = *((void *)v52 + 160);
                                                                                                                                                        *((unsigned char *)v51 + 1288) = v52[1288];
LABEL_211:
                                                                                                                                                        if (v51[162] != 1)
                                                                                                                                                        {
                                                                                                                                                          uint64_t v94 = *((void *)v52 + 162);
                                                                                                                                                          if (v94 != 1)
                                                                                                                                                          {
                                                                                                                                                            v51[162] = v94;
                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                            *((unsigned char *)v51 + 1304) = v52[1304];
                                                                                                                                                            v51[164] = *((void *)v52 + 164);
                                                                                                                                                            *((unsigned char *)v51 + 1320) = v52[1320];
LABEL_216:
                                                                                                                                                            if (v51[166] != 1)
                                                                                                                                                            {
                                                                                                                                                              uint64_t v95 = *((void *)v52 + 166);
                                                                                                                                                              if (v95 != 1)
                                                                                                                                                              {
                                                                                                                                                                v51[166] = v95;
                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                *((unsigned char *)v51 + 1336) = v52[1336];
                                                                                                                                                                v51[168] = *((void *)v52 + 168);
                                                                                                                                                                *((unsigned char *)v51 + 1352) = v52[1352];
LABEL_221:
                                                                                                                                                                if (v51[170] != 1)
                                                                                                                                                                {
                                                                                                                                                                  uint64_t v96 = *((void *)v52 + 170);
                                                                                                                                                                  if (v96 != 1)
                                                                                                                                                                  {
                                                                                                                                                                    v51[170] = v96;
                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                    *((unsigned char *)v51 + 1368) = v52[1368];
                                                                                                                                                                    v51[172] = *((void *)v52 + 172);
                                                                                                                                                                    *((unsigned char *)v51 + 1384) = v52[1384];
LABEL_226:
                                                                                                                                                                    if (v51[174] != 1)
                                                                                                                                                                    {
                                                                                                                                                                      uint64_t v97 = *((void *)v52 + 174);
                                                                                                                                                                      if (v97 != 1)
                                                                                                                                                                      {
                                                                                                                                                                        v51[174] = v97;
                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                        *((unsigned char *)v51 + 1400) = v52[1400];
                                                                                                                                                                        v51[176] = *((void *)v52 + 176);
                                                                                                                                                                        *((unsigned char *)v51 + 1416) = v52[1416];
LABEL_231:
                                                                                                                                                                        if (v51[178] != 1)
                                                                                                                                                                        {
                                                                                                                                                                          uint64_t v98 = *((void *)v52 + 178);
                                                                                                                                                                          if (v98 != 1)
                                                                                                                                                                          {
                                                                                                                                                                            v51[178] = v98;
                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                            *((unsigned char *)v51 + 1432) = v52[1432];
                                                                                                                                                                            v51[180] = *((void *)v52 + 180);
                                                                                                                                                                            *((unsigned char *)v51 + 1448) = v52[1448];
LABEL_236:
                                                                                                                                                                            if (v51[182] != 1)
                                                                                                                                                                            {
                                                                                                                                                                              uint64_t v99 = *((void *)v52 + 182);
                                                                                                                                                                              if (v99 != 1)
                                                                                                                                                                              {
                                                                                                                                                                                v51[182] = v99;
                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                *((unsigned char *)v51 + 1464) = v52[1464];
                                                                                                                                                                                v51[184] = *((void *)v52 + 184);
                                                                                                                                                                                *((unsigned char *)v51 + 1480) = v52[1480];
LABEL_241:
                                                                                                                                                                                if (v51[186] != 1)
                                                                                                                                                                                {
                                                                                                                                                                                  uint64_t v100 = *((void *)v52 + 186);
                                                                                                                                                                                  if (v100 != 1)
                                                                                                                                                                                  {
                                                                                                                                                                                    v51[186] = v100;
                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                    *((unsigned char *)v51 + 1496) = v52[1496];
                                                                                                                                                                                    v51[188] = *((void *)v52 + 188);
                                                                                                                                                                                    *((unsigned char *)v51 + 1512) = v52[1512];
LABEL_246:
                                                                                                                                                                                    if (v51[190] != 1)
                                                                                                                                                                                    {
                                                                                                                                                                                      uint64_t v101 = *((void *)v52 + 190);
                                                                                                                                                                                      if (v101 != 1)
                                                                                                                                                                                      {
                                                                                                                                                                                        v51[190] = v101;
                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                        *((unsigned char *)v51 + 1528) = v52[1528];
                                                                                                                                                                                        v51[192] = *((void *)v52 + 192);
                                                                                                                                                                                        *((unsigned char *)v51 + 1544) = v52[1544];
LABEL_251:
                                                                                                                                                                                        if (v51[194] != 1)
                                                                                                                                                                                        {
                                                                                                                                                                                          uint64_t v102 = *((void *)v52 + 194);
                                                                                                                                                                                          if (v102 != 1)
                                                                                                                                                                                          {
                                                                                                                                                                                            v51[194] = v102;
                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                            *((unsigned char *)v51 + 1560) = v52[1560];
                                                                                                                                                                                            v51[196] = *((void *)v52 + 196);
                                                                                                                                                                                            *((unsigned char *)v51 + 1576) = v52[1576];
LABEL_256:
                                                                                                                                                                                            if (v51[198] != 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              uint64_t v103 = *((void *)v52 + 198);
                                                                                                                                                                                              if (v103 != 1)
                                                                                                                                                                                              {
                                                                                                                                                                                                v51[198] = v103;
                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                *((unsigned char *)v51 + 1592) = v52[1592];
                                                                                                                                                                                                v51[200] = *((void *)v52 + 200);
                                                                                                                                                                                                *((unsigned char *)v51 + 1608) = v52[1608];
                                                                                                                                                                                                goto LABEL_261;
                                                                                                                                                                                              }
                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 198));
                                                                                                                                                                                            }
                                                                                                                                                                                            *((_OWORD *)v51 + 99) = *((_OWORD *)v52 + 99);
                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 1593) = *(_OWORD *)(v52 + 1593);
LABEL_261:
                                                                                                                                                                                            *((_OWORD *)v51 + 101) = *((_OWORD *)v52 + 101);
                                                                                                                                                                                            *((unsigned char *)v51 + 1632) = v52[1632];
                                                                                                                                                                                            *((unsigned char *)v51 + 1656) = v52[1656];
                                                                                                                                                                                            *(_OWORD *)(v51 + 205) = *(_OWORD *)(v52 + 1640);
                                                                                                                                                                                            *(_DWORD *)((char *)v51 + 1657) = *(_DWORD *)(v52 + 1657);
                                                                                                                                                                                            *(_WORD *)((char *)v51 + 1661) = *(_WORD *)(v52 + 1661);
                                                                                                                                                                                            *((unsigned char *)v51 + 1663) = v52[1663];
                                                                                                                                                                                            v51[208] = *((void *)v52 + 208);
                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                            v51[209] = *((void *)v52 + 209);
                                                                                                                                                                                            swift_bridgeObjectRelease();
LABEL_262:
                                                                                                                                                                                            uint64_t v104 = v51 + 210;
                                                                                                                                                                                            uint64_t v105 = v52 + 1680;
                                                                                                                                                                                            if (v51[312] == 1)
                                                                                                                                                                                            {
LABEL_265:
                                                                                                                                                                                              memcpy(v51 + 210, v52 + 1680, 0x340uLL);
                                                                                                                                                                                              goto LABEL_387;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (*((void *)v52 + 312) == 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              sub_10009F560(v51 + 210);
                                                                                                                                                                                              goto LABEL_265;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (*v104 != 1)
                                                                                                                                                                                            {
                                                                                                                                                                                              if (*v105 != 1)
                                                                                                                                                                                              {
                                                                                                                                                                                                v51[210] = *v105;
                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                *((unsigned char *)v51 + 1688) = v52[1688];
                                                                                                                                                                                                v51[212] = *((void *)v52 + 212);
                                                                                                                                                                                                *((unsigned char *)v51 + 1704) = v52[1704];
LABEL_271:
                                                                                                                                                                                                if (v51[214] != 1)
                                                                                                                                                                                                {
                                                                                                                                                                                                  uint64_t v106 = *((void *)v52 + 214);
                                                                                                                                                                                                  if (v106 != 1)
                                                                                                                                                                                                  {
                                                                                                                                                                                                    v51[214] = v106;
                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                    *((unsigned char *)v51 + 1720) = v52[1720];
                                                                                                                                                                                                    v51[216] = *((void *)v52 + 216);
                                                                                                                                                                                                    *((unsigned char *)v51 + 1736) = v52[1736];
LABEL_276:
                                                                                                                                                                                                    if (v51[218] != 1)
                                                                                                                                                                                                    {
                                                                                                                                                                                                      uint64_t v107 = *((void *)v52 + 218);
                                                                                                                                                                                                      if (v107 != 1)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        v51[218] = v107;
                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                        *((unsigned char *)v51 + 1752) = v52[1752];
                                                                                                                                                                                                        v51[220] = *((void *)v52 + 220);
                                                                                                                                                                                                        *((unsigned char *)v51 + 1768) = v52[1768];
LABEL_281:
                                                                                                                                                                                                        if (v51[222] != 1)
                                                                                                                                                                                                        {
                                                                                                                                                                                                          uint64_t v108 = *((void *)v52 + 222);
                                                                                                                                                                                                          if (v108 != 1)
                                                                                                                                                                                                          {
                                                                                                                                                                                                            v51[222] = v108;
                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                            *((unsigned char *)v51 + 1784) = v52[1784];
                                                                                                                                                                                                            v51[224] = *((void *)v52 + 224);
                                                                                                                                                                                                            *((unsigned char *)v51 + 1800) = v52[1800];
LABEL_286:
                                                                                                                                                                                                            if (v51[226] != 1)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              uint64_t v109 = *((void *)v52 + 226);
                                                                                                                                                                                                              if (v109 != 1)
                                                                                                                                                                                                              {
                                                                                                                                                                                                                v51[226] = v109;
                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                *((unsigned char *)v51 + 1816) = v52[1816];
                                                                                                                                                                                                                v51[228] = *((void *)v52 + 228);
                                                                                                                                                                                                                *((unsigned char *)v51 + 1832) = v52[1832];
LABEL_291:
                                                                                                                                                                                                                if (v51[230] != 1)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  uint64_t v110 = *((void *)v52 + 230);
                                                                                                                                                                                                                  if (v110 != 1)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    v51[230] = v110;
                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                    *((unsigned char *)v51 + 1848) = v52[1848];
                                                                                                                                                                                                                    v51[232] = *((void *)v52 + 232);
                                                                                                                                                                                                                    *((unsigned char *)v51 + 1864) = v52[1864];
LABEL_296:
                                                                                                                                                                                                                    if (v51[234] != 1)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      uint64_t v111 = *((void *)v52 + 234);
                                                                                                                                                                                                                      if (v111 != 1)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        v51[234] = v111;
                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                        *((unsigned char *)v51 + 1880) = v52[1880];
                                                                                                                                                                                                                        v51[236] = *((void *)v52 + 236);
                                                                                                                                                                                                                        *((unsigned char *)v51 + 1896) = v52[1896];
LABEL_301:
                                                                                                                                                                                                                        if (v51[238] != 1)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          uint64_t v112 = *((void *)v52 + 238);
                                                                                                                                                                                                                          if (v112 != 1)
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            v51[238] = v112;
                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                            *((unsigned char *)v51 + 1912) = v52[1912];
                                                                                                                                                                                                                            v51[240] = *((void *)v52 + 240);
                                                                                                                                                                                                                            *((unsigned char *)v51 + 1928) = v52[1928];
LABEL_306:
                                                                                                                                                                                                                            if (v51[242] != 1)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              uint64_t v113 = *((void *)v52 + 242);
                                                                                                                                                                                                                              if (v113 != 1)
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                v51[242] = v113;
                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                *((unsigned char *)v51 + 1944) = v52[1944];
                                                                                                                                                                                                                                v51[244] = *((void *)v52 + 244);
                                                                                                                                                                                                                                *((unsigned char *)v51 + 1960) = v52[1960];
LABEL_311:
                                                                                                                                                                                                                                if (v51[246] != 1)
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  uint64_t v114 = *((void *)v52 + 246);
                                                                                                                                                                                                                                  if (v114 != 1)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    v51[246] = v114;
                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                    *((unsigned char *)v51 + 1976) = v52[1976];
                                                                                                                                                                                                                                    v51[248] = *((void *)v52 + 248);
                                                                                                                                                                                                                                    *((unsigned char *)v51 + 1992) = v52[1992];
LABEL_316:
                                                                                                                                                                                                                                    if (v51[250] != 1)
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      uint64_t v115 = *((void *)v52 + 250);
                                                                                                                                                                                                                                      if (v115 != 1)
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        v51[250] = v115;
                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2008) = v52[2008];
                                                                                                                                                                                                                                        v51[252] = *((void *)v52 + 252);
                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2024) = v52[2024];
LABEL_321:
                                                                                                                                                                                                                                        if (v51[254] != 1)
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          uint64_t v116 = *((void *)v52 + 254);
                                                                                                                                                                                                                                          if (v116 != 1)
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            v51[254] = v116;
                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2040) = v52[2040];
                                                                                                                                                                                                                                            v51[256] = *((void *)v52 + 256);
                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2056) = v52[2056];
LABEL_326:
                                                                                                                                                                                                                                            if (v51[258] != 1)
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              uint64_t v117 = *((void *)v52 + 258);
                                                                                                                                                                                                                                              if (v117 != 1)
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                v51[258] = v117;
                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2072) = v52[2072];
                                                                                                                                                                                                                                                v51[260] = *((void *)v52 + 260);
                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2088) = v52[2088];
LABEL_331:
                                                                                                                                                                                                                                                if (v51[262] != 1)
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  uint64_t v118 = *((void *)v52 + 262);
                                                                                                                                                                                                                                                  if (v118 != 1)
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    v51[262] = v118;
                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2104) = v52[2104];
                                                                                                                                                                                                                                                    v51[264] = *((void *)v52 + 264);
                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2120) = v52[2120];
LABEL_336:
                                                                                                                                                                                                                                                    if (v51[266] != 1)
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      uint64_t v119 = *((void *)v52 + 266);
                                                                                                                                                                                                                                                      if (v119 != 1)
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        v51[266] = v119;
                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2136) = v52[2136];
                                                                                                                                                                                                                                                        v51[268] = *((void *)v52 + 268);
                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2152) = v52[2152];
LABEL_341:
                                                                                                                                                                                                                                                        if (v51[270] != 1)
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          uint64_t v120 = *((void *)v52 + 270);
                                                                                                                                                                                                                                                          if (v120 != 1)
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            v51[270] = v120;
                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2168) = v52[2168];
                                                                                                                                                                                                                                                            v51[272] = *((void *)v52 + 272);
                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2184) = v52[2184];
LABEL_346:
                                                                                                                                                                                                                                                            if (v51[274] != 1)
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              uint64_t v121 = *((void *)v52 + 274);
                                                                                                                                                                                                                                                              if (v121 != 1)
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                v51[274] = v121;
                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2200) = v52[2200];
                                                                                                                                                                                                                                                                v51[276] = *((void *)v52 + 276);
                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2216) = v52[2216];
LABEL_351:
                                                                                                                                                                                                                                                                if (v51[278] != 1)
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  uint64_t v122 = *((void *)v52 + 278);
                                                                                                                                                                                                                                                                  if (v122 != 1)
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    v51[278] = v122;
                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2232) = v52[2232];
                                                                                                                                                                                                                                                                    v51[280] = *((void *)v52 + 280);
                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2248) = v52[2248];
LABEL_356:
                                                                                                                                                                                                                                                                    if (v51[282] != 1)
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      uint64_t v123 = *((void *)v52 + 282);
                                                                                                                                                                                                                                                                      if (v123 != 1)
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        v51[282] = v123;
                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2264) = v52[2264];
                                                                                                                                                                                                                                                                        v51[284] = *((void *)v52 + 284);
                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2280) = v52[2280];
LABEL_361:
                                                                                                                                                                                                                                                                        if (v51[286] != 1)
                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                          uint64_t v124 = *((void *)v52 + 286);
                                                                                                                                                                                                                                                                          if (v124 != 1)
                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                            v51[286] = v124;
                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2296) = v52[2296];
                                                                                                                                                                                                                                                                            v51[288] = *((void *)v52 + 288);
                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2312) = v52[2312];
LABEL_366:
                                                                                                                                                                                                                                                                            if (v51[290] != 1)
                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                              uint64_t v125 = *((void *)v52 + 290);
                                                                                                                                                                                                                                                                              if (v125 != 1)
                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                v51[290] = v125;
                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2328) = v52[2328];
                                                                                                                                                                                                                                                                                v51[292] = *((void *)v52 + 292);
                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2344) = v52[2344];
LABEL_371:
                                                                                                                                                                                                                                                                                if (v51[294] != 1)
                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                  uint64_t v126 = *((void *)v52 + 294);
                                                                                                                                                                                                                                                                                  if (v126 != 1)
                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                    v51[294] = v126;
                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2360) = v52[2360];
                                                                                                                                                                                                                                                                                    v51[296] = *((void *)v52 + 296);
                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2376) = v52[2376];
LABEL_376:
                                                                                                                                                                                                                                                                                    if (v51[298] != 1)
                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                      uint64_t v127 = *((void *)v52 + 298);
                                                                                                                                                                                                                                                                                      if (v127 != 1)
                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                        v51[298] = v127;
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2392) = v52[2392];
                                                                                                                                                                                                                                                                                        v51[300] = *((void *)v52 + 300);
                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2408) = v52[2408];
LABEL_381:
                                                                                                                                                                                                                                                                                        if (v51[302] != 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          uint64_t v128 = *((void *)v52 + 302);
                                                                                                                                                                                                                                                                                          if (v128 != 1)
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            v51[302] = v128;
                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2424) = v52[2424];
                                                                                                                                                                                                                                                                                            v51[304] = *((void *)v52 + 304);
                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2440) = v52[2440];
                                                                                                                                                                                                                                                                                            goto LABEL_386;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 302));
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 151) = *((_OWORD *)v52 + 151);
                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2425) = *(_OWORD *)(v52 + 2425);
LABEL_386:
                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 153) = *((_OWORD *)v52 + 153);
                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2464) = v52[2464];
                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2488) = v52[2488];
                                                                                                                                                                                                                                                                                        *(_OWORD *)(v51 + 309) = *(_OWORD *)(v52 + 2472);
                                                                                                                                                                                                                                                                                        *(_DWORD *)((char *)v51 + 2489) = *(_DWORD *)(v52 + 2489);
                                                                                                                                                                                                                                                                                        *(_WORD *)((char *)v51 + 2493) = *(_WORD *)(v52 + 2493);
                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2495) = v52[2495];
                                                                                                                                                                                                                                                                                        v51[312] = *((void *)v52 + 312);
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                        v51[313] = *((void *)v52 + 313);
                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
LABEL_387:
                                                                                                                                                                                                                                                                                        v129 = v51 + 314;
                                                                                                                                                                                                                                                                                        long long v130 = v52 + 2512;
                                                                                                                                                                                                                                                                                        if (v51[416] == 1)
                                                                                                                                                                                                                                                                                        {
LABEL_390:
                                                                                                                                                                                                                                                                                          memcpy(v51 + 314, v52 + 2512, 0x340uLL);
                                                                                                                                                                                                                                                                                          goto LABEL_512;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (*((void *)v52 + 416) == 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          sub_10009F560(v51 + 314);
                                                                                                                                                                                                                                                                                          goto LABEL_390;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (*v129 != 1)
                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                          if (*v130 != 1)
                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                            v51[314] = *v130;
                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2520) = v52[2520];
                                                                                                                                                                                                                                                                                            v51[316] = *((void *)v52 + 316);
                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2536) = v52[2536];
LABEL_396:
                                                                                                                                                                                                                                                                                            if (v51[318] != 1)
                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                              uint64_t v131 = *((void *)v52 + 318);
                                                                                                                                                                                                                                                                                              if (v131 != 1)
                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                v51[318] = v131;
                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2552) = v52[2552];
                                                                                                                                                                                                                                                                                                v51[320] = *((void *)v52 + 320);
                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2568) = v52[2568];
LABEL_401:
                                                                                                                                                                                                                                                                                                if (v51[322] != 1)
                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                  uint64_t v132 = *((void *)v52 + 322);
                                                                                                                                                                                                                                                                                                  if (v132 != 1)
                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                    v51[322] = v132;
                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2584) = v52[2584];
                                                                                                                                                                                                                                                                                                    v51[324] = *((void *)v52 + 324);
                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2600) = v52[2600];
LABEL_406:
                                                                                                                                                                                                                                                                                                    if (v51[326] != 1)
                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                      uint64_t v133 = *((void *)v52 + 326);
                                                                                                                                                                                                                                                                                                      if (v133 != 1)
                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                        v51[326] = v133;
                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2616) = v52[2616];
                                                                                                                                                                                                                                                                                                        v51[328] = *((void *)v52 + 328);
                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2632) = v52[2632];
LABEL_411:
                                                                                                                                                                                                                                                                                                        if (v51[330] != 1)
                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                          uint64_t v134 = *((void *)v52 + 330);
                                                                                                                                                                                                                                                                                                          if (v134 != 1)
                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                            v51[330] = v134;
                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2648) = v52[2648];
                                                                                                                                                                                                                                                                                                            v51[332] = *((void *)v52 + 332);
                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2664) = v52[2664];
LABEL_416:
                                                                                                                                                                                                                                                                                                            if (v51[334] != 1)
                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                              uint64_t v135 = *((void *)v52 + 334);
                                                                                                                                                                                                                                                                                                              if (v135 != 1)
                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                v51[334] = v135;
                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2680) = v52[2680];
                                                                                                                                                                                                                                                                                                                v51[336] = *((void *)v52 + 336);
                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2696) = v52[2696];
LABEL_421:
                                                                                                                                                                                                                                                                                                                if (v51[338] != 1)
                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                  uint64_t v136 = *((void *)v52 + 338);
                                                                                                                                                                                                                                                                                                                  if (v136 != 1)
                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                    v51[338] = v136;
                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2712) = v52[2712];
                                                                                                                                                                                                                                                                                                                    v51[340] = *((void *)v52 + 340);
                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2728) = v52[2728];
LABEL_426:
                                                                                                                                                                                                                                                                                                                    if (v51[342] != 1)
                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                      uint64_t v137 = *((void *)v52 + 342);
                                                                                                                                                                                                                                                                                                                      if (v137 != 1)
                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                        v51[342] = v137;
                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2744) = v52[2744];
                                                                                                                                                                                                                                                                                                                        v51[344] = *((void *)v52 + 344);
                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2760) = v52[2760];
LABEL_431:
                                                                                                                                                                                                                                                                                                                        if (v51[346] != 1)
                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                          uint64_t v138 = *((void *)v52 + 346);
                                                                                                                                                                                                                                                                                                                          if (v138 != 1)
                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                            v51[346] = v138;
                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2776) = v52[2776];
                                                                                                                                                                                                                                                                                                                            v51[348] = *((void *)v52 + 348);
                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2792) = v52[2792];
LABEL_436:
                                                                                                                                                                                                                                                                                                                            if (v51[350] != 1)
                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                              uint64_t v139 = *((void *)v52 + 350);
                                                                                                                                                                                                                                                                                                                              if (v139 != 1)
                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                v51[350] = v139;
                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2808) = v52[2808];
                                                                                                                                                                                                                                                                                                                                v51[352] = *((void *)v52 + 352);
                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2824) = v52[2824];
LABEL_441:
                                                                                                                                                                                                                                                                                                                                if (v51[354] != 1)
                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                  uint64_t v140 = *((void *)v52 + 354);
                                                                                                                                                                                                                                                                                                                                  if (v140 != 1)
                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                    v51[354] = v140;
                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2840) = v52[2840];
                                                                                                                                                                                                                                                                                                                                    v51[356] = *((void *)v52 + 356);
                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2856) = v52[2856];
LABEL_446:
                                                                                                                                                                                                                                                                                                                                    if (v51[358] != 1)
                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                      uint64_t v141 = *((void *)v52 + 358);
                                                                                                                                                                                                                                                                                                                                      if (v141 != 1)
                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                        v51[358] = v141;
                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2872) = v52[2872];
                                                                                                                                                                                                                                                                                                                                        v51[360] = *((void *)v52 + 360);
                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 2888) = v52[2888];
LABEL_451:
                                                                                                                                                                                                                                                                                                                                        if (v51[362] != 1)
                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                          uint64_t v142 = *((void *)v52 + 362);
                                                                                                                                                                                                                                                                                                                                          if (v142 != 1)
                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                            v51[362] = v142;
                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2904) = v52[2904];
                                                                                                                                                                                                                                                                                                                                            v51[364] = *((void *)v52 + 364);
                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 2920) = v52[2920];
LABEL_456:
                                                                                                                                                                                                                                                                                                                                            if (v51[366] != 1)
                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                              uint64_t v143 = *((void *)v52 + 366);
                                                                                                                                                                                                                                                                                                                                              if (v143 != 1)
                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                v51[366] = v143;
                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2936) = v52[2936];
                                                                                                                                                                                                                                                                                                                                                v51[368] = *((void *)v52 + 368);
                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 2952) = v52[2952];
LABEL_461:
                                                                                                                                                                                                                                                                                                                                                if (v51[370] != 1)
                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                  uint64_t v144 = *((void *)v52 + 370);
                                                                                                                                                                                                                                                                                                                                                  if (v144 != 1)
                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                    v51[370] = v144;
                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2968) = v52[2968];
                                                                                                                                                                                                                                                                                                                                                    v51[372] = *((void *)v52 + 372);
                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 2984) = v52[2984];
LABEL_466:
                                                                                                                                                                                                                                                                                                                                                    if (v51[374] != 1)
                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                      uint64_t v145 = *((void *)v52 + 374);
                                                                                                                                                                                                                                                                                                                                                      if (v145 != 1)
                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                        v51[374] = v145;
                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3000) = v52[3000];
                                                                                                                                                                                                                                                                                                                                                        v51[376] = *((void *)v52 + 376);
                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3016) = v52[3016];
LABEL_471:
                                                                                                                                                                                                                                                                                                                                                        if (v51[378] != 1)
                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                          uint64_t v146 = *((void *)v52 + 378);
                                                                                                                                                                                                                                                                                                                                                          if (v146 != 1)
                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                            v51[378] = v146;
                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3032) = v52[3032];
                                                                                                                                                                                                                                                                                                                                                            v51[380] = *((void *)v52 + 380);
                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3048) = v52[3048];
LABEL_476:
                                                                                                                                                                                                                                                                                                                                                            if (v51[382] != 1)
                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                              uint64_t v147 = *((void *)v52 + 382);
                                                                                                                                                                                                                                                                                                                                                              if (v147 != 1)
                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                v51[382] = v147;
                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3064) = v52[3064];
                                                                                                                                                                                                                                                                                                                                                                v51[384] = *((void *)v52 + 384);
                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3080) = v52[3080];
LABEL_481:
                                                                                                                                                                                                                                                                                                                                                                if (v51[386] != 1)
                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                  uint64_t v148 = *((void *)v52 + 386);
                                                                                                                                                                                                                                                                                                                                                                  if (v148 != 1)
                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                    v51[386] = v148;
                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3096) = v52[3096];
                                                                                                                                                                                                                                                                                                                                                                    v51[388] = *((void *)v52 + 388);
                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3112) = v52[3112];
LABEL_486:
                                                                                                                                                                                                                                                                                                                                                                    if (v51[390] != 1)
                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                      uint64_t v149 = *((void *)v52 + 390);
                                                                                                                                                                                                                                                                                                                                                                      if (v149 != 1)
                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                        v51[390] = v149;
                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3128) = v52[3128];
                                                                                                                                                                                                                                                                                                                                                                        v51[392] = *((void *)v52 + 392);
                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3144) = v52[3144];
LABEL_491:
                                                                                                                                                                                                                                                                                                                                                                        if (v51[394] != 1)
                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                          uint64_t v150 = *((void *)v52 + 394);
                                                                                                                                                                                                                                                                                                                                                                          if (v150 != 1)
                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                            v51[394] = v150;
                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3160) = v52[3160];
                                                                                                                                                                                                                                                                                                                                                                            v51[396] = *((void *)v52 + 396);
                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3176) = v52[3176];
LABEL_496:
                                                                                                                                                                                                                                                                                                                                                                            if (v51[398] != 1)
                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                              uint64_t v151 = *((void *)v52 + 398);
                                                                                                                                                                                                                                                                                                                                                                              if (v151 != 1)
                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                v51[398] = v151;
                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3192) = v52[3192];
                                                                                                                                                                                                                                                                                                                                                                                v51[400] = *((void *)v52 + 400);
                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3208) = v52[3208];
LABEL_501:
                                                                                                                                                                                                                                                                                                                                                                                if (v51[402] != 1)
                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v152 = *((void *)v52 + 402);
                                                                                                                                                                                                                                                                                                                                                                                  if (v152 != 1)
                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                    v51[402] = v152;
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3224) = v52[3224];
                                                                                                                                                                                                                                                                                                                                                                                    v51[404] = *((void *)v52 + 404);
                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3240) = v52[3240];
LABEL_506:
                                                                                                                                                                                                                                                                                                                                                                                    if (v51[406] != 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v153 = *((void *)v52 + 406);
                                                                                                                                                                                                                                                                                                                                                                                      if (v153 != 1)
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        v51[406] = v153;
                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3256) = v52[3256];
                                                                                                                                                                                                                                                                                                                                                                                        v51[408] = *((void *)v52 + 408);
                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3272) = v52[3272];
                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_511;
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 406));
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 203) = *((_OWORD *)v52 + 203);
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3257) = *(_OWORD *)(v52 + 3257);
LABEL_511:
                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 205) = *((_OWORD *)v52 + 205);
                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3296) = v52[3296];
                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3320) = v52[3320];
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)(v51 + 413) = *(_OWORD *)(v52 + 3304);
                                                                                                                                                                                                                                                                                                                                                                                    *(_DWORD *)((char *)v51 + 3321) = *(_DWORD *)(v52 + 3321);
                                                                                                                                                                                                                                                                                                                                                                                    *(_WORD *)((char *)v51 + 3325) = *(_WORD *)(v52 + 3325);
                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3327) = v52[3327];
                                                                                                                                                                                                                                                                                                                                                                                    v51[416] = *((void *)v52 + 416);
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                    v51[417] = *((void *)v52 + 417);
                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
LABEL_512:
                                                                                                                                                                                                                                                                                                                                                                                    long long v154 = v51 + 418;
                                                                                                                                                                                                                                                                                                                                                                                    uint64_t v155 = v52 + 3344;
                                                                                                                                                                                                                                                                                                                                                                                    if (v51[520] == 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
LABEL_515:
                                                                                                                                                                                                                                                                                                                                                                                      memcpy(v51 + 418, v52 + 3344, 0x340uLL);
                                                                                                                                                                                                                                                                                                                                                                                      goto LABEL_637;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    if (*((void *)v52 + 520) == 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F560(v51 + 418);
                                                                                                                                                                                                                                                                                                                                                                                      goto LABEL_515;
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    if (*v154 != 1)
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                      if (*v155 != 1)
                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                        v51[418] = *v155;
                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3352) = v52[3352];
                                                                                                                                                                                                                                                                                                                                                                                        v51[420] = *((void *)v52 + 420);
                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3368) = v52[3368];
LABEL_521:
                                                                                                                                                                                                                                                                                                                                                                                        if (v51[422] != 1)
                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v156 = *((void *)v52 + 422);
                                                                                                                                                                                                                                                                                                                                                                                          if (v156 != 1)
                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                            v51[422] = v156;
                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3384) = v52[3384];
                                                                                                                                                                                                                                                                                                                                                                                            v51[424] = *((void *)v52 + 424);
                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3400) = v52[3400];
LABEL_526:
                                                                                                                                                                                                                                                                                                                                                                                            if (v51[426] != 1)
                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v157 = *((void *)v52 + 426);
                                                                                                                                                                                                                                                                                                                                                                                              if (v157 != 1)
                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                v51[426] = v157;
                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3416) = v52[3416];
                                                                                                                                                                                                                                                                                                                                                                                                v51[428] = *((void *)v52 + 428);
                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3432) = v52[3432];
LABEL_531:
                                                                                                                                                                                                                                                                                                                                                                                                if (v51[430] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v158 = *((void *)v52 + 430);
                                                                                                                                                                                                                                                                                                                                                                                                  if (v158 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                    v51[430] = v158;
                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3448) = v52[3448];
                                                                                                                                                                                                                                                                                                                                                                                                    v51[432] = *((void *)v52 + 432);
                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3464) = v52[3464];
LABEL_536:
                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[434] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v159 = *((void *)v52 + 434);
                                                                                                                                                                                                                                                                                                                                                                                                      if (v159 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                        v51[434] = v159;
                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3480) = v52[3480];
                                                                                                                                                                                                                                                                                                                                                                                                        v51[436] = *((void *)v52 + 436);
                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3496) = v52[3496];
LABEL_541:
                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[438] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v160 = *((void *)v52 + 438);
                                                                                                                                                                                                                                                                                                                                                                                                          if (v160 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                            v51[438] = v160;
                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3512) = v52[3512];
                                                                                                                                                                                                                                                                                                                                                                                                            v51[440] = *((void *)v52 + 440);
                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3528) = v52[3528];
LABEL_546:
                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[442] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v161 = *((void *)v52 + 442);
                                                                                                                                                                                                                                                                                                                                                                                                              if (v161 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                v51[442] = v161;
                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3544) = v52[3544];
                                                                                                                                                                                                                                                                                                                                                                                                                v51[444] = *((void *)v52 + 444);
                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3560) = v52[3560];
LABEL_551:
                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[446] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v162 = *((void *)v52 + 446);
                                                                                                                                                                                                                                                                                                                                                                                                                  if (v162 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                    v51[446] = v162;
                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3576) = v52[3576];
                                                                                                                                                                                                                                                                                                                                                                                                                    v51[448] = *((void *)v52 + 448);
                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3592) = v52[3592];
LABEL_556:
                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[450] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v163 = *((void *)v52 + 450);
                                                                                                                                                                                                                                                                                                                                                                                                                      if (v163 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                        v51[450] = v163;
                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3608) = v52[3608];
                                                                                                                                                                                                                                                                                                                                                                                                                        v51[452] = *((void *)v52 + 452);
                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3624) = v52[3624];
LABEL_561:
                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[454] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v164 = *((void *)v52 + 454);
                                                                                                                                                                                                                                                                                                                                                                                                                          if (v164 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                            v51[454] = v164;
                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3640) = v52[3640];
                                                                                                                                                                                                                                                                                                                                                                                                                            v51[456] = *((void *)v52 + 456);
                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3656) = v52[3656];
LABEL_566:
                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[458] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v165 = *((void *)v52 + 458);
                                                                                                                                                                                                                                                                                                                                                                                                                              if (v165 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                v51[458] = v165;
                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3672) = v52[3672];
                                                                                                                                                                                                                                                                                                                                                                                                                                v51[460] = *((void *)v52 + 460);
                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3688) = v52[3688];
LABEL_571:
                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[462] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v166 = *((void *)v52 + 462);
                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v166 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[462] = v166;
                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3704) = v52[3704];
                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[464] = *((void *)v52 + 464);
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3720) = v52[3720];
LABEL_576:
                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[466] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v167 = *((void *)v52 + 466);
                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v167 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[466] = v167;
                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3736) = v52[3736];
                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[468] = *((void *)v52 + 468);
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3752) = v52[3752];
LABEL_581:
                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[470] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v168 = *((void *)v52 + 470);
                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v168 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[470] = v168;
                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3768) = v52[3768];
                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[472] = *((void *)v52 + 472);
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3784) = v52[3784];
LABEL_586:
                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[474] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v169 = *((void *)v52 + 474);
                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v169 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[474] = v169;
                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3800) = v52[3800];
                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[476] = *((void *)v52 + 476);
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3816) = v52[3816];
LABEL_591:
                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[478] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v170 = *((void *)v52 + 478);
                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v170 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[478] = v170;
                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3832) = v52[3832];
                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[480] = *((void *)v52 + 480);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3848) = v52[3848];
LABEL_596:
                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[482] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v171 = *((void *)v52 + 482);
                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v171 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[482] = v171;
                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3864) = v52[3864];
                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[484] = *((void *)v52 + 484);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3880) = v52[3880];
LABEL_601:
                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[486] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v172 = *((void *)v52 + 486);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v172 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[486] = v172;
                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3896) = v52[3896];
                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[488] = *((void *)v52 + 488);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 3912) = v52[3912];
LABEL_606:
                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[490] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v173 = *((void *)v52 + 490);
                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v173 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[490] = v173;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3928) = v52[3928];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[492] = *((void *)v52 + 492);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 3944) = v52[3944];
LABEL_611:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[494] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v174 = *((void *)v52 + 494);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v174 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[494] = v174;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3960) = v52[3960];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[496] = *((void *)v52 + 496);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 3976) = v52[3976];
LABEL_616:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[498] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v175 = *((void *)v52 + 498);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v175 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[498] = v175;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 3992) = v52[3992];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[500] = *((void *)v52 + 500);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 4008) = v52[4008];
LABEL_621:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[502] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v176 = *((void *)v52 + 502);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v176 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[502] = v176;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4024) = v52[4024];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[504] = *((void *)v52 + 504);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4040) = v52[4040];
LABEL_626:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[506] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v177 = *((void *)v52 + 506);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v177 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[506] = v177;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4056) = v52[4056];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[508] = *((void *)v52 + 508);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4072) = v52[4072];
LABEL_631:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[510] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v178 = *((void *)v52 + 510);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v178 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[510] = v178;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4088) = v52[4088];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4104) = v52[4104];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[512] = *((void *)v52 + 512);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_636;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 510));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 255) = *((_OWORD *)v52 + 255);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 4089) = *(_OWORD *)(v52 + 4089);
LABEL_636:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 257) = *((_OWORD *)v52 + 257);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4128) = v52[4128];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)(v51 + 517) = *(_OWORD *)(v52 + 4136);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4152) = v52[4152];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_DWORD *)((char *)v51 + 4153) = *(_DWORD *)(v52 + 4153);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_WORD *)((char *)v51 + 4157) = *(_WORD *)(v52 + 4157);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4159) = v52[4159];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[520] = *((void *)v52 + 520);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[521] = *((void *)v52 + 521);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
LABEL_637:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                uint64_t v179 = v51 + 522;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                uint64_t v180 = v52 + 4176;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[624] == 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
LABEL_640:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  memcpy(v51 + 522, v52 + 4176, 0x340uLL);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  goto LABEL_762;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (*((void *)v52 + 624) == 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F560(v51 + 522);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  goto LABEL_640;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (*v179 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (*v180 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[522] = *v180;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4184) = v52[4184];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[524] = *((void *)v52 + 524);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4200) = v52[4200];
LABEL_646:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[526] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v181 = *((void *)v52 + 526);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v181 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[526] = v181;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 4216) = v52[4216];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[528] = *((void *)v52 + 528);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 4232) = v52[4232];
LABEL_651:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[530] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v182 = *((void *)v52 + 530);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v182 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[530] = v182;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4248) = v52[4248];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[532] = *((void *)v52 + 532);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4264) = v52[4264];
LABEL_656:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[534] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v183 = *((void *)v52 + 534);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v183 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[534] = v183;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4280) = v52[4280];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[536] = *((void *)v52 + 536);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4296) = v52[4296];
LABEL_661:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[538] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v184 = *((void *)v52 + 538);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v184 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[538] = v184;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4312) = v52[4312];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[540] = *((void *)v52 + 540);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 4328) = v52[4328];
LABEL_666:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[542] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v185 = *((void *)v52 + 542);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v185 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[542] = v185;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 4344) = v52[4344];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[544] = *((void *)v52 + 544);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 4360) = v52[4360];
LABEL_671:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        if (v51[546] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v186 = *((void *)v52 + 546);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v186 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[546] = v186;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4376) = v52[4376];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[548] = *((void *)v52 + 548);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4392) = v52[4392];
LABEL_676:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[550] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v187 = *((void *)v52 + 550);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v187 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[550] = v187;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4408) = v52[4408];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[552] = *((void *)v52 + 552);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 4424) = v52[4424];
LABEL_681:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[554] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v188 = *((void *)v52 + 554);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v188 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
v51[554] = v188;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4440) = v52[4440];
v51[556] = *((void *)v52 + 556);
unsigned char *)v51 + 4456) = v52[4456];
LABEL_686:
if (v51[558] != 1)
{
uint64_t v189 = *((void *)v52 + 558);
if (v189 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
v51[558] = v189;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4472) = v52[4472];
v51[560] = *((void *)v52 + 560);
unsigned char *)v51 + 4488) = v52[4488];
LABEL_691:
if (v51[562] != 1)
{
uint64_t v190 = *((void *)v52 + 562);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v190 != 1)
{
v51[562] = v190;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4504) = v52[4504];
v51[564] = *((void *)v52 + 564);
unsigned char *)v51 + 4520) = v52[4520];
LABEL_696:
if (v51[566] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
uint64_t v191 = *((void *)v52 + 566);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              if (v191 != 1)
{
v51[566] = v191;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4536) = v52[4536];
v51[568] = *((void *)v52 + 568);
unsigned char *)v51 + 4552) = v52[4552];
LABEL_701:
if (v51[570] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
uint64_t v192 = *((void *)v52 + 570);
if (v192 != 1)
{
v51[570] = v192;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4568) = v52[4568];
v51[572] = *((void *)v52 + 572);
unsigned char *)v51 + 4584) = v52[4584];
LABEL_706:
if (v51[574] != 1)
{
uint64_t v193 = *((void *)v52 + 574);
if (v193 != 1)
{
v51[574] = v193;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4600) = v52[4600];
v51[576] = *((void *)v52 + 576);
unsigned char *)v51 + 4616) = v52[4616];
LABEL_711:
if (v51[578] != 1)
{
uint64_t v194 = *((void *)v52 + 578);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v194 != 1)
{
v51[578] = v194;
swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4632) = v52[4632];
v51[580] = *((void *)v52 + 580);
unsigned char *)v51 + 4648) = v52[4648];
LABEL_716:
if (v51[582] != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              uint64_t v195 = *((void *)v52 + 582);
if (v195 != 1)
{
v51[582] = v195;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4664) = v52[4664];
v51[584] = *((void *)v52 + 584);
unsigned char *)v51 + 4680) = v52[4680];
LABEL_721:
if (v51[586] != 1)
{
uint64_t v196 = *((void *)v52 + 586);
if (v196 != 1)
{
v51[586] = v196;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4696) = v52[4696];
v51[588] = *((void *)v52 + 588);
unsigned char *)v51 + 4712) = v52[4712];
LABEL_726:
if (v51[590] != 1)
{
uint64_t v197 = *((void *)v52 + 590);
if (v197 != 1)
{
v51[590] = v197;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4728) = v52[4728];
v51[592] = *((void *)v52 + 592);
unsigned char *)v51 + 4744) = v52[4744];
LABEL_731:
if (v51[594] != 1)
{
uint64_t v198 = *((void *)v52 + 594);
if (v198 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v51[594] = v198;
swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((unsigned char *)v51 + 4760) = v52[4760];
v51[596] = *((void *)v52 + 596);
unsigned char *)v51 + 4776) = v52[4776];
LABEL_736:
if (v51[598] != 1)
{
uint64_t v199 = *((void *)v52 + 598);
if (v199 != 1)
{
v51[598] = v199;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4792) = v52[4792];
v51[600] = *((void *)v52 + 600);
unsigned char *)v51 + 4808) = v52[4808];
LABEL_741:
if (v51[602] != 1)
{
uint64_t v200 = *((void *)v52 + 602);
if (v200 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    v51[602] = v200;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4824) = v52[4824];
v51[604] = *((void *)v52 + 604);
unsigned char *)v51 + 4840) = v52[4840];
LABEL_746:
if (v51[606] != 1)
{
uint64_t v201 = *((void *)v52 + 606);
if (v201 != 1)
{
v51[606] = v201;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4856) = v52[4856];
v51[608] = *((void *)v52 + 608);
unsigned char *)v51 + 4872) = v52[4872];
LABEL_751:
if (v51[610] != 1)
{
uint64_t v202 = *((void *)v52 + 610);
if (v202 != 1)
{
v51[610] = v202;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4888) = v52[4888];
v51[612] = *((void *)v52 + 612);
unsigned char *)v51 + 4904) = v52[4904];
LABEL_756:
if (v51[614] != 1)
{
uint64_t v203 = *((void *)v52 + 614);
if (v203 != 1)
{
v51[614] = v203;
swift_bridgeObjectRelease();
unsigned char *)v51 + 4920) = v52[4920];
v51[616] = *((void *)v52 + 616);
unsigned char *)v51 + 4936) = v52[4936];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_761;
}
sub_10009F534((uint64_t)(v51 + 614));
}
v51 + 307) = *((_OWORD *)v52 + 307);
char *)v51 + 4921) = *(_OWORD *)(v52 + 4921);
LABEL_761:
v51 + 309) = *((_OWORD *)v52 + 309);
unsigned char *)v51 + 4960) = v52[4960];
v51 + 621) = *(_OWORD *)(v52 + 4968);
unsigned char *)v51 + 4984) = v52[4984];
char *)v51 + 4985) = *(_DWORD *)(v52 + 4985);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_WORD *)((char *)v51 + 4989) = *(_WORD *)(v52 + 4989);
unsigned char *)v51 + 4991) = v52[4991];
v51[624] = *((void *)v52 + 624);
swift_bridgeObjectRelease();
v51[625] = *((void *)v52 + 625);
swift_bridgeObjectRelease();
LABEL_762:
uint64_t v204 = v51 + 626;
long long v205 = v52 + 5008;
if (v51[728] == 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {
LABEL_765:
memcpy(v51 + 626, v52 + 5008, 0x340uLL);
LABEL_887:
v51[730] = *((void *)v52 + 730);
swift_bridgeObjectRelease();
v51 + 1462) = *((_DWORD *)v52 + 1462);
unsigned char *)v51 + 5852) = v52[5852];
v51[732] = *((void *)v52 + 732);
unsigned char *)v51 + 5864) = v52[5864];
v51[734] = *((void *)v52 + 734);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              *((unsigned char *)v51 + 5880) = v52[5880];
unsigned char *)v51 + 5896) = v52[5896];
v51[736] = *((void *)v52 + 736);
uint64_t v229 = *((void *)v52 + 738);
unsigned char *)v51 + 5912) = v52[5912];
v51[738] = v229;
unsigned char *)v51 + 5920) = v52[5920];
v51 + 1479) = *((_DWORD *)v52 + 1479);
goto LABEL_888;
}
if (*((void *)v52 + 728) == 1)
{
sub_10009F560(v51 + 626);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              goto LABEL_765;
}
if (*v204 != 1)
{
if (*v205 != 1)
{
v51[626] = *v205;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5016) = v52[5016];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[628] = *((void *)v52 + 628);
unsigned char *)v51 + 5032) = v52[5032];
LABEL_771:
if (v51[630] != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  uint64_t v206 = *((void *)v52 + 630);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  if (v206 != 1)
{
v51[630] = v206;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5048) = v52[5048];
v51[632] = *((void *)v52 + 632);
unsigned char *)v51 + 5064) = v52[5064];
LABEL_776:
if (v51[634] != 1)
{
uint64_t v207 = *((void *)v52 + 634);
if (v207 != 1)
{
v51[634] = v207;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5080) = v52[5080];
v51[636] = *((void *)v52 + 636);
unsigned char *)v51 + 5096) = v52[5096];
LABEL_781:
if (v51[638] != 1)
{
uint64_t v208 = *((void *)v52 + 638);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          if (v208 != 1)
{
v51[638] = v208;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5112) = v52[5112];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            v51[640] = *((void *)v52 + 640);
unsigned char *)v51 + 5128) = v52[5128];
LABEL_786:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[642] != 1)
{
uint64_t v209 = *((void *)v52 + 642);
if (v209 != 1)
{
v51[642] = v209;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5144) = v52[5144];
v51[644] = *((void *)v52 + 644);
unsigned char *)v51 + 5160) = v52[5160];
LABEL_791:
if (v51[646] != 1)
{
uint64_t v210 = *((void *)v52 + 646);
if (v210 != 1)
{
v51[646] = v210;
swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 5176) = v52[5176];
v51[648] = *((void *)v52 + 648);
unsigned char *)v51 + 5192) = v52[5192];
LABEL_796:
if (v51[650] != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      uint64_t v211 = *((void *)v52 + 650);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      if (v211 != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[650] = v211;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5208) = v52[5208];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[652] = *((void *)v52 + 652);
unsigned char *)v51 + 5224) = v52[5224];
LABEL_801:
if (v51[654] != 1)
{
uint64_t v212 = *((void *)v52 + 654);
if (v212 != 1)
{
v51[654] = v212;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5240) = v52[5240];
v51[656] = *((void *)v52 + 656);
unsigned char *)v51 + 5256) = v52[5256];
LABEL_806:
if (v51[658] != 1)
{
uint64_t v213 = *((void *)v52 + 658);
if (v213 != 1)
{
v51[658] = v213;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5272) = v52[5272];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                v51[660] = *((void *)v52 + 660);
unsigned char *)v51 + 5288) = v52[5288];
LABEL_811:
if (v51[662] != 1)
{
uint64_t v214 = *((void *)v52 + 662);
if (v214 != 1)
{
v51[662] = v214;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5304) = v52[5304];
v51[664] = *((void *)v52 + 664);
unsigned char *)v51 + 5320) = v52[5320];
LABEL_816:
if (v51[666] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    {
uint64_t v215 = *((void *)v52 + 666);
if (v215 != 1)
{
v51[666] = v215;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5336) = v52[5336];
v51[668] = *((void *)v52 + 668);
unsigned char *)v51 + 5352) = v52[5352];
LABEL_821:
if (v51[670] != 1)
{
uint64_t v216 = *((void *)v52 + 670);
if (v216 != 1)
{
v51[670] = v216;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5368) = v52[5368];
v51[672] = *((void *)v52 + 672);
unsigned char *)v51 + 5384) = v52[5384];
LABEL_826:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            if (v51[674] != 1)
{
uint64_t v217 = *((void *)v52 + 674);
if (v217 != 1)
{
v51[674] = v217;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5400) = v52[5400];
v51[676] = *((void *)v52 + 676);
unsigned char *)v51 + 5416) = v52[5416];
LABEL_831:
if (v51[678] != 1)
{
uint64_t v218 = *((void *)v52 + 678);
if (v218 != 1)
{
v51[678] = v218;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5432) = v52[5432];
v51[680] = *((void *)v52 + 680);
unsigned char *)v51 + 5448) = v52[5448];
LABEL_836:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    if (v51[682] != 1)
{
uint64_t v219 = *((void *)v52 + 682);
if (v219 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {
v51[682] = v219;
swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 5464) = v52[5464];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[684] = *((void *)v52 + 684);
unsigned char *)v51 + 5480) = v52[5480];
LABEL_841:
if (v51[686] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
uint64_t v220 = *((void *)v52 + 686);
if (v220 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          {
v51[686] = v220;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5496) = v52[5496];
v51[688] = *((void *)v52 + 688);
unsigned char *)v51 + 5512) = v52[5512];
LABEL_846:
if (v51[690] != 1)
{
uint64_t v221 = *((void *)v52 + 690);
if (v221 != 1)
{
v51[690] = v221;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5528) = v52[5528];
v51[692] = *((void *)v52 + 692);
unsigned char *)v51 + 5544) = v52[5544];
LABEL_851:
if (v51[694] != 1)
{
uint64_t v222 = *((void *)v52 + 694);
if (v222 != 1)
{
v51[694] = v222;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5560) = v52[5560];
v51[696] = *((void *)v52 + 696);
unsigned char *)v51 + 5576) = v52[5576];
LABEL_856:
if (v51[698] != 1)
{
uint64_t v223 = *((void *)v52 + 698);
if (v223 != 1)
{
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        v51[698] = v223;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5592) = v52[5592];
v51[700] = *((void *)v52 + 700);
unsigned char *)v51 + 5608) = v52[5608];
LABEL_861:
if (v51[702] != 1)
{
uint64_t v224 = *((void *)v52 + 702);
if (v224 != 1)
{
v51[702] = v224;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5624) = v52[5624];
v51[704] = *((void *)v52 + 704);
unsigned char *)v51 + 5640) = v52[5640];
LABEL_866:
if (v51[706] != 1)
{
uint64_t v225 = *((void *)v52 + 706);
if (v225 != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
v51[706] = v225;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5656) = v52[5656];
v51[708] = *((void *)v52 + 708);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((unsigned char *)v51 + 5672) = v52[5672];
LABEL_871:
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                if (v51[710] != 1)
{
uint64_t v226 = *((void *)v52 + 710);
if (v226 != 1)
{
v51[710] = v226;
swift_bridgeObjectRelease();
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((unsigned char *)v51 + 5688) = v52[5688];
v51[712] = *((void *)v52 + 712);
unsigned char *)v51 + 5704) = v52[5704];
LABEL_876:
if (v51[714] != 1)
{
uint64_t v227 = *((void *)v52 + 714);
if (v227 != 1)
{
v51[714] = v227;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5720) = v52[5720];
v51[716] = *((void *)v52 + 716);
unsigned char *)v51 + 5736) = v52[5736];
LABEL_881:
if (v51[718] != 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          uint64_t v228 = *((void *)v52 + 718);
if (v228 != 1)
{
v51[718] = v228;
swift_bridgeObjectRelease();
unsigned char *)v51 + 5752) = v52[5752];
v51[720] = *((void *)v52 + 720);
unsigned char *)v51 + 5768) = v52[5768];
goto LABEL_886;
}
sub_10009F534((uint64_t)(v51 + 718));
}
v51 + 359) = *((_OWORD *)v52 + 359);
char *)v51 + 5753) = *(_OWORD *)(v52 + 5753);
LABEL_886:
v51 + 361) = *((_OWORD *)v52 + 361);
unsigned char *)v51 + 5792) = v52[5792];
v51 + 725) = *(_OWORD *)(v52 + 5800);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((unsigned char *)v51 + 5816) = v52[5816];
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_DWORD *)((char *)v51 + 5817) = *(_DWORD *)(v52 + 5817);
char *)v51 + 5821) = *(_WORD *)(v52 + 5821);
unsigned char *)v51 + 5823) = v52[5823];
v51[728] = *((void *)v52 + 728);
swift_bridgeObjectRelease();
v51[729] = *((void *)v52 + 729);
swift_bridgeObjectRelease();
goto LABEL_887;
}
sub_10009F534((uint64_t)(v51 + 714));
}
v51 + 357) = *((_OWORD *)v52 + 357);
char *)v51 + 5721) = *(_OWORD *)(v52 + 5721);
goto LABEL_881;
}
sub_10009F534((uint64_t)(v51 + 710));
}
v51 + 355) = *((_OWORD *)v52 + 355);
char *)v51 + 5689) = *(_OWORD *)(v52 + 5689);
goto LABEL_876;
}
sub_10009F534((uint64_t)(v51 + 706));
}
v51 + 353) = *((_OWORD *)v52 + 353);
char *)v51 + 5657) = *(_OWORD *)(v52 + 5657);
goto LABEL_871;
}
sub_10009F534((uint64_t)(v51 + 702));
}
v51 + 351) = *((_OWORD *)v52 + 351);
char *)v51 + 5625) = *(_OWORD *)(v52 + 5625);
goto LABEL_866;
}
sub_10009F534((uint64_t)(v51 + 698));
}
v51 + 349) = *((_OWORD *)v52 + 349);
char *)v51 + 5593) = *(_OWORD *)(v52 + 5593);
goto LABEL_861;
}
sub_10009F534((uint64_t)(v51 + 694));
}
v51 + 347) = *((_OWORD *)v52 + 347);
char *)v51 + 5561) = *(_OWORD *)(v52 + 5561);
goto LABEL_856;
}
sub_10009F534((uint64_t)(v51 + 690));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 345) = *((_OWORD *)v52 + 345);
char *)v51 + 5529) = *(_OWORD *)(v52 + 5529);
goto LABEL_851;
}
sub_10009F534((uint64_t)(v51 + 686));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
v51 + 343) = *((_OWORD *)v52 + 343);
char *)v51 + 5497) = *(_OWORD *)(v52 + 5497);
goto LABEL_846;
}
sub_10009F534((uint64_t)(v51 + 682));
}
v51 + 341) = *((_OWORD *)v52 + 341);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 5465) = *(_OWORD *)(v52 + 5465);
goto LABEL_841;
}
sub_10009F534((uint64_t)(v51 + 678));
}
v51 + 339) = *((_OWORD *)v52 + 339);
char *)v51 + 5433) = *(_OWORD *)(v52 + 5433);
goto LABEL_836;
}
sub_10009F534((uint64_t)(v51 + 674));
}
v51 + 337) = *((_OWORD *)v52 + 337);
char *)v51 + 5401) = *(_OWORD *)(v52 + 5401);
goto LABEL_831;
}
sub_10009F534((uint64_t)(v51 + 670));
}
v51 + 335) = *((_OWORD *)v52 + 335);
char *)v51 + 5369) = *(_OWORD *)(v52 + 5369);
goto LABEL_826;
}
sub_10009F534((uint64_t)(v51 + 666));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
v51 + 333) = *((_OWORD *)v52 + 333);
char *)v51 + 5337) = *(_OWORD *)(v52 + 5337);
goto LABEL_821;
}
sub_10009F534((uint64_t)(v51 + 662));
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 331) = *((_OWORD *)v52 + 331);
char *)v51 + 5305) = *(_OWORD *)(v52 + 5305);
goto LABEL_816;
}
sub_10009F534((uint64_t)(v51 + 658));
}
v51 + 329) = *((_OWORD *)v52 + 329);
char *)v51 + 5273) = *(_OWORD *)(v52 + 5273);
goto LABEL_811;
}
sub_10009F534((uint64_t)(v51 + 654));
}
v51 + 327) = *((_OWORD *)v52 + 327);
char *)v51 + 5241) = *(_OWORD *)(v52 + 5241);
goto LABEL_806;
}
sub_10009F534((uint64_t)(v51 + 650));
}
v51 + 325) = *((_OWORD *)v52 + 325);
char *)v51 + 5209) = *(_OWORD *)(v52 + 5209);
goto LABEL_801;
}
sub_10009F534((uint64_t)(v51 + 646));
}
v51 + 323) = *((_OWORD *)v52 + 323);
char *)v51 + 5177) = *(_OWORD *)(v52 + 5177);
goto LABEL_796;
}
sub_10009F534((uint64_t)(v51 + 642));
}
v51 + 321) = *((_OWORD *)v52 + 321);
char *)v51 + 5145) = *(_OWORD *)(v52 + 5145);
goto LABEL_791;
}
sub_10009F534((uint64_t)(v51 + 638));
}
v51 + 319) = *((_OWORD *)v52 + 319);
char *)v51 + 5113) = *(_OWORD *)(v52 + 5113);
goto LABEL_786;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 634));
}
v51 + 317) = *((_OWORD *)v52 + 317);
char *)v51 + 5081) = *(_OWORD *)(v52 + 5081);
goto LABEL_781;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
sub_10009F534((uint64_t)(v51 + 630));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
v51 + 315) = *((_OWORD *)v52 + 315);
char *)v51 + 5049) = *(_OWORD *)(v52 + 5049);
goto LABEL_776;
}
sub_10009F534((uint64_t)(v51 + 626));
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 5017) = *(_OWORD *)(v52 + 5017);
goto LABEL_771;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
sub_10009F534((uint64_t)(v51 + 610));
}
v51 + 305) = *((_OWORD *)v52 + 305);
char *)v51 + 4889) = *(_OWORD *)(v52 + 4889);
goto LABEL_756;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
sub_10009F534((uint64_t)(v51 + 606));
}
v51 + 303) = *((_OWORD *)v52 + 303);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 4857) = *(_OWORD *)(v52 + 4857);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_751;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 602));
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 301) = *((_OWORD *)v52 + 301);
char *)v51 + 4825) = *(_OWORD *)(v52 + 4825);
goto LABEL_746;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 598));
}
v51 + 299) = *((_OWORD *)v52 + 299);
char *)v51 + 4793) = *(_OWORD *)(v52 + 4793);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_741;
}
sub_10009F534((uint64_t)(v51 + 594));
}
v51 + 297) = *((_OWORD *)v52 + 297);
char *)v51 + 4761) = *(_OWORD *)(v52 + 4761);
goto LABEL_736;
}
sub_10009F534((uint64_t)(v51 + 590));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
v51 + 295) = *((_OWORD *)v52 + 295);
char *)v51 + 4729) = *(_OWORD *)(v52 + 4729);
goto LABEL_731;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 586));
}
v51 + 293) = *((_OWORD *)v52 + 293);
char *)v51 + 4697) = *(_OWORD *)(v52 + 4697);
goto LABEL_726;
}
sub_10009F534((uint64_t)(v51 + 582));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
v51 + 291) = *((_OWORD *)v52 + 291);
char *)v51 + 4665) = *(_OWORD *)(v52 + 4665);
goto LABEL_721;
}
sub_10009F534((uint64_t)(v51 + 578));
}
v51 + 289) = *((_OWORD *)v52 + 289);
char *)v51 + 4633) = *(_OWORD *)(v52 + 4633);
goto LABEL_716;
}
sub_10009F534((uint64_t)(v51 + 574));
}
v51 + 287) = *((_OWORD *)v52 + 287);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 4601) = *(_OWORD *)(v52 + 4601);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_711;
}
sub_10009F534((uint64_t)(v51 + 570));
}
v51 + 285) = *((_OWORD *)v52 + 285);
char *)v51 + 4569) = *(_OWORD *)(v52 + 4569);
goto LABEL_706;
}
sub_10009F534((uint64_t)(v51 + 566));
}
v51 + 283) = *((_OWORD *)v52 + 283);
char *)v51 + 4537) = *(_OWORD *)(v52 + 4537);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_701;
}
sub_10009F534((uint64_t)(v51 + 562));
}
v51 + 281) = *((_OWORD *)v52 + 281);
char *)v51 + 4505) = *(_OWORD *)(v52 + 4505);
goto LABEL_696;
}
sub_10009F534((uint64_t)(v51 + 558));
}
v51 + 279) = *((_OWORD *)v52 + 279);
char *)v51 + 4473) = *(_OWORD *)(v52 + 4473);
goto LABEL_691;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 554));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
v51 + 277) = *((_OWORD *)v52 + 277);
char *)v51 + 4441) = *(_OWORD *)(v52 + 4441);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_686;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 550));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
v51 + 275) = *((_OWORD *)v52 + 275);
char *)v51 + 4409) = *(_OWORD *)(v52 + 4409);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_681;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 546));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
v51 + 273) = *((_OWORD *)v52 + 273);
char *)v51 + 4377) = *(_OWORD *)(v52 + 4377);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_676;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 542));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 271) = *((_OWORD *)v52 + 271);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 4345) = *(_OWORD *)(v52 + 4345);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_671;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 538));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 269) = *((_OWORD *)v52 + 269);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 4313) = *(_OWORD *)(v52 + 4313);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_666;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 534));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 267) = *((_OWORD *)v52 + 267);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 4281) = *(_OWORD *)(v52 + 4281);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_661;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 530));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 265) = *((_OWORD *)v52 + 265);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 4249) = *(_OWORD *)(v52 + 4249);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_656;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 526));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 263) = *((_OWORD *)v52 + 263);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 4217) = *(_OWORD *)(v52 + 4217);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_651;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 522));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)uint64_t v179 = *(_OWORD *)v180;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 4185) = *(_OWORD *)(v52 + 4185);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_646;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 506));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 253) = *((_OWORD *)v52 + 253);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 4057) = *(_OWORD *)(v52 + 4057);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_631;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 502));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 251) = *((_OWORD *)v52 + 251);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 4025) = *(_OWORD *)(v52 + 4025);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_626;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 498));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 249) = *((_OWORD *)v52 + 249);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3993) = *(_OWORD *)(v52 + 3993);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_621;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 494));
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 247) = *((_OWORD *)v52 + 247);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3961) = *(_OWORD *)(v52 + 3961);
                                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_616;
                                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 490));
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 245) = *((_OWORD *)v52 + 245);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3929) = *(_OWORD *)(v52 + 3929);
                                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_611;
                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 486));
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 243) = *((_OWORD *)v52 + 243);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3897) = *(_OWORD *)(v52 + 3897);
                                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_606;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 482));
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 241) = *((_OWORD *)v52 + 241);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3865) = *(_OWORD *)(v52 + 3865);
                                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_601;
                                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 478));
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 239) = *((_OWORD *)v52 + 239);
                                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3833) = *(_OWORD *)(v52 + 3833);
                                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_596;
                                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 474));
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 237) = *((_OWORD *)v52 + 237);
                                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3801) = *(_OWORD *)(v52 + 3801);
                                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_591;
                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 470));
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 235) = *((_OWORD *)v52 + 235);
                                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3769) = *(_OWORD *)(v52 + 3769);
                                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_586;
                                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 466));
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 233) = *((_OWORD *)v52 + 233);
                                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3737) = *(_OWORD *)(v52 + 3737);
                                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_581;
                                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 462));
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 231) = *((_OWORD *)v52 + 231);
                                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3705) = *(_OWORD *)(v52 + 3705);
                                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_576;
                                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 458));
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 229) = *((_OWORD *)v52 + 229);
                                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3673) = *(_OWORD *)(v52 + 3673);
                                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_571;
                                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 454));
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 227) = *((_OWORD *)v52 + 227);
                                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3641) = *(_OWORD *)(v52 + 3641);
                                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_566;
                                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 450));
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 225) = *((_OWORD *)v52 + 225);
                                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3609) = *(_OWORD *)(v52 + 3609);
                                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_561;
                                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 446));
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 223) = *((_OWORD *)v52 + 223);
                                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3577) = *(_OWORD *)(v52 + 3577);
                                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_556;
                                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 442));
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 221) = *((_OWORD *)v52 + 221);
                                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3545) = *(_OWORD *)(v52 + 3545);
                                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_551;
                                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 438));
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 219) = *((_OWORD *)v52 + 219);
                                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3513) = *(_OWORD *)(v52 + 3513);
                                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_546;
                                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 434));
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 217) = *((_OWORD *)v52 + 217);
                                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3481) = *(_OWORD *)(v52 + 3481);
                                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_541;
                                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 430));
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 215) = *((_OWORD *)v52 + 215);
                                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3449) = *(_OWORD *)(v52 + 3449);
                                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_536;
                                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 426));
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 213) = *((_OWORD *)v52 + 213);
                                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3417) = *(_OWORD *)(v52 + 3417);
                                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_531;
                                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 422));
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 211) = *((_OWORD *)v52 + 211);
                                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3385) = *(_OWORD *)(v52 + 3385);
                                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_526;
                                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 418));
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)long long v154 = *(_OWORD *)v155;
                                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3353) = *(_OWORD *)(v52 + 3353);
                                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_521;
                                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 402));
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 201) = *((_OWORD *)v52 + 201);
                                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3225) = *(_OWORD *)(v52 + 3225);
                                                                                                                                                                                                                                                                                                                                                                                goto LABEL_506;
                                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 398));
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 199) = *((_OWORD *)v52 + 199);
                                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3193) = *(_OWORD *)(v52 + 3193);
                                                                                                                                                                                                                                                                                                                                                                            goto LABEL_501;
                                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 394));
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 197) = *((_OWORD *)v52 + 197);
                                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3161) = *(_OWORD *)(v52 + 3161);
                                                                                                                                                                                                                                                                                                                                                                        goto LABEL_496;
                                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 390));
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 195) = *((_OWORD *)v52 + 195);
                                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3129) = *(_OWORD *)(v52 + 3129);
                                                                                                                                                                                                                                                                                                                                                                    goto LABEL_491;
                                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 386));
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 193) = *((_OWORD *)v52 + 193);
                                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 3097) = *(_OWORD *)(v52 + 3097);
                                                                                                                                                                                                                                                                                                                                                                goto LABEL_486;
                                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 382));
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 191) = *((_OWORD *)v52 + 191);
                                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 3065) = *(_OWORD *)(v52 + 3065);
                                                                                                                                                                                                                                                                                                                                                            goto LABEL_481;
                                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 378));
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 189) = *((_OWORD *)v52 + 189);
                                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 3033) = *(_OWORD *)(v52 + 3033);
                                                                                                                                                                                                                                                                                                                                                        goto LABEL_476;
                                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 374));
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 187) = *((_OWORD *)v52 + 187);
                                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 3001) = *(_OWORD *)(v52 + 3001);
                                                                                                                                                                                                                                                                                                                                                    goto LABEL_471;
                                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 370));
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 185) = *((_OWORD *)v52 + 185);
                                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2969) = *(_OWORD *)(v52 + 2969);
                                                                                                                                                                                                                                                                                                                                                goto LABEL_466;
                                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 366));
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 183) = *((_OWORD *)v52 + 183);
                                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2937) = *(_OWORD *)(v52 + 2937);
                                                                                                                                                                                                                                                                                                                                            goto LABEL_461;
                                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 362));
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 181) = *((_OWORD *)v52 + 181);
                                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2905) = *(_OWORD *)(v52 + 2905);
                                                                                                                                                                                                                                                                                                                                        goto LABEL_456;
                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 358));
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 179) = *((_OWORD *)v52 + 179);
                                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2873) = *(_OWORD *)(v52 + 2873);
                                                                                                                                                                                                                                                                                                                                    goto LABEL_451;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 354));
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 177) = *((_OWORD *)v52 + 177);
                                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2841) = *(_OWORD *)(v52 + 2841);
                                                                                                                                                                                                                                                                                                                                goto LABEL_446;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 350));
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 175) = *((_OWORD *)v52 + 175);
                                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2809) = *(_OWORD *)(v52 + 2809);
                                                                                                                                                                                                                                                                                                                            goto LABEL_441;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 346));
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 173) = *((_OWORD *)v52 + 173);
                                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2777) = *(_OWORD *)(v52 + 2777);
                                                                                                                                                                                                                                                                                                                        goto LABEL_436;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 342));
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 171) = *((_OWORD *)v52 + 171);
                                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2745) = *(_OWORD *)(v52 + 2745);
                                                                                                                                                                                                                                                                                                                    goto LABEL_431;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 338));
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 169) = *((_OWORD *)v52 + 169);
                                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2713) = *(_OWORD *)(v52 + 2713);
                                                                                                                                                                                                                                                                                                                goto LABEL_426;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 334));
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 167) = *((_OWORD *)v52 + 167);
                                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2681) = *(_OWORD *)(v52 + 2681);
                                                                                                                                                                                                                                                                                                            goto LABEL_421;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 330));
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 165) = *((_OWORD *)v52 + 165);
                                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2649) = *(_OWORD *)(v52 + 2649);
                                                                                                                                                                                                                                                                                                        goto LABEL_416;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 326));
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 163) = *((_OWORD *)v52 + 163);
                                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2617) = *(_OWORD *)(v52 + 2617);
                                                                                                                                                                                                                                                                                                    goto LABEL_411;
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 322));
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 161) = *((_OWORD *)v52 + 161);
                                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2585) = *(_OWORD *)(v52 + 2585);
                                                                                                                                                                                                                                                                                                goto LABEL_406;
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 318));
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 159) = *((_OWORD *)v52 + 159);
                                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2553) = *(_OWORD *)(v52 + 2553);
                                                                                                                                                                                                                                                                                            goto LABEL_401;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 314));
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        *(_OWORD *)v129 = *(_OWORD *)v130;
                                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2521) = *(_OWORD *)(v52 + 2521);
                                                                                                                                                                                                                                                                                        goto LABEL_396;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 298));
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 149) = *((_OWORD *)v52 + 149);
                                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2393) = *(_OWORD *)(v52 + 2393);
                                                                                                                                                                                                                                                                                    goto LABEL_381;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 294));
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 147) = *((_OWORD *)v52 + 147);
                                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2361) = *(_OWORD *)(v52 + 2361);
                                                                                                                                                                                                                                                                                goto LABEL_376;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 290));
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 145) = *((_OWORD *)v52 + 145);
                                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2329) = *(_OWORD *)(v52 + 2329);
                                                                                                                                                                                                                                                                            goto LABEL_371;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 286));
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 143) = *((_OWORD *)v52 + 143);
                                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2297) = *(_OWORD *)(v52 + 2297);
                                                                                                                                                                                                                                                                        goto LABEL_366;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 282));
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 141) = *((_OWORD *)v52 + 141);
                                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2265) = *(_OWORD *)(v52 + 2265);
                                                                                                                                                                                                                                                                    goto LABEL_361;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 278));
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                *((_OWORD *)v51 + 139) = *((_OWORD *)v52 + 139);
                                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2233) = *(_OWORD *)(v52 + 2233);
                                                                                                                                                                                                                                                                goto LABEL_356;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 274));
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            *((_OWORD *)v51 + 137) = *((_OWORD *)v52 + 137);
                                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2201) = *(_OWORD *)(v52 + 2201);
                                                                                                                                                                                                                                                            goto LABEL_351;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 270));
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        *((_OWORD *)v51 + 135) = *((_OWORD *)v52 + 135);
                                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2169) = *(_OWORD *)(v52 + 2169);
                                                                                                                                                                                                                                                        goto LABEL_346;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 266));
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    *((_OWORD *)v51 + 133) = *((_OWORD *)v52 + 133);
                                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2137) = *(_OWORD *)(v52 + 2137);
                                                                                                                                                                                                                                                    goto LABEL_341;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 262));
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                *((_OWORD *)v51 + 131) = *((_OWORD *)v52 + 131);
                                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 2105) = *(_OWORD *)(v52 + 2105);
                                                                                                                                                                                                                                                goto LABEL_336;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 258));
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            *((_OWORD *)v51 + 129) = *((_OWORD *)v52 + 129);
                                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 2073) = *(_OWORD *)(v52 + 2073);
                                                                                                                                                                                                                                            goto LABEL_331;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 254));
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        *((_OWORD *)v51 + 127) = *((_OWORD *)v52 + 127);
                                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 2041) = *(_OWORD *)(v52 + 2041);
                                                                                                                                                                                                                                        goto LABEL_326;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 250));
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    *((_OWORD *)v51 + 125) = *((_OWORD *)v52 + 125);
                                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 2009) = *(_OWORD *)(v52 + 2009);
                                                                                                                                                                                                                                    goto LABEL_321;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 246));
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                *((_OWORD *)v51 + 123) = *((_OWORD *)v52 + 123);
                                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 1977) = *(_OWORD *)(v52 + 1977);
                                                                                                                                                                                                                                goto LABEL_316;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 242));
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            *((_OWORD *)v51 + 121) = *((_OWORD *)v52 + 121);
                                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 1945) = *(_OWORD *)(v52 + 1945);
                                                                                                                                                                                                                            goto LABEL_311;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 238));
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        *((_OWORD *)v51 + 119) = *((_OWORD *)v52 + 119);
                                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 1913) = *(_OWORD *)(v52 + 1913);
                                                                                                                                                                                                                        goto LABEL_306;
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 234));
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    *((_OWORD *)v51 + 117) = *((_OWORD *)v52 + 117);
                                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 1881) = *(_OWORD *)(v52 + 1881);
                                                                                                                                                                                                                    goto LABEL_301;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 230));
                                                                                                                                                                                                                }
                                                                                                                                                                                                                *((_OWORD *)v51 + 115) = *((_OWORD *)v52 + 115);
                                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 1849) = *(_OWORD *)(v52 + 1849);
                                                                                                                                                                                                                goto LABEL_296;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 226));
                                                                                                                                                                                                            }
                                                                                                                                                                                                            *((_OWORD *)v51 + 113) = *((_OWORD *)v52 + 113);
                                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 1817) = *(_OWORD *)(v52 + 1817);
                                                                                                                                                                                                            goto LABEL_291;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 222));
                                                                                                                                                                                                        }
                                                                                                                                                                                                        *((_OWORD *)v51 + 111) = *((_OWORD *)v52 + 111);
                                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 1785) = *(_OWORD *)(v52 + 1785);
                                                                                                                                                                                                        goto LABEL_286;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 218));
                                                                                                                                                                                                    }
                                                                                                                                                                                                    *((_OWORD *)v51 + 109) = *((_OWORD *)v52 + 109);
                                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 1753) = *(_OWORD *)(v52 + 1753);
                                                                                                                                                                                                    goto LABEL_281;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 214));
                                                                                                                                                                                                }
                                                                                                                                                                                                *((_OWORD *)v51 + 107) = *((_OWORD *)v52 + 107);
                                                                                                                                                                                                *(_OWORD *)((char *)v51 + 1721) = *(_OWORD *)(v52 + 1721);
                                                                                                                                                                                                goto LABEL_276;
                                                                                                                                                                                              }
                                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 210));
                                                                                                                                                                                            }
                                                                                                                                                                                            *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
                                                                                                                                                                                            *(_OWORD *)((char *)v51 + 1689) = *(_OWORD *)(v52 + 1689);
                                                                                                                                                                                            goto LABEL_271;
                                                                                                                                                                                          }
                                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 194));
                                                                                                                                                                                        }
                                                                                                                                                                                        *((_OWORD *)v51 + 97) = *((_OWORD *)v52 + 97);
                                                                                                                                                                                        *(_OWORD *)((char *)v51 + 1561) = *(_OWORD *)(v52 + 1561);
                                                                                                                                                                                        goto LABEL_256;
                                                                                                                                                                                      }
                                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 190));
                                                                                                                                                                                    }
                                                                                                                                                                                    *((_OWORD *)v51 + 95) = *((_OWORD *)v52 + 95);
                                                                                                                                                                                    *(_OWORD *)((char *)v51 + 1529) = *(_OWORD *)(v52 + 1529);
                                                                                                                                                                                    goto LABEL_251;
                                                                                                                                                                                  }
                                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 186));
                                                                                                                                                                                }
                                                                                                                                                                                *((_OWORD *)v51 + 93) = *((_OWORD *)v52 + 93);
                                                                                                                                                                                *(_OWORD *)((char *)v51 + 1497) = *(_OWORD *)(v52 + 1497);
                                                                                                                                                                                goto LABEL_246;
                                                                                                                                                                              }
                                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 182));
                                                                                                                                                                            }
                                                                                                                                                                            *((_OWORD *)v51 + 91) = *((_OWORD *)v52 + 91);
                                                                                                                                                                            *(_OWORD *)((char *)v51 + 1465) = *(_OWORD *)(v52 + 1465);
                                                                                                                                                                            goto LABEL_241;
                                                                                                                                                                          }
                                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 178));
                                                                                                                                                                        }
                                                                                                                                                                        *((_OWORD *)v51 + 89) = *((_OWORD *)v52 + 89);
                                                                                                                                                                        *(_OWORD *)((char *)v51 + 1433) = *(_OWORD *)(v52 + 1433);
                                                                                                                                                                        goto LABEL_236;
                                                                                                                                                                      }
                                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 174));
                                                                                                                                                                    }
                                                                                                                                                                    *((_OWORD *)v51 + 87) = *((_OWORD *)v52 + 87);
                                                                                                                                                                    *(_OWORD *)((char *)v51 + 1401) = *(_OWORD *)(v52 + 1401);
                                                                                                                                                                    goto LABEL_231;
                                                                                                                                                                  }
                                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 170));
                                                                                                                                                                }
                                                                                                                                                                *((_OWORD *)v51 + 85) = *((_OWORD *)v52 + 85);
                                                                                                                                                                *(_OWORD *)((char *)v51 + 1369) = *(_OWORD *)(v52 + 1369);
                                                                                                                                                                goto LABEL_226;
                                                                                                                                                              }
                                                                                                                                                              sub_10009F534((uint64_t)(v51 + 166));
                                                                                                                                                            }
                                                                                                                                                            *((_OWORD *)v51 + 83) = *((_OWORD *)v52 + 83);
                                                                                                                                                            *(_OWORD *)((char *)v51 + 1337) = *(_OWORD *)(v52 + 1337);
                                                                                                                                                            goto LABEL_221;
                                                                                                                                                          }
                                                                                                                                                          sub_10009F534((uint64_t)(v51 + 162));
                                                                                                                                                        }
                                                                                                                                                        *((_OWORD *)v51 + 81) = *((_OWORD *)v52 + 81);
                                                                                                                                                        *(_OWORD *)((char *)v51 + 1305) = *(_OWORD *)(v52 + 1305);
                                                                                                                                                        goto LABEL_216;
                                                                                                                                                      }
                                                                                                                                                      sub_10009F534((uint64_t)(v51 + 158));
                                                                                                                                                    }
                                                                                                                                                    *((_OWORD *)v51 + 79) = *((_OWORD *)v52 + 79);
                                                                                                                                                    *(_OWORD *)((char *)v51 + 1273) = *(_OWORD *)(v52 + 1273);
                                                                                                                                                    goto LABEL_211;
                                                                                                                                                  }
                                                                                                                                                  sub_10009F534((uint64_t)(v51 + 154));
                                                                                                                                                }
                                                                                                                                                *((_OWORD *)v51 + 77) = *((_OWORD *)v52 + 77);
                                                                                                                                                *(_OWORD *)((char *)v51 + 1241) = *(_OWORD *)(v52 + 1241);
                                                                                                                                                goto LABEL_206;
                                                                                                                                              }
                                                                                                                                              sub_10009F534((uint64_t)(v51 + 150));
                                                                                                                                            }
                                                                                                                                            *((_OWORD *)v51 + 75) = *((_OWORD *)v52 + 75);
                                                                                                                                            *(_OWORD *)((char *)v51 + 1209) = *(_OWORD *)(v52 + 1209);
                                                                                                                                            goto LABEL_201;
                                                                                                                                          }
                                                                                                                                          sub_10009F534((uint64_t)(v51 + 146));
                                                                                                                                        }
                                                                                                                                        *((_OWORD *)v51 + 73) = *((_OWORD *)v52 + 73);
                                                                                                                                        *(_OWORD *)((char *)v51 + 1177) = *(_OWORD *)(v52 + 1177);
                                                                                                                                        goto LABEL_196;
                                                                                                                                      }
                                                                                                                                      sub_10009F534((uint64_t)(v51 + 142));
                                                                                                                                    }
                                                                                                                                    *((_OWORD *)v51 + 71) = *((_OWORD *)v52 + 71);
                                                                                                                                    *(_OWORD *)((char *)v51 + 1145) = *(_OWORD *)(v52 + 1145);
                                                                                                                                    goto LABEL_191;
                                                                                                                                  }
                                                                                                                                  sub_10009F534((uint64_t)(v51 + 138));
                                                                                                                                }
                                                                                                                                *((_OWORD *)v51 + 69) = *((_OWORD *)v52 + 69);
                                                                                                                                *(_OWORD *)((char *)v51 + 1113) = *(_OWORD *)(v52 + 1113);
                                                                                                                                goto LABEL_186;
                                                                                                                              }
                                                                                                                              sub_10009F534((uint64_t)(v51 + 134));
                                                                                                                            }
                                                                                                                            *((_OWORD *)v51 + 67) = *((_OWORD *)v52 + 67);
                                                                                                                            *(_OWORD *)((char *)v51 + 1081) = *(_OWORD *)(v52 + 1081);
                                                                                                                            goto LABEL_181;
                                                                                                                          }
                                                                                                                          sub_10009F534((uint64_t)(v51 + 130));
                                                                                                                        }
                                                                                                                        *((_OWORD *)v51 + 65) = *((_OWORD *)v52 + 65);
                                                                                                                        *(_OWORD *)((char *)v51 + 1049) = *(_OWORD *)(v52 + 1049);
                                                                                                                        goto LABEL_176;
                                                                                                                      }
                                                                                                                      sub_10009F534((uint64_t)(v51 + 126));
                                                                                                                    }
                                                                                                                    *((_OWORD *)v51 + 63) = *((_OWORD *)v52 + 63);
                                                                                                                    *(_OWORD *)((char *)v51 + 1017) = *(_OWORD *)(v52 + 1017);
                                                                                                                    goto LABEL_171;
                                                                                                                  }
                                                                                                                  sub_10009F534((uint64_t)(v51 + 122));
                                                                                                                }
                                                                                                                *((_OWORD *)v51 + 61) = *((_OWORD *)v52 + 61);
                                                                                                                *(_OWORD *)((char *)v51 + 985) = *(_OWORD *)(v52 + 985);
                                                                                                                goto LABEL_166;
                                                                                                              }
                                                                                                              sub_10009F534((uint64_t)(v51 + 118));
                                                                                                            }
                                                                                                            *((_OWORD *)v51 + 59) = *((_OWORD *)v52 + 59);
                                                                                                            *(_OWORD *)((char *)v51 + 953) = *(_OWORD *)(v52 + 953);
                                                                                                            goto LABEL_161;
                                                                                                          }
                                                                                                          sub_10009F534((uint64_t)(v51 + 114));
                                                                                                        }
                                                                                                        *((_OWORD *)v51 + 57) = *((_OWORD *)v52 + 57);
                                                                                                        *(_OWORD *)((char *)v51 + 921) = *(_OWORD *)(v52 + 921);
                                                                                                        goto LABEL_156;
                                                                                                      }
                                                                                                      sub_10009F534((uint64_t)(v51 + 110));
                                                                                                    }
                                                                                                    *((_OWORD *)v51 + 55) = *((_OWORD *)v52 + 55);
                                                                                                    *(_OWORD *)((char *)v51 + 889) = *(_OWORD *)(v52 + 889);
                                                                                                    goto LABEL_151;
                                                                                                  }
                                                                                                  sub_10009F534((uint64_t)(v51 + 106));
                                                                                                }
                                                                                                *(_OWORD *)long long v79 = *(_OWORD *)v80;
                                                                                                *(_OWORD *)((char *)v51 + 857) = *(_OWORD *)(v52 + 857);
                                                                                                goto LABEL_146;
                                                                                              }
                                                                                              sub_10009F534((uint64_t)(v51 + 90));
                                                                                            }
                                                                                            *((_OWORD *)v51 + 45) = *((_OWORD *)v52 + 45);
                                                                                            *(_OWORD *)((char *)v51 + 729) = *(_OWORD *)(v52 + 729);
                                                                                            goto LABEL_131;
                                                                                          }
                                                                                          sub_10009F534((uint64_t)(v51 + 86));
                                                                                        }
                                                                                        *((_OWORD *)v51 + 43) = *((_OWORD *)v52 + 43);
                                                                                        *(_OWORD *)((char *)v51 + 697) = *(_OWORD *)(v52 + 697);
                                                                                        goto LABEL_126;
                                                                                      }
                                                                                      sub_10009F534((uint64_t)(v51 + 82));
                                                                                    }
                                                                                    *((_OWORD *)v51 + 41) = *((_OWORD *)v52 + 41);
                                                                                    *(_OWORD *)((char *)v51 + 665) = *(_OWORD *)(v52 + 665);
                                                                                    goto LABEL_121;
                                                                                  }
                                                                                  sub_10009F534((uint64_t)(v51 + 78));
                                                                                }
                                                                                *((_OWORD *)v51 + 39) = *((_OWORD *)v52 + 39);
                                                                                *(_OWORD *)((char *)v51 + 633) = *(_OWORD *)(v52 + 633);
                                                                                goto LABEL_116;
                                                                              }
                                                                              sub_10009F534((uint64_t)(v51 + 74));
                                                                            }
                                                                            *((_OWORD *)v51 + 37) = *((_OWORD *)v52 + 37);
                                                                            *(_OWORD *)((char *)v51 + 601) = *(_OWORD *)(v52 + 601);
                                                                            goto LABEL_111;
                                                                          }
                                                                          sub_10009F534((uint64_t)(v51 + 70));
                                                                        }
                                                                        *((_OWORD *)v51 + 35) = *((_OWORD *)v52 + 35);
                                                                        *(_OWORD *)((char *)v51 + 569) = *(_OWORD *)(v52 + 569);
                                                                        goto LABEL_106;
                                                                      }
                                                                      sub_10009F534((uint64_t)(v51 + 66));
                                                                    }
                                                                    *((_OWORD *)v51 + 33) = *((_OWORD *)v52 + 33);
                                                                    *(_OWORD *)((char *)v51 + 537) = *(_OWORD *)(v52 + 537);
                                                                    goto LABEL_101;
                                                                  }
                                                                  sub_10009F534((uint64_t)(v51 + 62));
                                                                }
                                                                *((_OWORD *)v51 + 31) = *((_OWORD *)v52 + 31);
                                                                *(_OWORD *)((char *)v51 + 505) = *(_OWORD *)(v52 + 505);
                                                                goto LABEL_96;
                                                              }
                                                              sub_10009F534((uint64_t)(v51 + 58));
                                                            }
                                                            *((_OWORD *)v51 + 29) = *((_OWORD *)v52 + 29);
                                                            *(_OWORD *)((char *)v51 + 473) = *(_OWORD *)(v52 + 473);
                                                            goto LABEL_91;
                                                          }
                                                          sub_10009F534((uint64_t)(v51 + 54));
                                                        }
                                                        *((_OWORD *)v51 + 27) = *((_OWORD *)v52 + 27);
                                                        *(_OWORD *)((char *)v51 + 441) = *(_OWORD *)(v52 + 441);
                                                        goto LABEL_86;
                                                      }
                                                      sub_10009F534((uint64_t)(v51 + 50));
                                                    }
                                                    *((_OWORD *)v51 + 25) = *((_OWORD *)v52 + 25);
                                                    *(_OWORD *)((char *)v51 + 409) = *(_OWORD *)(v52 + 409);
                                                    goto LABEL_81;
                                                  }
                                                  sub_10009F534((uint64_t)(v51 + 46));
                                                }
                                                *((_OWORD *)v51 + 23) = *((_OWORD *)v52 + 23);
                                                *(_OWORD *)((char *)v51 + 377) = *(_OWORD *)(v52 + 377);
                                                goto LABEL_76;
                                              }
                                              sub_10009F534((uint64_t)(v51 + 42));
                                            }
                                            *((_OWORD *)v51 + 21) = *((_OWORD *)v52 + 21);
                                            *(_OWORD *)((char *)v51 + 345) = *(_OWORD *)(v52 + 345);
                                            goto LABEL_71;
                                          }
                                          sub_10009F534((uint64_t)(v51 + 38));
                                        }
                                        *((_OWORD *)v51 + 19) = *((_OWORD *)v52 + 19);
                                        *(_OWORD *)((char *)v51 + 313) = *(_OWORD *)(v52 + 313);
                                        goto LABEL_66;
                                      }
                                      sub_10009F534((uint64_t)(v51 + 34));
                                    }
                                    *((_OWORD *)v51 + 17) = *((_OWORD *)v52 + 17);
                                    *(_OWORD *)((char *)v51 + 281) = *(_OWORD *)(v52 + 281);
                                    goto LABEL_61;
                                  }
                                  sub_10009F534((uint64_t)(v51 + 30));
                                }
                                *((_OWORD *)v51 + 15) = *((_OWORD *)v52 + 15);
                                *(_OWORD *)((char *)v51 + 249) = *(_OWORD *)(v52 + 249);
                                goto LABEL_56;
                              }
                              sub_10009F534((uint64_t)(v51 + 26));
                            }
                            *((_OWORD *)v51 + 13) = *((_OWORD *)v52 + 13);
                            *(_OWORD *)((char *)v51 + 217) = *(_OWORD *)(v52 + 217);
                            goto LABEL_51;
                          }
                          sub_10009F534((uint64_t)(v51 + 22));
                        }
                        *((_OWORD *)v51 + 11) = *((_OWORD *)v52 + 11);
                        *(_OWORD *)((char *)v51 + 185) = *(_OWORD *)(v52 + 185);
                        goto LABEL_46;
                      }
                      sub_10009F534((uint64_t)(v51 + 18));
                    }
                    *((_OWORD *)v51 + 9) = *((_OWORD *)v52 + 9);
                    *(_OWORD *)((char *)v51 + 153) = *(_OWORD *)(v52 + 153);
                    goto LABEL_41;
                  }
                  sub_10009F534((uint64_t)(v51 + 14));
                }
                *((_OWORD *)v51 + 7) = *((_OWORD *)v52 + 7);
                *(_OWORD *)((char *)v51 + 121) = *(_OWORD *)(v52 + 121);
                goto LABEL_36;
              }
              sub_10009F534((uint64_t)(v51 + 10));
            }
            *((_OWORD *)v51 + 5) = *((_OWORD *)v52 + 5);
            *(_OWORD *)((char *)v51 + 89) = *(_OWORD *)(v52 + 89);
            goto LABEL_31;
          }
          sub_10009F534((uint64_t)(v51 + 6));
        }
        *((_OWORD *)v51 + 3) = *((_OWORD *)v52 + 3);
        *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)(v52 + 57);
        goto LABEL_26;
      }
      sub_10009F534((uint64_t)(v51 + 2));
    }
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v54;
    *(_OWORD *)((char *)v51 + 25) = *(_OWORD *)(v52 + 25);
    goto LABEL_21;
  }
LABEL_10:
  memcpy(v51, v52, 0x1721uLL);
LABEL_888:
  *(void *)(a1 + a3[39]) = *(void *)(a2 + a3[39]);
  swift_bridgeObjectRelease();
  uint64_t v230 = a3[40];
  uint64_t v231 = (void *)(a1 + v230);
  long long v232 = (uint64_t *)(a2 + v230);
  uint64_t v234 = *v232;
  uint64_t v233 = v232[1];
  *uint64_t v231 = v234;
  v231[1] = v233;
  swift_bridgeObjectRelease();
  uint64_t v235 = a3[41];
  uint64_t v236 = (void *)(a1 + v235);
  uint64_t v237 = (uint64_t *)(a2 + v235);
  uint64_t v239 = *v237;
  uint64_t v238 = v237[1];
  *uint64_t v236 = v239;
  v236[1] = v238;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005CC94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CC960);
}

uint64_t sub_1005CC960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007764(&qword_100722310);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 72);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005CCA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CCA28);
}

uint64_t sub_1005CCA28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007764(&qword_100722310);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 72);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Workflow()
{
  uint64_t result = qword_100733B98;
  if (!qword_100733B98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005CCB20()
{
  sub_1005CCC50();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1005CCC50()
{
  if (!qword_100721B00)
  {
    type metadata accessor for HardwareAttestationType();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100721B00);
    }
  }
}

uint64_t sub_1005CCCA8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for RecipientEncryptionCertificate();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v29 = a2 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v32 = v6 + 16;
  uint64_t v34 = v6 + 32;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(void *)(v35 + 56) + *(void *)(v6 + 72) * i, v5);
    int v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    char v24 = v33(v9);
    if (v3)
    {
      (*v31)(v9, v5);
      return swift_release();
    }
    if (v24)
    {
      swift_release();
      uint64_t v25 = v28;
      v23(v28, v9, v5);
      uint64_t v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v31)(v9, v5);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v30)
      {
        unint64_t v21 = *(void *)(v29 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v30) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v25 = v28;
      swift_release();
      uint64_t v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1005CD000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v61 = type metadata accessor for EncryptedMessageEntity();
  uint64_t v3 = *(void *)(v61 - 8);
  uint64_t v4 = __chkstk_darwin(v61 - 8);
  uint64_t v60 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v48 - v6;
  uint64_t v63 = sub_100007764(&qword_100733C78);
  uint64_t v49 = *(void *)(v63 - 8);
  uint64_t v7 = __chkstk_darwin(v63);
  uint64_t v58 = (uint64_t *)((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v56 = (uint64_t *)((char *)&v48 - v10);
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v48 - v11;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v51 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v52 = (unint64_t)(v13 + 63) >> 6;
  unsigned int v55 = enum case for EncryptedMessageEntity.assessor(_:);
  uint64_t v53 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v54 = (void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v62 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  int64_t v68 = v17;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    uint64_t v24 = *(void *)(v62 + 56);
    uint64_t v25 = (uint64_t *)(*(void *)(v62 + 48) + 16 * i);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = type metadata accessor for RecipientEncryptionCertificate();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = v24 + *(void *)(v29 + 72) * i;
    uint64_t v31 = v63;
    uint64_t v32 = v57;
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v33(&v57[*(int *)(v63 + 48)], v30, v28);
    *uint64_t v32 = v27;
    v32[1] = v26;
    uint64_t v34 = (uint64_t)v32;
    uint64_t v35 = v56;
    sub_1000BEA14(v34, (uint64_t)v56, &qword_100733C78);
    uint64_t v36 = *(int *)(v31 + 48);
    uint64_t v37 = v58;
    uint64_t v38 = (char *)v58 + v36;
    uint64_t v39 = v35[1];
    *uint64_t v58 = *v35;
    v37[1] = v39;
    v33(v38, (uint64_t)v35 + v36, v28);
    swift_bridgeObjectRetain();
    uint64_t v40 = v59;
    RecipientEncryptionCertificate.recipient.getter();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
    uint64_t v42 = v60;
    uint64_t v41 = v61;
    (*v54)(v60, v55, v61);
    sub_1005D157C(&qword_100726788, (void (*)(uint64_t))&type metadata accessor for EncryptedMessageEntity);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v66 == v64 && v67 == v65)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v45 = *v53;
      (*v53)(v42, v41);
      v45(v40, v41);
LABEL_26:
      swift_release();
      uint64_t v46 = (uint64_t)v35;
      uint64_t v47 = v50;
      sub_1000BEA14(v46, v50, &qword_100733C78);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v47, 0, 1, v63);
    }
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = *v53;
    (*v53)(v42, v41);
    v44(v40, v41);
    if (v43) {
      goto LABEL_26;
    }
    uint64_t result = sub_10000C6CC((uint64_t)v35, &qword_100733C78);
    int64_t v17 = v68;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v52) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v51 + 8 * v20);
    int64_t v22 = v17 + 1;
    if (!v21)
    {
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v52) {
        goto LABEL_27;
      }
      unint64_t v21 = *(void *)(v51 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v17 + 3;
        if (v17 + 3 >= v52) {
          goto LABEL_27;
        }
        unint64_t v21 = *(void *)(v51 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v17 + 4;
          if (v17 + 4 >= v52) {
            goto LABEL_27;
          }
          unint64_t v21 = *(void *)(v51 + 8 * v22);
          if (!v21)
          {
            uint64_t v23 = v17 + 5;
            if (v17 + 5 >= v52)
            {
LABEL_27:
              swift_release();
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v50, 1, 1, v63);
            }
            unint64_t v21 = *(void *)(v51 + 8 * v23);
            int64_t v22 = v17 + 5;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v15 = (v21 - 1) & v21;
    int64_t v68 = v22;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v52) {
      goto LABEL_27;
    }
    unint64_t v21 = *(void *)(v51 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_19;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1005CD5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v30 = sub_100007764((uint64_t *)&unk_100722490);
  uint64_t v6 = __chkstk_darwin(v30);
  uint64_t v8 = (Swift::String *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (uint64_t *)((char *)&v27 - v9);
  uint64_t v33 = a1;
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v28 = a2 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v32 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = *(void *)(v32 + 56);
    uint64_t v23 = (uint64_t *)(*(void *)(v32 + 48) + 16 * i);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    uint64_t v26 = type metadata accessor for EncryptionCertificateInStringFormat(0);
    sub_1005D1494(v22 + *(void *)(*(void *)(v26 - 8) + 72) * i, (uint64_t)v10 + *(int *)(v30 + 48), type metadata accessor for EncryptionCertificateInStringFormat);
    *uint64_t v10 = v24;
    v10[1] = v25;
    sub_1000BEA14((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_100722490);
    swift_bridgeObjectRetain();
    sub_1005CFA24((uint64_t)&v33, v8, v31);
    if (v3)
    {
      swift_bridgeObjectRelease();
      sub_10000C6CC((uint64_t)v8, (uint64_t *)&unk_100722490);
      return swift_release();
    }
    uint64_t result = sub_10000C6CC((uint64_t)v8, (uint64_t *)&unk_100722490);
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v29) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v16);
    if (!v20) {
      break;
    }
LABEL_17:
    unint64_t v14 = (v20 - 1) & v20;
  }
  int64_t v21 = v16 + 1;
  if (v16 + 1 >= v29) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 2;
  if (v16 + 2 >= v29) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 3;
  if (v16 + 3 >= v29) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v21 = v16 + 4;
  if (v16 + 4 >= v29)
  {
LABEL_26:
    swift_release();
    return v33;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v16 = v21;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v29) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1005CD89C(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      uint64_t result = 0x4E79616C70736964;
      break;
    case 3:
      uint64_t result = 0x72656469766F7270;
      break;
    case 4:
      uint64_t result = 0x617A696E6167726FLL;
      break;
    case 5:
      uint64_t result = 0x7972747375646E69;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    case 7:
      uint64_t v3 = 0x68636E75616CLL;
      goto LABEL_10;
    case 8:
      uint64_t v3 = 0x746567726174;
LABEL_10:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6954000000000000;
      break;
    case 9:
      uint64_t result = 0xD000000000000010;
      break;
    case 10:
      uint64_t result = 0x6574726F70707573;
      break;
    case 11:
      uint64_t result = 0xD000000000000012;
      break;
    case 12:
      uint64_t result = 0x4C746C7561666564;
      break;
    case 13:
      uint64_t result = 0x736E6F4372657375;
      break;
    case 14:
      uint64_t result = 0xD000000000000017;
      break;
    case 15:
      uint64_t result = 0xD000000000000018;
      break;
    case 16:
      uint64_t result = 0x75706E4972657375;
      break;
    case 17:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 18:
      uint64_t result = 0x4155656C62616E65;
      break;
    case 19:
      uint64_t result = 0x746163696C707061;
      break;
    case 20:
    case 26:
    case 36:
      uint64_t result = 0xD000000000000016;
      break;
    case 21:
      uint64_t result = 0xD000000000000013;
      break;
    case 22:
      uint64_t result = 0xD000000000000014;
      break;
    case 23:
      uint64_t result = 7107700;
      break;
    case 24:
      uint64_t result = 0xD000000000000021;
      break;
    case 25:
      uint64_t result = 0xD000000000000012;
      break;
    case 27:
      uint64_t result = 0xD00000000000001FLL;
      break;
    case 28:
      uint64_t result = 0x6974616E69676170;
      break;
    case 29:
      uint64_t result = 0x65726564726F6E75;
      break;
    case 30:
      uint64_t result = 0x74696B64756F6C63;
      break;
    case 31:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 32:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 33:
      uint64_t result = 0xD000000000000023;
      break;
    case 34:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 35:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005CDD14(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1005CD89C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1005CD89C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1005CDDA0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1005CD89C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1005CDE04()
{
  sub_1005CD89C(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005CDE58()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1005CD89C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1005CDEB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1005D1860();
  *a1 = result;
  return result;
}

uint64_t sub_1005CDEE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005CD89C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1005CDF14()
{
  return sub_1005CD89C(*v0);
}

uint64_t sub_1005CDF1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1005D1860();
  *a1 = result;
  return result;
}

void sub_1005CDF44(unsigned char *a1@<X8>)
{
  *a1 = 37;
}

uint64_t sub_1005CDF50(uint64_t a1)
{
  unint64_t v2 = sub_1005D13C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005CDF8C(uint64_t a1)
{
  unint64_t v2 = sub_1005D13C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005CDFC8(uint64_t a1)
{
  uint64_t v122 = (char *)v1;
  unint64_t v2 = (void *)__chkstk_darwin(a1);
  uint64_t v119 = v3;
  uint64_t v4 = type metadata accessor for DIPError.Code();
  uint64_t v113 = *(void *)(v4 - 8);
  uint64_t v114 = v4;
  __chkstk_darwin(v4);
  uint64_t v118 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EncryptedMessageEntity();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v111 = v6;
  __chkstk_darwin(v6);
  uint64_t v112 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RecipientEncryptionCertificate();
  uint64_t v116 = *(void *)(v8 - 8);
  uint64_t v117 = v8;
  __chkstk_darwin(v8);
  uint64_t v115 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DIPCertUsage();
  uint64_t v108 = *(void *)(v10 - 8);
  uint64_t v109 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v107 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v106 = (char *)&v99 - v13;
  uint64_t v105 = type metadata accessor for DIPOIDVerifier();
  uint64_t v120 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  unint64_t v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007764(&qword_100722310);
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007764(&qword_100733C60);
  uint64_t v121 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (int *)type metadata accessor for Workflow();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (Swift::OpaquePointer *)((char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = (char *)v25 + *(int *)(v23 + 152);
  sub_1000ABB90(v131);
  uint64_t v128 = v26;
  sub_1000BEA14((uint64_t)v131, (uint64_t)v26, &qword_1007222F8);
  uint64_t v27 = v22[39];
  uint64_t v124 = v2;
  uint64_t v125 = v27;
  *(void **)((char *)&v25->_rawValue + v27) = 0;
  uint64_t v28 = (char *)v25 + v22[40];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  uint64_t v126 = v28;
  uint64_t v123 = v22;
  uint64_t v29 = v22[41];
  v129 = v25;
  uint64_t v30 = (char *)v25 + v29;
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  uint64_t v127 = v30;
  sub_10000C728(v2, v2[3]);
  sub_1005D13C8();
  uint64_t v31 = (uint64_t)v122;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v31)
  {
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v124);
    sub_1000BEA14((uint64_t)v128, (uint64_t)v130, &qword_1007222F8);
    sub_10023932C((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = (uint64_t)v18;
    uint64_t v122 = v15;
    uint64_t v33 = v121;
    LOBYTE(v130[0]._rawValue) = 0;
    uint64_t v34 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v36 = v129;
    v129->_rawValue = (void *)v34;
    v36[1]._rawValue = v37;
    LOBYTE(v130[0]._rawValue) = 1;
    v36[2]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[3]._rawValue = v38;
    LOBYTE(v130[0]._rawValue) = 2;
    v36[4]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[5]._rawValue = v39;
    LOBYTE(v130[0]._rawValue) = 3;
    v36[6]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[7]._rawValue = v40;
    LOBYTE(v130[0]._rawValue) = 4;
    v36[8]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[9]._rawValue = v41;
    LOBYTE(v130[0]._rawValue) = 5;
    v36[10]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[11]._rawValue = v42;
    char v132 = 6;
    sub_1000B59D4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LOBYTE(v36[12]._rawValue) = v130[0]._rawValue;
    LOBYTE(v130[0]._rawValue) = 7;
    v36[13]._rawValue = (void *)KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v36[14]._rawValue = v43;
    LOBYTE(v130[0]._rawValue) = 8;
    v36[15]._rawValue = (void *)KeyedDecodingContainer.decode(_:forKey:)();
    v36[16]._rawValue = v44;
    sub_100007764(&qword_1007268F0);
    char v132 = 9;
    uint64_t v45 = v19;
    id v104 = (id)sub_100239204();
    uint64_t v46 = v21;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    rawValue = v130[0]._rawValue;
    if (!v130[0]._rawValue) {
      rawValue = _swiftEmptyArrayStorage;
    }
    v129[17]._rawValue = rawValue;
    LOBYTE(v130[0]._rawValue) = 10;
    uint64_t v48 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v49 = v129;
    v129[18]._rawValue = (void *)v48;
    v49[19]._rawValue = v50;
    char v132 = 11;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v129[20]._rawValue = (void *)v130[0];
    LOBYTE(v130[0]._rawValue) = 12;
    uint64_t v51 = KeyedDecodingContainer.decode(_:forKey:)();
    int64_t v52 = v129;
    v129[21]._rawValue = (void *)v51;
    v52[22]._rawValue = v53;
    char v132 = 13;
    sub_1000B5A28();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LOBYTE(v129[23]._rawValue) = v130[0]._rawValue;
    type metadata accessor for HardwareAttestationType();
    LOBYTE(v130[0]._rawValue) = 14;
    sub_1005D157C(&qword_1007224C0, (void (*)(uint64_t))&type metadata accessor for HardwareAttestationType);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_1000BEA14(v32, (uint64_t)v129 + v123[18], &qword_100722310);
    sub_100007764(&qword_1007224C8);
    char v132 = 15;
    sub_1000B5A7C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(Swift::OpaquePointer *)((char *)v129 + v123[19]) = v130[0];
    sub_100007764(&qword_1007224D8);
    char v132 = 16;
    sub_1005D141C(&qword_1007224E0, &qword_1007224D8, (void (*)(void))sub_1000B5B24);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v54 = v130[0]._rawValue;
    if (!v130[0]._rawValue) {
      uint64_t v54 = _swiftEmptyArrayStorage;
    }
    *(void **)((char *)&v129->_rawValue + v123[20]) = v54;
    LOBYTE(v130[0]._rawValue) = 17;
    uint64_t v55 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v56 = (uint64_t *)((char *)v129 + v123[21]);
    *uint64_t v56 = v55;
    v56[1] = v57;
    LOBYTE(v130[0]._rawValue) = 18;
    *((unsigned char *)&v129->_rawValue + v123[22]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v132 = 19;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(Swift::OpaquePointer *)((char *)v129 + v123[23]) = v130[0];
    sub_100007764(&qword_100722428);
    char v132 = 20;
    sub_1005D141C(&qword_100722430, &qword_100722428, (void (*)(void))sub_1000B56A0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(Swift::OpaquePointer *)((char *)v129 + v123[24]) = v130[0];
    sub_100007764(&qword_100722500);
    char v132 = 21;
    sub_1000B5BCC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v58 = v130[0]._rawValue;
    if (!v130[0]._rawValue) {
      uint64_t v58 = _swiftEmptyArrayStorage;
    }
    *(void **)((char *)&v129->_rawValue + v123[25]) = v58;
    LOBYTE(v130[0]._rawValue) = 22;
    *((unsigned char *)&v129->_rawValue + v123[26]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v130[0]._rawValue) = 24;
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v103 = v59;
    LOBYTE(v130[0]._rawValue) = 25;
    uint64_t v101 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v102 = v60;
    sub_100007764(&qword_100722458);
    char v132 = 26;
    sub_1000B5748();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v100 = (void (*)(char *, void, uint64_t))v130[0]._rawValue;
    sub_100007764(&qword_100722410);
    char v132 = 28;
    sub_1005D141C(&qword_100722418, &qword_100722410, (void (*)(void))sub_1000B564C);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(Swift::OpaquePointer *)((char *)v129 + v123[29]) = v130[0];
    sub_100007764(&qword_100722518);
    char v132 = 29;
    sub_1000B5C70();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(Swift::OpaquePointer *)((char *)v129 + v123[30]) = v130[0];
    LOBYTE(v130[0]._rawValue) = 30;
    uint64_t v61 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v62 = (char *)v129 + v123[31];
    *(void *)uint64_t v62 = v61;
    v62[8] = v63 & 1;
    LOBYTE(v130[0]._rawValue) = 31;
    uint64_t v64 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v65 = (char *)v129 + v123[32];
    *(void *)uint64_t v65 = v64;
    v65[8] = v66 & 1;
    LOBYTE(v130[0]._rawValue) = 32;
    uint64_t v67 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    int64_t v68 = (char *)v129 + v123[33];
    *(void *)int64_t v68 = v67;
    v68[8] = v69 & 1;
    LOBYTE(v130[0]._rawValue) = 33;
    uint64_t v70 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v71 = (char *)v129 + v123[34];
    *(void *)uint64_t v71 = v70;
    v71[8] = v72 & 1;
    LOBYTE(v130[0]._rawValue) = 34;
    uint64_t v73 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v74 = (char *)v129 + v123[35];
    *(void *)uint64_t v74 = v73;
    v74[8] = v75 & 1;
    LOBYTE(v130[0]._rawValue) = 35;
    char v76 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((unsigned char *)&v129->_rawValue + v123[36]) = (v76 == 2) | v76 & 1;
    LOBYTE(v130[0]._rawValue) = 36;
    *((unsigned char *)&v129->_rawValue + v123[37]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    LOBYTE(v130[0]._rawValue) = 23;
    uint64_t v77 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    if (v78)
    {
      uint64_t v79 = sub_1005D18B4(v77, v78);
      char v81 = v80 & 1;
    }
    else
    {
      uint64_t v79 = 0;
      char v81 = 1;
    }
    uint64_t v82 = (char *)v129 + v123[27];
    *(void *)uint64_t v82 = v79;
    v82[8] = v81;
    DIPOIDVerifier.init()();
    char v132 = 27;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    if (v130[0]._rawValue)
    {
      DIPOIDVerifier.setIntermediates(fromBase64DER:)(v130[0]);
      swift_bridgeObjectRelease();
    }
    if (v103 && v102)
    {
      swift_bridgeObjectRelease();
      uint64_t v100 = *(void (**)(char *, void, uint64_t))(v108 + 104);
      v100(v106, enum case for DIPCertUsage.inoEncryption(_:), v109);
      id v104 = (id)DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)();
      uint64_t v83 = v109;
      uint64_t v84 = *(char **)(v108 + 8);
      uint64_t v85 = v106;
      v108 += 8;
      uint64_t v106 = v84;
      ((void (*)(char *, uint64_t))v84)(v85, v109);
      swift_bridgeObjectRelease();
      v100(v107, enum case for DIPCertUsage.inoSigning(_:), v83);
      uint64_t v86 = (void *)DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)();
      ((void (*)(char *, uint64_t))v106)(v107, v109);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v110 + 104))(v112, enum case for EncryptedMessageEntity.ino(_:), v111);
      uint64_t v127 = (char *)v104;
      uint64_t v128 = v86;
      uint64_t v87 = v115;
      RecipientEncryptionCertificate.init(keyAgreement:signing:recipient:)();
      sub_100007764(&qword_100722480);
      uint64_t v88 = (int *)(sub_100007764(&qword_100722488) - 8);
      unint64_t v89 = (*(unsigned __int8 *)(*(void *)v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v88 + 80);
      uint64_t v90 = swift_allocObject();
      *(_OWORD *)(v90 + 16) = xmmword_100610730;
      uint64_t v91 = (void *)(v90 + v89);
      unint64_t v92 = v90 + v89 + v88[14];
      *uint64_t v91 = 0x746C7561666564;
      v91[1] = 0xE700000000000000;
      uint64_t v93 = v116;
      uint64_t v94 = v87;
      uint64_t v95 = v117;
      (*(void (**)(unint64_t, char *, uint64_t))(v116 + 16))(v92, v94, v117);
      unint64_t v96 = sub_10015D37C(v90);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v115, v95);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v100)
      {
        unint64_t v96 = sub_1005CD5BC((uint64_t)&_swiftEmptyDictionarySingleton, (uint64_t)v100, (uint64_t)v122);
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v96 = 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v45);
    uint64_t v97 = (uint64_t)v122;
    uint64_t v98 = (uint64_t)v129;
    *(void **)((char *)&v129->_rawValue + v123[28]) = (void *)v96;
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v97, v105);
    sub_1005D1494(v98, v119, (uint64_t (*)(void))type metadata accessor for Workflow);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v124);
    return sub_1005D14FC(v98, (uint64_t (*)(void))type metadata accessor for Workflow);
  }
}

uint64_t sub_1005CFA24(uint64_t a1, Swift::String *a2, uint64_t a3)
{
  uint64_t v116 = a3;
  uint64_t v103 = a1;
  uint64_t v4 = type metadata accessor for DIPError.Code();
  uint64_t v106 = *(void *)(v4 - 8);
  uint64_t v107 = v4;
  __chkstk_darwin(v4);
  uint64_t v108 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EncryptedMessageEntity();
  uint64_t v113 = *(void *)(v6 - 8);
  uint64_t v114 = v6;
  __chkstk_darwin(v6);
  uint64_t v101 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007764(&qword_100722300);
  __chkstk_darwin(v8 - 8);
  uint64_t v102 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for DIPOIDVerifier();
  uint64_t v121 = *(void *)(v125 - 8);
  uint64_t v10 = __chkstk_darwin(v125);
  id v104 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v111 = (char *)&v94 - v12;
  uint64_t v13 = sub_100007764(&qword_100720278);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v100 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v94 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v94 - v19;
  uint64_t v21 = sub_100007764((uint64_t *)&unk_100722490);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v99 = (uint64_t *)((char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v98 = (uint64_t *)((char *)&v94 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v105 = (uint64_t *)((char *)&v94 - v27);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v110 = (char *)&v94 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t *)((char *)&v94 - v30);
  uint64_t v32 = type metadata accessor for DIPCertUsage();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v94 - v37;
  uint64_t v117 = a2;
  uint64_t v118 = v21;
  uint64_t v39 = *(int *)(v21 + 48);
  uint64_t v40 = (uint64_t)v31 + v39;
  object = a2->_object;
  *uint64_t v31 = a2->_countAndFlagsBits;
  v31[1] = (uint64_t)object;
  uint64_t v42 = v113;
  uint64_t v120 = (uint64_t)a2 + v39;
  sub_1005D1494((uint64_t)a2 + v39, v40, type metadata accessor for EncryptionCertificateInStringFormat);
  uint64_t v95 = type metadata accessor for EncryptionCertificateInStringFormat(0);
  sub_100048D6C(v40 + *(int *)(v95 + 24), (uint64_t)v20, &qword_100720278);
  uint64_t v43 = v40;
  uint64_t v44 = v114;
  sub_1005D14FC(v43, type metadata accessor for EncryptionCertificateInStringFormat);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  uint64_t v97 = v42 + 48;
  unint64_t v96 = v45;
  unsigned int v46 = v45((uint64_t)v20, 1, v44);
  uint64_t v109 = v32;
  uint64_t v119 = v33;
  uint64_t v122 = v38;
  uint64_t v115 = v36;
  if (v46 == 1) {
    goto LABEL_2;
  }
  sub_100048D6C((uint64_t)v20, (uint64_t)v18, &qword_100720278);
  int v48 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v18, v44);
  if (v48 == enum case for EncryptedMessageEntity.idvServer(_:))
  {
    uint64_t v47 = enum case for DIPCertUsage.inoEncryption(_:);
    uint64_t v33 = v119;
    goto LABEL_5;
  }
  uint64_t v72 = v42;
  uint64_t v50 = v121;
  if (v48 == enum case for EncryptedMessageEntity.ino(_:))
  {
    uint64_t v73 = (unsigned int *)&enum case for DIPCertUsage.inoEncryption(_:);
LABEL_17:
    uint64_t v74 = *(void (**)(char *, void, uint64_t))(v119 + 104);
    v74(v38, *v73, v32);
    v74(v36, enum case for DIPCertUsage.inoSigning(_:), v32);
    sub_10000C6CC((uint64_t)v20, &qword_100720278);
    goto LABEL_6;
  }
  if (v48 != enum case for EncryptedMessageEntity.athena(_:)
    && v48 != enum case for EncryptedMessageEntity.assessor(_:))
  {
    if (v48 != enum case for EncryptedMessageEntity.issuer(_:))
    {
      (*(void (**)(char *, uint64_t))(v72 + 8))(v18, v44);
      uint64_t v33 = v119;
LABEL_2:
      uint64_t v47 = enum case for DIPCertUsage.inoEncryption(_:);
LABEL_5:
      uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 104);
      v49(v38, v47, v32);
      v49(v36, enum case for DIPCertUsage.inoSigning(_:), v32);
      sub_10000C6CC((uint64_t)v20, &qword_100720278);
      uint64_t v50 = v121;
      goto LABEL_6;
    }
    uint64_t v73 = (unsigned int *)&enum case for DIPCertUsage.identityEncryptionExternal(_:);
    goto LABEL_17;
  }
  sub_10000C6CC((uint64_t)v20, &qword_100720278);
  uint64_t v93 = *(void (**)(char *, void, uint64_t))(v119 + 104);
  v93(v38, enum case for DIPCertUsage.accountAssessmentServerEncryption(_:), v32);
  v93(v36, enum case for DIPCertUsage.accountAssessmentServerSigning(_:), v32);
LABEL_6:
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  int64_t v52 = v111;
  v51(v111, v116, v125);
  uint64_t v53 = v117;
  uint64_t v54 = v110;
  uint64_t v55 = (uint64_t)&v110[*(int *)(v118 + 48)];
  uint64_t v56 = v117->_object;
  *(void *)uint64_t v110 = v117->_countAndFlagsBits;
  *((void *)v54 + 1) = v56;
  sub_1005D1494(v120, v55, type metadata accessor for EncryptionCertificateInStringFormat);
  swift_bridgeObjectRetain();
  uint64_t v57 = v55;
  uint64_t v58 = v52;
  sub_1005D14FC(v57, type metadata accessor for EncryptionCertificateInStringFormat);
  id v59 = v112;
  uint64_t v60 = (void *)DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)();
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v125);
    swift_bridgeObjectRelease();
    unint64_t v123 = 0;
    unint64_t v124 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    unint64_t v123 = 0xD000000000000030;
    unint64_t v124 = 0x8000000100659CF0;
    String.append(_:)(*v53);
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v108, enum case for DIPError.Code.internalError(_:), v107);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005D157C((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
    uint64_t v61 = *(void (**)(char *, uint64_t))(v119 + 8);
    uint64_t v62 = v109;
    v61(v115, v109);
    return ((uint64_t (*)(char *, uint64_t))v61)(v122, v62);
  }
  else
  {
    uint64_t v110 = (char *)v51;
    id v112 = v60;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v50 + 8);
    uint64_t v121 = v50 + 8;
    v64(v58, v125);
    swift_bridgeObjectRelease();
    uint64_t v65 = v118;
    char v66 = v105;
    uint64_t v67 = (uint64_t)v105 + *(int *)(v118 + 48);
    int64_t v68 = v53->_object;
    *uint64_t v105 = v53->_countAndFlagsBits;
    v66[1] = (uint64_t)v68;
    sub_1005D1494(v120, v67, type metadata accessor for EncryptionCertificateInStringFormat);
    uint64_t v69 = *(void *)(v67 + 24);
    swift_bridgeObjectRetain();
    sub_1005D14FC(v67, type metadata accessor for EncryptionCertificateInStringFormat);
    if (v69)
    {
      uint64_t v70 = v104;
      uint64_t v71 = v125;
      ((void (*)(char *, uint64_t, uint64_t))v110)(v104, v116, v125);
      char v75 = (void *)DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)();
      v64(v70, v71);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v75 = 0;
    }
    char v76 = v98;
    uint64_t v77 = (uint64_t)v98 + *(int *)(v65 + 48);
    uint64_t countAndFlagsBits = v117->_countAndFlagsBits;
    uint64_t v79 = (uint64_t)v117->_object;
    *uint64_t v98 = v117->_countAndFlagsBits;
    v76[1] = v79;
    uint64_t v80 = v120;
    uint64_t v125 = v77;
    sub_1005D1494(v120, v77, type metadata accessor for EncryptionCertificateInStringFormat);
    uint64_t v81 = *(int *)(v65 + 48);
    uint64_t v82 = v99;
    uint64_t v83 = (uint64_t)v99 + v81;
    *uint64_t v99 = countAndFlagsBits;
    v82[1] = v79;
    sub_1005D1494(v80, (uint64_t)v82 + v81, type metadata accessor for EncryptionCertificateInStringFormat);
    uint64_t v84 = v100;
    sub_100048D6C(v83 + *(int *)(v95 + 24), v100, &qword_100720278);
    swift_bridgeObjectRetain();
    sub_1005D14FC(v83, type metadata accessor for EncryptionCertificateInStringFormat);
    uint64_t v85 = v114;
    if (v96(v84, 1, v114) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v113 + 104))(v101, enum case for EncryptedMessageEntity.ino(_:), v85);
      sub_10000C6CC(v84, &qword_100720278);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v113 + 32))(v101, v84, v85);
    }
    uint64_t v86 = v119;
    id v87 = v75;
    id v88 = v112;
    uint64_t v89 = (uint64_t)v102;
    RecipientEncryptionCertificate.init(keyAgreement:signing:recipient:)();
    uint64_t v90 = type metadata accessor for RecipientEncryptionCertificate();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v89, 0, 1, v90);
    sub_10055F040(v89, countAndFlagsBits, v79);

    uint64_t v91 = *(void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v92 = v109;
    v91(v115, v109);
    v91(v122, v92);
    return sub_1005D14FC(v125, type metadata accessor for EncryptionCertificateInStringFormat);
  }
}

void sub_1005D06B4()
{
  qword_100760880 = (uint64_t)&off_1006F1A40;
}

void *sub_1005D06C8()
{
  uint64_t v1 = sub_100007764(&qword_100722310);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for HardwareAttestationType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Workflow();
  uint64_t v9 = *(int *)(v8 + 76);
  if (*(void *)(v0 + v9))
  {
    uint64_t v10 = *(void **)(v0 + v9);
  }
  else
  {
    sub_100048D6C(v0 + *(int *)(v8 + 72), (uint64_t)v3, &qword_100722310);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10000C6CC((uint64_t)v3, &qword_100722310);
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v11(v7, v3, v4);
      sub_100007764(&qword_100722590);
      unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v10 = (void *)swift_allocObject();
      *((_OWORD *)v10 + 1) = xmmword_100610730;
      v11((char *)v10 + v12, v7, v4);
    }
  }
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t sub_1005D08B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007764(&qword_100733C70);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + *(int *)(type metadata accessor for Workflow() + 112))) {
    goto LABEL_4;
  }
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1005CD000(v6, (uint64_t)v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100007764(&qword_100733C78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_10000C6CC((uint64_t)v5, &qword_100733C70);
LABEL_4:
    uint64_t v8 = type metadata accessor for RecipientEncryptionCertificate();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = &v5[*(int *)(v7 + 48)];
  uint64_t v11 = type metadata accessor for RecipientEncryptionCertificate();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v10, v11);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
}

uint64_t sub_1005D0A88()
{
  uint64_t v0 = type metadata accessor for EncryptedMessageEntity();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  RecipientEncryptionCertificate.recipient.getter();
  sub_1005D157C(&qword_100726788, (void (*)(uint64_t))&type metadata accessor for EncryptedMessageEntity);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v6[2] == v6[0] && v6[3] == v6[1]) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1005D0C18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DIPError.Code();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007764(&qword_100722300);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v3 + *(int *)(type metadata accessor for Workflow() + 112));
  if (!v14 || !*(void *)(v14 + 16))
  {
    uint64_t v21 = type metadata accessor for RecipientEncryptionCertificate();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
LABEL_8:
    sub_10000C6CC((uint64_t)v13, &qword_100722300);
    unint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xD000000000000029;
    unint64_t v31 = 0x8000000100659D30;
    v24._uint64_t countAndFlagsBits = a1;
    v24._object = a2;
    String.append(_:)(v24);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DIPError.Code.serverResponseInconsistent(_:), v7);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005D157C((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    return swift_willThrow();
  }
  uint64_t v29 = a3;
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  unint64_t v15 = sub_100590548(a1, (uint64_t)a2);
  if (v16)
  {
    unint64_t v17 = v15;
    uint64_t v27 = *(void *)(v14 + 56);
    uint64_t v18 = type metadata accessor for RecipientEncryptionCertificate();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v28 = v7;
    uint64_t v20 = v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v13, v27 + *(void *)(v19 + 72) * v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v18);
    uint64_t v7 = v28;
  }
  else
  {
    uint64_t v18 = type metadata accessor for RecipientEncryptionCertificate();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for RecipientEncryptionCertificate();
  uint64_t v22 = *(void *)(v18 - 8);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 1, v18);
  a1 = v32;
  if (v23 == 1) {
    goto LABEL_8;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v29, v13, v18);
}

uint64_t sub_1005D1088(uint64_t a1)
{
  return sub_1005CDFC8(a1);
}

uint64_t sub_1005D10A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1005D08B0(a1);
}

uint64_t sub_1005D10CC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for EncryptedMessageEntity();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (*(uint64_t (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for EncryptedMessageEntity.idvServer(_:), v5);
  uint64_t v10 = *(void *)(v2 + *(int *)(a1 + 112));
  if (v10)
  {
    __chkstk_darwin(v9);
    v13[-2] = v8;
    swift_bridgeObjectRetain();
    sub_1005CCCA8((uint64_t (*)(char *))sub_1005D155C, v10, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = type metadata accessor for RecipientEncryptionCertificate();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005D1284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = (uint64_t *)(v2 + *(int *)(a1 + 84));
  if (v4[1])
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (void *)v4[1];
  }
  else
  {
    uint64_t v6 = (void *)0xE700000000000000;
    uint64_t v5 = 0x746C7561666564;
  }
  swift_bridgeObjectRetain();
  sub_1005D0C18(v5, v6, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005D1300(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 148));
}

uint64_t sub_1005D130C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D1318(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 124));
}

uint64_t sub_1005D132C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 128));
}

uint64_t sub_1005D1340(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 136));
}

uint64_t sub_1005D1354(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 140));
}

uint64_t sub_1005D1368()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D1370()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D137C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D1388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100048D6C(v2 + *(int *)(a1 + 152), a2, &qword_1007222F8);
}

uint64_t sub_1005D13B4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 132));
}

unint64_t sub_1005D13C8()
{
  unint64_t result = qword_100733C68;
  if (!qword_100733C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100733C68);
  }
  return result;
}

uint64_t sub_1005D141C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100019364(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005D1494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005D14FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005D155C()
{
  return sub_1005D0A88() & 1;
}

uint64_t sub_1005D157C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Workflow.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Workflow.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *uint64_t result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D1720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Workflow.CodingKeys()
{
  return &type metadata for Workflow.CodingKeys;
}

unint64_t sub_1005D175C()
{
  unint64_t result = qword_100733C80;
  if (!qword_100733C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100733C80);
  }
  return result;
}

unint64_t sub_1005D17B4()
{
  unint64_t result = qword_100733C88;
  if (!qword_100733C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100733C88);
  }
  return result;
}

unint64_t sub_1005D180C()
{
  unint64_t result = qword_100733C90;
  if (!qword_100733C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100733C90);
  }
  return result;
}

uint64_t sub_1005D1860()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

uint64_t sub_1005D18B4(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        unsigned int v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unsigned int v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
      }
      uint64_t v7 = (uint64_t)sub_1005D7C4C(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        unint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_1005D7B64(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

uint64_t sub_1005D1B04(uint64_t a1)
{
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1005D83B4(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1005D1C9C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (Swift::Int v3 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v4 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v5 = v3 & ~v4,
        ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0))
  {
    uint64_t v6 = ~v4;
    do
    {
      sub_10059256C(*(void *)(a2 + 48) + 40 * v5, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)();
      sub_1001D90FC((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1005D1D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1005D1EAC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1005D1F78()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10004440C(v0, qword_100733CA0);
  sub_1000443D4(v0, (uint64_t)qword_100733CA0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1005D1FE8(uint64_t a1)
{
  return sub_1005D2008(a1, qword_100760888, 0);
}

uint64_t sub_1005D1FF8(uint64_t a1)
{
  return sub_1005D2008(a1, qword_1007608A0, 1);
}

uint64_t sub_1005D2008(uint64_t a1, uint64_t *a2, char a3)
{
  uint64_t v5 = (int *)type metadata accessor for DIPHTTPSession.Configuration(0);
  sub_10004440C((uint64_t)v5, a2);
  unint64_t v6 = (void *)sub_1000443D4((uint64_t)v5, (uint64_t)a2);
  uint64_t v7 = (void *)((char *)v6 + v5[6]);
  *uint64_t v7 = 0x3FE0000000000000;
  uint64_t v8 = enum case for DIPBackoffStrategy.exponential(_:);
  uint64_t v9 = type metadata accessor for DIPBackoffStrategy();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  *unint64_t v6 = 0x404E000000000000;
  v6[1] = 3;
  *((unsigned char *)v6 + v5[7]) = a3;
  *((unsigned char *)v6 + v5[8]) = 1;
  *((unsigned char *)v6 + v5[9]) = 0;
  unint64_t v11 = (void *)((char *)v6 + v5[10]);
  *unint64_t v11 = 0;
  v11[1] = 0;
  return result;
}

uint64_t sub_1005D20EC(double *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DIPBackoffStrategy();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DIPRetrier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::Int v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10015AE4C((uint64_t)a1, v2 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_configuration);
  uint64_t v14 = type metadata accessor for DIPHTTPSession.Configuration(0);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, (char *)a1 + *(int *)(v14 + 24), v6);
  DIPRetrier.init(maxRetries:backoffStrategy:asyncTimeout:)();
  unint64_t v15 = v13;
  uint64_t v16 = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v2 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_retrier, v15, v10);
  BOOL v17 = self;
  id v18 = [v17 defaultSessionConfiguration];
  id v19 = [v17 defaultSessionConfiguration];
  double v20 = *a1;
  [v18 setTimeoutIntervalForRequest:*a1];
  [v19 setTimeoutIntervalForRequest:v20];
  [v18 setURLCache:0];
  [v19 setURLCache:0];
  [v18 setRequestCachePolicy:1];
  [v19 setRequestCachePolicy:1];
  uint64_t v21 = (uint64_t *)((char *)a1 + *(int *)(v14 + 40));
  unint64_t v22 = v21[1];
  if (v22)
  {
    uint64_t v23 = *v21;
    swift_bridgeObjectRetain();
    defaultLogger()();
    swift_bridgeObjectRetain_n();
    Swift::String v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v37 = a1;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v39 = v2;
      uint64_t v44 = v27;
      uint64_t v38 = v16;
      *(_DWORD *)uint64_t v26 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_100110D58(v23, v22, &v44);
      a1 = v37;
      uint64_t v16 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "DIPHTTPSession using source bundle identifier %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v2 = v39;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    NSString v28 = String._bridgeToObjectiveC()();
    [v18 set_sourceApplicationBundleIdentifier:v28];

    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 set_sourceApplicationBundleIdentifier:v29];
  }
  if (*((unsigned char *)a1 + *(int *)(v16 + 32)) == 1)
  {
    id v30 = [self mainBundle];
    NSString v31 = [v30 bundleIdentifier];

    if (v31)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v32 = [objc_allocWithZone((Class)AKAppleIDSession) initWithIdentifier:v31];

    [v18 set_appleIDContext:v32];
  }
  id v33 = [objc_allocWithZone((Class)type metadata accessor for DIPHTTPSessionTaskDelegate()) init];
  uint64_t v34 = self;
  *(void *)(v2 + 16) = [v34 sessionWithConfiguration:v18 delegate:v33 delegateQueue:0];
  id v35 = [v34 sessionWithConfiguration:v19 delegate:v33 delegateQueue:0];

  sub_1005D7AF0((uint64_t)a1);
  *(void *)(v2 + 24) = v35;
  return v2;
}

uint64_t sub_1005D26F4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 invalidateAndCancel];
  uint64_t v2 = *(void **)(v0 + 24);
  [v2 invalidateAndCancel];

  sub_1005D7AF0(v0 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_configuration);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_retrier;
  uint64_t v4 = type metadata accessor for DIPRetrier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1005D27D8()
{
  return type metadata accessor for DIPHTTPSession(0);
}

uint64_t type metadata accessor for DIPHTTPSession(uint64_t a1)
{
  return sub_100048DF0(a1, qword_100733CF0);
}

uint64_t sub_1005D2800()
{
  uint64_t result = type metadata accessor for DIPHTTPSession.Configuration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DIPRetrier();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for DIPHTTPSession.Configuration(uint64_t a1)
{
  return sub_100048DF0(a1, qword_100733F50);
}

uint64_t sub_1005D28FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for URL();
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  if ((a3 & 1) == 0) {
    sub_1005DD4E8(a5, a4 & 1);
  }
  uint64_t result = URLRequest.cachePolicy.setter();
  if (!a2) {
    return result;
  }
  uint64_t v14 = a2 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a2 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_8;
    }
    int64_t v31 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v31 >= v18) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v14 + 8 * v31);
    ++v19;
    if (!v32)
    {
      int64_t v19 = v31 + 1;
      if (v31 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v32 = *(void *)(v14 + 8 * v19);
      if (!v32)
      {
        int64_t v19 = v31 + 2;
        if (v31 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v32 = *(void *)(v14 + 8 * v19);
        if (!v32) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v32 - 1) & v32;
    unint64_t v21 = __clz(__rbit64(v32)) + (v19 << 6);
LABEL_8:
    uint64_t v22 = 16 * v21;
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 48) + v22);
    uint64_t v24 = *v23;
    os_log_type_t v25 = (void *)v23[1];
    uint64_t v26 = (uint64_t *)(*(void *)(a2 + 56) + v22);
    uint64_t v27 = *v26;
    NSString v28 = (void *)v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29.value._uint64_t countAndFlagsBits = v27;
    v29.value._object = v28;
    v30._uint64_t countAndFlagsBits = v24;
    v30._object = v25;
    URLRequest.setValue(_:forHTTPHeaderField:)(v29, v30);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v18) {
    return swift_release();
  }
  unint64_t v32 = *(void *)(v14 + 8 * v33);
  if (v32)
  {
    int64_t v19 = v33;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v32 = *(void *)(v14 + 8 * v19);
    ++v33;
    if (v32) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1005D2B64(uint64_t a1)
{
  uint64_t v140 = type metadata accessor for URLRequest();
  uint64_t v143 = *(void (***)(char *, void, uint64_t))(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v4 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007764(&qword_1007239B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v137 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v138 = v7;
  uint64_t v139 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v134 = (char *)&v127 - v12;
  uint64_t v13 = sub_100007764(&qword_100720A68);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v136 = (char *)&v127 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v135 = (uint64_t)&v127 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v131 = (char *)&v127 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v132 = (uint64_t)&v127 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v127 - v26;
  __chkstk_darwin(v25);
  Swift::String_optional v29 = (char *)&v127 - v28;
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v127 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v141 = (char *)&v127 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v133 = (char *)&v127 - v38;
  __chkstk_darwin(v37);
  uint64_t v142 = (char *)&v127 - v39;
  uint64_t v40 = v1 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_configuration;
  if (*(unsigned char *)(v40 + *(int *)(type metadata accessor for DIPHTTPSession.Configuration(0) + 36)) != 1) {
    return 0;
  }
  uint64_t v130 = v30;
  uint64_t v129 = v31;
  uint64_t v41 = self;
  id v42 = [v41 standardUserDefaults];
  v43._object = (void *)0x8000000100653830;
  v43._uint64_t countAndFlagsBits = 0xD000000000000015;
  Swift::Bool v44 = NSUserDefaults.internalBool(forKey:)(v43);

  if (v44) {
    return 0;
  }
  uint64_t v46 = URLRequest.httpMethod.getter();
  if (!v47) {
    return 0;
  }
  if (v46 == 5522759 && v47 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v48 & 1) == 0) {
      return 0;
    }
  }
  if (qword_10071F5A0 != -1) {
    swift_once();
  }
  uint64_t v49 = (void *)qword_100760850;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v51 = [v49 cachedResponseForRequest:isa];

  if (!v51)
  {
    defaultLogger()();
    char v63 = v143;
    uint64_t v64 = a1;
    uint64_t v65 = v140;
    v143[2](v4, v64, v140);
    char v66 = Logger.logObject.getter();
    int v67 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v66, (os_log_type_t)v67))
    {
      LODWORD(v142) = v67;
      int64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v141 = (char *)swift_slowAlloc();
      v146[0] = (uint64_t)v141;
      *(_DWORD *)int64_t v68 = 136315138;
      URLRequest.url.getter();
      uint64_t v69 = type metadata accessor for URL();
      uint64_t v70 = *(void *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v16, 1, v69) == 1)
      {
        sub_10000C6CC((uint64_t)v16, &qword_100720A68);
        uint64_t v71 = 0;
        unint64_t v72 = 0xE000000000000000;
      }
      else
      {
        uint64_t v71 = URL.absoluteString.getter();
        unint64_t v72 = v107;
        (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v69);
      }
      *(void *)&long long v147 = sub_100110D58(v71, v72, v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v143[1])(v4, v65);
      _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v142, "Nothing is in the cache for %s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      ((void (*)(char *, uint64_t))v63[1])(v4, v65);
    }

    (*(void (**)(char *, uint64_t))(v129 + 8))(v34, v130);
    return 0;
  }
  id v52 = [v41 standardUserDefaults];
  v53._uint64_t countAndFlagsBits = 0xD000000000000016;
  v53._object = (void *)0x8000000100653790;
  Swift::Bool v54 = NSUserDefaults.internalBool(forKey:)(v53);

  id v128 = v51;
  if (!v54)
  {
    id v73 = [v51 userInfo];
    if (v73)
    {
      uint64_t v74 = v73;
      uint64_t v75 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v144 = 0x4173657269707865;
      unint64_t v145 = 0xE900000000000074;
      AnyHashable.init<A>(_:)();
      uint64_t v76 = v130;
      uint64_t v77 = v138;
      uint64_t v78 = v139;
      if (*(void *)(v75 + 16) && (unint64_t v79 = sub_100590504((uint64_t)v146), (v80 & 1) != 0))
      {
        sub_10003BC28(*(void *)(v75 + 56) + 32 * v79, (uint64_t)&v147);
      }
      else
      {
        long long v147 = 0u;
        long long v148 = 0u;
      }
      uint64_t v81 = (uint64_t)v137;
      swift_bridgeObjectRelease();
      sub_1001D90FC((uint64_t)v146);
      if (*((void *)&v148 + 1))
      {
        int v82 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v81, v82 ^ 1u, 1, v77);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v81, 1, v77) != 1)
        {
          uint64_t v83 = v134;
          (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v134, v81, v77);
          Date.init()();
          char v84 = static Date.> infix(_:_:)();
          id v87 = *(void (**)(char *, uint64_t))(v78 + 8);
          uint64_t v85 = v78 + 8;
          uint64_t v86 = v87;
          v87(v11, v77);
          if (v84)
          {
            id v88 = v133;
            defaultLogger()();
            id v89 = v128;
            uint64_t v90 = Logger.logObject.getter();
            os_log_type_t v91 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v90, v91))
            {
              uint64_t v92 = (uint8_t *)swift_slowAlloc();
              v146[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v92 = 136446210;
              id v93 = [v89 response];
              id v94 = [v93 URL];

              if (v94)
              {
                uint64_t v95 = v131;
                static URL._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v96 = type metadata accessor for URL();
                (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v95, 0, 1, v96);
              }
              else
              {
                uint64_t v96 = type metadata accessor for URL();
                uint64_t v95 = v131;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v131, 1, 1, v96);
              }
              uint64_t v139 = v85;
              uint64_t v119 = (uint64_t)v95;
              uint64_t v120 = v132;
              sub_1000BEA14(v119, v132, &qword_100720A68);
              type metadata accessor for URL();
              uint64_t v121 = v120;
              uint64_t v122 = *(void *)(v96 - 8);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48))(v121, 1, v96) == 1)
              {
                uint64_t v123 = 0x3E6C696E3CLL;
                sub_10000C6CC(v121, &qword_100720A68);
                unint64_t v124 = 0xE500000000000000;
              }
              else
              {
                uint64_t v143 = (void (**)(char *, void, uint64_t))v89;
                uint64_t v125 = v121;
                uint64_t v123 = URL.absoluteString.getter();
                unint64_t v124 = v126;
                id v89 = v143;
                (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v125, v96);
              }
              *(void *)&long long v147 = sub_100110D58(v123, v124, v146);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v90, v91, "Found cached response for %{public}s", v92, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v129 + 8))(v133, v130);
              v86(v134, v138);
            }
            else
            {

              (*(void (**)(char *, uint64_t))(v129 + 8))(v88, v76);
              v86(v134, v77);
            }
            return v128;
          }
          v86(v83, v77);
LABEL_36:
          uint64_t v97 = v141;
          defaultLogger()();
          id v98 = v128;
          uint64_t v99 = Logger.logObject.getter();
          os_log_type_t v100 = static os_log_type_t.info.getter();
          BOOL v101 = os_log_type_enabled(v99, v100);
          uint64_t v102 = v136;
          if (v101)
          {
            uint64_t v103 = (uint8_t *)swift_slowAlloc();
            v146[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v103 = 136446210;
            id v104 = [v98 response];
            id v105 = [v104 URL];

            if (v105)
            {
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v106 = type metadata accessor for URL();
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v102, 0, 1, v106);
            }
            else
            {
              uint64_t v106 = type metadata accessor for URL();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 56))(v102, 1, 1, v106);
            }
            uint64_t v112 = (uint64_t)v102;
            uint64_t v113 = v135;
            sub_1000BEA14(v112, v135, &qword_100720A68);
            type metadata accessor for URL();
            uint64_t v114 = v113;
            uint64_t v115 = *(void *)(v106 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v113, 1, v106) == 1)
            {
              uint64_t v116 = 0x3E6C696E3CLL;
              sub_10000C6CC(v114, &qword_100720A68);
              unint64_t v117 = 0xE500000000000000;
            }
            else
            {
              uint64_t v116 = URL.absoluteString.getter();
              unint64_t v117 = v118;
              (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v114, v106);
            }
            *(void *)&long long v147 = sub_100110D58(v116, v117, v146);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v99, v100, "Cached response is expired, fetching new response for %{public}s", v103, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v129 + 8))(v141, v130);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v129 + 8))(v97, v76);
          }
          return v128;
        }
LABEL_35:
        sub_10000C6CC(v81, &qword_1007239B0);
        goto LABEL_36;
      }
    }
    else
    {
      long long v147 = 0u;
      long long v148 = 0u;
      uint64_t v76 = v130;
      uint64_t v77 = v138;
      uint64_t v78 = v139;
      uint64_t v81 = (uint64_t)v137;
    }
    sub_10000C6CC((uint64_t)&v147, (uint64_t *)&unk_100727200);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 56))(v81, 1, 1, v77);
    goto LABEL_35;
  }
  uint64_t v55 = v142;
  defaultLogger()();
  id v56 = v51;
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v57, v58))
  {
    id v59 = (uint8_t *)swift_slowAlloc();
    v146[0] = swift_slowAlloc();
    *(_DWORD *)id v59 = 136315138;
    id v60 = [v56 response];
    id v61 = [v60 URL];

    if (v61)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v62 = type metadata accessor for URL();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v27, 0, 1, v62);
    }
    else
    {
      uint64_t v62 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v27, 1, 1, v62);
    }
    sub_1000BEA14((uint64_t)v27, (uint64_t)v29, &qword_100720A68);
    type metadata accessor for URL();
    uint64_t v108 = *(void *)(v62 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v29, 1, v62) == 1)
    {
      uint64_t v109 = 0x3E6C696E3CLL;
      sub_10000C6CC((uint64_t)v29, &qword_100720A68);
      unint64_t v110 = 0xE500000000000000;
    }
    else
    {
      uint64_t v109 = URL.absoluteString.getter();
      unint64_t v110 = v111;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v62);
    }
    *(void *)&long long v147 = sub_100110D58(v109, v110, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Using cached response for %s due to user defaults setting", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v129 + 8))(v142, v130);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v129 + 8))(v55, v130);
  }
  return v128;
}

uint64_t sub_1005D3E44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 224) = a5;
  *(void *)(v6 + 232) = a6;
  *(unsigned char *)(v6 + 572) = a4;
  *(void *)(v6 + 208) = a2;
  *(void *)(v6 + 216) = a3;
  *(void *)(v6 + 200) = a1;
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v6 + 240) = v8;
  *(void *)(v6 + 248) = *(void *)(v8 - 8);
  *(void *)(v6 + 256) = swift_task_alloc();
  sub_100007764((uint64_t *)&unk_100733FC0);
  *(void *)(v6 + 264) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URLError();
  *(void *)(v6 + 272) = v9;
  *(void *)(v6 + 280) = *(void *)(v9 - 8);
  *(void *)(v6 + 288) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DIPError.Code();
  *(void *)(v6 + 296) = v10;
  *(void *)(v6 + 304) = *(void *)(v10 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  *(void *)(v6 + 320) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for URLError.Code();
  *(void *)(v6 + 328) = v11;
  *(void *)(v6 + 336) = *(void *)(v11 - 8);
  *(void *)(v6 + 344) = swift_task_alloc();
  *(void *)(v6 + 352) = swift_task_alloc();
  sub_100007764(&qword_100720A68);
  *(void *)(v6 + 360) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for DIPError();
  *(void *)(v6 + 368) = v12;
  *(void *)(v6 + 376) = *(void *)(v12 - 8);
  *(void *)(v6 + 384) = swift_task_alloc();
  *(void *)(v6 + 392) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for URLRequest();
  *(void *)(v6 + 400) = v13;
  *(void *)(v6 + 408) = *(void *)(v13 - 8);
  *(void *)(v6 + 416) = swift_task_alloc();
  *(void *)(v6 + 424) = swift_task_alloc();
  *(void *)(v6 + 432) = swift_task_alloc();
  return _swift_task_switch(sub_1005D418C, a2, 0);
}

uint64_t sub_1005D418C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = OBJC_IVAR____TtCFC8coreidvd14DIPHTTPSession14performRequestFzZTV10Foundation10URLRequest21acceptableStatusCodesGSaSi_11ignoreCacheSb11isAnonymousSb17overridingAltDSIDGSqSS__TVS1_4DataCSo13NSURLResponseSb_L_16RequestContainer_request;
  *(void *)(v0 + 440) = OBJC_IVAR____TtCFC8coreidvd14DIPHTTPSession14performRequestFzZTV10Foundation10URLRequest21acceptableStatusCodesGSaSi_11ignoreCacheSb11isAnonymousSb17overridingAltDSIDGSqSS__TVS1_4DataCSo13NSURLResponseSb_L_16RequestContainer_request;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 448) = v7;
  *(void *)(v0 + 456) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v2);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1005D4288;
  uint64_t v9 = *(void *)(v0 + 432);
  char v10 = *(unsigned char *)(v0 + 572);
  return sub_1005D5E50(v9, v10);
}

uint64_t sub_1005D4288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[59] = a1;
  v5[60] = a2;
  v5[61] = a3;
  v5[62] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_1005D4FE4;
  }
  else {
    uint64_t v6 = sub_1005D43A0;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005D43A0()
{
  uint64_t v1 = *(void **)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 496);
  uint64_t v3 = *(char **)(v0 + 224);
  sub_10002CEB0(*(void *)(v0 + 472), *(void *)(v0 + 480));
  sub_1005DE9EC(v1, v3);
  *(void *)(v0 + 504) = v2;
  unint64_t v4 = *(void *)(v0 + 480);
  uint64_t v5 = *(void **)(v0 + 488);
  uint64_t v6 = *(void *)(v0 + 472);
  uint64_t v7 = *(void *)(v0 + 432);
  if (!v2)
  {
    uint64_t v19 = *(void *)(v0 + 400);
    uint64_t v20 = *(void *)(v0 + 408);
    uint64_t v21 = *(void *)(v0 + 200);

    sub_10000C5F4(v6, v4);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v7, v19);
    *(void *)uint64_t v21 = v6;
    *(void *)(v21 + 8) = v4;
    *(void *)(v21 + 16) = v5;
    *(unsigned char *)(v21 + 24) = 0;
LABEL_13:
    uint64_t v49 = enum case for DIPRetrier.RetryResult.success<A>(_:);
    uint64_t v50 = sub_100007764(&qword_100733FD8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v21, v49, v50);
LABEL_32:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v95 = *(uint64_t (**)(void))(v0 + 8);
    return v95();
  }
  uint64_t v8 = *(void *)(v0 + 360);

  sub_10000C5F4(v6, v4);
  sub_100007764((uint64_t *)&unk_1007225C0);
  uint64_t v9 = (int *)(sub_100007764((uint64_t *)&unk_100723460) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100610730;
  unint64_t v12 = v11 + v10 + v9[14];
  uint64_t v13 = enum case for DIPError.PropertyKey.serverURL(_:);
  uint64_t v14 = type metadata accessor for DIPError.PropertyKey();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v11 + v10, v13, v14);
  URLRequest.url.getter();
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15);
  uint64_t v18 = *(void *)(v0 + 360);
  if (v17 == 1)
  {
    sub_10000C6CC(*(void *)(v0 + 360), &qword_100720A68);
    *(void *)(v12 + 24) = &type metadata for String;
    *(void *)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0xE000000000000000;
  }
  else
  {
    *(void *)(v0 + 120) = v15;
    uint64_t v22 = sub_10002C2D8((uint64_t *)(v0 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(v22, v18, v15);
    sub_1000078A8((_OWORD *)(v0 + 96), (_OWORD *)v12);
  }
  uint64_t v23 = *(void *)(v0 + 312);
  uint64_t v24 = *(void *)(v0 + 320);
  uint64_t v25 = *(void *)(v0 + 296);
  uint64_t v26 = *(void *)(v0 + 304);
  sub_10015C504(v11);
  uint64_t v27 = enum case for DIPError.Code.internalError(_:);
  *(_DWORD *)(v0 + 568) = enum case for DIPError.Code.internalError(_:);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 104);
  *(void *)(v0 + 512) = v28;
  *(void *)(v0 + 520) = (v26 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  uint64_t v112 = v28;
  v28(v24, v27, v25);
  swift_errorRetain();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  DIPError.code.getter();
  int v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 88))(v23, v25);
  if (v29 == enum case for DIPError.Code.httpNotModified(_:))
  {
    uint64_t v30 = *(void **)(v0 + 232);
    if (!v30)
    {
      id v98 = *(void **)(v0 + 488);
      uint64_t v99 = *(void *)(v0 + 472);
      unint64_t v100 = *(void *)(v0 + 480);
      uint64_t v101 = *(void *)(v0 + 408);
      uint64_t v71 = *(void *)(v0 + 392);
      uint64_t v103 = *(void *)(v0 + 400);
      uint64_t v106 = *(void *)(v0 + 432);
      uint64_t v72 = *(void *)(v0 + 376);
      uint64_t v97 = *(void *)(v0 + 384);
      uint64_t v73 = *(void *)(v0 + 368);
      uint64_t v74 = *(void *)(v0 + 320);
      uint64_t v75 = *(void *)(v0 + 296);
      uint64_t v76 = *(void *)(v0 + 200);
      sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v77, v71, v73);
      v112(v74, v27, v75);
      sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
      uint64_t v78 = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v79, v97, v73);

      sub_10000C5F4(v99, v100);
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v106, v103);
      *(void *)uint64_t v76 = v78;
      *(void *)(v76 + 8) = 0;
      *(unsigned char *)(v76 + 16) = 1;
      uint64_t v80 = enum case for DIPRetrier.RetryResult.retry<A>(_:);
      uint64_t v81 = sub_100007764(&qword_100733FD8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v76, v80, v81);
      goto LABEL_32;
    }
    id v31 = v30;
    defaultLogger()();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Server indicated cached response has not been modified; reusing cached response",
        v34,
        2u);
      swift_slowDealloc();
    }
    uint64_t v35 = *(void *)(v0 + 248);
    uint64_t v36 = *(void *)(v0 + 256);
    uint64_t v37 = *(void *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v37);
    if (qword_10071F5A0 != -1) {
      swift_once();
    }
    uint64_t v38 = *(void **)(v0 + 488);
    uint64_t v102 = *(void *)(v0 + 472);
    unint64_t v104 = *(void *)(v0 + 480);
    uint64_t v39 = *(void *)(v0 + 432);
    uint64_t v40 = *(void *)(v0 + 408);
    uint64_t v113 = *(void *)(v0 + 400);
    uint64_t v41 = *(void *)(v0 + 376);
    uint64_t v107 = *(void *)(v0 + 368);
    uint64_t v109 = *(void *)(v0 + 392);
    uint64_t v21 = *(void *)(v0 + 200);
    id v42 = (void *)qword_100760850;
    Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
    [v42 storeCachedResponse:v31 forRequest:isa, 0xD000000000000052, 0x800000010065A020, 284];

    id v44 = [v31 data];
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;

    id v48 = [v31 response];
    sub_10000C5F4(v102, v104);

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v109, v107);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v113);
    *(void *)uint64_t v21 = v45;
    *(void *)(v21 + 8) = v47;
    *(void *)(v21 + 16) = v48;
    *(unsigned char *)(v21 + 24) = 1;
    goto LABEL_13;
  }
  int v51 = v29;
  if (v29 != enum case for DIPError.Code.httpUnauthorized(_:)
    && v29 != enum case for DIPError.Code.httpAuthKitReprovision(_:)
    && v29 != enum case for DIPError.Code.httpAuthKitResync(_:))
  {
    unint64_t v52 = *(void *)(v0 + 480);
    Swift::String v53 = *(void **)(v0 + 488);
    uint64_t v54 = *(void *)(v0 + 472);
    uint64_t v114 = *(void *)(v0 + 432);
    uint64_t v55 = *(void *)(v0 + 408);
    uint64_t v56 = *(void *)(v0 + 392);
    uint64_t v58 = *(void *)(v0 + 368);
    uint64_t v57 = *(void *)(v0 + 376);
    uint64_t v108 = *(uint64_t **)(v0 + 200);
    uint64_t v110 = *(void *)(v0 + 400);
    int v105 = enum case for DIPError.Code.httpInternalServerError(_:);
    sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    uint64_t v59 = swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v60, v56, v58);
    swift_errorRelease();

    sub_10000C5F4(v54, v52);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v114, v110);
    *uint64_t v108 = v59;
    if (v51 != v105
      && v51 != enum case for DIPError.Code.httpNotImplemented(_:)
      && v51 != enum case for DIPError.Code.httpBadGateway(_:)
      && v51 != enum case for DIPError.Code.httpServiceUnavailable(_:)
      && v51 != enum case for DIPError.Code.httpGatewayTimeout(_:))
    {
      uint64_t v62 = *(void *)(v0 + 304);
      uint64_t v61 = *(void *)(v0 + 312);
      uint64_t v63 = *(void *)(v0 + 296);
      uint64_t v64 = *(void *)(v0 + 200);
      uint64_t v65 = enum case for DIPRetrier.RetryResult.failure<A>(_:);
      uint64_t v66 = sub_100007764(&qword_100733FD8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v64, v65, v66);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
      goto LABEL_32;
    }
    uint64_t v89 = *(void *)(v0 + 200);
    *(void *)(v89 + 8) = 0;
    *(unsigned char *)(v89 + 16) = 1;
    uint64_t v92 = (unsigned int *)&enum case for DIPRetrier.RetryResult.retry<A>(_:);
LABEL_31:
    uint64_t v93 = *v92;
    uint64_t v94 = sub_100007764(&qword_100733FD8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 104))(v89, v93, v94);
    goto LABEL_32;
  }
  if ((*(unsigned char *)(v0 + 572) & 1) != 0
    || (uint64_t v67 = *(void *)(v0 + 216) + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_configuration,
        *(unsigned char *)(v67 + *(int *)(type metadata accessor for DIPHTTPSession.Configuration(0) + 28)) != 1))
  {
    unint64_t v82 = *(void *)(v0 + 480);
    uint64_t v83 = *(void **)(v0 + 488);
    uint64_t v84 = *(void *)(v0 + 472);
    uint64_t v115 = *(void *)(v0 + 432);
    uint64_t v85 = *(void *)(v0 + 408);
    uint64_t v111 = *(void *)(v0 + 400);
    uint64_t v86 = *(void *)(v0 + 392);
    uint64_t v88 = *(void *)(v0 + 368);
    uint64_t v87 = *(void *)(v0 + 376);
    uint64_t v89 = *(void *)(v0 + 200);
    sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    uint64_t v90 = swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v91, v86, v88);
    swift_errorRelease();

    sub_10000C5F4(v84, v82);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v115, v111);
    *(void *)uint64_t v89 = v90;
    uint64_t v92 = (unsigned int *)&enum case for DIPRetrier.RetryResult.failure<A>(_:);
    goto LABEL_31;
  }
  *(void *)(v0 + 528) = type metadata accessor for DIPAccountManager();
  static DIPAccountManager.sharedInstance.getter();
  uint64_t v68 = *(void *)(v0 + 80);
  uint64_t v69 = *(void *)(v0 + 88);
  sub_10000C728((void *)(v0 + 56), v68);
  uint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v70;
  *uint64_t v70 = v0;
  v70[1] = sub_1005D5614;
  return dispatch thunk of DIPAccountManagerProtocol.renewGrandslamToken(_:)(0, 0, v68, v69);
}

uint64_t sub_1005D4FE4()
{
  v0[24] = v0[62];
  uint64_t v1 = v0[35];
  swift_errorRetain();
  sub_100007764((uint64_t *)&unk_100723450);
  char v2 = swift_dynamicCast();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v2)
  {
    uint64_t v5 = v0[43];
    uint64_t v4 = v0[44];
    uint64_t v6 = v0[41];
    uint64_t v7 = v0[42];
    uint64_t v9 = v0[35];
    uint64_t v8 = v0[36];
    uint64_t v11 = v0[33];
    uint64_t v10 = v0[34];
    v3(v11, 0, 1, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v11, v10);
    sub_1005DD2D8(&qword_100733FE0, (void (*)(uint64_t))&type metadata accessor for URLError);
    _BridgedStoredNSError.code.getter();
    static URLError.Code.networkConnectionLost.getter();
    sub_1005DD2D8(&qword_100733FE8, (void (*)(uint64_t))&type metadata accessor for URLError.Code);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v13 = v0[22];
    uint64_t v12 = v0[23];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v14(v5, v6);
    v14(v4, v6);
    if (v12 == v13)
    {
      uint64_t v15 = URLRequest.httpMethod.getter();
      if (v16)
      {
        if (v15 == 5522759 && v16 == 0xE300000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_9:
          uint64_t v19 = v0[51];
          uint64_t v38 = v0[50];
          uint64_t v39 = v0[54];
          uint64_t v20 = v0[47];
          uint64_t v21 = v0[48];
          uint64_t v22 = v0[46];
          uint64_t v23 = v0[35];
          uint64_t v37 = v0[36];
          uint64_t v24 = v0[34];
          uint64_t v25 = v0[25];
          (*(void (**)(void, void, void))(v0[38] + 104))(v0[40], enum case for DIPError.Code.networkTimeOut(_:), v0[37]);
          swift_errorRetain();
          sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
          DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
          sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
          uint64_t v26 = swift_allocError();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v27, v21, v22);
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v37, v24);
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v39, v38);
          *(void *)uint64_t v25 = v26;
          uint64_t v28 = (unsigned int *)&enum case for DIPRetrier.RetryResult.failure<A>(_:);
          goto LABEL_12;
        }
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_9;
        }
      }
    }
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  }
  else
  {
    uint64_t v17 = v0[33];
    v3(v17, 1, 1, v0[34]);
    sub_10000C6CC(v17, (uint64_t *)&unk_100733FC0);
  }
  uint64_t v29 = v0[54];
  uint64_t v30 = v0[50];
  uint64_t v31 = v0[51];
  uint64_t v25 = v0[25];
  (*(void (**)(void, void, void))(v0[38] + 104))(v0[40], enum case for DIPError.Code.networkTimeOut(_:), v0[37]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  uint64_t v32 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  *(void *)uint64_t v25 = v32;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 1;
  uint64_t v28 = (unsigned int *)&enum case for DIPRetrier.RetryResult.retry<A>(_:);
LABEL_12:
  uint64_t v33 = *v28;
  uint64_t v34 = sub_100007764(&qword_100733FD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v25, v33, v34);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1005D5614()
{
  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1005D5B70;
  }
  else {
    char v2 = sub_1005D5728;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005D5728()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v3 = v0[53];
  uint64_t v2 = v0[54];
  uint64_t v4 = v0[52];
  uint64_t v5 = v0[50];
  uint64_t v9 = v0[26];
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)(v0 + 7));
  v1(v3, v2, v5);
  static DIPAccountManager.sharedInstance.getter();
  sub_10000C728(v0 + 2, v0[5]);
  v6.value._uint64_t countAndFlagsBits = dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)();
  v7._uint64_t countAndFlagsBits = 0x7A69726F68747541;
  v7._object = (void *)0xED00006E6F697461;
  URLRequest.setValue(_:forHTTPHeaderField:)(v6, v7);
  swift_bridgeObjectRelease();
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)(v0 + 2));
  v1(v4, v3, v5);
  return _swift_task_switch(sub_1005D585C, v9, 0);
}

uint64_t sub_1005D585C()
{
  uint64_t v2 = v0[51];
  uint64_t v1 = v0[52];
  uint64_t v3 = v0[50];
  uint64_t v4 = v0[26] + v0[55];
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24))(v4, v1, v3);
  swift_endAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[69] = v5;
  v0[70] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  return _swift_task_switch(sub_1005D5948, 0, 0);
}

uint64_t sub_1005D5948()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[69];
  uint64_t v2 = (void *)v0[61];
  uint64_t v14 = v0[59];
  unint64_t v15 = v0[60];
  uint64_t v17 = v0[54];
  uint64_t v16 = v0[53];
  uint64_t v4 = v0[49];
  uint64_t v3 = v0[50];
  uint64_t v6 = v0[46];
  uint64_t v5 = v0[47];
  uint64_t v7 = v0[25];
  sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  uint64_t v8 = swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v4, v6);

  sub_10000C5F4(v14, v15);
  swift_errorRelease();
  v1(v16, v3);
  v1(v17, v3);
  *(void *)uint64_t v7 = v8;
  *(void *)(v7 + 8) = 0;
  *(unsigned char *)(v7 + 16) = 1;
  uint64_t v10 = enum case for DIPRetrier.RetryResult.retry<A>(_:);
  uint64_t v11 = sub_100007764(&qword_100733FD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v7, v10, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1005D5B70()
{
  uint64_t v1 = *(unsigned int *)(v0 + 568);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  unint64_t v15 = *(void *)(v0 + 480);
  uint64_t v13 = *(void **)(v0 + 488);
  uint64_t v14 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 400);
  uint64_t v19 = *(void *)(v0 + 432);
  uint64_t v16 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 320);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v17 = *(uint64_t **)(v0 + 200);
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v0 + 56);
  v2(v6, v1, v7);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  uint64_t v8 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();

  sub_10000C5F4(v14, v15);
  swift_errorRelease();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v18);
  *uint64_t v17 = v8;
  uint64_t v9 = enum case for DIPRetrier.RetryResult.failure<A>(_:);
  uint64_t v10 = sub_100007764(&qword_100733FD8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v17, v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1005D5E50(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 136) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = type metadata accessor for DIPError.Code();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = *(void *)(v4 - 8);
  *(void *)(v3 + 48) = swift_task_alloc();
  type metadata accessor for DIPSignpost.Config();
  *(void *)(v3 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DIPSignpost();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = *(void *)(v5 - 8);
  *(void *)(v3 + 80) = swift_task_alloc();
  return _swift_task_switch(sub_1005D5F9C, 0, 0);
}

uint64_t sub_1005D5F9C()
{
  int v1 = *(unsigned __int8 *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1005DDE68(*(void *)(v0 + 16));
  uint64_t v3 = 16;
  if (v1) {
    uint64_t v3 = 24;
  }
  uint64_t v4 = *(void **)(v2 + v3);
  *(void *)(v0 + 88) = v4;
  v4;
  static DaemonSignposts.webRequest.getter();
  DIPSignpost.init(_:)();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1005D608C;
  uint64_t v6 = *(void *)(v0 + 16);
  return NSURLSession.data(for:delegate:)(v6, 0);
}

uint64_t sub_1005D608C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[13] = a1;
  v5[14] = a2;
  v5[15] = a3;
  v5[16] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_1005D6484;
  }
  else {
    uint64_t v6 = sub_1005D61A4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005D61A4()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  unint64_t v2 = v0[14];
  uint64_t v3 = (void *)v0[15];
  uint64_t v4 = v0[13];
  if (v1)
  {
    uint64_t v5 = (void *)v1;
    uint64_t v6 = v0[10];
    uint64_t v7 = (void *)v0[11];
    uint64_t v8 = v0[8];
    uint64_t v9 = v0[9];
    id v10 = v3;
    sub_10002CEB0(v4, v2);
    sub_1005DE464(v5, v4, v2);
    sub_10000C5F4(v4, v2);

    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, void *))v0[1];
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[14];
    return v11(v12, v13, v5);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for DIPError.Code.serverResponseInconsistent(_:), v0[4]);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();

    sub_10000C5F4(v4, v2);
    uint64_t v15 = v0[10];
    uint64_t v16 = (void *)v0[11];
    uint64_t v17 = v0[8];
    uint64_t v18 = v0[9];
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_1005D6484()
{
  uint64_t v1 = v0[10];
  unint64_t v2 = (void *)v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_1005D654C()
{
  id result = sub_1005D6570();
  qword_1007608B8 = (uint64_t)result;
  unk_1007608C0 = v1;
  return result;
}

id sub_1005D6570()
{
  uint64_t v0 = type metadata accessor for DeviceInformationProvider();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DeviceInformationProvider.init()();
  uint64_t v4 = DeviceInformationProvider.productType.getter();
  uint64_t v6 = v5;
  uint64_t v7 = DeviceInformationProvider.productName.getter();
  unint64_t v59 = v8;
  uint64_t v60 = v7;
  uint64_t v61 = DeviceInformationProvider.productVersion.getter();
  id v10 = v9;
  uint64_t v62 = DeviceInformationProvider.buildVersion.getter();
  uint64_t v58 = v11;
  sub_100025C28(0, (unint64_t *)&unk_100734010);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v13 = self;
  id result = [v13 bundleForClass:ObjCClassFromMetadata];
  if (!kCFBundleVersionKey)
  {
    __break(1u);
    return result;
  }
  id v63 = result;
  if ([result objectForInfoDictionaryKey:kCFBundleVersionKey])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  int v51 = v10;
  sub_1000BEA14((uint64_t)&v66, (uint64_t)&v68, (uint64_t *)&unk_100727200);
  uint64_t v57 = v0;
  v55._uint64_t countAndFlagsBits = v4;
  if (v70)
  {
    if (swift_dynamicCast())
    {
      uint64_t v15 = v65;
      uint64_t v54 = v64;
      id v16 = v63;
      goto LABEL_10;
    }
  }
  else
  {
    sub_10000C6CC((uint64_t)&v68, (uint64_t *)&unk_100727200);
  }
  id v16 = v63;
  uint64_t v15 = (void *)0xE300000000000000;
  uint64_t v54 = 7104878;
LABEL_10:
  id v17 = [v16 bundleIdentifier];
  v55._object = v6;
  uint64_t v56 = v1;
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v53 = v19;
  }
  else
  {
    unint64_t v53 = 0xE300000000000000;
    uint64_t v52 = 7104878;
  }
  id v20 = [v13 mainBundle];
  if ([v20 objectForInfoDictionaryKey:kCFBundleVersionKey])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v66 = 0u;
    long long v67 = 0u;
  }
  sub_1000BEA14((uint64_t)&v66, (uint64_t)&v68, (uint64_t *)&unk_100727200);
  if (!v70)
  {
    sub_10000C6CC((uint64_t)&v68, (uint64_t *)&unk_100727200);
    goto LABEL_20;
  }
  if (!swift_dynamicCast())
  {
LABEL_20:
    uint64_t v23 = v51;
    uint64_t v21 = (void *)0xE300000000000000;
    uint64_t v22 = 7104878;
    goto LABEL_21;
  }
  uint64_t v22 = v64;
  uint64_t v21 = v65;
  uint64_t v23 = v51;
LABEL_21:
  id v24 = [v20 bundleIdentifier];
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    uint64_t v29 = v58;
  }
  else
  {
    uint64_t v28 = (void *)0xE300000000000000;
    uint64_t v29 = v58;
    uint64_t v26 = 7104878;
  }
  uint64_t v68 = v60;
  unint64_t v69 = v59;
  v30._uint64_t countAndFlagsBits = 59;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  v31._uint64_t countAndFlagsBits = v61;
  v31._object = v23;
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = 59;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  v33._uint64_t countAndFlagsBits = v62;
  v33._object = v29;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = v68;
  uint64_t v35 = (void *)v69;
  uint64_t v68 = v52;
  unint64_t v69 = v53;
  v36._uint64_t countAndFlagsBits = 47;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  v37._uint64_t countAndFlagsBits = v54;
  v37._object = v15;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 10272;
  v38._object = (void *)0xE200000000000000;
  String.append(_:)(v38);
  v39._uint64_t countAndFlagsBits = v26;
  v39._object = v28;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 47;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  v41._uint64_t countAndFlagsBits = v22;
  v41._object = v21;
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 41;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  uint64_t v43 = v68;
  id v44 = (void *)v69;
  uint64_t v68 = 60;
  unint64_t v69 = 0xE100000000000000;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  v45._uint64_t countAndFlagsBits = 3940414;
  v45._object = (void *)0xE300000000000000;
  String.append(_:)(v45);
  v46._uint64_t countAndFlagsBits = v34;
  v46._object = v35;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  v47._uint64_t countAndFlagsBits = 3940414;
  v47._object = (void *)0xE300000000000000;
  String.append(_:)(v47);
  v48._uint64_t countAndFlagsBits = v43;
  v48._object = v44;
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = 62;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);

  uint64_t v50 = v68;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v3, v57);
  return (id)v50;
}

unint64_t sub_1005D6A7C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100007764((uint64_t *)&unk_100734000);
    uint64_t v1 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v1 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v23 = a1 + 64;
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v6 << 6);
      int64_t v12 = v6;
    }
    else
    {
      int64_t v13 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_40;
      }
      if (v13 >= v22)
      {
LABEL_36:
        sub_100130AE4();
        return (unint64_t)v1;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v6 + 1;
      if (!v14)
      {
        int64_t v12 = v6 + 2;
        if (v6 + 2 >= v22) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v6 + 3;
          if (v6 + 3 >= v22) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v6 + 4;
            if (v6 + 4 >= v22) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v6 + 5;
              if (v6 + 5 >= v22) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_41;
                  }
                  if (v12 >= v22) {
                    goto LABEL_36;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_10059256C(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v31);
    sub_10003BC28(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    uint64_t v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_10059256C((uint64_t)v28, (uint64_t)v27);
    if (!swift_dynamicCast())
    {
      sub_10000C6CC((uint64_t)v28, &qword_100733258);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_100130AE4();
      swift_release();
      return 0;
    }
    sub_10003BC28((uint64_t)v29 + 8, (uint64_t)v27);
    sub_10000C6CC((uint64_t)v28, &qword_100733258);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_100590548(v25, v26);
    if (v16)
    {
      uint64_t v7 = 16 * result;
      unint64_t v8 = (uint64_t *)(v1[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unint64_t v8 = v25;
      v8[1] = v26;
      uint64_t v9 = (uint64_t *)(v1[7] + v7);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v9 = v25;
      v9[1] = v26;
      goto LABEL_8;
    }
    if (v1[2] >= v1[3]) {
      break;
    }
    *(void *)((char *)v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v17 = (uint64_t *)(v1[6] + 16 * result);
    *id v17 = v25;
    v17[1] = v26;
    uint64_t v18 = (uint64_t *)(v1[7] + 16 * result);
    *uint64_t v18 = v25;
    v18[1] = v26;
    uint64_t v19 = v1[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_39;
    }
    v1[2] = v21;
LABEL_8:
    int64_t v6 = v12;
    unint64_t v4 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DIPHTTPSessionTaskDelegate()
{
  return self;
}

uint64_t sub_1005D7280()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCFC8coreidvd14DIPHTTPSession14performRequestFzZTV10Foundation10URLRequest21acceptableStatusCodesGSaSi_11ignoreCacheSb11isAnonymousSb17overridingAltDSIDGSqSS__TVS1_4DataCSo13NSURLResponseSb_L_16RequestContainer_request;
  uint64_t v2 = type metadata accessor for URLRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_1005D72FC()
{
  return type metadata accessor for DIPHTTPSession.RequestContainer(0);
}

uint64_t type metadata accessor for DIPHTTPSession.RequestContainer(uint64_t a1)
{
  return sub_100048DF0(a1, qword_100733E48);
}

uint64_t sub_1005D7324()
{
  uint64_t result = type metadata accessor for URLRequest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1005D73C0(_OWORD *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    uint64_t v7 = a3[6];
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for DIPBackoffStrategy();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    int64_t v13 = (void *)((char *)v4 + v12);
    unint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *int64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005D74D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for DIPBackoffStrategy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

_OWORD *sub_1005D7558(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DIPBackoffStrategy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  int64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1005D7618(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DIPBackoffStrategy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1005D76FC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DIPBackoffStrategy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  return a1;
}

void *sub_1005D77B0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DIPBackoffStrategy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v12 = (void *)((char *)a1 + v11);
  int64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005D787C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D7890);
}

uint64_t sub_1005D7890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DIPBackoffStrategy();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_1005D7964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D7978);
}

uint64_t sub_1005D7978(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for DIPBackoffStrategy();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  }
  return result;
}

uint64_t sub_1005D7A3C()
{
  uint64_t result = type metadata accessor for DIPBackoffStrategy();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005D7AF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DIPHTTPSession.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned __int8 *sub_1005D7B4C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005D7C4C(a1, a2, a3);
}

unsigned __int8 *sub_1005D7B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1005D7EC8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_1005D7C4C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1005D7C4C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1005D7EC8()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1005D7F48(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1005D7F48(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1005D80A0(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_1001111F8(v9, 0),
          unint64_t v12 = sub_1005D81A0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1005D80A0(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100111260(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100111260(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1005D81A0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_100111260(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_100111260(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1005D83B4(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1005DA6CC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1005D8564(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100025C28(0, (unint64_t *)&qword_100725DC8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1005D9274(v7, result + 1);
    uint64_t v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1005D9D58(v27, &qword_100734038);
      unsigned __int8 v24 = v30;
    }
    else
    {
      unsigned __int8 v24 = (void *)v22;
      id v25 = v8;
    }
    sub_1005DA648((uint64_t)v8, v24);
    *unint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100025C28(0, (unint64_t *)&qword_100725DC8);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1005DA868((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1005D880C(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MobileDocumentElement();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005DD2D8((unint64_t *)&unk_100734050, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1005DD2D8(&qword_100729DA0, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::Int v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned __int8 v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005DAA10((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1005D8B30(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for StoredMobileDocumentReaderSigningKey();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1005D9480(v7, result + 1);
    uint64_t v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1005D9D58(v27, &qword_1007300D8);
      unsigned __int8 v24 = v30;
    }
    else
    {
      unsigned __int8 v24 = (void *)v22;
      id v25 = v8;
    }
    sub_1005DA648((uint64_t)v8, v24);
    *unint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      type metadata accessor for StoredMobileDocumentReaderSigningKey();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1005DACB0((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1005D8DB8(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_10029BEF0();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_1005DAE48(a2, v7, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_37;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE300000000000000;
    unint64_t v10 = 6645601;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 7890291;
        break;
      case 2:
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x6574617473;
        break;
      case 3:
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1701011826;
        break;
      case 4:
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x656E6F546E696B73;
        break;
      case 5:
        unint64_t v9 = 0x8000000100629FC0;
        unint64_t v10 = 0xD000000000000010;
        break;
      case 6:
        unint64_t v10 = 0xD000000000000012;
        unint64_t v9 = 0x8000000100629FE0;
        break;
      case 7:
        unint64_t v10 = 0x6E69747465537861;
        unint64_t v9 = 0xEA00000000007367;
        break;
      case 8:
        unint64_t v9 = 0xE400000000000000;
        unint64_t v10 = 1701736302;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE300000000000000;
    uint64_t v12 = 6645601;
    switch((char)a2)
    {
      case 1:
        if (v10 == 7890291) {
          goto LABEL_27;
        }
        goto LABEL_28;
      case 2:
        unint64_t v11 = 0xE500000000000000;
        if (v10 != 0x6574617473) {
          goto LABEL_28;
        }
        goto LABEL_27;
      case 3:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1701011826) {
          goto LABEL_28;
        }
        goto LABEL_27;
      case 4:
        unint64_t v11 = 0xE800000000000000;
        if (v10 != 0x656E6F546E696B73) {
          goto LABEL_28;
        }
        goto LABEL_27;
      case 5:
        unint64_t v11 = 0x8000000100629FC0;
        if (v10 != 0xD000000000000010) {
          goto LABEL_28;
        }
        goto LABEL_27;
      case 6:
        unint64_t v11 = 0x8000000100629FE0;
        if (v10 != 0xD000000000000012) {
          goto LABEL_28;
        }
        goto LABEL_27;
      case 7:
        uint64_t v12 = 0x6E69747465537861;
        unint64_t v11 = 0xEA00000000007367;
        goto LABEL_26;
      case 8:
        unint64_t v11 = 0xE400000000000000;
        if (v10 != 1701736302) {
          goto LABEL_28;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (v10 != v12) {
          goto LABEL_28;
        }
LABEL_27:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_36;
        }
LABEL_28:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_33;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_36:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_37:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1005D9178(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005DB210(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_1005D9274(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100007764(&qword_100734038);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100025C28(0, (unint64_t *)&qword_100725DC8);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005D9D58(v9 + 1, &qword_100734038);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1005D9480(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100007764(&qword_1007300D8);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for StoredMobileDocumentReaderSigningKey();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005D9D58(v9 + 1, &qword_1007300D8);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1005D967C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764(&qword_100734040);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_1005D995C()
{
  unint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for MobileDocumentElement();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  Swift::String v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100007764((uint64_t *)&unk_100734060);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::String v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *Swift::String v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1005DD2D8((unint64_t *)&unk_100734050, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

uint64_t sub_1005D9D58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007764(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    char v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1005D9FF4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764(&qword_100734048);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1005DA3A0);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  unint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_1005DA3C4()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764((uint64_t *)&unk_100733FF0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                unint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

unint64_t sub_1005DA648(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

Swift::Int sub_1005DA6CC(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1005D967C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_1005DB334();
      goto LABEL_22;
    }
    sub_1005DBC5C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  unint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    int64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1005DA868(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1005D9D58(v8, &qword_100734038);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005DB78C(&qword_100734038);
      goto LABEL_14;
    }
    sub_1005DC2BC(v8, &qword_100734038);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100025C28(0, (unint64_t *)&qword_100725DC8);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1005DAA10(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for MobileDocumentElement();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005D995C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1005DB4E8();
      goto LABEL_12;
    }
    sub_1005DBF0C();
  }
  uint64_t v12 = *v3;
  sub_1005DD2D8((unint64_t *)&unk_100734050, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    BOOL v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1005DD2D8(&qword_100729DA0, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005DACB0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1005D9D58(v8, &qword_1007300D8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005DB78C(&qword_1007300D8);
      goto LABEL_14;
    }
    sub_1005DC2BC(v8, &qword_1007300D8);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for StoredMobileDocumentReaderSigningKey();
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

Swift::Int sub_1005DAE48(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v20 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005D9FF4();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1005DB930();
        goto LABEL_40;
      }
      sub_1005DC534();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_10029BEF0();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE300000000000000;
        unint64_t v12 = 6645601;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 7890291;
            break;
          case 2:
            unint64_t v11 = 0xE500000000000000;
            unint64_t v12 = 0x6574617473;
            break;
          case 3:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1701011826;
            break;
          case 4:
            unint64_t v11 = 0xE800000000000000;
            unint64_t v12 = 0x656E6F546E696B73;
            break;
          case 5:
            unint64_t v11 = 0x8000000100629FC0;
            unint64_t v12 = 0xD000000000000010;
            break;
          case 6:
            unint64_t v12 = 0xD000000000000012;
            unint64_t v11 = 0x8000000100629FE0;
            break;
          case 7:
            unint64_t v12 = 0x6E69747465537861;
            unint64_t v11 = 0xEA00000000007367;
            break;
          case 8:
            unint64_t v11 = 0xE400000000000000;
            unint64_t v12 = 1701736302;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        unint64_t v14 = 6645601;
        switch(v5)
        {
          case 1:
            if (v12 != 7890291) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 2:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x6574617473) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 3:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1701011826) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 4:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x656E6F546E696B73) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 5:
            unint64_t v13 = 0x8000000100629FC0;
            if (v12 != 0xD000000000000010) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 6:
            unint64_t v14 = 0xD000000000000012;
            unint64_t v13 = 0x8000000100629FE0;
            goto LABEL_33;
          case 7:
            unint64_t v13 = 0xEA00000000007367;
            if (v12 != 0x6E69747465537861) {
              goto LABEL_35;
            }
            goto LABEL_34;
          case 8:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1701736302) {
              goto LABEL_35;
            }
            goto LABEL_34;
          default:
LABEL_33:
            if (v12 != v14) {
              goto LABEL_35;
            }
LABEL_34:
            if (v11 == v13) {
              goto LABEL_43;
            }
LABEL_35:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_44;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_40:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v20;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_43:
    swift_bridgeObjectRelease_n();
LABEL_44:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x1005DB1C8);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_1005DB210(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005DA3C4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005DBAC4();
      goto LABEL_14;
    }
    sub_1005DC8D0();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1005DB334()
{
  unint64_t v1 = v0;
  sub_100007764(&qword_100734040);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005DB4E8()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MobileDocumentElement();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007764((uint64_t *)&unk_100734060);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *unint64_t v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1005DB78C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100007764(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005DB930()
{
  unint64_t v1 = v0;
  sub_100007764(&qword_100734048);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005DBAC4()
{
  unint64_t v1 = v0;
  sub_100007764((uint64_t *)&unk_100733FF0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1005DBC5C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764(&qword_100734040);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005DBF0C()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MobileDocumentElement();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100007764((uint64_t *)&unk_100734060);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005DD2D8((unint64_t *)&unk_100734050, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005DC2BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100007764(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  unint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005DC534()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764(&qword_100734048);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1005DC8ACLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  unint64_t v1 = v0;
LABEL_36:
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_1005DC8D0()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007764((uint64_t *)&unk_100733FF0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  char v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005DCB34(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = v4;
  *(unsigned char *)(v5 + 42) = a4;
  *(unsigned char *)(v5 + 41) = a3;
  *(void *)(v5 + 48) = a1;
  uint64_t v6 = type metadata accessor for URLRequest();
  *(void *)(v5 + 72) = v6;
  *(void *)(v5 + 80) = *(void *)(v6 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  *(void *)(v5 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_1005DCC10, 0, 0);
}

uint64_t sub_1005DCC10()
{
  uint64_t v1 = *(void *)(v0 + 96);
  char v2 = *(unsigned char *)(v0 + 41);
  uint64_t v3 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 80) + 16);
  v3(v1, *(void *)(v0 + 48), *(void *)(v0 + 72));
  id v4 = sub_1005D2B64(v1);
  uint64_t v6 = v4;
  *(void *)(v0 + 104) = v4;
  if ((v2 & 1) == 0 && (v5 & 1) != 0 && v4)
  {
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 80);
    id v10 = v4;
    id v11 = [v10 data];
    uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    id v15 = [v10 response];
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, id, uint64_t))(v0 + 8);
    return v16(v12, v14, v15, 1);
  }
  else
  {
    id v18 = [self standardUserDefaults];
    v19._uint64_t countAndFlagsBits = 0xD000000000000026;
    v19._object = (void *)0x8000000100659F50;
    Swift::Bool v20 = NSUserDefaults.internalBool(forKey:)(v19);

    if (!v20 && v6)
    {
      uint64_t v21 = qword_10071F5A0;
      id v22 = v6;
      if (v21 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_10051F104(v22);
      if (v24)
      {
        v25._object = (void *)0x8000000100659F80;
        v25._uint64_t countAndFlagsBits = 0xD000000000000011;
        URLRequest.addValue(_:forHTTPHeaderField:)(*(Swift::String *)&v23, v25);
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v26 = *(void *)(v0 + 88);
    uint64_t v28 = *(void *)(v0 + 72);
    uint64_t v27 = *(void *)(v0 + 80);
    char v29 = *(unsigned char *)(v0 + 42);
    uint64_t v30 = *(void *)(v0 + 56);
    uint64_t v31 = *(void *)(v0 + 64);
    v3(v26, *(void *)(v0 + 96), v28);
    type metadata accessor for DIPHTTPSession.RequestContainer(0);
    uint64_t v32 = swift_allocObject();
    *(void *)(v0 + 112) = v32;
    swift_defaultActor_initialize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v32+ OBJC_IVAR____TtCFC8coreidvd14DIPHTTPSession14performRequestFzZTV10Foundation10URLRequest21acceptableStatusCodesGSaSi_11ignoreCacheSb11isAnonymousSb17overridingAltDSIDGSqSS__TVS1_4DataCSo13NSURLResponseSb_L_16RequestContainer_request, v26, v28);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 120) = v33;
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    *(unsigned char *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v30;
    *(void *)(v33 + 48) = v6;
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v34;
    uint64_t v35 = sub_100007764(&qword_100733FB8);
    *uint64_t v34 = v0;
    v34[1] = sub_1005DCF6C;
    return DIPRetrier.retry<A>(operation:)(v0 + 16, &unk_100733FB0, v33, v35);
  }
}

uint64_t sub_1005DCF6C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1005DD164;
  }
  else {
    char v2 = sub_1005DD0A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005DD0A0()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(unsigned __int8 *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8);
  return v9(v6, v5, v7, v8);
}

uint64_t sub_1005DD164()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1005DD210(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000C494;
  return sub_1005D3E44(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1005DD2D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005DD320(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v7) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v20 = *(void *)(v22 + 8 * v9);
      if (!v20)
      {
        int64_t v9 = v19 + 2;
        if (v19 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v20 = *(void *)(v22 + 8 * v9);
        if (!v20)
        {
          int64_t v9 = v19 + 3;
          if (v19 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v20 = *(void *)(v22 + 8 * v9);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v20 - 1) & v20;
    unint64_t v11 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = 16 * v11;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 56) + v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v17, v18);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v7) {
    return swift_release();
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v20 = *(void *)(v22 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1005DD4E8(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for DeviceInformationProvider();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    uint64_t v9 = v2 + OBJC_IVAR____TtC8coreidvd14DIPHTTPSession_configuration;
    if (*(unsigned char *)(v9 + *(int *)(type metadata accessor for DIPHTTPSession.Configuration(0) + 28)) == 1)
    {
      type metadata accessor for DIPAccountManager();
      static DIPAccountManager.sharedInstance.getter();
      sub_10000C728(&v52, v53);
      v10.value._uint64_t countAndFlagsBits = dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)();
      v11._uint64_t countAndFlagsBits = 0x7A69726F68747541;
      v11._object = (void *)0xED00006E6F697461;
      URLRequest.setValue(_:forHTTPHeaderField:)(v10, v11);
      swift_bridgeObjectRelease();
      _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)&v52);
    }
  }
  id v12 = [self _deviceLanguage];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0;
  }
  v17.value._uint64_t countAndFlagsBits = v14;
  v17.value._object = v16;
  v18._uint64_t countAndFlagsBits = 0x4C2D747065636341;
  v18._object = (void *)0xEF65676175676E61;
  URLRequest.setValue(_:forHTTPHeaderField:)(v17, v18);
  swift_bridgeObjectRelease();
  v52.value._uint64_t countAndFlagsBits = 0;
  v52.value._object = (void *)0xE000000000000000;
  unint64_t v19 = URLRequest.httpBody.getter();
  uint64_t v21 = 0;
  if (v20 >> 60 != 15)
  {
    unint64_t v22 = v20;
    uint64_t v23 = v19;
    switch(v20 >> 62)
    {
      case 1uLL:
        unint64_t v24 = HIDWORD(v19);
        sub_10000C5E0(v19, v20);
        LODWORD(v21) = v24 - v23;
        if (__OFSUB__(v24, v23))
        {
          __break(1u);
          JUMPOUT(0x1005DDA5CLL);
        }
        uint64_t v21 = (int)v21;
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(v19 + 16);
        uint64_t v25 = *(void *)(v19 + 24);
        sub_10000C5E0(v19, v20);
        uint64_t v21 = v25 - v26;
        if (__OFSUB__(v25, v26))
        {
          __break(1u);
          goto LABEL_15;
        }
        break;
      case 3uLL:
LABEL_15:
        sub_10000C5E0(v23, v22);
        uint64_t v21 = 0;
        break;
      default:
        sub_10000C5E0(v19, v20);
        uint64_t v21 = BYTE6(v22);
        break;
    }
  }
  uint64_t v54 = v21;
  v27._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x2D746E65746E6F43;
  v28._object = (void *)0xEE006874676E654CLL;
  URLRequest.setValue(_:forHTTPHeaderField:)(v52, v28);
  swift_bridgeObjectRelease();
  if (qword_10071F5F8 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_1007608B8;
  uint64_t v30 = (void *)unk_1007608C0;
  swift_bridgeObjectRetain();
  v31._uint64_t countAndFlagsBits = 0xD000000000000013;
  v31._object = (void *)0x800000010065A230;
  v32.value._uint64_t countAndFlagsBits = v29;
  v32.value._object = v30;
  URLRequest.setValue(_:forHTTPHeaderField:)(v32, v31);
  swift_bridgeObjectRelease();
  DeviceInformationProvider.init()();
  uint64_t v33 = DeviceInformationProvider.hardwarePlatform.getter();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v36._object = (void *)0x800000010065A250;
  v37.value._uint64_t countAndFlagsBits = v33;
  v37.value._object = v35;
  v36._uint64_t countAndFlagsBits = 0xD000000000000010;
  URLRequest.setValue(_:forHTTPHeaderField:)(v37, v36);
  swift_bridgeObjectRelease();
  id v38 = [self ak_clientInfoHeader];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v41 = sub_1005D6A7C(v40);
    uint64_t v42 = swift_bridgeObjectRelease();
    if (v41)
    {
      __chkstk_darwin(v42);
      *((void *)&v52 - 2) = a1;
      sub_1005DD320(v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1005DF4FC);
      swift_bridgeObjectRelease();
    }
  }
  id v43 = [self standardUserDefaults];
  NSString v44 = String._bridgeToObjectiveC()();
  id v45 = [v43 stringForKey:v44];

  if (!v45) {
    goto LABEL_23;
  }
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v48 = v47;

  v52.value._uint64_t countAndFlagsBits = v46;
  v52.value._object = v48;
  uint64_t v54 = 1685025392;
  unint64_t v55 = 0xE400000000000000;
  sub_1000B5358();
  uint64_t v49 = StringProtocol.caseInsensitiveCompare<A>(_:)();
  swift_bridgeObjectRelease();
  if (v49)
  {
LABEL_23:
    v50._uint64_t countAndFlagsBits = 0xD000000000000013;
    v50._object = (void *)0x800000010065A270;
    v51.value._uint64_t countAndFlagsBits = 1702195828;
    v51.value._object = (void *)0xE400000000000000;
    URLRequest.setValue(_:forHTTPHeaderField:)(v51, v50);
  }
}

uint64_t sub_1005DDA6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1005D83B4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1005DDB04(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100025C28(0, (unint64_t *)&qword_100725DC8);
  sub_100176F7C();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        Swift::Int v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1005D8564(&v9, v6);
      }
    }
    else
    {
      Swift::Int v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1005D8564(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005DDC58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MobileDocumentElement();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::Int v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1005DD2D8((unint64_t *)&unk_100734050, (void (*)(uint64_t))&type metadata accessor for MobileDocumentElement);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    id v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1005D880C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1005DDDF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1005D9178(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_1005DDE68(uint64_t a1)
{
  uint64_t v2 = sub_100007764(&qword_100720A68);
  __chkstk_darwin(v2 - 8);
  uint64_t v46 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLRequest();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = URLRequest.httpBody.getter();
  if (v13 >> 60 == 15)
  {
LABEL_6:
    uint64_t v45 = 0;
    unint64_t v18 = 0xE000000000000000;
    if (URLRequest.allHTTPHeaderFields.getter()) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v14 = v12;
  unint64_t v15 = v13;
  static String.Encoding.utf8.getter();
  uint64_t v16 = String.init(data:encoding:)();
  if (!v17)
  {
    sub_10000C5E0(v14, v15);
    goto LABEL_6;
  }
  unint64_t v18 = v17;
  uint64_t v45 = v16;
  sub_10000C5E0(v14, v15);
  if (URLRequest.allHTTPHeaderFields.getter()) {
    goto LABEL_8;
  }
LABEL_7:
  sub_10015CF20((uint64_t)_swiftEmptyArrayStorage);
LABEL_8:
  v19.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  if (qword_10071F5E0 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_1000443D4(v20, (uint64_t)qword_100733CA0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v21(v10, a1, v4);
  v21(v8, a1, v4);
  unint64_t v22 = v19.super.isa;
  swift_bridgeObjectRetain();
  uint64_t v23 = Logger.logObject.getter();
  int v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, (os_log_type_t)v24))
  {
    int v42 = v24;
    os_log_t v43 = v23;
    uint64_t v25 = v8;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v50 = v41;
    *(_DWORD *)uint64_t v26 = 136315906;
    uint64_t v27 = URLRequest.httpMethod.getter();
    if (v28)
    {
      unint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      unint64_t v29 = 0xE000000000000000;
    }
    uint64_t v48 = sub_100110D58(v27, v29, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v10, v4);
    *(_WORD *)(v26 + 12) = 2080;
    uint64_t v31 = (uint64_t)v46;
    NSString v44 = v25;
    URLRequest.url.getter();
    uint64_t v32 = type metadata accessor for URL();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
    {
      sub_10000C6CC(v31, &qword_100720A68);
      uint64_t v34 = 0;
      unint64_t v35 = 0xE000000000000000;
    }
    else
    {
      uint64_t v37 = URL.absoluteString.getter();
      uint64_t v38 = v31;
      uint64_t v34 = v37;
      unint64_t v35 = v39;
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v38, v32);
    }
    uint64_t v48 = sub_100110D58(v34, v35, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v30(v44, v4);
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    Swift::String v47 = v22;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v48 = sub_100110D58(v48, v49, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_100110D58(v45, v18, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_t v40 = v43;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v42, "Performing request:\n%s %s\n%s\n%s\n", (uint8_t *)v26, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    Swift::String v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v10, v4);
    v36(v8, v4);

    swift_bridgeObjectRelease_n();
  }
}

void sub_1005DE464(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_100007764(&qword_100720A68);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v12 - 8);
  if (a3 >> 60 != 15)
  {
    sub_10002CEB0(a2, a3);
    static String.Encoding.utf8.getter();
    uint64_t v13 = String.init(data:encoding:)();
    if (v14)
    {
      uint64_t v15 = v13;
      unint64_t v16 = v14;
      sub_10000C5E0(a2, a3);
      goto LABEL_6;
    }
    sub_10000C5E0(a2, a3);
  }
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
LABEL_6:
  id v17 = [a1 allHeaderFields];
  if (v17)
  {
    unint64_t v18 = v17;
    if (qword_10071F5E0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1000443D4(v19, (uint64_t)qword_100733CA0);
    id v20 = a1;
    id v21 = v18;
    id v22 = v20;
    id v23 = v21;
    swift_bridgeObjectRetain();
    int v24 = Logger.logObject.getter();
    int v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      int v37 = v25;
      uint64_t v38 = v15;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v42 = v36;
      *(_DWORD *)uint64_t v26 = 136315906;
      id v27 = [v22 URL];
      if (v27)
      {
        unint64_t v28 = v27;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v29 = type metadata accessor for URL();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
      }
      else
      {
        uint64_t v29 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
      }
      sub_1000BEA14((uint64_t)v9, (uint64_t)v11, &qword_100720A68);
      type metadata accessor for URL();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v11, 1, v29) == 1)
      {
        sub_10000C6CC((uint64_t)v11, &qword_100720A68);
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
      else
      {
        uint64_t v31 = URL.absoluteString.getter();
        unint64_t v32 = v33;
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v29);
      }
      uint64_t v40 = sub_100110D58(v31, v32, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      id v34 = [v22 statusCode];

      uint64_t v40 = (uint64_t)v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v26 + 22) = 2080;
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      id v39 = v23;
      _print_unlocked<A, B>(_:_:)();
      uint64_t v40 = sub_100110D58(v40, v41, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 32) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_100110D58(v38, v16, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v37, "Response:\n%s %ld\n%s\n%s\n", (uint8_t *)v26, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005DE9EC(void *a1, char *a2)
{
  id v62 = a1;
  uint64_t v59 = type metadata accessor for DIPError.Code();
  uint64_t v61 = *(void *)(v59 - 8);
  uint64_t v3 = __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v57 - v5;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self standardUserDefaults];
  v12._object = (void *)0x800000010065A150;
  v12._uint64_t countAndFlagsBits = 0xD000000000000017;
  Swift::String_optional v13 = NSUserDefaults.internalString(forKey:)(v12);

  if (!v13.value._object) {
    goto LABEL_57;
  }
  unint64_t v14 = ((unint64_t)v13.value._object >> 56) & 0xF;
  uint64_t v15 = v13.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (((uint64_t)v13.value._object & 0x2000000000000000) != 0) {
    unint64_t v16 = ((unint64_t)v13.value._object >> 56) & 0xF;
  }
  else {
    unint64_t v16 = v13.value._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_57;
  }
  uint64_t v58 = v8;
  if (((uint64_t)v13.value._object & 0x1000000000000000) != 0)
  {
    uint64_t v18 = (uint64_t)sub_1005D7B64(v13.value._countAndFlagsBits, (uint64_t)v13.value._object, 10);
    char v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0) {
      goto LABEL_47;
    }
LABEL_57:
    uint64_t v18 = (uint64_t)[v62 statusCode];
    goto LABEL_58;
  }
  if (((uint64_t)v13.value._object & 0x2000000000000000) != 0)
  {
    v63[0] = v13.value._countAndFlagsBits;
    v63[1] = (uint64_t)v13.value._object & 0xFFFFFFFFFFFFFFLL;
    if (LOBYTE(v13.value._countAndFlagsBits) == 43)
    {
      if (!v14) {
        goto LABEL_94;
      }
      if (v14 == 1 || (BYTE1(v13.value._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v18 = (BYTE1(v13.value._countAndFlagsBits) - 48);
      if (v14 != 2)
      {
        if ((BYTE2(v13.value._countAndFlagsBits) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v18 = 10 * (BYTE1(v13.value._countAndFlagsBits) - 48)
            + (BYTE2(v13.value._countAndFlagsBits) - 48);
        unint64_t v21 = v14 - 3;
        if (v21)
        {
          id v22 = (unsigned __int8 *)v63 + 3;
          while (1)
          {
            unsigned int v23 = *v22 - 48;
            if (v23 > 9) {
              goto LABEL_33;
            }
            uint64_t v24 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              goto LABEL_33;
            }
            uint64_t v18 = v24 + v23;
            if (__OFADD__(v24, v23)) {
              goto LABEL_33;
            }
            char v20 = 0;
            ++v22;
            if (!--v21) {
              goto LABEL_46;
            }
          }
        }
      }
    }
    else
    {
      if (LOBYTE(v13.value._countAndFlagsBits) == 45)
      {
        if (v14)
        {
          if (v14 != 1 && (BYTE1(v13.value._countAndFlagsBits) - 48) <= 9u)
          {
            if (v14 == 2)
            {
              char v20 = 0;
              uint64_t v18 = -(uint64_t)(BYTE1(v13.value._countAndFlagsBits) - 48);
              goto LABEL_46;
            }
            if ((BYTE2(v13.value._countAndFlagsBits) - 48) <= 9u)
            {
              uint64_t v18 = -10 * (BYTE1(v13.value._countAndFlagsBits) - 48)
                  - (BYTE2(v13.value._countAndFlagsBits) - 48);
              unint64_t v29 = v14 - 3;
              if (!v29) {
                goto LABEL_45;
              }
              id v34 = (unsigned __int8 *)v63 + 3;
              while (1)
              {
                unsigned int v35 = *v34 - 48;
                if (v35 > 9) {
                  break;
                }
                uint64_t v36 = 10 * v18;
                if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
                  break;
                }
                uint64_t v18 = v36 - v35;
                if (__OFSUB__(v36, v35)) {
                  break;
                }
                char v20 = 0;
                ++v34;
                if (!--v29) {
                  goto LABEL_46;
                }
              }
            }
          }
LABEL_33:
          uint64_t v18 = 0;
          char v20 = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_94:
        __break(1u);
        JUMPOUT(0x1005DF358);
      }
      if (!v14 || (LOBYTE(v13.value._countAndFlagsBits) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v18 = (LOBYTE(v13.value._countAndFlagsBits) - 48);
      if (v14 != 1)
      {
        if ((BYTE1(v13.value._countAndFlagsBits) - 48) > 9u) {
          goto LABEL_33;
        }
        uint64_t v18 = 10 * (LOBYTE(v13.value._countAndFlagsBits) - 48)
            + (BYTE1(v13.value._countAndFlagsBits) - 48);
        unint64_t v25 = v14 - 2;
        if (v25)
        {
          uint64_t v26 = (unsigned __int8 *)v63 + 2;
          while (1)
          {
            unsigned int v27 = *v26 - 48;
            if (v27 > 9) {
              goto LABEL_33;
            }
            uint64_t v28 = 10 * v18;
            if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63) {
              goto LABEL_33;
            }
            uint64_t v18 = v28 + v27;
            if (__OFADD__(v28, v27)) {
              goto LABEL_33;
            }
            char v20 = 0;
            ++v26;
            if (!--v25) {
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_45:
    char v20 = 0;
    goto LABEL_46;
  }
  if ((v13.value._countAndFlagsBits & 0x1000000000000000) != 0) {
    id v17 = (unsigned __int8 *)(((uint64_t)v13.value._object & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else {
    id v17 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
  uint64_t v18 = (uint64_t)sub_1005D7C4C(v17, v15, 10);
  char v20 = v19 & 1;
LABEL_46:
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_57;
  }
LABEL_47:
  defaultLogger()();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v32 = 134349056;
    v63[0] = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Forcing HTTP status code to %{public}ld due to user setting", v32, 0xCu);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v7);
LABEL_58:
  int64_t v39 = *((void *)a2 + 2);
  int64_t v40 = v39 + 2;
  if (__OFADD__(v39, 2))
  {
    __break(1u);
LABEL_91:
    a2 = sub_10010F8B4((char *)(v33 > 1), v40, 1, a2);
    unint64_t v33 = *((void *)a2 + 3);
    unint64_t v42 = v33 >> 1;
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native
    || (unint64_t v33 = *((void *)a2 + 3), v42 = v33 >> 1, (uint64_t)(v33 >> 1) < v40))
  {
    if (v39 <= v40) {
      int64_t v43 = v39 + 2;
    }
    else {
      int64_t v43 = v39;
    }
    a2 = sub_10010F8B4(isUniquelyReferenced_nonNull_native, v43, 1, a2);
    unint64_t v33 = *((void *)a2 + 3);
    unint64_t v42 = v33 >> 1;
  }
  int64_t v39 = *((void *)a2 + 2);
  int64_t v40 = v39 + 1;
  if (v42 <= v39) {
    goto LABEL_91;
  }
LABEL_66:
  *((void *)a2 + 2) = v40;
  *(void *)&a2[8 * v39 + 32] = 200;
  if ((uint64_t)v42 < v39 + 2) {
    a2 = sub_10010F8B4((char *)(v33 > 1), v39 + 2, 1, a2);
  }
  *((void *)a2 + 2) = v39 + 2;
  *(void *)&a2[8 * v40 + 32] = 204;
  uint64_t v44 = sub_1005DDDF4((uint64_t)a2);
  swift_bridgeObjectRelease();
  BOOL v45 = sub_1005D1EAC(v18, v44);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v45)
  {
    uint64_t v47 = v59;
    switch(v18)
    {
      case 400:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpBadRequest(_:);
        break;
      case 401:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpUnauthorized(_:);
        break;
      case 402:
      case 405:
      case 406:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 416:
      case 417:
      case 418:
      case 419:
      case 420:
      case 421:
      case 422:
      case 423:
      case 424:
      case 425:
      case 426:
      case 427:
      case 430:
      case 431:
      case 432:
      case 435:
      case 436:
      case 437:
      case 438:
      case 439:
      case 440:
      case 441:
      case 442:
      case 443:
      case 444:
      case 445:
      case 446:
      case 447:
      case 448:
      case 449:
      case 450:
      case 451:
      case 452:
      case 453:
      case 454:
      case 455:
      case 456:
      case 457:
      case 458:
      case 459:
      case 460:
      case 461:
      case 462:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 469:
      case 470:
      case 471:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 478:
      case 479:
      case 480:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 487:
      case 488:
      case 489:
      case 490:
      case 491:
      case 492:
      case 493:
      case 494:
      case 495:
      case 496:
      case 497:
      case 498:
      case 499:
        goto LABEL_74;
      case 403:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpForbidden(_:);
        break;
      case 404:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpNotFound(_:);
        break;
      case 428:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpPreconditionRequired(_:);
        break;
      case 429:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpTooManyRequests(_:);
        break;
      case 433:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpAuthKitReprovision(_:);
        break;
      case 434:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpAuthKitResync(_:);
        break;
      case 500:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpInternalServerError(_:);
        break;
      case 501:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpNotImplemented(_:);
        break;
      case 502:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpBadGateway(_:);
        break;
      case 503:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpServiceUnavailable(_:);
        break;
      case 504:
        uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpGatewayTimeout(_:);
        break;
      default:
        uint64_t v47 = v59;
        if (v18 == 301)
        {
          uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpMovedPermanently(_:);
        }
        else if (v18 == 304)
        {
          uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpNotModified(_:);
        }
        else
        {
LABEL_74:
          uint64_t v48 = (unsigned int *)&enum case for DIPError.Code.httpUnknownStatus(_:);
        }
        break;
    }
    uint64_t v49 = v61;
    (*(void (**)(char *, void, uint64_t))(v61 + 104))(v6, *v48, v47);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v60, v6, v47);
    sub_100007764((uint64_t *)&unk_1007225C0);
    uint64_t v50 = (int *)(sub_100007764((uint64_t *)&unk_100723460) - 8);
    unint64_t v51 = (*(unsigned __int8 *)(*(void *)v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v50 + 80);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100610730;
    unint64_t v53 = v52 + v51;
    uint64_t v54 = (uint64_t *)(v53 + v50[14]);
    uint64_t v55 = enum case for DIPError.PropertyKey.serverStatusCode(_:);
    uint64_t v56 = type metadata accessor for DIPError.PropertyKey();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v53, v55, v56);
    v54[3] = (uint64_t)&type metadata for Int;
    *uint64_t v54 = v18;
    sub_10015C504(v52);
    type metadata accessor for DIPError();
    sub_1005DD2D8((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v6, v47);
  }
  return result;
}

void sub_1005DF4FC(Swift::String forHTTPHeaderField, Swift::String_optional _)
{
  object = forHTTPHeaderField._object;
  uint64_t countAndFlagsBits = forHTTPHeaderField._countAndFlagsBits;
  v5._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5._object = object;
  URLRequest.setValue(_:forHTTPHeaderField:)(_, v5);
}

uint64_t sub_1005DF538(__SecTrust *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self standardUserDefaults];
  v7._object = (void *)0x800000010065A290;
  v7._uint64_t countAndFlagsBits = 0xD000000000000019;
  Swift::Bool v8 = NSUserDefaults.internalBool(forKey:)(v7);

  if (v8)
  {
    defaultLogger()();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Skipping SSL/TLS verification due to user defaults setting", v11, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1;
  }
  else
  {
    CFErrorRef error = 0;
    BOOL v12 = SecTrustEvaluateWithError(a1, &error);
    if (error)
    {
      Swift::String_optional v13 = error;
      CFStringRef v14 = CFErrorCopyDescription(v13);
      if (v14)
      {
        uint64_t v15 = (__CFString *)v14;
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v18 = 0;
      }
      if (qword_10071F5E0 != -1) {
        swift_once();
      }
      sub_1000443D4(v2, (uint64_t)qword_100733CA0);
      swift_bridgeObjectRetain();
      char v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v25 = v13;
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v27 = swift_slowAlloc();
        *(_DWORD *)unint64_t v21 = 136315138;
        if (v18)
        {
          unint64_t v22 = v18;
        }
        else
        {
          uint64_t v16 = 7104878;
          unint64_t v22 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_100110D58(v16, v22, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Invalid server certificate, error: %s", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  return v12;
}

void sub_1005DF8EC(void *a1)
{
  uint64_t v2 = sub_100007764((uint64_t *)&unk_100734020);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  Swift::String v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_100007764(&qword_100720A68);
  __chkstk_darwin(v8 - 8);
  os_log_type_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10071F5E0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1000443D4(v11, (uint64_t)qword_100733CA0);
  id v28 = a1;
  BOOL v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    CFStringRef v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)CFStringRef v14 = 136315138;
    id v15 = [v28 currentRequest];
    if (v15)
    {
      uint64_t v16 = v15;
      static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v17 = type metadata accessor for URLRequest();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
    }
    else
    {
      uint64_t v17 = type metadata accessor for URLRequest();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
    }
    sub_1000BEA14((uint64_t)v5, (uint64_t)v7, (uint64_t *)&unk_100734020);
    type metadata accessor for URLRequest();
    uint64_t v19 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v17) == 1)
    {
      os_log_type_t v20 = (uint64_t *)&unk_100734020;
      uint64_t v21 = (uint64_t)v7;
    }
    else
    {
      URLRequest.url.getter();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v17);
      uint64_t v22 = type metadata accessor for URL();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v22) != 1)
      {
        uint64_t v24 = URL.absoluteString.getter();
        unint64_t v25 = v26;
        (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
        goto LABEL_16;
      }
      os_log_type_t v20 = &qword_100720A68;
      uint64_t v21 = (uint64_t)v10;
    }
    sub_10000C6CC(v21, v20);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
LABEL_16:
    uint64_t v29 = sub_100110D58(v24, v25, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Task for URL %s is waiting for connectivity", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return;
  }

  id v18 = v28;
}

void sub_1005DFD54(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_10071F5E0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_1000443D4(v1, (uint64_t)qword_100733CA0);
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      uint64_t v9 = _convertErrorToNSError(_:)();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v9;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "URL session became invalid with error %@", v3, 0xCu);
      sub_100007764(&qword_1007208D0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_10071F5E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_1000443D4(v5, (uint64_t)qword_100733CA0);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      Swift::String v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "URL session did become invalid", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1005DFFDC(void *a1, uint64_t a2)
{
  id v13 = [a1 protectionSpace];
  id v3 = [v13 authenticationMethod];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v7 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 1, 0);
      goto LABEL_13;
    }
  }
  os_log_type_t v10 = (__SecTrust *)[v13 serverTrust];
  if (v10)
  {
    uint64_t v11 = v10;
    if (sub_1005DF538(v10))
    {
      id v12 = [objc_allocWithZone((Class)NSURLCredential) initWithTrust:v11];
      (*(void (**)(uint64_t, void, id))(a2 + 16))(a2, 0, v12);

      id v13 = v12;
      goto LABEL_13;
    }
  }
  (*(void (**)(uint64_t, uint64_t, void))(a2 + 16))(a2, 2, 0);
LABEL_13:
}

uint64_t sub_1005E0158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007764((uint64_t *)&unk_100734020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005E01C0(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return _swift_task_switch(sub_1005E01E0, 0, 0);
}

uint64_t sub_1005E01E0()
{
  IdentityProofingConfiguration.targetDevice.getter();
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = IdentityTarget.rawValue.getter();
    if (v2 == IdentityTarget.rawValue.getter())
    {
      unint64_t v3 = 0xEA00000000004543;
      uint64_t v4 = 0x495645445F444441;
LABEL_11:
      id v13 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
      return v13(v4, v3);
    }
  }
  uint64_t v5 = IdentityProofingConfiguration.accountKeyIdentifier.getter();
  if (!v6)
  {
    unint64_t v3 = 0xE400000000000000;
    uint64_t v4 = 1280070982;
    goto LABEL_11;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6;
  type metadata accessor for DIPAccountManager();
  swift_bridgeObjectRetain();
  swift_retain();
  static DIPAccountManager.sharedInstance.getter();
  type metadata accessor for IdentityProofingDeviceMigrationManager();
  inited = (void *)swift_initStackObject();
  *(void *)(v0 + 160) = inited;
  inited[2] = 0;
  if (qword_10071F498 != -1) {
    swift_once();
  }
  os_log_type_t v10 = *(void **)(qword_100760290 + 16);
  inited[3] = v10;
  inited[4] = v7;
  inited[5] = v8;
  id v11 = v10;
  swift_bridgeObjectRelease();
  sub_10000C6B4((long long *)(v0 + 104), (uint64_t)(inited + 6));
  swift_bridgeObjectRelease();
  swift_release();
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v12;
  *id v12 = v0;
  v12[1] = sub_1005E0424;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 184, 0, 0, 0xD00000000000001FLL, 0x8000000100643E80, sub_1002647EC, inited, &type metadata for Bool);
}

uint64_t sub_1005E0424()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005E0600;
  }
  else {
    uint64_t v2 = sub_1005E0538;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E0538()
{
  uint64_t v1 = *(void *)(v0 + 160);
  int v2 = *(unsigned __int8 *)(v0 + 184);
  swift_setDeallocating();

  swift_bridgeObjectRelease();
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v1 + 48);
  if (v2) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 1280070982;
  }
  if (v2) {
    unint64_t v4 = 0x800000010065A3D0;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  uint64_t v5 = *(uint64_t (**)(unint64_t, unint64_t))(v0 + 8);
  return v5(v3, v4);
}

uint64_t sub_1005E0600()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_setDeallocating();

  swift_bridgeObjectRelease();
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(v1 + 48);
  int v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1005E068C(uint64_t a1, uint64_t a2)
{
  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  uint64_t v4 = type metadata accessor for DIPError.Code();
  v3[28] = v4;
  v3[29] = *(void *)(v4 - 8);
  v3[30] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[31] = v5;
  v3[32] = *(void *)(v5 - 8);
  v3[33] = swift_task_alloc();
  return _swift_task_switch(sub_1005E07AC, 0, 0);
}

uint64_t sub_1005E07AC()
{
  uint64_t v1 = IdentityProofingConfiguration.state.getter();
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    uint64_t v5 = IdentityProofingConfiguration.country.getter();
    if (v6)
    {
      uint64_t v7 = v5;
      uint64_t v8 = v6;
      sub_100007764(&qword_100720AC8);
      uint64_t inited = swift_initStackObject();
      *(void *)(v0 + 272) = inited;
      *(_OWORD *)(inited + 16) = xmmword_100614990;
      strcpy((char *)(inited + 32), "resident_state");
      *(unsigned char *)(inited + 47) = -18;
      *(void *)(inited + 48) = v3;
      *(void *)(inited + 56) = v4;
      *(void *)(inited + 64) = 0xD000000000000010;
      *(void *)(inited + 72) = 0x8000000100653BC0;
      *(void *)(inited + 80) = v7;
      *(void *)(inited + 88) = v8;
      strcpy((char *)(inited + 96), "proofing_type");
      *(_WORD *)(inited + 110) = -4864;
      uint64_t v10 = swift_task_alloc();
      *(void *)(v0 + 280) = v10;
      *(void *)uint64_t v10 = v0;
      *(void *)(v10 + 8) = sub_1005E0AF0;
      *(_OWORD *)(v10 + 144) = *(_OWORD *)(v0 + 208);
      return _swift_task_switch(sub_1005E01E0, 0, 0);
    }
    uint64_t v12 = *(void *)(v0 + 232);
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v13 = *(void *)(v0 + 224);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v11, enum case for DIPError.Code.idCountryUnavailable(_:), v13);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_10000C588();
    swift_allocError();
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 232) + 104))(*(void *)(v0 + 240), enum case for DIPError.Code.idStateUnavailable(_:), *(void *)(v0 + 224));
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_10000C588();
    swift_allocError();
  }
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  CFStringRef v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1005E0AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 288) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1005E12E8;
  }
  else
  {
    *(void *)(v6 + 296) = a2;
    *(void *)(v6 + 304) = a1;
    uint64_t v7 = sub_1005E0C24;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005E0C24()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[34];
  *(void *)(v2 + 112) = v0[38];
  *(void *)(v2 + 120) = v1;
  v0[39] = sub_10015CF20(v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[40] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1005E0CC4;
  return sub_1005E1450();
}

uint64_t sub_1005E0CC4()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005E10D0;
  }
  else {
    uint64_t v2 = sub_1005E0DD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E0DD8()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 248);
  *(void *)(v0 + 336) = sub_10052E944();
  uint64_t v4 = (objc_class *)type metadata accessor for IdentitySelfHealer();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtC8coreidvd18IdentitySelfHealer_proofingSessionID];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)(v0 + 184) = v5;
  *(void *)(v0 + 192) = v4;
  id v7 = [super init];
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v8 = sub_1002D3994((uint64_t)v7, (uint64_t)&off_100708438, 0, 0);
  *(void *)(v0 + 344) = v8;
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1005E0F48;
  uint64_t v10 = *(void *)(v0 + 312);
  return sub_10052D250(v0 + 144, (uint64_t)v8, v10);
}

uint64_t sub_1005E0F48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void **)(v2 + 344);
  if (v0)
  {

    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1005E13BC;
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_release();
    uint64_t v4 = sub_1005E1148;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005E10D0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005E1148()
{
  uint64_t v1 = (long long *)(v0 + 18);
  if (v0[21])
  {
    sub_10000C6B4(v1, v0[25]);
  }
  else
  {
    uint64_t v4 = v0[29];
    uint64_t v3 = v0[30];
    uint64_t v5 = v0[28];
    sub_1004F0908((uint64_t)v1);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for DIPError.Code.missingIdentityWorkFlow(_:), v5);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_10000C588();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1005E12E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_100007764(&qword_1007341D8);
  swift_arrayDestroy();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005E13BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for IdentityProofingWorkflowProvider()
{
  return self;
}

uint64_t sub_1005E1450()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  v0[3] = v1;
  v0[4] = *(void *)(v1 - 8);
  v0[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Logger();
  v0[6] = v2;
  v0[7] = *(void *)(v2 - 8);
  v0[8] = swift_task_alloc();
  return _swift_task_switch(sub_1005E1568, 0, 0);
}

uint64_t sub_1005E1568()
{
  sub_10042D838();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    uint64_t v3 = v1;
    defaultLogger()();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      v0[2] = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "IdentityProofingWorkflowProvider enabled simulated delay (of %ld s) for fetching dynamic workflow", v6, 0xCu);
      swift_slowDealloc();
    }

    (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
    ContinuousClock.init()();
    uint64_t v10 = (char *)&dword_100725748 + dword_100725748;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1005E177C;
    return ((uint64_t (*)(uint64_t, void, void, void, uint64_t))v10)(1000000000000000000 * v3, ((v3 >> 63) & 0xF21F494C589C0000)+ (((unint64_t)v3 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64), 0, 0, 1);
  }
}

uint64_t sub_1005E177C()
{
  uint64_t v2 = *(void *)(*v1 + 40);
  uint64_t v3 = *(void *)(*v1 + 32);
  uint64_t v4 = *(void *)(*v1 + 24);
  uint64_t v5 = *v1;
  *(void *)(v5 + 80) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1005E1934, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1005E1934()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005E19A4()
{
  uint64_t v2 = type metadata accessor for Logger();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1005E1AA4, v0, 0);
}

uint64_t sub_1005E1AA4()
{
  uint64_t v24 = v0;
  defaultLogger()();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v20 = *(void *)(v0 + 40);
    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 32) = sub_100110D58(0x656C62616E457369, 0xE900000000000064, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "MobileDocumentReaderNFCManager %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v5(v21, v20);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);

    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v5(v6, v7);
  }
  *(void *)(v0 + 16) = 0;
  id v9 = [self sharedHardwareManager];
  id v10 = [v9 getRadioEnabledState:v0 + 16];

  uint64_t v11 = *(void *)(v0 + 16);
  defaultLogger()();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 40);
  if (v14)
  {
    uint64_t v22 = *(void *)(v0 + 56);
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    *(void *)(v0 + 24) = sub_100110D58(0x656C62616E457369, 0xE900000000000064, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 1024;
    *(_DWORD *)(v0 + 72) = v11 == 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "MobileDocumentReaderBluetoothManager %s NFC on: %{BOOL}d", (uint8_t *)v17, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v5(v22, v16);
  }
  else
  {

    v5(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v18 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v18(v11 == 1);
}

uint64_t type metadata accessor for MobileDocumentReaderNFCManager()
{
  return self;
}

uint64_t sub_1005E1EAC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for DIPError.Code();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  sub_100007764(&qword_10072FB40);
  v3[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
  v3[18] = v7;
  v3[19] = *(void *)(v7 - 8);
  v3[20] = swift_task_alloc();
  return _swift_task_switch(sub_1005E20E0, 0, 0);
}

uint64_t sub_1005E20E0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[17];
  sub_100048D6C(v0[3], v3, &qword_10072FB40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000C6CC(v0[17], &qword_10072FB40);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[25] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005E2638;
    return sub_100129680();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 32))(v0[20], v0[17], v0[18]);
    uint64_t v6 = MobileDocumentReaderIdentityKeyRequest.applicationIdentifier.getter();
    uint64_t v8 = v7;
    v0[21] = v7;
    MobileDocumentReaderIdentityKeyRequest.installationIdentifier.getter();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[22] = (uint64_t)v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1005E2290;
    uint64_t v10 = v0[16];
    return sub_100128C94(v6, v8, v10);
  }
}

uint64_t sub_1005E2290(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[23] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[16];
  uint64_t v6 = v4[14];
  uint64_t v7 = v4[13];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1005E2B18;
  }
  else
  {
    v4[24] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1005E243C;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1005E243C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[19];
  uint64_t v12 = v0[18];
  uint64_t v13 = v0[20];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v11 = v0[8];
  (*(void (**)(void, uint64_t, void))(v0[14] + 16))(v0[15], v1 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_installationIdentifier, v0[13]);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob);
  unint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob + 8);
  swift_bridgeObjectRetain();
  sub_10002CEB0(v6, v5);
  MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)();
  sub_100007764(&qword_1007240B8);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100610730;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v8 + v7, v3, v11);
  MobileDocumentReaderIdentityKeyResponse.init(items:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v11);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v13, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1005E2638(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 216) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1005E2D10;
  }
  else {
    uint64_t v4 = sub_1005E274C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005E274C()
{
  unint64_t v1 = v0[26];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_16;
    }
  }
  uint64_t result = sub_100111754(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = 0;
    uint64_t v25 = (void (**)(uint64_t, uint64_t, uint64_t))(v0[14] + 16);
    uint64_t v27 = v0[9];
    uint64_t v28 = v2;
    do
    {
      uint64_t v5 = v0[15];
      uint64_t v6 = v0[13];
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      (*v25)(v5, v7 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_installationIdentifier, v6);
      uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob);
      unint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob + 8);
      swift_bridgeObjectRetain();
      sub_10002CEB0(v9, v8);
      MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)();
      swift_unknownObjectRelease();
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        sub_100111754(v10 > 1, v11 + 1, 1);
      }
      uint64_t v12 = v0[11];
      uint64_t v13 = v0[8];
      ++v4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v11, v12, v13);
    }
    while (v28 != v4);
  }
  else
  {
    uint64_t v14 = v0[9];
    unint64_t v26 = *(void (**)(void, uint64_t, void))(v0[14] + 16);
    uint64_t v15 = (uint64_t *)(v0[26] + 32);
    do
    {
      uint64_t v29 = v2;
      uint64_t v16 = *v15;
      v26(v0[15], *v15 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_installationIdentifier, v0[13]);
      uint64_t v17 = v16 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob;
      uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC8coreidvd31MobileDocumentReaderIdentityKey_keyBlob);
      unint64_t v19 = *(void *)(v17 + 8);
      swift_bridgeObjectRetain();
      sub_10002CEB0(v18, v19);
      MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)();
      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      if (v21 >= v20 >> 1) {
        sub_100111754(v20 > 1, v21 + 1, 1);
      }
      uint64_t v22 = v0[10];
      uint64_t v23 = v0[8];
      _swiftEmptyArrayStorage[2] = v21 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v21, v22, v23);
      ++v15;
      uint64_t v2 = v29 - 1;
    }
    while (v29 != 1);
  }
LABEL_16:
  swift_bridgeObjectRelease();
  MobileDocumentReaderIdentityKeyResponse.init(items:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1005E2B18()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  (*(void (**)(void, void, void))(v0[6] + 104))(v0[7], enum case for DIPError.Code.internalError(_:), v0[5]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005E2D10()
{
  (*(void (**)(void, void, void))(v0[6] + 104))(v0[7], enum case for DIPError.Code.internalError(_:), v0[5]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005E2EF0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for DIPError.Code();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_1005E300C, 0, 0);
}

uint64_t sub_1005E300C()
{
  uint64_t v1 = MobileDocumentReaderIdentityKeyRequest.applicationIdentifier.getter();
  uint64_t v3 = v2;
  v0[10] = v2;
  MobileDocumentReaderIdentityKeyRequest.installationIdentifier.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1005E30DC;
  uint64_t v5 = v0[9];
  return sub_10012B898(v1, v3, v5);
}

uint64_t sub_1005E30DC()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  if (v0)
  {
    return _swift_task_switch(sub_1005E32B0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_1005E32B0()
{
  (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for DIPError.Code.internalError(_:), v0[4]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005E3434(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for MobileDocumentReaderCertificateResponse.StatusItem();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DIPError.Code();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  sub_100007764(&qword_100722D70);
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MobileDocumentReaderAuthenticationSession();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  sub_100007764(&qword_10072FB38);
  v3[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MobileDocumentReaderCertificateRequest();
  v3[17] = v7;
  v3[18] = *(void *)(v7 - 8);
  v3[19] = swift_task_alloc();
  return _swift_task_switch(sub_1005E367C, 0, 0);
}

uint64_t sub_1005E367C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  sub_100048D6C(v0[3], v3, &qword_10072FB38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000C6CC(v0[16], &qword_10072FB38);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[23] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005E3DA8;
    return sub_10012CD3C();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 32))(v0[19], v0[16], v0[17]);
    uint64_t v6 = MobileDocumentReaderCertificateRequest.sessionIdentifier.getter();
    uint64_t v8 = v7;
    v0[20] = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[21] = (uint64_t)v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1005E3818;
    uint64_t v10 = v0[11];
    return sub_10012C4F8(v10, v6, v8);
  }
}

uint64_t sub_1005E3818()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1005E414C;
  }
  else {
    uint64_t v2 = sub_1005E3948;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E3948()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 48))(v2, 1, v1) == 1)
  {
    uint64_t v4 = v0[18];
    uint64_t v3 = v0[19];
    uint64_t v5 = v0[17];
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    uint64_t v8 = v0[8];
    sub_10000C6CC(v2, &qword_100722D70);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, enum case for DIPError.Code.documentReaderMissingSession(_:), v8);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for DIPError.Code.internalError(_:), v0[8]);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = v0[18];
    uint64_t v13 = v0[17];
    uint64_t v14 = v0[19];
    uint64_t v11 = v0[15];
    sub_1000D5BA0(v2, v11);
    sub_100007764(&qword_1007240A8);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100610730;
    type metadata accessor for SecCertificate(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Array<A>.base64EncodedStrings()();
    swift_bridgeObjectRelease();
    sub_1000338D4(*(void *)(v11 + *(int *)(v1 + 40)), *(void *)(v11 + *(int *)(v1 + 40) + 8));
    MobileDocumentReaderCertificateResponse.StatusItem.init(sessionIdentifier:certificateChain:merchantLogo:)();
    MobileDocumentReaderCertificateResponse.init(items:)();
    sub_10055934C(v11);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1005E3DA8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1005E4338;
  }
  else {
    uint64_t v4 = sub_1005E3EBC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005E3EBC()
{
  uint64_t v1 = v0[24];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[13];
    uint64_t v15 = v0[12];
    uint64_t v4 = v0[6];
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_100111790(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v16 = v0;
    do
    {
      int64_t v17 = v2;
      uint64_t v7 = v0[14];
      sub_1000D5C04(v5, v7);
      type metadata accessor for SecCertificate(0);
      swift_bridgeObjectRetain();
      Array<A>.base64EncodedStrings()();
      sub_1000338D4(*(void *)(v7 + *(int *)(v15 + 40)), *(void *)(v7 + *(int *)(v15 + 40) + 8));
      MobileDocumentReaderCertificateResponse.StatusItem.init(sessionIdentifier:certificateChain:merchantLogo:)();
      sub_10055934C(v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100111790(0, v6[2] + 1, 1);
        uint64_t v6 = v18;
      }
      unint64_t v9 = v6[2];
      unint64_t v8 = v6[3];
      uint64_t v0 = v16;
      if (v9 >= v8 >> 1)
      {
        sub_100111790(v8 > 1, v9 + 1, 1);
        uint64_t v6 = v18;
      }
      uint64_t v10 = v16[7];
      uint64_t v11 = v16[5];
      v6[2] = v9 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v6+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v9, v10, v11);
      uint64_t v18 = v6;
      v5 += v14;
      int64_t v2 = v17 - 1;
    }
    while (v17 != 1);
  }
  swift_bridgeObjectRelease();
  MobileDocumentReaderCertificateResponse.init(items:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1005E414C()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for DIPError.Code.internalError(_:), v0[8]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005E4338()
{
  (*(void (**)(void, void, void))(v0[9] + 104))(v0[10], enum case for DIPError.Code.internalError(_:), v0[8]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1005E450C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MobileDocumentReaderAuthenticationSession();
  v4[6] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DIPError.Code();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  sub_100007764(&qword_100720A68);
  v4[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  sub_100007764(&qword_100722DC0);
  v4[14] = swift_task_alloc();
  v4[15] = sub_100007764(&qword_100722DC8);
  v4[16] = swift_task_alloc();
  sub_100007764(&qword_100722DD0);
  v4[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logotype();
  v4[18] = v7;
  v4[19] = *(void *)(v7 - 8);
  v4[20] = swift_task_alloc();
  sub_100007764((uint64_t *)&unk_1007264F0);
  v4[21] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v4[22] = v8;
  v4[23] = *(void *)(v8 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_1005E4814, 0, 0);
}

uint64_t sub_1005E4814()
{
  v0[26] = MobileDocumentReaderCertificateRequest.applicationIdentifier.getter();
  v0[27] = v1;
  if (!v1)
  {
LABEL_6:
    uint64_t v7 = enum case for DIPError.Code.internalError(_:);
    (*(void (**)(void, void, void))(v0[8] + 104))(v0[9], enum case for DIPError.Code.internalError(_:), v0[7]);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    (*(void (**)(void, uint64_t, void))(v0[8] + 104))(v0[9], v7, v0[7]);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[21];
  MobileDocumentReaderCertificateRequest.installationIdentifier.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    uint64_t v5 = v0[21];
    swift_bridgeObjectRelease();
    sub_10000C6CC(v5, (uint64_t *)&unk_1007264F0);
    goto LABEL_6;
  }
  (*(void (**)(void, void, void))(v0[23] + 32))(v0[25], v0[21], v0[22]);
  v0[28] = MobileDocumentReaderCertificateRequest.keyBlob.getter();
  v0[29] = v6;
  if (v6 >> 60 == 15)
  {
    (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v0[30] = *(void *)(v0[5] + 16);
  uint64_t v10 = MobileDocumentReaderCertificateRequest.sessionIdentifier.getter();
  uint64_t v12 = v11;
  v0[31] = v11;
  uint64_t v13 = (void *)swift_task_alloc();
  v0[32] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1005E4C38;
  return sub_10012E390(v10, v12);
}

uint64_t sub_1005E4C38()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1005E4D50, 0, 0);
}

uint64_t sub_1005E4D50()
{
  SecCertificateRef v1 = decodeCertificate(fromBase64DER:)(*(Swift::String *)(v0 + 24));
  *(void *)(v0 + 264) = v1;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 224);
    unint64_t v4 = *(void *)(v0 + 232);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
    sub_10000C5E0(v3, v4);
    swift_bridgeObjectRelease();
LABEL_4:
    (*(void (**)(void, void, void))(*(void *)(v0 + 64) + 104))(*(void *)(v0 + 72), enum case for DIPError.Code.internalError(_:), *(void *)(v0 + 56));
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  SecCertificateRef v5 = v1;
  SecCertificateRef.logotype.getter();
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 136);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8);
  if (v11 == 1)
  {
    sub_10000C6CC(v10, &qword_100722DD0);
    *(_OWORD *)(v0 + 304) = xmmword_100610EF0;
    uint64_t v12 = *(void **)(v0 + 264);
    uint64_t v14 = *(void *)(v0 + 224);
    unint64_t v13 = *(void *)(v0 + 232);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v58 = *(void *)(v0 + 208);
    uint64_t v61 = *(void *)(v0 + 216);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v55 = *(char **)(v0 + 48);
    uint64_t v53 = MobileDocumentReaderCertificateRequest.sessionIdentifier.getter();
    uint64_t v20 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
    sub_100007764(&qword_100730C60);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100613E40;
    *(void *)(v21 + 32) = v12;
    unint64_t v65 = v21;
    specialized Array._endMutation()();
    id v22 = v12;
    sub_1000338D4(v14, v13);
    sub_1000338D4(0, 0xF000000000000000);
    sub_10043C544(v53, v20, v58, v61, v16, v65, v14, v13, v55, 0, 0xF000000000000000);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1005E5E60;
    uint64_t v29 = *(void *)(v0 + 48);
    return sub_10012D4B4(v29);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v9 + 32))(*(void *)(v0 + 160), v10, v8);
  uint64_t v23 = Logotype.logotypeTuples.getter();
  uint64_t v24 = *(void *)(v23 + 16);
  uint64_t v25 = sub_100007764(&qword_100722DD8);
  uint64_t v26 = *(void *)(v25 - 8);
  if (v24)
  {
    sub_100048D6C(v23+ ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80)), *(void *)(v0 + 112), &qword_100722DD8);
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = 1;
  }
  uint64_t v30 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v30, v27, 1, v25);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_100007764(&qword_100722DD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31) == 1)
  {
    uint64_t v33 = *(void *)(v0 + 224);
    unint64_t v32 = *(void *)(v0 + 232);
    uint64_t v34 = *(void *)(v0 + 184);
    uint64_t v59 = *(void *)(v0 + 176);
    uint64_t v62 = *(void *)(v0 + 200);
    uint64_t v35 = *(void *)(v0 + 152);
    uint64_t v54 = *(void *)(v0 + 144);
    uint64_t v56 = *(void *)(v0 + 160);
    uint64_t v37 = *(void *)(v0 + 64);
    uint64_t v36 = *(void *)(v0 + 72);
    uint64_t v38 = *(void *)(v0 + 56);
    sub_10000C6CC(*(void *)(v0 + 112), &qword_100722DC0);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v36, enum case for DIPError.Code.documentReaderCertificateLogotypeMissing(_:), v38);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
LABEL_19:
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    sub_10000C5E0(v33, v32);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v56, v54);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v62, v59);
    goto LABEL_4;
  }
  uint64_t v39 = *(void *)(v0 + 128);
  uint64_t v40 = *(void *)(v0 + 112);
  uint64_t v41 = *(void *)(v0 + 96);
  uint64_t v60 = *(void *)(v0 + 80);
  uint64_t v63 = *(void *)(v0 + 88);
  unint64_t v42 = (uint64_t *)(v40 + *(int *)(v31 + 48));
  uint64_t v43 = *v42;
  uint64_t v57 = v42[1];
  uint64_t v44 = (void *)(v39 + *(int *)(*(void *)(v0 + 120) + 48));
  uint64_t v45 = type metadata accessor for HashDigest();
  uint64_t v46 = *(void *)(v45 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v39, v40, v45);
  *uint64_t v44 = v43;
  v44[1] = v57;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v39, v45);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v60, 1, v63) == 1)
  {
    uint64_t v33 = *(void *)(v0 + 224);
    unint64_t v32 = *(void *)(v0 + 232);
    uint64_t v34 = *(void *)(v0 + 184);
    uint64_t v59 = *(void *)(v0 + 176);
    uint64_t v62 = *(void *)(v0 + 200);
    uint64_t v35 = *(void *)(v0 + 152);
    uint64_t v54 = *(void *)(v0 + 144);
    uint64_t v56 = *(void *)(v0 + 160);
    uint64_t v47 = *(void *)(v0 + 72);
    uint64_t v48 = *(void *)(v0 + 80);
    uint64_t v49 = *(void *)(v0 + 56);
    uint64_t v50 = *(void *)(v0 + 64);
    swift_bridgeObjectRelease();
    sub_10000C6CC(v48, &qword_100720A68);
    (*(void (**)(uint64_t, void, uint64_t))(v50 + 104))(v47, enum case for DIPError.Code.documentReaderCertificateInvalidLogoURL(_:), v49);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    goto LABEL_19;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 32))(*(void *)(v0 + 104), *(void *)(v0 + 80), *(void *)(v0 + 88));
  uint64_t v64 = (uint64_t (*)(uint64_t))((char *)&dword_100732A28 + dword_100732A28);
  unint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v51;
  void *v51 = v0;
  v51[1] = sub_1005E56E8;
  uint64_t v52 = *(void *)(v0 + 104);
  return v64(v52);
}

uint64_t sub_1005E56E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 280) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1005E5BF4;
  }
  else
  {
    *(void *)(v6 + 288) = a2;
    *(void *)(v6 + 296) = a1;
    uint64_t v7 = sub_1005E5824;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1005E5824()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  unint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v6 = v0[35];
  v0[38] = v4;
  v0[39] = v5;
  uint64_t v7 = (void *)v0[33];
  uint64_t v8 = v0[28];
  unint64_t v25 = v0[29];
  uint64_t v30 = v0[27];
  uint64_t v31 = v6;
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[23];
  uint64_t v11 = v0[24];
  uint64_t v12 = v0[22];
  uint64_t v28 = (char *)v0[6];
  uint64_t v29 = v0[26];
  uint64_t v13 = MobileDocumentReaderCertificateRequest.sessionIdentifier.getter();
  uint64_t v26 = v14;
  uint64_t v27 = v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v12);
  sub_100007764(&qword_100730C60);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100613E40;
  *(void *)(v15 + 32) = v7;
  unint64_t v32 = v15;
  specialized Array._endMutation()();
  id v16 = v7;
  sub_1000338D4(v8, v25);
  sub_1000338D4(v4, v5);
  sub_10043C544(v27, v26, v29, v30, v11, v32, v8, v25, v28, v4, v5);
  if (v31)
  {
    uint64_t v17 = (void *)v0[33];
    uint64_t v18 = v0[25];
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    sub_10000C5E0(v0[28], v0[29]);

    sub_10000C5E0(v4, v5);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(void, void, void))(v0[8] + 104))(v0[9], enum case for DIPError.Code.internalError(_:), v0[7]);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    uint64_t v23 = (void *)swift_task_alloc();
    v0[40] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1005E5E60;
    uint64_t v24 = v0[6];
    return sub_10012D4B4(v24);
  }
}

uint64_t sub_1005E5BF4()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v12 = v0[25];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[11];
  sub_10000C5E0(v0[28], v0[29]);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v12, v2);
  (*(void (**)(void, void, void))(v0[8] + 104))(v0[9], enum case for DIPError.Code.internalError(_:), v0[7]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1005E5E60()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  sub_10055934C(v2);
  if (v0) {
    uint64_t v3 = sub_1005E60D4;
  }
  else {
    uint64_t v3 = sub_1005E5F90;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005E5F90()
{
  uint64_t v2 = v0[38];
  unint64_t v1 = v0[39];
  uint64_t v3 = (void *)v0[33];
  uint64_t v4 = v0[25];
  uint64_t v6 = v0[22];
  uint64_t v5 = v0[23];
  sub_10000C5E0(v0[28], v0[29]);

  sub_10000C5E0(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1005E60D4()
{
  uint64_t v1 = v0[38];
  unint64_t v2 = v0[39];
  uint64_t v3 = (void *)v0[33];
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[23];
  sub_10000C5E0(v0[28], v0[29]);

  sub_10000C5E0(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void, void, void))(v0[8] + 104))(v0[9], enum case for DIPError.Code.internalError(_:), v0[7]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_1005E68EC((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1005E630C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1005E632C, 0, 0);
}

uint64_t sub_1005E632C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1005E63C0;
  return sub_100147ECC();
}

uint64_t sub_1005E63C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_1005E64F4, 0, 0);
  }
}

void sub_1005E64F4()
{
  uint64_t v1 = *(void *)(v0[5] + 16);
  if (v1)
  {
    uint64_t v2 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v5 = *(v2 - 1);
      unint64_t v6 = *v2;
      sub_10002CEB0(v5, *v2);
      CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
      SecCertificateRef v8 = SecCertificateCreateWithData(kCFAllocatorDefault, isa);

      if (!v8) {
        break;
      }
      uint64_t v9 = SecCertificateRef.derRepresentation()();
      unint64_t v11 = v10;

      sub_10000C5F4(v5, v6);
      if (v11 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_10010FE64(0, v3[2] + 1, 1, v3);
        }
        unint64_t v13 = v3[2];
        unint64_t v12 = v3[3];
        if (v13 >= v12 >> 1) {
          uint64_t v3 = sub_10010FE64((void *)(v12 > 1), v13 + 1, 1, v3);
        }
        v3[2] = v13 + 1;
        uint64_t v4 = &v3[2 * v13];
        v4[4] = v9;
        v4[5] = v11;
      }
      v2 += 2;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    uint64_t v14 = v0[2];
    swift_bridgeObjectRelease();
    MobileDocumentReaderIssuerRootCertificateList.init(certificateData:)();
    uint64_t v15 = type metadata accessor for MobileDocumentReaderIssuerRootCertificateList();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
    id v16 = (void (*)(void))v0[1];
    v16();
  }
}

uint64_t sub_1005E66E4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MobileDocumentReaderStorageFlow()
{
  return self;
}

void *sub_1005E6750()
{
  uint64_t v1 = v0;
  type metadata accessor for SESKeystore();
  swift_allocObject();
  uint64_t v2 = SESKeystore.init()();
  if (qword_10071F4B0 != -1) {
    swift_once();
  }
  uint64_t v3 = *(os_unfair_lock_s **)(qword_1007602E0 + 16);
  uint64_t v4 = (uint64_t)&v3[4];
  uint64_t v5 = v3 + 52;
  os_unfair_lock_lock(v3 + 52);
  sub_1000262B4(v4, v9);
  os_unfair_lock_unlock(v5);
  uint64_t v6 = v11;
  swift_retain();
  sub_1000262D0((uint64_t)v9);
  uint64_t v13 = type metadata accessor for MobileDocumentReaderDataContainer();
  uint64_t v14 = sub_1005E68EC((unint64_t *)&qword_10071FF90, (void (*)(uint64_t))type metadata accessor for MobileDocumentReaderDataContainer);
  *(void *)&long long v12 = v6;
  type metadata accessor for MobileDocumentReaderAuthenticationStorage();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  sub_10000C6B4(&v12, v7 + 24);
  v1[2] = v7;
  type metadata accessor for MobileDocumentReaderLogoFetcher();
  v1[3] = swift_allocObject();
  type metadata accessor for MobileDocumentReaderIssuerRootStorage();
  memset(v9, 0, sizeof(v9));
  uint64_t v10 = 0;
  swift_allocObject();
  v1[4] = sub_100149F64((uint64_t)v9);
  return v1;
}

uint64_t sub_1005E68EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E6934@<X0>(uint64_t a1@<X8>)
{
  swift_getErrorValue();
  uint64_t v2 = dispatch thunk of Error._domain.getter();
  uint64_t v4 = v3;
  if (v2 == String.init(cString:)() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
LABEL_6:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderSTSSessionUnexpectedError(_:);
      goto LABEL_20;
    }
  }
  swift_getErrorValue();
  unint64_t v9 = dispatch thunk of Error._code.getter();
  if ((v9 & 0x8000000000000000) != 0 || HIDWORD(v9))
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1005E6B74);
  }
  switch((int)v9)
  {
    case 4:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderReadTimedOut(_:);
      break;
    case 14:
    case 19:
    case 22:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderSTSConnectionError(_:);
      break;
    case 15:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderRequiresWiFi(_:);
      break;
    case 16:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderRequiresBluetooth(_:);
      break;
    case 17:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReadCancelled(_:);
      break;
    case 18:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderRequiresNFC(_:);
      break;
    case 20:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderNFCOverheatProtectionEnabled(_:);
      break;
    case 21:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderInvalidRequest(_:);
      break;
    case 23:
      SecCertificateRef v8 = (unsigned int *)&enum case for DIPError.Code.documentReaderNFCNegotiatedHandoverFailed(_:);
      break;
    default:
      goto LABEL_6;
  }
LABEL_20:
  uint64_t v10 = *v8;
  uint64_t v11 = type metadata accessor for DIPError.Code();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
}

unint64_t sub_1005E6BC4()
{
  uint64_t v1 = type metadata accessor for DIPError.Code();
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  __chkstk_darwin(v1);
  uint64_t v31 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for BundleRecord();
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  unint64_t v9 = (char *)&v26 - v8;
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)&v26 - v10;
  uint64_t v11 = type metadata accessor for UsageDescriptionFetcher();
  long long v12 = (uint64_t *)(v0 + *(int *)(v11 + 20));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  if ((*v12 != 0xD000000000000023 || v14 != 0x80000001006291E0)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    && (v13 != 0xD000000000000023 || v14 != 0x800000010065A570)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_10000C728((void *)(v0 + *(int *)(v11 + 24)), *(void *)(v0 + *(int *)(v11 + 24) + 24));
    AuditToken.wrapped.getter();
    unint64_t v25 = v32;
    dispatch thunk of BundleRecordFetching.record(withAuditToken:)();
    unint64_t v16 = v25;
    if (v25) {
      goto LABEL_9;
    }
    unint64_t v9 = v6;
LABEL_11:
    uint64_t v19 = v26;
    uint64_t v18 = v27;
    uint64_t v20 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v9, v28);
    uint64_t v21 = BundleRecord.localizedIdentityUsageDescription.getter();
    if (v22)
    {
      unint64_t v17 = v21;
      uint64_t v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v21 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
        return v17;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, enum case for DIPError.Code.digitalPresentmentInvalidUsageDescription(_:), v30);
      unint64_t v17 = sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for DIPError();
      sub_10000C588();
      swift_allocError();
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, enum case for DIPError.Code.digitalPresentmentInvalidUsageDescription(_:), v30);
      unint64_t v17 = sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
      type metadata accessor for DIPError();
      sub_10000C588();
      swift_allocError();
    }
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
    return v17;
  }
  unint64_t v15 = v32;
  sub_10000C728((void *)(v0 + *(int *)(v11 + 24)), *(void *)(v0 + *(int *)(v11 + 24) + 24));
  dispatch thunk of BundleRecordFetching.record(withApplicationIdentifier:)();
  unint64_t v16 = v15;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  unint64_t v17 = v16;
  (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, enum case for DIPError.Code.digitalPresentmentInvalidUsageDescription(_:), v30);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for DIPError();
  sub_10000C588();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_errorRelease();
  return v17;
}

uint64_t type metadata accessor for UsageDescriptionFetcher()
{
  uint64_t result = qword_1007343C8;
  if (!qword_1007343C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1005E71F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AuditToken();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    long long v15 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)((char *)a1 + v9 + 24) = v15;
    uint64_t v16 = v15;
    unint64_t v17 = **(void (***)(char *, char *, uint64_t))(v15 - 8);
    swift_bridgeObjectRetain();
    v17(v13, v14, v16);
  }
  return a1;
}

uint64_t sub_1005E732C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuditToken();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);

  return _s8coreidvd24DigitalPresentmentHelperVwxx_0(v5);
}

uint64_t sub_1005E73B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AuditToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  long long v14 = *(_OWORD *)(v13 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v14;
  uint64_t v15 = v14;
  uint64_t v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  swift_bridgeObjectRetain();
  v16(v12, v13, v15);
  return a1;
}

uint64_t sub_1005E749C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AuditToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10000A128((uint64_t *)(a1 + *(int *)(a3 + 24)), (uint64_t *)(a2 + *(int *)(a3 + 24)));
  return a1;
}

uint64_t sub_1005E7548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AuditToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  return a1;
}

uint64_t sub_1005E75DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AuditToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  _s8coreidvd24DigitalPresentmentHelperVwxx_0(a1 + v12);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  return a1;
}

uint64_t sub_1005E768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E76A0);
}

uint64_t sub_1005E76A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AuditToken();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005E7764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E7778);
}

uint64_t sub_1005E7778(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AuditToken();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1005E7838()
{
  uint64_t result = type metadata accessor for AuditToken();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005E78D8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IdentityProofingBackgroundActivityScheduler()
{
  return self;
}

uint64_t sub_1005E790C(void (*a1)(char *, uint64_t))
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_100007764(&qword_100723318);
  __chkstk_darwin(v1 - 8);
  uint64_t v44 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DIPBackgroundActivitySettings();
  uint64_t v47 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v49 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v50 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v42 = (char *)&v41 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v41 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - v17;
  defaultLogger()();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Creating a dynamic background activity for identity proofing", v21, 2u);
    swift_slowDealloc();
  }

  unint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v18, v7);
  Date.addingTimeInterval(_:)();
  uint64_t result = Date.timeIntervalSinceNow.getter();
  double v25 = v24 + 5.0;
  if ((~COERCE__INT64(v24 + 5.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  defaultLogger()();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v48 = v22;
    int v28 = (uint64_t)v25 % 3600;
    uint64_t v41 = (__int16)(v28
                  - 60
                  * (((__int16)((34953 * (__int16)v28) >> 16) >> 5)
                   + (((v28 + ((-30583 * (__int16)v28) >> 16)) & 0x8000) >> 15)));
    uint64_t v43 = v11;
    uint64_t v29 = v7;
    uint64_t v30 = (int)(((__int16)((34953 * (__int16)v28) >> 16) >> 5)
              + (((v28 + ((-30583 * (__int16)v28) >> 16)) & 0x8000) >> 15));
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134218496;
    uint64_t v51 = (uint64_t)v25 / 3600;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2048;
    uint64_t v51 = v30;
    uint64_t v7 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 2048;
    uint64_t v51 = v41;
    unint64_t v22 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "time left before pending actions can be invoked: %ldhour(s) %ldminute(s) %ldsecond(s)", (uint8_t *)v31, 0x20u);
    swift_slowDealloc();
  }

  v22(v16, v7);
  unint64_t v32 = v49;
  DIPBackgroundActivitySettings.init()();
  DIPBackgroundActivitySettings.requireNetworkActivity.setter();
  DIPBackgroundActivitySettings.allowBattery.setter();
  type metadata accessor for DIPBackgroundActivityManager();
  static DIPBackgroundActivityManager.sharedInstance.getter();
  uint64_t v33 = v47;
  uint64_t v34 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v32, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v3);
  DIPBackgroundActivityManager.scheduleActivity(identifier:after:gracePeriod:settings:)();
  sub_1004F7B24(v34);
  swift_release();
  uint64_t v35 = v42;
  defaultLogger()();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "dynamic background activity for identity proofing scheduling complete", v38, 2u);
    swift_slowDealloc();
  }

  v22(v35, v7);
  v39._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v39._object = (void *)0x800000010065A730;
  v40._uint64_t countAndFlagsBits = 0x3833353963323166;
  v40._object = (void *)0xE800000000000000;
  logMilestone(tag:description:)(v40, v39);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v49, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v50, v46);
}

uint64_t sub_1005E8170()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - v5;
  defaultLogger()();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removing scheduled dynamic background activity for identity proofing", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v6, v0);
  type metadata accessor for DIPBackgroundActivityManager();
  static DIPBackgroundActivityManager.sharedInstance.getter();
  v11._object = (void *)0x80000001006347D0;
  v11._uint64_t countAndFlagsBits = 0xD000000000000017;
  DIPBackgroundActivityManager.unregisterActivity(identifier:)(v11);
  swift_release();
  defaultLogger()();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "dynamic background activity for identity proofing unregistration complete", v14, 2u);
    swift_slowDealloc();
  }

  return ((uint64_t (*)(char *, uint64_t))v10)(v4, v0);
}

uint64_t sub_1005E8390()
{
  uint64_t v0 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)PKPaymentService) init];
  uint64_t v20 = sub_100025C28(0, &qword_1007345B0);
  uint64_t v21 = &off_100708278;
  *(void *)&long long v19 = v4;
  type metadata accessor for IdentityProofingActionNotificationFlow();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  sub_100025C28(0, (unint64_t *)&qword_1007208E0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchQoS.QoSClass.default(_:), v0);
  uint64_t v6 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = sub_1005EC0D0(0, v5, v6);
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  id v8 = [objc_allocWithZone((Class)PKPaymentService) init];
  type metadata accessor for IdentityProofingConfigProvider();
  uint64_t v9 = swift_allocObject();
  type metadata accessor for IdentityProofingTextReplacementProvider();
  swift_allocObject();
  uint64_t v10 = IdentityProofingTextReplacementProvider.init()();
  type metadata accessor for IdentityProofingDeviceMigrationManagerFactory();
  uint64_t v11 = swift_allocObject();
  type metadata accessor for IdentityProofingWorkflowProvider();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  type metadata accessor for IdentityProofingUserNotificationProvider();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = sub_1005EBED8((uint64_t)v8, (uint64_t)v17, v9, v10, v12, v13);
  type metadata accessor for IdentityProofingExpirationActionProvider();
  uint64_t v15 = swift_allocObject();
  sub_10000C6B4(&v19, v15 + 16);
  *(void *)(v15 + 56) = v7;
  *(void *)(v15 + 64) = v14;
  return v15;
}

void *sub_1005E860C()
{
  uint64_t v0 = type metadata accessor for IdentityBMUserProofingStreamWrapper();
  uint64_t v1 = swift_allocObject();
  id v2 = [(id)BiomeLibrary() WalletPaymentsCommerce];
  swift_unknownObjectRelease();
  id v3 = [v2 UserProofing];
  swift_unknownObjectRelease();
  id v4 = [v3 Result];
  swift_unknownObjectRelease();
  *(void *)(v1 + 16) = v4;
  type metadata accessor for BMUserProofingEventFactory();
  uint64_t v5 = swift_allocObject();
  id v6 = [objc_allocWithZone((Class)IdentityProofingBiomeDataDeletionManager) init];
  v17[3] = v0;
  v17[4] = &off_1006F8EA0;
  v17[0] = v1;
  type metadata accessor for IdentityProofingBiomeManager();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v8 = sub_1000279F4((uint64_t)v17, v0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = *v10;
  uint64_t v15 = v0;
  uint64_t v16 = &off_1006F8EA0;
  *(void *)&long long v14 = v12;
  v7[9] = 90;
  sub_10000C6B4(&v14, (uint64_t)(v7 + 2));
  v7[7] = v5;
  v7[8] = v6;
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v17);
  return v7;
}

id sub_1005E87F8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DIPPushNotificationManager()) init];
  qword_1007608C8 = (uint64_t)result;
  return result;
}

id sub_1005E8828()
{
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  id v6 = &v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_coreidvdTopic];
  *id v6 = 0xD00000000000001ALL;
  v6[1] = 0x800000010065AA80;
  uint64_t v7 = &v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pdsClientId];
  *uint64_t v7 = 0xD000000000000012;
  v7[1] = 0x800000010062AAC0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_proofingSessionId];
  *uint64_t v8 = 0xD000000000000011;
  v8[1] = 0x8000000100643330;
  v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pdsEnvironment] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pushConnection] = 0;
  sub_100025C28(0, (unint64_t *)&qword_1007208E0);
  uint64_t v9 = v0;
  static DispatchQoS.unspecified.getter();
  long long v14 = _swiftEmptyArrayStorage;
  sub_1005EDCE4((unint64_t *)&qword_10071FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007764((uint64_t *)&unk_100726420);
  sub_100031134((unint64_t *)&qword_10071FF70, (uint64_t *)&unk_100726420);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  *(void *)&v9[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_dispatchQueue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  uint64_t v10 = (objc_class *)type metadata accessor for DIPPushNotificationManager();
  v13.receiver = v9;
  v13.super_class = v10;
  return [super init];
}

uint64_t sub_1005E8B50()
{
  v1[24] = v0;
  uint64_t v2 = type metadata accessor for DIPError();
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DIPError.Code();
  v1[28] = v3;
  v1[29] = *(void *)(v3 - 8);
  v1[30] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[31] = v4;
  v1[32] = *(void *)(v4 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return _swift_task_switch(sub_1005E8D64, 0, 0);
}

uint64_t sub_1005E8D64()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pushConnection;
  v0[43] = OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pushConnection;
  uint64_t v3 = *(void **)(v1 + v2);
  v0[44] = v3;
  if (v3)
  {
    id v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void *))v0[1];
    return v5(v3);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[45] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1005E8F40;
    return sub_1005EC23C();
  }
}

uint64_t sub_1005E8F40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 368) = a1;
  *(void *)(v3 + 376) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005E906C, 0, 0);
}

uint64_t sub_1005E906C()
{
  uint64_t v71 = v0;
  defaultLogger()();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[46];
    unint64_t v3 = v0[47];
    uint64_t v5 = v0[32];
    uint64_t v68 = v0[31];
    uint64_t v69 = v0[42];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    swift_bridgeObjectRetain();
    v0[23] = sub_100110D58(v4, v3, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Using APS Connection environment %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(v69, v68);
  }
  else
  {
    uint64_t v8 = v0[42];
    uint64_t v9 = v0[31];
    uint64_t v10 = v0[32];
    swift_bridgeObjectRelease_n();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v7(v8, v9);
  }
  v0[48] = v7;
  uint64_t v11 = v0[43];
  uint64_t v12 = v0[24];
  objc_super v13 = *(void **)(v12 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_dispatchQueue);
  id v14 = objc_allocWithZone((Class)APSConnection);
  id v15 = v13;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v14 initWithEnvironmentName:v16 namedDelegatePort:v17 queue:v15];

  long long v19 = *(void **)(v12 + v11);
  *(void *)(v12 + v11) = v18;

  uint64_t v20 = *(void **)(v12 + v11);
  if (v20
    && (v21 = v0[43], v22 = v0[24], [v20 setDelegate:v22], (uint64_t v23 = *(void **)(v22 + v21)) != 0)
    && (id v24 = [v23 publicToken]) != 0)
  {
    double v25 = v24;
    uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    Swift::String v29 = Data.base16EncodedString()();
    sub_10000C5F4(v26, v28);
    defaultLogger()();
    swift_bridgeObjectRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = v0[41];
    uint64_t v34 = v0[31];
    if (v32)
    {
      uint64_t v67 = v0[31];
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      swift_bridgeObjectRetain();
      v0[22] = sub_100110D58(v29._countAndFlagsBits, (unint64_t)v29._object, &v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "===> DIPPushNotificationManager APS pushtoken = %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v36 = v67;
      uint64_t v37 = v33;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    defaultLogger()();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      Swift::String v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "===> DIPPushNotificationManager APS pushtoken = NOT AVAILABLE", v40, 2u);
      swift_slowDealloc();
    }
    uint64_t v33 = v0[40];
    uint64_t v34 = v0[31];
  }
  uint64_t v37 = v33;
  uint64_t v36 = v34;
LABEL_13:
  v7(v37, v36);
  id v41 = [self standardUserDefaults];
  NSString v42 = String._bridgeToObjectiveC()();
  unsigned int v43 = [v41 BOOLForKey:v42];

  if (v43)
  {
    defaultLogger()();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Using pds push sandbox environment due to user defaults setting", v46, 2u);
      swift_slowDealloc();
    }
    uint64_t v47 = v0[39];
    uint64_t v48 = v0[31];
    uint64_t v49 = v0[24];

    v7(v47, v48);
    *(unsigned char *)(v49 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pdsEnvironment) = 1;
  }
  else
  {
    defaultLogger()();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Using pds production environment by default", v52, 2u);
      swift_slowDealloc();
    }
    uint64_t v53 = v0[38];
    uint64_t v54 = v0[31];

    v7(v53, v54);
  }
  type metadata accessor for DIPAccountManager();
  static DIPAccountManager.sharedInstance.getter();
  sub_10000C728(v0 + 15, v0[18]);
  dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()();
  uint64_t v55 = v0[24];
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)(v0 + 15));
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v57 = [self userWithDSID:v56];
  v0[49] = v57;

  uint64_t v58 = *(char *)(v55 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_pdsEnvironment);
  id v59 = objc_allocWithZone((Class)PDSRegistration);
  swift_bridgeObjectRetain();
  NSString v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v61 = String._bridgeToObjectiveC()();
  v0[50] = [v59 initWithTopic:v60 qualifier:v61 pushEnvironment:v58];

  id v62 = objc_allocWithZone((Class)PDSRegistrar);
  swift_bridgeObjectRetain();
  id v63 = sub_1005EBE0C();
  v0[51] = v63;
  uint64_t v64 = v63;
  v0[2] = v0;
  v0[7] = v0 + 20;
  v0[3] = sub_1005E9D0C;
  uint64_t v65 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1005EA8B8;
  v0[13] = &unk_100709DC8;
  v0[14] = v65;
  [v64 currentRegistrationsForUser:v57 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005E9D0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 416) = v1;
  if (v1) {
    os_log_type_t v2 = sub_1005EA4AC;
  }
  else {
    os_log_type_t v2 = sub_1005E9E48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005E9E48()
{
  char v1 = sub_10020F778(*(void *)(v0 + 400), *(void *)(v0 + 160));
  swift_bridgeObjectRelease();
  if (v1)
  {
    defaultLogger()();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "PDS found a previous registration, skipping", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v6 = *(void *)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 248);

    v5(v6, v7);
  }
  else
  {
    defaultLogger()();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "PDS no existing registration found, adding a new one", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 400);
    uint64_t v11 = *(void **)(v0 + 408);
    id v14 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v13 = *(void *)(v0 + 392);
    uint64_t v15 = *(void *)(v0 + 296);
    uint64_t v16 = *(void *)(v0 + 248);

    v14(v15, v16);
    *(void *)(v0 + 168) = 0;
    unsigned int v17 = [v11 addRegistration:v12 toUser:v13 error:v0 + 168];
    id v18 = *(void **)(v0 + 168);
    if (!v17)
    {
      uint64_t v34 = *(void **)(v0 + 400);
      uint64_t v33 = *(void **)(v0 + 408);
      uint64_t v35 = *(void **)(v0 + 392);
      id v36 = v18;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v38 = *(void *)(v0 + 232);
      uint64_t v37 = *(void *)(v0 + 240);
      uint64_t v39 = *(void *)(v0 + 224);
      Swift::String v40 = (void *)_convertErrorToNSError(_:)();
      id v41 = [v40 code];

      NSString v42 = *(void (**)(uint64_t, void, uint64_t))(v38 + 104);
      v42(v37, enum case for DIPError.Code.invalidAppleAccount(_:), v39);
      uint64_t v43 = DIPError.Code.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      if (v41 == (id)v43)
      {
        defaultLogger()();
        uint64_t v44 = Logger.logObject.getter();
        os_log_type_t v45 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl((void *)&_mh_execute_header, v44, v45, "Ignoring account not signed in errors for PDS registration", v46, 2u);
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
        }
        (*(void (**)(void, void))(v0 + 384))(*(void *)(v0 + 272), *(void *)(v0 + 248));
      }
      else
      {
        uint64_t v47 = *(void *)(v0 + 264);
        uint64_t v52 = *(void *)(v0 + 248);
        uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
        uint64_t v48 = *(void *)(v0 + 216);
        uint64_t v49 = *(void *)(v0 + 200);
        uint64_t v50 = *(void *)(v0 + 208);
        v42(*(void *)(v0 + 240), enum case for DIPError.Code.pdsRegistrationError(_:), *(void *)(v0 + 224));
        swift_errorRetain();
        sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
        sub_1005EDCE4((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
        swift_allocError();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v51, v48, v49);
        defaultLogger()();
        DIPRecordError(_:message:log:)();
        swift_errorRelease();
        v53(v47, v52);
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
        swift_errorRelease();
      }
      goto LABEL_12;
    }
    id v19 = v18;
  }
  defaultLogger()();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "PDS registration complete", v22, 2u);
    swift_slowDealloc();
  }
  id v24 = *(void **)(v0 + 400);
  uint64_t v23 = *(void **)(v0 + 408);
  double v25 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v27 = *(void *)(v0 + 248);

  v25(v26, v27);
LABEL_12:
  unint64_t v28 = *(void **)(*(void *)(v0 + 192) + *(void *)(v0 + 344));
  id v29 = *(id *)(v0 + 352);
  id v30 = v28;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v31 = *(uint64_t (**)(void *))(v0 + 8);
  return v31(v28);
}

uint64_t sub_1005EA4AC()
{
  char v1 = *(void **)(v0 + 408);
  os_log_type_t v3 = *(void **)(v0 + 392);
  os_log_type_t v2 = *(void **)(v0 + 400);
  swift_willThrow();

  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  id v8 = [v7 code];

  os_log_type_t v9 = *(void (**)(uint64_t, void, uint64_t))(v5 + 104);
  v9(v4, enum case for DIPError.Code.invalidAppleAccount(_:), v6);
  uint64_t v10 = DIPError.Code.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v8 == (id)v10)
  {
    defaultLogger()();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Ignoring account not signed in errors for PDS registration", v13, 2u);
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    (*(void (**)(void, void))(v0 + 384))(*(void *)(v0 + 272), *(void *)(v0 + 248));
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v24 = *(void *)(v0 + 248);
    double v25 = *(void (**)(uint64_t, uint64_t))(v0 + 384);
    uint64_t v15 = *(void *)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    v9(*(void *)(v0 + 240), enum case for DIPError.Code.pdsRegistrationError(_:), *(void *)(v0 + 224));
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_1005EDCE4((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v15, v16);
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    swift_errorRelease();
    v25(v14, v24);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_errorRelease();
  }
  id v19 = *(void **)(*(void *)(v0 + 192) + *(void *)(v0 + 344));
  id v20 = *(id *)(v0 + 352);
  id v21 = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
  return v22(v19);
}

uint64_t sub_1005EA8B8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100007764((uint64_t *)&unk_100723450);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_100025C28(0, (unint64_t *)&qword_100727908);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1005EA994()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)&v0[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_dispatchQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_1005EBD4C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100593800;
  aBlock[3] = &unk_100709D78;
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = v0;
  static DispatchQoS.unspecified.getter();
  v13[1] = &_swiftEmptyArrayStorage;
  sub_1005EDCE4((unint64_t *)&unk_1007223A0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007764((uint64_t *)&unk_1007208F0);
  sub_100031134(&qword_1007223B0, (uint64_t *)&unk_1007208F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

void sub_1005EAC40(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  id v15 = (id)qword_1007600B8;
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  OS_dispatch_group.wait(timeout:)();

  v16(v14, v8);
  if (static DispatchTimeoutResult.== infix(_:_:)())
  {
    defaultLogger()();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Timed out waiting for the daemon to be initialized, proceeding to enable push", v19, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v2);
  }
  *(void *)(swift_allocObject() + 16) = a1;
  id v20 = a1;
  sub_100007764((uint64_t *)&unk_100734598);
  runAsyncAndBlock<A>(file:function:line:_:)();
  swift_release();
  id v21 = v31;
  if (v31)
  {
    sub_100007764(&qword_100730CD0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100611020;
    *(void *)(v22 + 32) = 0xD000000000000035;
    *(void *)(v22 + 40) = 0x800000010065A830;
    uint64_t v23 = *(void *)&v20[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_coreidvdTopic + 8];
    *(void *)(v22 + 48) = *(void *)&v20[OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_coreidvdTopic];
    *(void *)(v22 + 56) = v23;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 _setEnabledTopics:isa];

    v25._object = (void *)0x800000010065A870;
    v26._uint64_t countAndFlagsBits = 0x3166323864616636;
    v26._object = (void *)0xE800000000000000;
    v25._uint64_t countAndFlagsBits = 0xD000000000000021;
    logMilestone(tag:description:)(v26, v25);
  }
  else
  {
    defaultLogger()();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "unable to enable push because no connection available", v29, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
  }
}

uint64_t sub_1005EB0C0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10051B348;
  return sub_1005E8B50();
}

uint64_t sub_1005EB154(void *a1)
{
  uint64_t v2 = type metadata accessor for DIPError();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DIPError.Code();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v49 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v50 = (char *)&v49 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v49 - v16;
  *(void *)(swift_allocObject() + 16) = a1;
  a1;
  sub_100007764((uint64_t *)&unk_100734598);
  runAsyncAndBlock<A>(file:function:line:_:)();
  swift_release();
  if (v58[0])
  {
    id v51 = v58[0];
    uint64_t v52 = v9;
    [v58[0] _setEnabledTopics:0];
    type metadata accessor for DIPAccountManager();
    static DIPAccountManager.sharedInstance.getter();
    sub_10000C728(v58, (uint64_t)v58[3]);
    dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()();
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v58);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [self userWithDSID:v22];

    objc_allocWithZone((Class)PDSRegistrar);
    swift_bridgeObjectRetain();
    id v24 = sub_1005EBE0C();
    uint64_t v39 = v24;
    v58[0] = 0;
    if ([v24 removeAllRegistrationsFromUser:v23 error:v58])
    {
      Swift::String v40 = v23;
      id v41 = v58[0];
      NSString v42 = v50;
      defaultLogger()();
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      BOOL v45 = os_log_type_enabled(v43, v44);
      uint64_t v46 = v52;
      if (v45)
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "removed all PDS registrations", v47, 2u);
        swift_slowDealloc();
      }

      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v42, v8);
    }
    else
    {
      id v48 = v58[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v25 = v52;
      Swift::String v26 = (void *)_convertErrorToNSError(_:)();
      id v27 = [v26 code];

      os_log_type_t v28 = *(void (**)(char *, void, uint64_t))(v5 + 104);
      v28(v7, enum case for DIPError.Code.invalidAppleAccount(_:), v4);
      uint64_t v29 = DIPError.Code.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (v27 == (id)v29)
      {
        uint64_t v30 = v53;
        defaultLogger()();
        os_log_type_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Ignoring account not signed in errors for PDS registration", v33, 2u);
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {

          swift_errorRelease();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v30, v8);
      }
      else
      {
        v28(v7, enum case for DIPError.Code.pdsDeregistrationError(_:), v4);
        swift_errorRetain();
        sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v34 = v55;
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
        sub_1005EDCE4((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
        uint64_t v35 = v57;
        swift_allocError();
        uint64_t v36 = v56;
        (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v37, v34, v35);
        uint64_t v38 = v54;
        defaultLogger()();
        DIPRecordError(_:message:log:)();

        swift_errorRelease();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v38, v8);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
        return swift_errorRelease();
      }
    }
  }
  else
  {
    defaultLogger()();
    os_log_type_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "unable to disable push because no connection available", v20, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  }
}

uint64_t sub_1005EB99C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1005EBA30;
  return sub_1005E8B50();
}

uint64_t sub_1005EBA30(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005EDDD4, 0, 0);
}

id sub_1005EBC34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DIPPushNotificationManager();
  return [super dealloc];
}

uint64_t type metadata accessor for DIPPushNotificationManager()
{
  return self;
}

uint64_t sub_1005EBD14()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005EBD4C()
{
  sub_1005EAC40(*(void **)(v0 + 16));
}

uint64_t sub_1005EBD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005EBD64()
{
  return swift_release();
}

uint64_t sub_1005EBD6C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C494;
  return sub_1005EB0C0(a1);
}

id sub_1005EBE0C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = 0;
  id v2 = [v0 initWithClientID:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1005EBED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v22[3] = sub_100025C28(0, &qword_1007345B0);
  v22[4] = &off_100708278;
  *(_OWORD *)(a6 + 56) = 0u;
  v22[0] = a1;
  *(_OWORD *)(a6 + 72) = 0u;
  *(void *)(a6 + 88) = 0;
  uint64_t v12 = a6 + OBJC_IVAR____TtC8coreidvd40IdentityProofingUserNotificationProvider_staticWorkflow;
  uint64_t v13 = type metadata accessor for IdentityProofingStaticWorkflow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_100030A10((uint64_t)v22, a6 + 16);
  sub_1005EDC14(a2, (uint64_t)&v17);
  if (v18)
  {
    sub_10000C6CC(a2, &qword_100731F58);
    _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v22);
    sub_10000C6B4(&v17, (uint64_t)&v19);
  }
  else
  {
    if (qword_1007600C0
      && (swift_retain(), uint64_t v14 = (void *)sub_10003A450(), v15 = v14, swift_release(), v14))
    {
      *((void *)&v20 + 1) = type metadata accessor for IdentityWatchSessionManagementListener();
      id v21 = &off_100708288;
      *(void *)&long long v19 = v15;
      sub_10000C6CC(a2, &qword_100731F58);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v22);
    }
    else
    {
      sub_10000C6CC(a2, &qword_100731F58);
      _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v22);
      id v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
    }
    sub_10000C6CC((uint64_t)&v17, &qword_100731F58);
  }
  swift_beginAccess();
  sub_1005EDC7C((uint64_t)&v19, a6 + 56);
  swift_endAccess();
  *(void *)(a6 + 96) = a3;
  *(void *)(a6 + 104) = a4;
  *(void *)(a6 + 112) = a5;
  return a6;
}

uint64_t sub_1005EC0D0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IdentityProofingActionNotificationFlow();
  v18[3] = v6;
  v18[4] = &off_1006FABE0;
  v18[0] = a2;
  type metadata accessor for IdentityProofingCleanupProvider();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_1000279F4((uint64_t)v18, v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  uint64_t v12 = *v10;
  uint64_t v16 = v6;
  long long v17 = &off_1006FABE0;
  *(void *)&long long v15 = v12;
  if (!a1)
  {
    if (qword_1007600C0)
    {
      swift_retain();
      a1 = (void *)sub_10003A450();
      id v13 = a1;
      swift_release();
    }
    else
    {
      a1 = 0;
    }
  }
  *(void *)(v7 + 16) = a1;
  sub_10000C6B4(&v15, v7 + 24);
  *(void *)(v7 + 64) = a3;
  _s8coreidvd24DigitalPresentmentHelperVwxx_0((uint64_t)v18);
  return v7;
}

uint64_t sub_1005EC23C()
{
  uint64_t v1 = type metadata accessor for DIPError.Code();
  v0[29] = v1;
  v0[30] = *(void *)(v1 - 8);
  v0[31] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for DIPError();
  v0[32] = v2;
  v0[33] = *(void *)(v2 - 8);
  v0[34] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TimeoutError();
  v0[35] = v3;
  v0[36] = *(void *)(v3 - 8);
  v0[37] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v0[38] = v4;
  v0[39] = *(void *)(v4 - 8);
  v0[40] = swift_task_alloc();
  v0[41] = swift_task_alloc();
  v0[42] = swift_task_alloc();
  return _swift_task_switch(sub_1005EC428, 0, 0);
}

uint64_t sub_1005EC428()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self containerWithIdentifier:v1];
  v0[43] = v2;

  v0[21] = 0x69746375646F7270;
  v0[22] = 0xEA00000000006E6FLL;
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1005EC598;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10044B79C;
  v0[13] = &unk_100709DE0;
  v0[14] = v3;
  [v2 serverPreferredPushEnvironmentWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005EC598()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 352) = v1;
  if (v1)
  {
    id v2 = sub_1005EC92C;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v2 = sub_1005EC6B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005EC6B4()
{
  long long v19 = v0;
  uint64_t v1 = v0[23];
  v0[21] = v1;
  unint64_t v2 = v0[24];
  v0[22] = v2;
  swift_bridgeObjectRetain();
  defaultLogger()();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v14 = (void *)v0[43];
    uint64_t v15 = v0[39];
    uint64_t v16 = v0[38];
    uint64_t v17 = v0[42];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    swift_bridgeObjectRetain();
    v0[28] = sub_100110D58(v1, v2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "The APS server environment is %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v6 = v0[42];
    uint64_t v7 = (void *)v0[43];
    uint64_t v8 = v0[38];
    uint64_t v9 = v0[39];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  swift_beginAccess();
  uint64_t v10 = v0[21];
  uint64_t v11 = v0[22];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v12(v10, v11);
}

uint64_t sub_1005EC92C()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 352);
  swift_willThrow();
  *(void *)(v0 + 200) = v1;
  swift_errorRetain();
  sub_100007764((uint64_t *)&unk_100723450);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 328);
    uint64_t v3 = *(void *)(v0 + 312);
    id v24 = *(void **)(v0 + 344);
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v28 = *(void *)(v0 + 280);
    uint64_t v30 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v5 = *(void *)(v0 + 264);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 248);
    uint64_t v9 = *(void *)(v0 + 232);
    swift_errorRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v8, enum case for DIPError.Code.timeoutTaskFetchAPSEnv(_:), v9);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_1005EDCE4((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v10, v4, v6);
    defaultLogger()();
    DIPRecordError(_:message:log:)();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v25);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v28);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    defaultLogger()();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v14 = *(void *)(v0 + 320);
    uint64_t v16 = *(void *)(v0 + 304);
    if (v13)
    {
      uint64_t v31 = *(void *)(v0 + 320);
      id v27 = *(void **)(v0 + 344);
      uint64_t v29 = *(void *)(v0 + 304);
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      swift_getErrorValue();
      uint64_t v18 = Error.localizedDescription.getter();
      *(void *)(v0 + 216) = sub_100110D58(v18, v19, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to determine server preferred push environment due to error: %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v31, v29);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
  }
  swift_beginAccess();
  uint64_t v20 = *(void *)(v0 + 168);
  uint64_t v21 = *(void *)(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v22(v20, v21);
}

void sub_1005ECDC0(void *a1)
{
  uint64_t v2 = type metadata accessor for DIPError.Code();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v95 = (char *)v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DIPError();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  __chkstk_darwin(v6);
  unint64_t v100 = (char *)v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v104 = (char *)v89 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v103 = (char *)v89 - v16;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v89 - v17;
  defaultLogger()();
  id v19 = a1;
  uint64_t v20 = Logger.logObject.getter();
  int v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
  uint64_t v94 = v12;
  uint64_t v93 = v2;
  uint64_t v92 = v3;
  if (v22)
  {
    int v91 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    *(void *)&v109[0] = v90;
    *(_DWORD *)uint64_t v23 = 136315394;
    if (a1)
    {
      uint64_t v105 = v8;
      id v24 = [v19 topic];
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v99 = v9;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        *(void *)&long long v111 = sub_100110D58(v26, v28, (uint64_t *)v109);
        v89[1] = (char *)&v111 + 8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        id v29 = [v19 userInfo];
        if (v29)
        {
          uint64_t v30 = v29;
          static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v31 = Dictionary.description.getter();
          unint64_t v33 = v32;
          swift_bridgeObjectRelease();
          *(void *)&long long v111 = sub_100110D58(v31, v33, (uint64_t *)v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v91, "<=== APS message received in DIPPushNotificationManager, topic = %s, message = %s", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v9 = v99;
          uint64_t v34 = *(void (**)(char *, uint64_t))(v99 + 8);
          uint64_t v8 = v105;
          v34(v18, v105);
          goto LABEL_7;
        }
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }

    __break(1u);
LABEL_42:

    __break(1u);
    goto LABEL_43;
  }

  uint64_t v34 = *(void (**)(char *, uint64_t))(v9 + 8);
  v34(v18, v8);
  if (!a1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_7:
  uint64_t v35 = v106;
  uint64_t v37 = *(void *)(v106 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_coreidvdTopic);
  uint64_t v36 = *(void *)(v106 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_coreidvdTopic + 8);
  swift_bridgeObjectRetain();
  id v38 = [v19 topic];
  if (v38)
  {
    uint64_t v39 = v38;
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    if (v37 == v40 && v36 == v42)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43)
    {
LABEL_13:
      id v44 = [self standardUserDefaults];
      v45._uint64_t countAndFlagsBits = 0xD000000000000031;
      v45._object = (void *)0x800000010065A9E0;
      Swift::Bool v46 = NSUserDefaults.internalBool(forKey:)(v45);

      if (v46)
      {
        uint64_t v47 = v103;
        defaultLogger()();
        id v48 = Logger.logObject.getter();
        os_log_type_t v49 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v48, v49))
        {
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "Internal settings for skipPendingActionsFromPushNotification has been enabled. Will not request pending actions", v50, 2u);
          swift_slowDealloc();
        }

LABEL_34:
        v34(v47, v8);
        return;
      }
      uint64_t v60 = *(void *)(v35 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_proofingSessionId + 8);
      *(void *)&long long v111 = *(void *)(v35 + OBJC_IVAR____TtC8coreidvd26DIPPushNotificationManager_proofingSessionId);
      *((void *)&v111 + 1) = v60;
      swift_bridgeObjectRetain_n();
      AnyHashable.init<A>(_:)();
      id v61 = [v19 userInfo];
      if (v61)
      {
        id v62 = v61;
        uint64_t v63 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRelease();

        if (*(void *)(v63 + 16) && (unint64_t v64 = sub_100590504((uint64_t)v109), (v65 & 1) != 0))
        {
          sub_10003BC28(*(void *)(v63 + 56) + 32 * v64, (uint64_t)&v111);
        }
        else
        {
          long long v111 = 0u;
          long long v112 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_1001D90FC((uint64_t)v109);
        uint64_t v105 = v8;
        if (*((void *)&v112 + 1))
        {
          int v66 = swift_dynamicCast();
          uint64_t v67 = v107;
          if (!v66) {
            uint64_t v67 = 0;
          }
          uint64_t v106 = v67;
          if (v66) {
            uint64_t v68 = v108;
          }
          else {
            uint64_t v68 = 0;
          }
        }
        else
        {
          sub_10000C6CC((uint64_t)&v111, (uint64_t *)&unk_100727200);
          uint64_t v106 = 0;
          uint64_t v68 = 0;
        }
        unint64_t v104 = (char *)v34;
        type metadata accessor for IdentityProofingPendingActionsWebService();
        uint64_t v69 = swift_allocObject();
        *(void *)(v69 + 16) = 0;
        uint64_t v110 = 0;
        memset(v109, 0, sizeof(v109));
        id v70 = [objc_allocWithZone((Class)PKPaymentService) init];
        type metadata accessor for IdentityProofingConfigProvider();
        uint64_t v71 = swift_allocObject();
        type metadata accessor for IdentityProofingTextReplacementProvider();
        swift_allocObject();
        uint64_t v72 = IdentityProofingTextReplacementProvider.init()();
        type metadata accessor for IdentityProofingDeviceMigrationManagerFactory();
        uint64_t v73 = swift_allocObject();
        type metadata accessor for IdentityProofingWorkflowProvider();
        uint64_t v74 = swift_allocObject();
        *(void *)(v74 + 16) = v73;
        type metadata accessor for IdentityProofingUserNotificationProvider();
        uint64_t v75 = swift_allocObject();
        uint64_t v76 = sub_1005EBED8((uint64_t)v70, (uint64_t)v109, v71, v72, v74, v75);
        uint64_t v77 = sub_1005E8390();
        type metadata accessor for IdentityProofingActionNotificationFlow();
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = 0;
        sub_100025C28(0, (unint64_t *)&qword_1007208E0);
        uint64_t v80 = v100;
        uint64_t v79 = v101;
        uint64_t v81 = v102;
        (*(void (**)(char *, void, uint64_t))(v101 + 104))(v100, enum case for DispatchQoS.QoSClass.default(_:), v102);
        uint64_t v82 = static OS_dispatch_queue.global(qos:)();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
        uint64_t v83 = sub_1005EC0D0(0, v78, v82);
        uint64_t v84 = sub_1005E860C();
        if (qword_10071F580 != -1) {
          swift_once();
        }
        uint64_t v85 = (void *)qword_1007607E8;
        type metadata accessor for IdentityWatchProvisioningManagerFactory();
        uint64_t v86 = swift_allocObject();
        type metadata accessor for IdentityProofingPendingActionsFlow();
        swift_allocObject();
        sub_100473B6C(2, v69, v76, v77, 0, v83, (uint64_t)v84, v85, 0, v86);
        v87._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
        v87._object = (void *)0x800000010065AA20;
        v88._uint64_t countAndFlagsBits = 0x3635323263343465;
        v88._object = (void *)0xE800000000000000;
        logMilestone(tag:description:)(v88, v87);
        sub_100481CF8(v106, v68, 0, 1);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
LABEL_44:
      __break(1u);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v51 = [v19 userInfo];
  if (v51)
  {
    uint64_t v52 = v51;
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v54 = [self notificationFromRemoteNotificationDictionary:isa];

    if (v54)
    {
      uint64_t v47 = v104;
      defaultLogger()();
      uint64_t v55 = v54;
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        id v59 = (void *)swift_slowAlloc();
        uint64_t v99 = v9;
        uint64_t v105 = v8;
        *(_DWORD *)uint64_t v58 = 138412290;
        *(void *)&v109[0] = v55;
        uint64_t v55 = v55;
        uint64_t v8 = v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v59 = v54;

        _os_log_impl((void *)&_mh_execute_header, v56, v57, "APS didReceiveMessage %@", v58, 0xCu);
        sub_100007764(&qword_1007208D0);
        swift_arrayDestroy();
        uint64_t v47 = v104;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v56 = v55;
      }

      goto LABEL_34;
    }
  }
}

uint64_t sub_1005EDC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007764(&qword_100731F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EDC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007764(&qword_100731F58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005EDCE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005EDD2C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100025D64;
  return sub_1005EB99C(a1);
}

uint64_t sub_1005EDDD8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100007764((uint64_t *)&unk_100723450);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1005EDE8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a4)
  {
    sub_100007764((uint64_t *)&unk_100723450);
    uint64_t v6 = swift_allocError();
    *id v7 = a4;
    id v8 = a4;
    return _swift_continuation_throwingResumeWithError(v4, v6);
  }
  else
  {
    type metadata accessor for UUID();
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = *(uint64_t **)(*(void *)(v4 + 64) + 40);
    *uint64_t v11 = v10;
    v11[1] = a3;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1005EDF5C()
{
  v1[17] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  return _swift_task_switch(sub_1005EE080, 0, 0);
}

uint64_t sub_1005EE080()
{
  defaultLogger()();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "DIPACLCleanerUpper deleteBoundACL", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[17];

  id v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[29] = v8;
  v0[30] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v4, v5);
  uint64_t v9 = *(void **)(*(void *)(v7 + 16) + 16);
  v0[2] = v0;
  v0[7] = v0 + 37;
  v0[3] = sub_1005EE238;
  uint64_t v10 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1005EDDD8;
  v0[13] = &unk_100709E60;
  v0[14] = v10;
  [v9 deleteGlobalAuthACLWithOutcomeCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005EE238()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    os_log_type_t v2 = sub_1005EE84C;
  }
  else {
    os_log_type_t v2 = sub_1005EE348;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005EE348()
{
  uint64_t v38 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 296);
  if (v1 == 1)
  {
    defaultLogger()();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "DIPACLCleanerUpper phone acl was deleted", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 144);

    v5(v6, v7);
    type metadata accessor for DaemonAnalytics();
    static DaemonAnalytics.sendBoundBiometricDeletedEvent()();
  }
  else
  {
    defaultLogger()();
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "DIPACLCleanerUpper no phone acl to delete", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v13 = *(void *)(v0 + 144);

    v11(v12, v13);
  }
  defaultLogger()();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Will attempt to delete all the proofing sessions in progress as the bound Auth ACL is deleted...", v16, 2u);
    swift_slowDealloc();
  }
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
  uint64_t v18 = *(void *)(v0 + 200);
  uint64_t v19 = *(void *)(v0 + 144);

  v17(v18, v19);
  swift_retain();
  sub_100430D1C();
  swift_release();
  if (v1)
  {
    defaultLogger()();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      BOOL v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "DIPACLCleanerUpper deleting watch global auth acl", v22, 2u);
      swift_slowDealloc();
    }
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v24 = *(void *)(v0 + 192);
    uint64_t v26 = *(void *)(v0 + 136);
    uint64_t v25 = *(void *)(v0 + 144);

    v23(v24, v25);
    *(void *)(v0 + 256) = *(void *)(v26 + 24);
    unint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v27;
    *unint64_t v27 = v0;
    v27[1] = sub_1005EE964;
    return sub_10045709C();
  }
  else
  {
    defaultLogger()();
    id v29 = Logger.logObject.getter();
    int v30 = static os_log_type_t.info.getter();
    BOOL v31 = os_log_type_enabled(v29, (os_log_type_t)v30);
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 144);
    if (v31)
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 136315138;
      *(void *)(v0 + 120) = sub_100110D58(0xD000000000000010, 0x80000001006592C0, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v30, "No acl deleted in %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v32(v33, v34);
    }
    else
    {

      v32(v33, v34);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
}

uint64_t sub_1005EE84C()
{
  swift_willThrow();
  int v1 = (void (*)(uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  defaultLogger()();
  DIPRecordError(_:message:log:)();
  swift_errorRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005EE964()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005EEF0C;
  }
  else {
    uint64_t v2 = sub_1005EEA78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005EEA78()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1005EEB18;
  return sub_10001BBB4();
}

uint64_t sub_1005EEB18(uint64_t a1)
{
  *(void *)(*(void *)v1 + 288) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1005EEC18, 0, 0);
}

uint64_t sub_1005EEC18()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 288);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 288) deviceID];

    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    sub_1005EFCE0(v3, v5);
    swift_bridgeObjectRelease();
    defaultLogger()();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    os_log_type_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 144);
    if (v8)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v0 + 128) = sub_100110D58(0xD000000000000010, 0x80000001006592C0, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Deleted ACL in %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v9(v10, v11);
    }
    else
    {

      v9(v10, v11);
    }
  }
  else
  {
    defaultLogger()();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to update prearm trust state for watch because of invalid session", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 144);

    v16(v17, v18);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1005EEF0C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  defaultLogger()();
  DIPRecordError(_:message:log:)();
  swift_errorRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1005EF014(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100100EB4(a2, a3);
  if (!v3)
  {
    uint64_t v11 = (void *)v10;
    if (v10)
    {
      StoredPrearmTrust.update(requiresDeletion:)(1);
      sub_1000FFAB4();
      defaultLogger()();
      swift_bridgeObjectRetain_n();
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v15 = swift_slowAlloc();
        int v20 = v14;
        uint64_t v16 = (uint8_t *)v15;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v23 = v21;
        os_log_t v19 = v12;
        *(_DWORD *)uint64_t v16 = 136315138;
        v18[1] = v16 + 4;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_100110D58(a2, (unint64_t)a3, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_log_t v17 = v19;
        _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v20, "Successfully updated prearm trust to be deleted for watch with pairingID: %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

uint64_t sub_1005EF290()
{
  v1[18] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[22] = v3;
  v1[23] = *(void *)(v3 - 8);
  v1[24] = swift_task_alloc();
  return _swift_task_switch(sub_1005EF3AC, 0, 0);
}

uint64_t sub_1005EF3AC()
{
  type metadata accessor for IdentityProofingDataContext();
  swift_allocObject();
  sub_1000FF820();
  v0[25] = v1;
  uint64_t v2 = v1;
  uint64_t v4 = v0[23];
  uint64_t v3 = v0[24];
  uint64_t v5 = v0[22];
  uint64_t v6 = swift_allocObject();
  v0[26] = v6;
  *(void *)(v6 + 16) = sub_1005EFC8C;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);
  swift_retain();
  v8(v3, v7, v5);
  swift_retain();
  os_log_type_t v9 = (void *)swift_task_alloc();
  v0[27] = v9;
  *os_log_type_t v9 = v0;
  v9[1] = sub_1005EF588;
  uint64_t v10 = v0[24];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 17, v10, sub_100463304, v6, &type metadata for Int);
}

uint64_t sub_1005EF588()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[23] + 8))(v2[24], v2[22]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_1005EF910;
  }
  else
  {
    swift_release();
    v2[29] = v2[17];
    uint64_t v3 = sub_1005EF6FC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1005EF6FC()
{
  uint64_t v1 = *(void **)(*(void *)(v0[18] + 16) + 16);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1005EF800;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1005EDE8C;
  v0[13] = &unk_100709E48;
  v0[14] = v2;
  [v1 globalAuthACLTemplateUUIDsAndCredentialCountWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1005EF800()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 240) = v1;
  if (v1) {
    uint64_t v2 = sub_1005EFAD8;
  }
  else {
    uint64_t v2 = sub_1005EF994;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005EF910()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005EF994()
{
  uint64_t v1 = (void *)v0[15];
  if ((uint64_t)v0[16] <= 0 && v0[29] <= 0)
  {
    swift_bridgeObjectRelease();
    defaultLogger()();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "fetchCredentialUUIDsForAuthACL: no bound credential present", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[20];
    uint64_t v6 = v0[21];
    uint64_t v8 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v9 = (uint64_t (*)(void *))v0[1];
  return v9(v1);
}

uint64_t sub_1005EFAD8()
{
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1005EFB64(uint64_t *a1@<X8>)
{
  type metadata accessor for StoredPrearmTrust();
  uint64_t v3 = (void *)static StoredPrearmTrust.fetchRequest()();
  unint64_t v4 = NSManagedObjectContext.fetch<A>(_:)();

  if (!v1)
  {
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *a1 = v5;
  }
}

uint64_t sub_1005EFC20()
{
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DIPACLCleanerUpper()
{
  return self;
}

void sub_1005EFC8C(uint64_t *a1@<X8>)
{
}

uint64_t sub_1005EFCA8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005EFCE0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for DIPError.Code();
  v27[1] = *(void *)(v4 - 8);
  v27[2] = v4;
  __chkstk_darwin(v4);
  v27[4] = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DIPError();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  v27[3] = (char *)v27 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v27 - v14;
  defaultLogger()();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v30 = v6;
  BOOL v31 = v11;
  uint64_t v29 = v8;
  uint64_t v32 = a1;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    unint64_t v28 = v7;
    int v20 = (uint8_t *)v19;
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)int v20 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100110D58(a1, a2, &v35);
    uint64_t v8 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Trying to update prearm trust for watch with pairingID: %s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v33 + 8);
  v21(v15, v8);
  unint64_t v28 = v21;
  type metadata accessor for IdentityProofingDataContext();
  swift_allocObject();
  sub_1000FF820();
  uint64_t v23 = v22;
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v32;
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000FFE3C((uint64_t)sub_1005F046C, (uint64_t)v24);
  swift_release();
  return swift_release();
}

uint64_t sub_1005F042C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005F046C()
{
  sub_1005EF014(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void *sub_1005F048C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  sub_100007764((uint64_t *)&unk_100730C90);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(_DWORD *)(v13 + 32) = 0;
  v6[2] = a1;
  v6[7] = a6;
  v6[8] = v13;
  if (a3 || !a1)
  {
LABEL_5:
    v6[3] = a2;
    void v6[4] = a3;
    if (a5) {
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  if (v14)
  {
    a2 = *(void *)(v14 + 16);
    a3 = *(void *)(v14 + 24);
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  v6[3] = 0x414C494156414E55;
  void v6[4] = 0xEB00000000454C42;
  if (a5) {
    goto LABEL_12;
  }
LABEL_6:
  if (a1)
  {
    uint64_t v15 = *(void *)(a1 + 24);
    if (v15)
    {
      a4 = *(void *)(v15 + 64);
      a5 = *(void *)(v15 + 72);
      swift_bridgeObjectRetain();
    }
    else
    {
      a5 = 0xEB00000000454C42;
      a4 = 0x414C494156414E55;
    }
  }
LABEL_12:
  v6[5] = a4;
  v6[6] = a5;
  return v6;
}

uint64_t sub_1005F058C()
{
  v1[8] = v0;
  uint64_t v2 = type metadata accessor for DIPError.Code();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DIPError();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return _swift_task_switch(sub_1005F075C, 0, 0);
}

uint64_t sub_1005F075C()
{
  unint64_t v64 = v0;
  id v1 = [self standardUserDefaults];
  v2._object = (void *)0x800000010065AEA0;
  v2._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  Swift::Bool v3 = NSUserDefaults.internalBool(forKey:)(v2);

  if (v3)
  {
    defaultLogger()();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "User settings forcing fallback profile", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0 + 8;
    uint64_t v8 = v0[24];
    uint64_t v9 = v0[15];
    uint64_t v10 = v0[16];

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v8, v9);
    uint64_t v12 = sub_1005F4618();
    id v61 = v11;
    if (v13)
    {
      uint64_t v58 = v12;
      uint64_t v60 = v13;
      defaultLogger()();
      swift_retain_n();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = *v7;
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        v63[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136446210;
        uint64_t v39 = *v7;
        if (*(void *)(v37 + 32))
        {
          uint64_t v53 = *(void *)(v39 + 24);
          unint64_t v40 = *(void *)(v37 + 32);
        }
        else
        {
          uint64_t v51 = *(void *)(v39 + 16);
          if (v51)
          {
            uint64_t v52 = *(void *)(v51 + 24);
            if (v52)
            {
              unint64_t v40 = *(void *)(v52 + 24);
              uint64_t v53 = *(void *)(v52 + 16);
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v53 = 0x414C494156414E55;
              unint64_t v40 = 0xEB00000000454C42;
            }
          }
          else
          {
            uint64_t v53 = 0x6E776F6E6B6E753CLL;
            unint64_t v40 = 0xE90000000000003ELL;
          }
        }
        uint64_t v62 = v0[23];
        uint64_t v54 = v0[15];
        swift_bridgeObjectRetain();
        v0[7] = sub_100110D58(v53, v40, v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Using fallback assessment profile for %{public}s due to user defaults setting", v38, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v11(v62, v54);
      }
      else
      {
        uint64_t v47 = v0[23];
        uint64_t v48 = v0[15];
        swift_release_n();

        v11(v47, v48);
      }
LABEL_34:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v50 = (uint64_t (*)(void *, uint64_t))v0[1];
      return v50(v58, v60);
    }
    defaultLogger()();
    swift_retain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = *v7;
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136446210;
      unint64_t v18 = *(void *)(v16 + 32);
      uint64_t v19 = *v7;
      if (v18)
      {
        uint64_t v20 = *(void *)(v19 + 24);
        unint64_t v21 = v18;
      }
      else
      {
        uint64_t v44 = *(void *)(v19 + 16);
        if (v44)
        {
          uint64_t v45 = *(void *)(v44 + 24);
          if (v45)
          {
            uint64_t v20 = *(void *)(v45 + 16);
            unint64_t v21 = *(void *)(v45 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v20 = 0x414C494156414E55;
            unint64_t v21 = 0xEB00000000454C42;
          }
        }
        else
        {
          uint64_t v20 = 0x6E776F6E6B6E753CLL;
          unint64_t v21 = 0xE90000000000003ELL;
        }
      }
      uint64_t v57 = v0[15];
      uint64_t v59 = v0[22];
      swift_bridgeObjectRetain();
      v0[6] = sub_100110D58(v20, v21, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to get a fallback profile for %{public}s despite user defaults setting; falling back to normal profile flow",
        v17,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v61(v59, v57);
    }
    else
    {
      uint64_t v22 = v0[22];
      uint64_t v23 = v0[15];
      swift_release_n();

      v11(v22, v23);
    }
  }
  uint64_t v24 = *(void **)(v0[8] + 16);
  v0[25] = v24;
  if (v24)
  {
    uint64_t v25 = v24[746];
    if (v25)
    {
      uint64_t v26 = (void *)v24[745];
      swift_bridgeObjectRetain();
      defaultLogger()();
      swift_retain_n();
      unint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      uint64_t v58 = v26;
      uint64_t v60 = v25;
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = v0[8];
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        v63[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136446210;
        if (*(void *)(v29 + 32))
        {
          uint64_t v31 = *(void *)(v0[8] + 24);
          unint64_t v32 = *(void *)(v29 + 32);
        }
        else
        {
          uint64_t v46 = v24[3];
          if (v46)
          {
            uint64_t v31 = *(void *)(v46 + 16);
            unint64_t v32 = *(void *)(v46 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v31 = 0x414C494156414E55;
            unint64_t v32 = 0xEB00000000454C42;
          }
        }
        uint64_t v49 = v0[16];
        uint64_t v55 = v0[15];
        uint64_t v56 = v0[21];
        swift_bridgeObjectRetain();
        v0[5] = sub_100110D58(v31, v32, v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Using assessment profile from workflow for %{public}s", v30, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v56, v55);
      }
      else
      {
        uint64_t v41 = v0[21];
        uint64_t v42 = v0[15];
        uint64_t v43 = v0[16];
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
      }
      type metadata accessor for DaemonAnalytics();
      static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
      goto LABEL_34;
    }
  }
  uint64_t v33 = (void *)swift_task_alloc();
  v0[26] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1005F1108;
  return sub_1005F3834();
}

uint64_t sub_1005F1108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[27] = a1;
  v4[28] = a2;
  v4[29] = v2;
  swift_task_dealloc();
  if (v2) {
    os_log_type_t v5 = sub_1005F1B08;
  }
  else {
    os_log_type_t v5 = sub_1005F1220;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1005F1220()
{
  uint64_t v65 = v0;
  if (v0[28])
  {
    defaultLogger()();
    swift_retain_n();
    id v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = v0[8];
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136446210;
      unint64_t v6 = *(void *)(v3 + 32);
      v64[0] = v5;
      if (v6)
      {
        uint64_t v7 = *(void *)(v0[8] + 24);
        unint64_t v8 = v6;
      }
      else
      {
        uint64_t v44 = v0[25];
        if (v44)
        {
          uint64_t v45 = *(void *)(v44 + 24);
          if (v45)
          {
            uint64_t v7 = *(void *)(v45 + 16);
            unint64_t v8 = *(void *)(v45 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v7 = 0x414C494156414E55;
            unint64_t v8 = 0xEB00000000454C42;
          }
        }
        else
        {
          uint64_t v7 = 0x6E776F6E6B6E753CLL;
          unint64_t v8 = 0xE90000000000003ELL;
        }
      }
      uint64_t v61 = v0[20];
      uint64_t v9 = v0[16];
      uint64_t v59 = v0[15];
      swift_bridgeObjectRetain();
      v0[4] = sub_100110D58(v7, v8, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Using assessment profile from CDN for %{public}s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v61, v59);
    }
    else
    {
      uint64_t v29 = v0[20];
      uint64_t v30 = v0[15];
      uint64_t v31 = v0[16];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    type metadata accessor for DaemonAnalytics();
    static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
    uint64_t v62 = v0[28];
    uint64_t v63 = (void *)v0[27];
    goto LABEL_29;
  }
  uint64_t v10 = v0[29];
  uint64_t v11 = sub_1005F4618();
  if (v10)
  {
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[12];
    uint64_t v18 = v0[13];
    (*(void (**)(void, void, void))(v0[10] + 104))(v0[11], enum case for DIPError.Code.internalError(_:), v0[9]);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_10000C588();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v15, v17);
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v16);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    swift_errorRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    defaultLogger()();
    swift_retain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = v0[8];
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      unint64_t v25 = *(void *)(v22 + 32);
      v64[0] = v24;
      if (v25)
      {
        uint64_t v26 = *(void *)(v0[8] + 24);
        unint64_t v27 = v25;
      }
      else
      {
        uint64_t v46 = v0[25];
        if (v46)
        {
          uint64_t v47 = *(void *)(v46 + 24);
          if (v47)
          {
            uint64_t v26 = *(void *)(v47 + 16);
            unint64_t v27 = *(void *)(v47 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v26 = 0x414C494156414E55;
            unint64_t v27 = 0xEB00000000454C42;
          }
        }
        else
        {
          uint64_t v26 = 0x6E776F6E6B6E753CLL;
          unint64_t v27 = 0xE90000000000003ELL;
        }
      }
      uint64_t v60 = v0[18];
      uint64_t v28 = v0[16];
      uint64_t v58 = v0[15];
      swift_bridgeObjectRetain();
      v0[2] = sub_100110D58(v26, v27, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "No profile available for %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v60, v58);
    }
    else
    {
      uint64_t v32 = v0[18];
      uint64_t v33 = v0[15];
      uint64_t v34 = v0[16];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    type metadata accessor for DaemonAnalytics();
    static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    goto LABEL_29;
  }
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  swift_bridgeObjectRelease();
  if (!v36) {
    goto LABEL_8;
  }
  defaultLogger()();
  swift_retain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.debug.getter();
  uint64_t v63 = v35;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = v0[8];
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v40 = 136446210;
    if (*(void *)(v39 + 32))
    {
      uint64_t v41 = v36;
      uint64_t v55 = *(void *)(v0[8] + 24);
      unint64_t v42 = *(void *)(v39 + 32);
    }
    else
    {
      uint64_t v53 = v0[25];
      if (v53)
      {
        uint64_t v41 = v36;
        uint64_t v54 = *(void *)(v53 + 24);
        if (v54)
        {
          unint64_t v42 = *(void *)(v54 + 24);
          uint64_t v55 = *(void *)(v54 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v55 = 0x414C494156414E55;
          unint64_t v42 = 0xEB00000000454C42;
        }
      }
      else
      {
        uint64_t v41 = v36;
        uint64_t v55 = 0x6E776F6E6B6E753CLL;
        unint64_t v42 = 0xE90000000000003ELL;
      }
    }
    uint64_t v43 = v0[16];
    uint64_t v56 = v0[15];
    uint64_t v57 = v0[19];
    swift_bridgeObjectRetain();
    v0[3] = sub_100110D58(v55, v42, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Using fallback assessment profile for %{public}s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v57, v56);
  }
  else
  {
    uint64_t v41 = v36;
    uint64_t v48 = v0[19];
    uint64_t v49 = v0[15];
    uint64_t v50 = v0[16];
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  uint64_t v62 = v41;
  type metadata accessor for DaemonAnalytics();
  static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = (uint64_t (*)(void *, uint64_t))v0[1];
  return v51(v63, v62);
}

uint64_t sub_1005F1B08()
{
  uint64_t v47 = v0;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void))(v0[10] + 104))(v0[11]);
  swift_errorRetain();
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  sub_10000C588();
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v3, v5);
  defaultLogger()();
  DIPRecordError(_:message:log:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  swift_errorRelease();
  uint64_t v20 = sub_1005F4618();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    defaultLogger()();
    swift_retain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    uint64_t v45 = v22;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = v0[8];
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      v46[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446210;
      if (*(void *)(v25 + 32))
      {
        unint64_t v27 = v20;
        uint64_t v39 = *(void *)(v0[8] + 24);
        unint64_t v28 = *(void *)(v25 + 32);
      }
      else
      {
        uint64_t v37 = v0[25];
        if (v37)
        {
          unint64_t v27 = v20;
          uint64_t v38 = *(void *)(v37 + 24);
          if (v38)
          {
            unint64_t v28 = *(void *)(v38 + 24);
            uint64_t v39 = *(void *)(v38 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v39 = 0x414C494156414E55;
            unint64_t v28 = 0xEB00000000454C42;
          }
        }
        else
        {
          unint64_t v27 = v20;
          uint64_t v39 = 0x6E776F6E6B6E753CLL;
          unint64_t v28 = 0xE90000000000003ELL;
        }
      }
      uint64_t v29 = v0[16];
      uint64_t v40 = v0[15];
      uint64_t v42 = v0[19];
      swift_bridgeObjectRetain();
      v0[3] = sub_100110D58(v39, v28, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Using fallback assessment profile for %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v42, v40);
    }
    else
    {
      unint64_t v27 = v20;
      uint64_t v32 = v0[19];
      uint64_t v33 = v0[15];
      uint64_t v34 = v0[16];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
    }
    uint64_t v44 = v27;
    type metadata accessor for DaemonAnalytics();
    static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
  }
  else
  {
    defaultLogger()();
    swift_retain_n();
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = v0[8];
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      unint64_t v13 = *(void *)(v10 + 32);
      v46[0] = v12;
      if (v13)
      {
        uint64_t v14 = *(void *)(v0[8] + 24);
        unint64_t v15 = v13;
      }
      else
      {
        uint64_t v30 = v0[25];
        if (v30)
        {
          uint64_t v31 = *(void *)(v30 + 24);
          if (v31)
          {
            uint64_t v14 = *(void *)(v31 + 16);
            unint64_t v15 = *(void *)(v31 + 24);
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v14 = 0x414C494156414E55;
            unint64_t v15 = 0xEB00000000454C42;
          }
        }
        else
        {
          uint64_t v14 = 0x6E776F6E6B6E753CLL;
          unint64_t v15 = 0xE90000000000003ELL;
        }
      }
      uint64_t v16 = v0[16];
      uint64_t v41 = v0[15];
      uint64_t v43 = v0[18];
      swift_bridgeObjectRetain();
      v0[2] = sub_100110D58(v14, v15, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "No profile available for %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v43, v41);
    }
    else
    {
      uint64_t v17 = v0[18];
      uint64_t v18 = v0[15];
      uint64_t v19 = v0[16];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    type metadata accessor for DaemonAnalytics();
    static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void *, uint64_t))v0[1];
  return v35(v44, v45);
}

uint64_t sub_1005F2300()
{
  v1[5] = v0;
  uint64_t v2 = type metadata accessor for DIPError.Code();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DIPError();
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TimeoutError();
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v1[15] = v5;
  v1[16] = *(void *)(v5 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return _swift_task_switch(sub_1005F24E4, 0, 0);
}

uint64_t sub_1005F24E4()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(os_unfair_lock_s **)(v0[5] + 64);
  v0[19] = v1;
  uint64_t v2 = (uint64_t *)&v1[4];
  uint64_t v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1004E7C44(v2, &v17);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v18;
  if (v18)
  {
    uint64_t v5 = v17;
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v6(v5, v4);
  }
  uint64_t v8 = *(void *)(v0[5] + 56);
  v0[20] = v8;
  if (!v8)
  {
    defaultLogger()();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Cannot fetch server time seed because no web service was provided", v13, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = v0[18];
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[16];

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    uint64_t v5 = 0;
    goto LABEL_3;
  }
  swift_retain_n();
  os_log_type_t v9 = (void *)swift_task_alloc();
  v0[21] = v9;
  *os_log_type_t v9 = v0;
  v9[1] = sub_1005F2758;
  v10.n128_u64[0] = 4.0;
  return withTaskTimeoutHandler<A>(timeout:operation:)(v0 + 2, &unk_100734820, v8, &type metadata for String, v10);
}

uint64_t sub_1005F2758()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005F29B8;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1005F2874;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1005F2874()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[19];
  uint64_t v3 = (os_unfair_lock_s *)(v2 + 32);
  uint64_t v4 = (void *)(v2 + 16);
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v6;
  swift_bridgeObjectRetain();
  os_unfair_lock_lock(v3);
  sub_1004EF4AC(v4);
  if (v1)
  {
    uint64_t v8 = (os_unfair_lock_s *)(v0[19] + 32);
    os_unfair_lock_unlock(v8);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v0[19] + 32));
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v9 = (void (*)(uint64_t, uint64_t))v0[1];
    v9(v5, v6);
  }
}

uint64_t sub_1005F29B8()
{
  uint64_t v1 = v0[22];
  swift_release();
  v0[4] = v1;
  swift_errorRetain();
  sub_100007764((uint64_t *)&unk_100723450);
  char v2 = swift_dynamicCast();
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v24 = v0[15];
  if (v2)
  {
    uint64_t v21 = v0[13];
    uint64_t v5 = v0[11];
    uint64_t v22 = v0[12];
    uint64_t v23 = v0[14];
    uint64_t v7 = v0[9];
    uint64_t v6 = v0[10];
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[8];
    uint64_t v10 = v0[6];
    swift_errorRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v9, enum case for DIPError.Code.timeoutNetworkFetchSTS(_:), v10);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_10000C588();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v11, v5, v7);
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v24);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v13 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v15 = v0[8];
    uint64_t v14 = v0[9];
    uint64_t v17 = v0[6];
    uint64_t v16 = v0[7];
    swift_errorRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v15, enum case for DIPError.Code.internalError(_:), v17);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_10000C588();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v18, v12, v14);
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    swift_errorRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v24);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void, void))v0[1];
  return v19(0, 0);
}

uint64_t sub_1005F2D90(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  char v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *char v2 = v1;
  v2[1] = sub_1005F2E28;
  return sub_100041204(0);
}

uint64_t sub_1005F2E28(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a1;
    return _swift_task_switch(sub_1005F6568, 0, 0);
  }
}

uint64_t sub_1005F2F84()
{
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return _swift_task_switch(sub_1005F3054, 0, 0);
}

uint64_t sub_1005F3054()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = v1[7];
  v0[19] = v2;
  if (v2)
  {
    if (v1[4])
    {
      uint64_t v3 = v1[3];
      uint64_t v4 = v1[4];
      goto LABEL_4;
    }
    uint64_t v14 = v1[2];
    if (v14)
    {
      uint64_t v15 = *(void *)(v14 + 24);
      if (v15)
      {
        uint64_t v3 = *(void *)(v15 + 16);
        uint64_t v4 = *(void *)(v15 + 24);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v4 = 0xEB00000000454C42;
        uint64_t v3 = 0x414C494156414E55;
      }
LABEL_4:
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1005F562C(v3, v4, 1, v0 + 2);
      swift_bridgeObjectRelease();
      uint64_t v5 = (void *)swift_task_alloc();
      v0[20] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1005F3314;
      return sub_1000424B0((uint64_t)(v0 + 2));
    }
    swift_retain();
    defaultLogger()();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No workflow or workflow ID provided; skipping profile refresh",
        v18,
        2u);
      swift_slowDealloc();
    }
    uint64_t v19 = v0[18];
    uint64_t v20 = v0[15];
    uint64_t v21 = v0[16];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  else
  {
    defaultLogger()();
    uint64_t v7 = Logger.logObject.getter();
    uint64_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, (os_log_type_t)v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v8, "No assessment static web service provided; skipping profile refresh",
        v9,
        2u);
      swift_slowDealloc();
    }
    uint64_t v11 = v0[16];
    uint64_t v10 = v0[17];
    uint64_t v12 = v0[15];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1005F3314()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  sub_100044BEC(v1);
  return _swift_task_switch(sub_1005F341C, 0, 0);
}

uint64_t sub_1005F341C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005F348C()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_1005F354C, 0, 0);
}

uint64_t sub_1005F354C()
{
  uint64_t v1 = *(void *)(v0[2] + 56);
  v0[6] = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[7] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1005F36D0;
    return sub_100043580();
  }
  else
  {
    defaultLogger()();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No assessment static web service provided; skipping sts refresh",
        v6,
        2u);
      swift_slowDealloc();
    }
    uint64_t v8 = v0[4];
    uint64_t v7 = v0[5];
    uint64_t v9 = v0[3];

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1005F36D0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1005F37CC, 0, 0);
}

uint64_t sub_1005F37CC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005F3834()
{
  v1[17] = v0;
  uint64_t v2 = type metadata accessor for DIPError();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for TimeoutError();
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for DIPError.Code();
  v1[24] = v4;
  v1[25] = *(void *)(v4 - 8);
  v1[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v1[27] = v5;
  v1[28] = *(void *)(v5 - 8);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  return _swift_task_switch(sub_1005F3A18, 0, 0);
}

uint64_t sub_1005F3A18()
{
  uint64_t v1 = *(void **)(v0 + 136);
  if (v1[4])
  {
    uint64_t v2 = v1[3];
    uint64_t v3 = v1[4];
    goto LABEL_3;
  }
  uint64_t v11 = v1[2];
  if (v11)
  {
    uint64_t v12 = *(void *)(v11 + 24);
    if (v12)
    {
      uint64_t v2 = *(void *)(v12 + 16);
      uint64_t v3 = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v3 = 0xEB00000000454C42;
      uint64_t v2 = 0x414C494156414E55;
    }
LABEL_3:
    swift_bridgeObjectRetain();
    sub_1005F562C(v2, v3, 0, (void *)(v0 + 16));
    swift_bridgeObjectRelease();
    uint64_t v4 = v1[7];
    *(void *)(v0 + 248) = v4;
    if (v4)
    {
      uint64_t v5 = swift_allocObject();
      long long v6 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v5 + 56) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v5 + 72) = v6;
      long long v7 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v5 + 88) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v5 + 104) = v7;
      long long v8 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v5 + 24) = *(_OWORD *)(v0 + 16);
      *(void *)(v0 + 256) = v5;
      *(void *)(v5 + 16) = v4;
      *(_OWORD *)(v5 + 40) = v8;
      swift_retain_n();
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_1005F3E10;
      v10.n128_u64[0] = 4.0;
      return withTaskTimeoutHandler<A>(timeout:operation:)(v0 + 112, &unk_100734810, v5, &type metadata for String, v10);
    }
    else
    {
      sub_100044BEC(v0 + 16);
      defaultLogger()();
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "No assessment static web service provided; skipping profile fetch",
          v15,
          2u);
        swift_slowDealloc();
      }
      uint64_t v16 = *(void *)(v0 + 240);
      uint64_t v17 = *(void *)(v0 + 216);
      uint64_t v18 = *(void *)(v0 + 224);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v19 = *(uint64_t (**)(void, void))(v0 + 8);
      return v19(0, 0);
    }
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 200) + 104))(*(void *)(v0 + 208), enum case for DIPError.Code.badLogic(_:), *(void *)(v0 + 192));
  sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
  sub_10000C588();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1005F3E10()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005F3FE0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1005F3F2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005F3F2C()
{
  swift_release();
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1005F3FE0()
{
  uint64_t v1 = v0[34];
  swift_release();
  v0[16] = v1;
  swift_errorRetain();
  sub_100007764((uint64_t *)&unk_100723450);
  int v2 = swift_dynamicCast();
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[26];
  uint64_t v18 = v0[27];
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[25];
  if (v2)
  {
    uint64_t v15 = v0[22];
    uint64_t v16 = v0[21];
    uint64_t v17 = v0[23];
    uint64_t v8 = v0[19];
    uint64_t v14 = v0[20];
    uint64_t v9 = v0[18];
    swift_errorRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for DIPError.Code.timeoutNetworkFetchProfile(_:), v6);
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    sub_10000C588();
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v14, v9);
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v18);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v9);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void, void))v0[1];
    return v11(0, 0);
  }
  else
  {
    swift_errorRelease();
    defaultLogger()();
    DIPRecordError(_:message:log:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v18);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v5, enum case for DIPError.Code.internalError(_:), v6);
    swift_errorRetain();
    sub_1000073C4((uint64_t)_swiftEmptyArrayStorage);
    sub_10000C588();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    swift_errorRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_1005F43F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_1005F4498;
  return sub_10003F828(a3, 0);
}

uint64_t sub_1005F4498(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a1;
    return _swift_task_switch(sub_1005F45F4, 0, 0);
  }
}

uint64_t sub_1005F45F4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);
  *uint64_t v2 = *(void *)(v0 + 40);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1005F4618()
{
  uint64_t v2 = type metadata accessor for DIPError.Code();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v58 - v11;
  unint64_t v13 = v0[6];
  if (v13)
  {
    uint64_t v58 = v10;
    uint64_t v59 = v6;
    uint64_t v60 = v1;
    uint64_t v61 = v5;
    uint64_t v14 = v0[5];
    unint64_t v15 = v13;
    goto LABEL_3;
  }
  uint64_t v35 = v0[2];
  if (v35)
  {
    uint64_t v58 = v10;
    uint64_t v59 = v6;
    uint64_t v60 = v1;
    uint64_t v61 = v5;
    uint64_t v36 = *(void *)(v35 + 24);
    if (v36)
    {
      uint64_t v14 = *(void *)(v36 + 64);
      unint64_t v15 = *(void *)(v36 + 72);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v15 = 0xEB00000000454C42;
      uint64_t v14 = 0x414C494156414E55;
    }
LABEL_3:
    id v16 = objc_allocWithZone((Class)NSBundle);
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 initWithPath:v17];

    id v62 = v18;
    if (v18)
    {
      sub_1005F52A8(v14, v15);
      if (v19)
      {
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v21 = String._bridgeToObjectiveC()();
        id v22 = [v62 pathForResource:v20 ofType:0 inDirectory:v21];

        if (v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;

          uint64_t v26 = v60;
          uint64_t v27 = String.init(contentsOfFile:)();
          if (v26)
          {
            (*(void (**)(void *, void, uint64_t))(v3 + 104))(v61, enum case for DIPError.Code.filesystemError(_:), v2);
            sub_100007764((uint64_t *)&unk_1007225C0);
            unint64_t v28 = (int *)(sub_100007764((uint64_t *)&unk_100723460) - 8);
            unint64_t v29 = (*(unsigned __int8 *)(*(void *)v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v28 + 80);
            uint64_t v30 = swift_allocObject();
            *(_OWORD *)(v30 + 16) = xmmword_100610730;
            uint64_t v31 = (void *)(v30 + v29);
            uint64_t v32 = (uint64_t *)(v30 + v29 + v28[14]);
            uint64_t v33 = enum case for DIPError.PropertyKey.filesystemPath(_:);
            uint64_t v34 = type metadata accessor for DIPError.PropertyKey();
            (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v31, v33, v34);
            v32[3] = (uint64_t)&type metadata for String;
            *uint64_t v32 = v23;
            v32[1] = v25;
            sub_10015C504(v30);
            type metadata accessor for DIPError();
            sub_10000C588();
            swift_allocError();
            DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
            swift_willThrow();
            swift_errorRelease();
          }
          else
          {
            uint64_t v31 = (void *)v27;

            swift_bridgeObjectRelease();
          }
        }
        else
        {
          defaultLogger()();
          swift_bridgeObjectRetain();
          uint64_t v54 = Logger.logObject.getter();
          os_log_type_t v55 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v54, v55))
          {
            uint64_t v56 = (uint8_t *)swift_slowAlloc();
            uint64_t v64 = swift_slowAlloc();
            *(_DWORD *)uint64_t v56 = 136446210;
            swift_bridgeObjectRetain();
            uint64_t v63 = sub_100110D58(v14, v15, &v64);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v54, v55, "No fallback profile was found for workflow %{public}s", v56, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }

          (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v59);
          return 0;
        }
      }
      else
      {
        uint64_t v31 = v61;
        (*(void (**)(void *, void, uint64_t))(v3 + 104))(v61, enum case for DIPError.Code.badLogic(_:), v2);
        sub_100007764((uint64_t *)&unk_1007225C0);
        uint64_t v43 = (int *)(sub_100007764((uint64_t *)&unk_100723460) - 8);
        unint64_t v44 = (*(unsigned __int8 *)(*(void *)v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v43 + 80);
        uint64_t v45 = swift_allocObject();
        *(_OWORD *)(v45 + 16) = xmmword_100610730;
        unint64_t v46 = v45 + v44;
        uint64_t v47 = (uint64_t *)(v46 + v43[14]);
        uint64_t v48 = enum case for DIPError.PropertyKey.spProviderID(_:);
        uint64_t v49 = type metadata accessor for DIPError.PropertyKey();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v46, v48, v49);
        v47[3] = (uint64_t)&type metadata for String;
        *uint64_t v47 = v14;
        v47[1] = v15;
        sub_10015C504(v45);
        type metadata accessor for DIPError();
        sub_10000C588();
        swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
        swift_willThrow();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(void *, void, uint64_t))(v3 + 104))(v61, enum case for DIPError.Code.filesystemError(_:), v2);
      sub_100007764((uint64_t *)&unk_1007225C0);
      uint64_t v37 = (int *)(sub_100007764((uint64_t *)&unk_100723460) - 8);
      unint64_t v38 = (*(unsigned __int8 *)(*(void *)v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v37 + 80);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_100610730;
      unint64_t v40 = v39 + v38;
      uint64_t v31 = (void *)(v40 + v37[14]);
      uint64_t v41 = enum case for DIPError.PropertyKey.filesystemPath(_:);
      uint64_t v42 = type metadata accessor for DIPError.PropertyKey();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v40, v41, v42);
      v31[3] = &type metadata for String;
      *uint64_t v31 = 0xD000000000000039;
      v31[1] = 0x800000010065AC20;
      sub_10015C504(v39);
      type metadata accessor for DIPError();
      sub_10000C588();
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
      swift_willThrow();
    }
    return v31;
  }
  uint64_t v50 = v10;
  defaultLogger()();
  uint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Skipping fallback profile because no provider ID is available", v53, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v6);
  return 0;
}

uint64_t sub_1005F5074()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProfileManager()
{
  return self;
}

uint64_t sub_1005F50F0(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = result;
    swift_stdlib_random();
    uint64_t result = 0;
    if (-v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F5180(uint64_t a1, uint64_t a2)
{
  if (qword_10071F4B0 != -1) {
    swift_once();
  }
  uint64_t v4 = *(os_unfair_lock_s **)(qword_1007602E0 + 16);
  uint64_t v5 = (uint64_t)&v4[4];
  uint64_t v6 = v4 + 52;
  os_unfair_lock_lock(v4 + 52);
  sub_1000262B4(v5, v10);
  os_unfair_lock_unlock(v6);
  uint64_t v7 = v11;
  sub_10003BDD0((uint64_t)v11);
  sub_1000262D0((uint64_t)v10);
  if (v7)
  {
    uint64_t v8 = v7(a1, a2);
    sub_10003BEDC((uint64_t)v7);
  }
  else
  {
    type metadata accessor for ProfileManager();
    uint64_t v8 = swift_allocObject();
    sub_1005F048C(a1, 0, 0, 0, 0, a2);
    swift_retain();
    swift_retain();
  }
  return v8;
}

uint64_t sub_1005F52A8(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v33 - 8);
  uint64_t v5 = __chkstk_darwin(v33);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = type metadata accessor for String.Encoding();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  swift_bridgeObjectRetain();
  v14._uint64_t countAndFlagsBits = 45;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  v15._object = (void *)0x800000010065AD60;
  v15._uint64_t countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v15);
  static String.Encoding.utf8.getter();
  uint64_t v16 = String.data(using:allowLossyConversion:)();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (v18 >> 60 == 15)
  {
    defaultLogger()();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      NSString v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Error converting fallback provider ID to data", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v33);
    return 0;
  }
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v23 = (id)DigestSha256();

  if (!v23)
  {
    defaultLogger()();
    unint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Error hashing fallback provider ID", v30, 2u);
      swift_slowDealloc();
    }
    sub_10000C5E0(v16, v18);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v33);
    return 0;
  }
  uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  uint64_t countAndFlagsBits = Data.base16EncodedString()()._countAndFlagsBits;
  sub_10000C5F4(v24, v26);
  sub_10000C5E0(v16, v18);
  return countAndFlagsBits;
}

uint64_t sub_1005F562C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X8>)
{
  uint64_t v96 = a1;
  uint64_t v97 = a2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  uint64_t v95 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v90 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v88 = (char *)&v88 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v92 = (char *)&v88 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v89 = (char *)&v88 - v15;
  __chkstk_darwin(v14);
  unint64_t v104 = (char *)&v88 - v16;
  uint64_t v17 = type metadata accessor for Locale.Language();
  uint64_t v98 = *(void *)(v17 - 8);
  unint64_t v99 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007764(&qword_100729950);
  __chkstk_darwin(v20 - 8);
  id v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Locale();
  uint64_t v23 = *(void *)(v105 - 8);
  uint64_t v24 = __chkstk_darwin(v105);
  unint64_t v26 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v28 = (char *)&v88 - v27;
  uint64_t v29 = sub_100007764(&qword_100720910);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v88 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = [self mainBundle];
  id v33 = [v32 infoDictionary];

  int v91 = a3;
  if (!v33 || (uint64_t v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(), v33, !v34))
  {
    long long v108 = 0u;
    long long v109 = 0u;
    sub_10000C6CC((uint64_t)&v108, (uint64_t *)&unk_100727200);
    long long v108 = 0u;
    long long v109 = 0u;
    uint64_t v102 = 0x6E776F6E6B6E75;
    unint64_t v103 = 0xE700000000000000;
LABEL_10:
    sub_10000C6CC((uint64_t)&v108, (uint64_t *)&unk_100727200);
LABEL_11:
    uint64_t v100 = 0x6E776F6E6B6E75;
    unint64_t v101 = 0xE700000000000000;
    goto LABEL_12;
  }
  if (!*(void *)(v34 + 16))
  {
    long long v108 = 0u;
    long long v109 = 0u;
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  unint64_t v35 = sub_100590548(0x656C646E75424643, 0xEF6E6F6973726556);
  if ((v36 & 1) == 0)
  {
    long long v108 = 0u;
    long long v109 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  sub_10003BC28(*(void *)(v34 + 56) + 32 * v35, (uint64_t)&v108);
  swift_bridgeObjectRelease();
  if (!*((void *)&v109 + 1))
  {
LABEL_35:
    sub_10000C6CC((uint64_t)&v108, (uint64_t *)&unk_100727200);
LABEL_36:
    unint64_t v37 = 0xE700000000000000;
    uint64_t v38 = 0x6E776F6E6B6E75;
    if (!*(void *)(v34 + 16)) {
      goto LABEL_39;
    }
    goto LABEL_37;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_36;
  }
  uint64_t v38 = v106;
  unint64_t v37 = v107;
  if (!*(void *)(v34 + 16)) {
    goto LABEL_39;
  }
LABEL_37:
  unint64_t v74 = sub_100590548(0xD000000000000011, 0x800000010065AE20);
  if (v75)
  {
    sub_10003BC28(*(void *)(v34 + 56) + 32 * v74, (uint64_t)&v108);
    goto LABEL_40;
  }
LABEL_39:
  long long v108 = 0u;
  long long v109 = 0u;
LABEL_40:
  swift_bridgeObjectRelease();
  uint64_t v102 = v38;
  unint64_t v103 = v37;
  if (!*((void *)&v109 + 1)) {
    goto LABEL_10;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_11;
  }
  uint64_t v100 = v106;
  unint64_t v101 = v107;
LABEL_12:
  static Locale.current.getter();
  Locale.region.getter();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v23 + 8);
  v39(v28, v105);
  uint64_t v40 = type metadata accessor for Locale.Region();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v31, 1, v40) == 1)
  {
    sub_10000C6CC((uint64_t)v31, &qword_100720910);
    unint64_t v42 = 0xE700000000000000;
    uint64_t v93 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v93 = Locale.Region.identifier.getter();
    unint64_t v44 = v43;
    uint64_t v45 = v40;
    unint64_t v42 = v44;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v45);
  }
  uint64_t v47 = v98;
  unint64_t v46 = v99;
  static Locale.current.getter();
  Locale.language.getter();
  v39(v26, v105);
  Locale.Language.languageCode.getter();
  (*(void (**)(char *, unint64_t))(v47 + 8))(v19, v46);
  uint64_t v48 = type metadata accessor for Locale.LanguageCode();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v22, 1, v48) == 1)
  {
    sub_10000C6CC((uint64_t)v22, &qword_100729950);
    unint64_t v50 = 0xE700000000000000;
    uint64_t v51 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v51 = Locale.LanguageCode.identifier.getter();
    unint64_t v50 = v52;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v48);
  }
  uint64_t v53 = v104;
  id v54 = [self standardUserDefaults];
  v55._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v55._object = (void *)0x800000010065AE00;
  Swift::String_optional v56 = NSUserDefaults.internalString(forKey:)(v55);
  uint64_t countAndFlagsBits = v56.value._countAndFlagsBits;
  object = v56.value._object;

  if (v56.value._object)
  {
    defaultLogger()();
    swift_bridgeObjectRetain_n();
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v59, v60))
    {
      unint64_t v99 = v50;
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v105 = v51;
      *(void *)&long long v108 = v62;
      *(_DWORD *)uint64_t v61 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_100110D58(v56.value._countAndFlagsBits, (unint64_t)v56.value._object, (uint64_t *)&v108);
      unint64_t v50 = v99;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Forcing assessment bucket %{public}s due to user settings", v61, 0xCu);
      swift_arrayDestroy();
      uint64_t v51 = v105;
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v95 + 8))(v104, v94);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v94);
    }
    goto LABEL_27;
  }
  if (isInternalBuild()())
  {
    Swift::String_optional v63 = experimentalGroup()();
    uint64_t v64 = v92;
    if (v63.value._object)
    {
      if (v63.value._countAndFlagsBits == 0x7972726163 && v63.value._object == (void *)0xE500000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_44:
        uint64_t v77 = v89;
        defaultLogger()();
        uint64_t v78 = Logger.logObject.getter();
        os_log_type_t v79 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v80 = 0;
          _os_log_impl((void *)&_mh_execute_header, v78, v79, "Selected assessment bucket 4", v80, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v95 + 8))(v77, v94);
        object = (void *)0xE100000000000000;
        uint64_t countAndFlagsBits = 52;
        goto LABEL_27;
      }
      char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v76) {
        goto LABEL_44;
      }
    }
    defaultLogger()();
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Selected assessment bucket 3", v83, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v94);
    object = (void *)0xE100000000000000;
    uint64_t countAndFlagsBits = 51;
  }
  else if ((v91 & 1) != 0 || sub_1004F7F10(0x64uLL))
  {
    id v70 = v90;
    defaultLogger()();
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Selected assessment bucket 1", v73, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v70, v94);
    object = (void *)0xE100000000000000;
    uint64_t countAndFlagsBits = 49;
  }
  else
  {
    uint64_t v84 = v88;
    defaultLogger()();
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v85, v86))
    {
      Swift::String v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "Selected assessment bucket 0", v87, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v95 + 8))(v84, v94);
    object = (void *)0xE100000000000000;
    uint64_t countAndFlagsBits = 48;
  }
LABEL_27:
  uint64_t v65 = v96;
  uint64_t v66 = v93;
  uint64_t result = swift_bridgeObjectRetain();
  *a4 = v65;
  a4[1] = result;
  unint64_t v68 = v101;
  a4[2] = v100;
  a4[3] = v68;
  unint64_t v69 = v103;
  a4[4] = v102;
  a4[5] = v69;
  a4[6] = v66;
  a4[7] = v42;
  a4[8] = v51;
  a4[9] = v50;
  a4[10] = countAndFlagsBits;
  a4[11] = object;
  return result;
}

uint64_t sub_1005F6250()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1005F62B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000C494;
  return sub_1005F43F4(a1, v4, v1 + 24);
}

uint64_t sub_1005F6368(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100025D64;
  return sub_1005F2D90(a1);
}

void *sub_1005F6404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (qword_10071F4B0 != -1) {
    swift_once();
  }
  uint64_t v10 = *(os_unfair_lock_s **)(qword_1007602E0 + 16);
  uint64_t v11 = (uint64_t)&v10[4];
  uint64_t v12 = v10 + 52;
  os_unfair_lock_lock(v10 + 52);
  sub_1000262B4(v11, v17);
  os_unfair_lock_unlock(v12);
  uint64_t v13 = v18;
  sub_10003BDD0((uint64_t)v18);
  sub_1000262D0((uint64_t)v17);
  if (v13)
  {
    uint64_t v14 = (void *)v13(a1, a2, a5);
    sub_10003BEDC((uint64_t)v13);
  }
  else
  {
    type metadata accessor for ProfileManager();
    uint64_t v14 = (void *)swift_allocObject();
    sub_100007764((uint64_t *)&unk_100730C90);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(_DWORD *)(v15 + 32) = 0;
    v14[7] = a5;
    v14[8] = v15;
    v14[2] = 0;
    void v14[3] = a1;
    v14[4] = a2;
    v14[5] = a3;
    v14[6] = a4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v14;
}

uint64_t sub_1005F656C(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007608D0);
}

uint64_t sub_1005F65A0(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007608E8);
}

uint64_t sub_1005F65D4(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760900);
}

uint64_t sub_1005F6608(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760918);
}

uint64_t sub_1005F663C(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760930);
}

uint64_t sub_1005F6670(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760948);
}

uint64_t sub_1005F66A4(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760960);
}

uint64_t sub_1005F66D8(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760978);
}

uint64_t sub_1005F670C(uint64_t a1)
{
  return sub_1005F6818(a1, qword_100760990);
}

uint64_t sub_1005F6744(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007609A8);
}

uint64_t sub_1005F6778(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007609C0);
}

uint64_t sub_1005F67AC(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007609D8);
}

uint64_t sub_1005F67E0(uint64_t a1)
{
  return sub_1005F6818(a1, qword_1007609F0);
}

uint64_t sub_1005F6818(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Milestone();
  sub_10004440C(v3, a2);
  sub_1000443D4(v3, (uint64_t)a2);
  return Milestone.init(tag:description:)();
}

uint64_t sub_1005F688C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DIPError.Code();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)AsyncCoreDataStore.container.getter();
  if (v1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DIPError.Code.internalError(_:), v3);
    swift_errorRetain();
    sub_1000073C4((uint64_t)&_swiftEmptyArrayStorage);
    type metadata accessor for DIPError();
    sub_10000C588();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
    swift_willThrow();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v9 = v7;
    id v10 = [v7 newBackgroundContext];

    type metadata accessor for IdentityProofingAsyncDataContext();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v10;
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for IdentityProofingDataContainer()
{
  return self;
}

id sub_1005F6A90()
{
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  swift_unknownObjectWeakInit();
  uint64_t v11 = OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_notifyQueue;
  sub_1000309D0();
  uint64_t v6 = v0;
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = _swiftEmptyArrayStorage;
  sub_100025C64((unint64_t *)&qword_10071FF60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007764((uint64_t *)&unk_100726420);
  sub_100025CAC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  *(void *)&v0[v11] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v7 = &v6[OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_deviceLockStateNotification];
  *(void *)uint64_t v7 = 0xD00000000000001FLL;
  *((void *)v7 + 1) = 0x800000010065B260;
  *(_DWORD *)&v6[OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_notifyToken] = -1;

  uint64_t v8 = (objc_class *)type metadata accessor for DIPLockStateMonitor();
  v13.receiver = v6;
  v13.super_class = v8;
  return [super init];
}

uint64_t sub_1005F6D60(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DIPError.Code();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6);
  unint64_t v42 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  defaultLogger()();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v39 = v12;
  uint64_t v43 = a1;
  if (v17)
  {
    uint64_t v44 = v9;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v38 = v2;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_100110D58(a1, (unint64_t)a2, &aBlock);
    uint64_t v9 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Trying to register for phone lock/unlock events for prearming watch with pairingID: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v38;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v14, v8);
  uint64_t v21 = v45;
  id v22 = (int *)(v45 + OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_notifyToken);
  uint64_t result = swift_beginAccess();
  if (*v22 == -1)
  {
    unint64_t v37 = (uint64_t (*)(char *, uint64_t))v20;
    uint64_t v44 = v9;
    uint64_t v45 = v8;
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = v43;
    v25[2] = v24;
    v25[3] = v26;
    v25[4] = a2;
    uint64_t v27 = *(NSObject **)(v21 + OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_notifyQueue);
    unint64_t v50 = sub_1005F7F74;
    uint64_t v51 = v25;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v47 = 1107296256;
    uint64_t v48 = sub_1005F7784;
    uint64_t v49 = &unk_100709F18;
    unint64_t v28 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    uint64_t v29 = (const char *)(String.utf8CString.getter() + 32);
    swift_beginAccess();
    LODWORD(v27) = notify_register_dispatch(v29, v22, v27, v28);
    swift_endAccess();
    _Block_release(v28);
    swift_release();
    if (v27)
    {
      int *v22 = -1;
      uint64_t aBlock = 0;
      unint64_t v47 = 0xE000000000000000;
      _StringGuts.grow(_:)(92);
      v30._object = (void *)0x800000010065B130;
      v30._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      String.append(_:)(v30);
      v31._uint64_t countAndFlagsBits = v26;
      v31._object = a2;
      String.append(_:)(v31);
      (*(void (**)(char *, void, uint64_t))(v40 + 104))(v42, enum case for DIPError.Code.unableToRegisterForPhoneLockUnlockEvents(_:), v41);
      sub_1000073C4((uint64_t)&_swiftEmptyArrayStorage);
      type metadata accessor for DIPError();
      sub_100025C64((unint64_t *)&qword_10071F6E0, (void (*)(uint64_t))&type metadata accessor for DIPError);
      swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
      swift_willThrow();
      return swift_release();
    }
    else
    {
      id v32 = v39;
      defaultLogger()();
      swift_bridgeObjectRetain_n();
      id v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v38 = v3;
        unint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)unint64_t v35 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v53 = sub_100110D58(v26, (unint64_t)a2, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Successfully registered for phone lock state notifications to prearm watch with pairingID: %s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        char v36 = v39;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release();
        char v36 = v32;
      }
      return v37(v36, v45);
    }
  }
  return result;
}

void sub_1005F7470(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    uint64_t v13 = swift_unknownObjectWeakLoadStrong();
    if (v13)
    {
      uint64_t v14 = (void *)v13;
      uint64_t state64 = 0;
      notify_get_state(a1, &state64);
      defaultLogger()();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      int v17 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v25 = a3;
        uint64_t v18 = swift_slowAlloc();
        uint64_t v26 = a4;
        uint64_t v19 = (uint8_t *)v18;
        uint64_t v24 = swift_slowAlloc();
        v29[0] = v24;
        HIDWORD(v23) = v17;
        *(_DWORD *)uint64_t v19 = 136446210;
        swift_beginAccess();
        if (state64) {
          uint64_t v20 = 0x64656B636F6CLL;
        }
        else {
          uint64_t v20 = 0x64656B636F6C6E75;
        }
        if (state64) {
          unint64_t v21 = 0xE600000000000000;
        }
        else {
          unint64_t v21 = 0xE800000000000000;
        }
        uint64_t v27 = sub_100110D58(v20, v21, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, BYTE4(v23), "lockStateMonitor: Screen %{public}s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_beginAccess();
      if (!state64)
      {
        NSString v22 = String._bridgeToObjectiveC()();
        [v14 lockStateMonitor:v12 deviceLockDidUpdate:0 watchPairingID:v22];
      }
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1005F7784(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1005F7878(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = (int *)(v2 + OBJC_IVAR____TtC8coreidvd19DIPLockStateMonitor_notifyToken);
  swift_beginAccess();
  if (*v12 == -1)
  {
    defaultLogger()();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v25 = v6;
      uint64_t v26 = v5;
      *(_DWORD *)unint64_t v21 = 136315138;
      uint64_t v28 = v22;
      if (a2)
      {
        unint64_t v23 = a2;
      }
      else
      {
        a1 = 0;
        unint64_t v23 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_100110D58(a1, v23, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Ignoring the call to unregisterFromDeviceLockNotifications, already unregistered for watch with pairingID: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v26);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  else
  {
    notify_cancel(*v12);
    *uint64_t v12 = -1;
    defaultLogger()();
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v26 = v5;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v25 = v6;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v28 = v16;
      if (a2)
      {
        unint64_t v17 = a2;
      }
      else
      {
        a1 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_100110D58(a1, v17, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Successfully unregistered for phone lock state notifications for watch with pairingID: %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v26);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
}

id sub_1005F7CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  defaultLogger()();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Deallocating DIPLockStateMonitor", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1005F7878(0, 0);
  uint64_t v9 = (objc_class *)type metadata accessor for DIPLockStateMonitor();
  v11.receiver = v1;
  v11.super_class = v9;
  return [super dealloc];
}

uint64_t type metadata accessor for DIPLockStateMonitor()
{
  return self;
}

uint64_t sub_1005F7EFC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005F7F34()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005F7F74(int a1)
{
  sub_1005F7470(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1005F7F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005F7F90()
{
  return swift_release();
}

uint64_t sub_1005F7F98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWInterface.InterfaceType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007764((uint64_t *)&unk_1007271F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005F84BC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v13 = 0x726568744FLL;
    sub_100009C38((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    os_log_type_t v14 = *(void (**)(char *, void, uint64_t))(v3 + 104);
    v14(v5, enum case for NWInterface.InterfaceType.wifi(_:), v2);
    char v15 = NWPath.usesInterfaceType(_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v2);
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return 1768319319;
    }
    else
    {
      v14(v5, enum case for NWInterface.InterfaceType.cellular(_:), v2);
      char v17 = NWPath.usesInterfaceType(_:)();
      v16(v5, v2);
      if (v17)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        return 0x72616C756C6C6543;
      }
      else
      {
        v14(v5, enum case for NWInterface.InterfaceType.wiredEthernet(_:), v2);
        char v18 = NWPath.usesInterfaceType(_:)();
        v16(v5, v2);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        if (v18) {
          return 0x6465726957;
        }
        else {
          return 0x726568744FLL;
        }
      }
    }
  }
  return v13;
}

uint64_t sub_1005F82EC(uint64_t a1)
{
  uint64_t v2 = sub_100007764((uint64_t *)&unk_1007271F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NWPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005F84BC(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100009C38((uint64_t)v4);
    return 0x6E776F6E6B6E55;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (NWPath.isExpensive.getter()) {
      uint64_t v9 = 0x7669736E65707845;
    }
    else {
      uint64_t v9 = 0x736E657078656E49;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_1005F84BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007764((uint64_t *)&unk_1007271F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DigitalPresentmentUIResult()
{
  return &type metadata for DigitalPresentmentUIResult;
}

void sub_1005F8588(id a1)
{
  qword_100760090 = [[CDIVowDyR1NTVdrU alloc] initWithServiceName:@"com.apple.asd.scoring"];

  _objc_release_x1();
}

void sub_1005F873C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1005F875C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained uTtwJoGUgL3N0GVz];
}

void sub_1005F8960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1005F8980(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F899C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v10 = a2;
  id v7 = a3;
  id v8 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F8C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1005F8C84(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F8C9C(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F8EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1005F8EFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F8F18(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = a3;
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F9144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1005F9164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F917C(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F9490(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 152));
  _Unwind_Resume(a1);
}

uint64_t sub_1005F94B0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F94D4(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  id v14 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a6;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F9720(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t sub_1005F9748(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005F9758(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if ([WeakRetained l7UrdRfCzeduYqtA:*(void *)(a1 + 32)]) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_1005F9D0C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  [v2 setObject:v3 forKey:*(void *)(a1 + 40)];
}

id sub_1005F9E38(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 16) objectForKeyedSubscript:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = v2 != 0;

  uint64_t v3 = a1[5];
  id v4 = *(void **)(a1[4] + 16);

  return _[v4 removeObjectForKey:v3];
}

void sub_1005F9F0C(uint64_t a1)
{
  uint64_t v2 = +[NSString stringWithUTF8String:kCoreASErrorDomainCA[0]];
  uint64_t v3 = +[NSError errorWithDomain:v2 code:-31 userInfo:0];

  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v4 = [*(id *)(*(void *)(a1 + 32) + 16) allValues];
  id v5 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v10;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v10 != v7) {
          objc_enumerationMutation(v4);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v8) + 16))();
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v6);
  }

  [*(id *)(*(void *)(a1 + 32) + 16) removeAllObjects];
}

void sub_1005FA8D0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = a2;
  id v10 = a3;
  long long v11 = v10;
  if (v10 && v9 && !a6)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    id v12 = v10;
    sub_1005FB250([v12 bytes], [v12 length], &v27);
    if (v13)
    {
      int v14 = v13;
      free(v27);
      uint64_t v15 = *(void *)(a1 + 32);
      id v16 = +[NSString stringWithUTF8String:kCoreASErrorDomainCADecrypt];
      char v17 = +[NSError errorWithDomain:v16 code:v14 userInfo:0];
      (*(void (**)(uint64_t, void, void, uint64_t, void *))(v15 + 16))(v15, 0, 0, 0xFFFFFFFFLL, v17);
    }
    else
    {
      id v18 = objc_alloc((Class)NSData);
      id v16 = [v18 initWithBytes:v27 length:[v12 length]];
      free(v27);
      id v19 = v9;
      sub_1005FB250([v19 bytes], [v19 length], &v26);
      if (!v20)
      {
        id v24 = objc_alloc((Class)NSData);
        id v25 = [v24 initWithBytes:v26 length:[v19 length]];
        free(v26);
        (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

        goto LABEL_10;
      }
      int v21 = v20;
      free(v26);
      uint64_t v22 = *(void *)(a1 + 32);
      char v17 = +[NSString stringWithUTF8String:kCoreASErrorDomainCADecrypt];
      unint64_t v23 = +[NSError errorWithDomain:v17 code:v21 userInfo:0];
      (*(void (**)(uint64_t, void, void, uint64_t, void *))(v22 + 16))(v22, 0, 0, 0xFFFFFFFFLL, v23);
    }
LABEL_10:

    goto LABEL_11;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_11:
}

uint64_t sub_1005FAC1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005FAF08(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = a2;
  id v10 = a3;
  long long v11 = v10;
  if (!a6)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    id v12 = v10;
    sub_1005FB250([v12 bytes], [v12 length], &v27);
    if (v13)
    {
      int v14 = v13;
      free(v27);
      uint64_t v15 = *(void *)(a1 + 32);
      id v16 = +[NSString stringWithUTF8String:kCoreASErrorDomainCADecrypt];
      char v17 = +[NSError errorWithDomain:v16 code:v14 userInfo:0];
      (*(void (**)(uint64_t, void, void, void, uint64_t, void *))(v15 + 16))(v15, 0, 0, 0, 0xFFFFFFFFLL, v17);
    }
    else
    {
      id v18 = objc_alloc((Class)NSData);
      id v16 = [v18 initWithBytes:v27 length:[v12 length]];
      free(v27);
      id v19 = v9;
      sub_1005FB250([v19 bytes], [v19 length], &v26);
      if (!v20)
      {
        id v24 = objc_alloc((Class)NSData);
        id v25 = [v24 initWithBytes:v26 length:[v19 length]];
        free(v26);
        (*(void (**)(void))(*(void *)(a1 + 32) + 16))();

        goto LABEL_8;
      }
      int v21 = v20;
      free(v26);
      uint64_t v22 = *(void *)(a1 + 32);
      char v17 = +[NSString stringWithUTF8String:kCoreASErrorDomainCADecrypt];
      unint64_t v23 = +[NSError errorWithDomain:v17 code:v21 userInfo:0];
      (*(void (**)(uint64_t, void, void, void, uint64_t, void *))(v22 + 16))(v22, 0, 0, 0, 0xFFFFFFFFLL, v23);
    }
LABEL_8:

    goto LABEL_9;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
LABEL_9:
}

uint64_t sub_1005FB240(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1005FB250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    BOOL v3 = a3 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1005FB2B0()
{
  return 4294940294;
}

uint64_t sub_1005FB2B8(uint64_t a1, unsigned int a2, void *a3)
{
  *a3 = (*(uint64_t (**)(void, uint64_t))(v3 + 576))(a2, 3384187359);
  (*(void (**)(void *, unint64_t *, uint64_t))(v3 + 760))(&unk_100626EE4, &STACK[0x420], 16);
  id v5 = *(uint64_t (**)(void *))(v3 + 760);
  STACK[0x398] = v4 - 144;
  uint64_t v6 = v5(&unk_100626AD0);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * ((13
                                              * ((unint64_t)((char *)&STACK[0x430] - (char *)&unk_100627810) < 0x20)) ^ 0x27u)))(v6);
}

uint64_t sub_1005FB370@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)&STACK[0x430] = xmmword_100628D60;
  *(_OWORD *)&STACK[0x440] = xmmword_100628D70;
  *(_OWORD *)&STACK[0x450] = xmmword_100628D80;
  *(_OWORD *)&STACK[0x460] = xmmword_100628D90;
  *(_OWORD *)&STACK[0x470] = xmmword_100628DA0;
  *(_OWORD *)&STACK[0x480] = xmmword_100628DB0;
  *(_OWORD *)&STACK[0x490] = xmmword_100628DC0;
  *(_OWORD *)&STACK[0x4A0] = xmmword_100628DD0;
  *(_OWORD *)&STACK[0x4B0] = xmmword_100628DE0;
  *(_OWORD *)&STACK[0x4C0] = xmmword_100628DF0;
  *(_OWORD *)&STACK[0x4D0] = xmmword_100628E00;
  *(_OWORD *)&STACK[0x4E0] = xmmword_100628E10;
  *(_OWORD *)&STACK[0x4F0] = xmmword_100628E20;
  *(_OWORD *)&STACK[0x500] = xmmword_100628E30;
  *(_OWORD *)&STACK[0x510] = xmmword_100628E40;
  *(_OWORD *)&STACK[0x520] = xmmword_100628E50;
  *(_OWORD *)&STACK[0x530] = xmmword_100628E60;
  *(_OWORD *)&STACK[0x540] = xmmword_100628E70;
  *(_OWORD *)&STACK[0x550] = xmmword_100628E80;
  *(_OWORD *)&STACK[0x560] = xmmword_100628E90;
  *(_OWORD *)&STACK[0x570] = xmmword_100628EA0;
  *(_OWORD *)&STACK[0x580] = xmmword_100628EB0;
  *(_OWORD *)&STACK[0x590] = xmmword_100628EC0;
  *(_OWORD *)&STACK[0x5A0] = xmmword_100628ED0;
  *(_OWORD *)&STACK[0x5B0] = xmmword_100628EE0;
  *(_OWORD *)&STACK[0x5C0] = xmmword_100628EF0;
  *(_OWORD *)&STACK[0x5D0] = xmmword_100628F00;
  *(_OWORD *)&STACK[0x5E0] = xmmword_100628F10;
  *(_OWORD *)&STACK[0x5F0] = 0u;
  *(_OWORD *)&STACK[0x600] = 0u;
  *(_OWORD *)&STACK[0x610] = 0u;
  *(_OWORD *)&STACK[0x620] = 0u;
  *(_OWORD *)&STACK[0x630] = 0u;
  *(_OWORD *)&STACK[0x640] = 0u;
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(v1 + 544);
  int v4 = ((118806587 - v3) & 0xFD1595EF ^ 0x82) == 137;
  return (*(uint64_t (**)(void))(v2 + 8 * ((2 * v4) | (v4 << 6) | 0xD)))();
}

uint64_t sub_1005FB544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (v9 ^ ((4 * (&a9 == (uint64_t *)-1072)) | (16 * (&a9 == (uint64_t *)-1072))))))();
}

uint64_t sub_1005FB57C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v1 ^ 7) + 67831726) & 0xFBF4F86B ^ 0x3B) * (a1 == v2)) ^ v1 ^ 7)))();
}

uint64_t sub_1005FB5BC()
{
  int v5 = v0 + 26;
  *(void *)(v4 - 144) = 0x951FAAEE1026D03;
  *(void *)(v4 - 136) = 0x9AAF552B875DE8C0;
  int v6 = (v0 + 26) ^ 0x2B;
  if (v1) {
    BOOL v7 = v2 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v6 + 15) * v8) ^ v5)))();
}

uint64_t sub_1005FB618()
{
  STACK[0x398] = (unint64_t)&STACK[0x420];
  if (v1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 ^ 0x2B) + 15) * v5) ^ v0)))();
}

uint64_t sub_1005FB654@<X0>(int a1@<W8>)
{
  unsigned int v4 = ((v2 + 1357734545) ^ 0xFD29D4E) & (2 * ((v2 + 1357734545) & 0xAF129D6F)) ^ (v2 + 1357734545) & 0xAF129D6F;
  unsigned int v5 = ((v1 - 712503020) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4))) & ((v2 + 1357734545) ^ 0x45D695C4) ^ (2 * ((v2 + 1357734545) ^ 0x45D695C4)) & 0xEAC408AA;
  unsigned int v6 = ((4 * (v5 ^ 0x2A4408A9)) ^ 0xAB1022AC) & (v5 ^ 0x2A4408A9) ^ (4 * (v5 ^ 0x2A4408A9)) & 0xEAC408A8;
  unsigned int v7 = (v6 ^ 0xAA0000A0) & (16 * ((v5 ^ 0xC0800000) & (4 * v4) ^ v4)) ^ (v5 ^ 0xC0800000) & (4 * v4) ^ v4;
  unsigned int v8 = ((16 * (v6 ^ 0x40C40803)) ^ 0xAC408AB0) & (v6 ^ 0x40C40803) ^ (16 * (v6 ^ 0x40C40803)) & 0xEAC408A0;
  unsigned int v9 = v7 ^ 0xEAC408AB ^ (v8 ^ 0xA8400800) & (v7 << 8);
  unsigned int v10 = (v2 + 1357734545) ^ (2
                           * ((v9 << 16) & 0x6AC40000 ^ v9 ^ ((v9 << 16) ^ 0x8AB0000) & (((v8 ^ 0x4284000B) << 8) & 0xEAC40000 ^ 0x2AC40000 ^ (((v8 ^ 0x4284000B) << 8) ^ 0x44080000) & (v8 ^ 0x4284000B))));
  BOOL v12 = ((2 * (v10 & 0xF ^ 0x14144808)) | 0xBBAA1134) - (v10 & 0xF ^ 0x14144808) != -1483323083 || v10 == 1805290553;
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 ^ 5 ^ ((a1 + 56) | 2)) * v12) ^ a1)))();
}

uint64_t sub_1005FB81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 ^ 0x21) + 3) * (&a9 == (uint64_t *)-1072)) | v9)))();
}

uint64_t sub_1005FB850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 + 15)))(1032);
  STACK[0x380] = v47;
  STACK[0x378] = v48;
  if (v47) {
    BOOL v56 = v48 == 0;
  }
  else {
    BOOL v56 = 1;
  }
  int v57 = !v56;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((v57 * (((v45 ^ 0x1B) - 4) ^ 4)) ^ v45)))(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

uint64_t sub_1005FB8C0()
{
  LODWORD(STACK[0x408]) = v4 >> 3;
  unsigned int v5 = (v4 >> 3) ^ 0xD735187;
  LODWORD(STACK[0x404]) = v5;
  uint64_t v6 = v1[((v0 + 60) ^ 0xA88D423B) % v5];
  unint64_t v7 = ((((v4 >> 3) ^ 0xFA7DD71E757E83ALL) - 0x7C853498ECDBE7DDLL) ^ (((v4 >> 3) ^ 0xBC7D8232869CD75)
                                                                    - 0x78E531CA23E5C292) ^ (((v4 >> 3) ^ 0x4600552C24D74C8)
                                                                                             - 0x7742ECBBC9C17B2FLL))
     + 0x7322E9E984482D8FLL;
  if (v7 < 0x7D48CF2F != (unint64_t)(v6 + 3030306715) < 0x7D48CF2F) {
    BOOL v8 = v7 < 0x7D48CF2F;
  }
  else {
    BOOL v8 = v6 + 3030306715 < v7;
  }
  unint64_t v9 = (v4 >> 3) ^ 0xD735187;
  int v10 = (v6
       - ((((v4 >> 3) ^ 0xF2ED58B59878CAE4) + 0x7E304EA36C0B3AFDLL) ^ (((v4 >> 3) ^ 0xB37863114FD9A27ELL)
                                                                       + 0x3FA57507BBAA5267) ^ (((v4 >> 3) ^ 0x41953BA4DAD2391DLL)
                                                                                                - 0x32B7D24DD15E36FALL))
       - 0x7322E9E8CFA95DF4)
      % v9;
  int v11 = (v10 ^ 0x67CF7DE7) - 1648521478 + ((2 * v10) & 0xF9EFBCE);
  if (v8) {
    int v11 = v6 + 1021513037;
  }
  unsigned int v12 = (v11 ^ 0xFB72EB1F) & (2 * (v11 & 0xFA72F31F)) ^ v11 & 0xFA72F31F;
  unsigned int v13 = ((2 * (v11 ^ 0xCFD72D19)) ^ 0x6B4BBC0C) & (v11 ^ 0xCFD72D19) ^ (2 * (v11 ^ 0xCFD72D19)) & 0x35A5DE06;
  int v14 = v13 ^ 0x14A44202;
  int v15 = (v13 ^ 0x21019C04) & (4 * v12) ^ v12;
  unsigned int v16 = ((4 * v14) ^ 0xD6977818) & v14 ^ (4 * v14) & 0x35A5DE00;
  int v17 = (v16 ^ 0x14855800) & (16 * v15) ^ v15;
  int v18 = ((16 * (v16 ^ 0x21208606)) ^ 0x5A5DE060) & (v16 ^ 0x21208606) ^ (16 * (v16 ^ 0x21208606)) & 0x35A5DE00;
  unint64_t v19 = v11 ^ (2
             * ((((v18 ^ 0x25A01E06) << 8) & 0x35A50000 ^ 0x25840000 ^ (((v18 ^ 0x25A01E06) << 8) ^ 0xA5DE0000) & (v18 ^ 0x25A01E06)) & (((v18 ^ 0x1005C000) & (v17 << 8) ^ v17) << 16) ^ (v18 ^ 0x1005C000) & (v17 << 8) ^ v17)) ^ 0x82819111F058D31DLL;
  unint64_t v20 = v1[(v1[(v1[(v19 - ((2 * v19) & 0x5012203D35393CCLL) - 0x1C1D4A741656361ALL) ^ 0x163249AE383E9E4] + 3855038535)
             % v9]
          + 3865674970)
         % v9]
      + 578455804;
  STACK[0x3F8] = v9;
  LODWORD(v20) = v20 % v9 - ((2 * (v20 % v9)) & 0x1737DBD2) + 1268510185;
  unsigned int v21 = (((v20 ^ 0x81F1505E) + 2113871245) ^ ((v20 ^ 0x77571436) - 1957078555) ^ ((v20 ^ 0xBD3DA981) + 1093919828))
      - 1494198759;
  BOOL v22 = v21 < 0x5E85F655;
  *int v2 = *v1 ^ 0x6D6D6D6D6D6D6D6DLL;
  if (v21 >= 0x5E85F655) {
    BOOL v22 = v21 > 0x5E85F656;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((15 * !v22) ^ (v0 + 60))))();
}

uint64_t sub_1005FBE08@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>)
{
  unsigned int v6 = (v2 + 1350776877) & 0xAF7CC79D;
  unsigned int v7 = (((LODWORD(STACK[0x408]) ^ 0x819E62D0) + 727381173) ^ ((LODWORD(STACK[0x408]) ^ 0x14CF84FD) - 1106570598) ^ ((LODWORD(STACK[0x408]) ^ 0x9822B7AA) + 853942735))
     + v6
     + 1114879174;
  BOOL v8 = v7 < 0xEA2B7CAA;
  *(void *)(v4 + 8 * a2) = *(void *)(v3 + 8 * a2) ^ a1;
  if (v8 == a2 - 366248789 < 0xEA2B7CAA) {
    BOOL v8 = v7 > a2 - 366248789;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((53 * v8) | v6)))();
}

uint64_t sub_1005FBF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  STACK[0x390] = v6;
  if (((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
       + 10) & 0xE) != 0)
    uint64_t v8 = (*(unsigned char *)(a5
                   + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + ((*(unsigned char *)(a5 + 11) + 12) & 0xF)) + 2) & 0xF)) + 6) & 0xF))
        + 10) & 0xF;
  else {
    uint64_t v8 = 1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((103 * (v8 != 1)) ^ (v5 - 29))))();
}

uint64_t sub_1005FC090()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((99 * (v1 == 15)) ^ v0)))();
}

#error "1005FE044: call analysis failed (funcsize=1831)"

uint64_t sub_1005FE04C@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  int v62 = v56 - 11;
  LODWORD(a50) = LODWORD(STACK[0x330]) ^ LODWORD(STACK[0x3E8]) ^ (LODWORD(STACK[0x2E0])
                                                                + a2
                                                                + 295089407
                                                                + (LODWORD(STACK[0x3D4]) ^ LODWORD(STACK[0x200]) ^ (a6 + v60)));
  uint64_t v63 = (((LODWORD(STACK[0x408]) ^ 0xC5E51CD5) + 1864469170) ^ ((LODWORD(STACK[0x408]) ^ 0x32CC1792) - 1744272905) ^ (((v56 - 94741882) ^ LODWORD(STACK[0x408])) + 1352584357))
      + 1916659118;
  BOOL v64 = v63 < 0x19F5AD92;
  unint64_t v65 = 0x418B018541479FA3
      * (((*(void *)(STACK[0x390] + 8 * v58) + (*(void *)(STACK[0x390] + 8 * v58) ^ 0x9292929292929292) + 1) ^ 0xFFFFFFFFFFFFFFFELL)
       + *(void *)(STACK[0x390] + 8 * v58));
  unint64_t v66 = (v65 ^ v59) + v58 - (((v65 ^ v59) + v58) >> 32);
  unint64_t v67 = v66 - (v66 >> ((v56 - 47) ^ 0x1Bu)) - ((v66 - (v66 >> ((v56 - 47) ^ 0x1Bu))) >> 8);
  int v68 = (v67 + a1) ^ a4;
  unint64_t v69 = ((v67 + v57) ^ v65) + v58 - ((((v67 + v57) ^ v65) + v58) >> 32);
  unint64_t v70 = v69 - (v69 >> 16) - ((v69 - (v69 >> 16)) >> 8);
  unint64_t v71 = ((v70 + v57) ^ v65) + v58 - ((((v70 + v57) ^ v65) + v58) >> 32);
  uint64_t v72 = v68 ^ (v70 + a1) ^ (v71
                                          - (v71 >> 16)
                                          - ((v71 - (v71 >> 16)) >> 8)
                                          + a1);
  unsigned int v73 = v58 + 1;
  uint64_t v74 = v64 ^ (v73 >= 0xE60A526E);
  if (!v74) {
    BOOL v64 = v73 + 435531154 < v63;
  }
  char v75 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 8 * ((21 * v64) ^ v62));
  HIDWORD(a45) = LODWORD(STACK[0x348]) ^ 0x2AE252BD;
  return v75(a1, v75, 0x418B018541479FA3, v74, v63, a3, v72, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1005FE23C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                    + 3) & 0xF))
       + 1) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned __int8 *)(v3 + ((*(unsigned char *)(v3 + 2) + 13) & 0xF)) + 2) & 0xFLL))
                     + 3) & 0xF))
        + 1) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * ((25 * (v4 == 1)) ^ a2)))(a1, (a2 - 8));
}

uint64_t sub_1005FE808(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 | (4 * (v2 != 15)))))();
}

uint64_t sub_1005FE8A0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v68 = (a2 - 2) | 0x18;
  unsigned int v69 = (a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13) + (((a3 ^ 0xCF39C5D0) - ((a3 ^ 0xCF39C5D0) >> 13)) >> 5);
  unsigned int v70 = (v68 ^ 0xF9901316) + v69 - (((v68 ^ 0xF9901316) + v69) >> 10);
  unsigned int v71 = v70 - (v70 >> 2);
  int v72 = v69 ^ v62;
  unsigned int v73 = v71 ^ 0xF30576F9;
  int v74 = v71 ^ v65;
  unsigned int v75 = v73 + (v73 >> 14) - ((v73 + (v73 >> 14)) >> 2);
  unsigned int v76 = v75 + 511487013 + ((v75 + 511487013) >> 15) + ((v75 + 511487013 + ((v75 + 511487013) >> 15)) >> 3);
  unsigned int v77 = (v72 ^ -v72 ^ (v76 - (v76 ^ v72))) + v76;
  unsigned int v78 = (v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10) + (((v76 ^ 0x5985AE2F) - ((v76 ^ 0x5985AE2F) >> 10)) >> 7);
  int v79 = v74 ^ v78;
  unsigned int v80 = v78 - 787086048 - ((v78 - 787086048) >> 9) + ((v78 - 787086048 - ((v78 - 787086048) >> 9)) >> 5);
  unsigned int v81 = v80 - 1168002143 - ((v80 - 1168002143) >> 14) + ((v80 - 1168002143 - ((v80 - 1168002143) >> 14)) >> 4);
  int v82 = v81 ^ v77;
  unsigned int v83 = v81 - 879085134 + ((v81 - 879085134) >> 10) - ((v81 - 879085134 + ((v81 - 879085134) >> 10)) >> 5);
  unsigned int v84 = v79 ^ v83;
  unsigned int v85 = v82 ^ 2 | v82 & 0x9A38B5A8;
  unsigned int v86 = v75 ^ v64 ^ v80 ^ (v83
                         + 1300749569
                         - ((v83 + 1300749569) >> 9)
                         - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4));
  unint64_t v87 = (((v75 ^ v64 ^ v80 ^ (v83
                                             + 1
                                             - ((v83 + 1300749569) >> 9)
                                             - ((v83 + 1300749569 - ((v83 + 1300749569) >> 9)) >> 4))) ^ 4)
       + 1) & 7;
  int v88 = v86 & 7 ^ 3;
  LODWORD(STACK[0x354]) = v88;
  BOOL v89 = v88 == 0;
  if (v88) {
    int v90 = 255;
  }
  else {
    int v90 = 0;
  }
  STACK[0x2A8] = v87;
  int v91 = v90 << v87;
  int v92 = v91;
  int v93 = 16843009 * v91;
  if (v89) {
    unsigned __int8 v94 = 0;
  }
  else {
    unsigned __int8 v94 = ~(_BYTE)v91;
  }
  uint64_t v95 = (~v93 - v93) ^ 0xFFFFFFFE;
  uint64_t v96 = (1929379840 * v92) & v84;
  uint64_t v97 = v67[0xB4C2D96D % LODWORD(STACK[0x404])];
  LODWORD(STACK[0x328]) = v84;
  LODWORD(v97) = ((v67[((v67[((v67[((v97 ^ 0x6D6D6D6D6D6D6D6DuLL) + 2986301921u) % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                            + 2923655298u)
                           % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2008708959)
                     % STACK[0x3F8]] ^ 0x6D6D6D6D6D6D6D6DuLL)
                + 3811120295u)
               % STACK[0x3F8];
  int v98 = 16843009
      * (v84 ^ 0x88 ^ ((unsigned __int16)(v84 ^ 0x5B88) >> 8) ^ ((v84 ^ 0x74325B88) >> 16) ^ HIBYTE(v84) ^ 0x71);
  LODWORD(STACK[0x3E0]) = (16843009
                         * (v85 ^ 0xBB ^ ((unsigned __int16)(v85 ^ 0x2BB) >> 8) ^ ((v85 ^ 0x247F02BB) >> 16) ^ HIBYTE(v85) ^ 0x48)) ^ 0x69696969 ^ v98;
  uint64_t v99 = (v97 - ((2 * v97) & 0xA49F8CA) - 1524302747) ^ 0xA524FC65;
  LODWORD(STACK[0x250]) = v98 ^ 0x5050505;
  int v100 = LODWORD(STACK[0x318]) ^ 0x14BE8117;
  LODWORD(STACK[0x40C]) = v85;
  LODWORD(STACK[0x314]) = v85 & 0xFFFFFF01;
  LODWORD(STACK[0x3EC]) = v86;
  BOOL v101 = v99 > 0x1AE6B61D;
  uint64_t v102 = 0x418B018541479FA3 * (*v67 ^ 0x6D6D6D6D6D6D6D6DLL);
  uint64_t v103 = (v102 ^ 0x177943424141AE0BLL)
       - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
       - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)
       - (((v102 ^ 0x177943424141AE0BLL)
         - ((v102 ^ 0x177943424141AE0BuLL) >> 32)
         - (((v102 ^ 0x177943424141AE0BLL) - ((v102 ^ 0x177943424141AE0BuLL) >> 32)) >> 16)) >> (((v68 - 8) | 0x20u) - 41))
       + v63;
  int v104 = v103 ^ v100;
  uint64_t v105 = (v103 ^ v102)
       - ((v103 ^ (unint64_t)v102) >> 32)
       - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v103 ^ v102)
         - ((v103 ^ (unint64_t)v102) >> 32)
         - (((v103 ^ v102) - ((v103 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  int v106 = v104 ^ v105;
  uint64_t v107 = (v105 ^ v102)
       - ((v105 ^ (unint64_t)v102) >> 32)
       - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)
       - (((v105 ^ v102)
         - ((v105 ^ (unint64_t)v102) >> 32)
         - (((v105 ^ v102) - ((v105 ^ (unint64_t)v102) >> 32)) >> 16)) >> 8)
       + v63;
  uint64_t v108 = v106 ^ v107;
  if (v99 <= 0x1AE6B61D) {
    BOOL v101 = (v99 - 451327518) > 0xE51949E3;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * ((93 * v101) ^ v68)))(a1, v108, v96, v99, v107, 0x6D6D6D6D6D6D6D6DLL, v95, (v85 ^ 2u) & v94, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

void sub_1005FECC8()
{
}

uint64_t sub_1005FECD0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  LODWORD(STACK[0x334]) = (a6 + a8) ^ a7;
  unsigned int v12 = (((LODWORD(STACK[0x408]) ^ 0xB3C2264A) + 419868719) ^ ((LODWORD(STACK[0x408]) ^ 0x11E19BDF) - 1155199556) ^ (((v10 - 1353651231) ^ LODWORD(STACK[0x408])) + 93616759))
      - 340330973;
  BOOL v13 = v12 < 0x936EBE07;
  uint64_t v14 = 0x418B018541479FA3 * ((17 * ((v10 + 20) ^ 0x47u)) ^ (a5 - 30) ^ *(void *)(STACK[0x390] + 8 * v8));
  unint64_t v15 = (v14 ^ a4) + v8 - (((v14 ^ a4) + (unint64_t)v8) >> 32);
  unint64_t v16 = v15 - (v15 >> 16) - ((v15 - (v15 >> 16)) >> 8);
  unint64_t v17 = ((v16 + v9) ^ v14) + v8 - ((((v16 + v9) ^ v14) + v8) >> 32);
  unint64_t v18 = v17 - (v17 >> 16) - ((v17 - (v17 >> 16)) >> 8);
  unint64_t v19 = ((v18 + v9) ^ v14) + v8 - ((((v18 + v9) ^ v14) + v8) >> 32);
  unint64_t v20 = v19 - (v19 >> 16) - ((v19 - (v19 >> 16)) >> 8);
  uint64_t v21 = (v16 + v9) ^ a2 ^ (v18 + v9) ^ ((v9 & (2
                                                                                           * (v20 + 1238975257)))
                                                                      + ((v20 + 1238975257) ^ 0x49D94319));
  if (v13 == v8 - 1821458936 < 0x936EBE07) {
    BOOL v13 = v12 > v8 - 1821458936;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v11
                                                                                + 8 * ((v13 | (2 * v13)) ^ (v10 + 20))))(a1, v21, a3, 0x89751B1549D94319);
}

uint64_t sub_1005FEE78()
{
  LODWORD(STACK[0x24C]) = v0 ^ 0x6C6C6C6C;
  if (((*(unsigned char *)(v3
                  + ((*(unsigned char *)(v3
                               + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                    + 9) & 0xF))
       + 7) & 0xE) != 0)
    uint64_t v4 = (*(unsigned char *)(v3
                   + ((*(unsigned char *)(v3
                                + ((*(unsigned char *)(v3 + ((*(unsigned __int8 *)(v3 + 7) + 5) & 0xFLL)) + 9) & 0xF))
                     + 9) & 0xF))
        + 7) & 0xF;
  else {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((39 * (v4 != 1)) ^ (v1 - 1585224797) & 0x5E7C9C3Fu)))(1236720864);
}

void sub_1005FF18C()
{
}

uint64_t sub_1005FF194@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  STACK[0x410] = 1302115035;
  LODWORD(STACK[0x29C]) = a1 ^ a3;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 == 15) | (16 * (v3 == 15)) | (a2 + 69889606))))();
}

void sub_1005FF320()
{
}

#error "1005FFB34: call analysis failed (funcsize=450)"

uint64_t sub_1005FFB3C(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v76 = (a3 - 42) | 0x18;
  LODWORD(STACK[0x330]) = a68 ^ a48;
  LODWORD(STACK[0x21C]) ^= LODWORD(STACK[0x300]) ^ STACK[0x348] ^ (STACK[0x2A8] | (STACK[0x348] << 6));
  LODWORD(STACK[0x210]) ^= a50 ^ HIDWORD(a50) ^ a1 ^ LODWORD(STACK[0x208]) ^ (HIDWORD(a48) << (((a3 - 42) | 0x18) - 53));
  LODWORD(STACK[0x300]) = a69 ^ a49 ^ v74 & STACK[0x2F8] ^ 0x184832E0;
  unsigned int v77 = (((LODWORD(STACK[0x408]) ^ 0xE1D4BBA2) + 1259351495) ^ ((LODWORD(STACK[0x408]) ^ 0x74969F81) - 565048858) ^ ((LODWORD(STACK[0x408]) ^ 0x983175A4) + 854975425))
      - 204021315;
  LODWORD(STACK[0x208]) = LODWORD(STACK[0x2FC]) ^ (8 * HIDWORD(a49));
  BOOL v78 = v77 < 0x9B8EA9A1;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v71 + 8 * a7) ^ v75);
  unint64_t v80 = (v79 ^ v69) + a7 - (((v79 ^ v69) + (unint64_t)a7) >> 32);
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> ((v76 + 2) ^ 0x33u)) + v70;
  unint64_t v82 = (v81 ^ v79) + a7 - (((v81 ^ v79) + (unint64_t)a7) >> 32);
  unint64_t v83 = v82 - (v82 >> 16) - ((v82 - (v82 >> 16)) >> 8);
  uint64_t v84 = v73 & ((v83 + a4) >> 1);
  unint64_t v85 = ((v83 + v70) ^ v79) + a7 - ((((v83 + v70) ^ v79) + a7) >> 32);
  uint64_t v86 = a7 + 1;
  uint64_t v87 = v78 ^ ((v86 - 1685149279) < 0x9B8EA9A1);
  if (!v87) {
    BOOL v78 = v77 > (int)v86 - 1685149279;
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8 * ((97 * v78) ^ v76)))(v85 - (v85 >> 16) - ((v85 - (v85 >> 16)) >> 8), 2609818017, (v76 + 2), a4, v87, v84, v86, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1005FFDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  LODWORD(a58) = a58 + LODWORD(STACK[0x308]);
  LODWORD(STACK[0x2FC]) = 16 * v63;
  LODWORD(STACK[0x200]) ^= HIDWORD(a55) ^ a51 ^ HIDWORD(a53);
  LODWORD(STACK[0x308]) = a54 + LODWORD(STACK[0x30C]);
  LODWORD(STACK[0x30C]) = LODWORD(STACK[0x3A0]) ^ 0xED35EB3F ^ (2093737731 * HIDWORD(a51));
  unint64_t v67 = a1
      - 0x373B377CD11039CBLL
      + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)
      + ((a1 - 0x373B377CD11039CBLL + ((unint64_t)(a1 - 0x373B377CD11039CBLL) >> 28)) >> 11);
  uint64_t v68 = (v67 >> 7) + v67 - 2 * (v67 >> 7);
  unint64_t v69 = v68
      - 0x13AFA5FA8FB17A6
      + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)
      - ((v68 - 0x13AFA5FA8FB17A6 + ((unint64_t)(v68 - 0x13AFA5FA8FB17A6) >> 29)) >> 8);
  unint64_t v70 = v69 + (v69 >> 6);
  unint64_t v71 = v70
      + 0x47CBE9EA4DE0F1B7
      - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)
      + ((v70 + 0x47CBE9EA4DE0F1B7 - ((v70 + 0x47CBE9EA4DE0F1B7) >> 28)) >> 8);
  unint64_t v72 = v71
      + (v71 >> 7)
      - 0x25953151116B048ALL
      + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)
      - ((v71 + (v71 >> 7) - 0x25953151116B048ALL + ((v71 + (v71 >> 7) - 0x25953151116B048ALL) >> 29)) >> 14);
  unint64_t v73 = v72
      - (v72 >> 7)
      - 0x10BF2422B96631C1
      - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)
      + ((v72 - (v72 >> 7) - 0x10BF2422B96631C1 - ((v72 - (v72 >> 7) - 0x10BF2422B96631C1) >> 28)) >> 8);
  unint64_t v74 = v73 + (v73 >> 8);
  unint64_t v75 = (v74 ^ 0xF929F7F6E1EC1FCELL)
      + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)
      + (((v74 ^ 0xF929F7F6E1EC1FCELL) + ((v74 ^ 0xF929F7F6E1EC1FCELL) >> 26)) >> 14);
  unint64_t v76 = v75
      + (v75 >> 6)
      - 0x70FE5FCAA42AEA45
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)
      - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45 - ((v75 + (v75 >> 6) - 0x70FE5FCAA42AEA45) >> 26)) >> 13);
  unint64_t v77 = ((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905)
      - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)
      - ((((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) - (((v76 - (v76 >> 3)) ^ 0x48CFA99F8FD15905) >> 28)) >> 11);
  int v78 = v74 ^ v70 ^ v62 ^ ((v74 ^ v70) >> 1) & 0x55DF6EBA ^ v65 & ((v77
                                                                                              + (v77 >> 4)) >> 1) ^ (v77 + (v77 >> 4));
  if (((v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xE) != 0) {
    uint64_t v79 = (v66[(v66[(v66[(v66[13] + 8) & 0xF] + 6) & 0xF] + 7) & 0xF] + 11) & 0xF;
  }
  else {
    uint64_t v79 = 1;
  }
  unsigned int v80 = *v66 * ((a3 ^ 0xFBD591FD) + 1973706621);
  unint64_t v81 = (unint64_t)((v80 ^ 0x19226648) + ((v80 ^ 0x19226648) >> 16)) >> 8;
  uint64_t v82 = (v80 ^ 0x19226648) - 651057517 + ((v80 ^ 0x19226648) >> 16) + v81;
  int v83 = (v80 ^ 0x19226648) - 1302115034 + ((v80 ^ 0x19226648) >> 16) + v81;
  unint64_t v84 = (unint64_t)((v83 ^ v80) + ((v83 ^ v80) >> 16)) >> 8;
  unsigned int v85 = (v83 ^ v80) - 651057517 + ((v83 ^ v80) >> 16) + v84;
  uint64_t v86 = ((v83 ^ v80) - 1302115034 + ((v83 ^ v80) >> 16) + v84) ^ v80;
  unint64_t v87 = (unint64_t)v86 >> 16;
  unint64_t v88 = (unint64_t)(v86 + WORD1(v86)) >> 8;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 8 * (int)(((2 * (v79 == 1)) | (4 * (v79 == 1))) ^ a3)))(v86, 0, a3, a4, (v86 - 1302115034 + v87 + v88), (v85 >> 1) & 0x55DF6EBA, v82 ^ v78 ^ (v82 >> 1) & 0x55DF6EBA ^ v85 ^ (v85 >> 1) & 0x55DF6EBA ^ (v86 - 651057517 + v87 + v88) ^ ((v86 - 651057517 + v87 + v88) >> 1) & 0x55DF6EBA, v82, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1006001B0@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3A0] = v69;
  LODWORD(STACK[0x32C]) = a65 ^ ~HIDWORD(a53);
  LODWORD(STACK[0x2F8]) = a54 ^ LODWORD(STACK[0x38C]);
  LODWORD(STACK[0x310]) ^= a66;
  int v72 = 1903817027 * *(unsigned __int8 *)(v70 + a5);
  unsigned int v73 = v72 ^ (v71 + a1 + ((a1 + a2) >> 16) + ((a1 + a2 + ((a1 + a2) >> 16)) >> 8) + v66 - 1);
  uint64_t v74 = (a5 - 651057517);
  unsigned int v75 = v74 + v73 + ((v73 + a5) >> 16) + ((v73 + a5 + ((v73 + a5) >> 16)) >> 8);
  unsigned int v76 = ((2 * v75) & 0xB2634D26) + (v75 ^ 0xD931A693);
  unint64_t v77 = (unint64_t)((v76 ^ v72) + a5 + (((v76 ^ v72) + a5) >> 16)) >> 8;
  unsigned int v78 = v74 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77;
  LODWORD(v77) = (a5 - 1302115034 + (v76 ^ v72) + (((v76 ^ v72) + a5) >> 16) + v77) ^ v72;
  unint64_t v79 = (v77 + a5);
  unint64_t v80 = v79 >> 16;
  unint64_t v81 = (unint64_t)(v79 + WORD1(v79)) >> 8;
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((a5 != 15) | (16 * (a5 != 15)) | (v68 + 69889598))))((a5 - 1302115034 + v77 + v80 + v81), 1302115034, -651057517, a3, 3 * (v68 ^ 0xFBD591D7), v80, v75 ^ a4 ^ v67 & (v75 >> 1) ^ v78 ^ v67 & (v78 >> 1) ^ (v74 + v77 + v80 + v81) ^ v67 & ((v74 + v77 + v80 + v81) >> 1), v74, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1006003D4()
{
}

uint64_t sub_1006003EC@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v69 = (a3 + ((v67 + v66) >> 16) + v67 + ((v67 + v66 + ((v67 + v66) >> 16)) >> 8) - a1) ^ 0xCF39C5D0;
  int v70 = ((*(void *)(STACK[0x390]
                    + 8
                    * (((*(void *)(STACK[0x390]
                                   + 8
                                   * (((*(void *)(STACK[0x390]
                                                  + 8
                                                  * (((*(void *)(STACK[0x390]
                                                                 + 8 * (0x791DF2FAu % LODWORD(STACK[0x404]))) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                                    + 2126161460)
                                                   % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                                     + 2993841644u)
                                    % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
                      + 2220923829u)
                     % STACK[0x3F8])) ^ 0x6D6D6D6D6D6D6D6DuLL)
       + 1951303181)
      % STACK[0x3F8];
  LODWORD(STACK[0x3F8]) = ((v69 - (v69 >> 13)) >> (((a2 - 117) & 0x47) - 1)) + v69 - (v69 >> 13);
  unsigned int v71 = (v70 - ((2 * v70) & 0x3C890E0C) - 1102805242) ^ 0xBE448706;
  int v72 = STACK[0x318];
  LODWORD(STACK[0x404]) = a65 ^ LODWORD(STACK[0x3F0]);
  unsigned int v73 = v72 ^ LODWORD(STACK[0x3EC]) ^ 0x5879B4F0;
  LODWORD(STACK[0x318]) = v73;
  LODWORD(STACK[0x324]) = v65 & (v73 >> 1);
  BOOL v74 = v71 > 0x7AF340BF;
  if (v71 <= 0x7AF340BF) {
    BOOL v74 = v71 - 2062762176 > 0x850CBF41;
  }
  return (*(uint64_t (**)(uint64_t))(v68 + 8 * (int)((53 * v74) ^ (a2 + 1562391435) & 0xA2DFCC47)))(3141127236);
}

uint64_t sub_100600800@<X0>(uint64_t a1@<X3>, int a2@<W4>, uint64_t a3@<X6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v75 = (a2 + 13);
  LODWORD(STACK[0x3F8]) ^= a66 ^ HIDWORD(a44) ^ a65 ^ HIDWORD(a54) ^ a52 ^ v73 ^ HIDWORD(a46) ^ a46 ^ HIDWORD(a45) & v68 ^ 0x7BE8B087;
  unsigned int v76 = (((LODWORD(STACK[0x408]) ^ 0xA0D707E7) + 169054596) ^ ((LODWORD(STACK[0x408]) ^ 0x52B52E1C) - 126764935) ^ ((LODWORD(STACK[0x408]) ^ 0xFF11787C) + 1440083453 + v75))
      - 862621162;
  int v77 = v69 + a4;
  BOOL v78 = v76 < 0x744D39FA;
  uint64_t v79 = 0x418B018541479FA3 * (*(void *)(v74 + 8 * v69) ^ 0x6D6D6D6D6D6D6D6DLL);
  unint64_t v80 = (v79 ^ v70) + v69 - (((v79 ^ v70) + (unint64_t)v69) >> (((a2 + 1) | 4u) + 12));
  uint64_t v81 = v80 - (v80 >> 16) - ((v80 - (v80 >> 16)) >> 8) + v67;
  int v82 = v66 & (v81 >> 1) ^ v81 ^ v72;
  unint64_t v83 = (v81 ^ v79) + v69 - (((v81 ^ v79) + (unint64_t)v69) >> 32);
  uint64_t v84 = v83 - (v83 >> 16) - ((v83 - (v83 >> 16)) >> 8) + v67;
  unsigned int v85 = v66 & (v84 >> 1) ^ v84;
  uint64_t v86 = v78 ^ ((v77 + 797378118) < 0x744D39FA);
  if (!v86) {
    BOOL v78 = v76 > v77 + 797378118;
  }
  unint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 8 * (int)((57 * v78) ^ v75));
  HIDWORD(a45) = a45 & v68;
  return v87(57, v75, 1951218170, a1, v87, v82 ^ v85, a3, v86, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_100600A70()
{
}

uint64_t sub_100600A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,uint64_t a51,int a52,int a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62)
{
  int v64 = LODWORD(STACK[0x230]) ^ LODWORD(STACK[0x328]) ^ a7;
  LODWORD(STACK[0x230]) = a62 ^ LODWORD(STACK[0x3DC]) ^ 0xF7F7F7F7;
  LODWORD(STACK[0x408]) = v64 ^ a56 ^ a53 ^ a52 ^ a50 ^ 0xA6766605;
  if (((*(unsigned char *)(STACK[0x398]
                  + ((*(unsigned char *)(STACK[0x398]
                               + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                    + 6) & 0xF))
       + 12) & 0xE) != 0)
    uint64_t v65 = (*(unsigned char *)(STACK[0x398]
                    + ((*(unsigned char *)(STACK[0x398]
                                 + ((*(unsigned char *)(STACK[0x398] + ((*(unsigned char *)(STACK[0x398] + 1) + 14) & 0xF)) + 1) & 0xF))
                      + 6) & 0xF))
         + 12) & 0xF;
  else {
    uint64_t v65 = 1;
  }
  return (*(uint64_t (**)(void))(v62 + 8 * ((69 * (v65 == 1)) ^ v63)))();
}

uint64_t sub_100600E08@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W6>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v63 = 1903817027 * *(unsigned __int8 *)(v60 + v58);
  unsigned int v64 = v63 ^ (v62
             + a4
             + ((a4 + v57) >> 16)
             + ((a4 + v57 + ((a4 + v57) >> 16)) >> 8)
             + a1
             - 1);
  int v65 = v58 + v62;
  unsigned int v66 = v58
      + v62
      + v64
      + ((v64 + v58) >> 16)
      + ((v64 + v58 + ((v64 + v58) >> 16)) >> 8);
  unsigned int v67 = v58
      + v62
      + (v66 ^ v63)
      + (((v66 ^ v63) + v58) >> 16)
      + (((v66 ^ v63) + v58 + (((v66 ^ v63) + v58) >> 16)) >> 8);
  int v68 = v67 ^ v63;
  unint64_t v69 = (v67 ^ v63) + v58;
  unint64_t v70 = v69 >> 16;
  unint64_t v71 = (unint64_t)(v69 + WORD1(v69)) >> 8;
  return (*(uint64_t (**)(void, void, uint64_t, unint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * ((74 * (v58 == 15)) ^ (v59 + 69889625))))((v65 + v68 + v70 + v71), v58, 74, STACK[0x410] - 1, a2, v60, v66 ^ a3 ^ a2 & (v66 >> 1) ^ v67 ^ a2 & (v67 >> 1) ^ (v65+ v68+ v70+ v71) ^ a2 & ((v65 + v68 + v70 + v71) >> 1), a2 & ((v58 + v61 + v68 + v70 + v71) >> 1), a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_100600FD4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  STACK[0x410] = a4;
  JUMPOUT(0x100600E54);
}

uint64_t sub_100600FF0@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v68 = (v65 + ((a5 + a1) >> 16) + a5 + ((a5 + a1 + ((a5 + a1) >> 16)) >> 8) - a2) ^ 0xCF39C5D0;
  unsigned int v69 = v68 - (v68 >> 13) + ((v68 - (v68 >> 13)) >> 5);
  unsigned int v70 = v69 - 107998449 - ((v69 - 107998449) >> 10) - ((v69 - 107998449 - ((v69 - 107998449) >> 10)) >> 2);
  unsigned int v71 = (v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14) - (((v70 ^ 0xF30576F9) + ((v70 ^ 0xF30576F9) >> 14)) >> 2);
  unsigned int v72 = v71 + 511487013 + ((v71 + 511487013) >> 15) + ((v71 + 511487013 + ((v71 + 511487013) >> 15)) >> 3);
  uint64_t v73 = (v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10) + (((v72 ^ 0x5985AE2F) - ((v72 ^ 0x5985AE2F) >> 10)) >> 7);
  int v74 = v73
      - 787086048
      - ((v73 - 787086048) >> 9)
      + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5);
  unsigned int v75 = v74
      - 1168002143
      - ((v74 - 1168002143) >> 14)
      + ((v74 - 1168002143 - ((v74 - 1168002143) >> 14)) >> 4);
  unsigned int v76 = v75 - 879085134 + ((v75 - 879085134) >> 10) - ((v75 - 879085134 + ((v75 - 879085134) >> 10)) >> 5);
  LODWORD(a51) = a3 & (LODWORD(STACK[0x310]) >> 1);
  HIDWORD(a50) = a3 & (HIDWORD(a52) >> 1);
  LODWORD(a56) = v70;
  HIDWORD(v88) = (((v73 ^ 0x903F3380) + (v73 | 0x6FC0CC7F) + 1) ^ v70 & 0x6FC0CC7E) >> 1;
  int v77 = a3 & (v75 >> 1) ^ v75;
  LODWORD(a53) = v66 ^ v69 ^ v72 ^ a3 & ((v72 ^ v69) >> 1);
  HIDWORD(a52) = v77 ^ a53;
  LODWORD(v88) = -v77;
  HIDWORD(v87) = v76 & 0x6FC0CC7F;
  LODWORD(v87) = !(((_BYTE)v73
                  + 32
                  - ((v73 - 787086048) >> 9)
                  + ((v73 - 787086048 - ((v73 - 787086048) >> 9)) >> 5)) & 1);
  int v78 = STACK[0x318];
  LODWORD(STACK[0x410]) = v71;
  LODWORD(STACK[0x318]) = v74;
  HIDWORD(a55) = v76 + 1300749569 - ((v76 + 1300749569) >> 9) - ((v76 + 1300749569 - ((v76 + 1300749569) >> 9)) >> 4);
  HIDWORD(a46) = (v74 ^ v71 ^ v78 ^ HIDWORD(a55)) >> 1;
  uint64_t v79 = (LODWORD(STACK[0x250]) ^ LODWORD(STACK[0x24C]));
  int v80 = STACK[0x328];
  unsigned int v81 = (v67 + 27) ^ 0x9B67EC7F ^ *((_DWORD *)*(&off_10070A5E0 + (v67 ^ 0x12)) + 232);
  LODWORD(v82) = __ROR4__(0, 20) ^ 0xAE6F4F2C;
  HIDWORD(v82) = v82;
  uint64_t v83 = LODWORD(STACK[0x38C]);
  uint64_t v84 = 4 * (LOBYTE(STACK[0x250]) ^ LOBYTE(STACK[0x24C]));
  *(_DWORD *)(STACK[0x378] + v84) = a65 ^ LODWORD(STACK[0x314]) ^ 0xE00D27BF ^ ((((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x334]) >> STACK[0x348]) | (((v81 ^ ((v81 & STACK[0x344]) >> 1)) & STACK[0x32C]) << v83));
  uint64_t v85 = LODWORD(STACK[0x40C]);
  *(_DWORD *)(STACK[0x380] + v84) = v85 ^ v80 ^ 0x8CDA8304 ^ (unsigned __int16)(((v82 >> 12) ^ 0xE6A3) - 7298) ^ *((unsigned __int16 *)*(&off_10070A5E0 + (v67 ^ 0x1C)) + ((v82 >> 12) ^ 0xF2CAE6B1) - 6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x3A0] + 8 * v67))(v73, v85, 59043, v83, a3, v79, a4, &off_10070A5E0, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           v87,
           v88,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

void sub_1006012DC()
{
}

#error "100605E70: call analysis failed (funcsize=4626)"

void sub_100605E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,int a57,int a58,int a59)
{
  LODWORD(STACK[0x28C]) = a58 ^ 0xCEEAF932;
  LODWORD(STACK[0x288]) = a57 ^ 0x79C04953;
  LODWORD(STACK[0x280]) = a56 ^ 0x32A6819A;
  LODWORD(STACK[0x284]) = a59 ^ 0x84299AD3;
  JUMPOUT(0x100602F68);
}

void sub_100605F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  uint64_t v55 = 8 * (a54 + 54);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x380]);
  (*(void (**)(unint64_t))(v54 + v55))(STACK[0x378]);
  JUMPOUT(0x100605FA8);
}

char *sub_100605FE4(char *result, char *a2, unint64_t a3)
{
  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
    {
      unsigned int v3 = (a3 + 7) >> 3;
      switch(a3 & 7)
      {
        case 1uLL:
          goto LABEL_23;
        case 2uLL:
          goto LABEL_22;
        case 3uLL:
          goto LABEL_21;
        case 4uLL:
          goto LABEL_20;
        case 5uLL:
          goto LABEL_19;
        case 6uLL:
          goto LABEL_18;
        case 7uLL:
          goto LABEL_17;
        default:
          do
          {
            char v15 = *result++;
            *a2++ = v15;
LABEL_17:
            char v16 = *result++;
            *a2++ = v16;
LABEL_18:
            char v17 = *result++;
            *a2++ = v17;
LABEL_19:
            char v18 = *result++;
            *a2++ = v18;
LABEL_20:
            char v19 = *result++;
            *a2++ = v19;
LABEL_21:
            char v20 = *result++;
            *a2++ = v20;
LABEL_22:
            char v21 = *result++;
            *a2++ = v21;
LABEL_23:
            char v22 = *result++;
            *a2++ = v22;
            --v3;
          }
          while (v3);
          break;
      }
    }
  }
  else
  {
    unint64_t v4 = -(int)result & 7;
    switch((int)v4)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        char v5 = *result++;
        *a2++ = v5;
LABEL_6:
        char v6 = *result++;
        *a2++ = v6;
LABEL_7:
        char v7 = *result++;
        *a2++ = v7;
LABEL_8:
        char v8 = *result++;
        *a2++ = v8;
LABEL_9:
        char v9 = *result++;
        *a2++ = v9;
LABEL_10:
        char v10 = *result++;
        *a2++ = v10;
LABEL_11:
        char v11 = *result++;
        *a2++ = v11;
        break;
      default:
        break;
    }
    BOOL v12 = a3 >= v4;
    unint64_t v13 = a3 - v4;
    if (!v12) {
      unint64_t v13 = 0;
    }
    if (v13 >= 8)
    {
      unint64_t v14 = ((v13 >> 3) + 7) >> 3;
      switch((v13 >> 3) & 7)
      {
        case 1uLL:
          goto LABEL_32;
        case 2uLL:
          goto LABEL_31;
        case 3uLL:
          goto LABEL_30;
        case 4uLL:
          goto LABEL_29;
        case 5uLL:
          goto LABEL_28;
        case 6uLL:
          goto LABEL_27;
        case 7uLL:
          goto LABEL_26;
        default:
          do
          {
            uint64_t v23 = *(void *)result;
            result += 8;
            *(void *)a2 = v23;
            a2 += 8;
LABEL_26:
            uint64_t v24 = *(void *)result;
            result += 8;
            *(void *)a2 = v24;
            a2 += 8;
LABEL_27:
            uint64_t v25 = *(void *)result;
            result += 8;
            *(void *)a2 = v25;
            a2 += 8;
LABEL_28:
            uint64_t v26 = *(void *)result;
            result += 8;
            *(void *)a2 = v26;
            a2 += 8;
LABEL_29:
            uint64_t v27 = *(void *)result;
            result += 8;
            *(void *)a2 = v27;
            a2 += 8;
LABEL_30:
            uint64_t v28 = *(void *)result;
            result += 8;
            *(void *)a2 = v28;
            a2 += 8;
LABEL_31:
            uint64_t v29 = *(void *)result;
            result += 8;
            *(void *)a2 = v29;
            a2 += 8;
LABEL_32:
            uint64_t v30 = *(void *)result;
            result += 8;
            *(void *)a2 = v30;
            a2 += 8;
            --v14;
          }
          while (v14);
          break;
      }
    }
    switch(v13 & 7)
    {
      case 1uLL:
        goto LABEL_40;
      case 2uLL:
        goto LABEL_39;
      case 3uLL:
        goto LABEL_38;
      case 4uLL:
        goto LABEL_37;
      case 5uLL:
        goto LABEL_36;
      case 6uLL:
        goto LABEL_35;
      case 7uLL:
        char v31 = *result++;
        *a2++ = v31;
LABEL_35:
        char v32 = *result++;
        *a2++ = v32;
LABEL_36:
        char v33 = *result++;
        *a2++ = v33;
LABEL_37:
        char v34 = *result++;
        *a2++ = v34;
LABEL_38:
        char v35 = *result++;
        *a2++ = v35;
LABEL_39:
        char v36 = *result++;
        *a2++ = v36;
LABEL_40:
        *a2 = *result;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t URLRequest.httpMethod.getter()
{
  return URLRequest.httpMethod.getter();
}

uint64_t URLRequest.httpMethod.setter()
{
  return URLRequest.httpMethod.setter();
}

uint64_t URLRequest.cachePolicy.setter()
{
  return URLRequest.cachePolicy.setter();
}

NSURLRequest __swiftcall URLRequest._bridgeToObjectiveC()()
{
  int v0 = (objc_class *)URLRequest._bridgeToObjectiveC()();
  result._internal = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t URLRequest.allHTTPHeaderFields.getter()
{
  return URLRequest.allHTTPHeaderFields.getter();
}

uint64_t static URLRequest._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URLRequest._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URLRequest.init(url:cachePolicy:timeoutInterval:)()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

uint64_t URLRequest.url.getter()
{
  return URLRequest.url.getter();
}

Swift::Void __swiftcall URLRequest.addValue(_:forHTTPHeaderField:)(Swift::String _, Swift::String forHTTPHeaderField)
{
}

uint64_t URLRequest.httpBody.getter()
{
  return URLRequest.httpBody.getter();
}

uint64_t URLRequest.httpBody.setter()
{
  return URLRequest.httpBody.setter();
}

Swift::Void __swiftcall URLRequest.setValue(_:forHTTPHeaderField:)(Swift::String_optional _, Swift::String forHTTPHeaderField)
{
}

uint64_t type metadata accessor for URLRequest()
{
  return type metadata accessor for URLRequest();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:copy:deallocator:offset:)()
{
  return __DataStorage.init(bytes:length:copy:deallocator:offset:)();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage.init(length:)()
{
  return __DataStorage.init(length:)();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.minute.getter()
{
  return DateComponents.minute.getter();
}

uint64_t DateComponents.second.getter()
{
  return DateComponents.second.getter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t URLResourceValues.isExcludedFromBackup.setter()
{
  return URLResourceValues.isExcludedFromBackup.setter();
}

uint64_t URLResourceValues.init()()
{
  return URLResourceValues.init()();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t PersonNameComponents.givenName.getter()
{
  return PersonNameComponents.givenName.getter();
}

uint64_t PersonNameComponents.givenName.setter()
{
  return PersonNameComponents.givenName.setter();
}

uint64_t PersonNameComponents.familyName.getter()
{
  return PersonNameComponents.familyName.getter();
}

uint64_t PersonNameComponents.familyName.setter()
{
  return PersonNameComponents.familyName.setter();
}

uint64_t PersonNameComponents.middleName.getter()
{
  return PersonNameComponents.middleName.getter();
}

uint64_t PersonNameComponents.namePrefix.getter()
{
  return PersonNameComponents.namePrefix.getter();
}

uint64_t PersonNameComponents.nameSuffix.getter()
{
  return PersonNameComponents.nameSuffix.getter();
}

uint64_t PersonNameComponents.nameSuffix.setter()
{
  return PersonNameComponents.nameSuffix.setter();
}

uint64_t static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t PersonNameComponents.nickname.getter()
{
  return PersonNameComponents.nickname.getter();
}

Swift::String __swiftcall PersonNameComponents.formatted()()
{
  uint64_t v0 = PersonNameComponents.formatted()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t PersonNameComponents.init()()
{
  return PersonNameComponents.init()();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t _BridgedStoredNSError.code.getter()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t URL.isFileOnDisk.getter()
{
  return URL.isFileOnDisk.getter();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t static URL.libraryDirectory.getter()
{
  return static URL.libraryDirectory.getter();
}

uint64_t URL.setResourceValues(_:)()
{
  return URL.setResourceValues(_:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.resolvingSymlinksInPath()()
{
  return URL.resolvingSymlinksInPath()();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.host.getter()
{
  return URL.host.getter();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:encodingInvalidCharacters:)()
{
  return URL.init(string:encodingInvalidCharacters:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.base64EncodedData(options:)()
{
  return Data.base64EncodedData(options:)();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t Data.init(base16Encoded:)()
{
  return Data.init(base16Encoded:)();
}

uint64_t Data.init(base64urlEncoded:)()
{
  return Data.init(base64urlEncoded:)();
}

Swift::String __swiftcall Data.base16EncodedString()()
{
  uint64_t v0 = Data.base16EncodedString()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t Data._copyContents(initializing:)()
{
  return Data._copyContents(initializing:)();
}

uint64_t Data.init(base64Encoded:options:)()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t Data._Representation.subscript.getter()
{
  return Data._Representation.subscript.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1 = Data.base64EncodedString(options:)(options);
  result._object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.hash(into:)()
{
  return Data.hash(into:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Data.append(_:)()
{
  return Data.append(_:)();
}

uint64_t Data.subdata(in:)()
{
  return Data.subdata(in:)();
}

uint64_t type metadata accessor for Data.Iterator()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.isBeforeAndWithin(seconds:of:)()
{
  return Date.isBeforeAndWithin(seconds:of:)();
}

uint64_t Date.addingRandomOffset(in:)()
{
  return Date.addingRandomOffset(in:)();
}

uint64_t Date.utcDayRepresentation.getter()
{
  return Date.utcDayRepresentation.getter();
}

uint64_t Date.isAtLeast(days:after:)()
{
  return Date.isAtLeast(days:after:)();
}

uint64_t Date.isAtLeast(seconds:after:)()
{
  return Date.isAtLeast(seconds:after:)();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t static Date.- infix(_:_:)()
{
  return static Date.- infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.init(identifier:)()
{
  return Locale.init(identifier:)();
}

uint64_t Locale.LanguageCode.identifier.getter()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t type metadata accessor for Locale.LanguageCode()
{
  return type metadata accessor for Locale.LanguageCode();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t Locale.Region.identifier.getter()
{
  return Locale.Region.identifier.getter();
}

uint64_t Locale.Region.init(stringLiteral:)()
{
  return Locale.Region.init(stringLiteral:)();
}

uint64_t type metadata accessor for Locale.Region()
{
  return type metadata accessor for Locale.Region();
}

uint64_t Locale.region.getter()
{
  return Locale.region.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t Locale.Language.languageCode.getter()
{
  return Locale.Language.languageCode.getter();
}

uint64_t Locale.Language.region.getter()
{
  return Locale.Language.region.getter();
}

uint64_t type metadata accessor for Locale.Language()
{
  return type metadata accessor for Locale.Language();
}

uint64_t Locale.language.getter()
{
  return Locale.language.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t type metadata accessor for Calendar.Identifier()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t Calendar.init(identifier:)()
{
  return Calendar.init(identifier:)();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

NSCalendar __swiftcall Calendar._bridgeToObjectiveC()()
{
  return (NSCalendar)Calendar._bridgeToObjectiveC()();
}

uint64_t Calendar.date(byAdding:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:to:wrappingComponents:)();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t TimeZone.init(secondsFromGMT:)()
{
  return TimeZone.init(secondsFromGMT:)();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t static URLError.Code.networkConnectionLost.getter()
{
  return static URLError.Code.networkConnectionLost.getter();
}

uint64_t type metadata accessor for URLError.Code()
{
  return type metadata accessor for URLError.Code();
}

uint64_t type metadata accessor for URLError()
{
  return type metadata accessor for URLError();
}

uint64_t COSE_Sign1.init(fromHexData:)()
{
  return COSE_Sign1.init(fromHexData:)();
}

uint64_t COSE_Sign1.AlgorithmIdentifier.rawValue.getter()
{
  return COSE_Sign1.AlgorithmIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for COSE_Sign1.AlgorithmIdentifier()
{
  return type metadata accessor for COSE_Sign1.AlgorithmIdentifier();
}

uint64_t COSE_Sign1.init(algorithmIdentifier:keyIdentifier:payload:signature:includeCBORTag:)()
{
  return COSE_Sign1.init(algorithmIdentifier:keyIdentifier:payload:signature:includeCBORTag:)();
}

uint64_t COSE_Sign1.keyIdentifier.getter()
{
  return COSE_Sign1.keyIdentifier.getter();
}

uint64_t COSE_Sign1.init(algorithmIdentifier:keyIdentifier:initializationVector:partialInitializationVector:payload:signature:x509Chain:includeCBORTag:)()
{
  return COSE_Sign1.init(algorithmIdentifier:keyIdentifier:initializationVector:partialInitializationVector:payload:signature:x509Chain:includeCBORTag:)();
}

uint64_t COSE_Sign1.algorithmIdentifier.getter()
{
  return COSE_Sign1.algorithmIdentifier.getter();
}

uint64_t COSE_Sign1.payload.getter()
{
  return COSE_Sign1.payload.getter();
}

uint64_t COSE_Sign1.signature.getter()
{
  return COSE_Sign1.signature.getter();
}

uint64_t COSE_Sign1.x509Chain.getter()
{
  return COSE_Sign1.x509Chain.getter();
}

uint64_t type metadata accessor for COSE_Sign1()
{
  return type metadata accessor for COSE_Sign1();
}

uint64_t dispatch thunk of CBORDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of CBORDecoder.decode<A>(_:from:)();
}

uint64_t CBORDecoder.init()()
{
  return CBORDecoder.init()();
}

uint64_t type metadata accessor for CBORDecoder()
{
  return type metadata accessor for CBORDecoder();
}

uint64_t CBOREncoder.presentmentType.setter()
{
  return CBOREncoder.presentmentType.setter();
}

uint64_t dispatch thunk of CBOREncoder.encode<A>(_:)()
{
  return dispatch thunk of CBOREncoder.encode<A>(_:)();
}

uint64_t CBOREncoder.init()()
{
  return CBOREncoder.init()();
}

uint64_t type metadata accessor for CBOREncoder()
{
  return type metadata accessor for CBOREncoder();
}

uint64_t COSEKey.publicKeyData.getter()
{
  return COSEKey.publicKeyData.getter();
}

uint64_t COSEKey.ec2.getter()
{
  return COSEKey.ec2.getter();
}

uint64_t COSEKey.okp.getter()
{
  return COSEKey.okp.getter();
}

uint64_t COSEKey.init(data:)()
{
  return COSEKey.init(data:)();
}

uint64_t type metadata accessor for COSEKey()
{
  return type metadata accessor for COSEKey();
}

uint64_t type metadata accessor for COSE_Mac0()
{
  return type metadata accessor for COSE_Mac0();
}

uint64_t CGFloat.init(truncating:)()
{
  return CGFloat.init(truncating:)();
}

uint64_t static AlternationBuilder.buildExpression<A>(_:)()
{
  return static AlternationBuilder.buildExpression<A>(_:)();
}

uint64_t static AlternationBuilder.buildPartialBlock<A>(first:)()
{
  return static AlternationBuilder.buildPartialBlock<A>(first:)();
}

uint64_t static RegexComponentBuilder.buildExpression<A>(_:)()
{
  return static RegexComponentBuilder.buildExpression<A>(_:)();
}

uint64_t static RegexComponentBuilder.buildPartialBlock<A>(first:)()
{
  return static RegexComponentBuilder.buildPartialBlock<A>(first:)();
}

uint64_t Optionally.init(_:)()
{
  return Optionally.init(_:)();
}

uint64_t makeFactory()()
{
  return makeFactory()();
}

uint64_t type metadata accessor for CharacterClass()
{
  return type metadata accessor for CharacterClass();
}

uint64_t Capture.init(_:)()
{
  return Capture.init(_:)();
}

uint64_t ChoiceOf.init(_:)()
{
  return ChoiceOf.init(_:)();
}

{
  return ChoiceOf.init(_:)();
}

uint64_t OneOrMore.init(_:)()
{
  return OneOrMore.init(_:)();
}

uint64_t AsyncCoreDataContainer.init(contextBuilder:)()
{
  return AsyncCoreDataContainer.init(contextBuilder:)();
}

uint64_t AsyncCoreDataStore.init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)()
{
  return AsyncCoreDataStore.init(persistentStoreName:modelURL:databaseURL:storeType:urlFileProtection:)();
}

uint64_t type metadata accessor for AsyncCoreDataStore.StoreType()
{
  return type metadata accessor for AsyncCoreDataStore.StoreType();
}

uint64_t AsyncCoreDataStore.container.getter()
{
  return AsyncCoreDataStore.container.getter();
}

uint64_t type metadata accessor for AsyncCoreDataStore()
{
  return type metadata accessor for AsyncCoreDataStore();
}

uint64_t type metadata accessor for CoreIDVFeatureFlag()
{
  return type metadata accessor for CoreIDVFeatureFlag();
}

uint64_t AnyCodable.arrayValue.getter()
{
  return AnyCodable.arrayValue.getter();
}

uint64_t AnyCodable.stringValue.getter()
{
  return AnyCodable.stringValue.getter();
}

uint64_t AnyCodable.init(value:)()
{
  return AnyCodable.init(value:)();
}

{
  return AnyCodable.init(value:)();
}

uint64_t AnyCodable.value.getter()
{
  return AnyCodable.value.getter();
}

uint64_t AnyCodable.dateValue.getter()
{
  return AnyCodable.dateValue.getter();
}

uint64_t AnyCodable.dictValue.getter()
{
  return AnyCodable.dictValue.getter();
}

uint64_t type metadata accessor for AnyCodable()
{
  return type metadata accessor for AnyCodable();
}

uint64_t DIPRetrier.init(maxRetries:backoffStrategy:asyncTimeout:)()
{
  return DIPRetrier.init(maxRetries:backoffStrategy:asyncTimeout:)();
}

uint64_t DIPRetrier.sync(_:)()
{
  return DIPRetrier.sync(_:)();
}

uint64_t DIPRetrier.async(action:completion:)()
{
  return DIPRetrier.async(action:completion:)();
}

uint64_t type metadata accessor for DIPRetrier()
{
  return type metadata accessor for DIPRetrier();
}

uint64_t HashDigest.equalsHash(of:)()
{
  return HashDigest.equalsHash(of:)();
}

uint64_t type metadata accessor for HashDigest()
{
  return type metadata accessor for HashDigest();
}

uint64_t PDF417Data.rawData.getter()
{
  return PDF417Data.rawData.getter();
}

uint64_t PDF417Data.parsedData.getter()
{
  return PDF417Data.parsedData.getter();
}

uint64_t type metadata accessor for PDF417Data()
{
  return type metadata accessor for PDF417Data();
}

uint64_t randomData(numBytes:)()
{
  return randomData(numBytes:)();
}

uint64_t BigUIntCBOR.value.getter()
{
  return BigUIntCBOR.value.getter();
}

uint64_t type metadata accessor for BigUIntCBOR()
{
  return type metadata accessor for BigUIntCBOR();
}

uint64_t static DIPFeatures.sharedInstance.getter()
{
  return static DIPFeatures.sharedInstance.getter();
}

uint64_t DIPLogError(_:message:log:)()
{
  return DIPLogError(_:message:log:)();
}

Swift::Void __swiftcall DIPSignpost.end(workflowID:isBackground:)(Swift::String_optional workflowID, Swift::Bool_optional isBackground)
{
}

Swift::Void __swiftcall DIPSignpost.end(fromCache:)(Swift::Bool fromCache)
{
}

uint64_t type metadata accessor for DIPSignpost.Config()
{
  return type metadata accessor for DIPSignpost.Config();
}

uint64_t type metadata accessor for DIPSignpost()
{
  return type metadata accessor for DIPSignpost();
}

uint64_t DIPSignpost.init(_:)()
{
  return DIPSignpost.init(_:)();
}

uint64_t static DeviceClass.== infix(_:_:)()
{
  return static DeviceClass.== infix(_:_:)();
}

uint64_t type metadata accessor for DeviceClass()
{
  return type metadata accessor for DeviceClass();
}

uint64_t type metadata accessor for ECIESOption()
{
  return type metadata accessor for ECIESOption();
}

uint64_t IQImageType.rawValue.getter()
{
  return IQImageType.rawValue.getter();
}

uint64_t type metadata accessor for IQImageType()
{
  return type metadata accessor for IQImageType();
}

uint64_t dispatch thunk of IdentityKey.getIdentityPublicKeyData()()
{
  return dispatch thunk of IdentityKey.getIdentityPublicKeyData()();
}

uint64_t dispatch thunk of IdentityKey.getIdentityPrivateKey()()
{
  return dispatch thunk of IdentityKey.getIdentityPrivateKey()();
}

uint64_t dispatch thunk of IdentityKey.attestation(_:)()
{
  return dispatch thunk of IdentityKey.attestation(_:)();
}

uint64_t dispatch thunk of IdentityKey.attestationType()()
{
  return dispatch thunk of IdentityKey.attestationType()();
}

uint64_t dispatch thunk of IdentityKey.sign(_:)()
{
  return dispatch thunk of IdentityKey.sign(_:)();
}

uint64_t dispatch thunk of IdentityKey.persist()()
{
  return dispatch thunk of IdentityKey.persist()();
}

uint64_t PRDMetadata.stage2.getter()
{
  return PRDMetadata.stage2.getter();
}

uint64_t PRDMetadata.timestamp.getter()
{
  return PRDMetadata.timestamp.getter();
}

uint64_t dispatch thunk of SESKeystore.signDigest(_:withKey:externalizedLAContext:outputFormat:seAccessEndpoint:)()
{
  return dispatch thunk of SESKeystore.signDigest(_:withKey:externalizedLAContext:outputFormat:seAccessEndpoint:)();
}

uint64_t dispatch thunk of SESKeystore.getPublicKey(of:)()
{
  return dispatch thunk of SESKeystore.getPublicKey(of:)();
}

uint64_t type metadata accessor for SESKeystore.SignatureOutputFormat()
{
  return type metadata accessor for SESKeystore.SignatureOutputFormat();
}

uint64_t dispatch thunk of SESKeystore.createSEBAASCertificate(with:validityInterval:)()
{
  return dispatch thunk of SESKeystore.createSEBAASCertificate(with:validityInterval:)();
}

uint64_t dispatch thunk of SESKeystore.createKey(acl:)()
{
  return dispatch thunk of SESKeystore.createKey(acl:)();
}

uint64_t dispatch thunk of SESKeystore.deleteKey(_:)()
{
  return dispatch thunk of SESKeystore.deleteKey(_:)();
}

uint64_t SESKeystore.init()()
{
  return SESKeystore.init()();
}

uint64_t type metadata accessor for SESKeystore()
{
  return type metadata accessor for SESKeystore();
}

uint64_t optionalMax<A>(_:_:)()
{
  return optionalMax<A>(_:_:)();
}

uint64_t dispatch thunk of AsyncPromise.fail(error:)()
{
  return dispatch thunk of AsyncPromise.fail(error:)();
}

uint64_t dispatch thunk of AsyncPromise.fulfill(value:)()
{
  return dispatch thunk of AsyncPromise.fulfill(value:)();
}

uint64_t AsyncPromise.__allocating_init()()
{
  return AsyncPromise.__allocating_init()();
}

uint64_t static DIPCertUsage.japanNationalIDCardIssuerAuth.getter()
{
  return static DIPCertUsage.japanNationalIDCardIssuerAuth.getter();
}

uint64_t type metadata accessor for DIPCertUsage()
{
  return type metadata accessor for DIPCertUsage();
}

uint64_t dispatch thunk of static DateProvider.now.getter()
{
  return dispatch thunk of static DateProvider.now.getter();
}

uint64_t type metadata accessor for IQComparator()
{
  return type metadata accessor for IQComparator();
}

uint64_t IdentityType.init(from:)()
{
  return IdentityType.init(from:)();
}

uint64_t IdentityType.rawValue.getter()
{
  return IdentityType.rawValue.getter();
}

uint64_t static MetricsFlags.blurriness.getter()
{
  return static MetricsFlags.blurriness.getter();
}

uint64_t static MetricsFlags.fuzzyMatch.getter()
{
  return static MetricsFlags.fuzzyMatch.getter();
}

uint64_t static MetricsFlags.captureTime.getter()
{
  return static MetricsFlags.captureTime.getter();
}

uint64_t static MetricsFlags.targetDrift.getter()
{
  return static MetricsFlags.targetDrift.getter();
}

uint64_t static MetricsFlags.documentSize.getter()
{
  return static MetricsFlags.documentSize.getter();
}

uint64_t static MetricsFlags.documentSkew.getter()
{
  return static MetricsFlags.documentSkew.getter();
}

uint64_t static MetricsFlags.issuerNumber.getter()
{
  return static MetricsFlags.issuerNumber.getter();
}

uint64_t static MetricsFlags.livenessChute.getter()
{
  return static MetricsFlags.livenessChute.getter();
}

uint64_t static MetricsFlags.cardDistortion.getter()
{
  return static MetricsFlags.cardDistortion.getter();
}

uint64_t static MetricsFlags.closestMatches.getter()
{
  return static MetricsFlags.closestMatches.getter();
}

uint64_t static MetricsFlags.faceConfidence.getter()
{
  return static MetricsFlags.faceConfidence.getter();
}

uint64_t static MetricsFlags.isAutoCaptured.getter()
{
  return static MetricsFlags.isAutoCaptured.getter();
}

uint64_t static MetricsFlags.isFlashEnabled.getter()
{
  return static MetricsFlags.isFlashEnabled.getter();
}

uint64_t static MetricsFlags.pdf417Detected.getter()
{
  return static MetricsFlags.pdf417Detected.getter();
}

uint64_t static MetricsFlags.targetVertices.getter()
{
  return static MetricsFlags.targetVertices.getter();
}

uint64_t static MetricsFlags.documentCorners.getter()
{
  return static MetricsFlags.documentCorners.getter();
}

uint64_t static MetricsFlags.documentRotation.getter()
{
  return static MetricsFlags.documentRotation.getter();
}

uint64_t static MetricsFlags.faceToImageRatio.getter()
{
  return static MetricsFlags.faceToImageRatio.getter();
}

uint64_t static MetricsFlags.isAAMVACompliant.getter()
{
  return static MetricsFlags.isAAMVACompliant.getter();
}

uint64_t static MetricsFlags.originalVertices.getter()
{
  return static MetricsFlags.originalVertices.getter();
}

uint64_t static MetricsFlags.rectangleCorners.getter()
{
  return static MetricsFlags.rectangleCorners.getter();
}

uint64_t static MetricsFlags.faceCenteredRatio.getter()
{
  return static MetricsFlags.faceCenteredRatio.getter();
}

uint64_t static MetricsFlags.blinkingConfidence.getter()
{
  return static MetricsFlags.blinkingConfidence.getter();
}

uint64_t static MetricsFlags.faceCaptureQuality.getter()
{
  return static MetricsFlags.faceCaptureQuality.getter();
}

uint64_t static MetricsFlags.facemaskConfidence.getter()
{
  return static MetricsFlags.facemaskConfidence.getter();
}

uint64_t static MetricsFlags.headgearConfidence.getter()
{
  return static MetricsFlags.headgearConfidence.getter();
}

uint64_t static MetricsFlags.sunglassesConfidence.getter()
{
  return static MetricsFlags.sunglassesConfidence.getter();
}

uint64_t static MetricsFlags.prescriptionConfidence.getter()
{
  return static MetricsFlags.prescriptionConfidence.getter();
}

uint64_t static MetricsFlags.headYaw.getter()
{
  return static MetricsFlags.headYaw.getter();
}

uint64_t static MetricsFlags.exposure.getter()
{
  return static MetricsFlags.exposure.getter();
}

uint64_t static MetricsFlags.headRoll.getter()
{
  return static MetricsFlags.headRoll.getter();
}

uint64_t static MetricsFlags.luxLevel.getter()
{
  return static MetricsFlags.luxLevel.getter();
}

uint64_t static MetricsFlags.numFaces.getter()
{
  return static MetricsFlags.numFaces.getter();
}

uint64_t static MetricsFlags.headPitch.getter()
{
  return static MetricsFlags.headPitch.getter();
}

uint64_t type metadata accessor for MetricsFlags()
{
  return type metadata accessor for MetricsFlags();
}

uint64_t dispatch thunk of OIDVerifying.setTrustedRoots(_:)()
{
  return dispatch thunk of OIDVerifying.setTrustedRoots(_:)();
}

uint64_t type metadata accessor for TimeoutError()
{
  return type metadata accessor for TimeoutError();
}

uint64_t UTCTimestamp(_:)()
{
  return UTCTimestamp(_:)();
}

Swift::Void __swiftcall logMilestone(tag:description:)(Swift::String tag, Swift::String description)
{
}

uint64_t HPKESuiteKwV1.init(pkISm:info:)()
{
  return HPKESuiteKwV1.init(pkISm:info:)();
}

uint64_t type metadata accessor for HPKESuiteKwV1()
{
  return type metadata accessor for HPKESuiteKwV1();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JWSSignedJSON.setCertificateChain(_:)(Swift::OpaquePointer a1)
{
}

uint64_t JWSSignedJSON.setKid(_:)()
{
  return JWSSignedJSON.setKid(_:)();
}

uint64_t JWSSignedJSON.init(payload:)()
{
  return JWSSignedJSON.init(payload:)();
}

uint64_t JWSSignedJSON.payload.getter()
{
  return JWSSignedJSON.payload.getter();
}

Swift::Void __swiftcall JWSSignedJSON.setSalt(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall JWSSignedJSON.setNonce(_:)(Swift::String a1)
{
}

uint64_t type metadata accessor for JWSSignedJSON()
{
  return type metadata accessor for JWSSignedJSON();
}

uint64_t JWSSignedJSON.init(_:)()
{
  return JWSSignedJSON.init(_:)();
}

uint64_t SealedMessage.unencryptedData.getter()
{
  return SealedMessage.unencryptedData.getter();
}

uint64_t SealedMessage.data.getter()
{
  return SealedMessage.data.getter();
}

uint64_t SealedMessage.init(keyID:data:unencryptedData:)()
{
  return SealedMessage.init(keyID:data:unencryptedData:)();
}

uint64_t SealedMessage.keyID.getter()
{
  return SealedMessage.keyID.getter();
}

uint64_t type metadata accessor for SealedMessage()
{
  return type metadata accessor for SealedMessage();
}

uint64_t VICALDocument.certificateInfos.getter()
{
  return VICALDocument.certificateInfos.getter();
}

uint64_t type metadata accessor for VICALDocument()
{
  return type metadata accessor for VICALDocument();
}

uint64_t defaultLogger()()
{
  return defaultLogger()();
}

uint64_t DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)()
{
  return DIPOIDVerifier.verifyLeaf(fromBase64DER:forUsage:)();
}

uint64_t DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)()
{
  return DIPOIDVerifier.verifyChain(fromBase64DER:forUsage:)();
}

uint64_t DIPOIDVerifier.verifyChain(_:forUsage:)()
{
  return DIPOIDVerifier.verifyChain(_:forUsage:)();
}

Swift::Void __swiftcall DIPOIDVerifier.setIntermediates(fromBase64DER:)(Swift::OpaquePointer fromBase64DER)
{
}

uint64_t static DIPOIDVerifier.getSpecificCertificateError(_:)()
{
  return static DIPOIDVerifier.getSpecificCertificateError(_:)();
}

uint64_t DIPOIDVerifier.init()()
{
  return DIPOIDVerifier.init()();
}

uint64_t type metadata accessor for DIPOIDVerifier()
{
  return type metadata accessor for DIPOIDVerifier();
}

uint64_t DIPRecordError(_:message:log:)()
{
  return DIPRecordError(_:message:log:)();
}

uint64_t type metadata accessor for DIPRetryResult()
{
  return type metadata accessor for DIPRetryResult();
}

uint64_t IdentityTarget.debugDescription.getter()
{
  return IdentityTarget.debugDescription.getter();
}

uint64_t IdentityTarget.init(rawValue:)()
{
  return IdentityTarget.init(rawValue:)();
}

uint64_t IdentityTarget.rawValue.getter()
{
  return IdentityTarget.rawValue.getter();
}

uint64_t dispatch thunk of NetworkMonitor.currentPath.getter()
{
  return dispatch thunk of NetworkMonitor.currentPath.getter();
}

uint64_t static NetworkMonitor.shared.getter()
{
  return static NetworkMonitor.shared.getter();
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return type metadata accessor for NetworkMonitor();
}

uint64_t static VICALMilestone.loadDocument.getter()
{
  return static VICALMilestone.loadDocument.getter();
}

uint64_t static VICALMilestone.storeDocument.getter()
{
  return static VICALMilestone.storeDocument.getter();
}

uint64_t static VICALMilestone.missingDocument.getter()
{
  return static VICALMilestone.missingDocument.getter();
}

uint64_t static VICALMilestone.cdnReturnedDocument.getter()
{
  return static VICALMilestone.cdnReturnedDocument.getter();
}

uint64_t static VICALMilestone.cacheReturnedDocument.getter()
{
  return static VICALMilestone.cacheReturnedDocument.getter();
}

uint64_t static VICALMilestone.documentSignatureValid.getter()
{
  return static VICALMilestone.documentSignatureValid.getter();
}

uint64_t static VICALMilestone.documentSignerCertificateExpired.getter()
{
  return static VICALMilestone.documentSignerCertificateExpired.getter();
}

uint64_t static VICALMilestone.documentSignerCertificateRevoked.getter()
{
  return static VICALMilestone.documentSignerCertificateRevoked.getter();
}

uint64_t static VICALMilestone.documentSignerCertificateTrusted.getter()
{
  return static VICALMilestone.documentSignerCertificateTrusted.getter();
}

uint64_t static VICALMilestone.documentSignerCertificateUntrusted.getter()
{
  return static VICALMilestone.documentSignerCertificateUntrusted.getter();
}

Swift::Void __swiftcall setProcessName(_:)(Swift::String a1)
{
}

uint64_t AnyCodableArray.value.getter()
{
  return AnyCodableArray.value.getter();
}

uint64_t type metadata accessor for AnyCodableArray()
{
  return type metadata accessor for AnyCodableArray();
}

uint64_t CBOREncodedCBOR.init(value:tag:encoder:)()
{
  return CBOREncodedCBOR.init(value:tag:encoder:)();
}

uint64_t CBOREncodedCBOR.value.getter()
{
  return CBOREncodedCBOR.value.getter();
}

uint64_t CBOREncodedCBOR.dataValue.getter()
{
  return CBOREncodedCBOR.dataValue.getter();
}

uint64_t static CertUsageMapper.sharedInstance.getter()
{
  return static CertUsageMapper.sharedInstance.getter();
}

uint64_t CertUsageMapper.registerMapping(forType:usage:)()
{
  return CertUsageMapper.registerMapping(forType:usage:)();
}

uint64_t type metadata accessor for CertUsageMapper()
{
  return type metadata accessor for CertUsageMapper();
}

uint64_t type metadata accessor for DIPKeyAlgorithm()
{
  return type metadata accessor for DIPKeyAlgorithm();
}

uint64_t static DaemonAnalytics.sendAccountKeySigningKeyUnavailableEvent()()
{
  return static DaemonAnalytics.sendAccountKeySigningKeyUnavailableEvent()();
}

uint64_t type metadata accessor for DaemonAnalytics.VICALFetchResult()
{
  return type metadata accessor for DaemonAnalytics.VICALFetchResult();
}

uint64_t static DaemonAnalytics.sendVICALFetchedEvent(result:error:)()
{
  return static DaemonAnalytics.sendVICALFetchedEvent(result:error:)();
}

uint64_t static DaemonAnalytics.sendGenderInvalidEvent(issuer:)()
{
  return static DaemonAnalytics.sendGenderInvalidEvent(issuer:)();
}

uint64_t static DaemonAnalytics.sendWatchUnpairedEvent(hasMatchingSession:)()
{
  return static DaemonAnalytics.sendWatchUnpairedEvent(hasMatchingSession:)();
}

uint64_t static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)()
{
  return static DaemonAnalytics.sendODNProfileUsedEvent(providerID:workflowID:fromWorkflow:fromCDN:fromFallback:isUnavailable:)();
}

uint64_t static DaemonAnalytics.sendGarbageCollectedEvent(eventType:count:)()
{
  return static DaemonAnalytics.sendGarbageCollectedEvent(eventType:count:)();
}

uint64_t type metadata accessor for DaemonAnalytics.GarbageCollectionEventType()
{
  return type metadata accessor for DaemonAnalytics.GarbageCollectionEventType();
}

uint64_t static DaemonAnalytics.sendDateOfBirthInvalidEvent(issuer:isEmpty:invalidRange:incorrectFormat:)()
{
  return static DaemonAnalytics.sendDateOfBirthInvalidEvent(issuer:isEmpty:invalidRange:incorrectFormat:)();
}

uint64_t static DaemonAnalytics.sendStaticAssetFetchedEvent(wasLoadedFromCache:)()
{
  return static DaemonAnalytics.sendStaticAssetFetchedEvent(wasLoadedFromCache:)();
}

uint64_t static DaemonAnalytics.sendPasskitRegistrationEvent(success:preconditionFailed:)()
{
  return static DaemonAnalytics.sendPasskitRegistrationEvent(success:preconditionFailed:)();
}

uint64_t static DaemonAnalytics.sendReadDocumentSessionStatus(status:)()
{
  return static DaemonAnalytics.sendReadDocumentSessionStatus(status:)();
}

uint64_t static DaemonAnalytics.sendBoundBiometricDeletedEvent()()
{
  return static DaemonAnalytics.sendBoundBiometricDeletedEvent()();
}

uint64_t static DaemonAnalytics.sendDynamicWorkflowNeededEvent(providerID:wasFetchedInTime:didError:)()
{
  return static DaemonAnalytics.sendDynamicWorkflowNeededEvent(providerID:wasFetchedInTime:didError:)();
}

uint64_t static DaemonAnalytics.sendStaticWorkflowFetchedEvent(workflowID:wasLoadedFromCache:)()
{
  return static DaemonAnalytics.sendStaticWorkflowFetchedEvent(workflowID:wasLoadedFromCache:)();
}

uint64_t static DaemonAnalytics.sendUploadedAssetToCloudKitEvent(assetType:isUserInitiated:fileSizeBytes:batchUploadDurationSeconds:metaUploadDurationSeconds:batchSizeBytes:batchAssetCount:networkType:networkCost:isScheduledUpload:)()
{
  return static DaemonAnalytics.sendUploadedAssetToCloudKitEvent(assetType:isUserInitiated:fileSizeBytes:batchUploadDurationSeconds:metaUploadDurationSeconds:batchSizeBytes:batchAssetCount:networkType:networkCost:isScheduledUpload:)();
}

uint64_t type metadata accessor for DaemonAnalytics.MobileDocumentReaderSessionStatus()
{
  return type metadata accessor for DaemonAnalytics.MobileDocumentReaderSessionStatus();
}

uint64_t static DaemonAnalytics.sendODNConcurrentInvocationsEvent(workflowInProgress:newWorkflow:isBackground:)()
{
  return static DaemonAnalytics.sendODNConcurrentInvocationsEvent(workflowInProgress:newWorkflow:isBackground:)();
}

uint64_t static DaemonAnalytics.sendResponseValidationResultEvent(result:issuerCertificateChain:)()
{
  return static DaemonAnalytics.sendResponseValidationResultEvent(result:issuerCertificateChain:)();
}

uint64_t type metadata accessor for DaemonAnalytics.MobileDocumentReaderFetchLogoError()
{
  return type metadata accessor for DaemonAnalytics.MobileDocumentReaderFetchLogoError();
}

uint64_t static DaemonAnalytics.sendImageQualitySettingsNeededEvent(providerID:wasFetchedInTime:didError:)()
{
  return static DaemonAnalytics.sendImageQualitySettingsNeededEvent(providerID:wasFetchedInTime:didError:)();
}

uint64_t type metadata accessor for DaemonAnalytics.DigitalPresentmentSpinnerShownOutcome()
{
  return type metadata accessor for DaemonAnalytics.DigitalPresentmentSpinnerShownOutcome();
}

uint64_t static DaemonAnalytics.sendIdentityProvisioningAttemptedEvent(workflowID:trigger:target:wasSuccessful:)()
{
  return static DaemonAnalytics.sendIdentityProvisioningAttemptedEvent(workflowID:trigger:target:wasSuccessful:)();
}

uint64_t type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventElement()
{
  return type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventElement();
}

uint64_t type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventOutcome()
{
  return type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventOutcome();
}

uint64_t static DaemonAnalytics.sendDigitalPresentmentSpinnerShownEvent(outcome:duration:)()
{
  return static DaemonAnalytics.sendDigitalPresentmentSpinnerShownEvent(outcome:duration:)();
}

uint64_t static DaemonAnalytics.sendMobileDocumentReaderFetchLogoResult(result:logoURLString:)()
{
  return static DaemonAnalytics.sendMobileDocumentReaderFetchLogoResult(result:logoURLString:)();
}

uint64_t type metadata accessor for DaemonAnalytics.MobileDocumentReaderInvalidSessionReason()
{
  return type metadata accessor for DaemonAnalytics.MobileDocumentReaderInvalidSessionReason();
}

uint64_t type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventRetention()
{
  return type metadata accessor for DaemonAnalytics.DigitalPresentmentRequestedEventRetention();
}

uint64_t static DaemonAnalytics.sendDigitalPresentmentRequestDocumentEvent(merchantID:bundleID:documentType:outcome:elements:isTestMDL:)()
{
  return static DaemonAnalytics.sendDigitalPresentmentRequestDocumentEvent(merchantID:bundleID:documentType:outcome:elements:isTestMDL:)();
}

uint64_t type metadata accessor for DaemonAnalytics.DigitalPresentmentCanRequestDocumentOutcome()
{
  return type metadata accessor for DaemonAnalytics.DigitalPresentmentCanRequestDocumentOutcome();
}

uint64_t static DaemonAnalytics.sendMobileDocumentReaderSEPairingResultEvent(result:)()
{
  return static DaemonAnalytics.sendMobileDocumentReaderSEPairingResultEvent(result:)();
}

uint64_t static DaemonAnalytics.sendDigitalPresentmentCanRequestDocumentEvent(outcome:bundleID:documentType:isTestMDL:)()
{
  return static DaemonAnalytics.sendDigitalPresentmentCanRequestDocumentEvent(outcome:bundleID:documentType:isTestMDL:)();
}

uint64_t static DaemonAnalytics.sendMobileDocumentReaderAttestationKeyCreationFailedEvent(error:)()
{
  return static DaemonAnalytics.sendMobileDocumentReaderAttestationKeyCreationFailedEvent(error:)();
}

uint64_t type metadata accessor for DaemonAnalytics()
{
  return type metadata accessor for DaemonAnalytics();
}

uint64_t static DaemonSignposts.ordRequest.getter()
{
  return static DaemonSignposts.ordRequest.getter();
}

uint64_t static DaemonSignposts.otdRequest.getter()
{
  return static DaemonSignposts.otdRequest.getter();
}

uint64_t static DaemonSignposts.webRequest.getter()
{
  return static DaemonSignposts.webRequest.getter();
}

uint64_t static DaemonSignposts.getSTSRequest.getter()
{
  return static DaemonSignposts.getSTSRequest.getter();
}

uint64_t static DaemonSignposts.configureTotal.getter()
{
  return static DaemonSignposts.configureTotal.getter();
}

uint64_t static DaemonSignposts.spNonceRequest.getter()
{
  return static DaemonSignposts.spNonceRequest.getter();
}

uint64_t static DaemonSignposts.fetchAssessment.getter()
{
  return static DaemonSignposts.fetchAssessment.getter();
}

uint64_t static DaemonSignposts.requestDocument.getter()
{
  return static DaemonSignposts.requestDocument.getter();
}

uint64_t static DaemonSignposts.uploadAssetsAPI.getter()
{
  return static DaemonSignposts.uploadAssetsAPI.getter();
}

uint64_t static DaemonSignposts.warmupBuddyFlow.getter()
{
  return static DaemonSignposts.warmupBuddyFlow.getter();
}

uint64_t static DaemonSignposts.fetchSEABAASCert.getter()
{
  return static DaemonSignposts.fetchSEABAASCert.getter();
}

uint64_t static DaemonSignposts.warmupAssessment.getter()
{
  return static DaemonSignposts.warmupAssessment.getter();
}

uint64_t static DaemonSignposts.getProfileRequest.getter()
{
  return static DaemonSignposts.getProfileRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentUI.getter()
{
  return static DaemonSignposts.requestDocumentUI.getter();
}

uint64_t static DaemonSignposts.canRequestDocument.getter()
{
  return static DaemonSignposts.canRequestDocument.getter();
}

uint64_t static DaemonSignposts.getStaticTCRequest.getter()
{
  return static DaemonSignposts.getStaticTCRequest.getter();
}

uint64_t static DaemonSignposts.topekaNonceRequest.getter()
{
  return static DaemonSignposts.topekaNonceRequest.getter();
}

uint64_t static DaemonSignposts.warmupDeviceLocked.getter()
{
  return static DaemonSignposts.warmupDeviceLocked.getter();
}

uint64_t static DaemonSignposts.configureLoadConfig.getter()
{
  return static DaemonSignposts.configureLoadConfig.getter();
}

uint64_t static DaemonSignposts.decodeVerifiedClaim.getter()
{
  return static DaemonSignposts.decodeVerifiedClaim.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.canReadDocument.getter()
{
  return static DaemonSignposts.MobileDocumentReader.canReadDocument.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.startReadDocument.getter()
{
  return static DaemonSignposts.MobileDocumentReader.startReadDocument.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.signRequest.getter()
{
  return static DaemonSignposts.MobileDocumentReader.signRequest.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.buildRequest.getter()
{
  return static DaemonSignposts.MobileDocumentReader.buildRequest.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.storeSession.getter()
{
  return static DaemonSignposts.MobileDocumentReader.storeSession.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.parseResponse.getter()
{
  return static DaemonSignposts.MobileDocumentReader.parseResponse.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.sessionStatus.getter()
{
  return static DaemonSignposts.MobileDocumentReader.sessionStatus.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.sessionFetchLogo.getter()
{
  return static DaemonSignposts.MobileDocumentReader.sessionFetchLogo.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.storeIdentityKey.getter()
{
  return static DaemonSignposts.MobileDocumentReader.storeIdentityKey.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.validateResponse.getter()
{
  return static DaemonSignposts.MobileDocumentReader.validateResponse.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.identityKeyStatus.getter()
{
  return static DaemonSignposts.MobileDocumentReader.identityKeyStatus.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.generateIdentityKey.getter()
{
  return static DaemonSignposts.MobileDocumentReader.generateIdentityKey.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.sessionIdentityKeyStatus.getter()
{
  return static DaemonSignposts.MobileDocumentReader.sessionIdentityKeyStatus.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.sessionTerminalRegistration.getter()
{
  return static DaemonSignposts.MobileDocumentReader.sessionTerminalRegistration.getter();
}

uint64_t static DaemonSignposts.MobileDocumentReader.identityKeySecureElementStatus.getter()
{
  return static DaemonSignposts.MobileDocumentReader.identityKeySecureElementStatus.getter();
}

uint64_t static DaemonSignposts.claimValidityRequest.getter()
{
  return static DaemonSignposts.claimValidityRequest.getter();
}

uint64_t static DaemonSignposts.configurationRequest.getter()
{
  return static DaemonSignposts.configurationRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentSheet.getter()
{
  return static DaemonSignposts.requestDocumentSheet.getter();
}

uint64_t static DaemonSignposts.warmupDeviceUnlocked.getter()
{
  return static DaemonSignposts.warmupDeviceUnlocked.getter();
}

uint64_t static DaemonSignposts.getStaticAssetRequest.getter()
{
  return static DaemonSignposts.getStaticAssetRequest.getter();
}

uint64_t static DaemonSignposts.attributeConfigRequest.getter()
{
  return static DaemonSignposts.attributeConfigRequest.getter();
}

uint64_t static DaemonSignposts.configureFetchWorkflow.getter()
{
  return static DaemonSignposts.configureFetchWorkflow.getter();
}

uint64_t static DaemonSignposts.identitySharingRequest.getter()
{
  return static DaemonSignposts.identitySharingRequest.getter();
}

uint64_t static DaemonSignposts.inputValidationRequest.getter()
{
  return static DaemonSignposts.inputValidationRequest.getter();
}

uint64_t static DaemonSignposts.createClientGUIDFactory.getter()
{
  return static DaemonSignposts.createClientGUIDFactory.getter();
}

uint64_t static DaemonSignposts.identityProofingRequest.getter()
{
  return static DaemonSignposts.identityProofingRequest.getter();
}

uint64_t static DaemonSignposts.getStaticWorkflowRequest.getter()
{
  return static DaemonSignposts.getStaticWorkflowRequest.getter();
}

uint64_t static DaemonSignposts.performVerificationTotal.getter()
{
  return static DaemonSignposts.performVerificationTotal.getter();
}

uint64_t static DaemonSignposts.concludeVerificationTotal.getter()
{
  return static DaemonSignposts.concludeVerificationTotal.getter();
}

uint64_t static DaemonSignposts.configureTiberiusCofigure.getter()
{
  return static DaemonSignposts.configureTiberiusCofigure.getter();
}

uint64_t static DaemonSignposts.identityProofingRequestV2.getter()
{
  return static DaemonSignposts.identityProofingRequestV2.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticTCTotal.getter()
{
  return static DaemonSignposts.fetchIdentityStaticTCTotal.getter();
}

uint64_t static DaemonSignposts.getVerificationResultTotal.getter()
{
  return static DaemonSignposts.getVerificationResultTotal.getter();
}

uint64_t static DaemonSignposts.sharingRegistrationRequest.getter()
{
  return static DaemonSignposts.sharingRegistrationRequest.getter();
}

uint64_t static DaemonSignposts.uploadAssetsCloudKitRequest.getter()
{
  return static DaemonSignposts.uploadAssetsCloudKitRequest.getter();
}

uint64_t static DaemonSignposts.configureDecodePersoWorkflow.getter()
{
  return static DaemonSignposts.configureDecodePersoWorkflow.getter();
}

uint64_t static DaemonSignposts.configureLoadAttributeConfig.getter()
{
  return static DaemonSignposts.configureLoadAttributeConfig.getter();
}

uint64_t static DaemonSignposts.configureLoadBootstrapConfig.getter()
{
  return static DaemonSignposts.configureLoadBootstrapConfig.getter();
}

uint64_t static DaemonSignposts.configureVerifyAccountStatus.getter()
{
  return static DaemonSignposts.configureVerifyAccountStatus.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticTCRequest.getter()
{
  return static DaemonSignposts.fetchIdentityStaticTCRequest.getter();
}

uint64_t static DaemonSignposts.getVerificationResultPrepare.getter()
{
  return static DaemonSignposts.getVerificationResultPrepare.getter();
}

uint64_t static DaemonSignposts.identityPendingActionRequest.getter()
{
  return static DaemonSignposts.identityPendingActionRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentBuildResponse.getter()
{
  return static DaemonSignposts.requestDocumentBuildResponse.getter();
}

uint64_t static DaemonSignposts.shareVerificationResultTotal.getter()
{
  return static DaemonSignposts.shareVerificationResultTotal.getter();
}

uint64_t static DaemonSignposts.configureLoadClaimsAndPrefill.getter()
{
  return static DaemonSignposts.configureLoadClaimsAndPrefill.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticAssetTotal.getter()
{
  return static DaemonSignposts.fetchIdentityStaticAssetTotal.getter();
}

uint64_t static DaemonSignposts.getIdentityProofingAssessment.getter()
{
  return static DaemonSignposts.getIdentityProofingAssessment.getter();
}

uint64_t static DaemonSignposts.identityLivenessConfigRequest.getter()
{
  return static DaemonSignposts.identityLivenessConfigRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentCreateProposal.getter()
{
  return static DaemonSignposts.requestDocumentCreateProposal.getter();
}

uint64_t static DaemonSignposts.workflowRecommendationRequest.getter()
{
  return static DaemonSignposts.workflowRecommendationRequest.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticAssetRequest.getter()
{
  return static DaemonSignposts.fetchIdentityStaticAssetRequest.getter();
}

uint64_t static DaemonSignposts.getVerificationResultWaitForBAA.getter()
{
  return static DaemonSignposts.getVerificationResultWaitForBAA.getter();
}

uint64_t static DaemonSignposts.requestDocumentPreAuthorization.getter()
{
  return static DaemonSignposts.requestDocumentPreAuthorization.getter();
}

uint64_t static DaemonSignposts.configureTiberiusBeforeConfigure.getter()
{
  return static DaemonSignposts.configureTiberiusBeforeConfigure.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticWorkflowTotal.getter()
{
  return static DaemonSignposts.fetchIdentityStaticWorkflowTotal.getter();
}

uint64_t static DaemonSignposts.requestDocumentPostAuthorization.getter()
{
  return static DaemonSignposts.requestDocumentPostAuthorization.getter();
}

uint64_t static DaemonSignposts.fetchIdentityDynamicWorkflowTotal.getter()
{
  return static DaemonSignposts.fetchIdentityDynamicWorkflowTotal.getter();
}

uint64_t static DaemonSignposts.getRPEncryptionCertificateRequest.getter()
{
  return static DaemonSignposts.getRPEncryptionCertificateRequest.getter();
}

uint64_t static DaemonSignposts.getVerificationResultWaitForSetup.getter()
{
  return static DaemonSignposts.getVerificationResultWaitForSetup.getter();
}

uint64_t static DaemonSignposts.fetchIdentityStaticWorkflowRequest.getter()
{
  return static DaemonSignposts.fetchIdentityStaticWorkflowRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentLocalAuthentication.getter()
{
  return static DaemonSignposts.requestDocumentLocalAuthentication.getter();
}

uint64_t static DaemonSignposts.configureLoadPregeneratedAssessment.getter()
{
  return static DaemonSignposts.configureLoadPregeneratedAssessment.getter();
}

uint64_t static DaemonSignposts.fetchIdentityDynamicWorkflowRequest.getter()
{
  return static DaemonSignposts.fetchIdentityDynamicWorkflowRequest.getter();
}

uint64_t static DaemonSignposts.requestDocumentBuildUIConfiguration.getter()
{
  return static DaemonSignposts.requestDocumentBuildUIConfiguration.getter();
}

uint64_t static DaemonSignposts.requestDocumentCheckBiometricsStatus.getter()
{
  return static DaemonSignposts.requestDocumentCheckBiometricsStatus.getter();
}

uint64_t static DaemonSignposts.getVerificationResultFetchAssesssment.getter()
{
  return static DaemonSignposts.getVerificationResultFetchAssesssment.getter();
}

uint64_t static DaemonSignposts.KRL.processResponse.getter()
{
  return static DaemonSignposts.KRL.processResponse.getter();
}

uint64_t static DaemonSignposts.KRL.fetchRevocationList.getter()
{
  return static DaemonSignposts.KRL.fetchRevocationList.getter();
}

uint64_t static DaemonSignposts.getVerificationResultBuildSharingRequest.getter()
{
  return static DaemonSignposts.getVerificationResultBuildSharingRequest.getter();
}

uint64_t static DaemonSignposts.getVerificationResultKeysAndCertificates.getter()
{
  return static DaemonSignposts.getVerificationResultKeysAndCertificates.getter();
}

uint64_t static DaemonSignposts.getVerificationResultSharingRegistration.getter()
{
  return static DaemonSignposts.getVerificationResultSharingRegistration.getter();
}

uint64_t static DaemonSignposts.tiberiusGetVerificationResultFetchAssessment.getter()
{
  return static DaemonSignposts.tiberiusGetVerificationResultFetchAssessment.getter();
}

uint64_t static DaemonSignposts.getVerificationResultFetchAssesssmentProofing.getter()
{
  return static DaemonSignposts.getVerificationResultFetchAssesssmentProofing.getter();
}

uint64_t static DaemonSignposts.VICAL.loadDocument.getter()
{
  return static DaemonSignposts.VICAL.loadDocument.getter();
}

uint64_t static DaemonSignposts.odnMypg.getter()
{
  return static DaemonSignposts.odnMypg.getter();
}

uint64_t IQComplexSignal.init(identifier:priority:signals:)()
{
  return IQComplexSignal.init(identifier:priority:signals:)();
}

uint64_t IQComplexSignal.identifier.getter()
{
  return IQComplexSignal.identifier.getter();
}

uint64_t IQComplexSignal.signals.getter()
{
  return IQComplexSignal.signals.getter();
}

uint64_t type metadata accessor for IQComplexSignal()
{
  return type metadata accessor for IQComplexSignal();
}

uint64_t IdentityGesture.init(gesture:type:)()
{
  return IdentityGesture.init(gesture:type:)();
}

uint64_t type metadata accessor for IdentityGesture()
{
  return type metadata accessor for IdentityGesture();
}

uint64_t type metadata accessor for KeystoreKeyType()
{
  return type metadata accessor for KeystoreKeyType();
}

uint64_t MetricsSequence.sequence.getter()
{
  return MetricsSequence.sequence.getter();
}

Swift::Bool __swiftcall isInternalBuild()()
{
  return isInternalBuild()();
}

uint64_t BiometricsHelper.init()()
{
  return BiometricsHelper.init()();
}

uint64_t type metadata accessor for BiometricsHelper()
{
  return type metadata accessor for BiometricsHelper();
}

uint64_t EncryptedMessage.init(sender:recipient:message:senderSigningKey:)()
{
  return EncryptedMessage.init(sender:recipient:message:senderSigningKey:)();
}

uint64_t EncryptedMessage.message.getter()
{
  return EncryptedMessage.message.getter();
}

uint64_t EncryptedMessage.recipient.getter()
{
  return EncryptedMessage.recipient.getter();
}

uint64_t type metadata accessor for EncryptedMessage()
{
  return type metadata accessor for EncryptedMessage();
}

uint64_t EncryptionParams.init(alg:sender:recipientFingerprint:kdfParams:)()
{
  return EncryptionParams.init(alg:sender:recipientFingerprint:kdfParams:)();
}

uint64_t type metadata accessor for EncryptionParams()
{
  return type metadata accessor for EncryptionParams();
}

uint64_t ISO18013Response.DeviceAuth.deviceSignature.getter()
{
  return ISO18013Response.DeviceAuth.deviceSignature.getter();
}

uint64_t ISO18013Response.DeviceAuth.deviceMac.getter()
{
  return ISO18013Response.DeviceAuth.deviceMac.getter();
}

uint64_t type metadata accessor for ISO18013Response.DeviceAuth()
{
  return type metadata accessor for ISO18013Response.DeviceAuth();
}

uint64_t ISO18013Response.DeviceSigned.deviceAuth.getter()
{
  return ISO18013Response.DeviceSigned.deviceAuth.getter();
}

uint64_t ISO18013Response.DeviceSigned.namespaces.getter()
{
  return ISO18013Response.DeviceSigned.namespaces.getter();
}

uint64_t type metadata accessor for ISO18013Response.DeviceSigned()
{
  return type metadata accessor for ISO18013Response.DeviceSigned();
}

uint64_t ISO18013Response.IssuerSigned.issuerAuth.getter()
{
  return ISO18013Response.IssuerSigned.issuerAuth.getter();
}

uint64_t ISO18013Response.IssuerSigned.init(namespaces:issuerAuth:)()
{
  return ISO18013Response.IssuerSigned.init(namespaces:issuerAuth:)();
}

uint64_t ISO18013Response.IssuerSigned.namespaces.getter()
{
  return ISO18013Response.IssuerSigned.namespaces.getter();
}

uint64_t type metadata accessor for ISO18013Response.IssuerSigned()
{
  return type metadata accessor for ISO18013Response.IssuerSigned();
}

uint64_t static ISO18013Response.supportedVersion.getter()
{
  return static ISO18013Response.supportedVersion.getter();
}

uint64_t ISO18013Response.Status.rawValue.getter()
{
  return ISO18013Response.Status.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013Response.Status()
{
  return type metadata accessor for ISO18013Response.Status();
}

uint64_t ISO18013Response.status.getter()
{
  return ISO18013Response.status.getter();
}

uint64_t ISO18013Response.init(version:documents:documentErrors:status:)()
{
  return ISO18013Response.init(version:documents:documentErrors:status:)();
}

uint64_t ISO18013Response.Document.deviceSigned.getter()
{
  return ISO18013Response.Document.deviceSigned.getter();
}

uint64_t ISO18013Response.Document.issuerSigned.getter()
{
  return ISO18013Response.Document.issuerSigned.getter();
}

uint64_t ISO18013Response.Document.init(docType:issuerSigned:deviceSigned:errors:)()
{
  return ISO18013Response.Document.init(docType:issuerSigned:deviceSigned:errors:)();
}

uint64_t ISO18013Response.Document.docType.getter()
{
  return ISO18013Response.Document.docType.getter();
}

uint64_t type metadata accessor for ISO18013Response.Document()
{
  return type metadata accessor for ISO18013Response.Document();
}

uint64_t ISO18013Response.documents.getter()
{
  return ISO18013Response.documents.getter();
}

uint64_t type metadata accessor for ISO18013Response()
{
  return type metadata accessor for ISO18013Response();
}

uint64_t IdentityDocument.pdf417Data.getter()
{
  return IdentityDocument.pdf417Data.getter();
}

uint64_t IdentityDocument.scanMetrics.getter()
{
  return IdentityDocument.scanMetrics.getter();
}

uint64_t IdentityDocument.imageMetrics.getter()
{
  return IdentityDocument.imageMetrics.getter();
}

uint64_t IdentityDocument.image.getter()
{
  return IdentityDocument.image.getter();
}

uint64_t PDF417ParsedData.middleName.getter()
{
  return PDF417ParsedData.middleName.getter();
}

uint64_t PDF417ParsedData.postalCode.getter()
{
  return PDF417ParsedData.postalCode.getter();
}

uint64_t PDF417ParsedData.getBindings()()
{
  return PDF417ParsedData.getBindings()();
}

uint64_t PDF417ParsedData.dob.getter()
{
  return PDF417ParsedData.dob.getter();
}

uint64_t PDF417ParsedData.city.getter()
{
  return PDF417ParsedData.city.getter();
}

uint64_t PDF417ParsedData.state.getter()
{
  return PDF417ParsedData.state.getter();
}

uint64_t PDF417ParsedData.gender.getter()
{
  return PDF417ParsedData.gender.getter();
}

uint64_t PDF417ParsedData.issuer.getter()
{
  return PDF417ParsedData.issuer.getter();
}

uint64_t PDF417ParsedData.country.getter()
{
  return PDF417ParsedData.country.getter();
}

uint64_t PDF417ParsedData.docType.getter()
{
  return PDF417ParsedData.docType.getter();
}

uint64_t PDF417ParsedData.street1.getter()
{
  return PDF417ParsedData.street1.getter();
}

uint64_t PDF417ParsedData.street2.getter()
{
  return PDF417ParsedData.street2.getter();
}

uint64_t PDF417ParsedData.lastName.getter()
{
  return PDF417ParsedData.lastName.getter();
}

uint64_t PDF417ParsedData.ethnicity.getter()
{
  return PDF417ParsedData.ethnicity.getter();
}

uint64_t PDF417ParsedData.firstName.getter()
{
  return PDF417ParsedData.firstName.getter();
}

uint64_t type metadata accessor for PDF417ParsedData()
{
  return type metadata accessor for PDF417ParsedData();
}

uint64_t SEPairingManager.init()()
{
  return SEPairingManager.init()();
}

uint64_t type metadata accessor for SEPairingManager()
{
  return type metadata accessor for SEPairingManager();
}

uint64_t errorFromCFError(_:_:_:)()
{
  return errorFromCFError(_:_:_:)();
}

uint64_t runAsyncAndBlock<A>(file:function:line:_:)()
{
  return runAsyncAndBlock<A>(file:function:line:_:)();
}

uint64_t runAsyncAndBlock<A>(timeout:file:function:line:_:)()
{
  return runAsyncAndBlock<A>(timeout:file:function:line:_:)();
}

uint64_t setDefaultLogger(_:)()
{
  return setDefaultLogger(_:)();
}

uint64_t static DIPAccountManager.sharedInstance.getter()
{
  return static DIPAccountManager.sharedInstance.getter();
}

uint64_t static DIPAccountManager.isPrimaryAppleAccount(account:)()
{
  return static DIPAccountManager.isPrimaryAppleAccount(account:)();
}

uint64_t type metadata accessor for DIPAccountManager()
{
  return type metadata accessor for DIPAccountManager();
}

uint64_t dispatch thunk of static DIPCryptoKeychain.generateKeyAsym(_:_:useSecureElement:)()
{
  return dispatch thunk of static DIPCryptoKeychain.generateKeyAsym(_:_:useSecureElement:)();
}

uint64_t dispatch thunk of static DIPCryptoKeychain.generateKeyAsym(_:_:)()
{
  return dispatch thunk of static DIPCryptoKeychain.generateKeyAsym(_:_:)();
}

uint64_t type metadata accessor for DIPCryptoKeychain()
{
  return type metadata accessor for DIPCryptoKeychain();
}

uint64_t DIPCryptoKeychain.deinit()
{
  return DIPCryptoKeychain.deinit();
}

uint64_t GestureTimestamps.timestamps.getter()
{
  return GestureTimestamps.timestamps.getter();
}

uint64_t static StoredPrearmTrust.fetchRequest()()
{
  return static StoredPrearmTrust.fetchRequest()();
}

uint64_t type metadata accessor for StoredPrearmTrust()
{
  return type metadata accessor for StoredPrearmTrust();
}

uint64_t static StoredUploadAsset.fetchRequest()()
{
  return static StoredUploadAsset.fetchRequest()();
}

uint64_t type metadata accessor for StoredUploadAsset()
{
  return type metadata accessor for StoredUploadAsset();
}

Swift::Void __swiftcall debugLogFootprint(_:)(Swift::String a1)
{
}

SecCertificateRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> decodeCertificate(fromBase64DER:)(Swift::String fromBase64DER)
{
  return (SecCertificateRef)decodeCertificate(fromBase64DER:)(fromBase64DER._countAndFlagsBits, fromBase64DER._object);
}

uint64_t decodeCertificate(fromDER:)()
{
  return decodeCertificate(fromDER:)();
}

Swift::String_optional __swiftcall experimentalGroup()()
{
  uint64_t v0 = experimentalGroup()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t type metadata accessor for DIPBackoffStrategy()
{
  return type metadata accessor for DIPBackoffStrategy();
}

uint64_t type metadata accessor for PublicKeyAlgorithm()
{
  return type metadata accessor for PublicKeyAlgorithm();
}

uint64_t dispatch thunk of DIPECIESSessionECV1.encrypt(_:_:_:)()
{
  return dispatch thunk of DIPECIESSessionECV1.encrypt(_:_:_:)();
}

uint64_t type metadata accessor for DIPECIESSessionECV1()
{
  return type metadata accessor for DIPECIESSessionECV1();
}

uint64_t DIPECIESSessionECV1.init(_:)()
{
  return DIPECIESSessionECV1.init(_:)();
}

uint64_t type metadata accessor for DIPECIESSessionECV3()
{
  return type metadata accessor for DIPECIESSessionECV3();
}

uint64_t DIPECIESSessionECV3.init(_:)()
{
  return DIPECIESSessionECV3.init(_:)();
}

uint64_t static DIPKeystoreKeychain.storeKeychainCertificate(_:label:failIfDuplicate:)()
{
  return static DIPKeystoreKeychain.storeKeychainCertificate(_:label:failIfDuplicate:)();
}

uint64_t static DIPKeystoreKeychain.storeKeychainKey(_:label:)()
{
  return static DIPKeystoreKeychain.storeKeychainKey(_:label:)();
}

uint64_t static DIPKeystoreKeychain.deleteKeychainItem(label:serialNumber:secClass:)()
{
  return static DIPKeystoreKeychain.deleteKeychainItem(label:serialNumber:secClass:)();
}

uint64_t static DIPKeystoreKeychain.deleteAll()()
{
  return static DIPKeystoreKeychain.deleteAll()();
}

uint64_t DIPKeystoreKeychain.laContext.getter()
{
  return DIPKeystoreKeychain.laContext.getter();
}

uint64_t type metadata accessor for DIPKeystoreKeychain()
{
  return type metadata accessor for DIPKeystoreKeychain();
}

uint64_t DIPKeystoreKeychain.deinit()
{
  return DIPKeystoreKeychain.deinit();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.identityKeyLabel(for:userInfo:type:)()
{
  return dispatch thunk of DIPKeystoreProtocol.identityKeyLabel(for:userInfo:type:)();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.deleteIdentityKey(label:constraints:)()
{
  return dispatch thunk of DIPKeystoreProtocol.deleteIdentityKey(label:constraints:)();
}

uint64_t dispatch thunk of DIPKeystoreProtocol.retrieveIdentityKey(label:constraints:attestationType:)()
{
  return dispatch thunk of DIPKeystoreProtocol.retrieveIdentityKey(label:constraints:attestationType:)();
}

uint64_t FeatureFlagProvider.isEnabled(_:)()
{
  return FeatureFlagProvider.isEnabled(_:)();
}

uint64_t FeatureFlagProvider.init()()
{
  return FeatureFlagProvider.init()();
}

uint64_t type metadata accessor for FeatureFlagProvider()
{
  return type metadata accessor for FeatureFlagProvider();
}

uint64_t type metadata accessor for ISO18013SessionData.Status()
{
  return type metadata accessor for ISO18013SessionData.Status();
}

uint64_t ISO18013SessionData.status.getter()
{
  return ISO18013SessionData.status.getter();
}

uint64_t type metadata accessor for ISO18013SessionData()
{
  return type metadata accessor for ISO18013SessionData();
}

uint64_t dispatch thunk of ImageQualityMetrics.faceCaptureQuality.getter()
{
  return dispatch thunk of ImageQualityMetrics.faceCaptureQuality.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.faceToImageRatio.getter()
{
  return dispatch thunk of ImageQualityMetrics.faceToImageRatio.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.blurriness.getter()
{
  return dispatch thunk of ImageQualityMetrics.blurriness.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.rightDrift.getter()
{
  return dispatch thunk of ImageQualityMetrics.rightDrift.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.captureTime.getter()
{
  return dispatch thunk of ImageQualityMetrics.captureTime.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.exploration.getter()
{
  return dispatch thunk of ImageQualityMetrics.exploration.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.rescanCount.getter()
{
  return dispatch thunk of ImageQualityMetrics.rescanCount.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.documentSize.getter()
{
  return dispatch thunk of ImageQualityMetrics.documentSize.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.documentSkew.getter()
{
  return dispatch thunk of ImageQualityMetrics.documentSkew.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.documentType.getter()
{
  return dispatch thunk of ImageQualityMetrics.documentType.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.issuerNumber.getter()
{
  return dispatch thunk of ImageQualityMetrics.issuerNumber.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.modelVersion.getter()
{
  return dispatch thunk of ImageQualityMetrics.modelVersion.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.livenessChute.getter()
{
  return dispatch thunk of ImageQualityMetrics.livenessChute.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.modelDecision.getter()
{
  return dispatch thunk of ImageQualityMetrics.modelDecision.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.cardDistortion.getter()
{
  return dispatch thunk of ImageQualityMetrics.cardDistortion.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.isAutoCaptured.getter()
{
  return dispatch thunk of ImageQualityMetrics.isAutoCaptured.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.isFlashEnabled.getter()
{
  return dispatch thunk of ImageQualityMetrics.isFlashEnabled.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.pdf417Detected.getter()
{
  return dispatch thunk of ImageQualityMetrics.pdf417Detected.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.targetVertices.getter()
{
  return dispatch thunk of ImageQualityMetrics.targetVertices.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.documentCorners.getter()
{
  return dispatch thunk of ImageQualityMetrics.documentCorners.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.faceConfidences.getter()
{
  return dispatch thunk of ImageQualityMetrics.faceConfidences.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.documentRotation.getter()
{
  return dispatch thunk of ImageQualityMetrics.documentRotation.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.isAAMVACompliant.getter()
{
  return dispatch thunk of ImageQualityMetrics.isAAMVACompliant.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.originalVertices.getter()
{
  return dispatch thunk of ImageQualityMetrics.originalVertices.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.rectangleCorners.getter()
{
  return dispatch thunk of ImageQualityMetrics.rectangleCorners.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.faceCenteredRatio.getter()
{
  return dispatch thunk of ImageQualityMetrics.faceCenteredRatio.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.blinkingConfidence.getter()
{
  return dispatch thunk of ImageQualityMetrics.blinkingConfidence.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.facemaskConfidence.getter()
{
  return dispatch thunk of ImageQualityMetrics.facemaskConfidence.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.headgearConfidence.getter()
{
  return dispatch thunk of ImageQualityMetrics.headgearConfidence.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.headgearConfidences.getter()
{
  return dispatch thunk of ImageQualityMetrics.headgearConfidences.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.fuzzyMatchAssessment.getter()
{
  return dispatch thunk of ImageQualityMetrics.fuzzyMatchAssessment.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.sunglassesConfidence.getter()
{
  return dispatch thunk of ImageQualityMetrics.sunglassesConfidence.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.prescriptionConfidence.getter()
{
  return dispatch thunk of ImageQualityMetrics.prescriptionConfidence.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.closestMatchAssessments.getter()
{
  return dispatch thunk of ImageQualityMetrics.closestMatchAssessments.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.headYaw.getter()
{
  return dispatch thunk of ImageQualityMetrics.headYaw.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.upDrift.getter()
{
  return dispatch thunk of ImageQualityMetrics.upDrift.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.exposure.getter()
{
  return dispatch thunk of ImageQualityMetrics.exposure.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.headRoll.getter()
{
  return dispatch thunk of ImageQualityMetrics.headRoll.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.luxLevel.getter()
{
  return dispatch thunk of ImageQualityMetrics.luxLevel.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.numFaces.getter()
{
  return dispatch thunk of ImageQualityMetrics.numFaces.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.skinTone.getter()
{
  return dispatch thunk of ImageQualityMetrics.skinTone.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.downDrift.getter()
{
  return dispatch thunk of ImageQualityMetrics.downDrift.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.errorCode.getter()
{
  return dispatch thunk of ImageQualityMetrics.errorCode.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.headPitch.getter()
{
  return dispatch thunk of ImageQualityMetrics.headPitch.getter();
}

uint64_t dispatch thunk of ImageQualityMetrics.leftDrift.getter()
{
  return dispatch thunk of ImageQualityMetrics.leftDrift.getter();
}

uint64_t static RFC8152SigStructure.protectedHeaderAlg.getter()
{
  return static RFC8152SigStructure.protectedHeaderAlg.getter();
}

uint64_t RFC8152SigStructure.init(algorithm:payload:)()
{
  return RFC8152SigStructure.init(algorithm:payload:)();
}

uint64_t RFC8152SigStructure.init(protected:payload:)()
{
  return RFC8152SigStructure.init(protected:payload:)();
}

uint64_t type metadata accessor for RFC8152SigStructure()
{
  return type metadata accessor for RFC8152SigStructure();
}

uint64_t type metadata accessor for StoredBiomeMetadata()
{
  return type metadata accessor for StoredBiomeMetadata();
}

uint64_t AnyCodableDictionary.value.getter()
{
  return AnyCodableDictionary.value.getter();
}

uint64_t type metadata accessor for AnyCodableDictionary()
{
  return type metadata accessor for AnyCodableDictionary();
}

uint64_t static DIPFileUploadCryptor.encryptFileHandle(_:withOptions:)()
{
  return static DIPFileUploadCryptor.encryptFileHandle(_:withOptions:)();
}

uint64_t DIPFileUploadCryptor.Result.encryptedFileURL.getter()
{
  return DIPFileUploadCryptor.Result.encryptedFileURL.getter();
}

uint64_t DIPFileUploadCryptor.Result.internalDiagnosticsURL.getter()
{
  return DIPFileUploadCryptor.Result.internalDiagnosticsURL.getter();
}

uint64_t type metadata accessor for DIPFileUploadCryptor.Result()
{
  return type metadata accessor for DIPFileUploadCryptor.Result();
}

uint64_t DIPFileUploadCryptor.Options.init(eraseInputFileData:copyDataForInternalDiagnostics:uuid:key:nonce:publicKey:)()
{
  return DIPFileUploadCryptor.Options.init(eraseInputFileData:copyDataForInternalDiagnostics:uuid:key:nonce:publicKey:)();
}

uint64_t type metadata accessor for DIPFileUploadCryptor.Options()
{
  return type metadata accessor for DIPFileUploadCryptor.Options();
}

uint64_t dispatch thunk of FeatureFlagProviding.isEnabled(_:)()
{
  return dispatch thunk of FeatureFlagProviding.isEnabled(_:)();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.postalCode.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.postalCode.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.houseNumber.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.houseNumber.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.dob.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.dob.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.state.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.state.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.street.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.street.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.lastName.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.lastName.getter();
}

uint64_t dispatch thunk of FuzzyMatchAssessment.firstName.getter()
{
  return dispatch thunk of FuzzyMatchAssessment.firstName.getter();
}

uint64_t IdentityBoundACLType.rawValue.getter()
{
  return IdentityBoundACLType.rawValue.getter();
}

uint64_t IdentityImageQuality.init(frontScanSettings:backScanSettings:frontIDSettings:backIDSettings:selfieSettings:livenessSettings:passiveSettings:livenessBlockingCodes:exploration:bufferSize:stableWindow:idScanFrameRate:videoFrameRate:maxRectTravel:resizeDimensions:)()
{
  return IdentityImageQuality.init(frontScanSettings:backScanSettings:frontIDSettings:backIDSettings:selfieSettings:livenessSettings:passiveSettings:livenessBlockingCodes:exploration:bufferSize:stableWindow:idScanFrameRate:videoFrameRate:maxRectTravel:resizeDimensions:)();
}

uint64_t type metadata accessor for IdentityImageQuality()
{
  return type metadata accessor for IdentityImageQuality();
}

uint64_t ImageQualityCriteria.maxFaceCaptureQuality.setter()
{
  return ImageQualityCriteria.maxFaceCaptureQuality.setter();
}

uint64_t ImageQualityCriteria.minFaceCaptureQuality.setter()
{
  return ImageQualityCriteria.minFaceCaptureQuality.setter();
}

uint64_t ImageQualityCriteria.maxFaceToImageRatio.setter()
{
  return ImageQualityCriteria.maxFaceToImageRatio.setter();
}

uint64_t ImageQualityCriteria.minFaceToImageRatio.setter()
{
  return ImageQualityCriteria.minFaceToImageRatio.setter();
}

uint64_t ImageQualityCriteria.maxHeadYaw.setter()
{
  return ImageQualityCriteria.maxHeadYaw.setter();
}

uint64_t ImageQualityCriteria.maxUpDrift.setter()
{
  return ImageQualityCriteria.maxUpDrift.setter();
}

uint64_t ImageQualityCriteria.minHeadYaw.setter()
{
  return ImageQualityCriteria.minHeadYaw.setter();
}

uint64_t ImageQualityCriteria.maxExposure.setter()
{
  return ImageQualityCriteria.maxExposure.setter();
}

uint64_t ImageQualityCriteria.maxHeadRoll.setter()
{
  return ImageQualityCriteria.maxHeadRoll.setter();
}

uint64_t ImageQualityCriteria.maxLuxLevel.setter()
{
  return ImageQualityCriteria.maxLuxLevel.setter();
}

uint64_t ImageQualityCriteria.maxNumFaces.setter()
{
  return ImageQualityCriteria.maxNumFaces.setter();
}

uint64_t ImageQualityCriteria.minExposure.setter()
{
  return ImageQualityCriteria.minExposure.setter();
}

uint64_t ImageQualityCriteria.minHeadRoll.setter()
{
  return ImageQualityCriteria.minHeadRoll.setter();
}

uint64_t ImageQualityCriteria.minLuxLevel.setter()
{
  return ImageQualityCriteria.minLuxLevel.setter();
}

uint64_t ImageQualityCriteria.minNumFaces.setter()
{
  return ImageQualityCriteria.minNumFaces.setter();
}

uint64_t ImageQualityCriteria.ocrKeywords.setter()
{
  return ImageQualityCriteria.ocrKeywords.setter();
}

uint64_t ImageQualityCriteria.issuerNumber.setter()
{
  return ImageQualityCriteria.issuerNumber.setter();
}

uint64_t ImageQualityCriteria.maxDownDrift.setter()
{
  return ImageQualityCriteria.maxDownDrift.setter();
}

uint64_t ImageQualityCriteria.maxHeadPitch.setter()
{
  return ImageQualityCriteria.maxHeadPitch.setter();
}

uint64_t ImageQualityCriteria.maxLeftDrift.setter()
{
  return ImageQualityCriteria.maxLeftDrift.setter();
}

uint64_t ImageQualityCriteria.minHeadPitch.setter()
{
  return ImageQualityCriteria.minHeadPitch.setter();
}

uint64_t ImageQualityCriteria.maxBlurriness.setter()
{
  return ImageQualityCriteria.maxBlurriness.setter();
}

uint64_t ImageQualityCriteria.maxRightDrift.setter()
{
  return ImageQualityCriteria.maxRightDrift.setter();
}

uint64_t ImageQualityCriteria.init(minBlurriness:maxBlurriness:minExposure:maxExposure:minCardDistortion:maxCardDistortion:minFaceToImageRatio:maxFaceToImageRatio:minHeadPitch:maxHeadPitch:minHeadRoll:maxHeadRoll:minHeadYaw:maxHeadYaw:minBlinkingConfidence:maxBlinkingConfidence:minPrescriptionConfidence:maxPrescriptionConfidence:minSunglassesConfidence:maxSunglassesConfidence:minFacemaskConfidence:maxFacemaskConfidence:minHeadgearConfidence:maxHeadgearConfidence:minFaceConfidence:maxFaceConfidence:minFaceCaptureQuality:maxFaceCaptureQuality:minDocumentSize:maxDocumentSize:minDocumentRotation:maxDocumentRotation:minDocumentSkew:maxDocumentSkew:maxLeftDrift:maxRightDrift:maxUpDrift:maxDownDrift:minNumFaces:maxNumFaces:minLuxLevel:maxLuxLevel:pdf417Detected:isAAMVACompliant:issuerNumber:complexSignals:ocrKeywords:)()
{
  return ImageQualityCriteria.init(minBlurriness:maxBlurriness:minExposure:maxExposure:minCardDistortion:maxCardDistortion:minFaceToImageRatio:maxFaceToImageRatio:minHeadPitch:maxHeadPitch:minHeadRoll:maxHeadRoll:minHeadYaw:maxHeadYaw:minBlinkingConfidence:maxBlinkingConfidence:minPrescriptionConfidence:maxPrescriptionConfidence:minSunglassesConfidence:maxSunglassesConfidence:minFacemaskConfidence:maxFacemaskConfidence:minHeadgearConfidence:maxHeadgearConfidence:minFaceConfidence:maxFaceConfidence:minFaceCaptureQuality:maxFaceCaptureQuality:minDocumentSize:maxDocumentSize:minDocumentRotation:maxDocumentRotation:minDocumentSkew:maxDocumentSkew:maxLeftDrift:maxRightDrift:maxUpDrift:maxDownDrift:minNumFaces:maxNumFaces:minLuxLevel:maxLuxLevel:pdf417Detected:isAAMVACompliant:issuerNumber:complexSignals:ocrKeywords:)();
}

uint64_t ImageQualityCriteria.minBlurriness.setter()
{
  return ImageQualityCriteria.minBlurriness.setter();
}

uint64_t ImageQualityCriteria.complexSignals.setter()
{
  return ImageQualityCriteria.complexSignals.setter();
}

uint64_t ImageQualityCriteria.pdf417Detected.setter()
{
  return ImageQualityCriteria.pdf417Detected.setter();
}

uint64_t ImageQualityCriteria.maxDocumentSize.setter()
{
  return ImageQualityCriteria.maxDocumentSize.setter();
}

uint64_t ImageQualityCriteria.maxDocumentSkew.setter()
{
  return ImageQualityCriteria.maxDocumentSkew.setter();
}

uint64_t ImageQualityCriteria.minDocumentSize.setter()
{
  return ImageQualityCriteria.minDocumentSize.setter();
}

uint64_t ImageQualityCriteria.minDocumentSkew.setter()
{
  return ImageQualityCriteria.minDocumentSkew.setter();
}

uint64_t ImageQualityCriteria.isAAMVACompliant.setter()
{
  return ImageQualityCriteria.isAAMVACompliant.setter();
}

uint64_t ImageQualityCriteria.maxCardDistortion.setter()
{
  return ImageQualityCriteria.maxCardDistortion.setter();
}

uint64_t ImageQualityCriteria.maxFaceConfidence.setter()
{
  return ImageQualityCriteria.maxFaceConfidence.setter();
}

uint64_t ImageQualityCriteria.minCardDistortion.setter()
{
  return ImageQualityCriteria.minCardDistortion.setter();
}

uint64_t ImageQualityCriteria.minFaceConfidence.setter()
{
  return ImageQualityCriteria.minFaceConfidence.setter();
}

uint64_t ImageQualityCriteria.maxDocumentRotation.setter()
{
  return ImageQualityCriteria.maxDocumentRotation.setter();
}

uint64_t ImageQualityCriteria.minDocumentRotation.setter()
{
  return ImageQualityCriteria.minDocumentRotation.setter();
}

uint64_t ImageQualityCriteria.maxFaceCenteredRatio.setter()
{
  return ImageQualityCriteria.maxFaceCenteredRatio.setter();
}

uint64_t ImageQualityCriteria.minFaceCenteredRatio.setter()
{
  return ImageQualityCriteria.minFaceCenteredRatio.setter();
}

uint64_t ImageQualityCriteria.maxBlinkingConfidence.setter()
{
  return ImageQualityCriteria.maxBlinkingConfidence.setter();
}

uint64_t ImageQualityCriteria.maxFacemaskConfidence.setter()
{
  return ImageQualityCriteria.maxFacemaskConfidence.setter();
}

uint64_t ImageQualityCriteria.maxHeadgearConfidence.setter()
{
  return ImageQualityCriteria.maxHeadgearConfidence.setter();
}

uint64_t ImageQualityCriteria.minBlinkingConfidence.setter()
{
  return ImageQualityCriteria.minBlinkingConfidence.setter();
}

uint64_t ImageQualityCriteria.minFacemaskConfidence.setter()
{
  return ImageQualityCriteria.minFacemaskConfidence.setter();
}

uint64_t ImageQualityCriteria.minHeadgearConfidence.setter()
{
  return ImageQualityCriteria.minHeadgearConfidence.setter();
}

uint64_t ImageQualityCriteria.maxSunglassesConfidence.setter()
{
  return ImageQualityCriteria.maxSunglassesConfidence.setter();
}

uint64_t ImageQualityCriteria.minSunglassesConfidence.setter()
{
  return ImageQualityCriteria.minSunglassesConfidence.setter();
}

uint64_t ImageQualityCriteria.maxPrescriptionConfidence.setter()
{
  return ImageQualityCriteria.maxPrescriptionConfidence.setter();
}

uint64_t ImageQualityCriteria.minPrescriptionConfidence.setter()
{
  return ImageQualityCriteria.minPrescriptionConfidence.setter();
}

uint64_t type metadata accessor for ImageQualityCriteria()
{
  return type metadata accessor for ImageQualityCriteria();
}

uint64_t ImageQualitySettings.init(criteria:priority:metrics:modelVersion:)()
{
  return ImageQualitySettings.init(criteria:priority:metrics:modelVersion:)();
}

uint64_t type metadata accessor for ImageQualitySettings()
{
  return type metadata accessor for ImageQualitySettings();
}

Swift::Void __swiftcall PreferencesURLOpener.openFaceIDAndPasscodeSettings()()
{
}

uint64_t PreferencesURLOpener.init()()
{
  return PreferencesURLOpener.init()();
}

uint64_t type metadata accessor for PreferencesURLOpener()
{
  return type metadata accessor for PreferencesURLOpener();
}

uint64_t VICALCertificateInfo.Extensions.certificateRevocationList.getter()
{
  return VICALCertificateInfo.Extensions.certificateRevocationList.getter();
}

uint64_t type metadata accessor for VICALCertificateInfo.Extensions()
{
  return type metadata accessor for VICALCertificateInfo.Extensions();
}

uint64_t VICALCertificateInfo.extensions.getter()
{
  return VICALCertificateInfo.extensions.getter();
}

uint64_t VICALCertificateInfo.certificate.getter()
{
  return VICALCertificateInfo.certificate.getter();
}

uint64_t VICALCertificateInfo.serialNumber.getter()
{
  return VICALCertificateInfo.serialNumber.getter();
}

uint64_t type metadata accessor for VICALCertificateInfo()
{
  return type metadata accessor for VICALCertificateInfo();
}

uint64_t type metadata accessor for DIPECIESSessionECV3SH()
{
  return type metadata accessor for DIPECIESSessionECV3SH();
}

uint64_t DIPECIESSessionECV3SH.init(_:)()
{
  return DIPECIESSessionECV3SH.init(_:)();
}

uint64_t ISO18013ReaderRequest.DocRequest.init(itemsRequest:readerAuth:)()
{
  return ISO18013ReaderRequest.DocRequest.init(itemsRequest:readerAuth:)();
}

uint64_t ISO18013ReaderRequest.DocRequest.itemsRequest.getter()
{
  return ISO18013ReaderRequest.DocRequest.itemsRequest.getter();
}

uint64_t type metadata accessor for ISO18013ReaderRequest.DocRequest()
{
  return type metadata accessor for ISO18013ReaderRequest.DocRequest();
}

uint64_t ISO18013ReaderRequest.ItemsRequest.init(docType:namespaces:requestInfo:)()
{
  return ISO18013ReaderRequest.ItemsRequest.init(docType:namespaces:requestInfo:)();
}

uint64_t type metadata accessor for ISO18013ReaderRequest.ItemsRequest()
{
  return type metadata accessor for ISO18013ReaderRequest.ItemsRequest();
}

uint64_t ISO18013ReaderRequest.docRequests.getter()
{
  return ISO18013ReaderRequest.docRequests.getter();
}

uint64_t static ISO18013ReaderRequest.supportedVersion.getter()
{
  return static ISO18013ReaderRequest.supportedVersion.getter();
}

uint64_t ISO18013ReaderRequest.init(version:docRequests:)()
{
  return ISO18013ReaderRequest.init(version:docRequests:)();
}

uint64_t ISO18013ReaderRequest.version.getter()
{
  return ISO18013ReaderRequest.version.getter();
}

uint64_t type metadata accessor for ISO18013ReaderRequest()
{
  return type metadata accessor for ISO18013ReaderRequest();
}

uint64_t IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)()
{
  return IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)();
}

uint64_t type metadata accessor for IdentityDocScanConfig()
{
  return type metadata accessor for IdentityDocScanConfig();
}

uint64_t static StoredProofingSession.fetchRequest()()
{
  return static StoredProofingSession.fetchRequest()();
}

uint64_t type metadata accessor for StoredProofingSession()
{
  return type metadata accessor for StoredProofingSession();
}

uint64_t computeISO18013Digest(algorithm:data:)()
{
  return computeISO18013Digest(algorithm:data:)();
}

uint64_t COSESignatureValidator.validateSignature(signature:publicKeyData:publicKeyAlgorithm:algorithmIdentifier:payload:)()
{
  return COSESignatureValidator.validateSignature(signature:publicKeyData:publicKeyAlgorithm:algorithmIdentifier:payload:)();
}

uint64_t COSESignatureValidator.init(errorCodeUnknownAlgorithm:errorCodeInvalidPublicKey:errorCodeMisformattedSignature:errorCodeInvalidSignature:)()
{
  return COSESignatureValidator.init(errorCodeUnknownAlgorithm:errorCodeInvalidPublicKey:errorCodeMisformattedSignature:errorCodeInvalidSignature:)();
}

uint64_t type metadata accessor for COSESignatureValidator()
{
  return type metadata accessor for COSESignatureValidator();
}

uint64_t EncryptedDataContainer.getUnencryptedData(alg:decryptor:senderSigningKey:recipientSigningKey:)()
{
  return EncryptedDataContainer.getUnencryptedData(alg:decryptor:senderSigningKey:recipientSigningKey:)();
}

uint64_t EncryptedDataContainer.init(alg:encryptor:remotePublicKey:senderSigningKey:recipientSigningKey:data:)()
{
  return EncryptedDataContainer.init(alg:encryptor:remotePublicKey:senderSigningKey:recipientSigningKey:data:)();
}

uint64_t EncryptedDataContainer.init(alg:encryptor:remoteCertificate:senderSigningKey:recipientSigningKey:data:)()
{
  return EncryptedDataContainer.init(alg:encryptor:remoteCertificate:senderSigningKey:recipientSigningKey:data:)();
}

uint64_t EncryptedDataContainer.data.getter()
{
  return EncryptedDataContainer.data.getter();
}

uint64_t EncryptedDataContainer.init(type:data:params:)()
{
  return EncryptedDataContainer.init(type:data:params:)();
}

uint64_t EncryptedMessageEntity.init(rawValue:)()
{
  return EncryptedMessageEntity.init(rawValue:)();
}

uint64_t EncryptedMessageEntity.rawValue.getter()
{
  return EncryptedMessageEntity.rawValue.getter();
}

uint64_t type metadata accessor for EncryptedMessageEntity()
{
  return type metadata accessor for EncryptedMessageEntity();
}

uint64_t IdentityBindingDetails.init(templateUUIDs:passDescriptions:)()
{
  return IdentityBindingDetails.init(templateUUIDs:passDescriptions:)();
}

uint64_t type metadata accessor for IdentityBindingDetails()
{
  return type metadata accessor for IdentityBindingDetails();
}

uint64_t IdentityImageDimension.init(height:width:scale:)()
{
  return IdentityImageDimension.init(height:width:scale:)();
}

uint64_t type metadata accessor for IdentityImageDimension()
{
  return type metadata accessor for IdentityImageDimension();
}

uint64_t IdentityLivenessConfig.init(active:passive:)()
{
  return IdentityLivenessConfig.init(active:passive:)();
}

uint64_t type metadata accessor for IdentityLivenessConfig()
{
  return type metadata accessor for IdentityLivenessConfig();
}

uint64_t IdentityProofingIDType.init(rawValue:)()
{
  return IdentityProofingIDType.init(rawValue:)();
}

uint64_t IdentityProofingIDType.rawValue.getter()
{
  return IdentityProofingIDType.rawValue.getter();
}

uint64_t type metadata accessor for IdentityProofingIDType()
{
  return type metadata accessor for IdentityProofingIDType();
}

uint64_t IdentityProofingStatus.init(activeConfigurations:availability:)()
{
  return IdentityProofingStatus.init(activeConfigurations:availability:)();
}

uint64_t type metadata accessor for IdentityProofingStatus()
{
  return type metadata accessor for IdentityProofingStatus();
}

uint64_t decodeCertificateChain(fromBase64DER:)()
{
  return decodeCertificateChain(fromBase64DER:)();
}

uint64_t decodeCertificateChain(fromDER:)()
{
  return decodeCertificateChain(fromDER:)();
}

uint64_t dispatch thunk of DIPECIESSessionV3SecKey.ePublicKeyData.getter()
{
  return dispatch thunk of DIPECIESSessionV3SecKey.ePublicKeyData.getter();
}

uint64_t type metadata accessor for DIPECIESSessionV3SecKey()
{
  return type metadata accessor for DIPECIESSessionV3SecKey();
}

uint64_t DIPECIESSessionV3SecKey.init(_:)()
{
  return DIPECIESSessionV3SecKey.init(_:)();
}

uint64_t static HardwareAttestationType.allCases.getter()
{
  return static HardwareAttestationType.allCases.getter();
}

uint64_t HardwareAttestationType.rawValue.getter()
{
  return HardwareAttestationType.rawValue.getter();
}

uint64_t type metadata accessor for HardwareAttestationType()
{
  return type metadata accessor for HardwareAttestationType();
}

uint64_t ISO18013DigestAlgorithm.init(rawValue:)()
{
  return ISO18013DigestAlgorithm.init(rawValue:)();
}

uint64_t type metadata accessor for ISO18013DigestAlgorithm()
{
  return type metadata accessor for ISO18013DigestAlgorithm();
}

uint64_t type metadata accessor for ISO18013PresentmentType()
{
  return type metadata accessor for ISO18013PresentmentType();
}

uint64_t IdentityKeyWithKeychain.init(label:privateKey:attestationType:laContext:validity:isTemporary:)()
{
  return IdentityKeyWithKeychain.init(label:privateKey:attestationType:laContext:validity:isTemporary:)();
}

uint64_t type metadata accessor for IdentityKeyWithKeychain()
{
  return type metadata accessor for IdentityKeyWithKeychain();
}

uint64_t IdentityLivenessResults.maxNccHigh.getter()
{
  return IdentityLivenessResults.maxNccHigh.getter();
}

uint64_t IdentityLivenessResults.assessmentID.getter()
{
  return IdentityLivenessResults.assessmentID.getter();
}

uint64_t IdentityLivenessResults.assessmentTA.getter()
{
  return IdentityLivenessResults.assessmentTA.getter();
}

uint64_t IdentityLivenessResults.timestampsID.getter()
{
  return IdentityLivenessResults.timestampsID.getter();
}

uint64_t IdentityLivenessResults.activeMetrics.getter()
{
  return IdentityLivenessResults.activeMetrics.getter();
}

uint64_t IdentityLivenessResults.livenessLabel.getter()
{
  return IdentityLivenessResults.livenessLabel.getter();
}

uint64_t IdentityLivenessResults.timestampsFAC.getter()
{
  return IdentityLivenessResults.timestampsFAC.getter();
}

uint64_t IdentityLivenessResults.assessmentsFAC.getter()
{
  return IdentityLivenessResults.assessmentsFAC.getter();
}

uint64_t IdentityLivenessResults.assessmentsPRD.getter()
{
  return IdentityLivenessResults.assessmentsPRD.getter();
}

uint64_t IdentityLivenessResults.passiveMetrics.getter()
{
  return IdentityLivenessResults.passiveMetrics.getter();
}

uint64_t IdentityLivenessResults.ignoredStitches.getter()
{
  return IdentityLivenessResults.ignoredStitches.getter();
}

uint64_t IdentityLivenessResults.timestampsButtonPressed.getter()
{
  return IdentityLivenessResults.timestampsButtonPressed.getter();
}

uint64_t IdentityLivenessResults.luxValues.getter()
{
  return IdentityLivenessResults.luxValues.getter();
}

uint64_t IdentityLivenessResults.maxNccLow.getter()
{
  return IdentityLivenessResults.maxNccLow.getter();
}

uint64_t dispatch thunk of NSXPCConnectionProtocol.isEntitled(_:)()
{
  return dispatch thunk of NSXPCConnectionProtocol.isEntitled(_:)();
}

uint64_t static StoredProofingBiomeData.fetchRequest()()
{
  return static StoredProofingBiomeData.fetchRequest()();
}

uint64_t type metadata accessor for StoredProofingBiomeData()
{
  return type metadata accessor for StoredProofingBiomeData();
}

uint64_t static DeviceMigrationMilestone.accountKAKRetrieved.getter()
{
  return static DeviceMigrationMilestone.accountKAKRetrieved.getter();
}

uint64_t ISO18013IssuerSignedItem.elementValue.getter()
{
  return ISO18013IssuerSignedItem.elementValue.getter();
}

uint64_t ISO18013IssuerSignedItem.elementIdentifier.getter()
{
  return ISO18013IssuerSignedItem.elementIdentifier.getter();
}

uint64_t ISO18013IssuerSignedItem.init(digestID:random:elementIdentifier:elementValue:)()
{
  return ISO18013IssuerSignedItem.init(digestID:random:elementIdentifier:elementValue:)();
}

uint64_t ISO18013IssuerSignedItem.digestID.getter()
{
  return ISO18013IssuerSignedItem.digestID.getter();
}

uint64_t type metadata accessor for ISO18013IssuerSignedItem()
{
  return type metadata accessor for ISO18013IssuerSignedItem();
}

uint64_t IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)()
{
  return IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)();
}

uint64_t IdentityProofingUIConfig.view.getter()
{
  return IdentityProofingUIConfig.view.getter();
}

uint64_t type metadata accessor for IdentityProofingUIConfig()
{
  return type metadata accessor for IdentityProofingUIConfig();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.getAccount(with:)()
{
  return dispatch thunk of DIPAccountManagerProtocol.getAccount(with:)();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.isHSA2Enabled(account:)()
{
  return dispatch thunk of DIPAccountManagerProtocol.isHSA2Enabled(account:)();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)()
{
  return dispatch thunk of DIPAccountManagerProtocol.appleAuthHeader(_:)();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccount()()
{
  return dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccount()();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.verifyAccountStatus(requireHSA2:)()
{
  return dispatch thunk of DIPAccountManagerProtocol.verifyAccountStatus(requireHSA2:)();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.reloadPrimaryAccount()()
{
  return dispatch thunk of DIPAccountManagerProtocol.reloadPrimaryAccount()();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()()
{
  return dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountDSID()();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryiCloudAccountAltDSID()()
{
  return dispatch thunk of DIPAccountManagerProtocol.primaryiCloudAccountAltDSID()();
}

uint64_t dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountIdentifier()()
{
  return dispatch thunk of DIPAccountManagerProtocol.primaryAppleAccountIdentifier()();
}

uint64_t DeviceInformationProvider.userAssignedDeviceName.getter()
{
  return DeviceInformationProvider.userAssignedDeviceName.getter();
}

uint64_t DeviceInformationProvider.uniqueDeviceID.getter()
{
  return DeviceInformationProvider.uniqueDeviceID.getter();
}

uint64_t DeviceInformationProvider.productName.getter()
{
  return DeviceInformationProvider.productName.getter();
}

uint64_t DeviceInformationProvider.productType.getter()
{
  return DeviceInformationProvider.productType.getter();
}

uint64_t DeviceInformationProvider.buildVersion.getter()
{
  return DeviceInformationProvider.buildVersion.getter();
}

uint64_t DeviceInformationProvider.productVersion.getter()
{
  return DeviceInformationProvider.productVersion.getter();
}

uint64_t DeviceInformationProvider.hardwarePlatform.getter()
{
  return DeviceInformationProvider.hardwarePlatform.getter();
}

uint64_t DeviceInformationProvider.init()()
{
  return DeviceInformationProvider.init()();
}

uint64_t type metadata accessor for DeviceInformationProvider()
{
  return type metadata accessor for DeviceInformationProvider();
}

uint64_t type metadata accessor for ISO18013SessionTranscript()
{
  return type metadata accessor for ISO18013SessionTranscript();
}

uint64_t IdentityProofingAssetData.init(twoX:threeX:assetId:)()
{
  return IdentityProofingAssetData.init(twoX:threeX:assetId:)();
}

uint64_t type metadata accessor for IdentityProofingAssetData()
{
  return type metadata accessor for IdentityProofingAssetData();
}

uint64_t IdentityProofingDocuments.backID.getter()
{
  return IdentityProofingDocuments.backID.getter();
}

uint64_t IdentityProofingDocuments.selfie.getter()
{
  return IdentityProofingDocuments.selfie.getter();
}

uint64_t IdentityProofingDocuments.frontID.getter()
{
  return IdentityProofingDocuments.frontID.getter();
}

uint64_t IdentityProofingDocuments.liveness.getter()
{
  return IdentityProofingDocuments.liveness.getter();
}

uint64_t dispatch thunk of DeviceInformationProviding.deviceClass.getter()
{
  return dispatch thunk of DeviceInformationProviding.deviceClass.getter();
}

uint64_t dispatch thunk of DeviceInformationProviding.uniqueChipID.getter()
{
  return dispatch thunk of DeviceInformationProviding.uniqueChipID.getter();
}

uint64_t dispatch thunk of DeviceInformationProviding.isFaceIDDevice.getter()
{
  return dispatch thunk of DeviceInformationProviding.isFaceIDDevice.getter();
}

uint64_t dispatch thunk of DeviceInformationProviding.chipID.getter()
{
  return dispatch thunk of DeviceInformationProviding.chipID.getter();
}

uint64_t static SharedInternalDefaultsKeys.doNotRequireHSA2.getter()
{
  return static SharedInternalDefaultsKeys.doNotRequireHSA2.getter();
}

uint64_t static SharedInternalDefaultsKeys.injectFedStatsData.getter()
{
  return static SharedInternalDefaultsKeys.injectFedStatsData.getter();
}

uint64_t type metadata accessor for CredentialBuilderTimePolicy()
{
  return type metadata accessor for CredentialBuilderTimePolicy();
}

uint64_t static DIPBackgroundDeferralStatus.== infix(_:_:)()
{
  return static DIPBackgroundDeferralStatus.== infix(_:_:)();
}

uint64_t type metadata accessor for DIPBackgroundDeferralStatus()
{
  return type metadata accessor for DIPBackgroundDeferralStatus();
}

uint64_t IdentityImageQualityMetrics.videoMetrics.getter()
{
  return IdentityImageQualityMetrics.videoMetrics.getter();
}

uint64_t IdentityImageQualityMetrics.inlineMetrics.getter()
{
  return IdentityImageQualityMetrics.inlineMetrics.getter();
}

uint64_t IdentityImageQualityMetrics.captureMetrics.getter()
{
  return IdentityImageQualityMetrics.captureMetrics.getter();
}

uint64_t type metadata accessor for IdentityKeyGenerationOption()
{
  return type metadata accessor for IdentityKeyGenerationOption();
}

uint64_t static IdentityManagementInterface.interface()()
{
  return static IdentityManagementInterface.interface()();
}

uint64_t type metadata accessor for IdentityManagementInterface()
{
  return type metadata accessor for IdentityManagementInterface();
}

uint64_t IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)()
{
  return IdentityProofingDisplayInfo.init(proofingUI:docScan:attributeConfig:learnMoreURL:waitingForWiFiAlertDataThresholdInBytes:lowDataModeAlertDataThresholdInBytes:idType:featureEnablementConfig:supportedRegions:livenessStepUpConfig:livenessStepUpIQSettings:shouldPreFetchLivenessConfig:)();
}

uint64_t type metadata accessor for IdentityProofingDisplayInfo()
{
  return type metadata accessor for IdentityProofingDisplayInfo();
}

uint64_t dispatch thunk of LocalAuthenticationManaging.isPasscodeSet.getter()
{
  return dispatch thunk of LocalAuthenticationManaging.isPasscodeSet.getter();
}

SecCertificateRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> createCertificateFromString(_:)(Swift::String a1)
{
  return (SecCertificateRef)createCertificateFromString(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::Void __swiftcall DIPBackgroundActivityManager.unregisterActivity(identifier:)(Swift::String identifier)
{
}

uint64_t DIPBackgroundActivityManager.registerActivity(identifier:activity:)()
{
  return DIPBackgroundActivityManager.registerActivity(identifier:activity:)();
}

{
  return DIPBackgroundActivityManager.registerActivity(identifier:activity:)();
}

uint64_t DIPBackgroundActivityManager.scheduleActivity(identifier:after:gracePeriod:settings:)()
{
  return DIPBackgroundActivityManager.scheduleActivity(identifier:after:gracePeriod:settings:)();
}

uint64_t static DIPBackgroundActivityManager.sharedInstance.getter()
{
  return static DIPBackgroundActivityManager.sharedInstance.getter();
}

uint64_t type metadata accessor for DIPBackgroundActivityManager()
{
  return type metadata accessor for DIPBackgroundActivityManager();
}

uint64_t ISO18013DeviceAuthentication.init(sessionTranscript:docType:deviceNamespaceBytes:)()
{
  return ISO18013DeviceAuthentication.init(sessionTranscript:docType:deviceNamespaceBytes:)();
}

uint64_t type metadata accessor for ISO18013DeviceAuthentication()
{
  return type metadata accessor for ISO18013DeviceAuthentication();
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.validUntil.getter()
{
  return ISO18013MobileSecurityObject.ValidityInfo.validUntil.getter();
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.signed.getter()
{
  return ISO18013MobileSecurityObject.ValidityInfo.signed.getter();
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.validFrom.getter()
{
  return ISO18013MobileSecurityObject.ValidityInfo.validFrom.getter();
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo()
{
  return type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo();
}

uint64_t ISO18013MobileSecurityObject.validityInfo.getter()
{
  return ISO18013MobileSecurityObject.validityInfo.getter();
}

uint64_t ISO18013MobileSecurityObject.valueDigests.getter()
{
  return ISO18013MobileSecurityObject.valueDigests.getter();
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.deviceKey.getter()
{
  return ISO18013MobileSecurityObject.DeviceKeyInfo.deviceKey.getter();
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.keyAuthorizations.getter()
{
  return ISO18013MobileSecurityObject.DeviceKeyInfo.keyAuthorizations.getter();
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo()
{
  return type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo();
}

uint64_t ISO18013MobileSecurityObject.deviceKeyInfo.getter()
{
  return ISO18013MobileSecurityObject.deviceKeyInfo.getter();
}

uint64_t ISO18013MobileSecurityObject.digestAlgorithm.getter()
{
  return ISO18013MobileSecurityObject.digestAlgorithm.getter();
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.namespaces.getter()
{
  return ISO18013MobileSecurityObject.KeyAuthorizations.namespaces.getter();
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.dataElements.getter()
{
  return ISO18013MobileSecurityObject.KeyAuthorizations.dataElements.getter();
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject.KeyAuthorizations()
{
  return type metadata accessor for ISO18013MobileSecurityObject.KeyAuthorizations();
}

uint64_t ISO18013MobileSecurityObject.docType.getter()
{
  return ISO18013MobileSecurityObject.docType.getter();
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject()
{
  return type metadata accessor for ISO18013MobileSecurityObject();
}

uint64_t ISO18013ReaderAuthentication.init(sessionTranscript:itemsRequestBytes:)()
{
  return ISO18013ReaderAuthentication.init(sessionTranscript:itemsRequestBytes:)();
}

uint64_t ISO18013ReaderAuthentication.dataValue.getter()
{
  return ISO18013ReaderAuthentication.dataValue.getter();
}

uint64_t type metadata accessor for ISO18013ReaderAuthentication()
{
  return type metadata accessor for ISO18013ReaderAuthentication();
}

uint64_t ISO18013SessionEstablishment.init(readerKey:data:)()
{
  return ISO18013SessionEstablishment.init(readerKey:data:)();
}

uint64_t type metadata accessor for ISO18013SessionEstablishment()
{
  return type metadata accessor for ISO18013SessionEstablishment();
}

uint64_t IdentityActiveLivenessConfig.init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)()
{
  return IdentityActiveLivenessConfig.init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)();
}

uint64_t type metadata accessor for IdentityActiveLivenessConfig()
{
  return type metadata accessor for IdentityActiveLivenessConfig();
}

uint64_t IdentityProofingActionStatus.debugDescription.getter()
{
  return IdentityProofingActionStatus.debugDescription.getter();
}

uint64_t IdentityProofingActionStatus.init(rawValue:)()
{
  return IdentityProofingActionStatus.init(rawValue:)();
}

uint64_t IdentityProofingActionStatus.rawValue.getter()
{
  return IdentityProofingActionStatus.rawValue.getter();
}

uint64_t createEncryptedDataContainer<A>(with:to:senderSigningKey:encryptor:)()
{
  return createEncryptedDataContainer<A>(with:to:senderSigningKey:encryptor:)();
}

Swift::Bool __swiftcall shouldIncludeUnencryptedData()()
{
  return shouldIncludeUnencryptedData()();
}

uint64_t DIPBackgroundActivitySettings.requireNetworkActivity.setter()
{
  return DIPBackgroundActivitySettings.requireNetworkActivity.setter();
}

uint64_t DIPBackgroundActivitySettings.allowBattery.setter()
{
  return DIPBackgroundActivitySettings.allowBattery.setter();
}

uint64_t DIPBackgroundActivitySettings.requireInExpensiveNetworkConnectivity.setter()
{
  return DIPBackgroundActivitySettings.requireInExpensiveNetworkConnectivity.setter();
}

uint64_t DIPBackgroundActivitySettings.init()()
{
  return DIPBackgroundActivitySettings.init()();
}

uint64_t type metadata accessor for DIPBackgroundActivitySettings()
{
  return type metadata accessor for DIPBackgroundActivitySettings();
}

uint64_t IdentityPassiveLivenessConfig.init(maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:totalFrameCount:minimumValidFrameCount:requiresGoodLux:enablePrintReplay:disableStitchDetection:enableAutoFlash:)()
{
  return IdentityPassiveLivenessConfig.init(maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:totalFrameCount:minimumValidFrameCount:requiresGoodLux:enablePrintReplay:disableStitchDetection:enableAutoFlash:)();
}

uint64_t type metadata accessor for IdentityPassiveLivenessConfig()
{
  return type metadata accessor for IdentityPassiveLivenessConfig();
}

uint64_t IdentityProofingConfiguration.axSettings.getter()
{
  return IdentityProofingConfiguration.axSettings.getter();
}

uint64_t IdentityProofingConfiguration.description.getter()
{
  return IdentityProofingConfiguration.description.getter();
}

uint64_t IdentityProofingConfiguration.actionStatus.getter()
{
  return IdentityProofingConfiguration.actionStatus.getter();
}

uint64_t IdentityProofingConfiguration.targetDevice.getter()
{
  return IdentityProofingConfiguration.targetDevice.getter();
}

uint64_t IdentityProofingConfiguration.productIdentifier.getter()
{
  return IdentityProofingConfiguration.productIdentifier.getter();
}

uint64_t IdentityProofingConfiguration.accountKeyIdentifier.getter()
{
  return IdentityProofingConfiguration.accountKeyIdentifier.getter();
}

uint64_t IdentityProofingConfiguration.credentialIdentifier.getter()
{
  return IdentityProofingConfiguration.credentialIdentifier.getter();
}

uint64_t IdentityProofingConfiguration.supplementalProvisioningData.getter()
{
  return IdentityProofingConfiguration.supplementalProvisioningData.getter();
}

uint64_t IdentityProofingConfiguration.init(state:country:targetDevice:actionStatus:credentialIdentifier:productIdentifier:axSettings:accountKeyIdentifier:extendedReviewURLString:learnMoreURLString:supplementalProvisioningData:)()
{
  return IdentityProofingConfiguration.init(state:country:targetDevice:actionStatus:credentialIdentifier:productIdentifier:axSettings:accountKeyIdentifier:extendedReviewURLString:learnMoreURLString:supplementalProvisioningData:)();
}

uint64_t IdentityProofingConfiguration.state.getter()
{
  return IdentityProofingConfiguration.state.getter();
}

uint64_t IdentityProofingConfiguration.country.getter()
{
  return IdentityProofingConfiguration.country.getter();
}

uint64_t type metadata accessor for IdentityProofingConfiguration()
{
  return type metadata accessor for IdentityProofingConfiguration();
}

uint64_t static MobileDocumentReaderMilestone.canRequestDocumentCalled.getter()
{
  return static MobileDocumentReaderMilestone.canRequestDocumentCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentInProgress.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentInProgress.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentResponseReceived.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentResponseReceived.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentReturningResponse.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentReturningResponse.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentCalled.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentReaderConnecting.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentReaderConnecting.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentReaderAwaitingApproval.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentReaderAwaitingApproval.getter();
}

uint64_t static MobileDocumentReaderMilestone.readDocumentReaderReady.getter()
{
  return static MobileDocumentReaderMilestone.readDocumentReaderReady.getter();
}

uint64_t static MobileDocumentReaderMilestone.prepareCalled.getter()
{
  return static MobileDocumentReaderMilestone.prepareCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.merchantCalled.getter()
{
  return static MobileDocumentReaderMilestone.merchantCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.cancelReadCalled.getter()
{
  return static MobileDocumentReaderMilestone.cancelReadCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.readRequestBuilt.getter()
{
  return static MobileDocumentReaderMilestone.readRequestBuilt.getter();
}

uint64_t static MobileDocumentReaderMilestone.readRequestSigned.getter()
{
  return static MobileDocumentReaderMilestone.readRequestSigned.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerIdentifierCalled.getter()
{
  return static MobileDocumentReaderMilestone.readerIdentifierCalled.getter();
}

uint64_t static MobileDocumentReaderMilestone.prepareCertificateFound.getter()
{
  return static MobileDocumentReaderMilestone.prepareCertificateFound.getter();
}

uint64_t static MobileDocumentReaderMilestone.noReadInProgressToCancel.getter()
{
  return static MobileDocumentReaderMilestone.noReadInProgressToCancel.getter();
}

uint64_t static MobileDocumentReaderMilestone.prepareCertificateFetched.getter()
{
  return static MobileDocumentReaderMilestone.prepareCertificateFetched.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationKeyCreated.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationKeyCreated.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationKeyDeleted.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationKeyDeleted.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationKeyFetched.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationKeyFetched.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationCertificateStored.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationCertificateStored.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationCertificateDeleted.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationCertificateDeleted.getter();
}

uint64_t static MobileDocumentReaderMilestone.readerAuthenticationCertificateFetched.getter()
{
  return static MobileDocumentReaderMilestone.readerAuthenticationCertificateFetched.getter();
}

uint64_t type metadata accessor for CredentialBuilderPayloadFormat()
{
  return type metadata accessor for CredentialBuilderPayloadFormat();
}

uint64_t ISO18013AppleSessionTranscript.init(nonce:merchantID:teamID:encryptionKeyHash:)()
{
  return ISO18013AppleSessionTranscript.init(nonce:merchantID:teamID:encryptionKeyHash:)();
}

uint64_t type metadata accessor for ISO18013AppleSessionTranscript()
{
  return type metadata accessor for ISO18013AppleSessionTranscript();
}

uint64_t IdentityProofingDisplayMessage.primaryButtonTitle.getter()
{
  return IdentityProofingDisplayMessage.primaryButtonTitle.getter();
}

uint64_t IdentityProofingDisplayMessage.secondaryButtonTitle.getter()
{
  return IdentityProofingDisplayMessage.secondaryButtonTitle.getter();
}

uint64_t IdentityProofingDisplayMessage.url.getter()
{
  return IdentityProofingDisplayMessage.url.getter();
}

uint64_t IdentityProofingDisplayMessage.init(title:messages:primaryButtonTitle:secondaryButtonTitle:url:)()
{
  return IdentityProofingDisplayMessage.init(title:messages:primaryButtonTitle:secondaryButtonTitle:url:)();
}

uint64_t IdentityProofingDisplayMessage.title.getter()
{
  return IdentityProofingDisplayMessage.title.getter();
}

uint64_t IdentityProofingDisplayMessage.messages.getter()
{
  return IdentityProofingDisplayMessage.messages.getter();
}

uint64_t type metadata accessor for IdentityProofingDisplayMessage()
{
  return type metadata accessor for IdentityProofingDisplayMessage();
}

uint64_t RecipientEncryptionCertificate.init(keyAgreement:signing:recipient:)()
{
  return RecipientEncryptionCertificate.init(keyAgreement:signing:recipient:)();
}

uint64_t RecipientEncryptionCertificate.keyAgreement.getter()
{
  return RecipientEncryptionCertificate.keyAgreement.getter();
}

uint64_t RecipientEncryptionCertificate.signing.getter()
{
  return RecipientEncryptionCertificate.signing.getter();
}

uint64_t RecipientEncryptionCertificate.recipient.getter()
{
  return RecipientEncryptionCertificate.recipient.getter();
}

uint64_t type metadata accessor for RecipientEncryptionCertificate()
{
  return type metadata accessor for RecipientEncryptionCertificate();
}

uint64_t type metadata accessor for CredentialBuilderPayloadDetails.KeyAuthorizations()
{
  return type metadata accessor for CredentialBuilderPayloadDetails.KeyAuthorizations();
}

uint64_t CredentialBuilderPayloadDetails.init(format:docType:elements:validFrom:validUntil:timePolicy:deviceKey:deviceKeyAuthorizations:signingAlgorithm:digestAlgorithm:)()
{
  return CredentialBuilderPayloadDetails.init(format:docType:elements:validFrom:validUntil:timePolicy:deviceKey:deviceKeyAuthorizations:signingAlgorithm:digestAlgorithm:)();
}

uint64_t CredentialBuilderPayloadDetails.Element.elementValue.getter()
{
  return CredentialBuilderPayloadDetails.Element.elementValue.getter();
}

uint64_t CredentialBuilderPayloadDetails.Element.elementIdentifier.getter()
{
  return CredentialBuilderPayloadDetails.Element.elementIdentifier.getter();
}

uint64_t type metadata accessor for CredentialBuilderPayloadDetails.Element()
{
  return type metadata accessor for CredentialBuilderPayloadDetails.Element();
}

uint64_t type metadata accessor for CredentialBuilderPayloadDetails()
{
  return type metadata accessor for CredentialBuilderPayloadDetails();
}

Swift::Void __swiftcall HPKEEncryptedMessageWithKeyWrap.addMessageEncryptionKeys(keys:)(Swift::OpaquePointer keys)
{
}

uint64_t HPKEEncryptedMessageWithKeyWrap.addMessageEncryptionKey(keyID:key:)()
{
  return HPKEEncryptedMessageWithKeyWrap.addMessageEncryptionKey(keyID:key:)();
}

uint64_t HPKEEncryptedMessageWithKeyWrap.init(sender:recipient:messages:)()
{
  return HPKEEncryptedMessageWithKeyWrap.init(sender:recipient:messages:)();
}

uint64_t HPKEEncryptedMessageWithKeyWrap.sealKeys(to:encryptor:)()
{
  return HPKEEncryptedMessageWithKeyWrap.sealKeys(to:encryptor:)();
}

uint64_t type metadata accessor for HPKEEncryptedMessageWithKeyWrap()
{
  return type metadata accessor for HPKEEncryptedMessageWithKeyWrap();
}

uint64_t IdentityProofingImageDimensions.init(idFront:idBack:selfie:)()
{
  return IdentityProofingImageDimensions.init(idFront:idBack:selfie:)();
}

uint64_t type metadata accessor for IdentityProofingImageDimensions()
{
  return type metadata accessor for IdentityProofingImageDimensions();
}

uint64_t machServiceIdentityManagementUI.getter()
{
  return machServiceIdentityManagementUI.getter();
}

uint64_t IdentityCredentialPayloadBuilder.init(with:dateProvider:)()
{
  return IdentityCredentialPayloadBuilder.init(with:dateProvider:)();
}

uint64_t type metadata accessor for IdentityCredentialPayloadBuilder()
{
  return type metadata accessor for IdentityCredentialPayloadBuilder();
}

uint64_t IdentityProofingLivenessVideoURL.fileHandle.getter()
{
  return IdentityProofingLivenessVideoURL.fileHandle.getter();
}

uint64_t IdentityProofingLivenessVideoURL.auxiliaryFileHandle.getter()
{
  return IdentityProofingLivenessVideoURL.auxiliaryFileHandle.getter();
}

uint64_t copyPublicKeyDataFromCertificate(_:)()
{
  return copyPublicKeyDataFromCertificate(_:)();
}

uint64_t CredentialBuilderSignatureDetails.init(signingAlgorithm:issuerCertificate:signature:)()
{
  return CredentialBuilderSignatureDetails.init(signingAlgorithm:issuerCertificate:signature:)();
}

uint64_t static DeveloperTestMDLCredentialBuilder.payloadElements.getter()
{
  return static DeveloperTestMDLCredentialBuilder.payloadElements.getter();
}

uint64_t static ISO18013ReaderRequestInfoConstant.requestLogotypeIconDataKey.getter()
{
  return static ISO18013ReaderRequestInfoConstant.requestLogotypeIconDataKey.getter();
}

uint64_t static ISO18013ReaderRequestInfoConstant.requestInterpretWillNotRetainIntentAsDisplayOnlyKey.getter()
{
  return static ISO18013ReaderRequestInfoConstant.requestInterpretWillNotRetainIntentAsDisplayOnlyKey.getter();
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.init(publicKey:keyPurpose:authorizerType:)()
{
  return KeyAuthorizationCOSE_Sign1Payload.init(publicKey:keyPurpose:authorizerType:)();
}

uint64_t type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.KeyPurpose()
{
  return type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.KeyPurpose();
}

uint64_t type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.AuthorizerType()
{
  return type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.AuthorizerType();
}

uint64_t type metadata accessor for KeyAuthorizationCOSE_Sign1Payload()
{
  return type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
}

uint64_t IdentityProofingUnorderedUIElement.imageAssets.getter()
{
  return IdentityProofingUnorderedUIElement.imageAssets.getter();
}

uint64_t IdentityProofingUnorderedUIElement.learnMoreURL.getter()
{
  return IdentityProofingUnorderedUIElement.learnMoreURL.getter();
}

uint64_t IdentityProofingUnorderedUIElement.title.getter()
{
  return IdentityProofingUnorderedUIElement.title.getter();
}

uint64_t IdentityProofingUnorderedUIElement.actions.getter()
{
  return IdentityProofingUnorderedUIElement.actions.getter();
}

uint64_t IdentityProofingUnorderedUIElement.options.getter()
{
  return IdentityProofingUnorderedUIElement.options.getter();
}

uint64_t IdentityProofingUnorderedUIElement.messages.getter()
{
  return IdentityProofingUnorderedUIElement.messages.getter();
}

uint64_t type metadata accessor for IdentityProofingUnorderedUIElement()
{
  return type metadata accessor for IdentityProofingUnorderedUIElement();
}

uint64_t static StoredRandomizedBackgroundActivity.fetchRequest()()
{
  return static StoredRandomizedBackgroundActivity.fetchRequest()();
}

uint64_t type metadata accessor for StoredRandomizedBackgroundActivity()
{
  return type metadata accessor for StoredRandomizedBackgroundActivity();
}

uint64_t type metadata accessor for CredentialBuilderSignatureAlgorithm()
{
  return type metadata accessor for CredentialBuilderSignatureAlgorithm();
}

uint64_t type metadata accessor for EncryptionParamsAlgorithmIdentifier()
{
  return type metadata accessor for EncryptionParamsAlgorithmIdentifier();
}

uint64_t createBAAKeyACLWithDefaultLAContext(enableUAM:keyUsage:requireUserAuth:forSecureElement:)()
{
  return createBAAKeyACLWithDefaultLAContext(enableUAM:keyUsage:requireUserAuth:forSecureElement:)();
}

uint64_t dispatch thunk of DIPBackgroundActivityManagerProtocol.registerActivity(identifier:activity:)()
{
  return dispatch thunk of DIPBackgroundActivityManagerProtocol.registerActivity(identifier:activity:)();
}

uint64_t dispatch thunk of DIPBackgroundActivityManagerProtocol.scheduleActivity(identifier:after:gracePeriod:settings:)()
{
  return dispatch thunk of DIPBackgroundActivityManagerProtocol.scheduleActivity(identifier:after:gracePeriod:settings:)();
}

uint64_t IDV_INTERMEDIATE_CERT_KEYCHAIN_LABEL.getter()
{
  return IDV_INTERMEDIATE_CERT_KEYCHAIN_LABEL.getter();
}

uint64_t static IdentityProofingDataSharingInterface.interface()()
{
  return static IdentityProofingDataSharingInterface.interface()();
}

uint64_t type metadata accessor for IdentityProofingDataSharingInterface()
{
  return type metadata accessor for IdentityProofingDataSharingInterface();
}

uint64_t static StoredMobileDocumentReaderSigningKey.fetchRequest()()
{
  return static StoredMobileDocumentReaderSigningKey.fetchRequest()();
}

uint64_t type metadata accessor for StoredMobileDocumentReaderSigningKey()
{
  return type metadata accessor for StoredMobileDocumentReaderSigningKey();
}

uint64_t dispatch thunk of IdentityProofingAttributeConfigHelper.fetchAttributeID(input:)()
{
  return dispatch thunk of IdentityProofingAttributeConfigHelper.fetchAttributeID(input:)();
}

uint64_t IdentityProofingAttributeConfigHelper.init()()
{
  return IdentityProofingAttributeConfigHelper.init()();
}

uint64_t type metadata accessor for IdentityProofingAttributeConfigHelper()
{
  return type metadata accessor for IdentityProofingAttributeConfigHelper();
}

uint64_t dispatch thunk of IdentityProofingTextReplacementHelper.replaceText(_:)()
{
  return dispatch thunk of IdentityProofingTextReplacementHelper.replaceText(_:)();
}

uint64_t ReaderAuthenticationAllowableElements.documentTypes.getter()
{
  return ReaderAuthenticationAllowableElements.documentTypes.getter();
}

uint64_t ReaderAuthenticationAllowableElements.elements.getter()
{
  return ReaderAuthenticationAllowableElements.elements.getter();
}

uint64_t type metadata accessor for ReaderAuthenticationAllowableElements()
{
  return type metadata accessor for ReaderAuthenticationAllowableElements();
}

uint64_t IdentityProofingAttributeConfiguration.init(attributeMessages:messageReplacements:unorderedUI:)()
{
  return IdentityProofingAttributeConfiguration.init(attributeMessages:messageReplacements:unorderedUI:)();
}

uint64_t type metadata accessor for IdentityProofingAttributeConfiguration()
{
  return type metadata accessor for IdentityProofingAttributeConfiguration();
}

uint64_t IdentityProofingDataSharingUserConsent.debugDescription.getter()
{
  return IdentityProofingDataSharingUserConsent.debugDescription.getter();
}

uint64_t IdentityProofingDataSharingUserConsent.rawValue.getter()
{
  return IdentityProofingDataSharingUserConsent.rawValue.getter();
}

uint64_t machServiceIdentityProofingDataSharing.getter()
{
  return machServiceIdentityProofingDataSharing.getter();
}

uint64_t HPKEEncryptionParamsAlgorithmIdentifier.init(rawValue:)()
{
  return HPKEEncryptionParamsAlgorithmIdentifier.init(rawValue:)();
}

uint64_t HPKEEncryptionParamsAlgorithmIdentifier.rawValue.getter()
{
  return HPKEEncryptionParamsAlgorithmIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for HPKEEncryptionParamsAlgorithmIdentifier()
{
  return type metadata accessor for HPKEEncryptionParamsAlgorithmIdentifier();
}

uint64_t IdentityProofingFeatureEnablementConfig.init(isFedStatsOptinEnabled:)()
{
  return IdentityProofingFeatureEnablementConfig.init(isFedStatsOptinEnabled:)();
}

uint64_t type metadata accessor for IdentityProofingFeatureEnablementConfig()
{
  return type metadata accessor for IdentityProofingFeatureEnablementConfig();
}

uint64_t dispatch thunk of IdentityProofingTextReplacementProvider.makeTextReplacementHelper(attributeMessages:messageReplacements:state:country:idType:)()
{
  return dispatch thunk of IdentityProofingTextReplacementProvider.makeTextReplacementHelper(attributeMessages:messageReplacements:state:country:idType:)();
}

uint64_t IdentityProofingTextReplacementProvider.init()()
{
  return IdentityProofingTextReplacementProvider.init()();
}

uint64_t type metadata accessor for IdentityProofingTextReplacementProvider()
{
  return type metadata accessor for IdentityProofingTextReplacementProvider();
}

uint64_t IdentityProofingUnorderedUIElementOption.assessments.getter()
{
  return IdentityProofingUnorderedUIElementOption.assessments.getter();
}

uint64_t IdentityProofingUnorderedUIElementOption.accessibility.getter()
{
  return IdentityProofingUnorderedUIElementOption.accessibility.getter();
}

uint64_t IdentityProofingUnorderedUIElementOption.init(title:subtitle:bullets:assessments:accessibility:)()
{
  return IdentityProofingUnorderedUIElementOption.init(title:subtitle:bullets:assessments:accessibility:)();
}

uint64_t IdentityProofingUnorderedUIElementOption.bullets.getter()
{
  return IdentityProofingUnorderedUIElementOption.bullets.getter();
}

uint64_t type metadata accessor for IdentityProofingUnorderedUIElementOption()
{
  return type metadata accessor for IdentityProofingUnorderedUIElementOption();
}

uint64_t DEFAULT_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter()
{
  return DEFAULT_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter();
}

uint64_t DigitalPresentmentAlertDisplayConfiguration.init(isFaceIDDevice:)()
{
  return DigitalPresentmentAlertDisplayConfiguration.init(isFaceIDDevice:)();
}

uint64_t DigitalPresentmentAlertDisplayConfiguration.options.getter()
{
  return DigitalPresentmentAlertDisplayConfiguration.options.getter();
}

uint64_t type metadata accessor for DigitalPresentmentAlertDisplayConfiguration()
{
  return type metadata accessor for DigitalPresentmentAlertDisplayConfiguration();
}

uint64_t static IdentityManagementDaemonToClientUIInterface.interface()()
{
  return static IdentityManagementDaemonToClientUIInterface.interface()();
}

uint64_t type metadata accessor for IdentityManagementDaemonToClientUIInterface()
{
  return type metadata accessor for IdentityManagementDaemonToClientUIInterface();
}

uint64_t dispatch thunk of ReaderAuthenticationAllowableElementsProviding.allowableElementsForDisplayOnly.getter()
{
  return dispatch thunk of ReaderAuthenticationAllowableElementsProviding.allowableElementsForDisplayOnly.getter();
}

uint64_t dispatch thunk of ReaderAuthenticationAllowableElementsProviding.allowableElementsForDataTransfer.getter()
{
  return dispatch thunk of ReaderAuthenticationAllowableElementsProviding.allowableElementsForDataTransfer.getter();
}

uint64_t static StoredMobileDocumentReaderAttestationCertificate.fetchRequest()()
{
  return static StoredMobileDocumentReaderAttestationCertificate.fetchRequest()();
}

uint64_t type metadata accessor for StoredMobileDocumentReaderAttestationCertificate()
{
  return type metadata accessor for StoredMobileDocumentReaderAttestationCertificate();
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.payloadElements.getter()
{
  return DeveloperTestJapanNationalIDCardCredentialBuilder.payloadElements.getter();
}

uint64_t DeveloperTestJapanNationalIDCardCredentialBuilder.init()()
{
  return DeveloperTestJapanNationalIDCardCredentialBuilder.init()();
}

uint64_t type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder()
{
  return type metadata accessor for DeveloperTestJapanNationalIDCardCredentialBuilder();
}

uint64_t static StoredMobileDocumentReaderApplicationInstallation.fetchRequest()()
{
  return static StoredMobileDocumentReaderApplicationInstallation.fetchRequest()();
}

uint64_t type metadata accessor for StoredMobileDocumentReaderApplicationInstallation()
{
  return type metadata accessor for StoredMobileDocumentReaderApplicationInstallation();
}

uint64_t static StoredMobileDocumentReaderAuthenticationCertificate.fetchRequest()()
{
  return static StoredMobileDocumentReaderAuthenticationCertificate.fetchRequest()();
}

uint64_t type metadata accessor for StoredMobileDocumentReaderAuthenticationCertificate()
{
  return type metadata accessor for StoredMobileDocumentReaderAuthenticationCertificate();
}

uint64_t AEADKey.init(secretKey:nonce:)()
{
  return AEADKey.init(secretKey:nonce:)();
}

uint64_t type metadata accessor for AEADKey()
{
  return type metadata accessor for AEADKey();
}

uint64_t IQACode.toString.getter()
{
  return IQACode.toString.getter();
}

uint64_t type metadata accessor for IQACode()
{
  return type metadata accessor for IQACode();
}

uint64_t type metadata accessor for IQCType()
{
  return type metadata accessor for IQCType();
}

uint64_t dispatch thunk of IQPoint.x.getter()
{
  return dispatch thunk of IQPoint.x.getter();
}

uint64_t dispatch thunk of IQPoint.y.getter()
{
  return dispatch thunk of IQPoint.y.getter();
}

uint64_t DIPError.properties.getter()
{
  return DIPError.properties.getter();
}

uint64_t type metadata accessor for DIPError.PropertyKey()
{
  return type metadata accessor for DIPError.PropertyKey();
}

uint64_t DIPError.isAuthorizationError.getter()
{
  return DIPError.isAuthorizationError.getter();
}

uint64_t DIPError.Code.init(rawValue:)()
{
  return DIPError.Code.init(rawValue:)();
}

uint64_t DIPError.Code.rawValue.getter()
{
  return DIPError.Code.rawValue.getter();
}

uint64_t type metadata accessor for DIPError.Code()
{
  return type metadata accessor for DIPError.Code();
}

uint64_t DIPError.code.getter()
{
  return DIPError.code.getter();
}

uint64_t type metadata accessor for DIPError()
{
  return type metadata accessor for DIPError();
}

uint64_t DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)()
{
  return DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)();
}

uint64_t IQSignal.init(type:comparator:threshold:)()
{
  return IQSignal.init(type:comparator:threshold:)();
}

uint64_t type metadata accessor for IQSignal()
{
  return type metadata accessor for IQSignal();
}

uint64_t type metadata accessor for KeyUsage()
{
  return type metadata accessor for KeyUsage();
}

uint64_t Logotype.logotypeTuples.getter()
{
  return Logotype.logotypeTuples.getter();
}

uint64_t type metadata accessor for Logotype()
{
  return type metadata accessor for Logotype();
}

uint64_t dispatch thunk of HPKESuite.sealMessageAEAD<A>(message:)()
{
  return dispatch thunk of HPKESuite.sealMessageAEAD<A>(message:)();
}

uint64_t KDFParams.init(senderSigningKeyFingerprint:recipientSigningKeyFingerprint:conversationToken:sharedIdentifierNames:)()
{
  return KDFParams.init(senderSigningKeyFingerprint:recipientSigningKeyFingerprint:conversationToken:sharedIdentifierNames:)();
}

uint64_t type metadata accessor for KDFParams()
{
  return type metadata accessor for KDFParams();
}

Swift::Void __swiftcall Milestone.log()()
{
}

uint64_t Milestone.init(tag:description:)()
{
  return Milestone.init(tag:description:)();
}

uint64_t type metadata accessor for Milestone()
{
  return type metadata accessor for Milestone();
}

uint64_t _RegexFactory.accumulate<A, B, C>(_:_:)()
{
  return _RegexFactory.accumulate<A, B, C>(_:_:)();
}

uint64_t _RegexFactory.accumulateAlternation<A, B, C>(_:_:)()
{
  return _RegexFactory.accumulateAlternation<A, B, C>(_:_:)();
}

uint64_t _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)()
{
  return _RegexFactory.ignoreCapturesInTypedOutput<A>(_:)();
}

uint64_t _RegexFactory.capture<A, B, C, D>(_:_:_:)()
{
  return _RegexFactory.capture<A, B, C, D>(_:_:_:)();
}

uint64_t _RegexFactory.oneOrMore<A, B>(_:_:)()
{
  return _RegexFactory.oneOrMore<A, B>(_:_:)();
}

uint64_t _RegexFactory.zeroOrOne<A, B>(_:_:)()
{
  return _RegexFactory.zeroOrOne<A, B>(_:_:)();
}

uint64_t type metadata accessor for _RegexFactory()
{
  return type metadata accessor for _RegexFactory();
}

uint64_t static RegexComponent<>.any.getter()
{
  return static RegexComponent<>.any.getter();
}

uint64_t type metadata accessor for RegexRepetitionBehavior()
{
  return type metadata accessor for RegexRepetitionBehavior();
}

uint64_t Regex.init(_regexString:version:)()
{
  return Regex.init(_regexString:version:)();
}

uint64_t Regex.init<A>(_:)()
{
  return Regex.init<A>(_:)();
}

uint64_t Regex.ignoresCase(_:)()
{
  return Regex.ignoresCase(_:)();
}

uint64_t Regex.Match.subscript.getter()
{
  return Regex.Match.subscript.getter();
}

uint64_t Regex<A>.init(_:)()
{
  return Regex<A>.init(_:)();
}

uint64_t Logger.cryptoParam(_:)()
{
  return Logger.cryptoParam(_:)();
}

uint64_t Logger.sensitive(_:)()
{
  return Logger.sensitive(_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t XPC_EVENT_KEY_NAME.getter()
{
  return XPC_EVENT_KEY_NAME.getter();
}

uint64_t XPC_TYPE_DICTIONARY.getter()
{
  return XPC_TYPE_DICTIONARY.getter();
}

uint64_t errno.getter()
{
  return errno.getter();
}

uint64_t SIG_IGN.getter()
{
  return SIG_IGN.getter();
}

uint64_t S_IRUSR.getter()
{
  return S_IRUSR.getter();
}

uint64_t S_IWUSR.getter()
{
  return S_IWUSR.getter();
}

uint64_t S_IXUSR.getter()
{
  return S_IXUSR.getter();
}

uint64_t AuditToken.init(auditToken:)()
{
  return AuditToken.init(auditToken:)();
}

uint64_t static AuditToken.== infix(_:_:)()
{
  return static AuditToken.== infix(_:_:)();
}

uint64_t AuditToken.wrapped.getter()
{
  return AuditToken.wrapped.getter();
}

uint64_t type metadata accessor for AuditToken()
{
  return type metadata accessor for AuditToken();
}

uint64_t BundleRecord.containingBundleRecord.getter()
{
  return BundleRecord.containingBundleRecord.getter();
}

uint64_t static BundleRecord.RecordType.== infix(_:_:)()
{
  return static BundleRecord.RecordType.== infix(_:_:)();
}

uint64_t type metadata accessor for BundleRecord.RecordType()
{
  return type metadata accessor for BundleRecord.RecordType();
}

uint64_t BundleRecord.recordType.getter()
{
  return BundleRecord.recordType.getter();
}

uint64_t BundleRecord.entitlements.getter()
{
  return BundleRecord.entitlements.getter();
}

uint64_t BundleRecord.teamIdentifier.getter()
{
  return BundleRecord.teamIdentifier.getter();
}

uint64_t BundleRecord.bundleIdentifier.getter()
{
  return BundleRecord.bundleIdentifier.getter();
}

uint64_t BundleRecord.applicationIdentifier.getter()
{
  return BundleRecord.applicationIdentifier.getter();
}

uint64_t BundleRecord.installationIdentifier.getter()
{
  return BundleRecord.installationIdentifier.getter();
}

uint64_t BundleRecord.localizedIdentityUsageDescription.getter()
{
  return BundleRecord.localizedIdentityUsageDescription.getter();
}

uint64_t type metadata accessor for BundleRecord()
{
  return type metadata accessor for BundleRecord();
}

uint64_t XPCAuditToken.value.getter()
{
  return XPCAuditToken.value.getter();
}

uint64_t type metadata accessor for IdentityElement()
{
  return type metadata accessor for IdentityElement();
}

uint64_t type metadata accessor for MobileDocumentType.Identifier()
{
  return type metadata accessor for MobileDocumentType.Identifier();
}

uint64_t MobileDocumentType.iso18013Identifier.getter()
{
  return MobileDocumentType.iso18013Identifier.getter();
}

uint64_t MobileDocumentType.storage.getter()
{
  return MobileDocumentType.storage.getter();
}

uint64_t type metadata accessor for MobileDocumentType()
{
  return type metadata accessor for MobileDocumentType();
}

uint64_t BundleRecordFetcher.init()()
{
  return BundleRecordFetcher.init()();
}

uint64_t type metadata accessor for BundleRecordFetcher()
{
  return type metadata accessor for BundleRecordFetcher();
}

uint64_t dispatch thunk of BundleRecordFetching.record(withAuditToken:)()
{
  return dispatch thunk of BundleRecordFetching.record(withAuditToken:)();
}

uint64_t dispatch thunk of BundleRecordFetching.record(withApplicationIdentifier:)()
{
  return dispatch thunk of BundleRecordFetching.record(withApplicationIdentifier:)();
}

uint64_t MobileDocumentIssuer.init(jurisdictionCode:)()
{
  return MobileDocumentIssuer.init(jurisdictionCode:)();
}

uint64_t type metadata accessor for MobileDocumentIssuer()
{
  return type metadata accessor for MobileDocumentIssuer();
}

uint64_t ISO18013KnownDocTypes.init(rawValue:)()
{
  return ISO18013KnownDocTypes.init(rawValue:)();
}

uint64_t ISO18013KnownDocTypes.rawValue.getter()
{
  return ISO18013KnownDocTypes.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013KnownDocTypes()
{
  return type metadata accessor for ISO18013KnownDocTypes();
}

uint64_t IdentityIntentToStore.merge(with:)()
{
  return IdentityIntentToStore.merge(with:)();
}

uint64_t type metadata accessor for IdentityIntentToStore()
{
  return type metadata accessor for IdentityIntentToStore();
}

uint64_t type metadata accessor for MobileDocumentElement.Element()
{
  return type metadata accessor for MobileDocumentElement.Element();
}

uint64_t static MobileDocumentElement.familyName.getter()
{
  return static MobileDocumentElement.familyName.getter();
}

uint64_t static MobileDocumentElement.dateOfBirth.getter()
{
  return static MobileDocumentElement.dateOfBirth.getter();
}

uint64_t static MobileDocumentElement.documentNumber.getter()
{
  return static MobileDocumentElement.documentNumber.getter();
}

uint64_t static MobileDocumentElement.issuingAuthority.getter()
{
  return static MobileDocumentElement.issuingAuthority.getter();
}

uint64_t static MobileDocumentElement.documentIssueDate.getter()
{
  return static MobileDocumentElement.documentIssueDate.getter();
}

uint64_t static MobileDocumentElement.drivingPrivileges.getter()
{
  return static MobileDocumentElement.drivingPrivileges.getter();
}

uint64_t static MobileDocumentElement.documentExpirationDate.getter()
{
  return static MobileDocumentElement.documentExpirationDate.getter();
}

uint64_t static MobileDocumentElement.documentDHSComplianceStatus.getter()
{
  return static MobileDocumentElement.documentDHSComplianceStatus.getter();
}

uint64_t static MobileDocumentElement.age.getter()
{
  return static MobileDocumentElement.age.getter();
}

uint64_t static MobileDocumentElement.sex.getter()
{
  return static MobileDocumentElement.sex.getter();
}

uint64_t static MobileDocumentElement.address.getter()
{
  return static MobileDocumentElement.address.getter();
}

uint64_t MobileDocumentElement.storage.getter()
{
  return MobileDocumentElement.storage.getter();
}

uint64_t static MobileDocumentElement.portrait.getter()
{
  return static MobileDocumentElement.portrait.getter();
}

uint64_t static MobileDocumentElement.givenName.getter()
{
  return static MobileDocumentElement.givenName.getter();
}

uint64_t type metadata accessor for MobileDocumentElement()
{
  return type metadata accessor for MobileDocumentElement();
}

uint64_t ISO18013KnownNamespaces.init(rawValue:)()
{
  return ISO18013KnownNamespaces.init(rawValue:)();
}

uint64_t ISO18013KnownNamespaces.rawValue.getter()
{
  return ISO18013KnownNamespaces.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013KnownNamespaces()
{
  return type metadata accessor for ISO18013KnownNamespaces();
}

uint64_t type metadata accessor for IdentityDocumentElement.RetentionIntent()
{
  return type metadata accessor for IdentityDocumentElement.RetentionIntent();
}

uint64_t IdentityDocumentElement.init(namespace:identifier:retentionIntent:)()
{
  return IdentityDocumentElement.init(namespace:identifier:retentionIntent:)();
}

uint64_t type metadata accessor for IdentityDocumentElement()
{
  return type metadata accessor for IdentityDocumentElement();
}

uint64_t DigitalPresentmentRequest.descriptor.getter()
{
  return DigitalPresentmentRequest.descriptor.getter();
}

uint64_t DigitalPresentmentRequest.merchantID.getter()
{
  return DigitalPresentmentRequest.merchantID.getter();
}

uint64_t DigitalPresentmentRequest.merchantNameOverride.getter()
{
  return DigitalPresentmentRequest.merchantNameOverride.getter();
}

uint64_t DigitalPresentmentRequest.merchantPrivacyPolicyOverride.getter()
{
  return DigitalPresentmentRequest.merchantPrivacyPolicyOverride.getter();
}

uint64_t DigitalPresentmentRequest.nonce.getter()
{
  return DigitalPresentmentRequest.nonce.getter();
}

uint64_t dispatch thunk of DigitalPresentmentResponse.__allocating_init(encryptedData:)()
{
  return dispatch thunk of DigitalPresentmentResponse.__allocating_init(encryptedData:)();
}

uint64_t type metadata accessor for DigitalPresentmentResponse()
{
  return type metadata accessor for DigitalPresentmentResponse();
}

uint64_t IdentityDocumentDescriptor.elementsToIntentToStore.getter()
{
  return IdentityDocumentDescriptor.elementsToIntentToStore.getter();
}

uint64_t IdentityDocumentDescriptor.documentType.getter()
{
  return IdentityDocumentDescriptor.documentType.getter();
}

uint64_t type metadata accessor for IdentityDocumentDescriptor()
{
  return type metadata accessor for IdentityDocumentDescriptor();
}

uint64_t static IdentityElementRawValueKeys.dateOfBirth.getter()
{
  return static IdentityElementRawValueKeys.dateOfBirth.getter();
}

uint64_t static IdentityElementRawValueKeys.documentNumber.getter()
{
  return static IdentityElementRawValueKeys.documentNumber.getter();
}

uint64_t static IdentityElementRawValueKeys.issuingAuthority.getter()
{
  return static IdentityElementRawValueKeys.issuingAuthority.getter();
}

uint64_t static IdentityElementRawValueKeys.documentIssueDate.getter()
{
  return static IdentityElementRawValueKeys.documentIssueDate.getter();
}

uint64_t static IdentityElementRawValueKeys.drivingPrivileges.getter()
{
  return static IdentityElementRawValueKeys.drivingPrivileges.getter();
}

uint64_t static IdentityElementRawValueKeys.documentExpirationDate.getter()
{
  return static IdentityElementRawValueKeys.documentExpirationDate.getter();
}

uint64_t static IdentityElementRawValueKeys.age.getter()
{
  return static IdentityElementRawValueKeys.age.getter();
}

uint64_t static IdentityElementRawValueKeys.address.getter()
{
  return static IdentityElementRawValueKeys.address.getter();
}

uint64_t static IdentityElementRawValueKeys.portrait.getter()
{
  return static IdentityElementRawValueKeys.portrait.getter();
}

uint64_t static IdentityElementRawValueKeys.ageIsOver(_:)()
{
  return static IdentityElementRawValueKeys.ageIsOver(_:)();
}

uint64_t static IdentityElementRawValueKeys.givenName.getter()
{
  return static IdentityElementRawValueKeys.givenName.getter();
}

uint64_t type metadata accessor for IdentityElementRawValueKeys()
{
  return type metadata accessor for IdentityElementRawValueKeys();
}

uint64_t MobileDocumentReaderRequest.Document.requiresReaderToken.getter()
{
  return MobileDocumentReaderRequest.Document.requiresReaderToken.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderRequest.Document.RequestType()
{
  return type metadata accessor for MobileDocumentReaderRequest.Document.RequestType();
}

uint64_t MobileDocumentReaderRequest.Document.requestType.getter()
{
  return MobileDocumentReaderRequest.Document.requestType.getter();
}

uint64_t MobileDocumentReaderRequest.Document.isDisplayOnly.getter()
{
  return MobileDocumentReaderRequest.Document.isDisplayOnly.getter();
}

uint64_t MobileDocumentReaderRequest.Document.retainedElements.getter()
{
  return MobileDocumentReaderRequest.Document.retainedElements.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderRequest.Document.ValidationOptions()
{
  return type metadata accessor for MobileDocumentReaderRequest.Document.ValidationOptions();
}

uint64_t MobileDocumentReaderRequest.Document.isRawDataTransfer.getter()
{
  return MobileDocumentReaderRequest.Document.isRawDataTransfer.getter();
}

uint64_t MobileDocumentReaderRequest.Document.nonRetainedElements.getter()
{
  return MobileDocumentReaderRequest.Document.nonRetainedElements.getter();
}

uint64_t MobileDocumentReaderRequest.Document.additionalIssuerCertificates.getter()
{
  return MobileDocumentReaderRequest.Document.additionalIssuerCertificates.getter();
}

uint64_t MobileDocumentReaderRequest.Document.usesSystemTrustedIssuerCertificates.getter()
{
  return MobileDocumentReaderRequest.Document.usesSystemTrustedIssuerCertificates.getter();
}

uint64_t MobileDocumentReaderRequest.Document.type.getter()
{
  return MobileDocumentReaderRequest.Document.type.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderRequest.Document()
{
  return type metadata accessor for MobileDocumentReaderRequest.Document();
}

uint64_t MobileDocumentReaderRequest.sessionIdentifier.getter()
{
  return MobileDocumentReaderRequest.sessionIdentifier.getter();
}

uint64_t MobileDocumentReaderRequest.document.getter()
{
  return MobileDocumentReaderRequest.document.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderRequest()
{
  return type metadata accessor for MobileDocumentReaderRequest();
}

uint64_t static MobileDocumentReaderSession.machServiceName.getter()
{
  return static MobileDocumentReaderSession.machServiceName.getter();
}

uint64_t MobileDocumentReaderSession.Error.underlyingError.setter()
{
  return MobileDocumentReaderSession.Error.underlyingError.setter();
}

uint64_t MobileDocumentReaderSession.Error.debugDescription.getter()
{
  return MobileDocumentReaderSession.Error.debugDescription.getter();
}

uint64_t MobileDocumentReaderSession.Error.debugDescription.setter()
{
  return MobileDocumentReaderSession.Error.debugDescription.setter();
}

uint64_t static MobileDocumentReaderSession.Error.Code.== infix(_:_:)()
{
  return static MobileDocumentReaderSession.Error.Code.== infix(_:_:)();
}

uint64_t type metadata accessor for MobileDocumentReaderSession.Error.Code()
{
  return type metadata accessor for MobileDocumentReaderSession.Error.Code();
}

uint64_t MobileDocumentReaderSession.Error.init(code:underlyingError:debugDescription:)()
{
  return MobileDocumentReaderSession.Error.init(code:underlyingError:debugDescription:)();
}

uint64_t MobileDocumentReaderSession.Error.code.getter()
{
  return MobileDocumentReaderSession.Error.code.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderSession.Error()
{
  return type metadata accessor for MobileDocumentReaderSession.Error();
}

uint64_t type metadata accessor for MobileDocumentReaderSession.State()
{
  return type metadata accessor for MobileDocumentReaderSession.State();
}

uint64_t type metadata accessor for MobileDocumentReaderSession()
{
  return type metadata accessor for MobileDocumentReaderSession();
}

uint64_t static ISO23220_1_ElementIdentifier.parseAgeOverElement(_:)()
{
  return static ISO23220_1_ElementIdentifier.parseAgeOverElement(_:)();
}

uint64_t static ISO23220_1_ElementIdentifier.isAgeOverElement(_:)()
{
  return static ISO23220_1_ElementIdentifier.isAgeOverElement(_:)();
}

uint64_t static ISO23220_1_ElementIdentifier.namespaceIdentifier.getter()
{
  return static ISO23220_1_ElementIdentifier.namespaceIdentifier.getter();
}

uint64_t static ISO23220_1_ElementIdentifier.ageOver(nn:)()
{
  return static ISO23220_1_ElementIdentifier.ageOver(nn:)();
}

uint64_t type metadata accessor for ISO23220_1_ElementIdentifier()
{
  return type metadata accessor for ISO23220_1_ElementIdentifier();
}

uint64_t MobileDocumentReaderMerchant.init(name:logoData:identifier:)()
{
  return MobileDocumentReaderMerchant.init(name:logoData:identifier:)();
}

uint64_t type metadata accessor for MobileDocumentReaderMerchant()
{
  return type metadata accessor for MobileDocumentReaderMerchant();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.ageAtLeastElements.getter()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.ageAtLeastElements.getter();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.portraitData.getter()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.portraitData.getter();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.nameComponents.getter()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.nameComponents.getter();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.init(nameComponents:sex:portraitData:age:ageAtLeastElements:dateOfBirth:address:nationality:issuingAuthority:drivingPrivileges:aamvaDrivingPrivileges:documentDHSComplianceStatus:documentNumber:documentIssueDate:documentExpirationDate:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.init(nameComponents:sex:portraitData:age:ageAtLeastElements:dateOfBirth:address:nationality:issuingAuthority:drivingPrivileges:aamvaDrivingPrivileges:documentDHSComplianceStatus:documentNumber:documentIssueDate:documentExpirationDate:)();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.init(vehicleCategoryCode:issueDate:expirationDate:codes:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.init(vehicleCategoryCode:issueDate:expirationDate:codes:)();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.init(code:sign:value:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code.init(code:sign:value:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege.Code();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DrivingPrivilege();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.init(name:jurisdiction:isoCountryCode:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority.init(name:jurisdiction:isoCountryCode:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.IssuingAuthority();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.DHSComplianceStatus();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.init(code:description:issueDate:expirationDate:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass.init(code:description:issueDate:expirationDate:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleClass();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.init(vehicleClass:vehicleRestrictions:vehicleEndorsements:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.init(vehicleClass:vehicleRestrictions:vehicleEndorsements:)();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(code:description:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement.init(code:description:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleEndorsement();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(code:description:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction.init(code:description:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege.VehicleRestriction();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.AAMVADrivingPrivilege();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Sex();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.age.getter()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.age.getter();
}

uint64_t MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.init(street:city:state:postalCode:isoCountryCode:)()
{
  return MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address.init(street:city:state:postalCode:isoCountryCode:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements.Address();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements()
{
  return type metadata accessor for MobileDocumentReaderResponse.MobileIdentityDocumentElements();
}

uint64_t MobileDocumentReaderResponse.init(responseData:sessionTranscript:mobileIdentityDocumentElements:issuer:)()
{
  return MobileDocumentReaderResponse.init(responseData:sessionTranscript:mobileIdentityDocumentElements:issuer:)();
}

uint64_t type metadata accessor for MobileDocumentReaderResponse()
{
  return type metadata accessor for MobileDocumentReaderResponse();
}

uint64_t XPCIdentityDocumentDescriptor.value.getter()
{
  return XPCIdentityDocumentDescriptor.value.getter();
}

uint64_t static DIIdentityProofingXPCInterface.interface()()
{
  return static DIIdentityProofingXPCInterface.interface()();
}

uint64_t type metadata accessor for DIIdentityProofingXPCInterface()
{
  return type metadata accessor for DIIdentityProofingXPCInterface();
}

uint64_t DigitalPresentmentDocumentType.description.getter()
{
  return DigitalPresentmentDocumentType.description.getter();
}

uint64_t type metadata accessor for DigitalPresentmentDocumentType()
{
  return type metadata accessor for DigitalPresentmentDocumentType();
}

uint64_t static DigitalPresentmentXPCInterface.interface()()
{
  return static DigitalPresentmentXPCInterface.interface()();
}

uint64_t type metadata accessor for DigitalPresentmentXPCInterface()
{
  return type metadata accessor for DigitalPresentmentXPCInterface();
}

uint64_t static ISO18013_5_1_ElementIdentifier.parseAgeOverElement(_:)()
{
  return static ISO18013_5_1_ElementIdentifier.parseAgeOverElement(_:)();
}

uint64_t static ISO18013_5_1_ElementIdentifier.isAgeOverElement(_:)()
{
  return static ISO18013_5_1_ElementIdentifier.isAgeOverElement(_:)();
}

uint64_t static ISO18013_5_1_ElementIdentifier.namespaceIdentifier.getter()
{
  return static ISO18013_5_1_ElementIdentifier.namespaceIdentifier.getter();
}

uint64_t static ISO18013_5_1_ElementIdentifier.ageOver(nn:)()
{
  return static ISO18013_5_1_ElementIdentifier.ageOver(nn:)();
}

uint64_t ISO18013_5_1_ElementIdentifier.init(rawValue:)()
{
  return ISO18013_5_1_ElementIdentifier.init(rawValue:)();
}

uint64_t ISO18013_5_1_ElementIdentifier.rawValue.getter()
{
  return ISO18013_5_1_ElementIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013_5_1_ElementIdentifier()
{
  return type metadata accessor for ISO18013_5_1_ElementIdentifier();
}

uint64_t XPCMobileDocumentReaderRequest.value.getter()
{
  return XPCMobileDocumentReaderRequest.value.getter();
}

uint64_t machServiceIdentityProofingXPC.getter()
{
  return machServiceIdentityProofingXPC.getter();
}

uint64_t type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup()
{
  return type metadata accessor for IdentityDocumentElementCategory.PresentmentElementGroup();
}

uint64_t static IdentityDocumentElementCategory.groups(forDocumentType:namespace:identifier:)()
{
  return static IdentityDocumentElementCategory.groups(forDocumentType:namespace:identifier:)();
}

uint64_t IdentityDocumentElementCategory.storage.getter()
{
  return IdentityDocumentElementCategory.storage.getter();
}

uint64_t type metadata accessor for IdentityDocumentElementCategory()
{
  return type metadata accessor for IdentityDocumentElementCategory();
}

uint64_t dispatch thunk of static MobileDocumentElementIdentifier.namespaceIdentifier.getter()
{
  return dispatch thunk of static MobileDocumentElementIdentifier.namespaceIdentifier.getter();
}

uint64_t XPCMobileDocumentReaderMerchant.init(value:)()
{
  return XPCMobileDocumentReaderMerchant.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderMerchant()
{
  return type metadata accessor for XPCMobileDocumentReaderMerchant();
}

uint64_t XPCMobileDocumentReaderResponse.init(value:)()
{
  return XPCMobileDocumentReaderResponse.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderResponse()
{
  return type metadata accessor for XPCMobileDocumentReaderResponse();
}

uint64_t ISO18013_AAMVA_ElementIdentifier.init(rawValue:)()
{
  return ISO18013_AAMVA_ElementIdentifier.init(rawValue:)();
}

uint64_t ISO18013_AAMVA_ElementIdentifier.rawValue.getter()
{
  return ISO18013_AAMVA_ElementIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013_AAMVA_ElementIdentifier()
{
  return type metadata accessor for ISO18013_AAMVA_ElementIdentifier();
}

uint64_t MobileDocumentReaderStoreSession.Error.underlyingError.setter()
{
  return MobileDocumentReaderStoreSession.Error.underlyingError.setter();
}

uint64_t type metadata accessor for MobileDocumentReaderStoreSession.Error.Code()
{
  return type metadata accessor for MobileDocumentReaderStoreSession.Error.Code();
}

uint64_t MobileDocumentReaderStoreSession.Error.init(code:underlyingError:)()
{
  return MobileDocumentReaderStoreSession.Error.init(code:underlyingError:)();
}

uint64_t type metadata accessor for MobileDocumentReaderStoreSession.Error()
{
  return type metadata accessor for MobileDocumentReaderStoreSession.Error();
}

uint64_t machServiceDigitalPresentmentXPC.getter()
{
  return machServiceDigitalPresentmentXPC.getter();
}

uint64_t type metadata accessor for IdentityDocumentPresentmentSource()
{
  return type metadata accessor for IdentityDocumentPresentmentSource();
}

uint64_t MobileDocumentReaderConfiguration.init(merchantServerAccessToken:userAcceptedTermsAndConditions:)()
{
  return MobileDocumentReaderConfiguration.init(merchantServerAccessToken:userAcceptedTermsAndConditions:)();
}

uint64_t MobileDocumentReaderConfiguration.merchantServerAccessToken.getter()
{
  return MobileDocumentReaderConfiguration.merchantServerAccessToken.getter();
}

uint64_t MobileDocumentReaderConfiguration.userAcceptedTermsAndConditions.getter()
{
  return MobileDocumentReaderConfiguration.userAcceptedTermsAndConditions.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderConfiguration()
{
  return type metadata accessor for MobileDocumentReaderConfiguration();
}

uint64_t static DIIdentityProvisioningXPCInterface.interface()()
{
  return static DIIdentityProvisioningXPCInterface.interface()();
}

uint64_t type metadata accessor for DIIdentityProvisioningXPCInterface()
{
  return type metadata accessor for DIIdentityProvisioningXPCInterface();
}

uint64_t type metadata accessor for ISO23220_1_Japan_ElementIdentifier()
{
  return type metadata accessor for ISO23220_1_Japan_ElementIdentifier();
}

uint64_t MobileDocumentReaderSupportChecker.init(suiteNameOverride:)()
{
  return MobileDocumentReaderSupportChecker.init(suiteNameOverride:)();
}

uint64_t type metadata accessor for MobileDocumentReaderSupportChecker()
{
  return type metadata accessor for MobileDocumentReaderSupportChecker();
}

uint64_t machServiceIdentityProvisioningXPC.getter()
{
  return machServiceIdentityProvisioningXPC.getter();
}

uint64_t dispatch thunk of MobileDocumentReaderSupportChecking.isLocaleSupported(_:)()
{
  return dispatch thunk of MobileDocumentReaderSupportChecking.isLocaleSupported(_:)();
}

uint64_t dispatch thunk of MobileDocumentReaderSupportChecking.update(isGloballySupported:supportedRegions:unsupportedRegions:)()
{
  return dispatch thunk of MobileDocumentReaderSupportChecking.update(isGloballySupported:supportedRegions:unsupportedRegions:)();
}

uint64_t XPCMobileDocumentReaderSessionState.init(value:)()
{
  return XPCMobileDocumentReaderSessionState.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderSessionState()
{
  return type metadata accessor for XPCMobileDocumentReaderSessionState();
}

uint64_t XPCMobileDocumentReaderConfiguration.value.getter()
{
  return XPCMobileDocumentReaderConfiguration.value.getter();
}

uint64_t IdentityDocumentElementCategoryGroups.init(documentType:documentElements:)()
{
  return IdentityDocumentElementCategoryGroups.init(documentType:documentElements:)();
}

uint64_t IdentityDocumentElementCategoryGroups.retainingElements.getter()
{
  return IdentityDocumentElementCategoryGroups.retainingElements.getter();
}

uint64_t IdentityDocumentElementCategoryGroups.displayOnlyElements.getter()
{
  return IdentityDocumentElementCategoryGroups.displayOnlyElements.getter();
}

uint64_t IdentityDocumentElementCategoryGroups.notRetainingElements.getter()
{
  return IdentityDocumentElementCategoryGroups.notRetainingElements.getter();
}

uint64_t IdentityDocumentElementCategoryGroups.maximumRetentionPeriod.getter()
{
  return IdentityDocumentElementCategoryGroups.maximumRetentionPeriod.getter();
}

uint64_t type metadata accessor for IdentityDocumentElementCategoryGroups()
{
  return type metadata accessor for IdentityDocumentElementCategoryGroups();
}

uint64_t type metadata accessor for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo()
{
  return type metadata accessor for DigitalPresentmentDisplayConfiguration.ClientDisplayInfo();
}

uint64_t DigitalPresentmentDisplayConfiguration.clientDisplayInfo.getter()
{
  return DigitalPresentmentDisplayConfiguration.clientDisplayInfo.getter();
}

uint64_t DigitalPresentmentDisplayConfiguration.clientDisplayName.getter()
{
  return DigitalPresentmentDisplayConfiguration.clientDisplayName.getter();
}

uint64_t DigitalPresentmentDisplayConfiguration.usageDescription.getter()
{
  return DigitalPresentmentDisplayConfiguration.usageDescription.getter();
}

uint64_t type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle()
{
  return type metadata accessor for DigitalPresentmentDisplayConfiguration.PresentationStyle();
}

uint64_t DigitalPresentmentDisplayConfiguration.persistedElements.getter()
{
  return DigitalPresentmentDisplayConfiguration.persistedElements.getter();
}

uint64_t type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime()
{
  return type metadata accessor for DigitalPresentmentDisplayConfiguration.PersistedElementsStorageLifetime();
}

uint64_t DigitalPresentmentDisplayConfiguration.persistedElementsStorageLifetimePeriod.getter()
{
  return DigitalPresentmentDisplayConfiguration.persistedElementsStorageLifetimePeriod.getter();
}

uint64_t type metadata accessor for DigitalPresentmentDisplayConfiguration.StringID()
{
  return type metadata accessor for DigitalPresentmentDisplayConfiguration.StringID();
}

uint64_t DigitalPresentmentDisplayConfiguration.init(elements:displayOnlyElements:persistedElements:presentmentSource:presentationStyle:persistedElementsStorageLifetimePeriod:clientDisplayInfo:passID:usageDescription:passName:documentType:)()
{
  return DigitalPresentmentDisplayConfiguration.init(elements:displayOnlyElements:persistedElements:presentmentSource:presentationStyle:persistedElementsStorageLifetimePeriod:clientDisplayInfo:passID:usageDescription:passName:documentType:)();
}

uint64_t static DigitalPresentmentDisplayConfiguration.getString(_:)()
{
  return static DigitalPresentmentDisplayConfiguration.getString(_:)();
}

uint64_t type metadata accessor for DigitalPresentmentDisplayConfiguration()
{
  return type metadata accessor for DigitalPresentmentDisplayConfiguration();
}

uint64_t MobileDocumentReaderCertificateRequest.sessionIdentifier.getter()
{
  return MobileDocumentReaderCertificateRequest.sessionIdentifier.getter();
}

uint64_t MobileDocumentReaderCertificateRequest.applicationIdentifier.getter()
{
  return MobileDocumentReaderCertificateRequest.applicationIdentifier.getter();
}

uint64_t MobileDocumentReaderCertificateRequest.installationIdentifier.getter()
{
  return MobileDocumentReaderCertificateRequest.installationIdentifier.getter();
}

uint64_t MobileDocumentReaderCertificateRequest.keyBlob.getter()
{
  return MobileDocumentReaderCertificateRequest.keyBlob.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderCertificateRequest()
{
  return type metadata accessor for MobileDocumentReaderCertificateRequest();
}

Swift::Bool __swiftcall MobileDocumentReaderEntitlementChecker.checkInternalEntitlement(connection:)(NSXPCConnection_optional connection)
{
  return MobileDocumentReaderEntitlementChecker.checkInternalEntitlement(connection:)(connection.value.super.isa, *(void *)&connection.is_nil);
}

uint64_t MobileDocumentReaderEntitlementChecker.init(bundleRecordFetcher:)()
{
  return MobileDocumentReaderEntitlementChecker.init(bundleRecordFetcher:)();
}

Swift::Bool __swiftcall MobileDocumentReaderEntitlementChecker.checkDevelopmentFlagEntitlements(auditToken:)(audit_token_t *auditToken)
{
  return MobileDocumentReaderEntitlementChecker.checkDevelopmentFlagEntitlements(auditToken:)(auditToken);
}

uint64_t static MobileDocumentReaderEntitlementChecker.Constant.displayOnlyEntitlementKey.getter()
{
  return static MobileDocumentReaderEntitlementChecker.Constant.displayOnlyEntitlementKey.getter();
}

uint64_t static MobileDocumentReaderEntitlementChecker.Constant.dataTransferEntitlementKey.getter()
{
  return static MobileDocumentReaderEntitlementChecker.Constant.dataTransferEntitlementKey.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderEntitlementChecker()
{
  return type metadata accessor for MobileDocumentReaderEntitlementChecker();
}

uint64_t MobileDocumentReaderIdentityKeyRequest.applicationIdentifier.getter()
{
  return MobileDocumentReaderIdentityKeyRequest.applicationIdentifier.getter();
}

uint64_t MobileDocumentReaderIdentityKeyRequest.installationIdentifier.getter()
{
  return MobileDocumentReaderIdentityKeyRequest.installationIdentifier.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderIdentityKeyRequest()
{
  return type metadata accessor for MobileDocumentReaderIdentityKeyRequest();
}

uint64_t ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter()
{
  return ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013_5_1_DrivingPrivilegeIdentifier()
{
  return type metadata accessor for ISO18013_5_1_DrivingPrivilegeIdentifier();
}

uint64_t MobileDocumentReaderCertificateResponse.StatusItem.init(sessionIdentifier:certificateChain:merchantLogo:)()
{
  return MobileDocumentReaderCertificateResponse.StatusItem.init(sessionIdentifier:certificateChain:merchantLogo:)();
}

uint64_t type metadata accessor for MobileDocumentReaderCertificateResponse.StatusItem()
{
  return type metadata accessor for MobileDocumentReaderCertificateResponse.StatusItem();
}

uint64_t MobileDocumentReaderCertificateResponse.init(items:)()
{
  return MobileDocumentReaderCertificateResponse.init(items:)();
}

uint64_t type metadata accessor for MobileDocumentReaderCertificateResponse()
{
  return type metadata accessor for MobileDocumentReaderCertificateResponse();
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkPublicEntitlements(auditToken:)()
{
  return dispatch thunk of MobileDocumentReaderEntitlementChecking.checkPublicEntitlements(auditToken:)();
}

uint64_t dispatch thunk of MobileDocumentReaderEntitlementChecking.checkBundleTypeSupported(auditToken:)()
{
  return dispatch thunk of MobileDocumentReaderEntitlementChecking.checkBundleTypeSupported(auditToken:)();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)()
{
  return MobileDocumentReaderIdentityKeyResponse.StatusItem.init(applicationIdentifier:installationIdentifier:identityKeyBlob:)();
}

uint64_t type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem()
{
  return type metadata accessor for MobileDocumentReaderIdentityKeyResponse.StatusItem();
}

uint64_t MobileDocumentReaderIdentityKeyResponse.init(items:)()
{
  return MobileDocumentReaderIdentityKeyResponse.init(items:)();
}

uint64_t type metadata accessor for MobileDocumentReaderIdentityKeyResponse()
{
  return type metadata accessor for MobileDocumentReaderIdentityKeyResponse();
}

uint64_t type metadata accessor for MobileDocumentReaderDeviceEngagementType()
{
  return type metadata accessor for MobileDocumentReaderDeviceEngagementType();
}

uint64_t MobileDocumentReaderConfigurationResponse.init(sessionIdentifier:sessionExpirationDate:)()
{
  return MobileDocumentReaderConfigurationResponse.init(sessionIdentifier:sessionExpirationDate:)();
}

uint64_t type metadata accessor for MobileDocumentReaderConfigurationResponse()
{
  return type metadata accessor for MobileDocumentReaderConfigurationResponse();
}

uint64_t XPCMobileDocumentReaderCertificateRequest.value.getter()
{
  return XPCMobileDocumentReaderCertificateRequest.value.getter();
}

uint64_t XPCMobileDocumentReaderIdentityKeyRequest.value.getter()
{
  return XPCMobileDocumentReaderIdentityKeyRequest.value.getter();
}

uint64_t type metadata accessor for MobileDocumentReaderBundleTypeCheckOutcome()
{
  return type metadata accessor for MobileDocumentReaderBundleTypeCheckOutcome();
}

uint64_t XPCMobileDocumentReaderCertificateResponse.init(value:)()
{
  return XPCMobileDocumentReaderCertificateResponse.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderCertificateResponse()
{
  return type metadata accessor for XPCMobileDocumentReaderCertificateResponse();
}

uint64_t XPCMobileDocumentReaderIdentityKeyResponse.init(value:)()
{
  return XPCMobileDocumentReaderIdentityKeyResponse.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderIdentityKeyResponse()
{
  return type metadata accessor for XPCMobileDocumentReaderIdentityKeyResponse();
}

uint64_t XPCMobileDocumentReaderDeviceEngagementType.value.getter()
{
  return XPCMobileDocumentReaderDeviceEngagementType.value.getter();
}

uint64_t XPCMobileDocumentReaderConfigurationResponse.init(value:)()
{
  return XPCMobileDocumentReaderConfigurationResponse.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderConfigurationResponse()
{
  return type metadata accessor for XPCMobileDocumentReaderConfigurationResponse();
}

uint64_t MobileDocumentReaderIssuerRootCertificateList.init(certificateData:)()
{
  return MobileDocumentReaderIssuerRootCertificateList.init(certificateData:)();
}

uint64_t type metadata accessor for MobileDocumentReaderIssuerRootCertificateList()
{
  return type metadata accessor for MobileDocumentReaderIssuerRootCertificateList();
}

uint64_t static DigitalPresentmentClientSourceDictionaryHelper.createDictionary(displayConfiguration:)()
{
  return static DigitalPresentmentClientSourceDictionaryHelper.createDictionary(displayConfiguration:)();
}

uint64_t XPCMobileDocumentReaderIssuerRootCertificateList.init(value:)()
{
  return XPCMobileDocumentReaderIssuerRootCertificateList.init(value:)();
}

uint64_t type metadata accessor for XPCMobileDocumentReaderIssuerRootCertificateList()
{
  return type metadata accessor for XPCMobileDocumentReaderIssuerRootCertificateList();
}

uint64_t ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter()
{
  return ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier()
{
  return type metadata accessor for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier();
}

uint64_t type metadata accessor for NWInterface.InterfaceType()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t NWPath.isExpensive.getter()
{
  return NWPath.isExpensive.getter();
}

uint64_t NWPath.isConstrained.getter()
{
  return NWPath.isConstrained.getter();
}

uint64_t NWPath.usesInterfaceType(_:)()
{
  return NWPath.usesInterfaceType(_:)();
}

uint64_t type metadata accessor for NWPath()
{
  return type metadata accessor for NWPath();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t static DispatchWorkItemFlags.barrier.getter()
{
  return static DispatchWorkItemFlags.barrier.getter();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t DispatchTime.uptimeNanoseconds.getter()
{
  return DispatchTime.uptimeNanoseconds.getter();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t SymmetricKey.withUnsafeBytes<A>(_:)()
{
  return SymmetricKey.withUnsafeBytes<A>(_:)();
}

uint64_t SymmetricKey.init(size:)()
{
  return SymmetricKey.init(size:)();
}

uint64_t type metadata accessor for SymmetricKey()
{
  return type metadata accessor for SymmetricKey();
}

uint64_t static SymmetricKeySize.bits128.getter()
{
  return static SymmetricKeySize.bits128.getter();
}

uint64_t type metadata accessor for SymmetricKeySize()
{
  return type metadata accessor for SymmetricKeySize();
}

uint64_t AES.GCM.Nonce.withUnsafeBytes<A>(_:)()
{
  return AES.GCM.Nonce.withUnsafeBytes<A>(_:)();
}

uint64_t AES.GCM.Nonce.init()()
{
  return AES.GCM.Nonce.init()();
}

uint64_t type metadata accessor for AES.GCM.Nonce()
{
  return type metadata accessor for AES.GCM.Nonce();
}

uint64_t Digest.data.getter()
{
  return Digest.data.getter();
}

uint64_t Digest.hexStr.getter()
{
  return Digest.hexStr.getter();
}

uint64_t Digest.base64Str.getter()
{
  return Digest.base64Str.getter();
}

uint64_t type metadata accessor for SHA256()
{
  return type metadata accessor for SHA256();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t Character._isSingleScalar.getter()
{
  return Character._isSingleScalar.getter();
}

uint64_t BidirectionalCollection<>.wholeMatch<A>(of:)()
{
  return BidirectionalCollection<>.wholeMatch<A>(of:)();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.matches<A, B>(of:)()
{
  return BidirectionalCollection<>.matches<A, B>(of:)();
}

uint64_t BidirectionalCollection<>.contains<A>(_:)()
{
  return BidirectionalCollection<>.contains<A>(_:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.init(contentsOf:encoding:)()
{
  return String.init(contentsOf:encoding:)();
}

uint64_t String.init(contentsOfFile:)()
{
  return String.init(contentsOfFile:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init<A>(bytes:encoding:)()
{
  return String.init<A>(bytes:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.debugDescription.getter()
{
  return String.debugDescription.getter();
}

uint64_t static String._fromUTF8Repairing(_:)()
{
  return static String._fromUTF8Repairing(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.init(cString:)()
{
  return String.init(cString:)();
}

{
  return String.init(cString:)();
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0 = String.Iterator.next()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::Bool __swiftcall String.hasSuffix(_:)(Swift::String a1)
{
  return String.hasSuffix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t Sequence<>.joined(separator:)()
{
  return Sequence<>.joined(separator:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t Array<A>.derRepresentation()()
{
  return Array<A>.derRepresentation()();
}

uint64_t Array<A>.base64EncodedStrings()()
{
  return Array<A>.base64EncodedStrings()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t Array.debugDescription.getter()
{
  return Array.debugDescription.getter();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

Swift::Void __swiftcall ThrowingTaskGroup.cancelAll()()
{
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.init(_:)()
{
  return Double.init(_:)();
}

uint64_t Float.write<A>(to:)()
{
  return Float.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t Int.formattedByteSize.getter()
{
  return Int.formattedByteSize.getter();
}

uint64_t Collection.nilIfEmpty.getter()
{
  return Collection.nilIfEmpty.getter();
}

uint64_t CKOperation.operationID.getter()
{
  return CKOperation.operationID.getter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t SecTrustRef.certificateChain.getter()
{
  return SecTrustRef.certificateChain.getter();
}

SecCertificateRef_optional __swiftcall SecTrustRef.getLeafCertificate()()
{
  return (SecCertificateRef_optional)SecTrustRef.getLeafCertificate()();
}

uint64_t NSDictionary.makeIterator()()
{
  return NSDictionary.makeIterator()();
}

uint64_t NSDictionary.Iterator.next()()
{
  return NSDictionary.Iterator.next()();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static CKRecordZoneID.defaultZoneName.getter()
{
  return static CKRecordZoneID.defaultZoneName.getter();
}

CKRecordZoneID __swiftcall CKRecordZoneID.init(zoneName:ownerName:)(Swift::String zoneName, Swift::String ownerName)
{
  return (CKRecordZoneID)CKRecordZoneID.init(zoneName:ownerName:)(zoneName._countAndFlagsBits, zoneName._object, ownerName._countAndFlagsBits, ownerName._object);
}

uint64_t CKSubscription.subscriptionID.getter()
{
  return CKSubscription.subscriptionID.getter();
}

Swift::Bool __swiftcall LSPropertyList.BOOL(forKey:)(Swift::String forKey)
{
  return LSPropertyList.BOOL(forKey:)(forKey._countAndFlagsBits, forKey._object);
}

Swift::Int_optional __swiftcall NSUserDefaults.internalInt(forKey:)(Swift::String forKey)
{
  Swift::Int v1 = NSUserDefaults.internalInt(forKey:)(forKey._countAndFlagsBits, forKey._object);
  result.value = v1;
  result.is_nil = v2;
  return result;
}

Swift::Bool __swiftcall NSUserDefaults.internalBool(forKey:)(Swift::String forKey)
{
  return NSUserDefaults.internalBool(forKey:)(forKey._countAndFlagsBits, forKey._object);
}

void __swiftcall NSUserDefaults.internalFloat(forKey:)(Swift::Float_optional *__return_ptr retstr, Swift::String forKey)
{
}

Swift::Double_optional __swiftcall NSUserDefaults.internalDouble(forKey:)(Swift::String forKey)
{
  char v1 = NSUserDefaults.internalDouble(forKey:)(forKey._countAndFlagsBits, forKey._object);
  result.value = v2;
  result.is_nil = v1;
  return result;
}

Swift::String_optional __swiftcall NSUserDefaults.internalString(forKey:)(Swift::String forKey)
{
  uint64_t v1 = NSUserDefaults.internalString(forKey:)(forKey._countAndFlagsBits, forKey._object);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

Swift::OpaquePointer_optional __swiftcall NSUserDefaults.internalStringArray(forKey:)(Swift::String forKey)
{
  uint64_t v1 = NSUserDefaults.internalStringArray(forKey:)(forKey._countAndFlagsBits, forKey._object);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

uint64_t NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)()
{
  return NSXPCInterface.setClasses(_:for:argumentIndex:ofReply:)();
}

Swift::Bool __swiftcall NSXPCConnection.isEntitled(_:)(Swift::String a1)
{
  return NSXPCConnection.isEntitled(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getArrayEntitlement(name:)(Swift::String name)
{
  uint64_t v1 = NSXPCConnection.getArrayEntitlement(name:)(name._countAndFlagsBits, name._object);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

Swift::OpaquePointer_optional __swiftcall NSXPCConnection.getDictionaryOfStringArraysEntitlement(name:)(Swift::String name)
{
  uint64_t v1 = NSXPCConnection.getDictionaryOfStringArraysEntitlement(name:)(name._countAndFlagsBits, name._object);
  result.value._rawValue = v1;
  result.is_nil = v2;
  return result;
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t OS_dispatch_group.wait(interval:)()
{
  return OS_dispatch_group.wait(interval:)();
}

uint64_t OS_dispatch_group.wait(timeout:)()
{
  return OS_dispatch_group.wait(timeout:)();
}

Swift::Void __swiftcall OS_dispatch_group.wait()()
{
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t static OS_dispatch_queue.Attributes.concurrent.getter()
{
  return static OS_dispatch_queue.Attributes.concurrent.getter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(flags:execute:)()
{
  return OS_dispatch_queue.sync<A>(flags:execute:)();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

Swift::String_optional __swiftcall SecCertificateRef.commonName()()
{
  uint64_t v0 = SecCertificateRef.commonName()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t SecCertificateRef.countryName.getter()
{
  return SecCertificateRef.countryName.getter();
}

uint64_t SecCertificateRef.serialNumber.getter()
{
  return SecCertificateRef.serialNumber.getter();
}

uint64_t SecCertificateRef.expirationDate.getter()
{
  return SecCertificateRef.expirationDate.getter();
}

uint64_t SecCertificateRef.publicKeySHA256()()
{
  return SecCertificateRef.publicKeySHA256()();
}

uint64_t SecCertificateRef.derRepresentation()()
{
  return SecCertificateRef.derRepresentation()();
}

uint64_t static SecCertificateRef.appleExternalRoots.getter()
{
  return static SecCertificateRef.appleExternalRoots.getter();
}

Swift::String_optional __swiftcall SecCertificateRef.organizationalUnit()()
{
  uint64_t v0 = SecCertificateRef.organizationalUnit()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t SecCertificateRef.publicKeyAlgorithm()()
{
  return SecCertificateRef.publicKeyAlgorithm()();
}

uint64_t SecCertificateRef.rawECPublicKeyData()()
{
  return SecCertificateRef.rawECPublicKeyData()();
}

Swift::String_optional __swiftcall SecCertificateRef.base64EncodedString()()
{
  uint64_t v0 = SecCertificateRef.base64EncodedString()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t SecCertificateRef.stateOrProvinceName.getter()
{
  return SecCertificateRef.stateOrProvinceName.getter();
}

Swift::String_optional __swiftcall SecCertificateRef.uid()()
{
  uint64_t v0 = SecCertificateRef.uid()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static SecCertificateRef.make(with:in:)()
{
  return static SecCertificateRef.make(with:in:)();
}

uint64_t SecCertificateRef.hasOID(oid:)()
{
  return SecCertificateRef.hasOID(oid:)();
}

uint64_t SecCertificateRef.keyUsage.getter()
{
  return SecCertificateRef.keyUsage.getter();
}

uint64_t SecCertificateRef.logotype.getter()
{
  return SecCertificateRef.logotype.getter();
}

uint64_t SecCertificateRef.pseudonym.getter()
{
  return SecCertificateRef.pseudonym.getter();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t static OS_dispatch_source.makeSignalSource(signal:queue:)()
{
  return static OS_dispatch_source.makeSignalSource(signal:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_source.suspend()()
{
}

uint64_t DIPFeaturesProtocol.triggerTapToRadar(forContext:title:error:attachmentFilePaths:deleteOnAttach:description:)()
{
  return DIPFeaturesProtocol.triggerTapToRadar(forContext:title:error:attachmentFilePaths:deleteOnAttach:description:)();
}

uint64_t static SecAccessControlRef.fromData(_:)()
{
  return static SecAccessControlRef.fromData(_:)();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return type metadata accessor for NSNotificationCenter.Notifications.Iterator();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications()
{
  return type metadata accessor for NSNotificationCenter.Notifications();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return NSNotificationCenter.notifications(named:object:)();
}

uint64_t OS_dispatch_semaphore.wait(interval:)()
{
  return OS_dispatch_semaphore.wait(interval:)();
}

uint64_t OS_dispatch_semaphore.wait(timeout:)()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t NSManagedObjectContext.performAndWait<A>(_:)()
{
  return NSManagedObjectContext.performAndWait<A>(_:)();
}

uint64_t type metadata accessor for NSManagedObjectContext.ScheduledTaskType()
{
  return type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
}

uint64_t NSManagedObjectContext.fetch<A>(_:)()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t CKRecordKeyValueSetting.subscript.setter()
{
  return CKRecordKeyValueSetting.subscript.setter();
}

uint64_t CKModifyRecordsOperation.modifyRecordsResultBlock.setter()
{
  return CKModifyRecordsOperation.modifyRecordsResultBlock.setter();
}

CKModifyRecordsOperation __swiftcall CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(Swift::OpaquePointer_optional recordsToSave, Swift::OpaquePointer_optional recordIDsToDelete)
{
  return (CKModifyRecordsOperation)CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(recordsToSave.value._rawValue, *(void *)&recordsToSave.is_nil, recordIDsToDelete.value._rawValue, *(void *)&recordIDsToDelete.is_nil);
}

uint64_t CKModifyRecordsOperation.perRecordSaveBlock.setter()
{
  return CKModifyRecordsOperation.perRecordSaveBlock.setter();
}

CKRecordZoneSubscription __swiftcall CKRecordZoneSubscription.init(zoneID:subscriptionID:)(CKRecordZoneID zoneID, Swift::String subscriptionID)
{
  return (CKRecordZoneSubscription)CKRecordZoneSubscription.init(zoneID:subscriptionID:)(zoneID.super.isa, subscriptionID._countAndFlagsBits, subscriptionID._object);
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t CKFetchRecordZonesOperation.perRecordZoneResultBlock.setter()
{
  return CKFetchRecordZonesOperation.perRecordZoneResultBlock.setter();
}

uint64_t CKFetchRecordZonesOperation.fetchRecordZonesResultBlock.setter()
{
  return CKFetchRecordZonesOperation.fetchRecordZonesResultBlock.setter();
}

uint64_t CKModifyRecordZonesOperation.perRecordZoneSaveBlock.setter()
{
  return CKModifyRecordZonesOperation.perRecordZoneSaveBlock.setter();
}

uint64_t CKModifyRecordZonesOperation.perRecordZoneDeleteBlock.setter()
{
  return CKModifyRecordZonesOperation.perRecordZoneDeleteBlock.setter();
}

uint64_t CKModifyRecordZonesOperation.modifyRecordZonesResultBlock.setter()
{
  return CKModifyRecordZonesOperation.modifyRecordZonesResultBlock.setter();
}

uint64_t CKFetchSubscriptionsOperation.fetchSubscriptionsResultBlock.setter()
{
  return CKFetchSubscriptionsOperation.fetchSubscriptionsResultBlock.setter();
}

uint64_t CKFetchSubscriptionsOperation.perSubscriptionResultBlock.setter()
{
  return CKFetchSubscriptionsOperation.perSubscriptionResultBlock.setter();
}

uint64_t CKModifySubscriptionsOperation.modifySubscriptionsResultBlock.setter()
{
  return CKModifySubscriptionsOperation.modifySubscriptionsResultBlock.setter();
}

uint64_t CKModifySubscriptionsOperation.perSubscriptionSaveBlock.setter()
{
  return CKModifySubscriptionsOperation.perSubscriptionSaveBlock.setter();
}

uint64_t CBOR.readableString.getter()
{
  return CBOR.readableString.getter();
}

uint64_t NSSet.makeIterator()()
{
  return NSSet.makeIterator()();
}

uint64_t static NSError.mapFromError(_:domain:mapper:)()
{
  return static NSError.mapFromError(_:domain:mapper:)();
}

CKRecord __swiftcall CKRecord.init(recordType:recordID:)(Swift::String recordType, CKRecordID recordID)
{
  return (CKRecord)CKRecord.init(recordType:recordID:)(recordType._countAndFlagsBits, recordType._object, recordID.super.isa);
}

uint64_t CKRecord.subscript.setter()
{
  return CKRecord.subscript.setter();
}

uint64_t static NSBundle.internalSettings.getter()
{
  return static NSBundle.internalSettings.getter();
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t type metadata accessor for STSReader.StateEvent()
{
  return type metadata accessor for STSReader.StateEvent();
}

uint64_t STSReader.StateChanges.makeAsyncIterator()()
{
  return STSReader.StateChanges.makeAsyncIterator()();
}

uint64_t type metadata accessor for STSReader.StateChanges()
{
  return type metadata accessor for STSReader.StateChanges();
}

uint64_t SecKeyRef.publicKeyIdentifier.getter()
{
  return SecKeyRef.publicKeyIdentifier.getter();
}

uint64_t SecKeyRef.publicKeyData.getter()
{
  return SecKeyRef.publicKeyData.getter();
}

uint64_t type metadata accessor for SecKeyRef.KeyClass()
{
  return type metadata accessor for SecKeyRef.KeyClass();
}

uint64_t SecKeyRef.signSHA256Digest(_:algorithm:)()
{
  return SecKeyRef.signSHA256Digest(_:algorithm:)();
}

uint64_t static SecKeyRef.makeECKey(from:keyClass:)()
{
  return static SecKeyRef.makeECKey(from:keyClass:)();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.compare<A>(_:options:range:locale:)()
{
  return StringProtocol.compare<A>(_:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t ArraySlice.description.getter()
{
  return ArraySlice.description.getter();
}

uint64_t dispatch thunk of SetAlgebra.intersection(_:)()
{
  return dispatch thunk of SetAlgebra.intersection(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts._slowWithCString<A>(_:)()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

uint64_t _StringGuts.foreignErrorCorrectedScalar(startingAt:)()
{
  return _StringGuts.foreignErrorCorrectedScalar(startingAt:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)()
{
  return static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t type metadata accessor for EncodingError()
{
  return type metadata accessor for EncodingError();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _decodeScalar(_:startingAt:)()
{
  return _decodeScalar(_:startingAt:)();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t AsyncMapSequence.base.getter()
{
  return AsyncMapSequence.base.getter();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return AsyncMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return AsyncMapSequence.Iterator.transform.getter();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return AsyncMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return AsyncMapSequence.transform.getter();
}

uint64_t AsyncMapSequence.init(_:transform:)()
{
  return AsyncMapSequence.init(_:transform:)();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter()
{
  return dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)()
{
  return KeyedDecodingContainer.nestedUnkeyedContainer(forKey:)();
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t KeyedDecodingContainer.contains(_:)()
{
  return KeyedDecodingContainer.contains(_:)();
}

uint64_t type metadata accessor for KeyedDecodingContainer()
{
  return type metadata accessor for KeyedDecodingContainer();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t type metadata accessor for KeyedEncodingContainer()
{
  return type metadata accessor for KeyedEncodingContainer();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent<A>(_:)()
{
  return dispatch thunk of UnkeyedDecodingContainer.decodeIfPresent<A>(_:)();
}

uint64_t dispatch thunk of UnkeyedDecodingContainer.count.getter()
{
  return dispatch thunk of UnkeyedDecodingContainer.count.getter();
}

uint64_t dispatch thunk of UnkeyedDecodingContainer.decode<A>(_:)()
{
  return dispatch thunk of UnkeyedDecodingContainer.decode<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode(_:)()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)()
{
  return dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
}

uint64_t dispatch thunk of SingleValueEncodingContainer.encode(_:)()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t _findStringSwitchCaseWithCache(cases:string:cache:)()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error.dipErrorCode.getter()
{
  return Error.dipErrorCode.getter();
}

uint64_t dispatch thunk of Error._code.getter()
{
  return dispatch thunk of Error._code.getter();
}

uint64_t dispatch thunk of Error._domain.getter()
{
  return dispatch thunk of Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt16 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t dispatch thunk of Decoder.singleValueContainer()()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.singleValueContainer()()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return _BYSetupAssistantNeedsToRun();
}

uint64_t BiomeLibrary()
{
  return _BiomeLibrary();
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return _CFErrorCopyDescription(err);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return _CFUserNotificationCreateRunLoopSource(allocator, userNotification, callout, order);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return _CGColorSpaceCreateWithName(name);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithData(data, options);
}

CGImageSourceStatus CGImageSourceGetStatus(CGImageSourceRef isrc)
{
  return _CGImageSourceGetStatus(isrc);
}

uint64_t DIPSecCertificateCopySubjectPublicKeyInfoSHA256Digest()
{
  return _DIPSecCertificateCopySubjectPublicKeyInfoSHA256Digest();
}

uint64_t DIPSecKeyCopyAttestationKey()
{
  return _DIPSecKeyCopyAttestationKey();
}

uint64_t DigestSha256()
{
  return _DigestSha256();
}

uint64_t GSMainScreenScaleFactor()
{
  return _GSMainScreenScaleFactor();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t NPKIDVRemoteDeviceServiceEventsFromStringsArray()
{
  return _NPKIDVRemoteDeviceServiceEventsFromStringsArray();
}

uint64_t PKPassKitCoreBundle()
{
  return _PKPassKitCoreBundle();
}

uint64_t SFAuthenticationErrorToString()
{
  return _SFAuthenticationErrorToString();
}

SecAccessControlRef SecAccessControlCreateWithFlags(CFAllocatorRef allocator, CFTypeRef protection, SecAccessControlCreateFlags flags, CFErrorRef *error)
{
  return _SecAccessControlCreateWithFlags(allocator, protection, flags, error);
}

uint64_t SecAccessControlSetConstraints()
{
  return _SecAccessControlSetConstraints();
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return _SecCertificateCopyData(certificate);
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return _SecCertificateCreateWithData(allocator, data);
}

uint64_t SecCertificateIsValid()
{
  return _SecCertificateIsValid();
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

CFDataRef SecKeyCopyExternalRepresentation(SecKeyRef key, CFErrorRef *error)
{
  return _SecKeyCopyExternalRepresentation(key, error);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return _SecKeyCopyPublicKey(key);
}

uint64_t SecKeyCreateAttestation()
{
  return _SecKeyCreateAttestation();
}

uint64_t SecKeyCreateDecryptedDataWithParameters()
{
  return _SecKeyCreateDecryptedDataWithParameters();
}

uint64_t SecKeySetParameter()
{
  return _SecKeySetParameter();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

CFArrayRef SecTrustCopyCertificateChain(SecTrustRef trust)
{
  return _SecTrustCopyCertificateChain(trust);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return _SecTrustEvaluateWithError(trust, error);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

{
}

{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return __swift_stdlib_strtod_clocale();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return __swift_stdlib_strtof_clocale();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

uint64_t getSEABASSOIDS()
{
  return _getSEABASSOIDS();
}

uint64_t hasSEService()
{
  return _hasSEService();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t rootless_mkdir_datavault()
{
  return _rootless_mkdir_datavault();
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return _sqlite3_bind_double(a1, a2, a3);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return _sqlite3_bind_int(a1, a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return _sqlite3_bind_null(a1, a2);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return _sqlite3_close_v2(a1);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_double(a1, iCol);
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int(a1, iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

int sqlite3_errcode(sqlite3 *db)
{
  return _sqlite3_errcode(db);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return _sqlite3_errmsg(a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return _sqlite3_exec(a1, sql, callback, a4, errmsg);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v3(sqlite3 *db, const char *zSql, int nByte, unsigned int prepFlags, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v3(db, zSql, nByte, prepFlags, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

uint64_t stringsArrayFromIdentityProofingOptions()
{
  return _stringsArrayFromIdentityProofingOptions();
}

uint64_t stringsArrayFromNPKIDVRemoteDeviceServiceEvents()
{
  return _stringsArrayFromNPKIDVRemoteDeviceServiceEvents();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocBox()
{
  return _swift_deallocBox();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_deallocate()
{
  return _swift_defaultActor_deallocate();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return _swift_dynamicCastUnknownClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return _xpc_array_get_count(xarray);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return _xpc_array_get_string(xarray, index);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_get_array(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_array(xdict, key);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_BOOL(xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return _xpc_dictionary_get_data(xdict, key, length);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
}

id objc_msgSend_BFzukpKGO3cStNGp_(void *a1, const char *a2, ...)
{
  return [a1 BFzukpKGO3cStNGp:];
}

id objc_msgSend_BGiN5h2SLMRO6B9R(void *a1, const char *a2, ...)
{
  return _[a1 BGiN5h2SLMRO6B9R];
}

id objc_msgSend_HkbEJeZjAQnItubK(void *a1, const char *a2, ...)
{
  return _[a1 HkbEJeZjAQnItubK];
}

id objc_msgSend_S08uY31jbmOEDLrH(void *a1, const char *a2, ...)
{
  return _[a1 S08uY31jbmOEDLrH];
}

id objc_msgSend_SOUWv5VjPwXYslMm_noUfOiGjp1iQmKZX_pPGyXmlDbN3mzzHm_iSOZt67ioKsVcqQZ_hjCrdFOLMJN0Cc5Q_lE40aye8U2u533Ka_JRuZv6Feh9qwrGmN_Wn0aIR2B54NCtGQc_B3l3lS18BITy5E4L_UywAszL6AB8Y6LTJ_uNao9X8A82jVmQkK_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "SOUWv5VjPwXYslMm:noUfOiGjp1iQmKZX:pPGyXmlDbN3mzzHm:iSOZt67ioKsVcqQZ:hjCrdFOLMJN0Cc5Q:lE40aye8U2u533Ka:JRuZv6Feh9qwrGmN:Wn0aIR2B54NCtGQc:B3l3lS18BITy5E4L:UywAszL6AB8Y6LTJ:uNao9X8A82jVmQkK:completion:");
}

id objc_msgSend_TbX4HHO0pTPaerrJ(void *a1, const char *a2, ...)
{
  return _[a1 TbX4HHO0pTPaerrJ];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_VE7BAlWGDSKrO5xc_hostChallenge_challengeResponse_seid_nonce_HY6FXG20397zwmVg_(void *a1, const char *a2, ...)
{
  return [a1 VE7BAlWGDSKrO5xc:hostChallenge:challengeResponse:seid:nonce:HY6FXG20397zwmVg:];
}

id objc_msgSend_Z8aAH7stm0EYhyxg_xz5EHXEN4FjlhJbi_uhVTXyAfCFn7u0Ue_EQUjQp7JcQbqcPcD_A5wDLa5TFdFZlz3A_TJKMyOe6zn5PdGIr_eCqgGM0WcnHOslnr_eCszfxdv3kUXvhgV_uWp4aZpP2vLhc04Q_QZYtNpvp0hKd248p_oCwPYmtRv8s31KUH_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "Z8aAH7stm0EYhyxg:xz5EHXEN4FjlhJbi:uhVTXyAfCFn7u0Ue:EQUjQp7JcQbqcPcD:A5wDLa5TFdFZlz3A:TJKMyOe6zn5PdGIr:eCqgGM0WcnHOslnr:eCszfxdv3kUXvhgV:uWp4aZpP2vLhc04Q:QZYtNpvp0hKd248p:oCwPYmtRv8s31KUH:completion:");
}

id objc_msgSend_ZfE6lVphNUVrZcKx_completion_(void *a1, const char *a2, ...)
{
  return [a1 ZfE6lVphNUVrZcKx:completion:];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_available(void *a1, const char *a2, ...)
{
  return _[a1 available];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_challengeResponse(void *a1, const char *a2, ...)
{
  return _[a1 challengeResponse];
}

id objc_msgSend_configureManager(void *a1, const char *a2, ...)
{
  return _[a1 configureManager];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_f9MGfLOgnHPuKTrU_HY6FXG20397zwmVg_(void *a1, const char *a2, ...)
{
  return [a1 f9MGfLOgnHPuKTrU:HY6FXG20397zwmVg:];
}

id objc_msgSend_hostChallenge(void *a1, const char *a2, ...)
{
  return _[a1 hostChallenge];
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 initWithBytes:length:];
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:];
}

id objc_msgSend_initWithMachServiceName_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithMachServiceName:x0 options:x1];
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceName:];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return [a1 interfaceWithProtocol:];
}

id objc_msgSend_k0p7Rchr49btq6wB_HY6FXG20397zwmVg_(void *a1, const char *a2, ...)
{
  return [a1 k0p7Rchr49btq6wB:HY6FXG20397zwmVg:];
}

id objc_msgSend_k4eQYhyzyebbQqys_(void *a1, const char *a2, ...)
{
  return [a1 k4eQYhyzyebbQqys:];
}

id objc_msgSend_l7UrdRfCzeduYqtA_(void *a1, const char *a2, ...)
{
  return [a1 l7UrdRfCzeduYqtA:];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:x0 value:x1 table:x2];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_powerState(void *a1, const char *a2, ...)
{
  return _[a1 powerState];
}

id objc_msgSend_pruneWithPredicateBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pruneWithPredicateBlock:");
}

id objc_msgSend_rU1LRx5aI44CETG8(void *a1, const char *a2, ...)
{
  return _[a1 rU1LRx5aI44CETG8];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 remoteObjectProxyWithErrorHandler:];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_seid(void *a1, const char *a2, ...)
{
  return _[a1 seid];
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptionHandler:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteObjectInterface:];
}

id objc_msgSend_setSharedInstanceQueue_(void *a1, const char *a2, ...)
{
  return [a1 setSharedInstanceQueue:];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_toDictionary(void *a1, const char *a2, ...)
{
  return _[a1 toDictionary];
}

id objc_msgSend_uTtwJoGUgL3N0GVz(void *a1, const char *a2, ...)
{
  return _[a1 uTtwJoGUgL3N0GVz];
}

id objc_msgSend_vffg4lwI2HftPvpO_(void *a1, const char *a2, ...)
{
  return [a1 vffg4lwI2HftPvpO:];
}

id objc_msgSend_xs00laTiKIpDUzDP_(void *a1, const char *a2, ...)
{
  return [a1 xs00laTiKIpDUzDP:];
}

id objc_msgSend_yNHDWo3TCV(void *a1, const char *a2, ...)
{
  return _[a1 yNHDWo3TCV];
}

id objc_msgSend_zeXRCfLmM5cdkEtz(void *a1, const char *a2, ...)
{
  return _[a1 zeXRCfLmM5cdkEtz];
}